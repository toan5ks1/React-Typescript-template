var m=Object.defineProperty,d=Object.defineProperties;var y=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,x=Object.prototype.propertyIsEnumerable;var l=(e,t,s)=>t in e?m(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,f=(e,t)=>{for(var s in t||(t={}))p.call(t,s)&&l(e,s,t[s]);if(i)for(var s of i(t))x.call(t,s)&&l(e,s,t[s]);return e},u=(e,t)=>d(e,y(t));var h=(e,t)=>{var s={};for(var r in e)p.call(e,r)&&t.indexOf(r)<0&&(s[r]=e[r]);if(e!=null&&i)for(var r of i(e))t.indexOf(r)<0&&x.call(e,r)&&(s[r]=e[r]);return s};import{r as c,R as g,aK as C}from"./index.7daee9ef.js";function T(e){const{textContent:t}=e,[s,r]=c.exports.useState(!1),n=c.exports.useRef(null);return c.exports.useEffect(()=>{if(n.current){const o=n.current.scrollHeight,a=n.current.clientHeight;r(o!==a)}},[t]),{ref:n,isClamped:s}}const H=e=>{const a=e,{children:t,maxLines:s}=a,r=h(a,["children","maxLines"]),{ref:n,isClamped:o}=T({textContent:t});return g.createElement(C,u(f({},r),{id:"TypographyMaxLines__TypographyBase",title:o?t:"",sx:{display:"-webkit-box",WebkitLineClamp:e.maxLines,WebkitBoxOrient:"vertical",overflow:"hidden"},ref:n}),t)};export{H as T};
