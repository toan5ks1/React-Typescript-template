schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""
expression to compare columns of type Boolean. All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

"""
expression to compare columns of type Int. All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""
expression to compare columns of type String. All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String
  _ilike: String
  _in: [String!]
  _is_null: Boolean
  _like: String
  _lt: String
  _lte: String
  _neq: String
  _nilike: String
  _nin: [String!]
  _nlike: String
  _nsimilar: String
  _similar: String
}

scalar _text

"""
expression to compare columns of type _text. All fields are combined with logical 'AND'.
"""
input _text_comparison_exp {
  _eq: _text
  _gt: _text
  _gte: _text
  _in: [_text!]
  _is_null: Boolean
  _lt: _text
  _lte: _text
  _neq: _text
  _nin: [_text!]
}

"""
columns and relationships of "bill_item"
"""
type bill_item {
  adjustment_price: numeric
  bill_item_sequence_number: Int!
  bill_type: String!
  billing_approval_status: String
  billing_date: timestamptz
  billing_from: timestamptz
  billing_item_description(
    """JSON select path"""
    path: String
  ): jsonb
  billing_ratio_denominator: Int
  billing_ratio_numerator: Int
  billing_schedule_period_id: String
  billing_status: String!
  billing_to: timestamptz
  created_at: timestamptz!
  discount_amount: numeric
  discount_amount_type: String
  discount_amount_value: numeric
  discount_id: String
  final_price: numeric!
  is_latest_bill_item: Boolean
  location_id: String!
  location_name: String
  old_price: numeric
  order_id: String!
  previous_bill_item_sequence_number: Int
  previous_bill_item_status: String
  price: numeric
  product_description: String!
  product_id: String
  product_pricing: Int
  resource_path: String
  student_id: String!
  student_product_id: String
  tax_amount: numeric
  tax_category: String
  tax_id: String
  tax_percentage: Int
  updated_at: timestamptz!
}

"""
aggregated selection of "bill_item"
"""
type bill_item_aggregate {
  aggregate: bill_item_aggregate_fields
  nodes: [bill_item!]!
}

"""
aggregate fields of "bill_item"
"""
type bill_item_aggregate_fields {
  avg: bill_item_avg_fields
  count(columns: [bill_item_select_column!], distinct: Boolean): Int
  max: bill_item_max_fields
  min: bill_item_min_fields
  stddev: bill_item_stddev_fields
  stddev_pop: bill_item_stddev_pop_fields
  stddev_samp: bill_item_stddev_samp_fields
  sum: bill_item_sum_fields
  var_pop: bill_item_var_pop_fields
  var_samp: bill_item_var_samp_fields
  variance: bill_item_variance_fields
}

"""
order by aggregate values of table "bill_item"
"""
input bill_item_aggregate_order_by {
  avg: bill_item_avg_order_by
  count: order_by
  max: bill_item_max_order_by
  min: bill_item_min_order_by
  stddev: bill_item_stddev_order_by
  stddev_pop: bill_item_stddev_pop_order_by
  stddev_samp: bill_item_stddev_samp_order_by
  sum: bill_item_sum_order_by
  var_pop: bill_item_var_pop_order_by
  var_samp: bill_item_var_samp_order_by
  variance: bill_item_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input bill_item_append_input {
  billing_item_description: jsonb
}

"""
input type for inserting array relation for remote table "bill_item"
"""
input bill_item_arr_rel_insert_input {
  data: [bill_item_insert_input!]!
  on_conflict: bill_item_on_conflict
}

"""aggregate avg on columns"""
type bill_item_avg_fields {
  adjustment_price: Float
  bill_item_sequence_number: Float
  billing_ratio_denominator: Float
  billing_ratio_numerator: Float
  discount_amount: Float
  discount_amount_value: Float
  final_price: Float
  old_price: Float
  previous_bill_item_sequence_number: Float
  price: Float
  product_pricing: Float
  tax_amount: Float
  tax_percentage: Float
}

"""
order by avg() on columns of table "bill_item"
"""
input bill_item_avg_order_by {
  adjustment_price: order_by
  bill_item_sequence_number: order_by
  billing_ratio_denominator: order_by
  billing_ratio_numerator: order_by
  discount_amount: order_by
  discount_amount_value: order_by
  final_price: order_by
  old_price: order_by
  previous_bill_item_sequence_number: order_by
  price: order_by
  product_pricing: order_by
  tax_amount: order_by
  tax_percentage: order_by
}

"""
Boolean expression to filter rows from the table "bill_item". All fields are combined with a logical 'AND'.
"""
input bill_item_bool_exp {
  _and: [bill_item_bool_exp]
  _not: bill_item_bool_exp
  _or: [bill_item_bool_exp]
  adjustment_price: numeric_comparison_exp
  bill_item_sequence_number: Int_comparison_exp
  bill_type: String_comparison_exp
  billing_approval_status: String_comparison_exp
  billing_date: timestamptz_comparison_exp
  billing_from: timestamptz_comparison_exp
  billing_item_description: jsonb_comparison_exp
  billing_ratio_denominator: Int_comparison_exp
  billing_ratio_numerator: Int_comparison_exp
  billing_schedule_period_id: String_comparison_exp
  billing_status: String_comparison_exp
  billing_to: timestamptz_comparison_exp
  created_at: timestamptz_comparison_exp
  discount_amount: numeric_comparison_exp
  discount_amount_type: String_comparison_exp
  discount_amount_value: numeric_comparison_exp
  discount_id: String_comparison_exp
  final_price: numeric_comparison_exp
  is_latest_bill_item: Boolean_comparison_exp
  location_id: String_comparison_exp
  location_name: String_comparison_exp
  old_price: numeric_comparison_exp
  order_id: String_comparison_exp
  previous_bill_item_sequence_number: Int_comparison_exp
  previous_bill_item_status: String_comparison_exp
  price: numeric_comparison_exp
  product_description: String_comparison_exp
  product_id: String_comparison_exp
  product_pricing: Int_comparison_exp
  resource_path: String_comparison_exp
  student_id: String_comparison_exp
  student_product_id: String_comparison_exp
  tax_amount: numeric_comparison_exp
  tax_category: String_comparison_exp
  tax_id: String_comparison_exp
  tax_percentage: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "bill_item"
"""
enum bill_item_constraint {
  """unique or primary key constraint"""
  bill_item_order_bill_item_sequence_number_pk

  """unique or primary key constraint"""
  bill_item_sequence_number_resource_path_unique
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input bill_item_delete_at_path_input {
  billing_item_description: [String]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input bill_item_delete_elem_input {
  billing_item_description: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input bill_item_delete_key_input {
  billing_item_description: String
}

"""
input type for incrementing integer column in table "bill_item"
"""
input bill_item_inc_input {
  adjustment_price: numeric
  bill_item_sequence_number: Int
  billing_ratio_denominator: Int
  billing_ratio_numerator: Int
  discount_amount: numeric
  discount_amount_value: numeric
  final_price: numeric
  old_price: numeric
  previous_bill_item_sequence_number: Int
  price: numeric
  product_pricing: Int
  tax_amount: numeric
  tax_percentage: Int
}

"""
input type for inserting data into table "bill_item"
"""
input bill_item_insert_input {
  adjustment_price: numeric
  bill_item_sequence_number: Int
  bill_type: String
  billing_approval_status: String
  billing_date: timestamptz
  billing_from: timestamptz
  billing_item_description: jsonb
  billing_ratio_denominator: Int
  billing_ratio_numerator: Int
  billing_schedule_period_id: String
  billing_status: String
  billing_to: timestamptz
  created_at: timestamptz
  discount_amount: numeric
  discount_amount_type: String
  discount_amount_value: numeric
  discount_id: String
  final_price: numeric
  is_latest_bill_item: Boolean
  location_id: String
  location_name: String
  old_price: numeric
  order_id: String
  previous_bill_item_sequence_number: Int
  previous_bill_item_status: String
  price: numeric
  product_description: String
  product_id: String
  product_pricing: Int
  resource_path: String
  student_id: String
  student_product_id: String
  tax_amount: numeric
  tax_category: String
  tax_id: String
  tax_percentage: Int
  updated_at: timestamptz
}

"""aggregate max on columns"""
type bill_item_max_fields {
  adjustment_price: numeric
  bill_item_sequence_number: Int
  bill_type: String
  billing_approval_status: String
  billing_date: timestamptz
  billing_from: timestamptz
  billing_ratio_denominator: Int
  billing_ratio_numerator: Int
  billing_schedule_period_id: String
  billing_status: String
  billing_to: timestamptz
  created_at: timestamptz
  discount_amount: numeric
  discount_amount_type: String
  discount_amount_value: numeric
  discount_id: String
  final_price: numeric
  location_id: String
  location_name: String
  old_price: numeric
  order_id: String
  previous_bill_item_sequence_number: Int
  previous_bill_item_status: String
  price: numeric
  product_description: String
  product_id: String
  product_pricing: Int
  resource_path: String
  student_id: String
  student_product_id: String
  tax_amount: numeric
  tax_category: String
  tax_id: String
  tax_percentage: Int
  updated_at: timestamptz
}

"""
order by max() on columns of table "bill_item"
"""
input bill_item_max_order_by {
  adjustment_price: order_by
  bill_item_sequence_number: order_by
  bill_type: order_by
  billing_approval_status: order_by
  billing_date: order_by
  billing_from: order_by
  billing_ratio_denominator: order_by
  billing_ratio_numerator: order_by
  billing_schedule_period_id: order_by
  billing_status: order_by
  billing_to: order_by
  created_at: order_by
  discount_amount: order_by
  discount_amount_type: order_by
  discount_amount_value: order_by
  discount_id: order_by
  final_price: order_by
  location_id: order_by
  location_name: order_by
  old_price: order_by
  order_id: order_by
  previous_bill_item_sequence_number: order_by
  previous_bill_item_status: order_by
  price: order_by
  product_description: order_by
  product_id: order_by
  product_pricing: order_by
  resource_path: order_by
  student_id: order_by
  student_product_id: order_by
  tax_amount: order_by
  tax_category: order_by
  tax_id: order_by
  tax_percentage: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type bill_item_min_fields {
  adjustment_price: numeric
  bill_item_sequence_number: Int
  bill_type: String
  billing_approval_status: String
  billing_date: timestamptz
  billing_from: timestamptz
  billing_ratio_denominator: Int
  billing_ratio_numerator: Int
  billing_schedule_period_id: String
  billing_status: String
  billing_to: timestamptz
  created_at: timestamptz
  discount_amount: numeric
  discount_amount_type: String
  discount_amount_value: numeric
  discount_id: String
  final_price: numeric
  location_id: String
  location_name: String
  old_price: numeric
  order_id: String
  previous_bill_item_sequence_number: Int
  previous_bill_item_status: String
  price: numeric
  product_description: String
  product_id: String
  product_pricing: Int
  resource_path: String
  student_id: String
  student_product_id: String
  tax_amount: numeric
  tax_category: String
  tax_id: String
  tax_percentage: Int
  updated_at: timestamptz
}

"""
order by min() on columns of table "bill_item"
"""
input bill_item_min_order_by {
  adjustment_price: order_by
  bill_item_sequence_number: order_by
  bill_type: order_by
  billing_approval_status: order_by
  billing_date: order_by
  billing_from: order_by
  billing_ratio_denominator: order_by
  billing_ratio_numerator: order_by
  billing_schedule_period_id: order_by
  billing_status: order_by
  billing_to: order_by
  created_at: order_by
  discount_amount: order_by
  discount_amount_type: order_by
  discount_amount_value: order_by
  discount_id: order_by
  final_price: order_by
  location_id: order_by
  location_name: order_by
  old_price: order_by
  order_id: order_by
  previous_bill_item_sequence_number: order_by
  previous_bill_item_status: order_by
  price: order_by
  product_description: order_by
  product_id: order_by
  product_pricing: order_by
  resource_path: order_by
  student_id: order_by
  student_product_id: order_by
  tax_amount: order_by
  tax_category: order_by
  tax_id: order_by
  tax_percentage: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "bill_item"
"""
type bill_item_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [bill_item!]!
}

"""
input type for inserting object relation for remote table "bill_item"
"""
input bill_item_obj_rel_insert_input {
  data: bill_item_insert_input!
  on_conflict: bill_item_on_conflict
}

"""
on conflict condition type for table "bill_item"
"""
input bill_item_on_conflict {
  constraint: bill_item_constraint!
  update_columns: [bill_item_update_column!]!
  where: bill_item_bool_exp
}

"""
ordering options when selecting data from "bill_item"
"""
input bill_item_order_by {
  adjustment_price: order_by
  bill_item_sequence_number: order_by
  bill_type: order_by
  billing_approval_status: order_by
  billing_date: order_by
  billing_from: order_by
  billing_item_description: order_by
  billing_ratio_denominator: order_by
  billing_ratio_numerator: order_by
  billing_schedule_period_id: order_by
  billing_status: order_by
  billing_to: order_by
  created_at: order_by
  discount_amount: order_by
  discount_amount_type: order_by
  discount_amount_value: order_by
  discount_id: order_by
  final_price: order_by
  is_latest_bill_item: order_by
  location_id: order_by
  location_name: order_by
  old_price: order_by
  order_id: order_by
  previous_bill_item_sequence_number: order_by
  previous_bill_item_status: order_by
  price: order_by
  product_description: order_by
  product_id: order_by
  product_pricing: order_by
  resource_path: order_by
  student_id: order_by
  student_product_id: order_by
  tax_amount: order_by
  tax_category: order_by
  tax_id: order_by
  tax_percentage: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "bill_item"
"""
input bill_item_pk_columns_input {
  bill_item_sequence_number: Int!
  order_id: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input bill_item_prepend_input {
  billing_item_description: jsonb
}

"""
select columns of table "bill_item"
"""
enum bill_item_select_column {
  """column name"""
  adjustment_price

  """column name"""
  bill_item_sequence_number

  """column name"""
  bill_type

  """column name"""
  billing_approval_status

  """column name"""
  billing_date

  """column name"""
  billing_from

  """column name"""
  billing_item_description

  """column name"""
  billing_ratio_denominator

  """column name"""
  billing_ratio_numerator

  """column name"""
  billing_schedule_period_id

  """column name"""
  billing_status

  """column name"""
  billing_to

  """column name"""
  created_at

  """column name"""
  discount_amount

  """column name"""
  discount_amount_type

  """column name"""
  discount_amount_value

  """column name"""
  discount_id

  """column name"""
  final_price

  """column name"""
  is_latest_bill_item

  """column name"""
  location_id

  """column name"""
  location_name

  """column name"""
  old_price

  """column name"""
  order_id

  """column name"""
  previous_bill_item_sequence_number

  """column name"""
  previous_bill_item_status

  """column name"""
  price

  """column name"""
  product_description

  """column name"""
  product_id

  """column name"""
  product_pricing

  """column name"""
  resource_path

  """column name"""
  student_id

  """column name"""
  student_product_id

  """column name"""
  tax_amount

  """column name"""
  tax_category

  """column name"""
  tax_id

  """column name"""
  tax_percentage

  """column name"""
  updated_at
}

"""
input type for updating data in table "bill_item"
"""
input bill_item_set_input {
  adjustment_price: numeric
  bill_item_sequence_number: Int
  bill_type: String
  billing_approval_status: String
  billing_date: timestamptz
  billing_from: timestamptz
  billing_item_description: jsonb
  billing_ratio_denominator: Int
  billing_ratio_numerator: Int
  billing_schedule_period_id: String
  billing_status: String
  billing_to: timestamptz
  created_at: timestamptz
  discount_amount: numeric
  discount_amount_type: String
  discount_amount_value: numeric
  discount_id: String
  final_price: numeric
  is_latest_bill_item: Boolean
  location_id: String
  location_name: String
  old_price: numeric
  order_id: String
  previous_bill_item_sequence_number: Int
  previous_bill_item_status: String
  price: numeric
  product_description: String
  product_id: String
  product_pricing: Int
  resource_path: String
  student_id: String
  student_product_id: String
  tax_amount: numeric
  tax_category: String
  tax_id: String
  tax_percentage: Int
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type bill_item_stddev_fields {
  adjustment_price: Float
  bill_item_sequence_number: Float
  billing_ratio_denominator: Float
  billing_ratio_numerator: Float
  discount_amount: Float
  discount_amount_value: Float
  final_price: Float
  old_price: Float
  previous_bill_item_sequence_number: Float
  price: Float
  product_pricing: Float
  tax_amount: Float
  tax_percentage: Float
}

"""
order by stddev() on columns of table "bill_item"
"""
input bill_item_stddev_order_by {
  adjustment_price: order_by
  bill_item_sequence_number: order_by
  billing_ratio_denominator: order_by
  billing_ratio_numerator: order_by
  discount_amount: order_by
  discount_amount_value: order_by
  final_price: order_by
  old_price: order_by
  previous_bill_item_sequence_number: order_by
  price: order_by
  product_pricing: order_by
  tax_amount: order_by
  tax_percentage: order_by
}

"""aggregate stddev_pop on columns"""
type bill_item_stddev_pop_fields {
  adjustment_price: Float
  bill_item_sequence_number: Float
  billing_ratio_denominator: Float
  billing_ratio_numerator: Float
  discount_amount: Float
  discount_amount_value: Float
  final_price: Float
  old_price: Float
  previous_bill_item_sequence_number: Float
  price: Float
  product_pricing: Float
  tax_amount: Float
  tax_percentage: Float
}

"""
order by stddev_pop() on columns of table "bill_item"
"""
input bill_item_stddev_pop_order_by {
  adjustment_price: order_by
  bill_item_sequence_number: order_by
  billing_ratio_denominator: order_by
  billing_ratio_numerator: order_by
  discount_amount: order_by
  discount_amount_value: order_by
  final_price: order_by
  old_price: order_by
  previous_bill_item_sequence_number: order_by
  price: order_by
  product_pricing: order_by
  tax_amount: order_by
  tax_percentage: order_by
}

"""aggregate stddev_samp on columns"""
type bill_item_stddev_samp_fields {
  adjustment_price: Float
  bill_item_sequence_number: Float
  billing_ratio_denominator: Float
  billing_ratio_numerator: Float
  discount_amount: Float
  discount_amount_value: Float
  final_price: Float
  old_price: Float
  previous_bill_item_sequence_number: Float
  price: Float
  product_pricing: Float
  tax_amount: Float
  tax_percentage: Float
}

"""
order by stddev_samp() on columns of table "bill_item"
"""
input bill_item_stddev_samp_order_by {
  adjustment_price: order_by
  bill_item_sequence_number: order_by
  billing_ratio_denominator: order_by
  billing_ratio_numerator: order_by
  discount_amount: order_by
  discount_amount_value: order_by
  final_price: order_by
  old_price: order_by
  previous_bill_item_sequence_number: order_by
  price: order_by
  product_pricing: order_by
  tax_amount: order_by
  tax_percentage: order_by
}

"""aggregate sum on columns"""
type bill_item_sum_fields {
  adjustment_price: numeric
  bill_item_sequence_number: Int
  billing_ratio_denominator: Int
  billing_ratio_numerator: Int
  discount_amount: numeric
  discount_amount_value: numeric
  final_price: numeric
  old_price: numeric
  previous_bill_item_sequence_number: Int
  price: numeric
  product_pricing: Int
  tax_amount: numeric
  tax_percentage: Int
}

"""
order by sum() on columns of table "bill_item"
"""
input bill_item_sum_order_by {
  adjustment_price: order_by
  bill_item_sequence_number: order_by
  billing_ratio_denominator: order_by
  billing_ratio_numerator: order_by
  discount_amount: order_by
  discount_amount_value: order_by
  final_price: order_by
  old_price: order_by
  previous_bill_item_sequence_number: order_by
  price: order_by
  product_pricing: order_by
  tax_amount: order_by
  tax_percentage: order_by
}

"""
update columns of table "bill_item"
"""
enum bill_item_update_column {
  """column name"""
  adjustment_price

  """column name"""
  bill_item_sequence_number

  """column name"""
  bill_type

  """column name"""
  billing_approval_status

  """column name"""
  billing_date

  """column name"""
  billing_from

  """column name"""
  billing_item_description

  """column name"""
  billing_ratio_denominator

  """column name"""
  billing_ratio_numerator

  """column name"""
  billing_schedule_period_id

  """column name"""
  billing_status

  """column name"""
  billing_to

  """column name"""
  created_at

  """column name"""
  discount_amount

  """column name"""
  discount_amount_type

  """column name"""
  discount_amount_value

  """column name"""
  discount_id

  """column name"""
  final_price

  """column name"""
  is_latest_bill_item

  """column name"""
  location_id

  """column name"""
  location_name

  """column name"""
  old_price

  """column name"""
  order_id

  """column name"""
  previous_bill_item_sequence_number

  """column name"""
  previous_bill_item_status

  """column name"""
  price

  """column name"""
  product_description

  """column name"""
  product_id

  """column name"""
  product_pricing

  """column name"""
  resource_path

  """column name"""
  student_id

  """column name"""
  student_product_id

  """column name"""
  tax_amount

  """column name"""
  tax_category

  """column name"""
  tax_id

  """column name"""
  tax_percentage

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type bill_item_var_pop_fields {
  adjustment_price: Float
  bill_item_sequence_number: Float
  billing_ratio_denominator: Float
  billing_ratio_numerator: Float
  discount_amount: Float
  discount_amount_value: Float
  final_price: Float
  old_price: Float
  previous_bill_item_sequence_number: Float
  price: Float
  product_pricing: Float
  tax_amount: Float
  tax_percentage: Float
}

"""
order by var_pop() on columns of table "bill_item"
"""
input bill_item_var_pop_order_by {
  adjustment_price: order_by
  bill_item_sequence_number: order_by
  billing_ratio_denominator: order_by
  billing_ratio_numerator: order_by
  discount_amount: order_by
  discount_amount_value: order_by
  final_price: order_by
  old_price: order_by
  previous_bill_item_sequence_number: order_by
  price: order_by
  product_pricing: order_by
  tax_amount: order_by
  tax_percentage: order_by
}

"""aggregate var_samp on columns"""
type bill_item_var_samp_fields {
  adjustment_price: Float
  bill_item_sequence_number: Float
  billing_ratio_denominator: Float
  billing_ratio_numerator: Float
  discount_amount: Float
  discount_amount_value: Float
  final_price: Float
  old_price: Float
  previous_bill_item_sequence_number: Float
  price: Float
  product_pricing: Float
  tax_amount: Float
  tax_percentage: Float
}

"""
order by var_samp() on columns of table "bill_item"
"""
input bill_item_var_samp_order_by {
  adjustment_price: order_by
  bill_item_sequence_number: order_by
  billing_ratio_denominator: order_by
  billing_ratio_numerator: order_by
  discount_amount: order_by
  discount_amount_value: order_by
  final_price: order_by
  old_price: order_by
  previous_bill_item_sequence_number: order_by
  price: order_by
  product_pricing: order_by
  tax_amount: order_by
  tax_percentage: order_by
}

"""aggregate variance on columns"""
type bill_item_variance_fields {
  adjustment_price: Float
  bill_item_sequence_number: Float
  billing_ratio_denominator: Float
  billing_ratio_numerator: Float
  discount_amount: Float
  discount_amount_value: Float
  final_price: Float
  old_price: Float
  previous_bill_item_sequence_number: Float
  price: Float
  product_pricing: Float
  tax_amount: Float
  tax_percentage: Float
}

"""
order by variance() on columns of table "bill_item"
"""
input bill_item_variance_order_by {
  adjustment_price: order_by
  bill_item_sequence_number: order_by
  billing_ratio_denominator: order_by
  billing_ratio_numerator: order_by
  discount_amount: order_by
  discount_amount_value: order_by
  final_price: order_by
  old_price: order_by
  previous_bill_item_sequence_number: order_by
  price: order_by
  product_pricing: order_by
  tax_amount: order_by
  tax_percentage: order_by
}

"""
columns and relationships of "billing_ratio"
"""
type billing_ratio {
  billing_ratio_denominator: Int!
  billing_ratio_id: String!
  billing_ratio_numerator: Int!

  """An object relationship"""
  billing_schedule_period: billing_schedule_period!
  billing_schedule_period_id: String!
  created_at: timestamptz!
  end_date: timestamptz!
  is_archived: Boolean!
  resource_path: String
  start_date: timestamptz!
  updated_at: timestamptz!
}

"""
aggregated selection of "billing_ratio"
"""
type billing_ratio_aggregate {
  aggregate: billing_ratio_aggregate_fields
  nodes: [billing_ratio!]!
}

"""
aggregate fields of "billing_ratio"
"""
type billing_ratio_aggregate_fields {
  avg: billing_ratio_avg_fields
  count(columns: [billing_ratio_select_column!], distinct: Boolean): Int
  max: billing_ratio_max_fields
  min: billing_ratio_min_fields
  stddev: billing_ratio_stddev_fields
  stddev_pop: billing_ratio_stddev_pop_fields
  stddev_samp: billing_ratio_stddev_samp_fields
  sum: billing_ratio_sum_fields
  var_pop: billing_ratio_var_pop_fields
  var_samp: billing_ratio_var_samp_fields
  variance: billing_ratio_variance_fields
}

"""
order by aggregate values of table "billing_ratio"
"""
input billing_ratio_aggregate_order_by {
  avg: billing_ratio_avg_order_by
  count: order_by
  max: billing_ratio_max_order_by
  min: billing_ratio_min_order_by
  stddev: billing_ratio_stddev_order_by
  stddev_pop: billing_ratio_stddev_pop_order_by
  stddev_samp: billing_ratio_stddev_samp_order_by
  sum: billing_ratio_sum_order_by
  var_pop: billing_ratio_var_pop_order_by
  var_samp: billing_ratio_var_samp_order_by
  variance: billing_ratio_variance_order_by
}

"""
input type for inserting array relation for remote table "billing_ratio"
"""
input billing_ratio_arr_rel_insert_input {
  data: [billing_ratio_insert_input!]!
  on_conflict: billing_ratio_on_conflict
}

"""aggregate avg on columns"""
type billing_ratio_avg_fields {
  billing_ratio_denominator: Float
  billing_ratio_numerator: Float
}

"""
order by avg() on columns of table "billing_ratio"
"""
input billing_ratio_avg_order_by {
  billing_ratio_denominator: order_by
  billing_ratio_numerator: order_by
}

"""
Boolean expression to filter rows from the table "billing_ratio". All fields are combined with a logical 'AND'.
"""
input billing_ratio_bool_exp {
  _and: [billing_ratio_bool_exp]
  _not: billing_ratio_bool_exp
  _or: [billing_ratio_bool_exp]
  billing_ratio_denominator: Int_comparison_exp
  billing_ratio_id: String_comparison_exp
  billing_ratio_numerator: Int_comparison_exp
  billing_schedule_period: billing_schedule_period_bool_exp
  billing_schedule_period_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  end_date: timestamptz_comparison_exp
  is_archived: Boolean_comparison_exp
  resource_path: String_comparison_exp
  start_date: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "billing_ratio"
"""
enum billing_ratio_constraint {
  """unique or primary key constraint"""
  billing_ratio_pk
}

"""
input type for incrementing integer column in table "billing_ratio"
"""
input billing_ratio_inc_input {
  billing_ratio_denominator: Int
  billing_ratio_numerator: Int
}

"""
input type for inserting data into table "billing_ratio"
"""
input billing_ratio_insert_input {
  billing_ratio_denominator: Int
  billing_ratio_id: String
  billing_ratio_numerator: Int
  billing_schedule_period: billing_schedule_period_obj_rel_insert_input
  billing_schedule_period_id: String
  created_at: timestamptz
  end_date: timestamptz
  is_archived: Boolean
  resource_path: String
  start_date: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type billing_ratio_max_fields {
  billing_ratio_denominator: Int
  billing_ratio_id: String
  billing_ratio_numerator: Int
  billing_schedule_period_id: String
  created_at: timestamptz
  end_date: timestamptz
  resource_path: String
  start_date: timestamptz
  updated_at: timestamptz
}

"""
order by max() on columns of table "billing_ratio"
"""
input billing_ratio_max_order_by {
  billing_ratio_denominator: order_by
  billing_ratio_id: order_by
  billing_ratio_numerator: order_by
  billing_schedule_period_id: order_by
  created_at: order_by
  end_date: order_by
  resource_path: order_by
  start_date: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type billing_ratio_min_fields {
  billing_ratio_denominator: Int
  billing_ratio_id: String
  billing_ratio_numerator: Int
  billing_schedule_period_id: String
  created_at: timestamptz
  end_date: timestamptz
  resource_path: String
  start_date: timestamptz
  updated_at: timestamptz
}

"""
order by min() on columns of table "billing_ratio"
"""
input billing_ratio_min_order_by {
  billing_ratio_denominator: order_by
  billing_ratio_id: order_by
  billing_ratio_numerator: order_by
  billing_schedule_period_id: order_by
  created_at: order_by
  end_date: order_by
  resource_path: order_by
  start_date: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "billing_ratio"
"""
type billing_ratio_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [billing_ratio!]!
}

"""
input type for inserting object relation for remote table "billing_ratio"
"""
input billing_ratio_obj_rel_insert_input {
  data: billing_ratio_insert_input!
  on_conflict: billing_ratio_on_conflict
}

"""
on conflict condition type for table "billing_ratio"
"""
input billing_ratio_on_conflict {
  constraint: billing_ratio_constraint!
  update_columns: [billing_ratio_update_column!]!
  where: billing_ratio_bool_exp
}

"""
ordering options when selecting data from "billing_ratio"
"""
input billing_ratio_order_by {
  billing_ratio_denominator: order_by
  billing_ratio_id: order_by
  billing_ratio_numerator: order_by
  billing_schedule_period: billing_schedule_period_order_by
  billing_schedule_period_id: order_by
  created_at: order_by
  end_date: order_by
  is_archived: order_by
  resource_path: order_by
  start_date: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "billing_ratio"
"""
input billing_ratio_pk_columns_input {
  billing_ratio_id: String!
}

"""
select columns of table "billing_ratio"
"""
enum billing_ratio_select_column {
  """column name"""
  billing_ratio_denominator

  """column name"""
  billing_ratio_id

  """column name"""
  billing_ratio_numerator

  """column name"""
  billing_schedule_period_id

  """column name"""
  created_at

  """column name"""
  end_date

  """column name"""
  is_archived

  """column name"""
  resource_path

  """column name"""
  start_date

  """column name"""
  updated_at
}

"""
input type for updating data in table "billing_ratio"
"""
input billing_ratio_set_input {
  billing_ratio_denominator: Int
  billing_ratio_id: String
  billing_ratio_numerator: Int
  billing_schedule_period_id: String
  created_at: timestamptz
  end_date: timestamptz
  is_archived: Boolean
  resource_path: String
  start_date: timestamptz
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type billing_ratio_stddev_fields {
  billing_ratio_denominator: Float
  billing_ratio_numerator: Float
}

"""
order by stddev() on columns of table "billing_ratio"
"""
input billing_ratio_stddev_order_by {
  billing_ratio_denominator: order_by
  billing_ratio_numerator: order_by
}

"""aggregate stddev_pop on columns"""
type billing_ratio_stddev_pop_fields {
  billing_ratio_denominator: Float
  billing_ratio_numerator: Float
}

"""
order by stddev_pop() on columns of table "billing_ratio"
"""
input billing_ratio_stddev_pop_order_by {
  billing_ratio_denominator: order_by
  billing_ratio_numerator: order_by
}

"""aggregate stddev_samp on columns"""
type billing_ratio_stddev_samp_fields {
  billing_ratio_denominator: Float
  billing_ratio_numerator: Float
}

"""
order by stddev_samp() on columns of table "billing_ratio"
"""
input billing_ratio_stddev_samp_order_by {
  billing_ratio_denominator: order_by
  billing_ratio_numerator: order_by
}

"""aggregate sum on columns"""
type billing_ratio_sum_fields {
  billing_ratio_denominator: Int
  billing_ratio_numerator: Int
}

"""
order by sum() on columns of table "billing_ratio"
"""
input billing_ratio_sum_order_by {
  billing_ratio_denominator: order_by
  billing_ratio_numerator: order_by
}

"""
update columns of table "billing_ratio"
"""
enum billing_ratio_update_column {
  """column name"""
  billing_ratio_denominator

  """column name"""
  billing_ratio_id

  """column name"""
  billing_ratio_numerator

  """column name"""
  billing_schedule_period_id

  """column name"""
  created_at

  """column name"""
  end_date

  """column name"""
  is_archived

  """column name"""
  resource_path

  """column name"""
  start_date

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type billing_ratio_var_pop_fields {
  billing_ratio_denominator: Float
  billing_ratio_numerator: Float
}

"""
order by var_pop() on columns of table "billing_ratio"
"""
input billing_ratio_var_pop_order_by {
  billing_ratio_denominator: order_by
  billing_ratio_numerator: order_by
}

"""aggregate var_samp on columns"""
type billing_ratio_var_samp_fields {
  billing_ratio_denominator: Float
  billing_ratio_numerator: Float
}

"""
order by var_samp() on columns of table "billing_ratio"
"""
input billing_ratio_var_samp_order_by {
  billing_ratio_denominator: order_by
  billing_ratio_numerator: order_by
}

"""aggregate variance on columns"""
type billing_ratio_variance_fields {
  billing_ratio_denominator: Float
  billing_ratio_numerator: Float
}

"""
order by variance() on columns of table "billing_ratio"
"""
input billing_ratio_variance_order_by {
  billing_ratio_denominator: order_by
  billing_ratio_numerator: order_by
}

"""
columns and relationships of "billing_schedule"
"""
type billing_schedule {
  billing_schedule_id: String!
  created_at: timestamptz!
  is_archived: Boolean!
  name: String!
  remarks: String
  resource_path: String
  updated_at: timestamptz!
}

"""
aggregated selection of "billing_schedule"
"""
type billing_schedule_aggregate {
  aggregate: billing_schedule_aggregate_fields
  nodes: [billing_schedule!]!
}

"""
aggregate fields of "billing_schedule"
"""
type billing_schedule_aggregate_fields {
  count(columns: [billing_schedule_select_column!], distinct: Boolean): Int
  max: billing_schedule_max_fields
  min: billing_schedule_min_fields
}

"""
order by aggregate values of table "billing_schedule"
"""
input billing_schedule_aggregate_order_by {
  count: order_by
  max: billing_schedule_max_order_by
  min: billing_schedule_min_order_by
}

"""
input type for inserting array relation for remote table "billing_schedule"
"""
input billing_schedule_arr_rel_insert_input {
  data: [billing_schedule_insert_input!]!
  on_conflict: billing_schedule_on_conflict
}

"""
Boolean expression to filter rows from the table "billing_schedule". All fields are combined with a logical 'AND'.
"""
input billing_schedule_bool_exp {
  _and: [billing_schedule_bool_exp]
  _not: billing_schedule_bool_exp
  _or: [billing_schedule_bool_exp]
  billing_schedule_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  is_archived: Boolean_comparison_exp
  name: String_comparison_exp
  remarks: String_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "billing_schedule"
"""
enum billing_schedule_constraint {
  """unique or primary key constraint"""
  billing_schedule_pk
}

"""
input type for inserting data into table "billing_schedule"
"""
input billing_schedule_insert_input {
  billing_schedule_id: String
  created_at: timestamptz
  is_archived: Boolean
  name: String
  remarks: String
  resource_path: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type billing_schedule_max_fields {
  billing_schedule_id: String
  created_at: timestamptz
  name: String
  remarks: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "billing_schedule"
"""
input billing_schedule_max_order_by {
  billing_schedule_id: order_by
  created_at: order_by
  name: order_by
  remarks: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type billing_schedule_min_fields {
  billing_schedule_id: String
  created_at: timestamptz
  name: String
  remarks: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "billing_schedule"
"""
input billing_schedule_min_order_by {
  billing_schedule_id: order_by
  created_at: order_by
  name: order_by
  remarks: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "billing_schedule"
"""
type billing_schedule_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [billing_schedule!]!
}

"""
input type for inserting object relation for remote table "billing_schedule"
"""
input billing_schedule_obj_rel_insert_input {
  data: billing_schedule_insert_input!
  on_conflict: billing_schedule_on_conflict
}

"""
on conflict condition type for table "billing_schedule"
"""
input billing_schedule_on_conflict {
  constraint: billing_schedule_constraint!
  update_columns: [billing_schedule_update_column!]!
  where: billing_schedule_bool_exp
}

"""
ordering options when selecting data from "billing_schedule"
"""
input billing_schedule_order_by {
  billing_schedule_id: order_by
  created_at: order_by
  is_archived: order_by
  name: order_by
  remarks: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
columns and relationships of "billing_schedule_period"
"""
type billing_schedule_period {
  billing_date: timestamptz!

  """An array relationship"""
  billing_ratios(
    """distinct select on columns"""
    distinct_on: [billing_ratio_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [billing_ratio_order_by!]

    """filter the rows returned"""
    where: billing_ratio_bool_exp
  ): [billing_ratio!]!

  """An aggregated array relationship"""
  billing_ratios_aggregate(
    """distinct select on columns"""
    distinct_on: [billing_ratio_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [billing_ratio_order_by!]

    """filter the rows returned"""
    where: billing_ratio_bool_exp
  ): billing_ratio_aggregate!
  billing_schedule_id: String!
  billing_schedule_period_id: String!
  created_at: timestamptz!
  end_date: timestamptz!
  is_archived: Boolean!
  name: String!

  """An array relationship"""
  product_prices(
    """distinct select on columns"""
    distinct_on: [product_price_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_price_order_by!]

    """filter the rows returned"""
    where: product_price_bool_exp
  ): [product_price!]!

  """An aggregated array relationship"""
  product_prices_aggregate(
    """distinct select on columns"""
    distinct_on: [product_price_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_price_order_by!]

    """filter the rows returned"""
    where: product_price_bool_exp
  ): product_price_aggregate!
  remarks: String
  resource_path: String
  start_date: timestamptz!
  updated_at: timestamptz!
}

"""
aggregated selection of "billing_schedule_period"
"""
type billing_schedule_period_aggregate {
  aggregate: billing_schedule_period_aggregate_fields
  nodes: [billing_schedule_period!]!
}

"""
aggregate fields of "billing_schedule_period"
"""
type billing_schedule_period_aggregate_fields {
  count(columns: [billing_schedule_period_select_column!], distinct: Boolean): Int
  max: billing_schedule_period_max_fields
  min: billing_schedule_period_min_fields
}

"""
order by aggregate values of table "billing_schedule_period"
"""
input billing_schedule_period_aggregate_order_by {
  count: order_by
  max: billing_schedule_period_max_order_by
  min: billing_schedule_period_min_order_by
}

"""
input type for inserting array relation for remote table "billing_schedule_period"
"""
input billing_schedule_period_arr_rel_insert_input {
  data: [billing_schedule_period_insert_input!]!
  on_conflict: billing_schedule_period_on_conflict
}

"""
Boolean expression to filter rows from the table "billing_schedule_period". All fields are combined with a logical 'AND'.
"""
input billing_schedule_period_bool_exp {
  _and: [billing_schedule_period_bool_exp]
  _not: billing_schedule_period_bool_exp
  _or: [billing_schedule_period_bool_exp]
  billing_date: timestamptz_comparison_exp
  billing_ratios: billing_ratio_bool_exp
  billing_schedule_id: String_comparison_exp
  billing_schedule_period_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  end_date: timestamptz_comparison_exp
  is_archived: Boolean_comparison_exp
  name: String_comparison_exp
  product_prices: product_price_bool_exp
  remarks: String_comparison_exp
  resource_path: String_comparison_exp
  start_date: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "billing_schedule_period"
"""
enum billing_schedule_period_constraint {
  """unique or primary key constraint"""
  billing_schedule_period_pk
}

"""
input type for inserting data into table "billing_schedule_period"
"""
input billing_schedule_period_insert_input {
  billing_date: timestamptz
  billing_ratios: billing_ratio_arr_rel_insert_input
  billing_schedule_id: String
  billing_schedule_period_id: String
  created_at: timestamptz
  end_date: timestamptz
  is_archived: Boolean
  name: String
  product_prices: product_price_arr_rel_insert_input
  remarks: String
  resource_path: String
  start_date: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type billing_schedule_period_max_fields {
  billing_date: timestamptz
  billing_schedule_id: String
  billing_schedule_period_id: String
  created_at: timestamptz
  end_date: timestamptz
  name: String
  remarks: String
  resource_path: String
  start_date: timestamptz
  updated_at: timestamptz
}

"""
order by max() on columns of table "billing_schedule_period"
"""
input billing_schedule_period_max_order_by {
  billing_date: order_by
  billing_schedule_id: order_by
  billing_schedule_period_id: order_by
  created_at: order_by
  end_date: order_by
  name: order_by
  remarks: order_by
  resource_path: order_by
  start_date: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type billing_schedule_period_min_fields {
  billing_date: timestamptz
  billing_schedule_id: String
  billing_schedule_period_id: String
  created_at: timestamptz
  end_date: timestamptz
  name: String
  remarks: String
  resource_path: String
  start_date: timestamptz
  updated_at: timestamptz
}

"""
order by min() on columns of table "billing_schedule_period"
"""
input billing_schedule_period_min_order_by {
  billing_date: order_by
  billing_schedule_id: order_by
  billing_schedule_period_id: order_by
  created_at: order_by
  end_date: order_by
  name: order_by
  remarks: order_by
  resource_path: order_by
  start_date: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "billing_schedule_period"
"""
type billing_schedule_period_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [billing_schedule_period!]!
}

"""
input type for inserting object relation for remote table "billing_schedule_period"
"""
input billing_schedule_period_obj_rel_insert_input {
  data: billing_schedule_period_insert_input!
  on_conflict: billing_schedule_period_on_conflict
}

"""
on conflict condition type for table "billing_schedule_period"
"""
input billing_schedule_period_on_conflict {
  constraint: billing_schedule_period_constraint!
  update_columns: [billing_schedule_period_update_column!]!
  where: billing_schedule_period_bool_exp
}

"""
ordering options when selecting data from "billing_schedule_period"
"""
input billing_schedule_period_order_by {
  billing_date: order_by
  billing_ratios_aggregate: billing_ratio_aggregate_order_by
  billing_schedule_id: order_by
  billing_schedule_period_id: order_by
  created_at: order_by
  end_date: order_by
  is_archived: order_by
  name: order_by
  product_prices_aggregate: product_price_aggregate_order_by
  remarks: order_by
  resource_path: order_by
  start_date: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "billing_schedule_period"
"""
input billing_schedule_period_pk_columns_input {
  billing_schedule_period_id: String!
}

"""
select columns of table "billing_schedule_period"
"""
enum billing_schedule_period_select_column {
  """column name"""
  billing_date

  """column name"""
  billing_schedule_id

  """column name"""
  billing_schedule_period_id

  """column name"""
  created_at

  """column name"""
  end_date

  """column name"""
  is_archived

  """column name"""
  name

  """column name"""
  remarks

  """column name"""
  resource_path

  """column name"""
  start_date

  """column name"""
  updated_at
}

"""
input type for updating data in table "billing_schedule_period"
"""
input billing_schedule_period_set_input {
  billing_date: timestamptz
  billing_schedule_id: String
  billing_schedule_period_id: String
  created_at: timestamptz
  end_date: timestamptz
  is_archived: Boolean
  name: String
  remarks: String
  resource_path: String
  start_date: timestamptz
  updated_at: timestamptz
}

"""
update columns of table "billing_schedule_period"
"""
enum billing_schedule_period_update_column {
  """column name"""
  billing_date

  """column name"""
  billing_schedule_id

  """column name"""
  billing_schedule_period_id

  """column name"""
  created_at

  """column name"""
  end_date

  """column name"""
  is_archived

  """column name"""
  name

  """column name"""
  remarks

  """column name"""
  resource_path

  """column name"""
  start_date

  """column name"""
  updated_at
}

"""
primary key columns input for table: "billing_schedule"
"""
input billing_schedule_pk_columns_input {
  billing_schedule_id: String!
}

"""
select columns of table "billing_schedule"
"""
enum billing_schedule_select_column {
  """column name"""
  billing_schedule_id

  """column name"""
  created_at

  """column name"""
  is_archived

  """column name"""
  name

  """column name"""
  remarks

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "billing_schedule"
"""
input billing_schedule_set_input {
  billing_schedule_id: String
  created_at: timestamptz
  is_archived: Boolean
  name: String
  remarks: String
  resource_path: String
  updated_at: timestamptz
}

"""
update columns of table "billing_schedule"
"""
enum billing_schedule_update_column {
  """column name"""
  billing_schedule_id

  """column name"""
  created_at

  """column name"""
  is_archived

  """column name"""
  name

  """column name"""
  remarks

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
columns and relationships of "courses"
"""
type courses {
  course_id: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  grade: smallint
  name: String!
  resource_path: String
  updated_at: timestamptz!
}

"""
aggregated selection of "courses"
"""
type courses_aggregate {
  aggregate: courses_aggregate_fields
  nodes: [courses!]!
}

"""
aggregate fields of "courses"
"""
type courses_aggregate_fields {
  avg: courses_avg_fields
  count(columns: [courses_select_column!], distinct: Boolean): Int
  max: courses_max_fields
  min: courses_min_fields
  stddev: courses_stddev_fields
  stddev_pop: courses_stddev_pop_fields
  stddev_samp: courses_stddev_samp_fields
  sum: courses_sum_fields
  var_pop: courses_var_pop_fields
  var_samp: courses_var_samp_fields
  variance: courses_variance_fields
}

"""
order by aggregate values of table "courses"
"""
input courses_aggregate_order_by {
  avg: courses_avg_order_by
  count: order_by
  max: courses_max_order_by
  min: courses_min_order_by
  stddev: courses_stddev_order_by
  stddev_pop: courses_stddev_pop_order_by
  stddev_samp: courses_stddev_samp_order_by
  sum: courses_sum_order_by
  var_pop: courses_var_pop_order_by
  var_samp: courses_var_samp_order_by
  variance: courses_variance_order_by
}

"""
input type for inserting array relation for remote table "courses"
"""
input courses_arr_rel_insert_input {
  data: [courses_insert_input!]!
  on_conflict: courses_on_conflict
}

"""aggregate avg on columns"""
type courses_avg_fields {
  grade: Float
}

"""
order by avg() on columns of table "courses"
"""
input courses_avg_order_by {
  grade: order_by
}

"""
Boolean expression to filter rows from the table "courses". All fields are combined with a logical 'AND'.
"""
input courses_bool_exp {
  _and: [courses_bool_exp]
  _not: courses_bool_exp
  _or: [courses_bool_exp]
  course_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  grade: smallint_comparison_exp
  name: String_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "courses"
"""
enum courses_constraint {
  """unique or primary key constraint"""
  courses_pk
}

"""
input type for incrementing integer column in table "courses"
"""
input courses_inc_input {
  grade: smallint
}

"""
input type for inserting data into table "courses"
"""
input courses_insert_input {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  grade: smallint
  name: String
  resource_path: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type courses_max_fields {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  grade: smallint
  name: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "courses"
"""
input courses_max_order_by {
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  grade: order_by
  name: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type courses_min_fields {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  grade: smallint
  name: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "courses"
"""
input courses_min_order_by {
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  grade: order_by
  name: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "courses"
"""
type courses_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [courses!]!
}

"""
input type for inserting object relation for remote table "courses"
"""
input courses_obj_rel_insert_input {
  data: courses_insert_input!
  on_conflict: courses_on_conflict
}

"""
on conflict condition type for table "courses"
"""
input courses_on_conflict {
  constraint: courses_constraint!
  update_columns: [courses_update_column!]!
  where: courses_bool_exp
}

"""
ordering options when selecting data from "courses"
"""
input courses_order_by {
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  grade: order_by
  name: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "courses"
"""
input courses_pk_columns_input {
  course_id: String!
}

"""
select columns of table "courses"
"""
enum courses_select_column {
  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  grade

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "courses"
"""
input courses_set_input {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  grade: smallint
  name: String
  resource_path: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type courses_stddev_fields {
  grade: Float
}

"""
order by stddev() on columns of table "courses"
"""
input courses_stddev_order_by {
  grade: order_by
}

"""aggregate stddev_pop on columns"""
type courses_stddev_pop_fields {
  grade: Float
}

"""
order by stddev_pop() on columns of table "courses"
"""
input courses_stddev_pop_order_by {
  grade: order_by
}

"""aggregate stddev_samp on columns"""
type courses_stddev_samp_fields {
  grade: Float
}

"""
order by stddev_samp() on columns of table "courses"
"""
input courses_stddev_samp_order_by {
  grade: order_by
}

"""aggregate sum on columns"""
type courses_sum_fields {
  grade: smallint
}

"""
order by sum() on columns of table "courses"
"""
input courses_sum_order_by {
  grade: order_by
}

"""
update columns of table "courses"
"""
enum courses_update_column {
  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  grade

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type courses_var_pop_fields {
  grade: Float
}

"""
order by var_pop() on columns of table "courses"
"""
input courses_var_pop_order_by {
  grade: order_by
}

"""aggregate var_samp on columns"""
type courses_var_samp_fields {
  grade: Float
}

"""
order by var_samp() on columns of table "courses"
"""
input courses_var_samp_order_by {
  grade: order_by
}

"""aggregate variance on columns"""
type courses_variance_fields {
  grade: Float
}

"""
order by variance() on columns of table "courses"
"""
input courses_variance_order_by {
  grade: order_by
}

scalar date

"""
expression to compare columns of type date. All fields are combined with logical 'AND'.
"""
input date_comparison_exp {
  _eq: date
  _gt: date
  _gte: date
  _in: [date!]
  _is_null: Boolean
  _lt: date
  _lte: date
  _neq: date
  _nin: [date!]
}

"""
columns and relationships of "discount"
"""
type discount {
  available_from: timestamptz!
  available_until: timestamptz!
  created_at: timestamptz!
  discount_amount_type: String!
  discount_amount_value: numeric!
  discount_id: String!
  discount_type: String!
  is_archived: Boolean!
  name: String!

  """An array relationship"""
  order_items(
    """distinct select on columns"""
    distinct_on: [order_item_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_item_order_by!]

    """filter the rows returned"""
    where: order_item_bool_exp
  ): [order_item!]!

  """An aggregated array relationship"""
  order_items_aggregate(
    """distinct select on columns"""
    distinct_on: [order_item_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_item_order_by!]

    """filter the rows returned"""
    where: order_item_bool_exp
  ): order_item_aggregate!
  recurring_valid_duration: Int
  remarks: String
  resource_path: String
  updated_at: timestamptz!
}

"""
aggregated selection of "discount"
"""
type discount_aggregate {
  aggregate: discount_aggregate_fields
  nodes: [discount!]!
}

"""
aggregate fields of "discount"
"""
type discount_aggregate_fields {
  avg: discount_avg_fields
  count(columns: [discount_select_column!], distinct: Boolean): Int
  max: discount_max_fields
  min: discount_min_fields
  stddev: discount_stddev_fields
  stddev_pop: discount_stddev_pop_fields
  stddev_samp: discount_stddev_samp_fields
  sum: discount_sum_fields
  var_pop: discount_var_pop_fields
  var_samp: discount_var_samp_fields
  variance: discount_variance_fields
}

"""
order by aggregate values of table "discount"
"""
input discount_aggregate_order_by {
  avg: discount_avg_order_by
  count: order_by
  max: discount_max_order_by
  min: discount_min_order_by
  stddev: discount_stddev_order_by
  stddev_pop: discount_stddev_pop_order_by
  stddev_samp: discount_stddev_samp_order_by
  sum: discount_sum_order_by
  var_pop: discount_var_pop_order_by
  var_samp: discount_var_samp_order_by
  variance: discount_variance_order_by
}

"""
input type for inserting array relation for remote table "discount"
"""
input discount_arr_rel_insert_input {
  data: [discount_insert_input!]!
  on_conflict: discount_on_conflict
}

"""aggregate avg on columns"""
type discount_avg_fields {
  discount_amount_value: Float
  recurring_valid_duration: Float
}

"""
order by avg() on columns of table "discount"
"""
input discount_avg_order_by {
  discount_amount_value: order_by
  recurring_valid_duration: order_by
}

"""
Boolean expression to filter rows from the table "discount". All fields are combined with a logical 'AND'.
"""
input discount_bool_exp {
  _and: [discount_bool_exp]
  _not: discount_bool_exp
  _or: [discount_bool_exp]
  available_from: timestamptz_comparison_exp
  available_until: timestamptz_comparison_exp
  created_at: timestamptz_comparison_exp
  discount_amount_type: String_comparison_exp
  discount_amount_value: numeric_comparison_exp
  discount_id: String_comparison_exp
  discount_type: String_comparison_exp
  is_archived: Boolean_comparison_exp
  name: String_comparison_exp
  order_items: order_item_bool_exp
  recurring_valid_duration: Int_comparison_exp
  remarks: String_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "discount"
"""
enum discount_constraint {
  """unique or primary key constraint"""
  discount_pk
}

"""
input type for incrementing integer column in table "discount"
"""
input discount_inc_input {
  discount_amount_value: numeric
  recurring_valid_duration: Int
}

"""
input type for inserting data into table "discount"
"""
input discount_insert_input {
  available_from: timestamptz
  available_until: timestamptz
  created_at: timestamptz
  discount_amount_type: String
  discount_amount_value: numeric
  discount_id: String
  discount_type: String
  is_archived: Boolean
  name: String
  order_items: order_item_arr_rel_insert_input
  recurring_valid_duration: Int
  remarks: String
  resource_path: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type discount_max_fields {
  available_from: timestamptz
  available_until: timestamptz
  created_at: timestamptz
  discount_amount_type: String
  discount_amount_value: numeric
  discount_id: String
  discount_type: String
  name: String
  recurring_valid_duration: Int
  remarks: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "discount"
"""
input discount_max_order_by {
  available_from: order_by
  available_until: order_by
  created_at: order_by
  discount_amount_type: order_by
  discount_amount_value: order_by
  discount_id: order_by
  discount_type: order_by
  name: order_by
  recurring_valid_duration: order_by
  remarks: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type discount_min_fields {
  available_from: timestamptz
  available_until: timestamptz
  created_at: timestamptz
  discount_amount_type: String
  discount_amount_value: numeric
  discount_id: String
  discount_type: String
  name: String
  recurring_valid_duration: Int
  remarks: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "discount"
"""
input discount_min_order_by {
  available_from: order_by
  available_until: order_by
  created_at: order_by
  discount_amount_type: order_by
  discount_amount_value: order_by
  discount_id: order_by
  discount_type: order_by
  name: order_by
  recurring_valid_duration: order_by
  remarks: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "discount"
"""
type discount_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [discount!]!
}

"""
input type for inserting object relation for remote table "discount"
"""
input discount_obj_rel_insert_input {
  data: discount_insert_input!
  on_conflict: discount_on_conflict
}

"""
on conflict condition type for table "discount"
"""
input discount_on_conflict {
  constraint: discount_constraint!
  update_columns: [discount_update_column!]!
  where: discount_bool_exp
}

"""
ordering options when selecting data from "discount"
"""
input discount_order_by {
  available_from: order_by
  available_until: order_by
  created_at: order_by
  discount_amount_type: order_by
  discount_amount_value: order_by
  discount_id: order_by
  discount_type: order_by
  is_archived: order_by
  name: order_by
  order_items_aggregate: order_item_aggregate_order_by
  recurring_valid_duration: order_by
  remarks: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "discount"
"""
input discount_pk_columns_input {
  discount_id: String!
}

"""
select columns of table "discount"
"""
enum discount_select_column {
  """column name"""
  available_from

  """column name"""
  available_until

  """column name"""
  created_at

  """column name"""
  discount_amount_type

  """column name"""
  discount_amount_value

  """column name"""
  discount_id

  """column name"""
  discount_type

  """column name"""
  is_archived

  """column name"""
  name

  """column name"""
  recurring_valid_duration

  """column name"""
  remarks

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "discount"
"""
input discount_set_input {
  available_from: timestamptz
  available_until: timestamptz
  created_at: timestamptz
  discount_amount_type: String
  discount_amount_value: numeric
  discount_id: String
  discount_type: String
  is_archived: Boolean
  name: String
  recurring_valid_duration: Int
  remarks: String
  resource_path: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type discount_stddev_fields {
  discount_amount_value: Float
  recurring_valid_duration: Float
}

"""
order by stddev() on columns of table "discount"
"""
input discount_stddev_order_by {
  discount_amount_value: order_by
  recurring_valid_duration: order_by
}

"""aggregate stddev_pop on columns"""
type discount_stddev_pop_fields {
  discount_amount_value: Float
  recurring_valid_duration: Float
}

"""
order by stddev_pop() on columns of table "discount"
"""
input discount_stddev_pop_order_by {
  discount_amount_value: order_by
  recurring_valid_duration: order_by
}

"""aggregate stddev_samp on columns"""
type discount_stddev_samp_fields {
  discount_amount_value: Float
  recurring_valid_duration: Float
}

"""
order by stddev_samp() on columns of table "discount"
"""
input discount_stddev_samp_order_by {
  discount_amount_value: order_by
  recurring_valid_duration: order_by
}

"""aggregate sum on columns"""
type discount_sum_fields {
  discount_amount_value: numeric
  recurring_valid_duration: Int
}

"""
order by sum() on columns of table "discount"
"""
input discount_sum_order_by {
  discount_amount_value: order_by
  recurring_valid_duration: order_by
}

"""
update columns of table "discount"
"""
enum discount_update_column {
  """column name"""
  available_from

  """column name"""
  available_until

  """column name"""
  created_at

  """column name"""
  discount_amount_type

  """column name"""
  discount_amount_value

  """column name"""
  discount_id

  """column name"""
  discount_type

  """column name"""
  is_archived

  """column name"""
  name

  """column name"""
  recurring_valid_duration

  """column name"""
  remarks

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type discount_var_pop_fields {
  discount_amount_value: Float
  recurring_valid_duration: Float
}

"""
order by var_pop() on columns of table "discount"
"""
input discount_var_pop_order_by {
  discount_amount_value: order_by
  recurring_valid_duration: order_by
}

"""aggregate var_samp on columns"""
type discount_var_samp_fields {
  discount_amount_value: Float
  recurring_valid_duration: Float
}

"""
order by var_samp() on columns of table "discount"
"""
input discount_var_samp_order_by {
  discount_amount_value: order_by
  recurring_valid_duration: order_by
}

"""aggregate variance on columns"""
type discount_variance_fields {
  discount_amount_value: Float
  recurring_valid_duration: Float
}

"""
order by variance() on columns of table "discount"
"""
input discount_variance_order_by {
  discount_amount_value: order_by
  recurring_valid_duration: order_by
}

"""
columns and relationships of "fee"
"""
type fee {
  fee_id: String!
  fee_type: String!

  """An object relationship"""
  product: product!
  resource_path: String
}

"""
aggregated selection of "fee"
"""
type fee_aggregate {
  aggregate: fee_aggregate_fields
  nodes: [fee!]!
}

"""
aggregate fields of "fee"
"""
type fee_aggregate_fields {
  count(columns: [fee_select_column!], distinct: Boolean): Int
  max: fee_max_fields
  min: fee_min_fields
}

"""
order by aggregate values of table "fee"
"""
input fee_aggregate_order_by {
  count: order_by
  max: fee_max_order_by
  min: fee_min_order_by
}

"""
input type for inserting array relation for remote table "fee"
"""
input fee_arr_rel_insert_input {
  data: [fee_insert_input!]!
  on_conflict: fee_on_conflict
}

"""
Boolean expression to filter rows from the table "fee". All fields are combined with a logical 'AND'.
"""
input fee_bool_exp {
  _and: [fee_bool_exp]
  _not: fee_bool_exp
  _or: [fee_bool_exp]
  fee_id: String_comparison_exp
  fee_type: String_comparison_exp
  product: product_bool_exp
  resource_path: String_comparison_exp
}

"""
unique or primary key constraints on table "fee"
"""
enum fee_constraint {
  """unique or primary key constraint"""
  fee_pk
}

"""
input type for inserting data into table "fee"
"""
input fee_insert_input {
  fee_id: String
  fee_type: String
  product: product_obj_rel_insert_input
  resource_path: String
}

"""aggregate max on columns"""
type fee_max_fields {
  fee_id: String
  fee_type: String
  resource_path: String
}

"""
order by max() on columns of table "fee"
"""
input fee_max_order_by {
  fee_id: order_by
  fee_type: order_by
  resource_path: order_by
}

"""aggregate min on columns"""
type fee_min_fields {
  fee_id: String
  fee_type: String
  resource_path: String
}

"""
order by min() on columns of table "fee"
"""
input fee_min_order_by {
  fee_id: order_by
  fee_type: order_by
  resource_path: order_by
}

"""
response of any mutation on the table "fee"
"""
type fee_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [fee!]!
}

"""
input type for inserting object relation for remote table "fee"
"""
input fee_obj_rel_insert_input {
  data: fee_insert_input!
  on_conflict: fee_on_conflict
}

"""
on conflict condition type for table "fee"
"""
input fee_on_conflict {
  constraint: fee_constraint!
  update_columns: [fee_update_column!]!
  where: fee_bool_exp
}

"""
ordering options when selecting data from "fee"
"""
input fee_order_by {
  fee_id: order_by
  fee_type: order_by
  product: product_order_by
  resource_path: order_by
}

"""
primary key columns input for table: "fee"
"""
input fee_pk_columns_input {
  fee_id: String!
}

"""
select columns of table "fee"
"""
enum fee_select_column {
  """column name"""
  fee_id

  """column name"""
  fee_type

  """column name"""
  resource_path
}

"""
input type for updating data in table "fee"
"""
input fee_set_input {
  fee_id: String
  fee_type: String
  resource_path: String
}

"""
update columns of table "fee"
"""
enum fee_update_column {
  """column name"""
  fee_id

  """column name"""
  fee_type

  """column name"""
  resource_path
}

"""
columns and relationships of "grade"
"""
type grade {
  created_at: timestamptz!
  deleted_at: timestamptz
  grade_id: String!
  is_archived: Boolean!
  name: String!
  partner_internal_id: String!
  resource_path: String
  updated_at: timestamptz!
}

"""
aggregated selection of "grade"
"""
type grade_aggregate {
  aggregate: grade_aggregate_fields
  nodes: [grade!]!
}

"""
aggregate fields of "grade"
"""
type grade_aggregate_fields {
  count(columns: [grade_select_column!], distinct: Boolean): Int
  max: grade_max_fields
  min: grade_min_fields
}

"""
order by aggregate values of table "grade"
"""
input grade_aggregate_order_by {
  count: order_by
  max: grade_max_order_by
  min: grade_min_order_by
}

"""
input type for inserting array relation for remote table "grade"
"""
input grade_arr_rel_insert_input {
  data: [grade_insert_input!]!
  on_conflict: grade_on_conflict
}

"""
Boolean expression to filter rows from the table "grade". All fields are combined with a logical 'AND'.
"""
input grade_bool_exp {
  _and: [grade_bool_exp]
  _not: grade_bool_exp
  _or: [grade_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  grade_id: String_comparison_exp
  is_archived: Boolean_comparison_exp
  name: String_comparison_exp
  partner_internal_id: String_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "grade"
"""
enum grade_constraint {
  """unique or primary key constraint"""
  grade_pk
}

"""
input type for inserting data into table "grade"
"""
input grade_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  grade_id: String
  is_archived: Boolean
  name: String
  partner_internal_id: String
  resource_path: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type grade_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  grade_id: String
  name: String
  partner_internal_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "grade"
"""
input grade_max_order_by {
  created_at: order_by
  deleted_at: order_by
  grade_id: order_by
  name: order_by
  partner_internal_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type grade_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  grade_id: String
  name: String
  partner_internal_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "grade"
"""
input grade_min_order_by {
  created_at: order_by
  deleted_at: order_by
  grade_id: order_by
  name: order_by
  partner_internal_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "grade"
"""
type grade_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [grade!]!
}

"""
input type for inserting object relation for remote table "grade"
"""
input grade_obj_rel_insert_input {
  data: grade_insert_input!
  on_conflict: grade_on_conflict
}

"""
on conflict condition type for table "grade"
"""
input grade_on_conflict {
  constraint: grade_constraint!
  update_columns: [grade_update_column!]!
  where: grade_bool_exp
}

"""
ordering options when selecting data from "grade"
"""
input grade_order_by {
  created_at: order_by
  deleted_at: order_by
  grade_id: order_by
  is_archived: order_by
  name: order_by
  partner_internal_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "grade"
"""
input grade_pk_columns_input {
  grade_id: String!
}

"""
select columns of table "grade"
"""
enum grade_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  grade_id

  """column name"""
  is_archived

  """column name"""
  name

  """column name"""
  partner_internal_id

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "grade"
"""
input grade_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  grade_id: String
  is_archived: Boolean
  name: String
  partner_internal_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
update columns of table "grade"
"""
enum grade_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  grade_id

  """column name"""
  is_archived

  """column name"""
  name

  """column name"""
  partner_internal_id

  """column name"""
  resource_path

  """column name"""
  updated_at
}

scalar jsonb

"""
expression to compare columns of type jsonb. All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

"""
columns and relationships of "locations"
"""
type locations {
  access_path: String
  created_at: timestamptz!
  deleted_at: timestamptz
  is_archived: Boolean!
  location_id: String!
  location_type: String
  name: String!
  parent_location_id: String
  partner_internal_id: String
  partner_internal_parent_id: String
  resource_path: String
  updated_at: timestamptz!
}

"""
aggregated selection of "locations"
"""
type locations_aggregate {
  aggregate: locations_aggregate_fields
  nodes: [locations!]!
}

"""
aggregate fields of "locations"
"""
type locations_aggregate_fields {
  count(columns: [locations_select_column!], distinct: Boolean): Int
  max: locations_max_fields
  min: locations_min_fields
}

"""
order by aggregate values of table "locations"
"""
input locations_aggregate_order_by {
  count: order_by
  max: locations_max_order_by
  min: locations_min_order_by
}

"""
input type for inserting array relation for remote table "locations"
"""
input locations_arr_rel_insert_input {
  data: [locations_insert_input!]!
  on_conflict: locations_on_conflict
}

"""
Boolean expression to filter rows from the table "locations". All fields are combined with a logical 'AND'.
"""
input locations_bool_exp {
  _and: [locations_bool_exp]
  _not: locations_bool_exp
  _or: [locations_bool_exp]
  access_path: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  is_archived: Boolean_comparison_exp
  location_id: String_comparison_exp
  location_type: String_comparison_exp
  name: String_comparison_exp
  parent_location_id: String_comparison_exp
  partner_internal_id: String_comparison_exp
  partner_internal_parent_id: String_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "locations"
"""
enum locations_constraint {
  """unique or primary key constraint"""
  location_pk
}

"""
input type for inserting data into table "locations"
"""
input locations_insert_input {
  access_path: String
  created_at: timestamptz
  deleted_at: timestamptz
  is_archived: Boolean
  location_id: String
  location_type: String
  name: String
  parent_location_id: String
  partner_internal_id: String
  partner_internal_parent_id: String
  resource_path: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type locations_max_fields {
  access_path: String
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  location_type: String
  name: String
  parent_location_id: String
  partner_internal_id: String
  partner_internal_parent_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "locations"
"""
input locations_max_order_by {
  access_path: order_by
  created_at: order_by
  deleted_at: order_by
  location_id: order_by
  location_type: order_by
  name: order_by
  parent_location_id: order_by
  partner_internal_id: order_by
  partner_internal_parent_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type locations_min_fields {
  access_path: String
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  location_type: String
  name: String
  parent_location_id: String
  partner_internal_id: String
  partner_internal_parent_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "locations"
"""
input locations_min_order_by {
  access_path: order_by
  created_at: order_by
  deleted_at: order_by
  location_id: order_by
  location_type: order_by
  name: order_by
  parent_location_id: order_by
  partner_internal_id: order_by
  partner_internal_parent_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "locations"
"""
type locations_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [locations!]!
}

"""
input type for inserting object relation for remote table "locations"
"""
input locations_obj_rel_insert_input {
  data: locations_insert_input!
  on_conflict: locations_on_conflict
}

"""
on conflict condition type for table "locations"
"""
input locations_on_conflict {
  constraint: locations_constraint!
  update_columns: [locations_update_column!]!
  where: locations_bool_exp
}

"""
ordering options when selecting data from "locations"
"""
input locations_order_by {
  access_path: order_by
  created_at: order_by
  deleted_at: order_by
  is_archived: order_by
  location_id: order_by
  location_type: order_by
  name: order_by
  parent_location_id: order_by
  partner_internal_id: order_by
  partner_internal_parent_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "locations"
"""
input locations_pk_columns_input {
  location_id: String!
}

"""
select columns of table "locations"
"""
enum locations_select_column {
  """column name"""
  access_path

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  is_archived

  """column name"""
  location_id

  """column name"""
  location_type

  """column name"""
  name

  """column name"""
  parent_location_id

  """column name"""
  partner_internal_id

  """column name"""
  partner_internal_parent_id

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "locations"
"""
input locations_set_input {
  access_path: String
  created_at: timestamptz
  deleted_at: timestamptz
  is_archived: Boolean
  location_id: String
  location_type: String
  name: String
  parent_location_id: String
  partner_internal_id: String
  partner_internal_parent_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
update columns of table "locations"
"""
enum locations_update_column {
  """column name"""
  access_path

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  is_archived

  """column name"""
  location_id

  """column name"""
  location_type

  """column name"""
  name

  """column name"""
  parent_location_id

  """column name"""
  partner_internal_id

  """column name"""
  partner_internal_parent_id

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
columns and relationships of "material"
"""
type material {
  custom_billing_date: timestamptz
  material_id: String!
  material_type: String!

  """An object relationship"""
  product: product!
  resource_path: String
}

"""
aggregated selection of "material"
"""
type material_aggregate {
  aggregate: material_aggregate_fields
  nodes: [material!]!
}

"""
aggregate fields of "material"
"""
type material_aggregate_fields {
  count(columns: [material_select_column!], distinct: Boolean): Int
  max: material_max_fields
  min: material_min_fields
}

"""
order by aggregate values of table "material"
"""
input material_aggregate_order_by {
  count: order_by
  max: material_max_order_by
  min: material_min_order_by
}

"""
input type for inserting array relation for remote table "material"
"""
input material_arr_rel_insert_input {
  data: [material_insert_input!]!
  on_conflict: material_on_conflict
}

"""
Boolean expression to filter rows from the table "material". All fields are combined with a logical 'AND'.
"""
input material_bool_exp {
  _and: [material_bool_exp]
  _not: material_bool_exp
  _or: [material_bool_exp]
  custom_billing_date: timestamptz_comparison_exp
  material_id: String_comparison_exp
  material_type: String_comparison_exp
  product: product_bool_exp
  resource_path: String_comparison_exp
}

"""
unique or primary key constraints on table "material"
"""
enum material_constraint {
  """unique or primary key constraint"""
  material_pk
}

"""
input type for inserting data into table "material"
"""
input material_insert_input {
  custom_billing_date: timestamptz
  material_id: String
  material_type: String
  product: product_obj_rel_insert_input
  resource_path: String
}

"""aggregate max on columns"""
type material_max_fields {
  custom_billing_date: timestamptz
  material_id: String
  material_type: String
  resource_path: String
}

"""
order by max() on columns of table "material"
"""
input material_max_order_by {
  custom_billing_date: order_by
  material_id: order_by
  material_type: order_by
  resource_path: order_by
}

"""aggregate min on columns"""
type material_min_fields {
  custom_billing_date: timestamptz
  material_id: String
  material_type: String
  resource_path: String
}

"""
order by min() on columns of table "material"
"""
input material_min_order_by {
  custom_billing_date: order_by
  material_id: order_by
  material_type: order_by
  resource_path: order_by
}

"""
response of any mutation on the table "material"
"""
type material_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [material!]!
}

"""
input type for inserting object relation for remote table "material"
"""
input material_obj_rel_insert_input {
  data: material_insert_input!
  on_conflict: material_on_conflict
}

"""
on conflict condition type for table "material"
"""
input material_on_conflict {
  constraint: material_constraint!
  update_columns: [material_update_column!]!
  where: material_bool_exp
}

"""
ordering options when selecting data from "material"
"""
input material_order_by {
  custom_billing_date: order_by
  material_id: order_by
  material_type: order_by
  product: product_order_by
  resource_path: order_by
}

"""
primary key columns input for table: "material"
"""
input material_pk_columns_input {
  material_id: String!
}

"""
select columns of table "material"
"""
enum material_select_column {
  """column name"""
  custom_billing_date

  """column name"""
  material_id

  """column name"""
  material_type

  """column name"""
  resource_path
}

"""
input type for updating data in table "material"
"""
input material_set_input {
  custom_billing_date: timestamptz
  material_id: String
  material_type: String
  resource_path: String
}

"""
update columns of table "material"
"""
enum material_update_column {
  """column name"""
  custom_billing_date

  """column name"""
  material_id

  """column name"""
  material_type

  """column name"""
  resource_path
}

"""mutation root"""
type mutation_root {
  """
  delete data from the table: "bill_item"
  """
  delete_bill_item(
    """filter the rows which have to be deleted"""
    where: bill_item_bool_exp!
  ): bill_item_mutation_response

  """
  delete single row from the table: "bill_item"
  """
  delete_bill_item_by_pk(bill_item_sequence_number: Int!, order_id: String!): bill_item

  """
  delete data from the table: "billing_ratio"
  """
  delete_billing_ratio(
    """filter the rows which have to be deleted"""
    where: billing_ratio_bool_exp!
  ): billing_ratio_mutation_response

  """
  delete single row from the table: "billing_ratio"
  """
  delete_billing_ratio_by_pk(billing_ratio_id: String!): billing_ratio

  """
  delete data from the table: "billing_schedule"
  """
  delete_billing_schedule(
    """filter the rows which have to be deleted"""
    where: billing_schedule_bool_exp!
  ): billing_schedule_mutation_response

  """
  delete single row from the table: "billing_schedule"
  """
  delete_billing_schedule_by_pk(billing_schedule_id: String!): billing_schedule

  """
  delete data from the table: "billing_schedule_period"
  """
  delete_billing_schedule_period(
    """filter the rows which have to be deleted"""
    where: billing_schedule_period_bool_exp!
  ): billing_schedule_period_mutation_response

  """
  delete single row from the table: "billing_schedule_period"
  """
  delete_billing_schedule_period_by_pk(billing_schedule_period_id: String!): billing_schedule_period

  """
  delete data from the table: "courses"
  """
  delete_courses(
    """filter the rows which have to be deleted"""
    where: courses_bool_exp!
  ): courses_mutation_response

  """
  delete single row from the table: "courses"
  """
  delete_courses_by_pk(course_id: String!): courses

  """
  delete data from the table: "discount"
  """
  delete_discount(
    """filter the rows which have to be deleted"""
    where: discount_bool_exp!
  ): discount_mutation_response

  """
  delete single row from the table: "discount"
  """
  delete_discount_by_pk(discount_id: String!): discount

  """
  delete data from the table: "fee"
  """
  delete_fee(
    """filter the rows which have to be deleted"""
    where: fee_bool_exp!
  ): fee_mutation_response

  """
  delete single row from the table: "fee"
  """
  delete_fee_by_pk(fee_id: String!): fee

  """
  delete data from the table: "grade"
  """
  delete_grade(
    """filter the rows which have to be deleted"""
    where: grade_bool_exp!
  ): grade_mutation_response

  """
  delete single row from the table: "grade"
  """
  delete_grade_by_pk(grade_id: String!): grade

  """
  delete data from the table: "locations"
  """
  delete_locations(
    """filter the rows which have to be deleted"""
    where: locations_bool_exp!
  ): locations_mutation_response

  """
  delete single row from the table: "locations"
  """
  delete_locations_by_pk(location_id: String!): locations

  """
  delete data from the table: "material"
  """
  delete_material(
    """filter the rows which have to be deleted"""
    where: material_bool_exp!
  ): material_mutation_response

  """
  delete single row from the table: "material"
  """
  delete_material_by_pk(material_id: String!): material

  """
  delete data from the table: "order"
  """
  delete_order(
    """filter the rows which have to be deleted"""
    where: order_bool_exp!
  ): order_mutation_response

  """
  delete data from the table: "order_action_log"
  """
  delete_order_action_log(
    """filter the rows which have to be deleted"""
    where: order_action_log_bool_exp!
  ): order_action_log_mutation_response

  """
  delete single row from the table: "order_action_log"
  """
  delete_order_action_log_by_pk(order_action_log_id: Int!): order_action_log

  """
  delete single row from the table: "order"
  """
  delete_order_by_pk(order_id: String!): order

  """
  delete data from the table: "order_item"
  """
  delete_order_item(
    """filter the rows which have to be deleted"""
    where: order_item_bool_exp!
  ): order_item_mutation_response

  """
  delete single row from the table: "order_item"
  """
  delete_order_item_by_pk(order_item_id: String!): order_item

  """
  delete data from the table: "package"
  """
  delete_package(
    """filter the rows which have to be deleted"""
    where: package_bool_exp!
  ): package_mutation_response

  """
  delete single row from the table: "package"
  """
  delete_package_by_pk(package_id: String!): package

  """
  delete data from the table: "package_course"
  """
  delete_package_course(
    """filter the rows which have to be deleted"""
    where: package_course_bool_exp!
  ): package_course_mutation_response

  """
  delete single row from the table: "package_course"
  """
  delete_package_course_by_pk(course_id: String!, package_id: String!): package_course

  """
  delete data from the table: "package_course_fee"
  """
  delete_package_course_fee(
    """filter the rows which have to be deleted"""
    where: package_course_fee_bool_exp!
  ): package_course_fee_mutation_response

  """
  delete single row from the table: "package_course_fee"
  """
  delete_package_course_fee_by_pk(course_id: String!, fee_id: String!, package_id: String!): package_course_fee

  """
  delete data from the table: "package_course_material"
  """
  delete_package_course_material(
    """filter the rows which have to be deleted"""
    where: package_course_material_bool_exp!
  ): package_course_material_mutation_response

  """
  delete single row from the table: "package_course_material"
  """
  delete_package_course_material_by_pk(course_id: String!, material_id: String!, package_id: String!): package_course_material

  """
  delete data from the table: "product"
  """
  delete_product(
    """filter the rows which have to be deleted"""
    where: product_bool_exp!
  ): product_mutation_response

  """
  delete single row from the table: "product"
  """
  delete_product_by_pk(product_id: String!): product

  """
  delete data from the table: "product_grade"
  """
  delete_product_grade(
    """filter the rows which have to be deleted"""
    where: product_grade_bool_exp!
  ): product_grade_mutation_response

  """
  delete single row from the table: "product_grade"
  """
  delete_product_grade_by_pk(grade_id: Int!, product_id: String!): product_grade

  """
  delete data from the table: "product_location"
  """
  delete_product_location(
    """filter the rows which have to be deleted"""
    where: product_location_bool_exp!
  ): product_location_mutation_response

  """
  delete single row from the table: "product_location"
  """
  delete_product_location_by_pk(location_id: String!, product_id: String!): product_location

  """
  delete data from the table: "product_price"
  """
  delete_product_price(
    """filter the rows which have to be deleted"""
    where: product_price_bool_exp!
  ): product_price_mutation_response

  """
  delete single row from the table: "product_price"
  """
  delete_product_price_by_pk(product_price_id: Int!): product_price

  """
  delete data from the table: "product_setting"
  """
  delete_product_setting(
    """filter the rows which have to be deleted"""
    where: product_setting_bool_exp!
  ): product_setting_mutation_response

  """
  delete single row from the table: "product_setting"
  """
  delete_product_setting_by_pk(product_id: String!): product_setting

  """
  delete data from the table: "student_package_class"
  """
  delete_student_package_class(
    """filter the rows which have to be deleted"""
    where: student_package_class_bool_exp!
  ): student_package_class_mutation_response

  """
  delete single row from the table: "student_package_class"
  """
  delete_student_package_class_by_pk(class_id: String!, course_id: String!, location_id: String!, student_id: String!, student_package_id: String!): student_package_class

  """
  delete data from the table: "student_packages"
  """
  delete_student_packages(
    """filter the rows which have to be deleted"""
    where: student_packages_bool_exp!
  ): student_packages_mutation_response

  """
  delete single row from the table: "student_packages"
  """
  delete_student_packages_by_pk(student_package_id: String!): student_packages

  """
  delete data from the table: "student_product"
  """
  delete_student_product(
    """filter the rows which have to be deleted"""
    where: student_product_bool_exp!
  ): student_product_mutation_response

  """
  delete single row from the table: "student_product"
  """
  delete_student_product_by_pk(student_product_id: String!): student_product

  """
  delete data from the table: "tax"
  """
  delete_tax(
    """filter the rows which have to be deleted"""
    where: tax_bool_exp!
  ): tax_mutation_response

  """
  delete single row from the table: "tax"
  """
  delete_tax_by_pk(tax_id: String!): tax

  """
  delete data from the table: "users"
  """
  delete_users(
    """filter the rows which have to be deleted"""
    where: users_bool_exp!
  ): users_mutation_response

  """
  delete single row from the table: "users"
  """
  delete_users_by_pk(user_id: String!): users

  """
  insert data into the table: "bill_item"
  """
  insert_bill_item(
    """the rows to be inserted"""
    objects: [bill_item_insert_input!]!

    """on conflict condition"""
    on_conflict: bill_item_on_conflict
  ): bill_item_mutation_response

  """
  insert a single row into the table: "bill_item"
  """
  insert_bill_item_one(
    """the row to be inserted"""
    object: bill_item_insert_input!

    """on conflict condition"""
    on_conflict: bill_item_on_conflict
  ): bill_item

  """
  insert data into the table: "billing_ratio"
  """
  insert_billing_ratio(
    """the rows to be inserted"""
    objects: [billing_ratio_insert_input!]!

    """on conflict condition"""
    on_conflict: billing_ratio_on_conflict
  ): billing_ratio_mutation_response

  """
  insert a single row into the table: "billing_ratio"
  """
  insert_billing_ratio_one(
    """the row to be inserted"""
    object: billing_ratio_insert_input!

    """on conflict condition"""
    on_conflict: billing_ratio_on_conflict
  ): billing_ratio

  """
  insert data into the table: "billing_schedule"
  """
  insert_billing_schedule(
    """the rows to be inserted"""
    objects: [billing_schedule_insert_input!]!

    """on conflict condition"""
    on_conflict: billing_schedule_on_conflict
  ): billing_schedule_mutation_response

  """
  insert a single row into the table: "billing_schedule"
  """
  insert_billing_schedule_one(
    """the row to be inserted"""
    object: billing_schedule_insert_input!

    """on conflict condition"""
    on_conflict: billing_schedule_on_conflict
  ): billing_schedule

  """
  insert data into the table: "billing_schedule_period"
  """
  insert_billing_schedule_period(
    """the rows to be inserted"""
    objects: [billing_schedule_period_insert_input!]!

    """on conflict condition"""
    on_conflict: billing_schedule_period_on_conflict
  ): billing_schedule_period_mutation_response

  """
  insert a single row into the table: "billing_schedule_period"
  """
  insert_billing_schedule_period_one(
    """the row to be inserted"""
    object: billing_schedule_period_insert_input!

    """on conflict condition"""
    on_conflict: billing_schedule_period_on_conflict
  ): billing_schedule_period

  """
  insert data into the table: "courses"
  """
  insert_courses(
    """the rows to be inserted"""
    objects: [courses_insert_input!]!

    """on conflict condition"""
    on_conflict: courses_on_conflict
  ): courses_mutation_response

  """
  insert a single row into the table: "courses"
  """
  insert_courses_one(
    """the row to be inserted"""
    object: courses_insert_input!

    """on conflict condition"""
    on_conflict: courses_on_conflict
  ): courses

  """
  insert data into the table: "discount"
  """
  insert_discount(
    """the rows to be inserted"""
    objects: [discount_insert_input!]!

    """on conflict condition"""
    on_conflict: discount_on_conflict
  ): discount_mutation_response

  """
  insert a single row into the table: "discount"
  """
  insert_discount_one(
    """the row to be inserted"""
    object: discount_insert_input!

    """on conflict condition"""
    on_conflict: discount_on_conflict
  ): discount

  """
  insert data into the table: "fee"
  """
  insert_fee(
    """the rows to be inserted"""
    objects: [fee_insert_input!]!

    """on conflict condition"""
    on_conflict: fee_on_conflict
  ): fee_mutation_response

  """
  insert a single row into the table: "fee"
  """
  insert_fee_one(
    """the row to be inserted"""
    object: fee_insert_input!

    """on conflict condition"""
    on_conflict: fee_on_conflict
  ): fee

  """
  insert data into the table: "grade"
  """
  insert_grade(
    """the rows to be inserted"""
    objects: [grade_insert_input!]!

    """on conflict condition"""
    on_conflict: grade_on_conflict
  ): grade_mutation_response

  """
  insert a single row into the table: "grade"
  """
  insert_grade_one(
    """the row to be inserted"""
    object: grade_insert_input!

    """on conflict condition"""
    on_conflict: grade_on_conflict
  ): grade

  """
  insert data into the table: "locations"
  """
  insert_locations(
    """the rows to be inserted"""
    objects: [locations_insert_input!]!

    """on conflict condition"""
    on_conflict: locations_on_conflict
  ): locations_mutation_response

  """
  insert a single row into the table: "locations"
  """
  insert_locations_one(
    """the row to be inserted"""
    object: locations_insert_input!

    """on conflict condition"""
    on_conflict: locations_on_conflict
  ): locations

  """
  insert data into the table: "material"
  """
  insert_material(
    """the rows to be inserted"""
    objects: [material_insert_input!]!

    """on conflict condition"""
    on_conflict: material_on_conflict
  ): material_mutation_response

  """
  insert a single row into the table: "material"
  """
  insert_material_one(
    """the row to be inserted"""
    object: material_insert_input!

    """on conflict condition"""
    on_conflict: material_on_conflict
  ): material

  """
  insert data into the table: "order"
  """
  insert_order(
    """the rows to be inserted"""
    objects: [order_insert_input!]!

    """on conflict condition"""
    on_conflict: order_on_conflict
  ): order_mutation_response

  """
  insert data into the table: "order_action_log"
  """
  insert_order_action_log(
    """the rows to be inserted"""
    objects: [order_action_log_insert_input!]!

    """on conflict condition"""
    on_conflict: order_action_log_on_conflict
  ): order_action_log_mutation_response

  """
  insert a single row into the table: "order_action_log"
  """
  insert_order_action_log_one(
    """the row to be inserted"""
    object: order_action_log_insert_input!

    """on conflict condition"""
    on_conflict: order_action_log_on_conflict
  ): order_action_log

  """
  insert data into the table: "order_item"
  """
  insert_order_item(
    """the rows to be inserted"""
    objects: [order_item_insert_input!]!

    """on conflict condition"""
    on_conflict: order_item_on_conflict
  ): order_item_mutation_response

  """
  insert a single row into the table: "order_item"
  """
  insert_order_item_one(
    """the row to be inserted"""
    object: order_item_insert_input!

    """on conflict condition"""
    on_conflict: order_item_on_conflict
  ): order_item

  """
  insert a single row into the table: "order"
  """
  insert_order_one(
    """the row to be inserted"""
    object: order_insert_input!

    """on conflict condition"""
    on_conflict: order_on_conflict
  ): order

  """
  insert data into the table: "package"
  """
  insert_package(
    """the rows to be inserted"""
    objects: [package_insert_input!]!

    """on conflict condition"""
    on_conflict: package_on_conflict
  ): package_mutation_response

  """
  insert data into the table: "package_course"
  """
  insert_package_course(
    """the rows to be inserted"""
    objects: [package_course_insert_input!]!

    """on conflict condition"""
    on_conflict: package_course_on_conflict
  ): package_course_mutation_response

  """
  insert data into the table: "package_course_fee"
  """
  insert_package_course_fee(
    """the rows to be inserted"""
    objects: [package_course_fee_insert_input!]!

    """on conflict condition"""
    on_conflict: package_course_fee_on_conflict
  ): package_course_fee_mutation_response

  """
  insert a single row into the table: "package_course_fee"
  """
  insert_package_course_fee_one(
    """the row to be inserted"""
    object: package_course_fee_insert_input!

    """on conflict condition"""
    on_conflict: package_course_fee_on_conflict
  ): package_course_fee

  """
  insert data into the table: "package_course_material"
  """
  insert_package_course_material(
    """the rows to be inserted"""
    objects: [package_course_material_insert_input!]!

    """on conflict condition"""
    on_conflict: package_course_material_on_conflict
  ): package_course_material_mutation_response

  """
  insert a single row into the table: "package_course_material"
  """
  insert_package_course_material_one(
    """the row to be inserted"""
    object: package_course_material_insert_input!

    """on conflict condition"""
    on_conflict: package_course_material_on_conflict
  ): package_course_material

  """
  insert a single row into the table: "package_course"
  """
  insert_package_course_one(
    """the row to be inserted"""
    object: package_course_insert_input!

    """on conflict condition"""
    on_conflict: package_course_on_conflict
  ): package_course

  """
  insert a single row into the table: "package"
  """
  insert_package_one(
    """the row to be inserted"""
    object: package_insert_input!

    """on conflict condition"""
    on_conflict: package_on_conflict
  ): package

  """
  insert data into the table: "product"
  """
  insert_product(
    """the rows to be inserted"""
    objects: [product_insert_input!]!

    """on conflict condition"""
    on_conflict: product_on_conflict
  ): product_mutation_response

  """
  insert data into the table: "product_grade"
  """
  insert_product_grade(
    """the rows to be inserted"""
    objects: [product_grade_insert_input!]!

    """on conflict condition"""
    on_conflict: product_grade_on_conflict
  ): product_grade_mutation_response

  """
  insert a single row into the table: "product_grade"
  """
  insert_product_grade_one(
    """the row to be inserted"""
    object: product_grade_insert_input!

    """on conflict condition"""
    on_conflict: product_grade_on_conflict
  ): product_grade

  """
  insert data into the table: "product_location"
  """
  insert_product_location(
    """the rows to be inserted"""
    objects: [product_location_insert_input!]!

    """on conflict condition"""
    on_conflict: product_location_on_conflict
  ): product_location_mutation_response

  """
  insert a single row into the table: "product_location"
  """
  insert_product_location_one(
    """the row to be inserted"""
    object: product_location_insert_input!

    """on conflict condition"""
    on_conflict: product_location_on_conflict
  ): product_location

  """
  insert a single row into the table: "product"
  """
  insert_product_one(
    """the row to be inserted"""
    object: product_insert_input!

    """on conflict condition"""
    on_conflict: product_on_conflict
  ): product

  """
  insert data into the table: "product_price"
  """
  insert_product_price(
    """the rows to be inserted"""
    objects: [product_price_insert_input!]!

    """on conflict condition"""
    on_conflict: product_price_on_conflict
  ): product_price_mutation_response

  """
  insert a single row into the table: "product_price"
  """
  insert_product_price_one(
    """the row to be inserted"""
    object: product_price_insert_input!

    """on conflict condition"""
    on_conflict: product_price_on_conflict
  ): product_price

  """
  insert data into the table: "product_setting"
  """
  insert_product_setting(
    """the rows to be inserted"""
    objects: [product_setting_insert_input!]!

    """on conflict condition"""
    on_conflict: product_setting_on_conflict
  ): product_setting_mutation_response

  """
  insert a single row into the table: "product_setting"
  """
  insert_product_setting_one(
    """the row to be inserted"""
    object: product_setting_insert_input!

    """on conflict condition"""
    on_conflict: product_setting_on_conflict
  ): product_setting

  """
  insert data into the table: "student_package_class"
  """
  insert_student_package_class(
    """the rows to be inserted"""
    objects: [student_package_class_insert_input!]!

    """on conflict condition"""
    on_conflict: student_package_class_on_conflict
  ): student_package_class_mutation_response

  """
  insert a single row into the table: "student_package_class"
  """
  insert_student_package_class_one(
    """the row to be inserted"""
    object: student_package_class_insert_input!

    """on conflict condition"""
    on_conflict: student_package_class_on_conflict
  ): student_package_class

  """
  insert data into the table: "student_packages"
  """
  insert_student_packages(
    """the rows to be inserted"""
    objects: [student_packages_insert_input!]!

    """on conflict condition"""
    on_conflict: student_packages_on_conflict
  ): student_packages_mutation_response

  """
  insert a single row into the table: "student_packages"
  """
  insert_student_packages_one(
    """the row to be inserted"""
    object: student_packages_insert_input!

    """on conflict condition"""
    on_conflict: student_packages_on_conflict
  ): student_packages

  """
  insert data into the table: "student_product"
  """
  insert_student_product(
    """the rows to be inserted"""
    objects: [student_product_insert_input!]!

    """on conflict condition"""
    on_conflict: student_product_on_conflict
  ): student_product_mutation_response

  """
  insert a single row into the table: "student_product"
  """
  insert_student_product_one(
    """the row to be inserted"""
    object: student_product_insert_input!

    """on conflict condition"""
    on_conflict: student_product_on_conflict
  ): student_product

  """
  insert data into the table: "tax"
  """
  insert_tax(
    """the rows to be inserted"""
    objects: [tax_insert_input!]!

    """on conflict condition"""
    on_conflict: tax_on_conflict
  ): tax_mutation_response

  """
  insert a single row into the table: "tax"
  """
  insert_tax_one(
    """the row to be inserted"""
    object: tax_insert_input!

    """on conflict condition"""
    on_conflict: tax_on_conflict
  ): tax

  """
  insert data into the table: "users"
  """
  insert_users(
    """the rows to be inserted"""
    objects: [users_insert_input!]!

    """on conflict condition"""
    on_conflict: users_on_conflict
  ): users_mutation_response

  """
  insert a single row into the table: "users"
  """
  insert_users_one(
    """the row to be inserted"""
    object: users_insert_input!

    """on conflict condition"""
    on_conflict: users_on_conflict
  ): users

  """
  update data of the table: "bill_item"
  """
  update_bill_item(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: bill_item_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: bill_item_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: bill_item_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: bill_item_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: bill_item_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: bill_item_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: bill_item_set_input

    """filter the rows which have to be updated"""
    where: bill_item_bool_exp!
  ): bill_item_mutation_response

  """
  update single row of the table: "bill_item"
  """
  update_bill_item_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: bill_item_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: bill_item_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: bill_item_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: bill_item_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: bill_item_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: bill_item_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: bill_item_set_input
    pk_columns: bill_item_pk_columns_input!
  ): bill_item

  """
  update data of the table: "billing_ratio"
  """
  update_billing_ratio(
    """increments the integer columns with given value of the filtered values"""
    _inc: billing_ratio_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: billing_ratio_set_input

    """filter the rows which have to be updated"""
    where: billing_ratio_bool_exp!
  ): billing_ratio_mutation_response

  """
  update single row of the table: "billing_ratio"
  """
  update_billing_ratio_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: billing_ratio_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: billing_ratio_set_input
    pk_columns: billing_ratio_pk_columns_input!
  ): billing_ratio

  """
  update data of the table: "billing_schedule"
  """
  update_billing_schedule(
    """sets the columns of the filtered rows to the given values"""
    _set: billing_schedule_set_input

    """filter the rows which have to be updated"""
    where: billing_schedule_bool_exp!
  ): billing_schedule_mutation_response

  """
  update single row of the table: "billing_schedule"
  """
  update_billing_schedule_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: billing_schedule_set_input
    pk_columns: billing_schedule_pk_columns_input!
  ): billing_schedule

  """
  update data of the table: "billing_schedule_period"
  """
  update_billing_schedule_period(
    """sets the columns of the filtered rows to the given values"""
    _set: billing_schedule_period_set_input

    """filter the rows which have to be updated"""
    where: billing_schedule_period_bool_exp!
  ): billing_schedule_period_mutation_response

  """
  update single row of the table: "billing_schedule_period"
  """
  update_billing_schedule_period_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: billing_schedule_period_set_input
    pk_columns: billing_schedule_period_pk_columns_input!
  ): billing_schedule_period

  """
  update data of the table: "courses"
  """
  update_courses(
    """increments the integer columns with given value of the filtered values"""
    _inc: courses_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: courses_set_input

    """filter the rows which have to be updated"""
    where: courses_bool_exp!
  ): courses_mutation_response

  """
  update single row of the table: "courses"
  """
  update_courses_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: courses_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: courses_set_input
    pk_columns: courses_pk_columns_input!
  ): courses

  """
  update data of the table: "discount"
  """
  update_discount(
    """increments the integer columns with given value of the filtered values"""
    _inc: discount_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: discount_set_input

    """filter the rows which have to be updated"""
    where: discount_bool_exp!
  ): discount_mutation_response

  """
  update single row of the table: "discount"
  """
  update_discount_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: discount_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: discount_set_input
    pk_columns: discount_pk_columns_input!
  ): discount

  """
  update data of the table: "fee"
  """
  update_fee(
    """sets the columns of the filtered rows to the given values"""
    _set: fee_set_input

    """filter the rows which have to be updated"""
    where: fee_bool_exp!
  ): fee_mutation_response

  """
  update single row of the table: "fee"
  """
  update_fee_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: fee_set_input
    pk_columns: fee_pk_columns_input!
  ): fee

  """
  update data of the table: "grade"
  """
  update_grade(
    """sets the columns of the filtered rows to the given values"""
    _set: grade_set_input

    """filter the rows which have to be updated"""
    where: grade_bool_exp!
  ): grade_mutation_response

  """
  update single row of the table: "grade"
  """
  update_grade_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: grade_set_input
    pk_columns: grade_pk_columns_input!
  ): grade

  """
  update data of the table: "locations"
  """
  update_locations(
    """sets the columns of the filtered rows to the given values"""
    _set: locations_set_input

    """filter the rows which have to be updated"""
    where: locations_bool_exp!
  ): locations_mutation_response

  """
  update single row of the table: "locations"
  """
  update_locations_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: locations_set_input
    pk_columns: locations_pk_columns_input!
  ): locations

  """
  update data of the table: "material"
  """
  update_material(
    """sets the columns of the filtered rows to the given values"""
    _set: material_set_input

    """filter the rows which have to be updated"""
    where: material_bool_exp!
  ): material_mutation_response

  """
  update single row of the table: "material"
  """
  update_material_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: material_set_input
    pk_columns: material_pk_columns_input!
  ): material

  """
  update data of the table: "order"
  """
  update_order(
    """increments the integer columns with given value of the filtered values"""
    _inc: order_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: order_set_input

    """filter the rows which have to be updated"""
    where: order_bool_exp!
  ): order_mutation_response

  """
  update data of the table: "order_action_log"
  """
  update_order_action_log(
    """increments the integer columns with given value of the filtered values"""
    _inc: order_action_log_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: order_action_log_set_input

    """filter the rows which have to be updated"""
    where: order_action_log_bool_exp!
  ): order_action_log_mutation_response

  """
  update single row of the table: "order_action_log"
  """
  update_order_action_log_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: order_action_log_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: order_action_log_set_input
    pk_columns: order_action_log_pk_columns_input!
  ): order_action_log

  """
  update single row of the table: "order"
  """
  update_order_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: order_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: order_set_input
    pk_columns: order_pk_columns_input!
  ): order

  """
  update data of the table: "order_item"
  """
  update_order_item(
    """sets the columns of the filtered rows to the given values"""
    _set: order_item_set_input

    """filter the rows which have to be updated"""
    where: order_item_bool_exp!
  ): order_item_mutation_response

  """
  update single row of the table: "order_item"
  """
  update_order_item_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: order_item_set_input
    pk_columns: order_item_pk_columns_input!
  ): order_item

  """
  update data of the table: "package"
  """
  update_package(
    """increments the integer columns with given value of the filtered values"""
    _inc: package_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: package_set_input

    """filter the rows which have to be updated"""
    where: package_bool_exp!
  ): package_mutation_response

  """
  update single row of the table: "package"
  """
  update_package_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: package_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: package_set_input
    pk_columns: package_pk_columns_input!
  ): package

  """
  update data of the table: "package_course"
  """
  update_package_course(
    """increments the integer columns with given value of the filtered values"""
    _inc: package_course_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: package_course_set_input

    """filter the rows which have to be updated"""
    where: package_course_bool_exp!
  ): package_course_mutation_response

  """
  update single row of the table: "package_course"
  """
  update_package_course_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: package_course_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: package_course_set_input
    pk_columns: package_course_pk_columns_input!
  ): package_course

  """
  update data of the table: "package_course_fee"
  """
  update_package_course_fee(
    """sets the columns of the filtered rows to the given values"""
    _set: package_course_fee_set_input

    """filter the rows which have to be updated"""
    where: package_course_fee_bool_exp!
  ): package_course_fee_mutation_response

  """
  update single row of the table: "package_course_fee"
  """
  update_package_course_fee_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: package_course_fee_set_input
    pk_columns: package_course_fee_pk_columns_input!
  ): package_course_fee

  """
  update data of the table: "package_course_material"
  """
  update_package_course_material(
    """sets the columns of the filtered rows to the given values"""
    _set: package_course_material_set_input

    """filter the rows which have to be updated"""
    where: package_course_material_bool_exp!
  ): package_course_material_mutation_response

  """
  update single row of the table: "package_course_material"
  """
  update_package_course_material_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: package_course_material_set_input
    pk_columns: package_course_material_pk_columns_input!
  ): package_course_material

  """
  update data of the table: "product"
  """
  update_product(
    """sets the columns of the filtered rows to the given values"""
    _set: product_set_input

    """filter the rows which have to be updated"""
    where: product_bool_exp!
  ): product_mutation_response

  """
  update single row of the table: "product"
  """
  update_product_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: product_set_input
    pk_columns: product_pk_columns_input!
  ): product

  """
  update data of the table: "product_grade"
  """
  update_product_grade(
    """increments the integer columns with given value of the filtered values"""
    _inc: product_grade_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: product_grade_set_input

    """filter the rows which have to be updated"""
    where: product_grade_bool_exp!
  ): product_grade_mutation_response

  """
  update single row of the table: "product_grade"
  """
  update_product_grade_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: product_grade_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: product_grade_set_input
    pk_columns: product_grade_pk_columns_input!
  ): product_grade

  """
  update data of the table: "product_location"
  """
  update_product_location(
    """sets the columns of the filtered rows to the given values"""
    _set: product_location_set_input

    """filter the rows which have to be updated"""
    where: product_location_bool_exp!
  ): product_location_mutation_response

  """
  update single row of the table: "product_location"
  """
  update_product_location_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: product_location_set_input
    pk_columns: product_location_pk_columns_input!
  ): product_location

  """
  update data of the table: "product_price"
  """
  update_product_price(
    """increments the integer columns with given value of the filtered values"""
    _inc: product_price_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: product_price_set_input

    """filter the rows which have to be updated"""
    where: product_price_bool_exp!
  ): product_price_mutation_response

  """
  update single row of the table: "product_price"
  """
  update_product_price_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: product_price_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: product_price_set_input
    pk_columns: product_price_pk_columns_input!
  ): product_price

  """
  update data of the table: "product_setting"
  """
  update_product_setting(
    """sets the columns of the filtered rows to the given values"""
    _set: product_setting_set_input

    """filter the rows which have to be updated"""
    where: product_setting_bool_exp!
  ): product_setting_mutation_response

  """
  update single row of the table: "product_setting"
  """
  update_product_setting_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: product_setting_set_input
    pk_columns: product_setting_pk_columns_input!
  ): product_setting

  """
  update data of the table: "student_package_class"
  """
  update_student_package_class(
    """sets the columns of the filtered rows to the given values"""
    _set: student_package_class_set_input

    """filter the rows which have to be updated"""
    where: student_package_class_bool_exp!
  ): student_package_class_mutation_response

  """
  update single row of the table: "student_package_class"
  """
  update_student_package_class_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: student_package_class_set_input
    pk_columns: student_package_class_pk_columns_input!
  ): student_package_class

  """
  update data of the table: "student_packages"
  """
  update_student_packages(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: student_packages_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: student_packages_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: student_packages_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: student_packages_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: student_packages_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_packages_set_input

    """filter the rows which have to be updated"""
    where: student_packages_bool_exp!
  ): student_packages_mutation_response

  """
  update single row of the table: "student_packages"
  """
  update_student_packages_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: student_packages_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: student_packages_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: student_packages_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: student_packages_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: student_packages_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_packages_set_input
    pk_columns: student_packages_pk_columns_input!
  ): student_packages

  """
  update data of the table: "student_product"
  """
  update_student_product(
    """sets the columns of the filtered rows to the given values"""
    _set: student_product_set_input

    """filter the rows which have to be updated"""
    where: student_product_bool_exp!
  ): student_product_mutation_response

  """
  update single row of the table: "student_product"
  """
  update_student_product_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: student_product_set_input
    pk_columns: student_product_pk_columns_input!
  ): student_product

  """
  update data of the table: "tax"
  """
  update_tax(
    """increments the integer columns with given value of the filtered values"""
    _inc: tax_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: tax_set_input

    """filter the rows which have to be updated"""
    where: tax_bool_exp!
  ): tax_mutation_response

  """
  update single row of the table: "tax"
  """
  update_tax_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: tax_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: tax_set_input
    pk_columns: tax_pk_columns_input!
  ): tax

  """
  update data of the table: "users"
  """
  update_users(
    """sets the columns of the filtered rows to the given values"""
    _set: users_set_input

    """filter the rows which have to be updated"""
    where: users_bool_exp!
  ): users_mutation_response

  """
  update single row of the table: "users"
  """
  update_users_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: users_set_input
    pk_columns: users_pk_columns_input!
  ): users
}

scalar numeric

"""
expression to compare columns of type numeric. All fields are combined with logical 'AND'.
"""
input numeric_comparison_exp {
  _eq: numeric
  _gt: numeric
  _gte: numeric
  _in: [numeric!]
  _is_null: Boolean
  _lt: numeric
  _lte: numeric
  _neq: numeric
  _nin: [numeric!]
}

"""
columns and relationships of "order"
"""
type order {
  created_at: timestamptz!
  location_id: String!
  order_comment: String
  order_id: String!
  order_sequence_number: Int!
  order_status: String!
  order_type: String
  resource_path: String
  student_full_name: String!
  student_id: String!
  updated_at: timestamptz!
}

"""
columns and relationships of "order_action_log"
"""
type order_action_log {
  action: String
  comment: String
  created_at: timestamptz!
  order_action_log_id: Int!
  order_id: String!
  resource_path: String
  updated_at: timestamptz!

  """An object relationship"""
  user: users!
  user_id: String!
}

"""
aggregated selection of "order_action_log"
"""
type order_action_log_aggregate {
  aggregate: order_action_log_aggregate_fields
  nodes: [order_action_log!]!
}

"""
aggregate fields of "order_action_log"
"""
type order_action_log_aggregate_fields {
  avg: order_action_log_avg_fields
  count(columns: [order_action_log_select_column!], distinct: Boolean): Int
  max: order_action_log_max_fields
  min: order_action_log_min_fields
  stddev: order_action_log_stddev_fields
  stddev_pop: order_action_log_stddev_pop_fields
  stddev_samp: order_action_log_stddev_samp_fields
  sum: order_action_log_sum_fields
  var_pop: order_action_log_var_pop_fields
  var_samp: order_action_log_var_samp_fields
  variance: order_action_log_variance_fields
}

"""
order by aggregate values of table "order_action_log"
"""
input order_action_log_aggregate_order_by {
  avg: order_action_log_avg_order_by
  count: order_by
  max: order_action_log_max_order_by
  min: order_action_log_min_order_by
  stddev: order_action_log_stddev_order_by
  stddev_pop: order_action_log_stddev_pop_order_by
  stddev_samp: order_action_log_stddev_samp_order_by
  sum: order_action_log_sum_order_by
  var_pop: order_action_log_var_pop_order_by
  var_samp: order_action_log_var_samp_order_by
  variance: order_action_log_variance_order_by
}

"""
input type for inserting array relation for remote table "order_action_log"
"""
input order_action_log_arr_rel_insert_input {
  data: [order_action_log_insert_input!]!
  on_conflict: order_action_log_on_conflict
}

"""aggregate avg on columns"""
type order_action_log_avg_fields {
  order_action_log_id: Float
}

"""
order by avg() on columns of table "order_action_log"
"""
input order_action_log_avg_order_by {
  order_action_log_id: order_by
}

"""
Boolean expression to filter rows from the table "order_action_log". All fields are combined with a logical 'AND'.
"""
input order_action_log_bool_exp {
  _and: [order_action_log_bool_exp]
  _not: order_action_log_bool_exp
  _or: [order_action_log_bool_exp]
  action: String_comparison_exp
  comment: String_comparison_exp
  created_at: timestamptz_comparison_exp
  order_action_log_id: Int_comparison_exp
  order_id: String_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
  user_id: String_comparison_exp
}

"""
unique or primary key constraints on table "order_action_log"
"""
enum order_action_log_constraint {
  """unique or primary key constraint"""
  order_action_log_pk
}

"""
input type for incrementing integer column in table "order_action_log"
"""
input order_action_log_inc_input {
  order_action_log_id: Int
}

"""
input type for inserting data into table "order_action_log"
"""
input order_action_log_insert_input {
  action: String
  comment: String
  created_at: timestamptz
  order_action_log_id: Int
  order_id: String
  resource_path: String
  updated_at: timestamptz
  user: users_obj_rel_insert_input
  user_id: String
}

"""aggregate max on columns"""
type order_action_log_max_fields {
  action: String
  comment: String
  created_at: timestamptz
  order_action_log_id: Int
  order_id: String
  resource_path: String
  updated_at: timestamptz
  user_id: String
}

"""
order by max() on columns of table "order_action_log"
"""
input order_action_log_max_order_by {
  action: order_by
  comment: order_by
  created_at: order_by
  order_action_log_id: order_by
  order_id: order_by
  resource_path: order_by
  updated_at: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type order_action_log_min_fields {
  action: String
  comment: String
  created_at: timestamptz
  order_action_log_id: Int
  order_id: String
  resource_path: String
  updated_at: timestamptz
  user_id: String
}

"""
order by min() on columns of table "order_action_log"
"""
input order_action_log_min_order_by {
  action: order_by
  comment: order_by
  created_at: order_by
  order_action_log_id: order_by
  order_id: order_by
  resource_path: order_by
  updated_at: order_by
  user_id: order_by
}

"""
response of any mutation on the table "order_action_log"
"""
type order_action_log_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [order_action_log!]!
}

"""
input type for inserting object relation for remote table "order_action_log"
"""
input order_action_log_obj_rel_insert_input {
  data: order_action_log_insert_input!
  on_conflict: order_action_log_on_conflict
}

"""
on conflict condition type for table "order_action_log"
"""
input order_action_log_on_conflict {
  constraint: order_action_log_constraint!
  update_columns: [order_action_log_update_column!]!
  where: order_action_log_bool_exp
}

"""
ordering options when selecting data from "order_action_log"
"""
input order_action_log_order_by {
  action: order_by
  comment: order_by
  created_at: order_by
  order_action_log_id: order_by
  order_id: order_by
  resource_path: order_by
  updated_at: order_by
  user: users_order_by
  user_id: order_by
}

"""
primary key columns input for table: "order_action_log"
"""
input order_action_log_pk_columns_input {
  order_action_log_id: Int!
}

"""
select columns of table "order_action_log"
"""
enum order_action_log_select_column {
  """column name"""
  action

  """column name"""
  comment

  """column name"""
  created_at

  """column name"""
  order_action_log_id

  """column name"""
  order_id

  """column name"""
  resource_path

  """column name"""
  updated_at

  """column name"""
  user_id
}

"""
input type for updating data in table "order_action_log"
"""
input order_action_log_set_input {
  action: String
  comment: String
  created_at: timestamptz
  order_action_log_id: Int
  order_id: String
  resource_path: String
  updated_at: timestamptz
  user_id: String
}

"""aggregate stddev on columns"""
type order_action_log_stddev_fields {
  order_action_log_id: Float
}

"""
order by stddev() on columns of table "order_action_log"
"""
input order_action_log_stddev_order_by {
  order_action_log_id: order_by
}

"""aggregate stddev_pop on columns"""
type order_action_log_stddev_pop_fields {
  order_action_log_id: Float
}

"""
order by stddev_pop() on columns of table "order_action_log"
"""
input order_action_log_stddev_pop_order_by {
  order_action_log_id: order_by
}

"""aggregate stddev_samp on columns"""
type order_action_log_stddev_samp_fields {
  order_action_log_id: Float
}

"""
order by stddev_samp() on columns of table "order_action_log"
"""
input order_action_log_stddev_samp_order_by {
  order_action_log_id: order_by
}

"""aggregate sum on columns"""
type order_action_log_sum_fields {
  order_action_log_id: Int
}

"""
order by sum() on columns of table "order_action_log"
"""
input order_action_log_sum_order_by {
  order_action_log_id: order_by
}

"""
update columns of table "order_action_log"
"""
enum order_action_log_update_column {
  """column name"""
  action

  """column name"""
  comment

  """column name"""
  created_at

  """column name"""
  order_action_log_id

  """column name"""
  order_id

  """column name"""
  resource_path

  """column name"""
  updated_at

  """column name"""
  user_id
}

"""aggregate var_pop on columns"""
type order_action_log_var_pop_fields {
  order_action_log_id: Float
}

"""
order by var_pop() on columns of table "order_action_log"
"""
input order_action_log_var_pop_order_by {
  order_action_log_id: order_by
}

"""aggregate var_samp on columns"""
type order_action_log_var_samp_fields {
  order_action_log_id: Float
}

"""
order by var_samp() on columns of table "order_action_log"
"""
input order_action_log_var_samp_order_by {
  order_action_log_id: order_by
}

"""aggregate variance on columns"""
type order_action_log_variance_fields {
  order_action_log_id: Float
}

"""
order by variance() on columns of table "order_action_log"
"""
input order_action_log_variance_order_by {
  order_action_log_id: order_by
}

"""
aggregated selection of "order"
"""
type order_aggregate {
  aggregate: order_aggregate_fields
  nodes: [order!]!
}

"""
aggregate fields of "order"
"""
type order_aggregate_fields {
  avg: order_avg_fields
  count(columns: [order_select_column!], distinct: Boolean): Int
  max: order_max_fields
  min: order_min_fields
  stddev: order_stddev_fields
  stddev_pop: order_stddev_pop_fields
  stddev_samp: order_stddev_samp_fields
  sum: order_sum_fields
  var_pop: order_var_pop_fields
  var_samp: order_var_samp_fields
  variance: order_variance_fields
}

"""
order by aggregate values of table "order"
"""
input order_aggregate_order_by {
  avg: order_avg_order_by
  count: order_by
  max: order_max_order_by
  min: order_min_order_by
  stddev: order_stddev_order_by
  stddev_pop: order_stddev_pop_order_by
  stddev_samp: order_stddev_samp_order_by
  sum: order_sum_order_by
  var_pop: order_var_pop_order_by
  var_samp: order_var_samp_order_by
  variance: order_variance_order_by
}

"""
input type for inserting array relation for remote table "order"
"""
input order_arr_rel_insert_input {
  data: [order_insert_input!]!
  on_conflict: order_on_conflict
}

"""aggregate avg on columns"""
type order_avg_fields {
  order_sequence_number: Float
}

"""
order by avg() on columns of table "order"
"""
input order_avg_order_by {
  order_sequence_number: order_by
}

"""
Boolean expression to filter rows from the table "order". All fields are combined with a logical 'AND'.
"""
input order_bool_exp {
  _and: [order_bool_exp]
  _not: order_bool_exp
  _or: [order_bool_exp]
  created_at: timestamptz_comparison_exp
  location_id: String_comparison_exp
  order_comment: String_comparison_exp
  order_id: String_comparison_exp
  order_sequence_number: Int_comparison_exp
  order_status: String_comparison_exp
  order_type: String_comparison_exp
  resource_path: String_comparison_exp
  student_full_name: String_comparison_exp
  student_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""column ordering options"""
enum order_by {
  """in the ascending order, nulls last"""
  asc

  """in the ascending order, nulls first"""
  asc_nulls_first

  """in the ascending order, nulls last"""
  asc_nulls_last

  """in the descending order, nulls first"""
  desc

  """in the descending order, nulls first"""
  desc_nulls_first

  """in the descending order, nulls last"""
  desc_nulls_last
}

"""
unique or primary key constraints on table "order"
"""
enum order_constraint {
  """unique or primary key constraint"""
  order_pk

  """unique or primary key constraint"""
  order_sequence_number_resource_path_unique
}

"""
input type for incrementing integer column in table "order"
"""
input order_inc_input {
  order_sequence_number: Int
}

"""
input type for inserting data into table "order"
"""
input order_insert_input {
  created_at: timestamptz
  location_id: String
  order_comment: String
  order_id: String
  order_sequence_number: Int
  order_status: String
  order_type: String
  resource_path: String
  student_full_name: String
  student_id: String
  updated_at: timestamptz
}

"""
columns and relationships of "order_item"
"""
type order_item {
  cancellation_date: timestamptz
  created_at: timestamptz!

  """An object relationship"""
  discount: discount
  discount_id: String
  effective_date: timestamptz
  order_id: String!
  order_item_id: String!

  """An object relationship"""
  product: product
  product_id: String
  product_name: String
  resource_path: String
  start_date: timestamptz
  student_product_id: String
}

"""
aggregated selection of "order_item"
"""
type order_item_aggregate {
  aggregate: order_item_aggregate_fields
  nodes: [order_item!]!
}

"""
aggregate fields of "order_item"
"""
type order_item_aggregate_fields {
  count(columns: [order_item_select_column!], distinct: Boolean): Int
  max: order_item_max_fields
  min: order_item_min_fields
}

"""
order by aggregate values of table "order_item"
"""
input order_item_aggregate_order_by {
  count: order_by
  max: order_item_max_order_by
  min: order_item_min_order_by
}

"""
input type for inserting array relation for remote table "order_item"
"""
input order_item_arr_rel_insert_input {
  data: [order_item_insert_input!]!
  on_conflict: order_item_on_conflict
}

"""
Boolean expression to filter rows from the table "order_item". All fields are combined with a logical 'AND'.
"""
input order_item_bool_exp {
  _and: [order_item_bool_exp]
  _not: order_item_bool_exp
  _or: [order_item_bool_exp]
  cancellation_date: timestamptz_comparison_exp
  created_at: timestamptz_comparison_exp
  discount: discount_bool_exp
  discount_id: String_comparison_exp
  effective_date: timestamptz_comparison_exp
  order_id: String_comparison_exp
  order_item_id: String_comparison_exp
  product: product_bool_exp
  product_id: String_comparison_exp
  product_name: String_comparison_exp
  resource_path: String_comparison_exp
  start_date: timestamptz_comparison_exp
  student_product_id: String_comparison_exp
}

"""
unique or primary key constraints on table "order_item"
"""
enum order_item_constraint {
  """unique or primary key constraint"""
  order_item_id_pk
}

"""
input type for inserting data into table "order_item"
"""
input order_item_insert_input {
  cancellation_date: timestamptz
  created_at: timestamptz
  discount: discount_obj_rel_insert_input
  discount_id: String
  effective_date: timestamptz
  order_id: String
  order_item_id: String
  product: product_obj_rel_insert_input
  product_id: String
  product_name: String
  resource_path: String
  start_date: timestamptz
  student_product_id: String
}

"""aggregate max on columns"""
type order_item_max_fields {
  cancellation_date: timestamptz
  created_at: timestamptz
  discount_id: String
  effective_date: timestamptz
  order_id: String
  order_item_id: String
  product_id: String
  product_name: String
  resource_path: String
  start_date: timestamptz
  student_product_id: String
}

"""
order by max() on columns of table "order_item"
"""
input order_item_max_order_by {
  cancellation_date: order_by
  created_at: order_by
  discount_id: order_by
  effective_date: order_by
  order_id: order_by
  order_item_id: order_by
  product_id: order_by
  product_name: order_by
  resource_path: order_by
  start_date: order_by
  student_product_id: order_by
}

"""aggregate min on columns"""
type order_item_min_fields {
  cancellation_date: timestamptz
  created_at: timestamptz
  discount_id: String
  effective_date: timestamptz
  order_id: String
  order_item_id: String
  product_id: String
  product_name: String
  resource_path: String
  start_date: timestamptz
  student_product_id: String
}

"""
order by min() on columns of table "order_item"
"""
input order_item_min_order_by {
  cancellation_date: order_by
  created_at: order_by
  discount_id: order_by
  effective_date: order_by
  order_id: order_by
  order_item_id: order_by
  product_id: order_by
  product_name: order_by
  resource_path: order_by
  start_date: order_by
  student_product_id: order_by
}

"""
response of any mutation on the table "order_item"
"""
type order_item_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [order_item!]!
}

"""
input type for inserting object relation for remote table "order_item"
"""
input order_item_obj_rel_insert_input {
  data: order_item_insert_input!
  on_conflict: order_item_on_conflict
}

"""
on conflict condition type for table "order_item"
"""
input order_item_on_conflict {
  constraint: order_item_constraint!
  update_columns: [order_item_update_column!]!
  where: order_item_bool_exp
}

"""
ordering options when selecting data from "order_item"
"""
input order_item_order_by {
  cancellation_date: order_by
  created_at: order_by
  discount: discount_order_by
  discount_id: order_by
  effective_date: order_by
  order_id: order_by
  order_item_id: order_by
  product: product_order_by
  product_id: order_by
  product_name: order_by
  resource_path: order_by
  start_date: order_by
  student_product_id: order_by
}

"""
primary key columns input for table: "order_item"
"""
input order_item_pk_columns_input {
  order_item_id: String!
}

"""
select columns of table "order_item"
"""
enum order_item_select_column {
  """column name"""
  cancellation_date

  """column name"""
  created_at

  """column name"""
  discount_id

  """column name"""
  effective_date

  """column name"""
  order_id

  """column name"""
  order_item_id

  """column name"""
  product_id

  """column name"""
  product_name

  """column name"""
  resource_path

  """column name"""
  start_date

  """column name"""
  student_product_id
}

"""
input type for updating data in table "order_item"
"""
input order_item_set_input {
  cancellation_date: timestamptz
  created_at: timestamptz
  discount_id: String
  effective_date: timestamptz
  order_id: String
  order_item_id: String
  product_id: String
  product_name: String
  resource_path: String
  start_date: timestamptz
  student_product_id: String
}

"""
update columns of table "order_item"
"""
enum order_item_update_column {
  """column name"""
  cancellation_date

  """column name"""
  created_at

  """column name"""
  discount_id

  """column name"""
  effective_date

  """column name"""
  order_id

  """column name"""
  order_item_id

  """column name"""
  product_id

  """column name"""
  product_name

  """column name"""
  resource_path

  """column name"""
  start_date

  """column name"""
  student_product_id
}

"""aggregate max on columns"""
type order_max_fields {
  created_at: timestamptz
  location_id: String
  order_comment: String
  order_id: String
  order_sequence_number: Int
  order_status: String
  order_type: String
  resource_path: String
  student_full_name: String
  student_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "order"
"""
input order_max_order_by {
  created_at: order_by
  location_id: order_by
  order_comment: order_by
  order_id: order_by
  order_sequence_number: order_by
  order_status: order_by
  order_type: order_by
  resource_path: order_by
  student_full_name: order_by
  student_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type order_min_fields {
  created_at: timestamptz
  location_id: String
  order_comment: String
  order_id: String
  order_sequence_number: Int
  order_status: String
  order_type: String
  resource_path: String
  student_full_name: String
  student_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "order"
"""
input order_min_order_by {
  created_at: order_by
  location_id: order_by
  order_comment: order_by
  order_id: order_by
  order_sequence_number: order_by
  order_status: order_by
  order_type: order_by
  resource_path: order_by
  student_full_name: order_by
  student_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "order"
"""
type order_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [order!]!
}

"""
input type for inserting object relation for remote table "order"
"""
input order_obj_rel_insert_input {
  data: order_insert_input!
  on_conflict: order_on_conflict
}

"""
on conflict condition type for table "order"
"""
input order_on_conflict {
  constraint: order_constraint!
  update_columns: [order_update_column!]!
  where: order_bool_exp
}

"""
ordering options when selecting data from "order"
"""
input order_order_by {
  created_at: order_by
  location_id: order_by
  order_comment: order_by
  order_id: order_by
  order_sequence_number: order_by
  order_status: order_by
  order_type: order_by
  resource_path: order_by
  student_full_name: order_by
  student_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "order"
"""
input order_pk_columns_input {
  order_id: String!
}

"""
select columns of table "order"
"""
enum order_select_column {
  """column name"""
  created_at

  """column name"""
  location_id

  """column name"""
  order_comment

  """column name"""
  order_id

  """column name"""
  order_sequence_number

  """column name"""
  order_status

  """column name"""
  order_type

  """column name"""
  resource_path

  """column name"""
  student_full_name

  """column name"""
  student_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "order"
"""
input order_set_input {
  created_at: timestamptz
  location_id: String
  order_comment: String
  order_id: String
  order_sequence_number: Int
  order_status: String
  order_type: String
  resource_path: String
  student_full_name: String
  student_id: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type order_stddev_fields {
  order_sequence_number: Float
}

"""
order by stddev() on columns of table "order"
"""
input order_stddev_order_by {
  order_sequence_number: order_by
}

"""aggregate stddev_pop on columns"""
type order_stddev_pop_fields {
  order_sequence_number: Float
}

"""
order by stddev_pop() on columns of table "order"
"""
input order_stddev_pop_order_by {
  order_sequence_number: order_by
}

"""aggregate stddev_samp on columns"""
type order_stddev_samp_fields {
  order_sequence_number: Float
}

"""
order by stddev_samp() on columns of table "order"
"""
input order_stddev_samp_order_by {
  order_sequence_number: order_by
}

"""aggregate sum on columns"""
type order_sum_fields {
  order_sequence_number: Int
}

"""
order by sum() on columns of table "order"
"""
input order_sum_order_by {
  order_sequence_number: order_by
}

"""
update columns of table "order"
"""
enum order_update_column {
  """column name"""
  created_at

  """column name"""
  location_id

  """column name"""
  order_comment

  """column name"""
  order_id

  """column name"""
  order_sequence_number

  """column name"""
  order_status

  """column name"""
  order_type

  """column name"""
  resource_path

  """column name"""
  student_full_name

  """column name"""
  student_id

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type order_var_pop_fields {
  order_sequence_number: Float
}

"""
order by var_pop() on columns of table "order"
"""
input order_var_pop_order_by {
  order_sequence_number: order_by
}

"""aggregate var_samp on columns"""
type order_var_samp_fields {
  order_sequence_number: Float
}

"""
order by var_samp() on columns of table "order"
"""
input order_var_samp_order_by {
  order_sequence_number: order_by
}

"""aggregate variance on columns"""
type order_variance_fields {
  order_sequence_number: Float
}

"""
order by variance() on columns of table "order"
"""
input order_variance_order_by {
  order_sequence_number: order_by
}

"""
columns and relationships of "package"
"""
type package {
  max_slot: Int!
  package_end_date: timestamptz
  package_id: String!
  package_start_date: timestamptz
  package_type: String!

  """An object relationship"""
  product: product!
  resource_path: String
}

"""
aggregated selection of "package"
"""
type package_aggregate {
  aggregate: package_aggregate_fields
  nodes: [package!]!
}

"""
aggregate fields of "package"
"""
type package_aggregate_fields {
  avg: package_avg_fields
  count(columns: [package_select_column!], distinct: Boolean): Int
  max: package_max_fields
  min: package_min_fields
  stddev: package_stddev_fields
  stddev_pop: package_stddev_pop_fields
  stddev_samp: package_stddev_samp_fields
  sum: package_sum_fields
  var_pop: package_var_pop_fields
  var_samp: package_var_samp_fields
  variance: package_variance_fields
}

"""
order by aggregate values of table "package"
"""
input package_aggregate_order_by {
  avg: package_avg_order_by
  count: order_by
  max: package_max_order_by
  min: package_min_order_by
  stddev: package_stddev_order_by
  stddev_pop: package_stddev_pop_order_by
  stddev_samp: package_stddev_samp_order_by
  sum: package_sum_order_by
  var_pop: package_var_pop_order_by
  var_samp: package_var_samp_order_by
  variance: package_variance_order_by
}

"""
input type for inserting array relation for remote table "package"
"""
input package_arr_rel_insert_input {
  data: [package_insert_input!]!
  on_conflict: package_on_conflict
}

"""aggregate avg on columns"""
type package_avg_fields {
  max_slot: Float
}

"""
order by avg() on columns of table "package"
"""
input package_avg_order_by {
  max_slot: order_by
}

"""
Boolean expression to filter rows from the table "package". All fields are combined with a logical 'AND'.
"""
input package_bool_exp {
  _and: [package_bool_exp]
  _not: package_bool_exp
  _or: [package_bool_exp]
  max_slot: Int_comparison_exp
  package_end_date: timestamptz_comparison_exp
  package_id: String_comparison_exp
  package_start_date: timestamptz_comparison_exp
  package_type: String_comparison_exp
  product: product_bool_exp
  resource_path: String_comparison_exp
}

"""
unique or primary key constraints on table "package"
"""
enum package_constraint {
  """unique or primary key constraint"""
  package_pk
}

"""
columns and relationships of "package_course"
"""
type package_course {
  course_id: String!
  course_weight: Int!
  created_at: timestamptz!
  mandatory_flag: Boolean!
  max_slots_per_course: Int!
  package_id: String!
  resource_path: String
}

"""
aggregated selection of "package_course"
"""
type package_course_aggregate {
  aggregate: package_course_aggregate_fields
  nodes: [package_course!]!
}

"""
aggregate fields of "package_course"
"""
type package_course_aggregate_fields {
  avg: package_course_avg_fields
  count(columns: [package_course_select_column!], distinct: Boolean): Int
  max: package_course_max_fields
  min: package_course_min_fields
  stddev: package_course_stddev_fields
  stddev_pop: package_course_stddev_pop_fields
  stddev_samp: package_course_stddev_samp_fields
  sum: package_course_sum_fields
  var_pop: package_course_var_pop_fields
  var_samp: package_course_var_samp_fields
  variance: package_course_variance_fields
}

"""
order by aggregate values of table "package_course"
"""
input package_course_aggregate_order_by {
  avg: package_course_avg_order_by
  count: order_by
  max: package_course_max_order_by
  min: package_course_min_order_by
  stddev: package_course_stddev_order_by
  stddev_pop: package_course_stddev_pop_order_by
  stddev_samp: package_course_stddev_samp_order_by
  sum: package_course_sum_order_by
  var_pop: package_course_var_pop_order_by
  var_samp: package_course_var_samp_order_by
  variance: package_course_variance_order_by
}

"""
input type for inserting array relation for remote table "package_course"
"""
input package_course_arr_rel_insert_input {
  data: [package_course_insert_input!]!
  on_conflict: package_course_on_conflict
}

"""aggregate avg on columns"""
type package_course_avg_fields {
  course_weight: Float
  max_slots_per_course: Float
}

"""
order by avg() on columns of table "package_course"
"""
input package_course_avg_order_by {
  course_weight: order_by
  max_slots_per_course: order_by
}

"""
Boolean expression to filter rows from the table "package_course". All fields are combined with a logical 'AND'.
"""
input package_course_bool_exp {
  _and: [package_course_bool_exp]
  _not: package_course_bool_exp
  _or: [package_course_bool_exp]
  course_id: String_comparison_exp
  course_weight: Int_comparison_exp
  created_at: timestamptz_comparison_exp
  mandatory_flag: Boolean_comparison_exp
  max_slots_per_course: Int_comparison_exp
  package_id: String_comparison_exp
  resource_path: String_comparison_exp
}

"""
unique or primary key constraints on table "package_course"
"""
enum package_course_constraint {
  """unique or primary key constraint"""
  package_course_pk
}

"""
columns and relationships of "package_course_fee"
"""
type package_course_fee {
  available_from: timestamptz
  available_until: timestamptz
  course_id: String!
  created_at: timestamptz!
  fee_id: String!
  package_id: String!
  resource_path: String
}

"""
aggregated selection of "package_course_fee"
"""
type package_course_fee_aggregate {
  aggregate: package_course_fee_aggregate_fields
  nodes: [package_course_fee!]!
}

"""
aggregate fields of "package_course_fee"
"""
type package_course_fee_aggregate_fields {
  count(columns: [package_course_fee_select_column!], distinct: Boolean): Int
  max: package_course_fee_max_fields
  min: package_course_fee_min_fields
}

"""
order by aggregate values of table "package_course_fee"
"""
input package_course_fee_aggregate_order_by {
  count: order_by
  max: package_course_fee_max_order_by
  min: package_course_fee_min_order_by
}

"""
input type for inserting array relation for remote table "package_course_fee"
"""
input package_course_fee_arr_rel_insert_input {
  data: [package_course_fee_insert_input!]!
  on_conflict: package_course_fee_on_conflict
}

"""
Boolean expression to filter rows from the table "package_course_fee". All fields are combined with a logical 'AND'.
"""
input package_course_fee_bool_exp {
  _and: [package_course_fee_bool_exp]
  _not: package_course_fee_bool_exp
  _or: [package_course_fee_bool_exp]
  available_from: timestamptz_comparison_exp
  available_until: timestamptz_comparison_exp
  course_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  fee_id: String_comparison_exp
  package_id: String_comparison_exp
  resource_path: String_comparison_exp
}

"""
unique or primary key constraints on table "package_course_fee"
"""
enum package_course_fee_constraint {
  """unique or primary key constraint"""
  package_course_fee_pk
}

"""
input type for inserting data into table "package_course_fee"
"""
input package_course_fee_insert_input {
  available_from: timestamptz
  available_until: timestamptz
  course_id: String
  created_at: timestamptz
  fee_id: String
  package_id: String
  resource_path: String
}

"""aggregate max on columns"""
type package_course_fee_max_fields {
  available_from: timestamptz
  available_until: timestamptz
  course_id: String
  created_at: timestamptz
  fee_id: String
  package_id: String
  resource_path: String
}

"""
order by max() on columns of table "package_course_fee"
"""
input package_course_fee_max_order_by {
  available_from: order_by
  available_until: order_by
  course_id: order_by
  created_at: order_by
  fee_id: order_by
  package_id: order_by
  resource_path: order_by
}

"""aggregate min on columns"""
type package_course_fee_min_fields {
  available_from: timestamptz
  available_until: timestamptz
  course_id: String
  created_at: timestamptz
  fee_id: String
  package_id: String
  resource_path: String
}

"""
order by min() on columns of table "package_course_fee"
"""
input package_course_fee_min_order_by {
  available_from: order_by
  available_until: order_by
  course_id: order_by
  created_at: order_by
  fee_id: order_by
  package_id: order_by
  resource_path: order_by
}

"""
response of any mutation on the table "package_course_fee"
"""
type package_course_fee_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [package_course_fee!]!
}

"""
input type for inserting object relation for remote table "package_course_fee"
"""
input package_course_fee_obj_rel_insert_input {
  data: package_course_fee_insert_input!
  on_conflict: package_course_fee_on_conflict
}

"""
on conflict condition type for table "package_course_fee"
"""
input package_course_fee_on_conflict {
  constraint: package_course_fee_constraint!
  update_columns: [package_course_fee_update_column!]!
  where: package_course_fee_bool_exp
}

"""
ordering options when selecting data from "package_course_fee"
"""
input package_course_fee_order_by {
  available_from: order_by
  available_until: order_by
  course_id: order_by
  created_at: order_by
  fee_id: order_by
  package_id: order_by
  resource_path: order_by
}

"""
primary key columns input for table: "package_course_fee"
"""
input package_course_fee_pk_columns_input {
  course_id: String!
  fee_id: String!
  package_id: String!
}

"""
select columns of table "package_course_fee"
"""
enum package_course_fee_select_column {
  """column name"""
  available_from

  """column name"""
  available_until

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  fee_id

  """column name"""
  package_id

  """column name"""
  resource_path
}

"""
input type for updating data in table "package_course_fee"
"""
input package_course_fee_set_input {
  available_from: timestamptz
  available_until: timestamptz
  course_id: String
  created_at: timestamptz
  fee_id: String
  package_id: String
  resource_path: String
}

"""
update columns of table "package_course_fee"
"""
enum package_course_fee_update_column {
  """column name"""
  available_from

  """column name"""
  available_until

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  fee_id

  """column name"""
  package_id

  """column name"""
  resource_path
}

"""
input type for incrementing integer column in table "package_course"
"""
input package_course_inc_input {
  course_weight: Int
  max_slots_per_course: Int
}

"""
input type for inserting data into table "package_course"
"""
input package_course_insert_input {
  course_id: String
  course_weight: Int
  created_at: timestamptz
  mandatory_flag: Boolean
  max_slots_per_course: Int
  package_id: String
  resource_path: String
}

"""
columns and relationships of "package_course_material"
"""
type package_course_material {
  available_from: timestamptz
  available_until: timestamptz
  course_id: String!
  created_at: timestamptz!
  material_id: String!
  package_id: String!
  resource_path: String
}

"""
aggregated selection of "package_course_material"
"""
type package_course_material_aggregate {
  aggregate: package_course_material_aggregate_fields
  nodes: [package_course_material!]!
}

"""
aggregate fields of "package_course_material"
"""
type package_course_material_aggregate_fields {
  count(columns: [package_course_material_select_column!], distinct: Boolean): Int
  max: package_course_material_max_fields
  min: package_course_material_min_fields
}

"""
order by aggregate values of table "package_course_material"
"""
input package_course_material_aggregate_order_by {
  count: order_by
  max: package_course_material_max_order_by
  min: package_course_material_min_order_by
}

"""
input type for inserting array relation for remote table "package_course_material"
"""
input package_course_material_arr_rel_insert_input {
  data: [package_course_material_insert_input!]!
  on_conflict: package_course_material_on_conflict
}

"""
Boolean expression to filter rows from the table "package_course_material". All fields are combined with a logical 'AND'.
"""
input package_course_material_bool_exp {
  _and: [package_course_material_bool_exp]
  _not: package_course_material_bool_exp
  _or: [package_course_material_bool_exp]
  available_from: timestamptz_comparison_exp
  available_until: timestamptz_comparison_exp
  course_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  material_id: String_comparison_exp
  package_id: String_comparison_exp
  resource_path: String_comparison_exp
}

"""
unique or primary key constraints on table "package_course_material"
"""
enum package_course_material_constraint {
  """unique or primary key constraint"""
  package_course_material_pk
}

"""
input type for inserting data into table "package_course_material"
"""
input package_course_material_insert_input {
  available_from: timestamptz
  available_until: timestamptz
  course_id: String
  created_at: timestamptz
  material_id: String
  package_id: String
  resource_path: String
}

"""aggregate max on columns"""
type package_course_material_max_fields {
  available_from: timestamptz
  available_until: timestamptz
  course_id: String
  created_at: timestamptz
  material_id: String
  package_id: String
  resource_path: String
}

"""
order by max() on columns of table "package_course_material"
"""
input package_course_material_max_order_by {
  available_from: order_by
  available_until: order_by
  course_id: order_by
  created_at: order_by
  material_id: order_by
  package_id: order_by
  resource_path: order_by
}

"""aggregate min on columns"""
type package_course_material_min_fields {
  available_from: timestamptz
  available_until: timestamptz
  course_id: String
  created_at: timestamptz
  material_id: String
  package_id: String
  resource_path: String
}

"""
order by min() on columns of table "package_course_material"
"""
input package_course_material_min_order_by {
  available_from: order_by
  available_until: order_by
  course_id: order_by
  created_at: order_by
  material_id: order_by
  package_id: order_by
  resource_path: order_by
}

"""
response of any mutation on the table "package_course_material"
"""
type package_course_material_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [package_course_material!]!
}

"""
input type for inserting object relation for remote table "package_course_material"
"""
input package_course_material_obj_rel_insert_input {
  data: package_course_material_insert_input!
  on_conflict: package_course_material_on_conflict
}

"""
on conflict condition type for table "package_course_material"
"""
input package_course_material_on_conflict {
  constraint: package_course_material_constraint!
  update_columns: [package_course_material_update_column!]!
  where: package_course_material_bool_exp
}

"""
ordering options when selecting data from "package_course_material"
"""
input package_course_material_order_by {
  available_from: order_by
  available_until: order_by
  course_id: order_by
  created_at: order_by
  material_id: order_by
  package_id: order_by
  resource_path: order_by
}

"""
primary key columns input for table: "package_course_material"
"""
input package_course_material_pk_columns_input {
  course_id: String!
  material_id: String!
  package_id: String!
}

"""
select columns of table "package_course_material"
"""
enum package_course_material_select_column {
  """column name"""
  available_from

  """column name"""
  available_until

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  material_id

  """column name"""
  package_id

  """column name"""
  resource_path
}

"""
input type for updating data in table "package_course_material"
"""
input package_course_material_set_input {
  available_from: timestamptz
  available_until: timestamptz
  course_id: String
  created_at: timestamptz
  material_id: String
  package_id: String
  resource_path: String
}

"""
update columns of table "package_course_material"
"""
enum package_course_material_update_column {
  """column name"""
  available_from

  """column name"""
  available_until

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  material_id

  """column name"""
  package_id

  """column name"""
  resource_path
}

"""aggregate max on columns"""
type package_course_max_fields {
  course_id: String
  course_weight: Int
  created_at: timestamptz
  max_slots_per_course: Int
  package_id: String
  resource_path: String
}

"""
order by max() on columns of table "package_course"
"""
input package_course_max_order_by {
  course_id: order_by
  course_weight: order_by
  created_at: order_by
  max_slots_per_course: order_by
  package_id: order_by
  resource_path: order_by
}

"""aggregate min on columns"""
type package_course_min_fields {
  course_id: String
  course_weight: Int
  created_at: timestamptz
  max_slots_per_course: Int
  package_id: String
  resource_path: String
}

"""
order by min() on columns of table "package_course"
"""
input package_course_min_order_by {
  course_id: order_by
  course_weight: order_by
  created_at: order_by
  max_slots_per_course: order_by
  package_id: order_by
  resource_path: order_by
}

"""
response of any mutation on the table "package_course"
"""
type package_course_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [package_course!]!
}

"""
input type for inserting object relation for remote table "package_course"
"""
input package_course_obj_rel_insert_input {
  data: package_course_insert_input!
  on_conflict: package_course_on_conflict
}

"""
on conflict condition type for table "package_course"
"""
input package_course_on_conflict {
  constraint: package_course_constraint!
  update_columns: [package_course_update_column!]!
  where: package_course_bool_exp
}

"""
ordering options when selecting data from "package_course"
"""
input package_course_order_by {
  course_id: order_by
  course_weight: order_by
  created_at: order_by
  mandatory_flag: order_by
  max_slots_per_course: order_by
  package_id: order_by
  resource_path: order_by
}

"""
primary key columns input for table: "package_course"
"""
input package_course_pk_columns_input {
  course_id: String!
  package_id: String!
}

"""
select columns of table "package_course"
"""
enum package_course_select_column {
  """column name"""
  course_id

  """column name"""
  course_weight

  """column name"""
  created_at

  """column name"""
  mandatory_flag

  """column name"""
  max_slots_per_course

  """column name"""
  package_id

  """column name"""
  resource_path
}

"""
input type for updating data in table "package_course"
"""
input package_course_set_input {
  course_id: String
  course_weight: Int
  created_at: timestamptz
  mandatory_flag: Boolean
  max_slots_per_course: Int
  package_id: String
  resource_path: String
}

"""aggregate stddev on columns"""
type package_course_stddev_fields {
  course_weight: Float
  max_slots_per_course: Float
}

"""
order by stddev() on columns of table "package_course"
"""
input package_course_stddev_order_by {
  course_weight: order_by
  max_slots_per_course: order_by
}

"""aggregate stddev_pop on columns"""
type package_course_stddev_pop_fields {
  course_weight: Float
  max_slots_per_course: Float
}

"""
order by stddev_pop() on columns of table "package_course"
"""
input package_course_stddev_pop_order_by {
  course_weight: order_by
  max_slots_per_course: order_by
}

"""aggregate stddev_samp on columns"""
type package_course_stddev_samp_fields {
  course_weight: Float
  max_slots_per_course: Float
}

"""
order by stddev_samp() on columns of table "package_course"
"""
input package_course_stddev_samp_order_by {
  course_weight: order_by
  max_slots_per_course: order_by
}

"""aggregate sum on columns"""
type package_course_sum_fields {
  course_weight: Int
  max_slots_per_course: Int
}

"""
order by sum() on columns of table "package_course"
"""
input package_course_sum_order_by {
  course_weight: order_by
  max_slots_per_course: order_by
}

"""
update columns of table "package_course"
"""
enum package_course_update_column {
  """column name"""
  course_id

  """column name"""
  course_weight

  """column name"""
  created_at

  """column name"""
  mandatory_flag

  """column name"""
  max_slots_per_course

  """column name"""
  package_id

  """column name"""
  resource_path
}

"""aggregate var_pop on columns"""
type package_course_var_pop_fields {
  course_weight: Float
  max_slots_per_course: Float
}

"""
order by var_pop() on columns of table "package_course"
"""
input package_course_var_pop_order_by {
  course_weight: order_by
  max_slots_per_course: order_by
}

"""aggregate var_samp on columns"""
type package_course_var_samp_fields {
  course_weight: Float
  max_slots_per_course: Float
}

"""
order by var_samp() on columns of table "package_course"
"""
input package_course_var_samp_order_by {
  course_weight: order_by
  max_slots_per_course: order_by
}

"""aggregate variance on columns"""
type package_course_variance_fields {
  course_weight: Float
  max_slots_per_course: Float
}

"""
order by variance() on columns of table "package_course"
"""
input package_course_variance_order_by {
  course_weight: order_by
  max_slots_per_course: order_by
}

"""
input type for incrementing integer column in table "package"
"""
input package_inc_input {
  max_slot: Int
}

"""
input type for inserting data into table "package"
"""
input package_insert_input {
  max_slot: Int
  package_end_date: timestamptz
  package_id: String
  package_start_date: timestamptz
  package_type: String
  product: product_obj_rel_insert_input
  resource_path: String
}

"""aggregate max on columns"""
type package_max_fields {
  max_slot: Int
  package_end_date: timestamptz
  package_id: String
  package_start_date: timestamptz
  package_type: String
  resource_path: String
}

"""
order by max() on columns of table "package"
"""
input package_max_order_by {
  max_slot: order_by
  package_end_date: order_by
  package_id: order_by
  package_start_date: order_by
  package_type: order_by
  resource_path: order_by
}

"""aggregate min on columns"""
type package_min_fields {
  max_slot: Int
  package_end_date: timestamptz
  package_id: String
  package_start_date: timestamptz
  package_type: String
  resource_path: String
}

"""
order by min() on columns of table "package"
"""
input package_min_order_by {
  max_slot: order_by
  package_end_date: order_by
  package_id: order_by
  package_start_date: order_by
  package_type: order_by
  resource_path: order_by
}

"""
response of any mutation on the table "package"
"""
type package_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [package!]!
}

"""
input type for inserting object relation for remote table "package"
"""
input package_obj_rel_insert_input {
  data: package_insert_input!
  on_conflict: package_on_conflict
}

"""
on conflict condition type for table "package"
"""
input package_on_conflict {
  constraint: package_constraint!
  update_columns: [package_update_column!]!
  where: package_bool_exp
}

"""
ordering options when selecting data from "package"
"""
input package_order_by {
  max_slot: order_by
  package_end_date: order_by
  package_id: order_by
  package_start_date: order_by
  package_type: order_by
  product: product_order_by
  resource_path: order_by
}

"""
primary key columns input for table: "package"
"""
input package_pk_columns_input {
  package_id: String!
}

"""
select columns of table "package"
"""
enum package_select_column {
  """column name"""
  max_slot

  """column name"""
  package_end_date

  """column name"""
  package_id

  """column name"""
  package_start_date

  """column name"""
  package_type

  """column name"""
  resource_path
}

"""
input type for updating data in table "package"
"""
input package_set_input {
  max_slot: Int
  package_end_date: timestamptz
  package_id: String
  package_start_date: timestamptz
  package_type: String
  resource_path: String
}

"""aggregate stddev on columns"""
type package_stddev_fields {
  max_slot: Float
}

"""
order by stddev() on columns of table "package"
"""
input package_stddev_order_by {
  max_slot: order_by
}

"""aggregate stddev_pop on columns"""
type package_stddev_pop_fields {
  max_slot: Float
}

"""
order by stddev_pop() on columns of table "package"
"""
input package_stddev_pop_order_by {
  max_slot: order_by
}

"""aggregate stddev_samp on columns"""
type package_stddev_samp_fields {
  max_slot: Float
}

"""
order by stddev_samp() on columns of table "package"
"""
input package_stddev_samp_order_by {
  max_slot: order_by
}

"""aggregate sum on columns"""
type package_sum_fields {
  max_slot: Int
}

"""
order by sum() on columns of table "package"
"""
input package_sum_order_by {
  max_slot: order_by
}

"""
update columns of table "package"
"""
enum package_update_column {
  """column name"""
  max_slot

  """column name"""
  package_end_date

  """column name"""
  package_id

  """column name"""
  package_start_date

  """column name"""
  package_type

  """column name"""
  resource_path
}

"""aggregate var_pop on columns"""
type package_var_pop_fields {
  max_slot: Float
}

"""
order by var_pop() on columns of table "package"
"""
input package_var_pop_order_by {
  max_slot: order_by
}

"""aggregate var_samp on columns"""
type package_var_samp_fields {
  max_slot: Float
}

"""
order by var_samp() on columns of table "package"
"""
input package_var_samp_order_by {
  max_slot: order_by
}

"""aggregate variance on columns"""
type package_variance_fields {
  max_slot: Float
}

"""
order by variance() on columns of table "package"
"""
input package_variance_order_by {
  max_slot: order_by
}

"""
columns and relationships of "product"
"""
type product {
  available_from: timestamptz!
  available_until: timestamptz!
  billing_schedule_id: String
  created_at: timestamptz!
  custom_billing_period: timestamptz
  disable_pro_rating_flag: Boolean!
  is_archived: Boolean!
  name: String!

  """An array relationship"""
  order_items(
    """distinct select on columns"""
    distinct_on: [order_item_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_item_order_by!]

    """filter the rows returned"""
    where: order_item_bool_exp
  ): [order_item!]!

  """An aggregated array relationship"""
  order_items_aggregate(
    """distinct select on columns"""
    distinct_on: [order_item_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_item_order_by!]

    """filter the rows returned"""
    where: order_item_bool_exp
  ): order_item_aggregate!

  """An array relationship"""
  product_fees(
    """distinct select on columns"""
    distinct_on: [fee_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [fee_order_by!]

    """filter the rows returned"""
    where: fee_bool_exp
  ): [fee!]!

  """An aggregated array relationship"""
  product_fees_aggregate(
    """distinct select on columns"""
    distinct_on: [fee_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [fee_order_by!]

    """filter the rows returned"""
    where: fee_bool_exp
  ): fee_aggregate!

  """An array relationship"""
  product_grades(
    """distinct select on columns"""
    distinct_on: [product_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_grade_order_by!]

    """filter the rows returned"""
    where: product_grade_bool_exp
  ): [product_grade!]!

  """An aggregated array relationship"""
  product_grades_aggregate(
    """distinct select on columns"""
    distinct_on: [product_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_grade_order_by!]

    """filter the rows returned"""
    where: product_grade_bool_exp
  ): product_grade_aggregate!
  product_id: String!

  """An array relationship"""
  product_locations(
    """distinct select on columns"""
    distinct_on: [product_location_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_location_order_by!]

    """filter the rows returned"""
    where: product_location_bool_exp
  ): [product_location!]!

  """An aggregated array relationship"""
  product_locations_aggregate(
    """distinct select on columns"""
    distinct_on: [product_location_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_location_order_by!]

    """filter the rows returned"""
    where: product_location_bool_exp
  ): product_location_aggregate!

  """An array relationship"""
  product_materials(
    """distinct select on columns"""
    distinct_on: [material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [material_order_by!]

    """filter the rows returned"""
    where: material_bool_exp
  ): [material!]!

  """An aggregated array relationship"""
  product_materials_aggregate(
    """distinct select on columns"""
    distinct_on: [material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [material_order_by!]

    """filter the rows returned"""
    where: material_bool_exp
  ): material_aggregate!

  """An array relationship"""
  product_packages(
    """distinct select on columns"""
    distinct_on: [package_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [package_order_by!]

    """filter the rows returned"""
    where: package_bool_exp
  ): [package!]!

  """An aggregated array relationship"""
  product_packages_aggregate(
    """distinct select on columns"""
    distinct_on: [package_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [package_order_by!]

    """filter the rows returned"""
    where: package_bool_exp
  ): package_aggregate!

  """An array relationship"""
  product_prices(
    """distinct select on columns"""
    distinct_on: [product_price_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_price_order_by!]

    """filter the rows returned"""
    where: product_price_bool_exp
  ): [product_price!]!

  """An aggregated array relationship"""
  product_prices_aggregate(
    """distinct select on columns"""
    distinct_on: [product_price_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_price_order_by!]

    """filter the rows returned"""
    where: product_price_bool_exp
  ): product_price_aggregate!

  """An array relationship"""
  product_settings(
    """distinct select on columns"""
    distinct_on: [product_setting_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_setting_order_by!]

    """filter the rows returned"""
    where: product_setting_bool_exp
  ): [product_setting!]!

  """An aggregated array relationship"""
  product_settings_aggregate(
    """distinct select on columns"""
    distinct_on: [product_setting_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_setting_order_by!]

    """filter the rows returned"""
    where: product_setting_bool_exp
  ): product_setting_aggregate!
  product_type: String!
  remarks: String
  resource_path: String
  tax_id: String
  updated_at: timestamptz!
}

"""
aggregated selection of "product"
"""
type product_aggregate {
  aggregate: product_aggregate_fields
  nodes: [product!]!
}

"""
aggregate fields of "product"
"""
type product_aggregate_fields {
  count(columns: [product_select_column!], distinct: Boolean): Int
  max: product_max_fields
  min: product_min_fields
}

"""
order by aggregate values of table "product"
"""
input product_aggregate_order_by {
  count: order_by
  max: product_max_order_by
  min: product_min_order_by
}

"""
input type for inserting array relation for remote table "product"
"""
input product_arr_rel_insert_input {
  data: [product_insert_input!]!
  on_conflict: product_on_conflict
}

"""
Boolean expression to filter rows from the table "product". All fields are combined with a logical 'AND'.
"""
input product_bool_exp {
  _and: [product_bool_exp]
  _not: product_bool_exp
  _or: [product_bool_exp]
  available_from: timestamptz_comparison_exp
  available_until: timestamptz_comparison_exp
  billing_schedule_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  custom_billing_period: timestamptz_comparison_exp
  disable_pro_rating_flag: Boolean_comparison_exp
  is_archived: Boolean_comparison_exp
  name: String_comparison_exp
  order_items: order_item_bool_exp
  product_fees: fee_bool_exp
  product_grades: product_grade_bool_exp
  product_id: String_comparison_exp
  product_locations: product_location_bool_exp
  product_materials: material_bool_exp
  product_packages: package_bool_exp
  product_prices: product_price_bool_exp
  product_settings: product_setting_bool_exp
  product_type: String_comparison_exp
  remarks: String_comparison_exp
  resource_path: String_comparison_exp
  tax_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "product"
"""
enum product_constraint {
  """unique or primary key constraint"""
  product_pk
}

"""
columns and relationships of "product_grade"
"""
type product_grade {
  created_at: timestamptz!
  grade_id: Int!

  """An object relationship"""
  product: product!
  product_id: String!
  resource_path: String
}

"""
aggregated selection of "product_grade"
"""
type product_grade_aggregate {
  aggregate: product_grade_aggregate_fields
  nodes: [product_grade!]!
}

"""
aggregate fields of "product_grade"
"""
type product_grade_aggregate_fields {
  avg: product_grade_avg_fields
  count(columns: [product_grade_select_column!], distinct: Boolean): Int
  max: product_grade_max_fields
  min: product_grade_min_fields
  stddev: product_grade_stddev_fields
  stddev_pop: product_grade_stddev_pop_fields
  stddev_samp: product_grade_stddev_samp_fields
  sum: product_grade_sum_fields
  var_pop: product_grade_var_pop_fields
  var_samp: product_grade_var_samp_fields
  variance: product_grade_variance_fields
}

"""
order by aggregate values of table "product_grade"
"""
input product_grade_aggregate_order_by {
  avg: product_grade_avg_order_by
  count: order_by
  max: product_grade_max_order_by
  min: product_grade_min_order_by
  stddev: product_grade_stddev_order_by
  stddev_pop: product_grade_stddev_pop_order_by
  stddev_samp: product_grade_stddev_samp_order_by
  sum: product_grade_sum_order_by
  var_pop: product_grade_var_pop_order_by
  var_samp: product_grade_var_samp_order_by
  variance: product_grade_variance_order_by
}

"""
input type for inserting array relation for remote table "product_grade"
"""
input product_grade_arr_rel_insert_input {
  data: [product_grade_insert_input!]!
  on_conflict: product_grade_on_conflict
}

"""aggregate avg on columns"""
type product_grade_avg_fields {
  grade_id: Float
}

"""
order by avg() on columns of table "product_grade"
"""
input product_grade_avg_order_by {
  grade_id: order_by
}

"""
Boolean expression to filter rows from the table "product_grade". All fields are combined with a logical 'AND'.
"""
input product_grade_bool_exp {
  _and: [product_grade_bool_exp]
  _not: product_grade_bool_exp
  _or: [product_grade_bool_exp]
  created_at: timestamptz_comparison_exp
  grade_id: Int_comparison_exp
  product: product_bool_exp
  product_id: String_comparison_exp
  resource_path: String_comparison_exp
}

"""
unique or primary key constraints on table "product_grade"
"""
enum product_grade_constraint {
  """unique or primary key constraint"""
  product_grade_pk
}

"""
input type for incrementing integer column in table "product_grade"
"""
input product_grade_inc_input {
  grade_id: Int
}

"""
input type for inserting data into table "product_grade"
"""
input product_grade_insert_input {
  created_at: timestamptz
  grade_id: Int
  product: product_obj_rel_insert_input
  product_id: String
  resource_path: String
}

"""aggregate max on columns"""
type product_grade_max_fields {
  created_at: timestamptz
  grade_id: Int
  product_id: String
  resource_path: String
}

"""
order by max() on columns of table "product_grade"
"""
input product_grade_max_order_by {
  created_at: order_by
  grade_id: order_by
  product_id: order_by
  resource_path: order_by
}

"""aggregate min on columns"""
type product_grade_min_fields {
  created_at: timestamptz
  grade_id: Int
  product_id: String
  resource_path: String
}

"""
order by min() on columns of table "product_grade"
"""
input product_grade_min_order_by {
  created_at: order_by
  grade_id: order_by
  product_id: order_by
  resource_path: order_by
}

"""
response of any mutation on the table "product_grade"
"""
type product_grade_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [product_grade!]!
}

"""
input type for inserting object relation for remote table "product_grade"
"""
input product_grade_obj_rel_insert_input {
  data: product_grade_insert_input!
  on_conflict: product_grade_on_conflict
}

"""
on conflict condition type for table "product_grade"
"""
input product_grade_on_conflict {
  constraint: product_grade_constraint!
  update_columns: [product_grade_update_column!]!
  where: product_grade_bool_exp
}

"""
ordering options when selecting data from "product_grade"
"""
input product_grade_order_by {
  created_at: order_by
  grade_id: order_by
  product: product_order_by
  product_id: order_by
  resource_path: order_by
}

"""
primary key columns input for table: "product_grade"
"""
input product_grade_pk_columns_input {
  grade_id: Int!
  product_id: String!
}

"""
select columns of table "product_grade"
"""
enum product_grade_select_column {
  """column name"""
  created_at

  """column name"""
  grade_id

  """column name"""
  product_id

  """column name"""
  resource_path
}

"""
input type for updating data in table "product_grade"
"""
input product_grade_set_input {
  created_at: timestamptz
  grade_id: Int
  product_id: String
  resource_path: String
}

"""aggregate stddev on columns"""
type product_grade_stddev_fields {
  grade_id: Float
}

"""
order by stddev() on columns of table "product_grade"
"""
input product_grade_stddev_order_by {
  grade_id: order_by
}

"""aggregate stddev_pop on columns"""
type product_grade_stddev_pop_fields {
  grade_id: Float
}

"""
order by stddev_pop() on columns of table "product_grade"
"""
input product_grade_stddev_pop_order_by {
  grade_id: order_by
}

"""aggregate stddev_samp on columns"""
type product_grade_stddev_samp_fields {
  grade_id: Float
}

"""
order by stddev_samp() on columns of table "product_grade"
"""
input product_grade_stddev_samp_order_by {
  grade_id: order_by
}

"""aggregate sum on columns"""
type product_grade_sum_fields {
  grade_id: Int
}

"""
order by sum() on columns of table "product_grade"
"""
input product_grade_sum_order_by {
  grade_id: order_by
}

"""
update columns of table "product_grade"
"""
enum product_grade_update_column {
  """column name"""
  created_at

  """column name"""
  grade_id

  """column name"""
  product_id

  """column name"""
  resource_path
}

"""aggregate var_pop on columns"""
type product_grade_var_pop_fields {
  grade_id: Float
}

"""
order by var_pop() on columns of table "product_grade"
"""
input product_grade_var_pop_order_by {
  grade_id: order_by
}

"""aggregate var_samp on columns"""
type product_grade_var_samp_fields {
  grade_id: Float
}

"""
order by var_samp() on columns of table "product_grade"
"""
input product_grade_var_samp_order_by {
  grade_id: order_by
}

"""aggregate variance on columns"""
type product_grade_variance_fields {
  grade_id: Float
}

"""
order by variance() on columns of table "product_grade"
"""
input product_grade_variance_order_by {
  grade_id: order_by
}

"""
input type for inserting data into table "product"
"""
input product_insert_input {
  available_from: timestamptz
  available_until: timestamptz
  billing_schedule_id: String
  created_at: timestamptz
  custom_billing_period: timestamptz
  disable_pro_rating_flag: Boolean
  is_archived: Boolean
  name: String
  order_items: order_item_arr_rel_insert_input
  product_fees: fee_arr_rel_insert_input
  product_grades: product_grade_arr_rel_insert_input
  product_id: String
  product_locations: product_location_arr_rel_insert_input
  product_materials: material_arr_rel_insert_input
  product_packages: package_arr_rel_insert_input
  product_prices: product_price_arr_rel_insert_input
  product_settings: product_setting_arr_rel_insert_input
  product_type: String
  remarks: String
  resource_path: String
  tax_id: String
  updated_at: timestamptz
}

"""
columns and relationships of "product_location"
"""
type product_location {
  created_at: timestamptz!
  location_id: String!

  """An object relationship"""
  product: product!
  product_id: String!
  resource_path: String
}

"""
aggregated selection of "product_location"
"""
type product_location_aggregate {
  aggregate: product_location_aggregate_fields
  nodes: [product_location!]!
}

"""
aggregate fields of "product_location"
"""
type product_location_aggregate_fields {
  count(columns: [product_location_select_column!], distinct: Boolean): Int
  max: product_location_max_fields
  min: product_location_min_fields
}

"""
order by aggregate values of table "product_location"
"""
input product_location_aggregate_order_by {
  count: order_by
  max: product_location_max_order_by
  min: product_location_min_order_by
}

"""
input type for inserting array relation for remote table "product_location"
"""
input product_location_arr_rel_insert_input {
  data: [product_location_insert_input!]!
  on_conflict: product_location_on_conflict
}

"""
Boolean expression to filter rows from the table "product_location". All fields are combined with a logical 'AND'.
"""
input product_location_bool_exp {
  _and: [product_location_bool_exp]
  _not: product_location_bool_exp
  _or: [product_location_bool_exp]
  created_at: timestamptz_comparison_exp
  location_id: String_comparison_exp
  product: product_bool_exp
  product_id: String_comparison_exp
  resource_path: String_comparison_exp
}

"""
unique or primary key constraints on table "product_location"
"""
enum product_location_constraint {
  """unique or primary key constraint"""
  product_location_pk
}

"""
input type for inserting data into table "product_location"
"""
input product_location_insert_input {
  created_at: timestamptz
  location_id: String
  product: product_obj_rel_insert_input
  product_id: String
  resource_path: String
}

"""aggregate max on columns"""
type product_location_max_fields {
  created_at: timestamptz
  location_id: String
  product_id: String
  resource_path: String
}

"""
order by max() on columns of table "product_location"
"""
input product_location_max_order_by {
  created_at: order_by
  location_id: order_by
  product_id: order_by
  resource_path: order_by
}

"""aggregate min on columns"""
type product_location_min_fields {
  created_at: timestamptz
  location_id: String
  product_id: String
  resource_path: String
}

"""
order by min() on columns of table "product_location"
"""
input product_location_min_order_by {
  created_at: order_by
  location_id: order_by
  product_id: order_by
  resource_path: order_by
}

"""
response of any mutation on the table "product_location"
"""
type product_location_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [product_location!]!
}

"""
input type for inserting object relation for remote table "product_location"
"""
input product_location_obj_rel_insert_input {
  data: product_location_insert_input!
  on_conflict: product_location_on_conflict
}

"""
on conflict condition type for table "product_location"
"""
input product_location_on_conflict {
  constraint: product_location_constraint!
  update_columns: [product_location_update_column!]!
  where: product_location_bool_exp
}

"""
ordering options when selecting data from "product_location"
"""
input product_location_order_by {
  created_at: order_by
  location_id: order_by
  product: product_order_by
  product_id: order_by
  resource_path: order_by
}

"""
primary key columns input for table: "product_location"
"""
input product_location_pk_columns_input {
  location_id: String!
  product_id: String!
}

"""
select columns of table "product_location"
"""
enum product_location_select_column {
  """column name"""
  created_at

  """column name"""
  location_id

  """column name"""
  product_id

  """column name"""
  resource_path
}

"""
input type for updating data in table "product_location"
"""
input product_location_set_input {
  created_at: timestamptz
  location_id: String
  product_id: String
  resource_path: String
}

"""
update columns of table "product_location"
"""
enum product_location_update_column {
  """column name"""
  created_at

  """column name"""
  location_id

  """column name"""
  product_id

  """column name"""
  resource_path
}

"""aggregate max on columns"""
type product_max_fields {
  available_from: timestamptz
  available_until: timestamptz
  billing_schedule_id: String
  created_at: timestamptz
  custom_billing_period: timestamptz
  name: String
  product_id: String
  product_type: String
  remarks: String
  resource_path: String
  tax_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "product"
"""
input product_max_order_by {
  available_from: order_by
  available_until: order_by
  billing_schedule_id: order_by
  created_at: order_by
  custom_billing_period: order_by
  name: order_by
  product_id: order_by
  product_type: order_by
  remarks: order_by
  resource_path: order_by
  tax_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type product_min_fields {
  available_from: timestamptz
  available_until: timestamptz
  billing_schedule_id: String
  created_at: timestamptz
  custom_billing_period: timestamptz
  name: String
  product_id: String
  product_type: String
  remarks: String
  resource_path: String
  tax_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "product"
"""
input product_min_order_by {
  available_from: order_by
  available_until: order_by
  billing_schedule_id: order_by
  created_at: order_by
  custom_billing_period: order_by
  name: order_by
  product_id: order_by
  product_type: order_by
  remarks: order_by
  resource_path: order_by
  tax_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "product"
"""
type product_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [product!]!
}

"""
input type for inserting object relation for remote table "product"
"""
input product_obj_rel_insert_input {
  data: product_insert_input!
  on_conflict: product_on_conflict
}

"""
on conflict condition type for table "product"
"""
input product_on_conflict {
  constraint: product_constraint!
  update_columns: [product_update_column!]!
  where: product_bool_exp
}

"""
ordering options when selecting data from "product"
"""
input product_order_by {
  available_from: order_by
  available_until: order_by
  billing_schedule_id: order_by
  created_at: order_by
  custom_billing_period: order_by
  disable_pro_rating_flag: order_by
  is_archived: order_by
  name: order_by
  order_items_aggregate: order_item_aggregate_order_by
  product_fees_aggregate: fee_aggregate_order_by
  product_grades_aggregate: product_grade_aggregate_order_by
  product_id: order_by
  product_locations_aggregate: product_location_aggregate_order_by
  product_materials_aggregate: material_aggregate_order_by
  product_packages_aggregate: package_aggregate_order_by
  product_prices_aggregate: product_price_aggregate_order_by
  product_settings_aggregate: product_setting_aggregate_order_by
  product_type: order_by
  remarks: order_by
  resource_path: order_by
  tax_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "product"
"""
input product_pk_columns_input {
  product_id: String!
}

"""
columns and relationships of "product_price"
"""
type product_price {
  billing_schedule_period_id: String
  created_at: timestamptz!
  price: numeric!

  """An object relationship"""
  product: product!
  product_id: String!
  product_price_id: Int!
  quantity: Int
  resource_path: String
}

"""
aggregated selection of "product_price"
"""
type product_price_aggregate {
  aggregate: product_price_aggregate_fields
  nodes: [product_price!]!
}

"""
aggregate fields of "product_price"
"""
type product_price_aggregate_fields {
  avg: product_price_avg_fields
  count(columns: [product_price_select_column!], distinct: Boolean): Int
  max: product_price_max_fields
  min: product_price_min_fields
  stddev: product_price_stddev_fields
  stddev_pop: product_price_stddev_pop_fields
  stddev_samp: product_price_stddev_samp_fields
  sum: product_price_sum_fields
  var_pop: product_price_var_pop_fields
  var_samp: product_price_var_samp_fields
  variance: product_price_variance_fields
}

"""
order by aggregate values of table "product_price"
"""
input product_price_aggregate_order_by {
  avg: product_price_avg_order_by
  count: order_by
  max: product_price_max_order_by
  min: product_price_min_order_by
  stddev: product_price_stddev_order_by
  stddev_pop: product_price_stddev_pop_order_by
  stddev_samp: product_price_stddev_samp_order_by
  sum: product_price_sum_order_by
  var_pop: product_price_var_pop_order_by
  var_samp: product_price_var_samp_order_by
  variance: product_price_variance_order_by
}

"""
input type for inserting array relation for remote table "product_price"
"""
input product_price_arr_rel_insert_input {
  data: [product_price_insert_input!]!
  on_conflict: product_price_on_conflict
}

"""aggregate avg on columns"""
type product_price_avg_fields {
  price: Float
  product_price_id: Float
  quantity: Float
}

"""
order by avg() on columns of table "product_price"
"""
input product_price_avg_order_by {
  price: order_by
  product_price_id: order_by
  quantity: order_by
}

"""
Boolean expression to filter rows from the table "product_price". All fields are combined with a logical 'AND'.
"""
input product_price_bool_exp {
  _and: [product_price_bool_exp]
  _not: product_price_bool_exp
  _or: [product_price_bool_exp]
  billing_schedule_period_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  price: numeric_comparison_exp
  product: product_bool_exp
  product_id: String_comparison_exp
  product_price_id: Int_comparison_exp
  quantity: Int_comparison_exp
  resource_path: String_comparison_exp
}

"""
unique or primary key constraints on table "product_price"
"""
enum product_price_constraint {
  """unique or primary key constraint"""
  product_price_pk

  """unique or primary key constraint"""
  product_price_uni_idx
}

"""
input type for incrementing integer column in table "product_price"
"""
input product_price_inc_input {
  price: numeric
  product_price_id: Int
  quantity: Int
}

"""
input type for inserting data into table "product_price"
"""
input product_price_insert_input {
  billing_schedule_period_id: String
  created_at: timestamptz
  price: numeric
  product: product_obj_rel_insert_input
  product_id: String
  product_price_id: Int
  quantity: Int
  resource_path: String
}

"""aggregate max on columns"""
type product_price_max_fields {
  billing_schedule_period_id: String
  created_at: timestamptz
  price: numeric
  product_id: String
  product_price_id: Int
  quantity: Int
  resource_path: String
}

"""
order by max() on columns of table "product_price"
"""
input product_price_max_order_by {
  billing_schedule_period_id: order_by
  created_at: order_by
  price: order_by
  product_id: order_by
  product_price_id: order_by
  quantity: order_by
  resource_path: order_by
}

"""aggregate min on columns"""
type product_price_min_fields {
  billing_schedule_period_id: String
  created_at: timestamptz
  price: numeric
  product_id: String
  product_price_id: Int
  quantity: Int
  resource_path: String
}

"""
order by min() on columns of table "product_price"
"""
input product_price_min_order_by {
  billing_schedule_period_id: order_by
  created_at: order_by
  price: order_by
  product_id: order_by
  product_price_id: order_by
  quantity: order_by
  resource_path: order_by
}

"""
response of any mutation on the table "product_price"
"""
type product_price_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [product_price!]!
}

"""
input type for inserting object relation for remote table "product_price"
"""
input product_price_obj_rel_insert_input {
  data: product_price_insert_input!
  on_conflict: product_price_on_conflict
}

"""
on conflict condition type for table "product_price"
"""
input product_price_on_conflict {
  constraint: product_price_constraint!
  update_columns: [product_price_update_column!]!
  where: product_price_bool_exp
}

"""
ordering options when selecting data from "product_price"
"""
input product_price_order_by {
  billing_schedule_period_id: order_by
  created_at: order_by
  price: order_by
  product: product_order_by
  product_id: order_by
  product_price_id: order_by
  quantity: order_by
  resource_path: order_by
}

"""
primary key columns input for table: "product_price"
"""
input product_price_pk_columns_input {
  product_price_id: Int!
}

"""
select columns of table "product_price"
"""
enum product_price_select_column {
  """column name"""
  billing_schedule_period_id

  """column name"""
  created_at

  """column name"""
  price

  """column name"""
  product_id

  """column name"""
  product_price_id

  """column name"""
  quantity

  """column name"""
  resource_path
}

"""
input type for updating data in table "product_price"
"""
input product_price_set_input {
  billing_schedule_period_id: String
  created_at: timestamptz
  price: numeric
  product_id: String
  product_price_id: Int
  quantity: Int
  resource_path: String
}

"""aggregate stddev on columns"""
type product_price_stddev_fields {
  price: Float
  product_price_id: Float
  quantity: Float
}

"""
order by stddev() on columns of table "product_price"
"""
input product_price_stddev_order_by {
  price: order_by
  product_price_id: order_by
  quantity: order_by
}

"""aggregate stddev_pop on columns"""
type product_price_stddev_pop_fields {
  price: Float
  product_price_id: Float
  quantity: Float
}

"""
order by stddev_pop() on columns of table "product_price"
"""
input product_price_stddev_pop_order_by {
  price: order_by
  product_price_id: order_by
  quantity: order_by
}

"""aggregate stddev_samp on columns"""
type product_price_stddev_samp_fields {
  price: Float
  product_price_id: Float
  quantity: Float
}

"""
order by stddev_samp() on columns of table "product_price"
"""
input product_price_stddev_samp_order_by {
  price: order_by
  product_price_id: order_by
  quantity: order_by
}

"""aggregate sum on columns"""
type product_price_sum_fields {
  price: numeric
  product_price_id: Int
  quantity: Int
}

"""
order by sum() on columns of table "product_price"
"""
input product_price_sum_order_by {
  price: order_by
  product_price_id: order_by
  quantity: order_by
}

"""
update columns of table "product_price"
"""
enum product_price_update_column {
  """column name"""
  billing_schedule_period_id

  """column name"""
  created_at

  """column name"""
  price

  """column name"""
  product_id

  """column name"""
  product_price_id

  """column name"""
  quantity

  """column name"""
  resource_path
}

"""aggregate var_pop on columns"""
type product_price_var_pop_fields {
  price: Float
  product_price_id: Float
  quantity: Float
}

"""
order by var_pop() on columns of table "product_price"
"""
input product_price_var_pop_order_by {
  price: order_by
  product_price_id: order_by
  quantity: order_by
}

"""aggregate var_samp on columns"""
type product_price_var_samp_fields {
  price: Float
  product_price_id: Float
  quantity: Float
}

"""
order by var_samp() on columns of table "product_price"
"""
input product_price_var_samp_order_by {
  price: order_by
  product_price_id: order_by
  quantity: order_by
}

"""aggregate variance on columns"""
type product_price_variance_fields {
  price: Float
  product_price_id: Float
  quantity: Float
}

"""
order by variance() on columns of table "product_price"
"""
input product_price_variance_order_by {
  price: order_by
  product_price_id: order_by
  quantity: order_by
}

"""
select columns of table "product"
"""
enum product_select_column {
  """column name"""
  available_from

  """column name"""
  available_until

  """column name"""
  billing_schedule_id

  """column name"""
  created_at

  """column name"""
  custom_billing_period

  """column name"""
  disable_pro_rating_flag

  """column name"""
  is_archived

  """column name"""
  name

  """column name"""
  product_id

  """column name"""
  product_type

  """column name"""
  remarks

  """column name"""
  resource_path

  """column name"""
  tax_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "product"
"""
input product_set_input {
  available_from: timestamptz
  available_until: timestamptz
  billing_schedule_id: String
  created_at: timestamptz
  custom_billing_period: timestamptz
  disable_pro_rating_flag: Boolean
  is_archived: Boolean
  name: String
  product_id: String
  product_type: String
  remarks: String
  resource_path: String
  tax_id: String
  updated_at: timestamptz
}

"""
columns and relationships of "product_setting"
"""
type product_setting {
  created_at: timestamptz!
  is_required_for_enrollment: Boolean

  """An object relationship"""
  product: product!
  product_id: String!
  resource_path: String
  updated_at: timestamptz!
}

"""
aggregated selection of "product_setting"
"""
type product_setting_aggregate {
  aggregate: product_setting_aggregate_fields
  nodes: [product_setting!]!
}

"""
aggregate fields of "product_setting"
"""
type product_setting_aggregate_fields {
  count(columns: [product_setting_select_column!], distinct: Boolean): Int
  max: product_setting_max_fields
  min: product_setting_min_fields
}

"""
order by aggregate values of table "product_setting"
"""
input product_setting_aggregate_order_by {
  count: order_by
  max: product_setting_max_order_by
  min: product_setting_min_order_by
}

"""
input type for inserting array relation for remote table "product_setting"
"""
input product_setting_arr_rel_insert_input {
  data: [product_setting_insert_input!]!
  on_conflict: product_setting_on_conflict
}

"""
Boolean expression to filter rows from the table "product_setting". All fields are combined with a logical 'AND'.
"""
input product_setting_bool_exp {
  _and: [product_setting_bool_exp]
  _not: product_setting_bool_exp
  _or: [product_setting_bool_exp]
  created_at: timestamptz_comparison_exp
  is_required_for_enrollment: Boolean_comparison_exp
  product: product_bool_exp
  product_id: String_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "product_setting"
"""
enum product_setting_constraint {
  """unique or primary key constraint"""
  product_settings_pk
}

"""
input type for inserting data into table "product_setting"
"""
input product_setting_insert_input {
  created_at: timestamptz
  is_required_for_enrollment: Boolean
  product: product_obj_rel_insert_input
  product_id: String
  resource_path: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type product_setting_max_fields {
  created_at: timestamptz
  product_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "product_setting"
"""
input product_setting_max_order_by {
  created_at: order_by
  product_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type product_setting_min_fields {
  created_at: timestamptz
  product_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "product_setting"
"""
input product_setting_min_order_by {
  created_at: order_by
  product_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "product_setting"
"""
type product_setting_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [product_setting!]!
}

"""
input type for inserting object relation for remote table "product_setting"
"""
input product_setting_obj_rel_insert_input {
  data: product_setting_insert_input!
  on_conflict: product_setting_on_conflict
}

"""
on conflict condition type for table "product_setting"
"""
input product_setting_on_conflict {
  constraint: product_setting_constraint!
  update_columns: [product_setting_update_column!]!
  where: product_setting_bool_exp
}

"""
ordering options when selecting data from "product_setting"
"""
input product_setting_order_by {
  created_at: order_by
  is_required_for_enrollment: order_by
  product: product_order_by
  product_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "product_setting"
"""
input product_setting_pk_columns_input {
  product_id: String!
}

"""
select columns of table "product_setting"
"""
enum product_setting_select_column {
  """column name"""
  created_at

  """column name"""
  is_required_for_enrollment

  """column name"""
  product_id

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "product_setting"
"""
input product_setting_set_input {
  created_at: timestamptz
  is_required_for_enrollment: Boolean
  product_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
update columns of table "product_setting"
"""
enum product_setting_update_column {
  """column name"""
  created_at

  """column name"""
  is_required_for_enrollment

  """column name"""
  product_id

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
update columns of table "product"
"""
enum product_update_column {
  """column name"""
  available_from

  """column name"""
  available_until

  """column name"""
  billing_schedule_id

  """column name"""
  created_at

  """column name"""
  custom_billing_period

  """column name"""
  disable_pro_rating_flag

  """column name"""
  is_archived

  """column name"""
  name

  """column name"""
  product_id

  """column name"""
  product_type

  """column name"""
  remarks

  """column name"""
  resource_path

  """column name"""
  tax_id

  """column name"""
  updated_at
}

"""query root"""
type query_root {
  """
  fetch data from the table: "bill_item"
  """
  bill_item(
    """distinct select on columns"""
    distinct_on: [bill_item_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [bill_item_order_by!]

    """filter the rows returned"""
    where: bill_item_bool_exp
  ): [bill_item!]!

  """
  fetch aggregated fields from the table: "bill_item"
  """
  bill_item_aggregate(
    """distinct select on columns"""
    distinct_on: [bill_item_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [bill_item_order_by!]

    """filter the rows returned"""
    where: bill_item_bool_exp
  ): bill_item_aggregate!

  """fetch data from the table: "bill_item" using primary key columns"""
  bill_item_by_pk(bill_item_sequence_number: Int!, order_id: String!): bill_item

  """
  fetch data from the table: "billing_ratio"
  """
  billing_ratio(
    """distinct select on columns"""
    distinct_on: [billing_ratio_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [billing_ratio_order_by!]

    """filter the rows returned"""
    where: billing_ratio_bool_exp
  ): [billing_ratio!]!

  """
  fetch aggregated fields from the table: "billing_ratio"
  """
  billing_ratio_aggregate(
    """distinct select on columns"""
    distinct_on: [billing_ratio_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [billing_ratio_order_by!]

    """filter the rows returned"""
    where: billing_ratio_bool_exp
  ): billing_ratio_aggregate!

  """fetch data from the table: "billing_ratio" using primary key columns"""
  billing_ratio_by_pk(billing_ratio_id: String!): billing_ratio

  """
  fetch data from the table: "billing_schedule"
  """
  billing_schedule(
    """distinct select on columns"""
    distinct_on: [billing_schedule_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [billing_schedule_order_by!]

    """filter the rows returned"""
    where: billing_schedule_bool_exp
  ): [billing_schedule!]!

  """
  fetch aggregated fields from the table: "billing_schedule"
  """
  billing_schedule_aggregate(
    """distinct select on columns"""
    distinct_on: [billing_schedule_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [billing_schedule_order_by!]

    """filter the rows returned"""
    where: billing_schedule_bool_exp
  ): billing_schedule_aggregate!

  """
  fetch data from the table: "billing_schedule" using primary key columns
  """
  billing_schedule_by_pk(billing_schedule_id: String!): billing_schedule

  """
  fetch data from the table: "billing_schedule_period"
  """
  billing_schedule_period(
    """distinct select on columns"""
    distinct_on: [billing_schedule_period_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [billing_schedule_period_order_by!]

    """filter the rows returned"""
    where: billing_schedule_period_bool_exp
  ): [billing_schedule_period!]!

  """
  fetch aggregated fields from the table: "billing_schedule_period"
  """
  billing_schedule_period_aggregate(
    """distinct select on columns"""
    distinct_on: [billing_schedule_period_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [billing_schedule_period_order_by!]

    """filter the rows returned"""
    where: billing_schedule_period_bool_exp
  ): billing_schedule_period_aggregate!

  """
  fetch data from the table: "billing_schedule_period" using primary key columns
  """
  billing_schedule_period_by_pk(billing_schedule_period_id: String!): billing_schedule_period

  """
  fetch data from the table: "courses"
  """
  courses(
    """distinct select on columns"""
    distinct_on: [courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_order_by!]

    """filter the rows returned"""
    where: courses_bool_exp
  ): [courses!]!

  """
  fetch aggregated fields from the table: "courses"
  """
  courses_aggregate(
    """distinct select on columns"""
    distinct_on: [courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_order_by!]

    """filter the rows returned"""
    where: courses_bool_exp
  ): courses_aggregate!

  """fetch data from the table: "courses" using primary key columns"""
  courses_by_pk(course_id: String!): courses

  """
  fetch data from the table: "discount"
  """
  discount(
    """distinct select on columns"""
    distinct_on: [discount_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [discount_order_by!]

    """filter the rows returned"""
    where: discount_bool_exp
  ): [discount!]!

  """
  fetch aggregated fields from the table: "discount"
  """
  discount_aggregate(
    """distinct select on columns"""
    distinct_on: [discount_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [discount_order_by!]

    """filter the rows returned"""
    where: discount_bool_exp
  ): discount_aggregate!

  """fetch data from the table: "discount" using primary key columns"""
  discount_by_pk(discount_id: String!): discount

  """
  fetch data from the table: "fee"
  """
  fee(
    """distinct select on columns"""
    distinct_on: [fee_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [fee_order_by!]

    """filter the rows returned"""
    where: fee_bool_exp
  ): [fee!]!

  """
  fetch aggregated fields from the table: "fee"
  """
  fee_aggregate(
    """distinct select on columns"""
    distinct_on: [fee_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [fee_order_by!]

    """filter the rows returned"""
    where: fee_bool_exp
  ): fee_aggregate!

  """fetch data from the table: "fee" using primary key columns"""
  fee_by_pk(fee_id: String!): fee

  """
  fetch data from the table: "grade"
  """
  grade(
    """distinct select on columns"""
    distinct_on: [grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_order_by!]

    """filter the rows returned"""
    where: grade_bool_exp
  ): [grade!]!

  """
  fetch aggregated fields from the table: "grade"
  """
  grade_aggregate(
    """distinct select on columns"""
    distinct_on: [grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_order_by!]

    """filter the rows returned"""
    where: grade_bool_exp
  ): grade_aggregate!

  """fetch data from the table: "grade" using primary key columns"""
  grade_by_pk(grade_id: String!): grade

  """
  fetch data from the table: "locations"
  """
  locations(
    """distinct select on columns"""
    distinct_on: [locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locations_order_by!]

    """filter the rows returned"""
    where: locations_bool_exp
  ): [locations!]!

  """
  fetch aggregated fields from the table: "locations"
  """
  locations_aggregate(
    """distinct select on columns"""
    distinct_on: [locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locations_order_by!]

    """filter the rows returned"""
    where: locations_bool_exp
  ): locations_aggregate!

  """fetch data from the table: "locations" using primary key columns"""
  locations_by_pk(location_id: String!): locations

  """
  fetch data from the table: "material"
  """
  material(
    """distinct select on columns"""
    distinct_on: [material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [material_order_by!]

    """filter the rows returned"""
    where: material_bool_exp
  ): [material!]!

  """
  fetch aggregated fields from the table: "material"
  """
  material_aggregate(
    """distinct select on columns"""
    distinct_on: [material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [material_order_by!]

    """filter the rows returned"""
    where: material_bool_exp
  ): material_aggregate!

  """fetch data from the table: "material" using primary key columns"""
  material_by_pk(material_id: String!): material

  """
  fetch data from the table: "order"
  """
  order(
    """distinct select on columns"""
    distinct_on: [order_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_order_by!]

    """filter the rows returned"""
    where: order_bool_exp
  ): [order!]!

  """
  fetch data from the table: "order_action_log"
  """
  order_action_log(
    """distinct select on columns"""
    distinct_on: [order_action_log_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_action_log_order_by!]

    """filter the rows returned"""
    where: order_action_log_bool_exp
  ): [order_action_log!]!

  """
  fetch aggregated fields from the table: "order_action_log"
  """
  order_action_log_aggregate(
    """distinct select on columns"""
    distinct_on: [order_action_log_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_action_log_order_by!]

    """filter the rows returned"""
    where: order_action_log_bool_exp
  ): order_action_log_aggregate!

  """
  fetch data from the table: "order_action_log" using primary key columns
  """
  order_action_log_by_pk(order_action_log_id: Int!): order_action_log

  """
  fetch aggregated fields from the table: "order"
  """
  order_aggregate(
    """distinct select on columns"""
    distinct_on: [order_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_order_by!]

    """filter the rows returned"""
    where: order_bool_exp
  ): order_aggregate!

  """fetch data from the table: "order" using primary key columns"""
  order_by_pk(order_id: String!): order

  """
  fetch data from the table: "order_item"
  """
  order_item(
    """distinct select on columns"""
    distinct_on: [order_item_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_item_order_by!]

    """filter the rows returned"""
    where: order_item_bool_exp
  ): [order_item!]!

  """
  fetch aggregated fields from the table: "order_item"
  """
  order_item_aggregate(
    """distinct select on columns"""
    distinct_on: [order_item_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_item_order_by!]

    """filter the rows returned"""
    where: order_item_bool_exp
  ): order_item_aggregate!

  """fetch data from the table: "order_item" using primary key columns"""
  order_item_by_pk(order_item_id: String!): order_item

  """
  fetch data from the table: "package"
  """
  package(
    """distinct select on columns"""
    distinct_on: [package_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [package_order_by!]

    """filter the rows returned"""
    where: package_bool_exp
  ): [package!]!

  """
  fetch aggregated fields from the table: "package"
  """
  package_aggregate(
    """distinct select on columns"""
    distinct_on: [package_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [package_order_by!]

    """filter the rows returned"""
    where: package_bool_exp
  ): package_aggregate!

  """fetch data from the table: "package" using primary key columns"""
  package_by_pk(package_id: String!): package

  """
  fetch data from the table: "package_course"
  """
  package_course(
    """distinct select on columns"""
    distinct_on: [package_course_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [package_course_order_by!]

    """filter the rows returned"""
    where: package_course_bool_exp
  ): [package_course!]!

  """
  fetch aggregated fields from the table: "package_course"
  """
  package_course_aggregate(
    """distinct select on columns"""
    distinct_on: [package_course_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [package_course_order_by!]

    """filter the rows returned"""
    where: package_course_bool_exp
  ): package_course_aggregate!

  """fetch data from the table: "package_course" using primary key columns"""
  package_course_by_pk(course_id: String!, package_id: String!): package_course

  """
  fetch data from the table: "package_course_fee"
  """
  package_course_fee(
    """distinct select on columns"""
    distinct_on: [package_course_fee_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [package_course_fee_order_by!]

    """filter the rows returned"""
    where: package_course_fee_bool_exp
  ): [package_course_fee!]!

  """
  fetch aggregated fields from the table: "package_course_fee"
  """
  package_course_fee_aggregate(
    """distinct select on columns"""
    distinct_on: [package_course_fee_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [package_course_fee_order_by!]

    """filter the rows returned"""
    where: package_course_fee_bool_exp
  ): package_course_fee_aggregate!

  """
  fetch data from the table: "package_course_fee" using primary key columns
  """
  package_course_fee_by_pk(course_id: String!, fee_id: String!, package_id: String!): package_course_fee

  """
  fetch data from the table: "package_course_material"
  """
  package_course_material(
    """distinct select on columns"""
    distinct_on: [package_course_material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [package_course_material_order_by!]

    """filter the rows returned"""
    where: package_course_material_bool_exp
  ): [package_course_material!]!

  """
  fetch aggregated fields from the table: "package_course_material"
  """
  package_course_material_aggregate(
    """distinct select on columns"""
    distinct_on: [package_course_material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [package_course_material_order_by!]

    """filter the rows returned"""
    where: package_course_material_bool_exp
  ): package_course_material_aggregate!

  """
  fetch data from the table: "package_course_material" using primary key columns
  """
  package_course_material_by_pk(course_id: String!, material_id: String!, package_id: String!): package_course_material

  """
  fetch data from the table: "product"
  """
  product(
    """distinct select on columns"""
    distinct_on: [product_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_order_by!]

    """filter the rows returned"""
    where: product_bool_exp
  ): [product!]!

  """
  fetch aggregated fields from the table: "product"
  """
  product_aggregate(
    """distinct select on columns"""
    distinct_on: [product_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_order_by!]

    """filter the rows returned"""
    where: product_bool_exp
  ): product_aggregate!

  """fetch data from the table: "product" using primary key columns"""
  product_by_pk(product_id: String!): product

  """
  fetch data from the table: "product_grade"
  """
  product_grade(
    """distinct select on columns"""
    distinct_on: [product_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_grade_order_by!]

    """filter the rows returned"""
    where: product_grade_bool_exp
  ): [product_grade!]!

  """
  fetch aggregated fields from the table: "product_grade"
  """
  product_grade_aggregate(
    """distinct select on columns"""
    distinct_on: [product_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_grade_order_by!]

    """filter the rows returned"""
    where: product_grade_bool_exp
  ): product_grade_aggregate!

  """fetch data from the table: "product_grade" using primary key columns"""
  product_grade_by_pk(grade_id: Int!, product_id: String!): product_grade

  """
  fetch data from the table: "product_location"
  """
  product_location(
    """distinct select on columns"""
    distinct_on: [product_location_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_location_order_by!]

    """filter the rows returned"""
    where: product_location_bool_exp
  ): [product_location!]!

  """
  fetch aggregated fields from the table: "product_location"
  """
  product_location_aggregate(
    """distinct select on columns"""
    distinct_on: [product_location_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_location_order_by!]

    """filter the rows returned"""
    where: product_location_bool_exp
  ): product_location_aggregate!

  """
  fetch data from the table: "product_location" using primary key columns
  """
  product_location_by_pk(location_id: String!, product_id: String!): product_location

  """
  fetch data from the table: "product_price"
  """
  product_price(
    """distinct select on columns"""
    distinct_on: [product_price_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_price_order_by!]

    """filter the rows returned"""
    where: product_price_bool_exp
  ): [product_price!]!

  """
  fetch aggregated fields from the table: "product_price"
  """
  product_price_aggregate(
    """distinct select on columns"""
    distinct_on: [product_price_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_price_order_by!]

    """filter the rows returned"""
    where: product_price_bool_exp
  ): product_price_aggregate!

  """fetch data from the table: "product_price" using primary key columns"""
  product_price_by_pk(product_price_id: Int!): product_price

  """
  fetch data from the table: "product_setting"
  """
  product_setting(
    """distinct select on columns"""
    distinct_on: [product_setting_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_setting_order_by!]

    """filter the rows returned"""
    where: product_setting_bool_exp
  ): [product_setting!]!

  """
  fetch aggregated fields from the table: "product_setting"
  """
  product_setting_aggregate(
    """distinct select on columns"""
    distinct_on: [product_setting_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_setting_order_by!]

    """filter the rows returned"""
    where: product_setting_bool_exp
  ): product_setting_aggregate!

  """fetch data from the table: "product_setting" using primary key columns"""
  product_setting_by_pk(product_id: String!): product_setting

  """
  fetch data from the table: "student_package_class"
  """
  student_package_class(
    """distinct select on columns"""
    distinct_on: [student_package_class_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_package_class_order_by!]

    """filter the rows returned"""
    where: student_package_class_bool_exp
  ): [student_package_class!]!

  """
  fetch aggregated fields from the table: "student_package_class"
  """
  student_package_class_aggregate(
    """distinct select on columns"""
    distinct_on: [student_package_class_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_package_class_order_by!]

    """filter the rows returned"""
    where: student_package_class_bool_exp
  ): student_package_class_aggregate!

  """
  fetch data from the table: "student_package_class" using primary key columns
  """
  student_package_class_by_pk(class_id: String!, course_id: String!, location_id: String!, student_id: String!, student_package_id: String!): student_package_class

  """
  fetch data from the table: "student_packages"
  """
  student_packages(
    """distinct select on columns"""
    distinct_on: [student_packages_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_packages_order_by!]

    """filter the rows returned"""
    where: student_packages_bool_exp
  ): [student_packages!]!

  """
  fetch aggregated fields from the table: "student_packages"
  """
  student_packages_aggregate(
    """distinct select on columns"""
    distinct_on: [student_packages_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_packages_order_by!]

    """filter the rows returned"""
    where: student_packages_bool_exp
  ): student_packages_aggregate!

  """
  fetch data from the table: "student_packages" using primary key columns
  """
  student_packages_by_pk(student_package_id: String!): student_packages

  """
  fetch data from the table: "student_product"
  """
  student_product(
    """distinct select on columns"""
    distinct_on: [student_product_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_product_order_by!]

    """filter the rows returned"""
    where: student_product_bool_exp
  ): [student_product!]!

  """
  fetch aggregated fields from the table: "student_product"
  """
  student_product_aggregate(
    """distinct select on columns"""
    distinct_on: [student_product_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_product_order_by!]

    """filter the rows returned"""
    where: student_product_bool_exp
  ): student_product_aggregate!

  """fetch data from the table: "student_product" using primary key columns"""
  student_product_by_pk(student_product_id: String!): student_product

  """
  fetch data from the table: "tax"
  """
  tax(
    """distinct select on columns"""
    distinct_on: [tax_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tax_order_by!]

    """filter the rows returned"""
    where: tax_bool_exp
  ): [tax!]!

  """
  fetch aggregated fields from the table: "tax"
  """
  tax_aggregate(
    """distinct select on columns"""
    distinct_on: [tax_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tax_order_by!]

    """filter the rows returned"""
    where: tax_bool_exp
  ): tax_aggregate!

  """fetch data from the table: "tax" using primary key columns"""
  tax_by_pk(tax_id: String!): tax

  """
  fetch data from the table: "users"
  """
  users(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): [users!]!

  """
  fetch aggregated fields from the table: "users"
  """
  users_aggregate(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): users_aggregate!

  """fetch data from the table: "users" using primary key columns"""
  users_by_pk(user_id: String!): users
}

scalar smallint

"""
expression to compare columns of type smallint. All fields are combined with logical 'AND'.
"""
input smallint_comparison_exp {
  _eq: smallint
  _gt: smallint
  _gte: smallint
  _in: [smallint!]
  _is_null: Boolean
  _lt: smallint
  _lte: smallint
  _neq: smallint
  _nin: [smallint!]
}

"""
columns and relationships of "student_package_class"
"""
type student_package_class {
  class_id: String!
  course_id: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  location_id: String!
  resource_path: String
  student_id: String!
  student_package_id: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "student_package_class"
"""
type student_package_class_aggregate {
  aggregate: student_package_class_aggregate_fields
  nodes: [student_package_class!]!
}

"""
aggregate fields of "student_package_class"
"""
type student_package_class_aggregate_fields {
  count(columns: [student_package_class_select_column!], distinct: Boolean): Int
  max: student_package_class_max_fields
  min: student_package_class_min_fields
}

"""
order by aggregate values of table "student_package_class"
"""
input student_package_class_aggregate_order_by {
  count: order_by
  max: student_package_class_max_order_by
  min: student_package_class_min_order_by
}

"""
input type for inserting array relation for remote table "student_package_class"
"""
input student_package_class_arr_rel_insert_input {
  data: [student_package_class_insert_input!]!
  on_conflict: student_package_class_on_conflict
}

"""
Boolean expression to filter rows from the table "student_package_class". All fields are combined with a logical 'AND'.
"""
input student_package_class_bool_exp {
  _and: [student_package_class_bool_exp]
  _not: student_package_class_bool_exp
  _or: [student_package_class_bool_exp]
  class_id: String_comparison_exp
  course_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  location_id: String_comparison_exp
  resource_path: String_comparison_exp
  student_id: String_comparison_exp
  student_package_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "student_package_class"
"""
enum student_package_class_constraint {
  """unique or primary key constraint"""
  student_package_class_pk
}

"""
input type for inserting data into table "student_package_class"
"""
input student_package_class_insert_input {
  class_id: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  resource_path: String
  student_id: String
  student_package_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type student_package_class_max_fields {
  class_id: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  resource_path: String
  student_id: String
  student_package_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "student_package_class"
"""
input student_package_class_max_order_by {
  class_id: order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  location_id: order_by
  resource_path: order_by
  student_id: order_by
  student_package_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type student_package_class_min_fields {
  class_id: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  resource_path: String
  student_id: String
  student_package_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "student_package_class"
"""
input student_package_class_min_order_by {
  class_id: order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  location_id: order_by
  resource_path: order_by
  student_id: order_by
  student_package_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "student_package_class"
"""
type student_package_class_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [student_package_class!]!
}

"""
input type for inserting object relation for remote table "student_package_class"
"""
input student_package_class_obj_rel_insert_input {
  data: student_package_class_insert_input!
  on_conflict: student_package_class_on_conflict
}

"""
on conflict condition type for table "student_package_class"
"""
input student_package_class_on_conflict {
  constraint: student_package_class_constraint!
  update_columns: [student_package_class_update_column!]!
  where: student_package_class_bool_exp
}

"""
ordering options when selecting data from "student_package_class"
"""
input student_package_class_order_by {
  class_id: order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  location_id: order_by
  resource_path: order_by
  student_id: order_by
  student_package_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "student_package_class"
"""
input student_package_class_pk_columns_input {
  class_id: String!
  course_id: String!
  location_id: String!
  student_id: String!
  student_package_id: String!
}

"""
select columns of table "student_package_class"
"""
enum student_package_class_select_column {
  """column name"""
  class_id

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  location_id

  """column name"""
  resource_path

  """column name"""
  student_id

  """column name"""
  student_package_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "student_package_class"
"""
input student_package_class_set_input {
  class_id: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  resource_path: String
  student_id: String
  student_package_id: String
  updated_at: timestamptz
}

"""
update columns of table "student_package_class"
"""
enum student_package_class_update_column {
  """column name"""
  class_id

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  location_id

  """column name"""
  resource_path

  """column name"""
  student_id

  """column name"""
  student_package_id

  """column name"""
  updated_at
}

"""
columns and relationships of "student_packages"
"""
type student_packages {
  created_at: timestamptz!
  deleted_at: timestamptz
  end_at: timestamptz!
  is_active: Boolean!
  location_ids: _text
  package_id: String
  properties(
    """JSON select path"""
    path: String
  ): jsonb!
  resource_path: String
  start_at: timestamptz!
  student_id: String!
  student_package_id: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "student_packages"
"""
type student_packages_aggregate {
  aggregate: student_packages_aggregate_fields
  nodes: [student_packages!]!
}

"""
aggregate fields of "student_packages"
"""
type student_packages_aggregate_fields {
  count(columns: [student_packages_select_column!], distinct: Boolean): Int
  max: student_packages_max_fields
  min: student_packages_min_fields
}

"""
order by aggregate values of table "student_packages"
"""
input student_packages_aggregate_order_by {
  count: order_by
  max: student_packages_max_order_by
  min: student_packages_min_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input student_packages_append_input {
  properties: jsonb
}

"""
input type for inserting array relation for remote table "student_packages"
"""
input student_packages_arr_rel_insert_input {
  data: [student_packages_insert_input!]!
  on_conflict: student_packages_on_conflict
}

"""
Boolean expression to filter rows from the table "student_packages". All fields are combined with a logical 'AND'.
"""
input student_packages_bool_exp {
  _and: [student_packages_bool_exp]
  _not: student_packages_bool_exp
  _or: [student_packages_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  end_at: timestamptz_comparison_exp
  is_active: Boolean_comparison_exp
  location_ids: _text_comparison_exp
  package_id: String_comparison_exp
  properties: jsonb_comparison_exp
  resource_path: String_comparison_exp
  start_at: timestamptz_comparison_exp
  student_id: String_comparison_exp
  student_package_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "student_packages"
"""
enum student_packages_constraint {
  """unique or primary key constraint"""
  pk__student_packages
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input student_packages_delete_at_path_input {
  properties: [String]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input student_packages_delete_elem_input {
  properties: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input student_packages_delete_key_input {
  properties: String
}

"""
input type for inserting data into table "student_packages"
"""
input student_packages_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  end_at: timestamptz
  is_active: Boolean
  location_ids: _text
  package_id: String
  properties: jsonb
  resource_path: String
  start_at: timestamptz
  student_id: String
  student_package_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type student_packages_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  end_at: timestamptz
  package_id: String
  resource_path: String
  start_at: timestamptz
  student_id: String
  student_package_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "student_packages"
"""
input student_packages_max_order_by {
  created_at: order_by
  deleted_at: order_by
  end_at: order_by
  package_id: order_by
  resource_path: order_by
  start_at: order_by
  student_id: order_by
  student_package_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type student_packages_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  end_at: timestamptz
  package_id: String
  resource_path: String
  start_at: timestamptz
  student_id: String
  student_package_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "student_packages"
"""
input student_packages_min_order_by {
  created_at: order_by
  deleted_at: order_by
  end_at: order_by
  package_id: order_by
  resource_path: order_by
  start_at: order_by
  student_id: order_by
  student_package_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "student_packages"
"""
type student_packages_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [student_packages!]!
}

"""
input type for inserting object relation for remote table "student_packages"
"""
input student_packages_obj_rel_insert_input {
  data: student_packages_insert_input!
  on_conflict: student_packages_on_conflict
}

"""
on conflict condition type for table "student_packages"
"""
input student_packages_on_conflict {
  constraint: student_packages_constraint!
  update_columns: [student_packages_update_column!]!
  where: student_packages_bool_exp
}

"""
ordering options when selecting data from "student_packages"
"""
input student_packages_order_by {
  created_at: order_by
  deleted_at: order_by
  end_at: order_by
  is_active: order_by
  location_ids: order_by
  package_id: order_by
  properties: order_by
  resource_path: order_by
  start_at: order_by
  student_id: order_by
  student_package_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "student_packages"
"""
input student_packages_pk_columns_input {
  student_package_id: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input student_packages_prepend_input {
  properties: jsonb
}

"""
select columns of table "student_packages"
"""
enum student_packages_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_at

  """column name"""
  is_active

  """column name"""
  location_ids

  """column name"""
  package_id

  """column name"""
  properties

  """column name"""
  resource_path

  """column name"""
  start_at

  """column name"""
  student_id

  """column name"""
  student_package_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "student_packages"
"""
input student_packages_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  end_at: timestamptz
  is_active: Boolean
  location_ids: _text
  package_id: String
  properties: jsonb
  resource_path: String
  start_at: timestamptz
  student_id: String
  student_package_id: String
  updated_at: timestamptz
}

"""
update columns of table "student_packages"
"""
enum student_packages_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_at

  """column name"""
  is_active

  """column name"""
  location_ids

  """column name"""
  package_id

  """column name"""
  properties

  """column name"""
  resource_path

  """column name"""
  start_at

  """column name"""
  student_id

  """column name"""
  student_package_id

  """column name"""
  updated_at
}

"""
columns and relationships of "student_product"
"""
type student_product {
  approval_status: String
  created_at: timestamptz!
  deleted_at: timestamptz
  end_date: timestamptz
  location_id: String!
  product_id: String!
  product_status: String!
  resource_path: String
  start_date: timestamptz
  student_id: String!
  student_product_id: String!
  student_product_label: String
  upcoming_billing_date: timestamptz
  updated_at: timestamptz!
  updated_from_student_product_id: String
  updated_to_student_product_id: String
}

"""
aggregated selection of "student_product"
"""
type student_product_aggregate {
  aggregate: student_product_aggregate_fields
  nodes: [student_product!]!
}

"""
aggregate fields of "student_product"
"""
type student_product_aggregate_fields {
  count(columns: [student_product_select_column!], distinct: Boolean): Int
  max: student_product_max_fields
  min: student_product_min_fields
}

"""
order by aggregate values of table "student_product"
"""
input student_product_aggregate_order_by {
  count: order_by
  max: student_product_max_order_by
  min: student_product_min_order_by
}

"""
input type for inserting array relation for remote table "student_product"
"""
input student_product_arr_rel_insert_input {
  data: [student_product_insert_input!]!
  on_conflict: student_product_on_conflict
}

"""
Boolean expression to filter rows from the table "student_product". All fields are combined with a logical 'AND'.
"""
input student_product_bool_exp {
  _and: [student_product_bool_exp]
  _not: student_product_bool_exp
  _or: [student_product_bool_exp]
  approval_status: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  end_date: timestamptz_comparison_exp
  location_id: String_comparison_exp
  product_id: String_comparison_exp
  product_status: String_comparison_exp
  resource_path: String_comparison_exp
  start_date: timestamptz_comparison_exp
  student_id: String_comparison_exp
  student_product_id: String_comparison_exp
  student_product_label: String_comparison_exp
  upcoming_billing_date: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
  updated_from_student_product_id: String_comparison_exp
  updated_to_student_product_id: String_comparison_exp
}

"""
unique or primary key constraints on table "student_product"
"""
enum student_product_constraint {
  """unique or primary key constraint"""
  student_product_pk
}

"""
input type for inserting data into table "student_product"
"""
input student_product_insert_input {
  approval_status: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  location_id: String
  product_id: String
  product_status: String
  resource_path: String
  start_date: timestamptz
  student_id: String
  student_product_id: String
  student_product_label: String
  upcoming_billing_date: timestamptz
  updated_at: timestamptz
  updated_from_student_product_id: String
  updated_to_student_product_id: String
}

"""aggregate max on columns"""
type student_product_max_fields {
  approval_status: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  location_id: String
  product_id: String
  product_status: String
  resource_path: String
  start_date: timestamptz
  student_id: String
  student_product_id: String
  student_product_label: String
  upcoming_billing_date: timestamptz
  updated_at: timestamptz
  updated_from_student_product_id: String
  updated_to_student_product_id: String
}

"""
order by max() on columns of table "student_product"
"""
input student_product_max_order_by {
  approval_status: order_by
  created_at: order_by
  deleted_at: order_by
  end_date: order_by
  location_id: order_by
  product_id: order_by
  product_status: order_by
  resource_path: order_by
  start_date: order_by
  student_id: order_by
  student_product_id: order_by
  student_product_label: order_by
  upcoming_billing_date: order_by
  updated_at: order_by
  updated_from_student_product_id: order_by
  updated_to_student_product_id: order_by
}

"""aggregate min on columns"""
type student_product_min_fields {
  approval_status: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  location_id: String
  product_id: String
  product_status: String
  resource_path: String
  start_date: timestamptz
  student_id: String
  student_product_id: String
  student_product_label: String
  upcoming_billing_date: timestamptz
  updated_at: timestamptz
  updated_from_student_product_id: String
  updated_to_student_product_id: String
}

"""
order by min() on columns of table "student_product"
"""
input student_product_min_order_by {
  approval_status: order_by
  created_at: order_by
  deleted_at: order_by
  end_date: order_by
  location_id: order_by
  product_id: order_by
  product_status: order_by
  resource_path: order_by
  start_date: order_by
  student_id: order_by
  student_product_id: order_by
  student_product_label: order_by
  upcoming_billing_date: order_by
  updated_at: order_by
  updated_from_student_product_id: order_by
  updated_to_student_product_id: order_by
}

"""
response of any mutation on the table "student_product"
"""
type student_product_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [student_product!]!
}

"""
input type for inserting object relation for remote table "student_product"
"""
input student_product_obj_rel_insert_input {
  data: student_product_insert_input!
  on_conflict: student_product_on_conflict
}

"""
on conflict condition type for table "student_product"
"""
input student_product_on_conflict {
  constraint: student_product_constraint!
  update_columns: [student_product_update_column!]!
  where: student_product_bool_exp
}

"""
ordering options when selecting data from "student_product"
"""
input student_product_order_by {
  approval_status: order_by
  created_at: order_by
  deleted_at: order_by
  end_date: order_by
  location_id: order_by
  product_id: order_by
  product_status: order_by
  resource_path: order_by
  start_date: order_by
  student_id: order_by
  student_product_id: order_by
  student_product_label: order_by
  upcoming_billing_date: order_by
  updated_at: order_by
  updated_from_student_product_id: order_by
  updated_to_student_product_id: order_by
}

"""
primary key columns input for table: "student_product"
"""
input student_product_pk_columns_input {
  student_product_id: String!
}

"""
select columns of table "student_product"
"""
enum student_product_select_column {
  """column name"""
  approval_status

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_date

  """column name"""
  location_id

  """column name"""
  product_id

  """column name"""
  product_status

  """column name"""
  resource_path

  """column name"""
  start_date

  """column name"""
  student_id

  """column name"""
  student_product_id

  """column name"""
  student_product_label

  """column name"""
  upcoming_billing_date

  """column name"""
  updated_at

  """column name"""
  updated_from_student_product_id

  """column name"""
  updated_to_student_product_id
}

"""
input type for updating data in table "student_product"
"""
input student_product_set_input {
  approval_status: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  location_id: String
  product_id: String
  product_status: String
  resource_path: String
  start_date: timestamptz
  student_id: String
  student_product_id: String
  student_product_label: String
  upcoming_billing_date: timestamptz
  updated_at: timestamptz
  updated_from_student_product_id: String
  updated_to_student_product_id: String
}

"""
update columns of table "student_product"
"""
enum student_product_update_column {
  """column name"""
  approval_status

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_date

  """column name"""
  location_id

  """column name"""
  product_id

  """column name"""
  product_status

  """column name"""
  resource_path

  """column name"""
  start_date

  """column name"""
  student_id

  """column name"""
  student_product_id

  """column name"""
  student_product_label

  """column name"""
  upcoming_billing_date

  """column name"""
  updated_at

  """column name"""
  updated_from_student_product_id

  """column name"""
  updated_to_student_product_id
}

"""subscription root"""
type subscription_root {
  """
  fetch data from the table: "bill_item"
  """
  bill_item(
    """distinct select on columns"""
    distinct_on: [bill_item_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [bill_item_order_by!]

    """filter the rows returned"""
    where: bill_item_bool_exp
  ): [bill_item!]!

  """
  fetch aggregated fields from the table: "bill_item"
  """
  bill_item_aggregate(
    """distinct select on columns"""
    distinct_on: [bill_item_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [bill_item_order_by!]

    """filter the rows returned"""
    where: bill_item_bool_exp
  ): bill_item_aggregate!

  """fetch data from the table: "bill_item" using primary key columns"""
  bill_item_by_pk(bill_item_sequence_number: Int!, order_id: String!): bill_item

  """
  fetch data from the table: "billing_ratio"
  """
  billing_ratio(
    """distinct select on columns"""
    distinct_on: [billing_ratio_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [billing_ratio_order_by!]

    """filter the rows returned"""
    where: billing_ratio_bool_exp
  ): [billing_ratio!]!

  """
  fetch aggregated fields from the table: "billing_ratio"
  """
  billing_ratio_aggregate(
    """distinct select on columns"""
    distinct_on: [billing_ratio_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [billing_ratio_order_by!]

    """filter the rows returned"""
    where: billing_ratio_bool_exp
  ): billing_ratio_aggregate!

  """fetch data from the table: "billing_ratio" using primary key columns"""
  billing_ratio_by_pk(billing_ratio_id: String!): billing_ratio

  """
  fetch data from the table: "billing_schedule"
  """
  billing_schedule(
    """distinct select on columns"""
    distinct_on: [billing_schedule_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [billing_schedule_order_by!]

    """filter the rows returned"""
    where: billing_schedule_bool_exp
  ): [billing_schedule!]!

  """
  fetch aggregated fields from the table: "billing_schedule"
  """
  billing_schedule_aggregate(
    """distinct select on columns"""
    distinct_on: [billing_schedule_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [billing_schedule_order_by!]

    """filter the rows returned"""
    where: billing_schedule_bool_exp
  ): billing_schedule_aggregate!

  """
  fetch data from the table: "billing_schedule" using primary key columns
  """
  billing_schedule_by_pk(billing_schedule_id: String!): billing_schedule

  """
  fetch data from the table: "billing_schedule_period"
  """
  billing_schedule_period(
    """distinct select on columns"""
    distinct_on: [billing_schedule_period_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [billing_schedule_period_order_by!]

    """filter the rows returned"""
    where: billing_schedule_period_bool_exp
  ): [billing_schedule_period!]!

  """
  fetch aggregated fields from the table: "billing_schedule_period"
  """
  billing_schedule_period_aggregate(
    """distinct select on columns"""
    distinct_on: [billing_schedule_period_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [billing_schedule_period_order_by!]

    """filter the rows returned"""
    where: billing_schedule_period_bool_exp
  ): billing_schedule_period_aggregate!

  """
  fetch data from the table: "billing_schedule_period" using primary key columns
  """
  billing_schedule_period_by_pk(billing_schedule_period_id: String!): billing_schedule_period

  """
  fetch data from the table: "courses"
  """
  courses(
    """distinct select on columns"""
    distinct_on: [courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_order_by!]

    """filter the rows returned"""
    where: courses_bool_exp
  ): [courses!]!

  """
  fetch aggregated fields from the table: "courses"
  """
  courses_aggregate(
    """distinct select on columns"""
    distinct_on: [courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_order_by!]

    """filter the rows returned"""
    where: courses_bool_exp
  ): courses_aggregate!

  """fetch data from the table: "courses" using primary key columns"""
  courses_by_pk(course_id: String!): courses

  """
  fetch data from the table: "discount"
  """
  discount(
    """distinct select on columns"""
    distinct_on: [discount_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [discount_order_by!]

    """filter the rows returned"""
    where: discount_bool_exp
  ): [discount!]!

  """
  fetch aggregated fields from the table: "discount"
  """
  discount_aggregate(
    """distinct select on columns"""
    distinct_on: [discount_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [discount_order_by!]

    """filter the rows returned"""
    where: discount_bool_exp
  ): discount_aggregate!

  """fetch data from the table: "discount" using primary key columns"""
  discount_by_pk(discount_id: String!): discount

  """
  fetch data from the table: "fee"
  """
  fee(
    """distinct select on columns"""
    distinct_on: [fee_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [fee_order_by!]

    """filter the rows returned"""
    where: fee_bool_exp
  ): [fee!]!

  """
  fetch aggregated fields from the table: "fee"
  """
  fee_aggregate(
    """distinct select on columns"""
    distinct_on: [fee_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [fee_order_by!]

    """filter the rows returned"""
    where: fee_bool_exp
  ): fee_aggregate!

  """fetch data from the table: "fee" using primary key columns"""
  fee_by_pk(fee_id: String!): fee

  """
  fetch data from the table: "grade"
  """
  grade(
    """distinct select on columns"""
    distinct_on: [grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_order_by!]

    """filter the rows returned"""
    where: grade_bool_exp
  ): [grade!]!

  """
  fetch aggregated fields from the table: "grade"
  """
  grade_aggregate(
    """distinct select on columns"""
    distinct_on: [grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [grade_order_by!]

    """filter the rows returned"""
    where: grade_bool_exp
  ): grade_aggregate!

  """fetch data from the table: "grade" using primary key columns"""
  grade_by_pk(grade_id: String!): grade

  """
  fetch data from the table: "locations"
  """
  locations(
    """distinct select on columns"""
    distinct_on: [locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locations_order_by!]

    """filter the rows returned"""
    where: locations_bool_exp
  ): [locations!]!

  """
  fetch aggregated fields from the table: "locations"
  """
  locations_aggregate(
    """distinct select on columns"""
    distinct_on: [locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locations_order_by!]

    """filter the rows returned"""
    where: locations_bool_exp
  ): locations_aggregate!

  """fetch data from the table: "locations" using primary key columns"""
  locations_by_pk(location_id: String!): locations

  """
  fetch data from the table: "material"
  """
  material(
    """distinct select on columns"""
    distinct_on: [material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [material_order_by!]

    """filter the rows returned"""
    where: material_bool_exp
  ): [material!]!

  """
  fetch aggregated fields from the table: "material"
  """
  material_aggregate(
    """distinct select on columns"""
    distinct_on: [material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [material_order_by!]

    """filter the rows returned"""
    where: material_bool_exp
  ): material_aggregate!

  """fetch data from the table: "material" using primary key columns"""
  material_by_pk(material_id: String!): material

  """
  fetch data from the table: "order"
  """
  order(
    """distinct select on columns"""
    distinct_on: [order_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_order_by!]

    """filter the rows returned"""
    where: order_bool_exp
  ): [order!]!

  """
  fetch data from the table: "order_action_log"
  """
  order_action_log(
    """distinct select on columns"""
    distinct_on: [order_action_log_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_action_log_order_by!]

    """filter the rows returned"""
    where: order_action_log_bool_exp
  ): [order_action_log!]!

  """
  fetch aggregated fields from the table: "order_action_log"
  """
  order_action_log_aggregate(
    """distinct select on columns"""
    distinct_on: [order_action_log_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_action_log_order_by!]

    """filter the rows returned"""
    where: order_action_log_bool_exp
  ): order_action_log_aggregate!

  """
  fetch data from the table: "order_action_log" using primary key columns
  """
  order_action_log_by_pk(order_action_log_id: Int!): order_action_log

  """
  fetch aggregated fields from the table: "order"
  """
  order_aggregate(
    """distinct select on columns"""
    distinct_on: [order_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_order_by!]

    """filter the rows returned"""
    where: order_bool_exp
  ): order_aggregate!

  """fetch data from the table: "order" using primary key columns"""
  order_by_pk(order_id: String!): order

  """
  fetch data from the table: "order_item"
  """
  order_item(
    """distinct select on columns"""
    distinct_on: [order_item_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_item_order_by!]

    """filter the rows returned"""
    where: order_item_bool_exp
  ): [order_item!]!

  """
  fetch aggregated fields from the table: "order_item"
  """
  order_item_aggregate(
    """distinct select on columns"""
    distinct_on: [order_item_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [order_item_order_by!]

    """filter the rows returned"""
    where: order_item_bool_exp
  ): order_item_aggregate!

  """fetch data from the table: "order_item" using primary key columns"""
  order_item_by_pk(order_item_id: String!): order_item

  """
  fetch data from the table: "package"
  """
  package(
    """distinct select on columns"""
    distinct_on: [package_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [package_order_by!]

    """filter the rows returned"""
    where: package_bool_exp
  ): [package!]!

  """
  fetch aggregated fields from the table: "package"
  """
  package_aggregate(
    """distinct select on columns"""
    distinct_on: [package_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [package_order_by!]

    """filter the rows returned"""
    where: package_bool_exp
  ): package_aggregate!

  """fetch data from the table: "package" using primary key columns"""
  package_by_pk(package_id: String!): package

  """
  fetch data from the table: "package_course"
  """
  package_course(
    """distinct select on columns"""
    distinct_on: [package_course_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [package_course_order_by!]

    """filter the rows returned"""
    where: package_course_bool_exp
  ): [package_course!]!

  """
  fetch aggregated fields from the table: "package_course"
  """
  package_course_aggregate(
    """distinct select on columns"""
    distinct_on: [package_course_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [package_course_order_by!]

    """filter the rows returned"""
    where: package_course_bool_exp
  ): package_course_aggregate!

  """fetch data from the table: "package_course" using primary key columns"""
  package_course_by_pk(course_id: String!, package_id: String!): package_course

  """
  fetch data from the table: "package_course_fee"
  """
  package_course_fee(
    """distinct select on columns"""
    distinct_on: [package_course_fee_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [package_course_fee_order_by!]

    """filter the rows returned"""
    where: package_course_fee_bool_exp
  ): [package_course_fee!]!

  """
  fetch aggregated fields from the table: "package_course_fee"
  """
  package_course_fee_aggregate(
    """distinct select on columns"""
    distinct_on: [package_course_fee_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [package_course_fee_order_by!]

    """filter the rows returned"""
    where: package_course_fee_bool_exp
  ): package_course_fee_aggregate!

  """
  fetch data from the table: "package_course_fee" using primary key columns
  """
  package_course_fee_by_pk(course_id: String!, fee_id: String!, package_id: String!): package_course_fee

  """
  fetch data from the table: "package_course_material"
  """
  package_course_material(
    """distinct select on columns"""
    distinct_on: [package_course_material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [package_course_material_order_by!]

    """filter the rows returned"""
    where: package_course_material_bool_exp
  ): [package_course_material!]!

  """
  fetch aggregated fields from the table: "package_course_material"
  """
  package_course_material_aggregate(
    """distinct select on columns"""
    distinct_on: [package_course_material_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [package_course_material_order_by!]

    """filter the rows returned"""
    where: package_course_material_bool_exp
  ): package_course_material_aggregate!

  """
  fetch data from the table: "package_course_material" using primary key columns
  """
  package_course_material_by_pk(course_id: String!, material_id: String!, package_id: String!): package_course_material

  """
  fetch data from the table: "product"
  """
  product(
    """distinct select on columns"""
    distinct_on: [product_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_order_by!]

    """filter the rows returned"""
    where: product_bool_exp
  ): [product!]!

  """
  fetch aggregated fields from the table: "product"
  """
  product_aggregate(
    """distinct select on columns"""
    distinct_on: [product_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_order_by!]

    """filter the rows returned"""
    where: product_bool_exp
  ): product_aggregate!

  """fetch data from the table: "product" using primary key columns"""
  product_by_pk(product_id: String!): product

  """
  fetch data from the table: "product_grade"
  """
  product_grade(
    """distinct select on columns"""
    distinct_on: [product_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_grade_order_by!]

    """filter the rows returned"""
    where: product_grade_bool_exp
  ): [product_grade!]!

  """
  fetch aggregated fields from the table: "product_grade"
  """
  product_grade_aggregate(
    """distinct select on columns"""
    distinct_on: [product_grade_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_grade_order_by!]

    """filter the rows returned"""
    where: product_grade_bool_exp
  ): product_grade_aggregate!

  """fetch data from the table: "product_grade" using primary key columns"""
  product_grade_by_pk(grade_id: Int!, product_id: String!): product_grade

  """
  fetch data from the table: "product_location"
  """
  product_location(
    """distinct select on columns"""
    distinct_on: [product_location_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_location_order_by!]

    """filter the rows returned"""
    where: product_location_bool_exp
  ): [product_location!]!

  """
  fetch aggregated fields from the table: "product_location"
  """
  product_location_aggregate(
    """distinct select on columns"""
    distinct_on: [product_location_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_location_order_by!]

    """filter the rows returned"""
    where: product_location_bool_exp
  ): product_location_aggregate!

  """
  fetch data from the table: "product_location" using primary key columns
  """
  product_location_by_pk(location_id: String!, product_id: String!): product_location

  """
  fetch data from the table: "product_price"
  """
  product_price(
    """distinct select on columns"""
    distinct_on: [product_price_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_price_order_by!]

    """filter the rows returned"""
    where: product_price_bool_exp
  ): [product_price!]!

  """
  fetch aggregated fields from the table: "product_price"
  """
  product_price_aggregate(
    """distinct select on columns"""
    distinct_on: [product_price_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_price_order_by!]

    """filter the rows returned"""
    where: product_price_bool_exp
  ): product_price_aggregate!

  """fetch data from the table: "product_price" using primary key columns"""
  product_price_by_pk(product_price_id: Int!): product_price

  """
  fetch data from the table: "product_setting"
  """
  product_setting(
    """distinct select on columns"""
    distinct_on: [product_setting_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_setting_order_by!]

    """filter the rows returned"""
    where: product_setting_bool_exp
  ): [product_setting!]!

  """
  fetch aggregated fields from the table: "product_setting"
  """
  product_setting_aggregate(
    """distinct select on columns"""
    distinct_on: [product_setting_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_setting_order_by!]

    """filter the rows returned"""
    where: product_setting_bool_exp
  ): product_setting_aggregate!

  """fetch data from the table: "product_setting" using primary key columns"""
  product_setting_by_pk(product_id: String!): product_setting

  """
  fetch data from the table: "student_package_class"
  """
  student_package_class(
    """distinct select on columns"""
    distinct_on: [student_package_class_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_package_class_order_by!]

    """filter the rows returned"""
    where: student_package_class_bool_exp
  ): [student_package_class!]!

  """
  fetch aggregated fields from the table: "student_package_class"
  """
  student_package_class_aggregate(
    """distinct select on columns"""
    distinct_on: [student_package_class_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_package_class_order_by!]

    """filter the rows returned"""
    where: student_package_class_bool_exp
  ): student_package_class_aggregate!

  """
  fetch data from the table: "student_package_class" using primary key columns
  """
  student_package_class_by_pk(class_id: String!, course_id: String!, location_id: String!, student_id: String!, student_package_id: String!): student_package_class

  """
  fetch data from the table: "student_packages"
  """
  student_packages(
    """distinct select on columns"""
    distinct_on: [student_packages_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_packages_order_by!]

    """filter the rows returned"""
    where: student_packages_bool_exp
  ): [student_packages!]!

  """
  fetch aggregated fields from the table: "student_packages"
  """
  student_packages_aggregate(
    """distinct select on columns"""
    distinct_on: [student_packages_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_packages_order_by!]

    """filter the rows returned"""
    where: student_packages_bool_exp
  ): student_packages_aggregate!

  """
  fetch data from the table: "student_packages" using primary key columns
  """
  student_packages_by_pk(student_package_id: String!): student_packages

  """
  fetch data from the table: "student_product"
  """
  student_product(
    """distinct select on columns"""
    distinct_on: [student_product_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_product_order_by!]

    """filter the rows returned"""
    where: student_product_bool_exp
  ): [student_product!]!

  """
  fetch aggregated fields from the table: "student_product"
  """
  student_product_aggregate(
    """distinct select on columns"""
    distinct_on: [student_product_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_product_order_by!]

    """filter the rows returned"""
    where: student_product_bool_exp
  ): student_product_aggregate!

  """fetch data from the table: "student_product" using primary key columns"""
  student_product_by_pk(student_product_id: String!): student_product

  """
  fetch data from the table: "tax"
  """
  tax(
    """distinct select on columns"""
    distinct_on: [tax_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tax_order_by!]

    """filter the rows returned"""
    where: tax_bool_exp
  ): [tax!]!

  """
  fetch aggregated fields from the table: "tax"
  """
  tax_aggregate(
    """distinct select on columns"""
    distinct_on: [tax_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tax_order_by!]

    """filter the rows returned"""
    where: tax_bool_exp
  ): tax_aggregate!

  """fetch data from the table: "tax" using primary key columns"""
  tax_by_pk(tax_id: String!): tax

  """
  fetch data from the table: "users"
  """
  users(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): [users!]!

  """
  fetch aggregated fields from the table: "users"
  """
  users_aggregate(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): users_aggregate!

  """fetch data from the table: "users" using primary key columns"""
  users_by_pk(user_id: String!): users
}

"""
columns and relationships of "tax"
"""
type tax {
  created_at: timestamptz!
  default_flag: Boolean!
  is_archived: Boolean!
  name: String!

  """An array relationship"""
  products(
    """distinct select on columns"""
    distinct_on: [product_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_order_by!]

    """filter the rows returned"""
    where: product_bool_exp
  ): [product!]!

  """An aggregated array relationship"""
  products_aggregate(
    """distinct select on columns"""
    distinct_on: [product_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [product_order_by!]

    """filter the rows returned"""
    where: product_bool_exp
  ): product_aggregate!
  resource_path: String
  tax_category: String!
  tax_id: String!
  tax_percentage: Int!
  updated_at: timestamptz!
}

"""
aggregated selection of "tax"
"""
type tax_aggregate {
  aggregate: tax_aggregate_fields
  nodes: [tax!]!
}

"""
aggregate fields of "tax"
"""
type tax_aggregate_fields {
  avg: tax_avg_fields
  count(columns: [tax_select_column!], distinct: Boolean): Int
  max: tax_max_fields
  min: tax_min_fields
  stddev: tax_stddev_fields
  stddev_pop: tax_stddev_pop_fields
  stddev_samp: tax_stddev_samp_fields
  sum: tax_sum_fields
  var_pop: tax_var_pop_fields
  var_samp: tax_var_samp_fields
  variance: tax_variance_fields
}

"""
order by aggregate values of table "tax"
"""
input tax_aggregate_order_by {
  avg: tax_avg_order_by
  count: order_by
  max: tax_max_order_by
  min: tax_min_order_by
  stddev: tax_stddev_order_by
  stddev_pop: tax_stddev_pop_order_by
  stddev_samp: tax_stddev_samp_order_by
  sum: tax_sum_order_by
  var_pop: tax_var_pop_order_by
  var_samp: tax_var_samp_order_by
  variance: tax_variance_order_by
}

"""
input type for inserting array relation for remote table "tax"
"""
input tax_arr_rel_insert_input {
  data: [tax_insert_input!]!
  on_conflict: tax_on_conflict
}

"""aggregate avg on columns"""
type tax_avg_fields {
  tax_percentage: Float
}

"""
order by avg() on columns of table "tax"
"""
input tax_avg_order_by {
  tax_percentage: order_by
}

"""
Boolean expression to filter rows from the table "tax". All fields are combined with a logical 'AND'.
"""
input tax_bool_exp {
  _and: [tax_bool_exp]
  _not: tax_bool_exp
  _or: [tax_bool_exp]
  created_at: timestamptz_comparison_exp
  default_flag: Boolean_comparison_exp
  is_archived: Boolean_comparison_exp
  name: String_comparison_exp
  products: product_bool_exp
  resource_path: String_comparison_exp
  tax_category: String_comparison_exp
  tax_id: String_comparison_exp
  tax_percentage: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "tax"
"""
enum tax_constraint {
  """unique or primary key constraint"""
  tax_default_flag_idx

  """unique or primary key constraint"""
  tax_pk
}

"""
input type for incrementing integer column in table "tax"
"""
input tax_inc_input {
  tax_percentage: Int
}

"""
input type for inserting data into table "tax"
"""
input tax_insert_input {
  created_at: timestamptz
  default_flag: Boolean
  is_archived: Boolean
  name: String
  products: product_arr_rel_insert_input
  resource_path: String
  tax_category: String
  tax_id: String
  tax_percentage: Int
  updated_at: timestamptz
}

"""aggregate max on columns"""
type tax_max_fields {
  created_at: timestamptz
  name: String
  resource_path: String
  tax_category: String
  tax_id: String
  tax_percentage: Int
  updated_at: timestamptz
}

"""
order by max() on columns of table "tax"
"""
input tax_max_order_by {
  created_at: order_by
  name: order_by
  resource_path: order_by
  tax_category: order_by
  tax_id: order_by
  tax_percentage: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type tax_min_fields {
  created_at: timestamptz
  name: String
  resource_path: String
  tax_category: String
  tax_id: String
  tax_percentage: Int
  updated_at: timestamptz
}

"""
order by min() on columns of table "tax"
"""
input tax_min_order_by {
  created_at: order_by
  name: order_by
  resource_path: order_by
  tax_category: order_by
  tax_id: order_by
  tax_percentage: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "tax"
"""
type tax_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [tax!]!
}

"""
input type for inserting object relation for remote table "tax"
"""
input tax_obj_rel_insert_input {
  data: tax_insert_input!
  on_conflict: tax_on_conflict
}

"""
on conflict condition type for table "tax"
"""
input tax_on_conflict {
  constraint: tax_constraint!
  update_columns: [tax_update_column!]!
  where: tax_bool_exp
}

"""
ordering options when selecting data from "tax"
"""
input tax_order_by {
  created_at: order_by
  default_flag: order_by
  is_archived: order_by
  name: order_by
  products_aggregate: product_aggregate_order_by
  resource_path: order_by
  tax_category: order_by
  tax_id: order_by
  tax_percentage: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "tax"
"""
input tax_pk_columns_input {
  tax_id: String!
}

"""
select columns of table "tax"
"""
enum tax_select_column {
  """column name"""
  created_at

  """column name"""
  default_flag

  """column name"""
  is_archived

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  tax_category

  """column name"""
  tax_id

  """column name"""
  tax_percentage

  """column name"""
  updated_at
}

"""
input type for updating data in table "tax"
"""
input tax_set_input {
  created_at: timestamptz
  default_flag: Boolean
  is_archived: Boolean
  name: String
  resource_path: String
  tax_category: String
  tax_id: String
  tax_percentage: Int
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type tax_stddev_fields {
  tax_percentage: Float
}

"""
order by stddev() on columns of table "tax"
"""
input tax_stddev_order_by {
  tax_percentage: order_by
}

"""aggregate stddev_pop on columns"""
type tax_stddev_pop_fields {
  tax_percentage: Float
}

"""
order by stddev_pop() on columns of table "tax"
"""
input tax_stddev_pop_order_by {
  tax_percentage: order_by
}

"""aggregate stddev_samp on columns"""
type tax_stddev_samp_fields {
  tax_percentage: Float
}

"""
order by stddev_samp() on columns of table "tax"
"""
input tax_stddev_samp_order_by {
  tax_percentage: order_by
}

"""aggregate sum on columns"""
type tax_sum_fields {
  tax_percentage: Int
}

"""
order by sum() on columns of table "tax"
"""
input tax_sum_order_by {
  tax_percentage: order_by
}

"""
update columns of table "tax"
"""
enum tax_update_column {
  """column name"""
  created_at

  """column name"""
  default_flag

  """column name"""
  is_archived

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  tax_category

  """column name"""
  tax_id

  """column name"""
  tax_percentage

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type tax_var_pop_fields {
  tax_percentage: Float
}

"""
order by var_pop() on columns of table "tax"
"""
input tax_var_pop_order_by {
  tax_percentage: order_by
}

"""aggregate var_samp on columns"""
type tax_var_samp_fields {
  tax_percentage: Float
}

"""
order by var_samp() on columns of table "tax"
"""
input tax_var_samp_order_by {
  tax_percentage: order_by
}

"""aggregate variance on columns"""
type tax_variance_fields {
  tax_percentage: Float
}

"""
order by variance() on columns of table "tax"
"""
input tax_variance_order_by {
  tax_percentage: order_by
}

scalar timestamptz

"""
expression to compare columns of type timestamptz. All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

"""
columns and relationships of "users"
"""
type users {
  allow_notification: Boolean
  avatar: String
  birthday: date
  country: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  device_token: String
  email: String
  email_verified: Boolean
  facebook_id: String
  first_name: String!
  first_name_phonetic: String
  full_name_phonetic: String
  gender: String
  given_name: String
  is_tester: Boolean
  last_login_date: timestamptz
  last_name: String!
  last_name_phonetic: String
  name: String!
  phone_number: String
  phone_verified: Boolean
  platform: String
  resource_path: String
  updated_at: timestamptz!
  user_group: String!
  user_id: String!
}

"""
aggregated selection of "users"
"""
type users_aggregate {
  aggregate: users_aggregate_fields
  nodes: [users!]!
}

"""
aggregate fields of "users"
"""
type users_aggregate_fields {
  count(columns: [users_select_column!], distinct: Boolean): Int
  max: users_max_fields
  min: users_min_fields
}

"""
order by aggregate values of table "users"
"""
input users_aggregate_order_by {
  count: order_by
  max: users_max_order_by
  min: users_min_order_by
}

"""
input type for inserting array relation for remote table "users"
"""
input users_arr_rel_insert_input {
  data: [users_insert_input!]!
  on_conflict: users_on_conflict
}

"""
Boolean expression to filter rows from the table "users". All fields are combined with a logical 'AND'.
"""
input users_bool_exp {
  _and: [users_bool_exp]
  _not: users_bool_exp
  _or: [users_bool_exp]
  allow_notification: Boolean_comparison_exp
  avatar: String_comparison_exp
  birthday: date_comparison_exp
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  device_token: String_comparison_exp
  email: String_comparison_exp
  email_verified: Boolean_comparison_exp
  facebook_id: String_comparison_exp
  first_name: String_comparison_exp
  first_name_phonetic: String_comparison_exp
  full_name_phonetic: String_comparison_exp
  gender: String_comparison_exp
  given_name: String_comparison_exp
  is_tester: Boolean_comparison_exp
  last_login_date: timestamptz_comparison_exp
  last_name: String_comparison_exp
  last_name_phonetic: String_comparison_exp
  name: String_comparison_exp
  phone_number: String_comparison_exp
  phone_verified: Boolean_comparison_exp
  platform: String_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_group: String_comparison_exp
  user_id: String_comparison_exp
}

"""
unique or primary key constraints on table "users"
"""
enum users_constraint {
  """unique or primary key constraint"""
  users_pk
}

"""
input type for inserting data into table "users"
"""
input users_insert_input {
  allow_notification: Boolean
  avatar: String
  birthday: date
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  device_token: String
  email: String
  email_verified: Boolean
  facebook_id: String
  first_name: String
  first_name_phonetic: String
  full_name_phonetic: String
  gender: String
  given_name: String
  is_tester: Boolean
  last_login_date: timestamptz
  last_name: String
  last_name_phonetic: String
  name: String
  phone_number: String
  phone_verified: Boolean
  platform: String
  resource_path: String
  updated_at: timestamptz
  user_group: String
  user_id: String
}

"""aggregate max on columns"""
type users_max_fields {
  avatar: String
  birthday: date
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  device_token: String
  email: String
  facebook_id: String
  first_name: String
  first_name_phonetic: String
  full_name_phonetic: String
  gender: String
  given_name: String
  last_login_date: timestamptz
  last_name: String
  last_name_phonetic: String
  name: String
  phone_number: String
  platform: String
  resource_path: String
  updated_at: timestamptz
  user_group: String
  user_id: String
}

"""
order by max() on columns of table "users"
"""
input users_max_order_by {
  avatar: order_by
  birthday: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  device_token: order_by
  email: order_by
  facebook_id: order_by
  first_name: order_by
  first_name_phonetic: order_by
  full_name_phonetic: order_by
  gender: order_by
  given_name: order_by
  last_login_date: order_by
  last_name: order_by
  last_name_phonetic: order_by
  name: order_by
  phone_number: order_by
  platform: order_by
  resource_path: order_by
  updated_at: order_by
  user_group: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type users_min_fields {
  avatar: String
  birthday: date
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  device_token: String
  email: String
  facebook_id: String
  first_name: String
  first_name_phonetic: String
  full_name_phonetic: String
  gender: String
  given_name: String
  last_login_date: timestamptz
  last_name: String
  last_name_phonetic: String
  name: String
  phone_number: String
  platform: String
  resource_path: String
  updated_at: timestamptz
  user_group: String
  user_id: String
}

"""
order by min() on columns of table "users"
"""
input users_min_order_by {
  avatar: order_by
  birthday: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  device_token: order_by
  email: order_by
  facebook_id: order_by
  first_name: order_by
  first_name_phonetic: order_by
  full_name_phonetic: order_by
  gender: order_by
  given_name: order_by
  last_login_date: order_by
  last_name: order_by
  last_name_phonetic: order_by
  name: order_by
  phone_number: order_by
  platform: order_by
  resource_path: order_by
  updated_at: order_by
  user_group: order_by
  user_id: order_by
}

"""
response of any mutation on the table "users"
"""
type users_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [users!]!
}

"""
input type for inserting object relation for remote table "users"
"""
input users_obj_rel_insert_input {
  data: users_insert_input!
  on_conflict: users_on_conflict
}

"""
on conflict condition type for table "users"
"""
input users_on_conflict {
  constraint: users_constraint!
  update_columns: [users_update_column!]!
  where: users_bool_exp
}

"""
ordering options when selecting data from "users"
"""
input users_order_by {
  allow_notification: order_by
  avatar: order_by
  birthday: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  device_token: order_by
  email: order_by
  email_verified: order_by
  facebook_id: order_by
  first_name: order_by
  first_name_phonetic: order_by
  full_name_phonetic: order_by
  gender: order_by
  given_name: order_by
  is_tester: order_by
  last_login_date: order_by
  last_name: order_by
  last_name_phonetic: order_by
  name: order_by
  phone_number: order_by
  phone_verified: order_by
  platform: order_by
  resource_path: order_by
  updated_at: order_by
  user_group: order_by
  user_id: order_by
}

"""
primary key columns input for table: "users"
"""
input users_pk_columns_input {
  user_id: String!
}

"""
select columns of table "users"
"""
enum users_select_column {
  """column name"""
  allow_notification

  """column name"""
  avatar

  """column name"""
  birthday

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  device_token

  """column name"""
  email

  """column name"""
  email_verified

  """column name"""
  facebook_id

  """column name"""
  first_name

  """column name"""
  first_name_phonetic

  """column name"""
  full_name_phonetic

  """column name"""
  gender

  """column name"""
  given_name

  """column name"""
  is_tester

  """column name"""
  last_login_date

  """column name"""
  last_name

  """column name"""
  last_name_phonetic

  """column name"""
  name

  """column name"""
  phone_number

  """column name"""
  phone_verified

  """column name"""
  platform

  """column name"""
  resource_path

  """column name"""
  updated_at

  """column name"""
  user_group

  """column name"""
  user_id
}

"""
input type for updating data in table "users"
"""
input users_set_input {
  allow_notification: Boolean
  avatar: String
  birthday: date
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  device_token: String
  email: String
  email_verified: Boolean
  facebook_id: String
  first_name: String
  first_name_phonetic: String
  full_name_phonetic: String
  gender: String
  given_name: String
  is_tester: Boolean
  last_login_date: timestamptz
  last_name: String
  last_name_phonetic: String
  name: String
  phone_number: String
  phone_verified: Boolean
  platform: String
  resource_path: String
  updated_at: timestamptz
  user_group: String
  user_id: String
}

"""
update columns of table "users"
"""
enum users_update_column {
  """column name"""
  allow_notification

  """column name"""
  avatar

  """column name"""
  birthday

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  device_token

  """column name"""
  email

  """column name"""
  email_verified

  """column name"""
  facebook_id

  """column name"""
  first_name

  """column name"""
  first_name_phonetic

  """column name"""
  full_name_phonetic

  """column name"""
  gender

  """column name"""
  given_name

  """column name"""
  is_tester

  """column name"""
  last_login_date

  """column name"""
  last_name

  """column name"""
  last_name_phonetic

  """column name"""
  name

  """column name"""
  phone_number

  """column name"""
  phone_verified

  """column name"""
  platform

  """column name"""
  resource_path

  """column name"""
  updated_at

  """column name"""
  user_group

  """column name"""
  user_id
}
