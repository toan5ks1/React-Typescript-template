schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""
expression to compare columns of type Boolean. All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

"""
expression to compare columns of type Int. All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""
expression to compare columns of type String. All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String
  _ilike: String
  _in: [String!]
  _is_null: Boolean
  _like: String
  _lt: String
  _lte: String
  _neq: String
  _nilike: String
  _nin: [String!]
  _nlike: String
  _nsimilar: String
  _similar: String
}

scalar _int4

"""
expression to compare columns of type _int4. All fields are combined with logical 'AND'.
"""
input _int4_comparison_exp {
  _eq: _int4
  _gt: _int4
  _gte: _int4
  _in: [_int4!]
  _is_null: Boolean
  _lt: _int4
  _lte: _int4
  _neq: _int4
  _nin: [_int4!]
}

scalar _text

"""
expression to compare columns of type _text. All fields are combined with logical 'AND'.
"""
input _text_comparison_exp {
  _eq: _text
  _gt: _text
  _gte: _text
  _in: [_text!]
  _is_null: Boolean
  _lt: _text
  _lte: _text
  _neq: _text
  _nin: [_text!]
}

"""
columns and relationships of "assign_study_plan_tasks"
"""
type assign_study_plan_tasks {
  course_id: String
  created_at: timestamptz!
  deleted_at: timestamptz
  error_detail: String
  id: String!
  resource_path: String!
  status: String
  study_plan_ids: _text!
  updated_at: timestamptz!
}

"""
aggregated selection of "assign_study_plan_tasks"
"""
type assign_study_plan_tasks_aggregate {
  aggregate: assign_study_plan_tasks_aggregate_fields
  nodes: [assign_study_plan_tasks!]!
}

"""
aggregate fields of "assign_study_plan_tasks"
"""
type assign_study_plan_tasks_aggregate_fields {
  count(columns: [assign_study_plan_tasks_select_column!], distinct: Boolean): Int
  max: assign_study_plan_tasks_max_fields
  min: assign_study_plan_tasks_min_fields
}

"""
order by aggregate values of table "assign_study_plan_tasks"
"""
input assign_study_plan_tasks_aggregate_order_by {
  count: order_by
  max: assign_study_plan_tasks_max_order_by
  min: assign_study_plan_tasks_min_order_by
}

"""
input type for inserting array relation for remote table "assign_study_plan_tasks"
"""
input assign_study_plan_tasks_arr_rel_insert_input {
  data: [assign_study_plan_tasks_insert_input!]!
  on_conflict: assign_study_plan_tasks_on_conflict
}

"""
Boolean expression to filter rows from the table "assign_study_plan_tasks". All fields are combined with a logical 'AND'.
"""
input assign_study_plan_tasks_bool_exp {
  _and: [assign_study_plan_tasks_bool_exp]
  _not: assign_study_plan_tasks_bool_exp
  _or: [assign_study_plan_tasks_bool_exp]
  course_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  error_detail: String_comparison_exp
  id: String_comparison_exp
  resource_path: String_comparison_exp
  status: String_comparison_exp
  study_plan_ids: _text_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "assign_study_plan_tasks"
"""
enum assign_study_plan_tasks_constraint {
  """unique or primary key constraint"""
  assign_study_plan_tasks_pk
}

"""
input type for inserting data into table "assign_study_plan_tasks"
"""
input assign_study_plan_tasks_insert_input {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  error_detail: String
  id: String
  resource_path: String
  status: String
  study_plan_ids: _text
  updated_at: timestamptz
}

"""aggregate max on columns"""
type assign_study_plan_tasks_max_fields {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  error_detail: String
  id: String
  resource_path: String
  status: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "assign_study_plan_tasks"
"""
input assign_study_plan_tasks_max_order_by {
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  error_detail: order_by
  id: order_by
  resource_path: order_by
  status: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type assign_study_plan_tasks_min_fields {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  error_detail: String
  id: String
  resource_path: String
  status: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "assign_study_plan_tasks"
"""
input assign_study_plan_tasks_min_order_by {
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  error_detail: order_by
  id: order_by
  resource_path: order_by
  status: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "assign_study_plan_tasks"
"""
type assign_study_plan_tasks_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [assign_study_plan_tasks!]!
}

"""
input type for inserting object relation for remote table "assign_study_plan_tasks"
"""
input assign_study_plan_tasks_obj_rel_insert_input {
  data: assign_study_plan_tasks_insert_input!
  on_conflict: assign_study_plan_tasks_on_conflict
}

"""
on conflict condition type for table "assign_study_plan_tasks"
"""
input assign_study_plan_tasks_on_conflict {
  constraint: assign_study_plan_tasks_constraint!
  update_columns: [assign_study_plan_tasks_update_column!]!
  where: assign_study_plan_tasks_bool_exp
}

"""
ordering options when selecting data from "assign_study_plan_tasks"
"""
input assign_study_plan_tasks_order_by {
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  error_detail: order_by
  id: order_by
  resource_path: order_by
  status: order_by
  study_plan_ids: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "assign_study_plan_tasks"
"""
input assign_study_plan_tasks_pk_columns_input {
  id: String!
}

"""
select columns of table "assign_study_plan_tasks"
"""
enum assign_study_plan_tasks_select_column {
  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  error_detail

  """column name"""
  id

  """column name"""
  resource_path

  """column name"""
  status

  """column name"""
  study_plan_ids

  """column name"""
  updated_at
}

"""
input type for updating data in table "assign_study_plan_tasks"
"""
input assign_study_plan_tasks_set_input {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  error_detail: String
  id: String
  resource_path: String
  status: String
  study_plan_ids: _text
  updated_at: timestamptz
}

"""
update columns of table "assign_study_plan_tasks"
"""
enum assign_study_plan_tasks_update_column {
  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  error_detail

  """column name"""
  id

  """column name"""
  resource_path

  """column name"""
  status

  """column name"""
  study_plan_ids

  """column name"""
  updated_at
}

"""
columns and relationships of "assignment_study_plan_items"
"""
type assignment_study_plan_items {
  """An object relationship"""
  assignment: assignments!
  assignment_id: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  resource_path: String!

  """An object relationship"""
  study_plan_item: study_plan_items!
  study_plan_item_id: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "assignment_study_plan_items"
"""
type assignment_study_plan_items_aggregate {
  aggregate: assignment_study_plan_items_aggregate_fields
  nodes: [assignment_study_plan_items!]!
}

"""
aggregate fields of "assignment_study_plan_items"
"""
type assignment_study_plan_items_aggregate_fields {
  count(columns: [assignment_study_plan_items_select_column!], distinct: Boolean): Int
  max: assignment_study_plan_items_max_fields
  min: assignment_study_plan_items_min_fields
}

"""
order by aggregate values of table "assignment_study_plan_items"
"""
input assignment_study_plan_items_aggregate_order_by {
  count: order_by
  max: assignment_study_plan_items_max_order_by
  min: assignment_study_plan_items_min_order_by
}

"""
input type for inserting array relation for remote table "assignment_study_plan_items"
"""
input assignment_study_plan_items_arr_rel_insert_input {
  data: [assignment_study_plan_items_insert_input!]!
  on_conflict: assignment_study_plan_items_on_conflict
}

"""
Boolean expression to filter rows from the table "assignment_study_plan_items". All fields are combined with a logical 'AND'.
"""
input assignment_study_plan_items_bool_exp {
  _and: [assignment_study_plan_items_bool_exp]
  _not: assignment_study_plan_items_bool_exp
  _or: [assignment_study_plan_items_bool_exp]
  assignment: assignments_bool_exp
  assignment_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  resource_path: String_comparison_exp
  study_plan_item: study_plan_items_bool_exp
  study_plan_item_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "assignment_study_plan_items"
"""
enum assignment_study_plan_items_constraint {
  """unique or primary key constraint"""
  assignment_study_plan_items_pk

  """unique or primary key constraint"""
  assignment_study_plan_items_study_plan_item_id_un
}

"""
input type for inserting data into table "assignment_study_plan_items"
"""
input assignment_study_plan_items_insert_input {
  assignment: assignments_obj_rel_insert_input
  assignment_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  study_plan_item: study_plan_items_obj_rel_insert_input
  study_plan_item_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type assignment_study_plan_items_max_fields {
  assignment_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  study_plan_item_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "assignment_study_plan_items"
"""
input assignment_study_plan_items_max_order_by {
  assignment_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  study_plan_item_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type assignment_study_plan_items_min_fields {
  assignment_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  study_plan_item_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "assignment_study_plan_items"
"""
input assignment_study_plan_items_min_order_by {
  assignment_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  study_plan_item_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "assignment_study_plan_items"
"""
type assignment_study_plan_items_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [assignment_study_plan_items!]!
}

"""
input type for inserting object relation for remote table "assignment_study_plan_items"
"""
input assignment_study_plan_items_obj_rel_insert_input {
  data: assignment_study_plan_items_insert_input!
  on_conflict: assignment_study_plan_items_on_conflict
}

"""
on conflict condition type for table "assignment_study_plan_items"
"""
input assignment_study_plan_items_on_conflict {
  constraint: assignment_study_plan_items_constraint!
  update_columns: [assignment_study_plan_items_update_column!]!
  where: assignment_study_plan_items_bool_exp
}

"""
ordering options when selecting data from "assignment_study_plan_items"
"""
input assignment_study_plan_items_order_by {
  assignment: assignments_order_by
  assignment_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  study_plan_item: study_plan_items_order_by
  study_plan_item_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "assignment_study_plan_items"
"""
input assignment_study_plan_items_pk_columns_input {
  assignment_id: String!
  study_plan_item_id: String!
}

"""
select columns of table "assignment_study_plan_items"
"""
enum assignment_study_plan_items_select_column {
  """column name"""
  assignment_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  study_plan_item_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "assignment_study_plan_items"
"""
input assignment_study_plan_items_set_input {
  assignment_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  study_plan_item_id: String
  updated_at: timestamptz
}

"""
update columns of table "assignment_study_plan_items"
"""
enum assignment_study_plan_items_update_column {
  """column name"""
  assignment_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  study_plan_item_id

  """column name"""
  updated_at
}

"""
columns and relationships of "assignments"
"""
type assignments {
  assignment_id: String!

  """An array relationship"""
  assignment_study_plan_items(
    """distinct select on columns"""
    distinct_on: [assignment_study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignment_study_plan_items_order_by!]

    """filter the rows returned"""
    where: assignment_study_plan_items_bool_exp
  ): [assignment_study_plan_items!]!

  """An aggregated array relationship"""
  assignment_study_plan_items_aggregate(
    """distinct select on columns"""
    distinct_on: [assignment_study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignment_study_plan_items_order_by!]

    """filter the rows returned"""
    where: assignment_study_plan_items_bool_exp
  ): assignment_study_plan_items_aggregate!
  attachment: _text
  check_list(
    """JSON select path"""
    path: String
  ): jsonb
  content(
    """JSON select path"""
    path: String
  ): jsonb
  created_at: timestamptz!
  deleted_at: timestamptz
  display_order: Int
  instruction: String
  is_required_grade: Boolean
  max_grade: Int
  name: String!
  original_topic: String
  resource_path: String!
  settings(
    """JSON select path"""
    path: String
  ): jsonb
  status: String
  type: String
  updated_at: timestamptz!
}

"""
aggregated selection of "assignments"
"""
type assignments_aggregate {
  aggregate: assignments_aggregate_fields
  nodes: [assignments!]!
}

"""
aggregate fields of "assignments"
"""
type assignments_aggregate_fields {
  avg: assignments_avg_fields
  count(columns: [assignments_select_column!], distinct: Boolean): Int
  max: assignments_max_fields
  min: assignments_min_fields
  stddev: assignments_stddev_fields
  stddev_pop: assignments_stddev_pop_fields
  stddev_samp: assignments_stddev_samp_fields
  sum: assignments_sum_fields
  var_pop: assignments_var_pop_fields
  var_samp: assignments_var_samp_fields
  variance: assignments_variance_fields
}

"""
order by aggregate values of table "assignments"
"""
input assignments_aggregate_order_by {
  avg: assignments_avg_order_by
  count: order_by
  max: assignments_max_order_by
  min: assignments_min_order_by
  stddev: assignments_stddev_order_by
  stddev_pop: assignments_stddev_pop_order_by
  stddev_samp: assignments_stddev_samp_order_by
  sum: assignments_sum_order_by
  var_pop: assignments_var_pop_order_by
  var_samp: assignments_var_samp_order_by
  variance: assignments_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input assignments_append_input {
  check_list: jsonb
  content: jsonb
  settings: jsonb
}

"""
input type for inserting array relation for remote table "assignments"
"""
input assignments_arr_rel_insert_input {
  data: [assignments_insert_input!]!
  on_conflict: assignments_on_conflict
}

"""aggregate avg on columns"""
type assignments_avg_fields {
  display_order: Float
  max_grade: Float
}

"""
order by avg() on columns of table "assignments"
"""
input assignments_avg_order_by {
  display_order: order_by
  max_grade: order_by
}

"""
Boolean expression to filter rows from the table "assignments". All fields are combined with a logical 'AND'.
"""
input assignments_bool_exp {
  _and: [assignments_bool_exp]
  _not: assignments_bool_exp
  _or: [assignments_bool_exp]
  assignment_id: String_comparison_exp
  assignment_study_plan_items: assignment_study_plan_items_bool_exp
  attachment: _text_comparison_exp
  check_list: jsonb_comparison_exp
  content: jsonb_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  display_order: Int_comparison_exp
  instruction: String_comparison_exp
  is_required_grade: Boolean_comparison_exp
  max_grade: Int_comparison_exp
  name: String_comparison_exp
  original_topic: String_comparison_exp
  resource_path: String_comparison_exp
  settings: jsonb_comparison_exp
  status: String_comparison_exp
  type: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "assignments"
"""
enum assignments_constraint {
  """unique or primary key constraint"""
  assignments_pk
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input assignments_delete_at_path_input {
  check_list: [String]
  content: [String]
  settings: [String]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input assignments_delete_elem_input {
  check_list: Int
  content: Int
  settings: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input assignments_delete_key_input {
  check_list: String
  content: String
  settings: String
}

"""
input type for incrementing integer column in table "assignments"
"""
input assignments_inc_input {
  display_order: Int
  max_grade: Int
}

"""
input type for inserting data into table "assignments"
"""
input assignments_insert_input {
  assignment_id: String
  assignment_study_plan_items: assignment_study_plan_items_arr_rel_insert_input
  attachment: _text
  check_list: jsonb
  content: jsonb
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: Int
  instruction: String
  is_required_grade: Boolean
  max_grade: Int
  name: String
  original_topic: String
  resource_path: String
  settings: jsonb
  status: String
  type: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type assignments_max_fields {
  assignment_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: Int
  instruction: String
  max_grade: Int
  name: String
  original_topic: String
  resource_path: String
  status: String
  type: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "assignments"
"""
input assignments_max_order_by {
  assignment_id: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  instruction: order_by
  max_grade: order_by
  name: order_by
  original_topic: order_by
  resource_path: order_by
  status: order_by
  type: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type assignments_min_fields {
  assignment_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: Int
  instruction: String
  max_grade: Int
  name: String
  original_topic: String
  resource_path: String
  status: String
  type: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "assignments"
"""
input assignments_min_order_by {
  assignment_id: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  instruction: order_by
  max_grade: order_by
  name: order_by
  original_topic: order_by
  resource_path: order_by
  status: order_by
  type: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "assignments"
"""
type assignments_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [assignments!]!
}

"""
input type for inserting object relation for remote table "assignments"
"""
input assignments_obj_rel_insert_input {
  data: assignments_insert_input!
  on_conflict: assignments_on_conflict
}

"""
on conflict condition type for table "assignments"
"""
input assignments_on_conflict {
  constraint: assignments_constraint!
  update_columns: [assignments_update_column!]!
  where: assignments_bool_exp
}

"""
ordering options when selecting data from "assignments"
"""
input assignments_order_by {
  assignment_id: order_by
  assignment_study_plan_items_aggregate: assignment_study_plan_items_aggregate_order_by
  attachment: order_by
  check_list: order_by
  content: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  instruction: order_by
  is_required_grade: order_by
  max_grade: order_by
  name: order_by
  original_topic: order_by
  resource_path: order_by
  settings: order_by
  status: order_by
  type: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "assignments"
"""
input assignments_pk_columns_input {
  assignment_id: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input assignments_prepend_input {
  check_list: jsonb
  content: jsonb
  settings: jsonb
}

"""
select columns of table "assignments"
"""
enum assignments_select_column {
  """column name"""
  assignment_id

  """column name"""
  attachment

  """column name"""
  check_list

  """column name"""
  content

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  instruction

  """column name"""
  is_required_grade

  """column name"""
  max_grade

  """column name"""
  name

  """column name"""
  original_topic

  """column name"""
  resource_path

  """column name"""
  settings

  """column name"""
  status

  """column name"""
  type

  """column name"""
  updated_at
}

"""
input type for updating data in table "assignments"
"""
input assignments_set_input {
  assignment_id: String
  attachment: _text
  check_list: jsonb
  content: jsonb
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: Int
  instruction: String
  is_required_grade: Boolean
  max_grade: Int
  name: String
  original_topic: String
  resource_path: String
  settings: jsonb
  status: String
  type: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type assignments_stddev_fields {
  display_order: Float
  max_grade: Float
}

"""
order by stddev() on columns of table "assignments"
"""
input assignments_stddev_order_by {
  display_order: order_by
  max_grade: order_by
}

"""aggregate stddev_pop on columns"""
type assignments_stddev_pop_fields {
  display_order: Float
  max_grade: Float
}

"""
order by stddev_pop() on columns of table "assignments"
"""
input assignments_stddev_pop_order_by {
  display_order: order_by
  max_grade: order_by
}

"""aggregate stddev_samp on columns"""
type assignments_stddev_samp_fields {
  display_order: Float
  max_grade: Float
}

"""
order by stddev_samp() on columns of table "assignments"
"""
input assignments_stddev_samp_order_by {
  display_order: order_by
  max_grade: order_by
}

"""aggregate sum on columns"""
type assignments_sum_fields {
  display_order: Int
  max_grade: Int
}

"""
order by sum() on columns of table "assignments"
"""
input assignments_sum_order_by {
  display_order: order_by
  max_grade: order_by
}

"""
update columns of table "assignments"
"""
enum assignments_update_column {
  """column name"""
  assignment_id

  """column name"""
  attachment

  """column name"""
  check_list

  """column name"""
  content

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  instruction

  """column name"""
  is_required_grade

  """column name"""
  max_grade

  """column name"""
  name

  """column name"""
  original_topic

  """column name"""
  resource_path

  """column name"""
  settings

  """column name"""
  status

  """column name"""
  type

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type assignments_var_pop_fields {
  display_order: Float
  max_grade: Float
}

"""
order by var_pop() on columns of table "assignments"
"""
input assignments_var_pop_order_by {
  display_order: order_by
  max_grade: order_by
}

"""aggregate var_samp on columns"""
type assignments_var_samp_fields {
  display_order: Float
  max_grade: Float
}

"""
order by var_samp() on columns of table "assignments"
"""
input assignments_var_samp_order_by {
  display_order: order_by
  max_grade: order_by
}

"""aggregate variance on columns"""
type assignments_variance_fields {
  display_order: Float
  max_grade: Float
}

"""
order by variance() on columns of table "assignments"
"""
input assignments_variance_order_by {
  display_order: order_by
  max_grade: order_by
}

"""
columns and relationships of "books"
"""
type books {
  """An array relationship"""
  book_chapters(
    """distinct select on columns"""
    distinct_on: [books_chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_chapters_order_by!]

    """filter the rows returned"""
    where: books_chapters_bool_exp
  ): [books_chapters!]!

  """An aggregated array relationship"""
  book_chapters_aggregate(
    """distinct select on columns"""
    distinct_on: [books_chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_chapters_order_by!]

    """filter the rows returned"""
    where: books_chapters_bool_exp
  ): books_chapters_aggregate!
  book_id: String!
  book_type: String
  copied_from: String
  country: String

  """An array relationship"""
  course_books(
    """distinct select on columns"""
    distinct_on: [courses_books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_books_order_by!]

    """filter the rows returned"""
    where: courses_books_bool_exp
  ): [courses_books!]!

  """An aggregated array relationship"""
  course_books_aggregate(
    """distinct select on columns"""
    distinct_on: [courses_books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_books_order_by!]

    """filter the rows returned"""
    where: courses_books_bool_exp
  ): courses_books_aggregate!
  created_at: timestamptz!
  current_chapter_display_order: Int!
  deleted_at: timestamptz
  grade: smallint
  name: String!
  resource_path: String!
  school_id: Int!
  subject: String
  updated_at: timestamptz!
}

"""
aggregated selection of "books"
"""
type books_aggregate {
  aggregate: books_aggregate_fields
  nodes: [books!]!
}

"""
aggregate fields of "books"
"""
type books_aggregate_fields {
  avg: books_avg_fields
  count(columns: [books_select_column!], distinct: Boolean): Int
  max: books_max_fields
  min: books_min_fields
  stddev: books_stddev_fields
  stddev_pop: books_stddev_pop_fields
  stddev_samp: books_stddev_samp_fields
  sum: books_sum_fields
  var_pop: books_var_pop_fields
  var_samp: books_var_samp_fields
  variance: books_variance_fields
}

"""
order by aggregate values of table "books"
"""
input books_aggregate_order_by {
  avg: books_avg_order_by
  count: order_by
  max: books_max_order_by
  min: books_min_order_by
  stddev: books_stddev_order_by
  stddev_pop: books_stddev_pop_order_by
  stddev_samp: books_stddev_samp_order_by
  sum: books_sum_order_by
  var_pop: books_var_pop_order_by
  var_samp: books_var_samp_order_by
  variance: books_variance_order_by
}

"""
input type for inserting array relation for remote table "books"
"""
input books_arr_rel_insert_input {
  data: [books_insert_input!]!
  on_conflict: books_on_conflict
}

"""aggregate avg on columns"""
type books_avg_fields {
  current_chapter_display_order: Float
  grade: Float
  school_id: Float
}

"""
order by avg() on columns of table "books"
"""
input books_avg_order_by {
  current_chapter_display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "books". All fields are combined with a logical 'AND'.
"""
input books_bool_exp {
  _and: [books_bool_exp]
  _not: books_bool_exp
  _or: [books_bool_exp]
  book_chapters: books_chapters_bool_exp
  book_id: String_comparison_exp
  book_type: String_comparison_exp
  copied_from: String_comparison_exp
  country: String_comparison_exp
  course_books: courses_books_bool_exp
  created_at: timestamptz_comparison_exp
  current_chapter_display_order: Int_comparison_exp
  deleted_at: timestamptz_comparison_exp
  grade: smallint_comparison_exp
  name: String_comparison_exp
  resource_path: String_comparison_exp
  school_id: Int_comparison_exp
  subject: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
columns and relationships of "books_chapters"
"""
type books_chapters {
  """An object relationship"""
  book: books
  book_id: String!

  """An object relationship"""
  chapter: chapters
  chapter_id: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  resource_path: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "books_chapters"
"""
type books_chapters_aggregate {
  aggregate: books_chapters_aggregate_fields
  nodes: [books_chapters!]!
}

"""
aggregate fields of "books_chapters"
"""
type books_chapters_aggregate_fields {
  count(columns: [books_chapters_select_column!], distinct: Boolean): Int
  max: books_chapters_max_fields
  min: books_chapters_min_fields
}

"""
order by aggregate values of table "books_chapters"
"""
input books_chapters_aggregate_order_by {
  count: order_by
  max: books_chapters_max_order_by
  min: books_chapters_min_order_by
}

"""
input type for inserting array relation for remote table "books_chapters"
"""
input books_chapters_arr_rel_insert_input {
  data: [books_chapters_insert_input!]!
  on_conflict: books_chapters_on_conflict
}

"""
Boolean expression to filter rows from the table "books_chapters". All fields are combined with a logical 'AND'.
"""
input books_chapters_bool_exp {
  _and: [books_chapters_bool_exp]
  _not: books_chapters_bool_exp
  _or: [books_chapters_bool_exp]
  book: books_bool_exp
  book_id: String_comparison_exp
  chapter: chapters_bool_exp
  chapter_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "books_chapters"
"""
enum books_chapters_constraint {
  """unique or primary key constraint"""
  books_chapters_pk
}

"""
input type for inserting data into table "books_chapters"
"""
input books_chapters_insert_input {
  book: books_obj_rel_insert_input
  book_id: String
  chapter: chapters_obj_rel_insert_input
  chapter_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type books_chapters_max_fields {
  book_id: String
  chapter_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "books_chapters"
"""
input books_chapters_max_order_by {
  book_id: order_by
  chapter_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type books_chapters_min_fields {
  book_id: String
  chapter_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "books_chapters"
"""
input books_chapters_min_order_by {
  book_id: order_by
  chapter_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "books_chapters"
"""
type books_chapters_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [books_chapters!]!
}

"""
input type for inserting object relation for remote table "books_chapters"
"""
input books_chapters_obj_rel_insert_input {
  data: books_chapters_insert_input!
  on_conflict: books_chapters_on_conflict
}

"""
on conflict condition type for table "books_chapters"
"""
input books_chapters_on_conflict {
  constraint: books_chapters_constraint!
  update_columns: [books_chapters_update_column!]!
  where: books_chapters_bool_exp
}

"""
ordering options when selecting data from "books_chapters"
"""
input books_chapters_order_by {
  book: books_order_by
  book_id: order_by
  chapter: chapters_order_by
  chapter_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "books_chapters"
"""
input books_chapters_pk_columns_input {
  book_id: String!
  chapter_id: String!
}

"""
select columns of table "books_chapters"
"""
enum books_chapters_select_column {
  """column name"""
  book_id

  """column name"""
  chapter_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "books_chapters"
"""
input books_chapters_set_input {
  book_id: String
  chapter_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
}

"""
update columns of table "books_chapters"
"""
enum books_chapters_update_column {
  """column name"""
  book_id

  """column name"""
  chapter_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
unique or primary key constraints on table "books"
"""
enum books_constraint {
  """unique or primary key constraint"""
  books_pk
}

"""
input type for incrementing integer column in table "books"
"""
input books_inc_input {
  current_chapter_display_order: Int
  grade: smallint
  school_id: Int
}

"""
input type for inserting data into table "books"
"""
input books_insert_input {
  book_chapters: books_chapters_arr_rel_insert_input
  book_id: String
  book_type: String
  copied_from: String
  country: String
  course_books: courses_books_arr_rel_insert_input
  created_at: timestamptz
  current_chapter_display_order: Int
  deleted_at: timestamptz
  grade: smallint
  name: String
  resource_path: String
  school_id: Int
  subject: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type books_max_fields {
  book_id: String
  book_type: String
  copied_from: String
  country: String
  created_at: timestamptz
  current_chapter_display_order: Int
  deleted_at: timestamptz
  grade: smallint
  name: String
  resource_path: String
  school_id: Int
  subject: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "books"
"""
input books_max_order_by {
  book_id: order_by
  book_type: order_by
  copied_from: order_by
  country: order_by
  created_at: order_by
  current_chapter_display_order: order_by
  deleted_at: order_by
  grade: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  subject: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type books_min_fields {
  book_id: String
  book_type: String
  copied_from: String
  country: String
  created_at: timestamptz
  current_chapter_display_order: Int
  deleted_at: timestamptz
  grade: smallint
  name: String
  resource_path: String
  school_id: Int
  subject: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "books"
"""
input books_min_order_by {
  book_id: order_by
  book_type: order_by
  copied_from: order_by
  country: order_by
  created_at: order_by
  current_chapter_display_order: order_by
  deleted_at: order_by
  grade: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  subject: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "books"
"""
type books_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [books!]!
}

"""
input type for inserting object relation for remote table "books"
"""
input books_obj_rel_insert_input {
  data: books_insert_input!
  on_conflict: books_on_conflict
}

"""
on conflict condition type for table "books"
"""
input books_on_conflict {
  constraint: books_constraint!
  update_columns: [books_update_column!]!
  where: books_bool_exp
}

"""
ordering options when selecting data from "books"
"""
input books_order_by {
  book_chapters_aggregate: books_chapters_aggregate_order_by
  book_id: order_by
  book_type: order_by
  copied_from: order_by
  country: order_by
  course_books_aggregate: courses_books_aggregate_order_by
  created_at: order_by
  current_chapter_display_order: order_by
  deleted_at: order_by
  grade: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  subject: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "books"
"""
input books_pk_columns_input {
  book_id: String!
}

"""
select columns of table "books"
"""
enum books_select_column {
  """column name"""
  book_id

  """column name"""
  book_type

  """column name"""
  copied_from

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  current_chapter_display_order

  """column name"""
  deleted_at

  """column name"""
  grade

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  subject

  """column name"""
  updated_at
}

"""
input type for updating data in table "books"
"""
input books_set_input {
  book_id: String
  book_type: String
  copied_from: String
  country: String
  created_at: timestamptz
  current_chapter_display_order: Int
  deleted_at: timestamptz
  grade: smallint
  name: String
  resource_path: String
  school_id: Int
  subject: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type books_stddev_fields {
  current_chapter_display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev() on columns of table "books"
"""
input books_stddev_order_by {
  current_chapter_display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type books_stddev_pop_fields {
  current_chapter_display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev_pop() on columns of table "books"
"""
input books_stddev_pop_order_by {
  current_chapter_display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type books_stddev_samp_fields {
  current_chapter_display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev_samp() on columns of table "books"
"""
input books_stddev_samp_order_by {
  current_chapter_display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate sum on columns"""
type books_sum_fields {
  current_chapter_display_order: Int
  grade: smallint
  school_id: Int
}

"""
order by sum() on columns of table "books"
"""
input books_sum_order_by {
  current_chapter_display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
update columns of table "books"
"""
enum books_update_column {
  """column name"""
  book_id

  """column name"""
  book_type

  """column name"""
  copied_from

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  current_chapter_display_order

  """column name"""
  deleted_at

  """column name"""
  grade

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  subject

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type books_var_pop_fields {
  current_chapter_display_order: Float
  grade: Float
  school_id: Float
}

"""
order by var_pop() on columns of table "books"
"""
input books_var_pop_order_by {
  current_chapter_display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate var_samp on columns"""
type books_var_samp_fields {
  current_chapter_display_order: Float
  grade: Float
  school_id: Float
}

"""
order by var_samp() on columns of table "books"
"""
input books_var_samp_order_by {
  current_chapter_display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate variance on columns"""
type books_variance_fields {
  current_chapter_display_order: Float
  grade: Float
  school_id: Float
}

"""
order by variance() on columns of table "books"
"""
input books_variance_order_by {
  current_chapter_display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
columns and relationships of "brands"
"""
type brands {
  academic_year_beginning: timestamptz
  academic_year_end: timestamptz
  brand_id: String!

  """An array relationship"""
  centers(
    """distinct select on columns"""
    distinct_on: [centers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [centers_order_by!]

    """filter the rows returned"""
    where: centers_bool_exp
  ): [centers!]!

  """An aggregated array relationship"""
  centers_aggregate(
    """distinct select on columns"""
    distinct_on: [centers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [centers_order_by!]

    """filter the rows returned"""
    where: centers_bool_exp
  ): centers_aggregate!
  created_at: timestamptz!
  deleted_at: timestamptz
  name: String!
  org_id: String!
  owner: String
  resource_path: String

  """An array relationship"""
  scheduler_items(
    """distinct select on columns"""
    distinct_on: [scheduler_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_items_order_by!]

    """filter the rows returned"""
    where: scheduler_items_bool_exp
  ): [scheduler_items!]!

  """An aggregated array relationship"""
  scheduler_items_aggregate(
    """distinct select on columns"""
    distinct_on: [scheduler_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_items_order_by!]

    """filter the rows returned"""
    where: scheduler_items_bool_exp
  ): scheduler_items_aggregate!

  """An array relationship"""
  scheduler_patterns(
    """distinct select on columns"""
    distinct_on: [scheduler_patterns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_patterns_order_by!]

    """filter the rows returned"""
    where: scheduler_patterns_bool_exp
  ): [scheduler_patterns!]!

  """An aggregated array relationship"""
  scheduler_patterns_aggregate(
    """distinct select on columns"""
    distinct_on: [scheduler_patterns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_patterns_order_by!]

    """filter the rows returned"""
    where: scheduler_patterns_bool_exp
  ): scheduler_patterns_aggregate!
  scheduler_release_status: String
  time_zone: String
  updated_at: timestamptz!
}

"""
aggregated selection of "brands"
"""
type brands_aggregate {
  aggregate: brands_aggregate_fields
  nodes: [brands!]!
}

"""
aggregate fields of "brands"
"""
type brands_aggregate_fields {
  count(columns: [brands_select_column!], distinct: Boolean): Int
  max: brands_max_fields
  min: brands_min_fields
}

"""
order by aggregate values of table "brands"
"""
input brands_aggregate_order_by {
  count: order_by
  max: brands_max_order_by
  min: brands_min_order_by
}

"""
input type for inserting array relation for remote table "brands"
"""
input brands_arr_rel_insert_input {
  data: [brands_insert_input!]!
  on_conflict: brands_on_conflict
}

"""
Boolean expression to filter rows from the table "brands". All fields are combined with a logical 'AND'.
"""
input brands_bool_exp {
  _and: [brands_bool_exp]
  _not: brands_bool_exp
  _or: [brands_bool_exp]
  academic_year_beginning: timestamptz_comparison_exp
  academic_year_end: timestamptz_comparison_exp
  brand_id: String_comparison_exp
  centers: centers_bool_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  name: String_comparison_exp
  org_id: String_comparison_exp
  owner: String_comparison_exp
  resource_path: String_comparison_exp
  scheduler_items: scheduler_items_bool_exp
  scheduler_patterns: scheduler_patterns_bool_exp
  scheduler_release_status: String_comparison_exp
  time_zone: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "brands"
"""
enum brands_constraint {
  """unique or primary key constraint"""
  brands_pk

  """unique or primary key constraint"""
  brands_un
}

"""
input type for inserting data into table "brands"
"""
input brands_insert_input {
  academic_year_beginning: timestamptz
  academic_year_end: timestamptz
  brand_id: String
  centers: centers_arr_rel_insert_input
  created_at: timestamptz
  deleted_at: timestamptz
  name: String
  org_id: String
  owner: String
  resource_path: String
  scheduler_items: scheduler_items_arr_rel_insert_input
  scheduler_patterns: scheduler_patterns_arr_rel_insert_input
  scheduler_release_status: String
  time_zone: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type brands_max_fields {
  academic_year_beginning: timestamptz
  academic_year_end: timestamptz
  brand_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  name: String
  org_id: String
  owner: String
  resource_path: String
  scheduler_release_status: String
  time_zone: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "brands"
"""
input brands_max_order_by {
  academic_year_beginning: order_by
  academic_year_end: order_by
  brand_id: order_by
  created_at: order_by
  deleted_at: order_by
  name: order_by
  org_id: order_by
  owner: order_by
  resource_path: order_by
  scheduler_release_status: order_by
  time_zone: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type brands_min_fields {
  academic_year_beginning: timestamptz
  academic_year_end: timestamptz
  brand_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  name: String
  org_id: String
  owner: String
  resource_path: String
  scheduler_release_status: String
  time_zone: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "brands"
"""
input brands_min_order_by {
  academic_year_beginning: order_by
  academic_year_end: order_by
  brand_id: order_by
  created_at: order_by
  deleted_at: order_by
  name: order_by
  org_id: order_by
  owner: order_by
  resource_path: order_by
  scheduler_release_status: order_by
  time_zone: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "brands"
"""
type brands_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [brands!]!
}

"""
input type for inserting object relation for remote table "brands"
"""
input brands_obj_rel_insert_input {
  data: brands_insert_input!
  on_conflict: brands_on_conflict
}

"""
on conflict condition type for table "brands"
"""
input brands_on_conflict {
  constraint: brands_constraint!
  update_columns: [brands_update_column!]!
  where: brands_bool_exp
}

"""
ordering options when selecting data from "brands"
"""
input brands_order_by {
  academic_year_beginning: order_by
  academic_year_end: order_by
  brand_id: order_by
  centers_aggregate: centers_aggregate_order_by
  created_at: order_by
  deleted_at: order_by
  name: order_by
  org_id: order_by
  owner: order_by
  resource_path: order_by
  scheduler_items_aggregate: scheduler_items_aggregate_order_by
  scheduler_patterns_aggregate: scheduler_patterns_aggregate_order_by
  scheduler_release_status: order_by
  time_zone: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "brands"
"""
input brands_pk_columns_input {
  brand_id: String!
}

"""
select columns of table "brands"
"""
enum brands_select_column {
  """column name"""
  academic_year_beginning

  """column name"""
  academic_year_end

  """column name"""
  brand_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  name

  """column name"""
  org_id

  """column name"""
  owner

  """column name"""
  resource_path

  """column name"""
  scheduler_release_status

  """column name"""
  time_zone

  """column name"""
  updated_at
}

"""
input type for updating data in table "brands"
"""
input brands_set_input {
  academic_year_beginning: timestamptz
  academic_year_end: timestamptz
  brand_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  name: String
  org_id: String
  owner: String
  resource_path: String
  scheduler_release_status: String
  time_zone: String
  updated_at: timestamptz
}

"""
update columns of table "brands"
"""
enum brands_update_column {
  """column name"""
  academic_year_beginning

  """column name"""
  academic_year_end

  """column name"""
  brand_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  name

  """column name"""
  org_id

  """column name"""
  owner

  """column name"""
  resource_path

  """column name"""
  scheduler_release_status

  """column name"""
  time_zone

  """column name"""
  updated_at
}

"""
columns and relationships of "centers"
"""
type centers {
  brand_id: String!

  """An object relationship"""
  brands: brands!
  center_id: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  name: String!
  owner: String
  resource_path: String

  """An array relationship"""
  scheduler_items(
    """distinct select on columns"""
    distinct_on: [scheduler_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_items_order_by!]

    """filter the rows returned"""
    where: scheduler_items_bool_exp
  ): [scheduler_items!]!

  """An aggregated array relationship"""
  scheduler_items_aggregate(
    """distinct select on columns"""
    distinct_on: [scheduler_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_items_order_by!]

    """filter the rows returned"""
    where: scheduler_items_bool_exp
  ): scheduler_items_aggregate!

  """An array relationship"""
  scheduler_patterns(
    """distinct select on columns"""
    distinct_on: [scheduler_patterns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_patterns_order_by!]

    """filter the rows returned"""
    where: scheduler_patterns_bool_exp
  ): [scheduler_patterns!]!

  """An aggregated array relationship"""
  scheduler_patterns_aggregate(
    """distinct select on columns"""
    distinct_on: [scheduler_patterns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_patterns_order_by!]

    """filter the rows returned"""
    where: scheduler_patterns_bool_exp
  ): scheduler_patterns_aggregate!
  time_zone: String
  updated_at: timestamptz!
}

"""
aggregated selection of "centers"
"""
type centers_aggregate {
  aggregate: centers_aggregate_fields
  nodes: [centers!]!
}

"""
aggregate fields of "centers"
"""
type centers_aggregate_fields {
  count(columns: [centers_select_column!], distinct: Boolean): Int
  max: centers_max_fields
  min: centers_min_fields
}

"""
order by aggregate values of table "centers"
"""
input centers_aggregate_order_by {
  count: order_by
  max: centers_max_order_by
  min: centers_min_order_by
}

"""
input type for inserting array relation for remote table "centers"
"""
input centers_arr_rel_insert_input {
  data: [centers_insert_input!]!
  on_conflict: centers_on_conflict
}

"""
Boolean expression to filter rows from the table "centers". All fields are combined with a logical 'AND'.
"""
input centers_bool_exp {
  _and: [centers_bool_exp]
  _not: centers_bool_exp
  _or: [centers_bool_exp]
  brand_id: String_comparison_exp
  brands: brands_bool_exp
  center_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  name: String_comparison_exp
  owner: String_comparison_exp
  resource_path: String_comparison_exp
  scheduler_items: scheduler_items_bool_exp
  scheduler_patterns: scheduler_patterns_bool_exp
  time_zone: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "centers"
"""
enum centers_constraint {
  """unique or primary key constraint"""
  centers_pk

  """unique or primary key constraint"""
  centers_un
}

"""
input type for inserting data into table "centers"
"""
input centers_insert_input {
  brand_id: String
  brands: brands_obj_rel_insert_input
  center_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  name: String
  owner: String
  resource_path: String
  scheduler_items: scheduler_items_arr_rel_insert_input
  scheduler_patterns: scheduler_patterns_arr_rel_insert_input
  time_zone: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type centers_max_fields {
  brand_id: String
  center_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  name: String
  owner: String
  resource_path: String
  time_zone: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "centers"
"""
input centers_max_order_by {
  brand_id: order_by
  center_id: order_by
  created_at: order_by
  deleted_at: order_by
  name: order_by
  owner: order_by
  resource_path: order_by
  time_zone: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type centers_min_fields {
  brand_id: String
  center_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  name: String
  owner: String
  resource_path: String
  time_zone: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "centers"
"""
input centers_min_order_by {
  brand_id: order_by
  center_id: order_by
  created_at: order_by
  deleted_at: order_by
  name: order_by
  owner: order_by
  resource_path: order_by
  time_zone: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "centers"
"""
type centers_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [centers!]!
}

"""
input type for inserting object relation for remote table "centers"
"""
input centers_obj_rel_insert_input {
  data: centers_insert_input!
  on_conflict: centers_on_conflict
}

"""
on conflict condition type for table "centers"
"""
input centers_on_conflict {
  constraint: centers_constraint!
  update_columns: [centers_update_column!]!
  where: centers_bool_exp
}

"""
ordering options when selecting data from "centers"
"""
input centers_order_by {
  brand_id: order_by
  brands: brands_order_by
  center_id: order_by
  created_at: order_by
  deleted_at: order_by
  name: order_by
  owner: order_by
  resource_path: order_by
  scheduler_items_aggregate: scheduler_items_aggregate_order_by
  scheduler_patterns_aggregate: scheduler_patterns_aggregate_order_by
  time_zone: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "centers"
"""
input centers_pk_columns_input {
  center_id: String!
}

"""
select columns of table "centers"
"""
enum centers_select_column {
  """column name"""
  brand_id

  """column name"""
  center_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  name

  """column name"""
  owner

  """column name"""
  resource_path

  """column name"""
  time_zone

  """column name"""
  updated_at
}

"""
input type for updating data in table "centers"
"""
input centers_set_input {
  brand_id: String
  center_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  name: String
  owner: String
  resource_path: String
  time_zone: String
  updated_at: timestamptz
}

"""
update columns of table "centers"
"""
enum centers_update_column {
  """column name"""
  brand_id

  """column name"""
  center_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  name

  """column name"""
  owner

  """column name"""
  resource_path

  """column name"""
  time_zone

  """column name"""
  updated_at
}

"""
columns and relationships of "chapters"
"""
type chapters {
  """An object relationship"""
  book_chapters: books_chapters
  chapter_id: String!
  copied_from: String
  country: String
  created_at: timestamptz!
  current_topic_display_order: Int
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  name: String!
  resource_path: String!
  school_id: Int!
  subject: String

  """An array relationship"""
  topics(
    """distinct select on columns"""
    distinct_on: [topics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_order_by!]

    """filter the rows returned"""
    where: topics_bool_exp
  ): [topics!]!

  """An aggregated array relationship"""
  topics_aggregate(
    """distinct select on columns"""
    distinct_on: [topics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_order_by!]

    """filter the rows returned"""
    where: topics_bool_exp
  ): topics_aggregate!
  updated_at: timestamptz!
}

"""
aggregated selection of "chapters"
"""
type chapters_aggregate {
  aggregate: chapters_aggregate_fields
  nodes: [chapters!]!
}

"""
aggregate fields of "chapters"
"""
type chapters_aggregate_fields {
  avg: chapters_avg_fields
  count(columns: [chapters_select_column!], distinct: Boolean): Int
  max: chapters_max_fields
  min: chapters_min_fields
  stddev: chapters_stddev_fields
  stddev_pop: chapters_stddev_pop_fields
  stddev_samp: chapters_stddev_samp_fields
  sum: chapters_sum_fields
  var_pop: chapters_var_pop_fields
  var_samp: chapters_var_samp_fields
  variance: chapters_variance_fields
}

"""
order by aggregate values of table "chapters"
"""
input chapters_aggregate_order_by {
  avg: chapters_avg_order_by
  count: order_by
  max: chapters_max_order_by
  min: chapters_min_order_by
  stddev: chapters_stddev_order_by
  stddev_pop: chapters_stddev_pop_order_by
  stddev_samp: chapters_stddev_samp_order_by
  sum: chapters_sum_order_by
  var_pop: chapters_var_pop_order_by
  var_samp: chapters_var_samp_order_by
  variance: chapters_variance_order_by
}

"""
input type for inserting array relation for remote table "chapters"
"""
input chapters_arr_rel_insert_input {
  data: [chapters_insert_input!]!
  on_conflict: chapters_on_conflict
}

"""aggregate avg on columns"""
type chapters_avg_fields {
  current_topic_display_order: Float
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by avg() on columns of table "chapters"
"""
input chapters_avg_order_by {
  current_topic_display_order: order_by
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "chapters". All fields are combined with a logical 'AND'.
"""
input chapters_bool_exp {
  _and: [chapters_bool_exp]
  _not: chapters_bool_exp
  _or: [chapters_bool_exp]
  book_chapters: books_chapters_bool_exp
  chapter_id: String_comparison_exp
  copied_from: String_comparison_exp
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  current_topic_display_order: Int_comparison_exp
  deleted_at: timestamptz_comparison_exp
  display_order: smallint_comparison_exp
  grade: smallint_comparison_exp
  name: String_comparison_exp
  resource_path: String_comparison_exp
  school_id: Int_comparison_exp
  subject: String_comparison_exp
  topics: topics_bool_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "chapters"
"""
enum chapters_constraint {
  """unique or primary key constraint"""
  chapters_pk
}

"""
input type for incrementing integer column in table "chapters"
"""
input chapters_inc_input {
  current_topic_display_order: Int
  display_order: smallint
  grade: smallint
  school_id: Int
}

"""
input type for inserting data into table "chapters"
"""
input chapters_insert_input {
  book_chapters: books_chapters_obj_rel_insert_input
  chapter_id: String
  copied_from: String
  country: String
  created_at: timestamptz
  current_topic_display_order: Int
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  name: String
  resource_path: String
  school_id: Int
  subject: String
  topics: topics_arr_rel_insert_input
  updated_at: timestamptz
}

"""aggregate max on columns"""
type chapters_max_fields {
  chapter_id: String
  copied_from: String
  country: String
  created_at: timestamptz
  current_topic_display_order: Int
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  name: String
  resource_path: String
  school_id: Int
  subject: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "chapters"
"""
input chapters_max_order_by {
  chapter_id: order_by
  copied_from: order_by
  country: order_by
  created_at: order_by
  current_topic_display_order: order_by
  deleted_at: order_by
  display_order: order_by
  grade: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  subject: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type chapters_min_fields {
  chapter_id: String
  copied_from: String
  country: String
  created_at: timestamptz
  current_topic_display_order: Int
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  name: String
  resource_path: String
  school_id: Int
  subject: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "chapters"
"""
input chapters_min_order_by {
  chapter_id: order_by
  copied_from: order_by
  country: order_by
  created_at: order_by
  current_topic_display_order: order_by
  deleted_at: order_by
  display_order: order_by
  grade: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  subject: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "chapters"
"""
type chapters_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [chapters!]!
}

"""
input type for inserting object relation for remote table "chapters"
"""
input chapters_obj_rel_insert_input {
  data: chapters_insert_input!
  on_conflict: chapters_on_conflict
}

"""
on conflict condition type for table "chapters"
"""
input chapters_on_conflict {
  constraint: chapters_constraint!
  update_columns: [chapters_update_column!]!
  where: chapters_bool_exp
}

"""
ordering options when selecting data from "chapters"
"""
input chapters_order_by {
  book_chapters: books_chapters_order_by
  chapter_id: order_by
  copied_from: order_by
  country: order_by
  created_at: order_by
  current_topic_display_order: order_by
  deleted_at: order_by
  display_order: order_by
  grade: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  subject: order_by
  topics_aggregate: topics_aggregate_order_by
  updated_at: order_by
}

"""
primary key columns input for table: "chapters"
"""
input chapters_pk_columns_input {
  chapter_id: String!
}

"""
select columns of table "chapters"
"""
enum chapters_select_column {
  """column name"""
  chapter_id

  """column name"""
  copied_from

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  current_topic_display_order

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  grade

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  subject

  """column name"""
  updated_at
}

"""
input type for updating data in table "chapters"
"""
input chapters_set_input {
  chapter_id: String
  copied_from: String
  country: String
  created_at: timestamptz
  current_topic_display_order: Int
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  name: String
  resource_path: String
  school_id: Int
  subject: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type chapters_stddev_fields {
  current_topic_display_order: Float
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev() on columns of table "chapters"
"""
input chapters_stddev_order_by {
  current_topic_display_order: order_by
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type chapters_stddev_pop_fields {
  current_topic_display_order: Float
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev_pop() on columns of table "chapters"
"""
input chapters_stddev_pop_order_by {
  current_topic_display_order: order_by
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type chapters_stddev_samp_fields {
  current_topic_display_order: Float
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev_samp() on columns of table "chapters"
"""
input chapters_stddev_samp_order_by {
  current_topic_display_order: order_by
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate sum on columns"""
type chapters_sum_fields {
  current_topic_display_order: Int
  display_order: smallint
  grade: smallint
  school_id: Int
}

"""
order by sum() on columns of table "chapters"
"""
input chapters_sum_order_by {
  current_topic_display_order: order_by
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
update columns of table "chapters"
"""
enum chapters_update_column {
  """column name"""
  chapter_id

  """column name"""
  copied_from

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  current_topic_display_order

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  grade

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  subject

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type chapters_var_pop_fields {
  current_topic_display_order: Float
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by var_pop() on columns of table "chapters"
"""
input chapters_var_pop_order_by {
  current_topic_display_order: order_by
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate var_samp on columns"""
type chapters_var_samp_fields {
  current_topic_display_order: Float
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by var_samp() on columns of table "chapters"
"""
input chapters_var_samp_order_by {
  current_topic_display_order: order_by
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate variance on columns"""
type chapters_variance_fields {
  current_topic_display_order: Float
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by variance() on columns of table "chapters"
"""
input chapters_variance_order_by {
  current_topic_display_order: order_by
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
columns and relationships of "course_students"
"""
type course_students {
  course_id: String!
  course_student_id: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  end_at: timestamptz
  resource_path: String!
  start_at: timestamptz
  student_id: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "course_students"
"""
type course_students_aggregate {
  aggregate: course_students_aggregate_fields
  nodes: [course_students!]!
}

"""
aggregate fields of "course_students"
"""
type course_students_aggregate_fields {
  count(columns: [course_students_select_column!], distinct: Boolean): Int
  max: course_students_max_fields
  min: course_students_min_fields
}

"""
order by aggregate values of table "course_students"
"""
input course_students_aggregate_order_by {
  count: order_by
  max: course_students_max_order_by
  min: course_students_min_order_by
}

"""
input type for inserting array relation for remote table "course_students"
"""
input course_students_arr_rel_insert_input {
  data: [course_students_insert_input!]!
  on_conflict: course_students_on_conflict
}

"""
Boolean expression to filter rows from the table "course_students". All fields are combined with a logical 'AND'.
"""
input course_students_bool_exp {
  _and: [course_students_bool_exp]
  _not: course_students_bool_exp
  _or: [course_students_bool_exp]
  course_id: String_comparison_exp
  course_student_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  end_at: timestamptz_comparison_exp
  resource_path: String_comparison_exp
  start_at: timestamptz_comparison_exp
  student_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "course_students"
"""
enum course_students_constraint {
  """unique or primary key constraint"""
  course_student_id_un

  """unique or primary key constraint"""
  course_student_pk
}

"""
input type for inserting data into table "course_students"
"""
input course_students_insert_input {
  course_id: String
  course_student_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_at: timestamptz
  resource_path: String
  start_at: timestamptz
  student_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type course_students_max_fields {
  course_id: String
  course_student_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_at: timestamptz
  resource_path: String
  start_at: timestamptz
  student_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "course_students"
"""
input course_students_max_order_by {
  course_id: order_by
  course_student_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_at: order_by
  resource_path: order_by
  start_at: order_by
  student_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type course_students_min_fields {
  course_id: String
  course_student_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_at: timestamptz
  resource_path: String
  start_at: timestamptz
  student_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "course_students"
"""
input course_students_min_order_by {
  course_id: order_by
  course_student_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_at: order_by
  resource_path: order_by
  start_at: order_by
  student_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "course_students"
"""
type course_students_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [course_students!]!
}

"""
input type for inserting object relation for remote table "course_students"
"""
input course_students_obj_rel_insert_input {
  data: course_students_insert_input!
  on_conflict: course_students_on_conflict
}

"""
on conflict condition type for table "course_students"
"""
input course_students_on_conflict {
  constraint: course_students_constraint!
  update_columns: [course_students_update_column!]!
  where: course_students_bool_exp
}

"""
ordering options when selecting data from "course_students"
"""
input course_students_order_by {
  course_id: order_by
  course_student_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_at: order_by
  resource_path: order_by
  start_at: order_by
  student_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "course_students"
"""
input course_students_pk_columns_input {
  course_id: String!
  student_id: String!
}

"""
select columns of table "course_students"
"""
enum course_students_select_column {
  """column name"""
  course_id

  """column name"""
  course_student_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_at

  """column name"""
  resource_path

  """column name"""
  start_at

  """column name"""
  student_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "course_students"
"""
input course_students_set_input {
  course_id: String
  course_student_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_at: timestamptz
  resource_path: String
  start_at: timestamptz
  student_id: String
  updated_at: timestamptz
}

"""
update columns of table "course_students"
"""
enum course_students_update_column {
  """column name"""
  course_id

  """column name"""
  course_student_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_at

  """column name"""
  resource_path

  """column name"""
  start_at

  """column name"""
  student_id

  """column name"""
  updated_at
}

"""
columns and relationships of "course_study_plans"
"""
type course_study_plans {
  course_id: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  resource_path: String!

  """An object relationship"""
  study_plan: study_plans!
  study_plan_id: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "course_study_plans"
"""
type course_study_plans_aggregate {
  aggregate: course_study_plans_aggregate_fields
  nodes: [course_study_plans!]!
}

"""
aggregate fields of "course_study_plans"
"""
type course_study_plans_aggregate_fields {
  count(columns: [course_study_plans_select_column!], distinct: Boolean): Int
  max: course_study_plans_max_fields
  min: course_study_plans_min_fields
}

"""
order by aggregate values of table "course_study_plans"
"""
input course_study_plans_aggregate_order_by {
  count: order_by
  max: course_study_plans_max_order_by
  min: course_study_plans_min_order_by
}

"""
input type for inserting array relation for remote table "course_study_plans"
"""
input course_study_plans_arr_rel_insert_input {
  data: [course_study_plans_insert_input!]!
  on_conflict: course_study_plans_on_conflict
}

"""
Boolean expression to filter rows from the table "course_study_plans". All fields are combined with a logical 'AND'.
"""
input course_study_plans_bool_exp {
  _and: [course_study_plans_bool_exp]
  _not: course_study_plans_bool_exp
  _or: [course_study_plans_bool_exp]
  course_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  resource_path: String_comparison_exp
  study_plan: study_plans_bool_exp
  study_plan_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "course_study_plans"
"""
enum course_study_plans_constraint {
  """unique or primary key constraint"""
  course_study_plans_pk
}

"""
input type for inserting data into table "course_study_plans"
"""
input course_study_plans_insert_input {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  study_plan: study_plans_obj_rel_insert_input
  study_plan_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type course_study_plans_max_fields {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  study_plan_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "course_study_plans"
"""
input course_study_plans_max_order_by {
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  study_plan_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type course_study_plans_min_fields {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  study_plan_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "course_study_plans"
"""
input course_study_plans_min_order_by {
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  study_plan_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "course_study_plans"
"""
type course_study_plans_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [course_study_plans!]!
}

"""
input type for inserting object relation for remote table "course_study_plans"
"""
input course_study_plans_obj_rel_insert_input {
  data: course_study_plans_insert_input!
  on_conflict: course_study_plans_on_conflict
}

"""
on conflict condition type for table "course_study_plans"
"""
input course_study_plans_on_conflict {
  constraint: course_study_plans_constraint!
  update_columns: [course_study_plans_update_column!]!
  where: course_study_plans_bool_exp
}

"""
ordering options when selecting data from "course_study_plans"
"""
input course_study_plans_order_by {
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  study_plan: study_plans_order_by
  study_plan_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "course_study_plans"
"""
input course_study_plans_pk_columns_input {
  course_id: String!
  study_plan_id: String!
}

"""
select columns of table "course_study_plans"
"""
enum course_study_plans_select_column {
  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  study_plan_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "course_study_plans"
"""
input course_study_plans_set_input {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  study_plan_id: String
  updated_at: timestamptz
}

"""
update columns of table "course_study_plans"
"""
enum course_study_plans_update_column {
  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  study_plan_id

  """column name"""
  updated_at
}

"""
columns and relationships of "courses_books"
"""
type courses_books {
  book_id: String!

  """An object relationship"""
  books: books
  course_id: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  resource_path: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "courses_books"
"""
type courses_books_aggregate {
  aggregate: courses_books_aggregate_fields
  nodes: [courses_books!]!
}

"""
aggregate fields of "courses_books"
"""
type courses_books_aggregate_fields {
  count(columns: [courses_books_select_column!], distinct: Boolean): Int
  max: courses_books_max_fields
  min: courses_books_min_fields
}

"""
order by aggregate values of table "courses_books"
"""
input courses_books_aggregate_order_by {
  count: order_by
  max: courses_books_max_order_by
  min: courses_books_min_order_by
}

"""
input type for inserting array relation for remote table "courses_books"
"""
input courses_books_arr_rel_insert_input {
  data: [courses_books_insert_input!]!
  on_conflict: courses_books_on_conflict
}

"""
Boolean expression to filter rows from the table "courses_books". All fields are combined with a logical 'AND'.
"""
input courses_books_bool_exp {
  _and: [courses_books_bool_exp]
  _not: courses_books_bool_exp
  _or: [courses_books_bool_exp]
  book_id: String_comparison_exp
  books: books_bool_exp
  course_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "courses_books"
"""
enum courses_books_constraint {
  """unique or primary key constraint"""
  courses_books_pk
}

"""
input type for inserting data into table "courses_books"
"""
input courses_books_insert_input {
  book_id: String
  books: books_obj_rel_insert_input
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type courses_books_max_fields {
  book_id: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "courses_books"
"""
input courses_books_max_order_by {
  book_id: order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type courses_books_min_fields {
  book_id: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "courses_books"
"""
input courses_books_min_order_by {
  book_id: order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "courses_books"
"""
type courses_books_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [courses_books!]!
}

"""
input type for inserting object relation for remote table "courses_books"
"""
input courses_books_obj_rel_insert_input {
  data: courses_books_insert_input!
  on_conflict: courses_books_on_conflict
}

"""
on conflict condition type for table "courses_books"
"""
input courses_books_on_conflict {
  constraint: courses_books_constraint!
  update_columns: [courses_books_update_column!]!
  where: courses_books_bool_exp
}

"""
ordering options when selecting data from "courses_books"
"""
input courses_books_order_by {
  book_id: order_by
  books: books_order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "courses_books"
"""
input courses_books_pk_columns_input {
  book_id: String!
  course_id: String!
}

"""
select columns of table "courses_books"
"""
enum courses_books_select_column {
  """column name"""
  book_id

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "courses_books"
"""
input courses_books_set_input {
  book_id: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
}

"""
update columns of table "courses_books"
"""
enum courses_books_update_column {
  """column name"""
  book_id

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  updated_at
}

input find_assignment_by_topic_id_args {
  ids: _text
}

input find_quiz_by_lo_id_args {
  id: String
}

input get_list_course_student_study_plans_by_filter_args {
  _book_ids: _text
  _course_id: String
  _grades: _int4
  _status: String
  search: String
}

input get_list_course_study_plan_by_filter_args {
  _book_ids: _text
  _course_id: String
  _grades: _int4
  _status: _text
  search: String
}

input get_student_study_plans_by_filter_args {
  _book_ids: _text
  _course_id: String
  _grades: _int4
  _status: String
  _student_ids: _text
  search: String
}

scalar jsonb

"""
expression to compare columns of type jsonb. All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

"""
columns and relationships of "learning_objectives"
"""
type learning_objectives {
  copied_from: String
  country: String
  created_at: timestamptz!
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  lo_id: String!
  master_lo_id: String
  name: String!
  prerequisites: _text

  """An array relationship"""
  quiz_sets(
    """distinct select on columns"""
    distinct_on: [quiz_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quiz_sets_order_by!]

    """filter the rows returned"""
    where: quiz_sets_bool_exp
  ): [quiz_sets!]!

  """An aggregated array relationship"""
  quiz_sets_aggregate(
    """distinct select on columns"""
    distinct_on: [quiz_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quiz_sets_order_by!]

    """filter the rows returned"""
    where: quiz_sets_bool_exp
  ): quiz_sets_aggregate!
  resource_path: String!
  school_id: Int!
  study_guide: String
  subject: String
  topic_id: String
  type: String
  updated_at: timestamptz!
  video: String
  video_script: String
}

"""
aggregated selection of "learning_objectives"
"""
type learning_objectives_aggregate {
  aggregate: learning_objectives_aggregate_fields
  nodes: [learning_objectives!]!
}

"""
aggregate fields of "learning_objectives"
"""
type learning_objectives_aggregate_fields {
  avg: learning_objectives_avg_fields
  count(columns: [learning_objectives_select_column!], distinct: Boolean): Int
  max: learning_objectives_max_fields
  min: learning_objectives_min_fields
  stddev: learning_objectives_stddev_fields
  stddev_pop: learning_objectives_stddev_pop_fields
  stddev_samp: learning_objectives_stddev_samp_fields
  sum: learning_objectives_sum_fields
  var_pop: learning_objectives_var_pop_fields
  var_samp: learning_objectives_var_samp_fields
  variance: learning_objectives_variance_fields
}

"""
order by aggregate values of table "learning_objectives"
"""
input learning_objectives_aggregate_order_by {
  avg: learning_objectives_avg_order_by
  count: order_by
  max: learning_objectives_max_order_by
  min: learning_objectives_min_order_by
  stddev: learning_objectives_stddev_order_by
  stddev_pop: learning_objectives_stddev_pop_order_by
  stddev_samp: learning_objectives_stddev_samp_order_by
  sum: learning_objectives_sum_order_by
  var_pop: learning_objectives_var_pop_order_by
  var_samp: learning_objectives_var_samp_order_by
  variance: learning_objectives_variance_order_by
}

"""
input type for inserting array relation for remote table "learning_objectives"
"""
input learning_objectives_arr_rel_insert_input {
  data: [learning_objectives_insert_input!]!
  on_conflict: learning_objectives_on_conflict
}

"""aggregate avg on columns"""
type learning_objectives_avg_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by avg() on columns of table "learning_objectives"
"""
input learning_objectives_avg_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "learning_objectives". All fields are combined with a logical 'AND'.
"""
input learning_objectives_bool_exp {
  _and: [learning_objectives_bool_exp]
  _not: learning_objectives_bool_exp
  _or: [learning_objectives_bool_exp]
  copied_from: String_comparison_exp
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  display_order: smallint_comparison_exp
  grade: smallint_comparison_exp
  lo_id: String_comparison_exp
  master_lo_id: String_comparison_exp
  name: String_comparison_exp
  prerequisites: _text_comparison_exp
  quiz_sets: quiz_sets_bool_exp
  resource_path: String_comparison_exp
  school_id: Int_comparison_exp
  study_guide: String_comparison_exp
  subject: String_comparison_exp
  topic_id: String_comparison_exp
  type: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  video: String_comparison_exp
  video_script: String_comparison_exp
}

"""
unique or primary key constraints on table "learning_objectives"
"""
enum learning_objectives_constraint {
  """unique or primary key constraint"""
  learning_objectives_pk
}

"""
input type for incrementing integer column in table "learning_objectives"
"""
input learning_objectives_inc_input {
  display_order: smallint
  grade: smallint
  school_id: Int
}

"""
input type for inserting data into table "learning_objectives"
"""
input learning_objectives_insert_input {
  copied_from: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  lo_id: String
  master_lo_id: String
  name: String
  prerequisites: _text
  quiz_sets: quiz_sets_arr_rel_insert_input
  resource_path: String
  school_id: Int
  study_guide: String
  subject: String
  topic_id: String
  type: String
  updated_at: timestamptz
  video: String
  video_script: String
}

"""aggregate max on columns"""
type learning_objectives_max_fields {
  copied_from: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  lo_id: String
  master_lo_id: String
  name: String
  resource_path: String
  school_id: Int
  study_guide: String
  subject: String
  topic_id: String
  type: String
  updated_at: timestamptz
  video: String
  video_script: String
}

"""
order by max() on columns of table "learning_objectives"
"""
input learning_objectives_max_order_by {
  copied_from: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  grade: order_by
  lo_id: order_by
  master_lo_id: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  study_guide: order_by
  subject: order_by
  topic_id: order_by
  type: order_by
  updated_at: order_by
  video: order_by
  video_script: order_by
}

"""aggregate min on columns"""
type learning_objectives_min_fields {
  copied_from: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  lo_id: String
  master_lo_id: String
  name: String
  resource_path: String
  school_id: Int
  study_guide: String
  subject: String
  topic_id: String
  type: String
  updated_at: timestamptz
  video: String
  video_script: String
}

"""
order by min() on columns of table "learning_objectives"
"""
input learning_objectives_min_order_by {
  copied_from: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  grade: order_by
  lo_id: order_by
  master_lo_id: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  study_guide: order_by
  subject: order_by
  topic_id: order_by
  type: order_by
  updated_at: order_by
  video: order_by
  video_script: order_by
}

"""
response of any mutation on the table "learning_objectives"
"""
type learning_objectives_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [learning_objectives!]!
}

"""
input type for inserting object relation for remote table "learning_objectives"
"""
input learning_objectives_obj_rel_insert_input {
  data: learning_objectives_insert_input!
  on_conflict: learning_objectives_on_conflict
}

"""
on conflict condition type for table "learning_objectives"
"""
input learning_objectives_on_conflict {
  constraint: learning_objectives_constraint!
  update_columns: [learning_objectives_update_column!]!
  where: learning_objectives_bool_exp
}

"""
ordering options when selecting data from "learning_objectives"
"""
input learning_objectives_order_by {
  copied_from: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  grade: order_by
  lo_id: order_by
  master_lo_id: order_by
  name: order_by
  prerequisites: order_by
  quiz_sets_aggregate: quiz_sets_aggregate_order_by
  resource_path: order_by
  school_id: order_by
  study_guide: order_by
  subject: order_by
  topic_id: order_by
  type: order_by
  updated_at: order_by
  video: order_by
  video_script: order_by
}

"""
primary key columns input for table: "learning_objectives"
"""
input learning_objectives_pk_columns_input {
  lo_id: String!
}

"""
select columns of table "learning_objectives"
"""
enum learning_objectives_select_column {
  """column name"""
  copied_from

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  grade

  """column name"""
  lo_id

  """column name"""
  master_lo_id

  """column name"""
  name

  """column name"""
  prerequisites

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  study_guide

  """column name"""
  subject

  """column name"""
  topic_id

  """column name"""
  type

  """column name"""
  updated_at

  """column name"""
  video

  """column name"""
  video_script
}

"""
input type for updating data in table "learning_objectives"
"""
input learning_objectives_set_input {
  copied_from: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  lo_id: String
  master_lo_id: String
  name: String
  prerequisites: _text
  resource_path: String
  school_id: Int
  study_guide: String
  subject: String
  topic_id: String
  type: String
  updated_at: timestamptz
  video: String
  video_script: String
}

"""aggregate stddev on columns"""
type learning_objectives_stddev_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev() on columns of table "learning_objectives"
"""
input learning_objectives_stddev_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type learning_objectives_stddev_pop_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev_pop() on columns of table "learning_objectives"
"""
input learning_objectives_stddev_pop_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type learning_objectives_stddev_samp_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev_samp() on columns of table "learning_objectives"
"""
input learning_objectives_stddev_samp_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate sum on columns"""
type learning_objectives_sum_fields {
  display_order: smallint
  grade: smallint
  school_id: Int
}

"""
order by sum() on columns of table "learning_objectives"
"""
input learning_objectives_sum_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
update columns of table "learning_objectives"
"""
enum learning_objectives_update_column {
  """column name"""
  copied_from

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  grade

  """column name"""
  lo_id

  """column name"""
  master_lo_id

  """column name"""
  name

  """column name"""
  prerequisites

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  study_guide

  """column name"""
  subject

  """column name"""
  topic_id

  """column name"""
  type

  """column name"""
  updated_at

  """column name"""
  video

  """column name"""
  video_script
}

"""aggregate var_pop on columns"""
type learning_objectives_var_pop_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by var_pop() on columns of table "learning_objectives"
"""
input learning_objectives_var_pop_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate var_samp on columns"""
type learning_objectives_var_samp_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by var_samp() on columns of table "learning_objectives"
"""
input learning_objectives_var_samp_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate variance on columns"""
type learning_objectives_variance_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by variance() on columns of table "learning_objectives"
"""
input learning_objectives_variance_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
columns and relationships of "lo_study_plan_items"
"""
type lo_study_plan_items {
  created_at: timestamptz!
  deleted_at: timestamptz
  lo_id: String!
  resource_path: String!

  """An object relationship"""
  study_plan_item: study_plan_items!
  study_plan_item_id: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "lo_study_plan_items"
"""
type lo_study_plan_items_aggregate {
  aggregate: lo_study_plan_items_aggregate_fields
  nodes: [lo_study_plan_items!]!
}

"""
aggregate fields of "lo_study_plan_items"
"""
type lo_study_plan_items_aggregate_fields {
  count(columns: [lo_study_plan_items_select_column!], distinct: Boolean): Int
  max: lo_study_plan_items_max_fields
  min: lo_study_plan_items_min_fields
}

"""
order by aggregate values of table "lo_study_plan_items"
"""
input lo_study_plan_items_aggregate_order_by {
  count: order_by
  max: lo_study_plan_items_max_order_by
  min: lo_study_plan_items_min_order_by
}

"""
input type for inserting array relation for remote table "lo_study_plan_items"
"""
input lo_study_plan_items_arr_rel_insert_input {
  data: [lo_study_plan_items_insert_input!]!
  on_conflict: lo_study_plan_items_on_conflict
}

"""
Boolean expression to filter rows from the table "lo_study_plan_items". All fields are combined with a logical 'AND'.
"""
input lo_study_plan_items_bool_exp {
  _and: [lo_study_plan_items_bool_exp]
  _not: lo_study_plan_items_bool_exp
  _or: [lo_study_plan_items_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  lo_id: String_comparison_exp
  resource_path: String_comparison_exp
  study_plan_item: study_plan_items_bool_exp
  study_plan_item_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "lo_study_plan_items"
"""
enum lo_study_plan_items_constraint {
  """unique or primary key constraint"""
  lo_study_plan_items_pk

  """unique or primary key constraint"""
  lo_study_plan_items_study_plan_item_id_un
}

"""
input type for inserting data into table "lo_study_plan_items"
"""
input lo_study_plan_items_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  lo_id: String
  resource_path: String
  study_plan_item: study_plan_items_obj_rel_insert_input
  study_plan_item_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type lo_study_plan_items_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  lo_id: String
  resource_path: String
  study_plan_item_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "lo_study_plan_items"
"""
input lo_study_plan_items_max_order_by {
  created_at: order_by
  deleted_at: order_by
  lo_id: order_by
  resource_path: order_by
  study_plan_item_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type lo_study_plan_items_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  lo_id: String
  resource_path: String
  study_plan_item_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "lo_study_plan_items"
"""
input lo_study_plan_items_min_order_by {
  created_at: order_by
  deleted_at: order_by
  lo_id: order_by
  resource_path: order_by
  study_plan_item_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "lo_study_plan_items"
"""
type lo_study_plan_items_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [lo_study_plan_items!]!
}

"""
input type for inserting object relation for remote table "lo_study_plan_items"
"""
input lo_study_plan_items_obj_rel_insert_input {
  data: lo_study_plan_items_insert_input!
  on_conflict: lo_study_plan_items_on_conflict
}

"""
on conflict condition type for table "lo_study_plan_items"
"""
input lo_study_plan_items_on_conflict {
  constraint: lo_study_plan_items_constraint!
  update_columns: [lo_study_plan_items_update_column!]!
  where: lo_study_plan_items_bool_exp
}

"""
ordering options when selecting data from "lo_study_plan_items"
"""
input lo_study_plan_items_order_by {
  created_at: order_by
  deleted_at: order_by
  lo_id: order_by
  resource_path: order_by
  study_plan_item: study_plan_items_order_by
  study_plan_item_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "lo_study_plan_items"
"""
input lo_study_plan_items_pk_columns_input {
  lo_id: String!
  study_plan_item_id: String!
}

"""
select columns of table "lo_study_plan_items"
"""
enum lo_study_plan_items_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  lo_id

  """column name"""
  resource_path

  """column name"""
  study_plan_item_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "lo_study_plan_items"
"""
input lo_study_plan_items_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  lo_id: String
  resource_path: String
  study_plan_item_id: String
  updated_at: timestamptz
}

"""
update columns of table "lo_study_plan_items"
"""
enum lo_study_plan_items_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  lo_id

  """column name"""
  resource_path

  """column name"""
  study_plan_item_id

  """column name"""
  updated_at
}

"""mutation root"""
type mutation_root {
  """
  delete data from the table: "assign_study_plan_tasks"
  """
  delete_assign_study_plan_tasks(
    """filter the rows which have to be deleted"""
    where: assign_study_plan_tasks_bool_exp!
  ): assign_study_plan_tasks_mutation_response

  """
  delete single row from the table: "assign_study_plan_tasks"
  """
  delete_assign_study_plan_tasks_by_pk(id: String!): assign_study_plan_tasks

  """
  delete data from the table: "assignment_study_plan_items"
  """
  delete_assignment_study_plan_items(
    """filter the rows which have to be deleted"""
    where: assignment_study_plan_items_bool_exp!
  ): assignment_study_plan_items_mutation_response

  """
  delete single row from the table: "assignment_study_plan_items"
  """
  delete_assignment_study_plan_items_by_pk(assignment_id: String!, study_plan_item_id: String!): assignment_study_plan_items

  """
  delete data from the table: "assignments"
  """
  delete_assignments(
    """filter the rows which have to be deleted"""
    where: assignments_bool_exp!
  ): assignments_mutation_response

  """
  delete single row from the table: "assignments"
  """
  delete_assignments_by_pk(assignment_id: String!): assignments

  """
  delete data from the table: "books"
  """
  delete_books(
    """filter the rows which have to be deleted"""
    where: books_bool_exp!
  ): books_mutation_response

  """
  delete single row from the table: "books"
  """
  delete_books_by_pk(book_id: String!): books

  """
  delete data from the table: "books_chapters"
  """
  delete_books_chapters(
    """filter the rows which have to be deleted"""
    where: books_chapters_bool_exp!
  ): books_chapters_mutation_response

  """
  delete single row from the table: "books_chapters"
  """
  delete_books_chapters_by_pk(book_id: String!, chapter_id: String!): books_chapters

  """
  delete data from the table: "brands"
  """
  delete_brands(
    """filter the rows which have to be deleted"""
    where: brands_bool_exp!
  ): brands_mutation_response

  """
  delete single row from the table: "brands"
  """
  delete_brands_by_pk(brand_id: String!): brands

  """
  delete data from the table: "centers"
  """
  delete_centers(
    """filter the rows which have to be deleted"""
    where: centers_bool_exp!
  ): centers_mutation_response

  """
  delete single row from the table: "centers"
  """
  delete_centers_by_pk(center_id: String!): centers

  """
  delete data from the table: "chapters"
  """
  delete_chapters(
    """filter the rows which have to be deleted"""
    where: chapters_bool_exp!
  ): chapters_mutation_response

  """
  delete single row from the table: "chapters"
  """
  delete_chapters_by_pk(chapter_id: String!): chapters

  """
  delete data from the table: "course_students"
  """
  delete_course_students(
    """filter the rows which have to be deleted"""
    where: course_students_bool_exp!
  ): course_students_mutation_response

  """
  delete single row from the table: "course_students"
  """
  delete_course_students_by_pk(course_id: String!, student_id: String!): course_students

  """
  delete data from the table: "course_study_plans"
  """
  delete_course_study_plans(
    """filter the rows which have to be deleted"""
    where: course_study_plans_bool_exp!
  ): course_study_plans_mutation_response

  """
  delete single row from the table: "course_study_plans"
  """
  delete_course_study_plans_by_pk(course_id: String!, study_plan_id: String!): course_study_plans

  """
  delete data from the table: "courses_books"
  """
  delete_courses_books(
    """filter the rows which have to be deleted"""
    where: courses_books_bool_exp!
  ): courses_books_mutation_response

  """
  delete single row from the table: "courses_books"
  """
  delete_courses_books_by_pk(book_id: String!, course_id: String!): courses_books

  """
  delete data from the table: "learning_objectives"
  """
  delete_learning_objectives(
    """filter the rows which have to be deleted"""
    where: learning_objectives_bool_exp!
  ): learning_objectives_mutation_response

  """
  delete single row from the table: "learning_objectives"
  """
  delete_learning_objectives_by_pk(lo_id: String!): learning_objectives

  """
  delete data from the table: "lo_study_plan_items"
  """
  delete_lo_study_plan_items(
    """filter the rows which have to be deleted"""
    where: lo_study_plan_items_bool_exp!
  ): lo_study_plan_items_mutation_response

  """
  delete single row from the table: "lo_study_plan_items"
  """
  delete_lo_study_plan_items_by_pk(lo_id: String!, study_plan_item_id: String!): lo_study_plan_items

  """
  delete data from the table: "quiz_sets"
  """
  delete_quiz_sets(
    """filter the rows which have to be deleted"""
    where: quiz_sets_bool_exp!
  ): quiz_sets_mutation_response

  """
  delete single row from the table: "quiz_sets"
  """
  delete_quiz_sets_by_pk(quiz_set_id: String!): quiz_sets

  """
  delete data from the table: "quizzes"
  """
  delete_quizzes(
    """filter the rows which have to be deleted"""
    where: quizzes_bool_exp!
  ): quizzes_mutation_response

  """
  delete single row from the table: "quizzes"
  """
  delete_quizzes_by_pk(quiz_id: String!): quizzes

  """
  delete data from the table: "scheduler_items"
  """
  delete_scheduler_items(
    """filter the rows which have to be deleted"""
    where: scheduler_items_bool_exp!
  ): scheduler_items_mutation_response

  """
  delete single row from the table: "scheduler_items"
  """
  delete_scheduler_items_by_pk(scheduler_item_id: String!): scheduler_items

  """
  delete data from the table: "scheduler_patterns"
  """
  delete_scheduler_patterns(
    """filter the rows which have to be deleted"""
    where: scheduler_patterns_bool_exp!
  ): scheduler_patterns_mutation_response

  """
  delete single row from the table: "scheduler_patterns"
  """
  delete_scheduler_patterns_by_pk(scheduler_pattern_id: String!): scheduler_patterns

  """
  delete data from the table: "student_study_plans"
  """
  delete_student_study_plans(
    """filter the rows which have to be deleted"""
    where: student_study_plans_bool_exp!
  ): student_study_plans_mutation_response

  """
  delete single row from the table: "student_study_plans"
  """
  delete_student_study_plans_by_pk(student_id: String!, study_plan_id: String!): student_study_plans

  """
  delete data from the table: "study_plan_items"
  """
  delete_study_plan_items(
    """filter the rows which have to be deleted"""
    where: study_plan_items_bool_exp!
  ): study_plan_items_mutation_response

  """
  delete single row from the table: "study_plan_items"
  """
  delete_study_plan_items_by_pk(study_plan_item_id: String!): study_plan_items

  """
  delete data from the table: "study_plans"
  """
  delete_study_plans(
    """filter the rows which have to be deleted"""
    where: study_plans_bool_exp!
  ): study_plans_mutation_response

  """
  delete single row from the table: "study_plans"
  """
  delete_study_plans_by_pk(study_plan_id: String!): study_plans

  """
  delete data from the table: "topics"
  """
  delete_topics(
    """filter the rows which have to be deleted"""
    where: topics_bool_exp!
  ): topics_mutation_response

  """
  delete data from the table: "topics_assignments"
  """
  delete_topics_assignments(
    """filter the rows which have to be deleted"""
    where: topics_assignments_bool_exp!
  ): topics_assignments_mutation_response

  """
  delete single row from the table: "topics_assignments"
  """
  delete_topics_assignments_by_pk(assignment_id: String!, topic_id: String!): topics_assignments

  """
  delete single row from the table: "topics"
  """
  delete_topics_by_pk(topic_id: String!): topics

  """
  delete data from the table: "topics_learning_objectives"
  """
  delete_topics_learning_objectives(
    """filter the rows which have to be deleted"""
    where: topics_learning_objectives_bool_exp!
  ): topics_learning_objectives_mutation_response

  """
  delete single row from the table: "topics_learning_objectives"
  """
  delete_topics_learning_objectives_by_pk(lo_id: String!, topic_id: String!): topics_learning_objectives

  """
  insert data into the table: "assign_study_plan_tasks"
  """
  insert_assign_study_plan_tasks(
    """the rows to be inserted"""
    objects: [assign_study_plan_tasks_insert_input!]!

    """on conflict condition"""
    on_conflict: assign_study_plan_tasks_on_conflict
  ): assign_study_plan_tasks_mutation_response

  """
  insert a single row into the table: "assign_study_plan_tasks"
  """
  insert_assign_study_plan_tasks_one(
    """the row to be inserted"""
    object: assign_study_plan_tasks_insert_input!

    """on conflict condition"""
    on_conflict: assign_study_plan_tasks_on_conflict
  ): assign_study_plan_tasks

  """
  insert data into the table: "assignment_study_plan_items"
  """
  insert_assignment_study_plan_items(
    """the rows to be inserted"""
    objects: [assignment_study_plan_items_insert_input!]!

    """on conflict condition"""
    on_conflict: assignment_study_plan_items_on_conflict
  ): assignment_study_plan_items_mutation_response

  """
  insert a single row into the table: "assignment_study_plan_items"
  """
  insert_assignment_study_plan_items_one(
    """the row to be inserted"""
    object: assignment_study_plan_items_insert_input!

    """on conflict condition"""
    on_conflict: assignment_study_plan_items_on_conflict
  ): assignment_study_plan_items

  """
  insert data into the table: "assignments"
  """
  insert_assignments(
    """the rows to be inserted"""
    objects: [assignments_insert_input!]!

    """on conflict condition"""
    on_conflict: assignments_on_conflict
  ): assignments_mutation_response

  """
  insert a single row into the table: "assignments"
  """
  insert_assignments_one(
    """the row to be inserted"""
    object: assignments_insert_input!

    """on conflict condition"""
    on_conflict: assignments_on_conflict
  ): assignments

  """
  insert data into the table: "books"
  """
  insert_books(
    """the rows to be inserted"""
    objects: [books_insert_input!]!

    """on conflict condition"""
    on_conflict: books_on_conflict
  ): books_mutation_response

  """
  insert data into the table: "books_chapters"
  """
  insert_books_chapters(
    """the rows to be inserted"""
    objects: [books_chapters_insert_input!]!

    """on conflict condition"""
    on_conflict: books_chapters_on_conflict
  ): books_chapters_mutation_response

  """
  insert a single row into the table: "books_chapters"
  """
  insert_books_chapters_one(
    """the row to be inserted"""
    object: books_chapters_insert_input!

    """on conflict condition"""
    on_conflict: books_chapters_on_conflict
  ): books_chapters

  """
  insert a single row into the table: "books"
  """
  insert_books_one(
    """the row to be inserted"""
    object: books_insert_input!

    """on conflict condition"""
    on_conflict: books_on_conflict
  ): books

  """
  insert data into the table: "brands"
  """
  insert_brands(
    """the rows to be inserted"""
    objects: [brands_insert_input!]!

    """on conflict condition"""
    on_conflict: brands_on_conflict
  ): brands_mutation_response

  """
  insert a single row into the table: "brands"
  """
  insert_brands_one(
    """the row to be inserted"""
    object: brands_insert_input!

    """on conflict condition"""
    on_conflict: brands_on_conflict
  ): brands

  """
  insert data into the table: "centers"
  """
  insert_centers(
    """the rows to be inserted"""
    objects: [centers_insert_input!]!

    """on conflict condition"""
    on_conflict: centers_on_conflict
  ): centers_mutation_response

  """
  insert a single row into the table: "centers"
  """
  insert_centers_one(
    """the row to be inserted"""
    object: centers_insert_input!

    """on conflict condition"""
    on_conflict: centers_on_conflict
  ): centers

  """
  insert data into the table: "chapters"
  """
  insert_chapters(
    """the rows to be inserted"""
    objects: [chapters_insert_input!]!

    """on conflict condition"""
    on_conflict: chapters_on_conflict
  ): chapters_mutation_response

  """
  insert a single row into the table: "chapters"
  """
  insert_chapters_one(
    """the row to be inserted"""
    object: chapters_insert_input!

    """on conflict condition"""
    on_conflict: chapters_on_conflict
  ): chapters

  """
  insert data into the table: "course_students"
  """
  insert_course_students(
    """the rows to be inserted"""
    objects: [course_students_insert_input!]!

    """on conflict condition"""
    on_conflict: course_students_on_conflict
  ): course_students_mutation_response

  """
  insert a single row into the table: "course_students"
  """
  insert_course_students_one(
    """the row to be inserted"""
    object: course_students_insert_input!

    """on conflict condition"""
    on_conflict: course_students_on_conflict
  ): course_students

  """
  insert data into the table: "course_study_plans"
  """
  insert_course_study_plans(
    """the rows to be inserted"""
    objects: [course_study_plans_insert_input!]!

    """on conflict condition"""
    on_conflict: course_study_plans_on_conflict
  ): course_study_plans_mutation_response

  """
  insert a single row into the table: "course_study_plans"
  """
  insert_course_study_plans_one(
    """the row to be inserted"""
    object: course_study_plans_insert_input!

    """on conflict condition"""
    on_conflict: course_study_plans_on_conflict
  ): course_study_plans

  """
  insert data into the table: "courses_books"
  """
  insert_courses_books(
    """the rows to be inserted"""
    objects: [courses_books_insert_input!]!

    """on conflict condition"""
    on_conflict: courses_books_on_conflict
  ): courses_books_mutation_response

  """
  insert a single row into the table: "courses_books"
  """
  insert_courses_books_one(
    """the row to be inserted"""
    object: courses_books_insert_input!

    """on conflict condition"""
    on_conflict: courses_books_on_conflict
  ): courses_books

  """
  insert data into the table: "learning_objectives"
  """
  insert_learning_objectives(
    """the rows to be inserted"""
    objects: [learning_objectives_insert_input!]!

    """on conflict condition"""
    on_conflict: learning_objectives_on_conflict
  ): learning_objectives_mutation_response

  """
  insert a single row into the table: "learning_objectives"
  """
  insert_learning_objectives_one(
    """the row to be inserted"""
    object: learning_objectives_insert_input!

    """on conflict condition"""
    on_conflict: learning_objectives_on_conflict
  ): learning_objectives

  """
  insert data into the table: "lo_study_plan_items"
  """
  insert_lo_study_plan_items(
    """the rows to be inserted"""
    objects: [lo_study_plan_items_insert_input!]!

    """on conflict condition"""
    on_conflict: lo_study_plan_items_on_conflict
  ): lo_study_plan_items_mutation_response

  """
  insert a single row into the table: "lo_study_plan_items"
  """
  insert_lo_study_plan_items_one(
    """the row to be inserted"""
    object: lo_study_plan_items_insert_input!

    """on conflict condition"""
    on_conflict: lo_study_plan_items_on_conflict
  ): lo_study_plan_items

  """
  insert data into the table: "quiz_sets"
  """
  insert_quiz_sets(
    """the rows to be inserted"""
    objects: [quiz_sets_insert_input!]!

    """on conflict condition"""
    on_conflict: quiz_sets_on_conflict
  ): quiz_sets_mutation_response

  """
  insert a single row into the table: "quiz_sets"
  """
  insert_quiz_sets_one(
    """the row to be inserted"""
    object: quiz_sets_insert_input!

    """on conflict condition"""
    on_conflict: quiz_sets_on_conflict
  ): quiz_sets

  """
  insert data into the table: "quizzes"
  """
  insert_quizzes(
    """the rows to be inserted"""
    objects: [quizzes_insert_input!]!

    """on conflict condition"""
    on_conflict: quizzes_on_conflict
  ): quizzes_mutation_response

  """
  insert a single row into the table: "quizzes"
  """
  insert_quizzes_one(
    """the row to be inserted"""
    object: quizzes_insert_input!

    """on conflict condition"""
    on_conflict: quizzes_on_conflict
  ): quizzes

  """
  insert data into the table: "scheduler_items"
  """
  insert_scheduler_items(
    """the rows to be inserted"""
    objects: [scheduler_items_insert_input!]!

    """on conflict condition"""
    on_conflict: scheduler_items_on_conflict
  ): scheduler_items_mutation_response

  """
  insert a single row into the table: "scheduler_items"
  """
  insert_scheduler_items_one(
    """the row to be inserted"""
    object: scheduler_items_insert_input!

    """on conflict condition"""
    on_conflict: scheduler_items_on_conflict
  ): scheduler_items

  """
  insert data into the table: "scheduler_patterns"
  """
  insert_scheduler_patterns(
    """the rows to be inserted"""
    objects: [scheduler_patterns_insert_input!]!

    """on conflict condition"""
    on_conflict: scheduler_patterns_on_conflict
  ): scheduler_patterns_mutation_response

  """
  insert a single row into the table: "scheduler_patterns"
  """
  insert_scheduler_patterns_one(
    """the row to be inserted"""
    object: scheduler_patterns_insert_input!

    """on conflict condition"""
    on_conflict: scheduler_patterns_on_conflict
  ): scheduler_patterns

  """
  insert data into the table: "student_study_plans"
  """
  insert_student_study_plans(
    """the rows to be inserted"""
    objects: [student_study_plans_insert_input!]!

    """on conflict condition"""
    on_conflict: student_study_plans_on_conflict
  ): student_study_plans_mutation_response

  """
  insert a single row into the table: "student_study_plans"
  """
  insert_student_study_plans_one(
    """the row to be inserted"""
    object: student_study_plans_insert_input!

    """on conflict condition"""
    on_conflict: student_study_plans_on_conflict
  ): student_study_plans

  """
  insert data into the table: "study_plan_items"
  """
  insert_study_plan_items(
    """the rows to be inserted"""
    objects: [study_plan_items_insert_input!]!

    """on conflict condition"""
    on_conflict: study_plan_items_on_conflict
  ): study_plan_items_mutation_response

  """
  insert a single row into the table: "study_plan_items"
  """
  insert_study_plan_items_one(
    """the row to be inserted"""
    object: study_plan_items_insert_input!

    """on conflict condition"""
    on_conflict: study_plan_items_on_conflict
  ): study_plan_items

  """
  insert data into the table: "study_plans"
  """
  insert_study_plans(
    """the rows to be inserted"""
    objects: [study_plans_insert_input!]!

    """on conflict condition"""
    on_conflict: study_plans_on_conflict
  ): study_plans_mutation_response

  """
  insert a single row into the table: "study_plans"
  """
  insert_study_plans_one(
    """the row to be inserted"""
    object: study_plans_insert_input!

    """on conflict condition"""
    on_conflict: study_plans_on_conflict
  ): study_plans

  """
  insert data into the table: "topics"
  """
  insert_topics(
    """the rows to be inserted"""
    objects: [topics_insert_input!]!

    """on conflict condition"""
    on_conflict: topics_on_conflict
  ): topics_mutation_response

  """
  insert data into the table: "topics_assignments"
  """
  insert_topics_assignments(
    """the rows to be inserted"""
    objects: [topics_assignments_insert_input!]!

    """on conflict condition"""
    on_conflict: topics_assignments_on_conflict
  ): topics_assignments_mutation_response

  """
  insert a single row into the table: "topics_assignments"
  """
  insert_topics_assignments_one(
    """the row to be inserted"""
    object: topics_assignments_insert_input!

    """on conflict condition"""
    on_conflict: topics_assignments_on_conflict
  ): topics_assignments

  """
  insert data into the table: "topics_learning_objectives"
  """
  insert_topics_learning_objectives(
    """the rows to be inserted"""
    objects: [topics_learning_objectives_insert_input!]!

    """on conflict condition"""
    on_conflict: topics_learning_objectives_on_conflict
  ): topics_learning_objectives_mutation_response

  """
  insert a single row into the table: "topics_learning_objectives"
  """
  insert_topics_learning_objectives_one(
    """the row to be inserted"""
    object: topics_learning_objectives_insert_input!

    """on conflict condition"""
    on_conflict: topics_learning_objectives_on_conflict
  ): topics_learning_objectives

  """
  insert a single row into the table: "topics"
  """
  insert_topics_one(
    """the row to be inserted"""
    object: topics_insert_input!

    """on conflict condition"""
    on_conflict: topics_on_conflict
  ): topics

  """
  update data of the table: "assign_study_plan_tasks"
  """
  update_assign_study_plan_tasks(
    """sets the columns of the filtered rows to the given values"""
    _set: assign_study_plan_tasks_set_input

    """filter the rows which have to be updated"""
    where: assign_study_plan_tasks_bool_exp!
  ): assign_study_plan_tasks_mutation_response

  """
  update single row of the table: "assign_study_plan_tasks"
  """
  update_assign_study_plan_tasks_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: assign_study_plan_tasks_set_input
    pk_columns: assign_study_plan_tasks_pk_columns_input!
  ): assign_study_plan_tasks

  """
  update data of the table: "assignment_study_plan_items"
  """
  update_assignment_study_plan_items(
    """sets the columns of the filtered rows to the given values"""
    _set: assignment_study_plan_items_set_input

    """filter the rows which have to be updated"""
    where: assignment_study_plan_items_bool_exp!
  ): assignment_study_plan_items_mutation_response

  """
  update single row of the table: "assignment_study_plan_items"
  """
  update_assignment_study_plan_items_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: assignment_study_plan_items_set_input
    pk_columns: assignment_study_plan_items_pk_columns_input!
  ): assignment_study_plan_items

  """
  update data of the table: "assignments"
  """
  update_assignments(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: assignments_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: assignments_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: assignments_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: assignments_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: assignments_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: assignments_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: assignments_set_input

    """filter the rows which have to be updated"""
    where: assignments_bool_exp!
  ): assignments_mutation_response

  """
  update single row of the table: "assignments"
  """
  update_assignments_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: assignments_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: assignments_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: assignments_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: assignments_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: assignments_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: assignments_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: assignments_set_input
    pk_columns: assignments_pk_columns_input!
  ): assignments

  """
  update data of the table: "books"
  """
  update_books(
    """increments the integer columns with given value of the filtered values"""
    _inc: books_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: books_set_input

    """filter the rows which have to be updated"""
    where: books_bool_exp!
  ): books_mutation_response

  """
  update single row of the table: "books"
  """
  update_books_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: books_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: books_set_input
    pk_columns: books_pk_columns_input!
  ): books

  """
  update data of the table: "books_chapters"
  """
  update_books_chapters(
    """sets the columns of the filtered rows to the given values"""
    _set: books_chapters_set_input

    """filter the rows which have to be updated"""
    where: books_chapters_bool_exp!
  ): books_chapters_mutation_response

  """
  update single row of the table: "books_chapters"
  """
  update_books_chapters_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: books_chapters_set_input
    pk_columns: books_chapters_pk_columns_input!
  ): books_chapters

  """
  update data of the table: "brands"
  """
  update_brands(
    """sets the columns of the filtered rows to the given values"""
    _set: brands_set_input

    """filter the rows which have to be updated"""
    where: brands_bool_exp!
  ): brands_mutation_response

  """
  update single row of the table: "brands"
  """
  update_brands_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: brands_set_input
    pk_columns: brands_pk_columns_input!
  ): brands

  """
  update data of the table: "centers"
  """
  update_centers(
    """sets the columns of the filtered rows to the given values"""
    _set: centers_set_input

    """filter the rows which have to be updated"""
    where: centers_bool_exp!
  ): centers_mutation_response

  """
  update single row of the table: "centers"
  """
  update_centers_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: centers_set_input
    pk_columns: centers_pk_columns_input!
  ): centers

  """
  update data of the table: "chapters"
  """
  update_chapters(
    """increments the integer columns with given value of the filtered values"""
    _inc: chapters_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: chapters_set_input

    """filter the rows which have to be updated"""
    where: chapters_bool_exp!
  ): chapters_mutation_response

  """
  update single row of the table: "chapters"
  """
  update_chapters_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: chapters_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: chapters_set_input
    pk_columns: chapters_pk_columns_input!
  ): chapters

  """
  update data of the table: "course_students"
  """
  update_course_students(
    """sets the columns of the filtered rows to the given values"""
    _set: course_students_set_input

    """filter the rows which have to be updated"""
    where: course_students_bool_exp!
  ): course_students_mutation_response

  """
  update single row of the table: "course_students"
  """
  update_course_students_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: course_students_set_input
    pk_columns: course_students_pk_columns_input!
  ): course_students

  """
  update data of the table: "course_study_plans"
  """
  update_course_study_plans(
    """sets the columns of the filtered rows to the given values"""
    _set: course_study_plans_set_input

    """filter the rows which have to be updated"""
    where: course_study_plans_bool_exp!
  ): course_study_plans_mutation_response

  """
  update single row of the table: "course_study_plans"
  """
  update_course_study_plans_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: course_study_plans_set_input
    pk_columns: course_study_plans_pk_columns_input!
  ): course_study_plans

  """
  update data of the table: "courses_books"
  """
  update_courses_books(
    """sets the columns of the filtered rows to the given values"""
    _set: courses_books_set_input

    """filter the rows which have to be updated"""
    where: courses_books_bool_exp!
  ): courses_books_mutation_response

  """
  update single row of the table: "courses_books"
  """
  update_courses_books_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: courses_books_set_input
    pk_columns: courses_books_pk_columns_input!
  ): courses_books

  """
  update data of the table: "learning_objectives"
  """
  update_learning_objectives(
    """increments the integer columns with given value of the filtered values"""
    _inc: learning_objectives_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: learning_objectives_set_input

    """filter the rows which have to be updated"""
    where: learning_objectives_bool_exp!
  ): learning_objectives_mutation_response

  """
  update single row of the table: "learning_objectives"
  """
  update_learning_objectives_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: learning_objectives_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: learning_objectives_set_input
    pk_columns: learning_objectives_pk_columns_input!
  ): learning_objectives

  """
  update data of the table: "lo_study_plan_items"
  """
  update_lo_study_plan_items(
    """sets the columns of the filtered rows to the given values"""
    _set: lo_study_plan_items_set_input

    """filter the rows which have to be updated"""
    where: lo_study_plan_items_bool_exp!
  ): lo_study_plan_items_mutation_response

  """
  update single row of the table: "lo_study_plan_items"
  """
  update_lo_study_plan_items_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: lo_study_plan_items_set_input
    pk_columns: lo_study_plan_items_pk_columns_input!
  ): lo_study_plan_items

  """
  update data of the table: "quiz_sets"
  """
  update_quiz_sets(
    """sets the columns of the filtered rows to the given values"""
    _set: quiz_sets_set_input

    """filter the rows which have to be updated"""
    where: quiz_sets_bool_exp!
  ): quiz_sets_mutation_response

  """
  update single row of the table: "quiz_sets"
  """
  update_quiz_sets_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: quiz_sets_set_input
    pk_columns: quiz_sets_pk_columns_input!
  ): quiz_sets

  """
  update data of the table: "quizzes"
  """
  update_quizzes(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: quizzes_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: quizzes_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: quizzes_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: quizzes_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: quizzes_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: quizzes_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: quizzes_set_input

    """filter the rows which have to be updated"""
    where: quizzes_bool_exp!
  ): quizzes_mutation_response

  """
  update single row of the table: "quizzes"
  """
  update_quizzes_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: quizzes_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: quizzes_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: quizzes_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: quizzes_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: quizzes_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: quizzes_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: quizzes_set_input
    pk_columns: quizzes_pk_columns_input!
  ): quizzes

  """
  update data of the table: "scheduler_items"
  """
  update_scheduler_items(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: scheduler_items_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: scheduler_items_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: scheduler_items_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: scheduler_items_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: scheduler_items_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: scheduler_items_set_input

    """filter the rows which have to be updated"""
    where: scheduler_items_bool_exp!
  ): scheduler_items_mutation_response

  """
  update single row of the table: "scheduler_items"
  """
  update_scheduler_items_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: scheduler_items_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: scheduler_items_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: scheduler_items_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: scheduler_items_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: scheduler_items_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: scheduler_items_set_input
    pk_columns: scheduler_items_pk_columns_input!
  ): scheduler_items

  """
  update data of the table: "scheduler_patterns"
  """
  update_scheduler_patterns(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: scheduler_patterns_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: scheduler_patterns_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: scheduler_patterns_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: scheduler_patterns_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: scheduler_patterns_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: scheduler_patterns_set_input

    """filter the rows which have to be updated"""
    where: scheduler_patterns_bool_exp!
  ): scheduler_patterns_mutation_response

  """
  update single row of the table: "scheduler_patterns"
  """
  update_scheduler_patterns_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: scheduler_patterns_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: scheduler_patterns_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: scheduler_patterns_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: scheduler_patterns_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: scheduler_patterns_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: scheduler_patterns_set_input
    pk_columns: scheduler_patterns_pk_columns_input!
  ): scheduler_patterns

  """
  update data of the table: "student_study_plans"
  """
  update_student_study_plans(
    """sets the columns of the filtered rows to the given values"""
    _set: student_study_plans_set_input

    """filter the rows which have to be updated"""
    where: student_study_plans_bool_exp!
  ): student_study_plans_mutation_response

  """
  update single row of the table: "student_study_plans"
  """
  update_student_study_plans_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: student_study_plans_set_input
    pk_columns: student_study_plans_pk_columns_input!
  ): student_study_plans

  """
  update data of the table: "study_plan_items"
  """
  update_study_plan_items(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: study_plan_items_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: study_plan_items_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: study_plan_items_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: study_plan_items_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: study_plan_items_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: study_plan_items_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: study_plan_items_set_input

    """filter the rows which have to be updated"""
    where: study_plan_items_bool_exp!
  ): study_plan_items_mutation_response

  """
  update single row of the table: "study_plan_items"
  """
  update_study_plan_items_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: study_plan_items_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: study_plan_items_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: study_plan_items_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: study_plan_items_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: study_plan_items_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: study_plan_items_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: study_plan_items_set_input
    pk_columns: study_plan_items_pk_columns_input!
  ): study_plan_items

  """
  update data of the table: "study_plans"
  """
  update_study_plans(
    """increments the integer columns with given value of the filtered values"""
    _inc: study_plans_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: study_plans_set_input

    """filter the rows which have to be updated"""
    where: study_plans_bool_exp!
  ): study_plans_mutation_response

  """
  update single row of the table: "study_plans"
  """
  update_study_plans_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: study_plans_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: study_plans_set_input
    pk_columns: study_plans_pk_columns_input!
  ): study_plans

  """
  update data of the table: "topics"
  """
  update_topics(
    """increments the integer columns with given value of the filtered values"""
    _inc: topics_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: topics_set_input

    """filter the rows which have to be updated"""
    where: topics_bool_exp!
  ): topics_mutation_response

  """
  update data of the table: "topics_assignments"
  """
  update_topics_assignments(
    """increments the integer columns with given value of the filtered values"""
    _inc: topics_assignments_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: topics_assignments_set_input

    """filter the rows which have to be updated"""
    where: topics_assignments_bool_exp!
  ): topics_assignments_mutation_response

  """
  update single row of the table: "topics_assignments"
  """
  update_topics_assignments_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: topics_assignments_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: topics_assignments_set_input
    pk_columns: topics_assignments_pk_columns_input!
  ): topics_assignments

  """
  update single row of the table: "topics"
  """
  update_topics_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: topics_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: topics_set_input
    pk_columns: topics_pk_columns_input!
  ): topics

  """
  update data of the table: "topics_learning_objectives"
  """
  update_topics_learning_objectives(
    """increments the integer columns with given value of the filtered values"""
    _inc: topics_learning_objectives_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: topics_learning_objectives_set_input

    """filter the rows which have to be updated"""
    where: topics_learning_objectives_bool_exp!
  ): topics_learning_objectives_mutation_response

  """
  update single row of the table: "topics_learning_objectives"
  """
  update_topics_learning_objectives_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: topics_learning_objectives_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: topics_learning_objectives_set_input
    pk_columns: topics_learning_objectives_pk_columns_input!
  ): topics_learning_objectives
}

"""column ordering options"""
enum order_by {
  """in the ascending order, nulls last"""
  asc

  """in the ascending order, nulls first"""
  asc_nulls_first

  """in the ascending order, nulls last"""
  asc_nulls_last

  """in the descending order, nulls first"""
  desc

  """in the descending order, nulls first"""
  desc_nulls_first

  """in the descending order, nulls last"""
  desc_nulls_last
}

"""query root"""
type query_root {
  """
  fetch data from the table: "assign_study_plan_tasks"
  """
  assign_study_plan_tasks(
    """distinct select on columns"""
    distinct_on: [assign_study_plan_tasks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assign_study_plan_tasks_order_by!]

    """filter the rows returned"""
    where: assign_study_plan_tasks_bool_exp
  ): [assign_study_plan_tasks!]!

  """
  fetch aggregated fields from the table: "assign_study_plan_tasks"
  """
  assign_study_plan_tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [assign_study_plan_tasks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assign_study_plan_tasks_order_by!]

    """filter the rows returned"""
    where: assign_study_plan_tasks_bool_exp
  ): assign_study_plan_tasks_aggregate!

  """
  fetch data from the table: "assign_study_plan_tasks" using primary key columns
  """
  assign_study_plan_tasks_by_pk(id: String!): assign_study_plan_tasks

  """
  fetch data from the table: "assignment_study_plan_items"
  """
  assignment_study_plan_items(
    """distinct select on columns"""
    distinct_on: [assignment_study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignment_study_plan_items_order_by!]

    """filter the rows returned"""
    where: assignment_study_plan_items_bool_exp
  ): [assignment_study_plan_items!]!

  """
  fetch aggregated fields from the table: "assignment_study_plan_items"
  """
  assignment_study_plan_items_aggregate(
    """distinct select on columns"""
    distinct_on: [assignment_study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignment_study_plan_items_order_by!]

    """filter the rows returned"""
    where: assignment_study_plan_items_bool_exp
  ): assignment_study_plan_items_aggregate!

  """
  fetch data from the table: "assignment_study_plan_items" using primary key columns
  """
  assignment_study_plan_items_by_pk(assignment_id: String!, study_plan_item_id: String!): assignment_study_plan_items

  """
  fetch data from the table: "assignments"
  """
  assignments(
    """distinct select on columns"""
    distinct_on: [assignments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignments_order_by!]

    """filter the rows returned"""
    where: assignments_bool_exp
  ): [assignments!]!

  """
  fetch aggregated fields from the table: "assignments"
  """
  assignments_aggregate(
    """distinct select on columns"""
    distinct_on: [assignments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignments_order_by!]

    """filter the rows returned"""
    where: assignments_bool_exp
  ): assignments_aggregate!

  """fetch data from the table: "assignments" using primary key columns"""
  assignments_by_pk(assignment_id: String!): assignments

  """
  fetch data from the table: "books"
  """
  books(
    """distinct select on columns"""
    distinct_on: [books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_order_by!]

    """filter the rows returned"""
    where: books_bool_exp
  ): [books!]!

  """
  fetch aggregated fields from the table: "books"
  """
  books_aggregate(
    """distinct select on columns"""
    distinct_on: [books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_order_by!]

    """filter the rows returned"""
    where: books_bool_exp
  ): books_aggregate!

  """fetch data from the table: "books" using primary key columns"""
  books_by_pk(book_id: String!): books

  """
  fetch data from the table: "books_chapters"
  """
  books_chapters(
    """distinct select on columns"""
    distinct_on: [books_chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_chapters_order_by!]

    """filter the rows returned"""
    where: books_chapters_bool_exp
  ): [books_chapters!]!

  """
  fetch aggregated fields from the table: "books_chapters"
  """
  books_chapters_aggregate(
    """distinct select on columns"""
    distinct_on: [books_chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_chapters_order_by!]

    """filter the rows returned"""
    where: books_chapters_bool_exp
  ): books_chapters_aggregate!

  """fetch data from the table: "books_chapters" using primary key columns"""
  books_chapters_by_pk(book_id: String!, chapter_id: String!): books_chapters

  """
  fetch data from the table: "brands"
  """
  brands(
    """distinct select on columns"""
    distinct_on: [brands_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [brands_order_by!]

    """filter the rows returned"""
    where: brands_bool_exp
  ): [brands!]!

  """
  fetch aggregated fields from the table: "brands"
  """
  brands_aggregate(
    """distinct select on columns"""
    distinct_on: [brands_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [brands_order_by!]

    """filter the rows returned"""
    where: brands_bool_exp
  ): brands_aggregate!

  """fetch data from the table: "brands" using primary key columns"""
  brands_by_pk(brand_id: String!): brands

  """
  fetch data from the table: "centers"
  """
  centers(
    """distinct select on columns"""
    distinct_on: [centers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [centers_order_by!]

    """filter the rows returned"""
    where: centers_bool_exp
  ): [centers!]!

  """
  fetch aggregated fields from the table: "centers"
  """
  centers_aggregate(
    """distinct select on columns"""
    distinct_on: [centers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [centers_order_by!]

    """filter the rows returned"""
    where: centers_bool_exp
  ): centers_aggregate!

  """fetch data from the table: "centers" using primary key columns"""
  centers_by_pk(center_id: String!): centers

  """
  fetch data from the table: "chapters"
  """
  chapters(
    """distinct select on columns"""
    distinct_on: [chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [chapters_order_by!]

    """filter the rows returned"""
    where: chapters_bool_exp
  ): [chapters!]!

  """
  fetch aggregated fields from the table: "chapters"
  """
  chapters_aggregate(
    """distinct select on columns"""
    distinct_on: [chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [chapters_order_by!]

    """filter the rows returned"""
    where: chapters_bool_exp
  ): chapters_aggregate!

  """fetch data from the table: "chapters" using primary key columns"""
  chapters_by_pk(chapter_id: String!): chapters

  """
  fetch data from the table: "course_students"
  """
  course_students(
    """distinct select on columns"""
    distinct_on: [course_students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_students_order_by!]

    """filter the rows returned"""
    where: course_students_bool_exp
  ): [course_students!]!

  """
  fetch aggregated fields from the table: "course_students"
  """
  course_students_aggregate(
    """distinct select on columns"""
    distinct_on: [course_students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_students_order_by!]

    """filter the rows returned"""
    where: course_students_bool_exp
  ): course_students_aggregate!

  """fetch data from the table: "course_students" using primary key columns"""
  course_students_by_pk(course_id: String!, student_id: String!): course_students

  """
  fetch data from the table: "course_study_plans"
  """
  course_study_plans(
    """distinct select on columns"""
    distinct_on: [course_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_study_plans_order_by!]

    """filter the rows returned"""
    where: course_study_plans_bool_exp
  ): [course_study_plans!]!

  """
  fetch aggregated fields from the table: "course_study_plans"
  """
  course_study_plans_aggregate(
    """distinct select on columns"""
    distinct_on: [course_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_study_plans_order_by!]

    """filter the rows returned"""
    where: course_study_plans_bool_exp
  ): course_study_plans_aggregate!

  """
  fetch data from the table: "course_study_plans" using primary key columns
  """
  course_study_plans_by_pk(course_id: String!, study_plan_id: String!): course_study_plans

  """
  fetch data from the table: "courses_books"
  """
  courses_books(
    """distinct select on columns"""
    distinct_on: [courses_books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_books_order_by!]

    """filter the rows returned"""
    where: courses_books_bool_exp
  ): [courses_books!]!

  """
  fetch aggregated fields from the table: "courses_books"
  """
  courses_books_aggregate(
    """distinct select on columns"""
    distinct_on: [courses_books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_books_order_by!]

    """filter the rows returned"""
    where: courses_books_bool_exp
  ): courses_books_aggregate!

  """fetch data from the table: "courses_books" using primary key columns"""
  courses_books_by_pk(book_id: String!, course_id: String!): courses_books

  """
  execute function "find_assignment_by_topic_id" which returns "assignments"
  """
  find_assignment_by_topic_id(
    """
    input parameters for function "find_assignment_by_topic_id"
    """
    args: find_assignment_by_topic_id_args!

    """distinct select on columns"""
    distinct_on: [assignments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignments_order_by!]

    """filter the rows returned"""
    where: assignments_bool_exp
  ): [assignments!]!

  """
  execute function "find_assignment_by_topic_id" and query aggregates on result of table type "assignments"
  """
  find_assignment_by_topic_id_aggregate(
    """
    input parameters for function "find_assignment_by_topic_id"
    """
    args: find_assignment_by_topic_id_args!

    """distinct select on columns"""
    distinct_on: [assignments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignments_order_by!]

    """filter the rows returned"""
    where: assignments_bool_exp
  ): assignments_aggregate!

  """
  execute function "find_quiz_by_lo_id" which returns "quizzes"
  """
  find_quiz_by_lo_id(
    """
    input parameters for function "find_quiz_by_lo_id"
    """
    args: find_quiz_by_lo_id_args!

    """distinct select on columns"""
    distinct_on: [quizzes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizzes_order_by!]

    """filter the rows returned"""
    where: quizzes_bool_exp
  ): [quizzes!]!

  """
  execute function "find_quiz_by_lo_id" and query aggregates on result of table type "quizzes"
  """
  find_quiz_by_lo_id_aggregate(
    """
    input parameters for function "find_quiz_by_lo_id"
    """
    args: find_quiz_by_lo_id_args!

    """distinct select on columns"""
    distinct_on: [quizzes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizzes_order_by!]

    """filter the rows returned"""
    where: quizzes_bool_exp
  ): quizzes_aggregate!

  """
  execute function "get_list_course_student_study_plans_by_filter" which returns "course_students"
  """
  get_list_course_student_study_plans_by_filter(
    """
    input parameters for function "get_list_course_student_study_plans_by_filter"
    """
    args: get_list_course_student_study_plans_by_filter_args!

    """distinct select on columns"""
    distinct_on: [course_students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_students_order_by!]

    """filter the rows returned"""
    where: course_students_bool_exp
  ): [course_students!]!

  """
  execute function "get_list_course_student_study_plans_by_filter" and query aggregates on result of table type "course_students"
  """
  get_list_course_student_study_plans_by_filter_aggregate(
    """
    input parameters for function "get_list_course_student_study_plans_by_filter"
    """
    args: get_list_course_student_study_plans_by_filter_args!

    """distinct select on columns"""
    distinct_on: [course_students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_students_order_by!]

    """filter the rows returned"""
    where: course_students_bool_exp
  ): course_students_aggregate!

  """
  execute function "get_list_course_study_plan_by_filter" which returns "course_study_plans"
  """
  get_list_course_study_plan_by_filter(
    """
    input parameters for function "get_list_course_study_plan_by_filter"
    """
    args: get_list_course_study_plan_by_filter_args!

    """distinct select on columns"""
    distinct_on: [course_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_study_plans_order_by!]

    """filter the rows returned"""
    where: course_study_plans_bool_exp
  ): [course_study_plans!]!

  """
  execute function "get_list_course_study_plan_by_filter" and query aggregates on result of table type "course_study_plans"
  """
  get_list_course_study_plan_by_filter_aggregate(
    """
    input parameters for function "get_list_course_study_plan_by_filter"
    """
    args: get_list_course_study_plan_by_filter_args!

    """distinct select on columns"""
    distinct_on: [course_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_study_plans_order_by!]

    """filter the rows returned"""
    where: course_study_plans_bool_exp
  ): course_study_plans_aggregate!

  """
  execute function "get_student_study_plans_by_filter" which returns "study_plans"
  """
  get_student_study_plans_by_filter(
    """
    input parameters for function "get_student_study_plans_by_filter"
    """
    args: get_student_study_plans_by_filter_args!

    """distinct select on columns"""
    distinct_on: [study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [study_plans_order_by!]

    """filter the rows returned"""
    where: study_plans_bool_exp
  ): [study_plans!]!

  """
  execute function "get_student_study_plans_by_filter" and query aggregates on result of table type "study_plans"
  """
  get_student_study_plans_by_filter_aggregate(
    """
    input parameters for function "get_student_study_plans_by_filter"
    """
    args: get_student_study_plans_by_filter_args!

    """distinct select on columns"""
    distinct_on: [study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [study_plans_order_by!]

    """filter the rows returned"""
    where: study_plans_bool_exp
  ): study_plans_aggregate!

  """
  fetch data from the table: "learning_objectives"
  """
  learning_objectives(
    """distinct select on columns"""
    distinct_on: [learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_objectives_order_by!]

    """filter the rows returned"""
    where: learning_objectives_bool_exp
  ): [learning_objectives!]!

  """
  fetch aggregated fields from the table: "learning_objectives"
  """
  learning_objectives_aggregate(
    """distinct select on columns"""
    distinct_on: [learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_objectives_order_by!]

    """filter the rows returned"""
    where: learning_objectives_bool_exp
  ): learning_objectives_aggregate!

  """
  fetch data from the table: "learning_objectives" using primary key columns
  """
  learning_objectives_by_pk(lo_id: String!): learning_objectives

  """
  fetch data from the table: "lo_study_plan_items"
  """
  lo_study_plan_items(
    """distinct select on columns"""
    distinct_on: [lo_study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_study_plan_items_order_by!]

    """filter the rows returned"""
    where: lo_study_plan_items_bool_exp
  ): [lo_study_plan_items!]!

  """
  fetch aggregated fields from the table: "lo_study_plan_items"
  """
  lo_study_plan_items_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_study_plan_items_order_by!]

    """filter the rows returned"""
    where: lo_study_plan_items_bool_exp
  ): lo_study_plan_items_aggregate!

  """
  fetch data from the table: "lo_study_plan_items" using primary key columns
  """
  lo_study_plan_items_by_pk(lo_id: String!, study_plan_item_id: String!): lo_study_plan_items

  """
  fetch data from the table: "quiz_sets"
  """
  quiz_sets(
    """distinct select on columns"""
    distinct_on: [quiz_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quiz_sets_order_by!]

    """filter the rows returned"""
    where: quiz_sets_bool_exp
  ): [quiz_sets!]!

  """
  fetch aggregated fields from the table: "quiz_sets"
  """
  quiz_sets_aggregate(
    """distinct select on columns"""
    distinct_on: [quiz_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quiz_sets_order_by!]

    """filter the rows returned"""
    where: quiz_sets_bool_exp
  ): quiz_sets_aggregate!

  """fetch data from the table: "quiz_sets" using primary key columns"""
  quiz_sets_by_pk(quiz_set_id: String!): quiz_sets

  """
  fetch data from the table: "quizzes"
  """
  quizzes(
    """distinct select on columns"""
    distinct_on: [quizzes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizzes_order_by!]

    """filter the rows returned"""
    where: quizzes_bool_exp
  ): [quizzes!]!

  """
  fetch aggregated fields from the table: "quizzes"
  """
  quizzes_aggregate(
    """distinct select on columns"""
    distinct_on: [quizzes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizzes_order_by!]

    """filter the rows returned"""
    where: quizzes_bool_exp
  ): quizzes_aggregate!

  """fetch data from the table: "quizzes" using primary key columns"""
  quizzes_by_pk(quiz_id: String!): quizzes

  """
  fetch data from the table: "scheduler_items"
  """
  scheduler_items(
    """distinct select on columns"""
    distinct_on: [scheduler_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_items_order_by!]

    """filter the rows returned"""
    where: scheduler_items_bool_exp
  ): [scheduler_items!]!

  """
  fetch aggregated fields from the table: "scheduler_items"
  """
  scheduler_items_aggregate(
    """distinct select on columns"""
    distinct_on: [scheduler_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_items_order_by!]

    """filter the rows returned"""
    where: scheduler_items_bool_exp
  ): scheduler_items_aggregate!

  """fetch data from the table: "scheduler_items" using primary key columns"""
  scheduler_items_by_pk(scheduler_item_id: String!): scheduler_items

  """
  fetch data from the table: "scheduler_patterns"
  """
  scheduler_patterns(
    """distinct select on columns"""
    distinct_on: [scheduler_patterns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_patterns_order_by!]

    """filter the rows returned"""
    where: scheduler_patterns_bool_exp
  ): [scheduler_patterns!]!

  """
  fetch aggregated fields from the table: "scheduler_patterns"
  """
  scheduler_patterns_aggregate(
    """distinct select on columns"""
    distinct_on: [scheduler_patterns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_patterns_order_by!]

    """filter the rows returned"""
    where: scheduler_patterns_bool_exp
  ): scheduler_patterns_aggregate!

  """
  fetch data from the table: "scheduler_patterns" using primary key columns
  """
  scheduler_patterns_by_pk(scheduler_pattern_id: String!): scheduler_patterns

  """
  fetch data from the table: "student_study_plans"
  """
  student_study_plans(
    """distinct select on columns"""
    distinct_on: [student_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_study_plans_order_by!]

    """filter the rows returned"""
    where: student_study_plans_bool_exp
  ): [student_study_plans!]!

  """
  fetch aggregated fields from the table: "student_study_plans"
  """
  student_study_plans_aggregate(
    """distinct select on columns"""
    distinct_on: [student_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_study_plans_order_by!]

    """filter the rows returned"""
    where: student_study_plans_bool_exp
  ): student_study_plans_aggregate!

  """
  fetch data from the table: "student_study_plans" using primary key columns
  """
  student_study_plans_by_pk(student_id: String!, study_plan_id: String!): student_study_plans

  """
  fetch data from the table: "study_plan_items"
  """
  study_plan_items(
    """distinct select on columns"""
    distinct_on: [study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [study_plan_items_order_by!]

    """filter the rows returned"""
    where: study_plan_items_bool_exp
  ): [study_plan_items!]!

  """
  fetch aggregated fields from the table: "study_plan_items"
  """
  study_plan_items_aggregate(
    """distinct select on columns"""
    distinct_on: [study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [study_plan_items_order_by!]

    """filter the rows returned"""
    where: study_plan_items_bool_exp
  ): study_plan_items_aggregate!

  """
  fetch data from the table: "study_plan_items" using primary key columns
  """
  study_plan_items_by_pk(study_plan_item_id: String!): study_plan_items

  """
  fetch data from the table: "study_plans"
  """
  study_plans(
    """distinct select on columns"""
    distinct_on: [study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [study_plans_order_by!]

    """filter the rows returned"""
    where: study_plans_bool_exp
  ): [study_plans!]!

  """
  fetch aggregated fields from the table: "study_plans"
  """
  study_plans_aggregate(
    """distinct select on columns"""
    distinct_on: [study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [study_plans_order_by!]

    """filter the rows returned"""
    where: study_plans_bool_exp
  ): study_plans_aggregate!

  """fetch data from the table: "study_plans" using primary key columns"""
  study_plans_by_pk(study_plan_id: String!): study_plans

  """
  fetch data from the table: "topics"
  """
  topics(
    """distinct select on columns"""
    distinct_on: [topics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_order_by!]

    """filter the rows returned"""
    where: topics_bool_exp
  ): [topics!]!

  """
  fetch aggregated fields from the table: "topics"
  """
  topics_aggregate(
    """distinct select on columns"""
    distinct_on: [topics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_order_by!]

    """filter the rows returned"""
    where: topics_bool_exp
  ): topics_aggregate!

  """
  fetch data from the table: "topics_assignments"
  """
  topics_assignments(
    """distinct select on columns"""
    distinct_on: [topics_assignments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_assignments_order_by!]

    """filter the rows returned"""
    where: topics_assignments_bool_exp
  ): [topics_assignments!]!

  """
  fetch aggregated fields from the table: "topics_assignments"
  """
  topics_assignments_aggregate(
    """distinct select on columns"""
    distinct_on: [topics_assignments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_assignments_order_by!]

    """filter the rows returned"""
    where: topics_assignments_bool_exp
  ): topics_assignments_aggregate!

  """
  fetch data from the table: "topics_assignments" using primary key columns
  """
  topics_assignments_by_pk(assignment_id: String!, topic_id: String!): topics_assignments

  """fetch data from the table: "topics" using primary key columns"""
  topics_by_pk(topic_id: String!): topics

  """
  fetch data from the table: "topics_learning_objectives"
  """
  topics_learning_objectives(
    """distinct select on columns"""
    distinct_on: [topics_learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_learning_objectives_order_by!]

    """filter the rows returned"""
    where: topics_learning_objectives_bool_exp
  ): [topics_learning_objectives!]!

  """
  fetch aggregated fields from the table: "topics_learning_objectives"
  """
  topics_learning_objectives_aggregate(
    """distinct select on columns"""
    distinct_on: [topics_learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_learning_objectives_order_by!]

    """filter the rows returned"""
    where: topics_learning_objectives_bool_exp
  ): topics_learning_objectives_aggregate!

  """
  fetch data from the table: "topics_learning_objectives" using primary key columns
  """
  topics_learning_objectives_by_pk(lo_id: String!, topic_id: String!): topics_learning_objectives
}

"""
columns and relationships of "quiz_sets"
"""
type quiz_sets {
  created_at: timestamptz!
  deleted_at: timestamptz
  lo_id: String!
  quiz_external_ids: _text!
  quiz_set_id: String!
  resource_path: String!
  status: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "quiz_sets"
"""
type quiz_sets_aggregate {
  aggregate: quiz_sets_aggregate_fields
  nodes: [quiz_sets!]!
}

"""
aggregate fields of "quiz_sets"
"""
type quiz_sets_aggregate_fields {
  count(columns: [quiz_sets_select_column!], distinct: Boolean): Int
  max: quiz_sets_max_fields
  min: quiz_sets_min_fields
}

"""
order by aggregate values of table "quiz_sets"
"""
input quiz_sets_aggregate_order_by {
  count: order_by
  max: quiz_sets_max_order_by
  min: quiz_sets_min_order_by
}

"""
input type for inserting array relation for remote table "quiz_sets"
"""
input quiz_sets_arr_rel_insert_input {
  data: [quiz_sets_insert_input!]!
  on_conflict: quiz_sets_on_conflict
}

"""
Boolean expression to filter rows from the table "quiz_sets". All fields are combined with a logical 'AND'.
"""
input quiz_sets_bool_exp {
  _and: [quiz_sets_bool_exp]
  _not: quiz_sets_bool_exp
  _or: [quiz_sets_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  lo_id: String_comparison_exp
  quiz_external_ids: _text_comparison_exp
  quiz_set_id: String_comparison_exp
  resource_path: String_comparison_exp
  status: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "quiz_sets"
"""
enum quiz_sets_constraint {
  """unique or primary key constraint"""
  quiz_sets_approved_lo_id_idx

  """unique or primary key constraint"""
  quiz_sets_pk
}

"""
input type for inserting data into table "quiz_sets"
"""
input quiz_sets_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  lo_id: String
  quiz_external_ids: _text
  quiz_set_id: String
  resource_path: String
  status: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type quiz_sets_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  lo_id: String
  quiz_set_id: String
  resource_path: String
  status: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "quiz_sets"
"""
input quiz_sets_max_order_by {
  created_at: order_by
  deleted_at: order_by
  lo_id: order_by
  quiz_set_id: order_by
  resource_path: order_by
  status: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type quiz_sets_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  lo_id: String
  quiz_set_id: String
  resource_path: String
  status: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "quiz_sets"
"""
input quiz_sets_min_order_by {
  created_at: order_by
  deleted_at: order_by
  lo_id: order_by
  quiz_set_id: order_by
  resource_path: order_by
  status: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "quiz_sets"
"""
type quiz_sets_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [quiz_sets!]!
}

"""
input type for inserting object relation for remote table "quiz_sets"
"""
input quiz_sets_obj_rel_insert_input {
  data: quiz_sets_insert_input!
  on_conflict: quiz_sets_on_conflict
}

"""
on conflict condition type for table "quiz_sets"
"""
input quiz_sets_on_conflict {
  constraint: quiz_sets_constraint!
  update_columns: [quiz_sets_update_column!]!
  where: quiz_sets_bool_exp
}

"""
ordering options when selecting data from "quiz_sets"
"""
input quiz_sets_order_by {
  created_at: order_by
  deleted_at: order_by
  lo_id: order_by
  quiz_external_ids: order_by
  quiz_set_id: order_by
  resource_path: order_by
  status: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "quiz_sets"
"""
input quiz_sets_pk_columns_input {
  quiz_set_id: String!
}

"""
select columns of table "quiz_sets"
"""
enum quiz_sets_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  lo_id

  """column name"""
  quiz_external_ids

  """column name"""
  quiz_set_id

  """column name"""
  resource_path

  """column name"""
  status

  """column name"""
  updated_at
}

"""
input type for updating data in table "quiz_sets"
"""
input quiz_sets_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  lo_id: String
  quiz_external_ids: _text
  quiz_set_id: String
  resource_path: String
  status: String
  updated_at: timestamptz
}

"""
update columns of table "quiz_sets"
"""
enum quiz_sets_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  lo_id

  """column name"""
  quiz_external_ids

  """column name"""
  quiz_set_id

  """column name"""
  resource_path

  """column name"""
  status

  """column name"""
  updated_at
}

"""
columns and relationships of "quizzes"
"""
type quizzes {
  approved_by: String!
  country: String!
  created_at: timestamptz!
  created_by: String!
  deleted_at: timestamptz
  difficulty_level: Int
  explanation(
    """JSON select path"""
    path: String
  ): jsonb!
  external_id: String!
  kind: String!
  lo_ids: _text
  options(
    """JSON select path"""
    path: String
  ): jsonb!
  question(
    """JSON select path"""
    path: String
  ): jsonb!
  quiz_id: String!

  """An array relationship"""
  quiz_sets(
    """distinct select on columns"""
    distinct_on: [quiz_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quiz_sets_order_by!]

    """filter the rows returned"""
    where: quiz_sets_bool_exp
  ): [quiz_sets!]!

  """An aggregated array relationship"""
  quiz_sets_aggregate(
    """distinct select on columns"""
    distinct_on: [quiz_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quiz_sets_order_by!]

    """filter the rows returned"""
    where: quiz_sets_bool_exp
  ): quiz_sets_aggregate!
  resource_path: String!
  school_id: Int!
  status: String!
  tagged_los: _text
  updated_at: timestamptz!
}

"""
aggregated selection of "quizzes"
"""
type quizzes_aggregate {
  aggregate: quizzes_aggregate_fields
  nodes: [quizzes!]!
}

"""
aggregate fields of "quizzes"
"""
type quizzes_aggregate_fields {
  avg: quizzes_avg_fields
  count(columns: [quizzes_select_column!], distinct: Boolean): Int
  max: quizzes_max_fields
  min: quizzes_min_fields
  stddev: quizzes_stddev_fields
  stddev_pop: quizzes_stddev_pop_fields
  stddev_samp: quizzes_stddev_samp_fields
  sum: quizzes_sum_fields
  var_pop: quizzes_var_pop_fields
  var_samp: quizzes_var_samp_fields
  variance: quizzes_variance_fields
}

"""
order by aggregate values of table "quizzes"
"""
input quizzes_aggregate_order_by {
  avg: quizzes_avg_order_by
  count: order_by
  max: quizzes_max_order_by
  min: quizzes_min_order_by
  stddev: quizzes_stddev_order_by
  stddev_pop: quizzes_stddev_pop_order_by
  stddev_samp: quizzes_stddev_samp_order_by
  sum: quizzes_sum_order_by
  var_pop: quizzes_var_pop_order_by
  var_samp: quizzes_var_samp_order_by
  variance: quizzes_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input quizzes_append_input {
  explanation: jsonb
  options: jsonb
  question: jsonb
}

"""
input type for inserting array relation for remote table "quizzes"
"""
input quizzes_arr_rel_insert_input {
  data: [quizzes_insert_input!]!
  on_conflict: quizzes_on_conflict
}

"""aggregate avg on columns"""
type quizzes_avg_fields {
  difficulty_level: Float
  school_id: Float
}

"""
order by avg() on columns of table "quizzes"
"""
input quizzes_avg_order_by {
  difficulty_level: order_by
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "quizzes". All fields are combined with a logical 'AND'.
"""
input quizzes_bool_exp {
  _and: [quizzes_bool_exp]
  _not: quizzes_bool_exp
  _or: [quizzes_bool_exp]
  approved_by: String_comparison_exp
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  created_by: String_comparison_exp
  deleted_at: timestamptz_comparison_exp
  difficulty_level: Int_comparison_exp
  explanation: jsonb_comparison_exp
  external_id: String_comparison_exp
  kind: String_comparison_exp
  lo_ids: _text_comparison_exp
  options: jsonb_comparison_exp
  question: jsonb_comparison_exp
  quiz_id: String_comparison_exp
  quiz_sets: quiz_sets_bool_exp
  resource_path: String_comparison_exp
  school_id: Int_comparison_exp
  status: String_comparison_exp
  tagged_los: _text_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "quizzes"
"""
enum quizzes_constraint {
  """unique or primary key constraint"""
  quizs_pk
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input quizzes_delete_at_path_input {
  explanation: [String]
  options: [String]
  question: [String]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input quizzes_delete_elem_input {
  explanation: Int
  options: Int
  question: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input quizzes_delete_key_input {
  explanation: String
  options: String
  question: String
}

"""
input type for incrementing integer column in table "quizzes"
"""
input quizzes_inc_input {
  difficulty_level: Int
  school_id: Int
}

"""
input type for inserting data into table "quizzes"
"""
input quizzes_insert_input {
  approved_by: String
  country: String
  created_at: timestamptz
  created_by: String
  deleted_at: timestamptz
  difficulty_level: Int
  explanation: jsonb
  external_id: String
  kind: String
  lo_ids: _text
  options: jsonb
  question: jsonb
  quiz_id: String
  quiz_sets: quiz_sets_arr_rel_insert_input
  resource_path: String
  school_id: Int
  status: String
  tagged_los: _text
  updated_at: timestamptz
}

"""aggregate max on columns"""
type quizzes_max_fields {
  approved_by: String
  country: String
  created_at: timestamptz
  created_by: String
  deleted_at: timestamptz
  difficulty_level: Int
  external_id: String
  kind: String
  quiz_id: String
  resource_path: String
  school_id: Int
  status: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "quizzes"
"""
input quizzes_max_order_by {
  approved_by: order_by
  country: order_by
  created_at: order_by
  created_by: order_by
  deleted_at: order_by
  difficulty_level: order_by
  external_id: order_by
  kind: order_by
  quiz_id: order_by
  resource_path: order_by
  school_id: order_by
  status: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type quizzes_min_fields {
  approved_by: String
  country: String
  created_at: timestamptz
  created_by: String
  deleted_at: timestamptz
  difficulty_level: Int
  external_id: String
  kind: String
  quiz_id: String
  resource_path: String
  school_id: Int
  status: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "quizzes"
"""
input quizzes_min_order_by {
  approved_by: order_by
  country: order_by
  created_at: order_by
  created_by: order_by
  deleted_at: order_by
  difficulty_level: order_by
  external_id: order_by
  kind: order_by
  quiz_id: order_by
  resource_path: order_by
  school_id: order_by
  status: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "quizzes"
"""
type quizzes_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [quizzes!]!
}

"""
input type for inserting object relation for remote table "quizzes"
"""
input quizzes_obj_rel_insert_input {
  data: quizzes_insert_input!
  on_conflict: quizzes_on_conflict
}

"""
on conflict condition type for table "quizzes"
"""
input quizzes_on_conflict {
  constraint: quizzes_constraint!
  update_columns: [quizzes_update_column!]!
  where: quizzes_bool_exp
}

"""
ordering options when selecting data from "quizzes"
"""
input quizzes_order_by {
  approved_by: order_by
  country: order_by
  created_at: order_by
  created_by: order_by
  deleted_at: order_by
  difficulty_level: order_by
  explanation: order_by
  external_id: order_by
  kind: order_by
  lo_ids: order_by
  options: order_by
  question: order_by
  quiz_id: order_by
  quiz_sets_aggregate: quiz_sets_aggregate_order_by
  resource_path: order_by
  school_id: order_by
  status: order_by
  tagged_los: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "quizzes"
"""
input quizzes_pk_columns_input {
  quiz_id: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input quizzes_prepend_input {
  explanation: jsonb
  options: jsonb
  question: jsonb
}

"""
select columns of table "quizzes"
"""
enum quizzes_select_column {
  """column name"""
  approved_by

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  created_by

  """column name"""
  deleted_at

  """column name"""
  difficulty_level

  """column name"""
  explanation

  """column name"""
  external_id

  """column name"""
  kind

  """column name"""
  lo_ids

  """column name"""
  options

  """column name"""
  question

  """column name"""
  quiz_id

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  status

  """column name"""
  tagged_los

  """column name"""
  updated_at
}

"""
input type for updating data in table "quizzes"
"""
input quizzes_set_input {
  approved_by: String
  country: String
  created_at: timestamptz
  created_by: String
  deleted_at: timestamptz
  difficulty_level: Int
  explanation: jsonb
  external_id: String
  kind: String
  lo_ids: _text
  options: jsonb
  question: jsonb
  quiz_id: String
  resource_path: String
  school_id: Int
  status: String
  tagged_los: _text
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type quizzes_stddev_fields {
  difficulty_level: Float
  school_id: Float
}

"""
order by stddev() on columns of table "quizzes"
"""
input quizzes_stddev_order_by {
  difficulty_level: order_by
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type quizzes_stddev_pop_fields {
  difficulty_level: Float
  school_id: Float
}

"""
order by stddev_pop() on columns of table "quizzes"
"""
input quizzes_stddev_pop_order_by {
  difficulty_level: order_by
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type quizzes_stddev_samp_fields {
  difficulty_level: Float
  school_id: Float
}

"""
order by stddev_samp() on columns of table "quizzes"
"""
input quizzes_stddev_samp_order_by {
  difficulty_level: order_by
  school_id: order_by
}

"""aggregate sum on columns"""
type quizzes_sum_fields {
  difficulty_level: Int
  school_id: Int
}

"""
order by sum() on columns of table "quizzes"
"""
input quizzes_sum_order_by {
  difficulty_level: order_by
  school_id: order_by
}

"""
update columns of table "quizzes"
"""
enum quizzes_update_column {
  """column name"""
  approved_by

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  created_by

  """column name"""
  deleted_at

  """column name"""
  difficulty_level

  """column name"""
  explanation

  """column name"""
  external_id

  """column name"""
  kind

  """column name"""
  lo_ids

  """column name"""
  options

  """column name"""
  question

  """column name"""
  quiz_id

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  status

  """column name"""
  tagged_los

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type quizzes_var_pop_fields {
  difficulty_level: Float
  school_id: Float
}

"""
order by var_pop() on columns of table "quizzes"
"""
input quizzes_var_pop_order_by {
  difficulty_level: order_by
  school_id: order_by
}

"""aggregate var_samp on columns"""
type quizzes_var_samp_fields {
  difficulty_level: Float
  school_id: Float
}

"""
order by var_samp() on columns of table "quizzes"
"""
input quizzes_var_samp_order_by {
  difficulty_level: order_by
  school_id: order_by
}

"""aggregate variance on columns"""
type quizzes_variance_fields {
  difficulty_level: Float
  school_id: Float
}

"""
order by variance() on columns of table "quizzes"
"""
input quizzes_variance_order_by {
  difficulty_level: order_by
  school_id: order_by
}

"""
columns and relationships of "scheduler_items"
"""
type scheduler_items {
  all_day: Boolean

  """An object relationship"""
  brand: brands
  brand_id: String

  """An object relationship"""
  center: centers
  center_id: String
  created_at: timestamptz!
  deleted_at: timestamptz
  end_time: timestamptz
  meta_data(
    """JSON select path"""
    path: String
  ): jsonb
  owner: String
  resource_path: String
  scheduler_item_id: String!

  """An object relationship"""
  scheduler_pattern: scheduler_patterns!
  scheduler_pattern_id: String!
  start_time: timestamptz!
  updated_at: timestamptz!
}

"""
aggregated selection of "scheduler_items"
"""
type scheduler_items_aggregate {
  aggregate: scheduler_items_aggregate_fields
  nodes: [scheduler_items!]!
}

"""
aggregate fields of "scheduler_items"
"""
type scheduler_items_aggregate_fields {
  count(columns: [scheduler_items_select_column!], distinct: Boolean): Int
  max: scheduler_items_max_fields
  min: scheduler_items_min_fields
}

"""
order by aggregate values of table "scheduler_items"
"""
input scheduler_items_aggregate_order_by {
  count: order_by
  max: scheduler_items_max_order_by
  min: scheduler_items_min_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input scheduler_items_append_input {
  meta_data: jsonb
}

"""
input type for inserting array relation for remote table "scheduler_items"
"""
input scheduler_items_arr_rel_insert_input {
  data: [scheduler_items_insert_input!]!
  on_conflict: scheduler_items_on_conflict
}

"""
Boolean expression to filter rows from the table "scheduler_items". All fields are combined with a logical 'AND'.
"""
input scheduler_items_bool_exp {
  _and: [scheduler_items_bool_exp]
  _not: scheduler_items_bool_exp
  _or: [scheduler_items_bool_exp]
  all_day: Boolean_comparison_exp
  brand: brands_bool_exp
  brand_id: String_comparison_exp
  center: centers_bool_exp
  center_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  end_time: timestamptz_comparison_exp
  meta_data: jsonb_comparison_exp
  owner: String_comparison_exp
  resource_path: String_comparison_exp
  scheduler_item_id: String_comparison_exp
  scheduler_pattern: scheduler_patterns_bool_exp
  scheduler_pattern_id: String_comparison_exp
  start_time: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "scheduler_items"
"""
enum scheduler_items_constraint {
  """unique or primary key constraint"""
  scheduler_items_pk
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input scheduler_items_delete_at_path_input {
  meta_data: [String]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input scheduler_items_delete_elem_input {
  meta_data: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input scheduler_items_delete_key_input {
  meta_data: String
}

"""
input type for inserting data into table "scheduler_items"
"""
input scheduler_items_insert_input {
  all_day: Boolean
  brand: brands_obj_rel_insert_input
  brand_id: String
  center: centers_obj_rel_insert_input
  center_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_time: timestamptz
  meta_data: jsonb
  owner: String
  resource_path: String
  scheduler_item_id: String
  scheduler_pattern: scheduler_patterns_obj_rel_insert_input
  scheduler_pattern_id: String
  start_time: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type scheduler_items_max_fields {
  brand_id: String
  center_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_time: timestamptz
  owner: String
  resource_path: String
  scheduler_item_id: String
  scheduler_pattern_id: String
  start_time: timestamptz
  updated_at: timestamptz
}

"""
order by max() on columns of table "scheduler_items"
"""
input scheduler_items_max_order_by {
  brand_id: order_by
  center_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_time: order_by
  owner: order_by
  resource_path: order_by
  scheduler_item_id: order_by
  scheduler_pattern_id: order_by
  start_time: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type scheduler_items_min_fields {
  brand_id: String
  center_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_time: timestamptz
  owner: String
  resource_path: String
  scheduler_item_id: String
  scheduler_pattern_id: String
  start_time: timestamptz
  updated_at: timestamptz
}

"""
order by min() on columns of table "scheduler_items"
"""
input scheduler_items_min_order_by {
  brand_id: order_by
  center_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_time: order_by
  owner: order_by
  resource_path: order_by
  scheduler_item_id: order_by
  scheduler_pattern_id: order_by
  start_time: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "scheduler_items"
"""
type scheduler_items_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [scheduler_items!]!
}

"""
input type for inserting object relation for remote table "scheduler_items"
"""
input scheduler_items_obj_rel_insert_input {
  data: scheduler_items_insert_input!
  on_conflict: scheduler_items_on_conflict
}

"""
on conflict condition type for table "scheduler_items"
"""
input scheduler_items_on_conflict {
  constraint: scheduler_items_constraint!
  update_columns: [scheduler_items_update_column!]!
  where: scheduler_items_bool_exp
}

"""
ordering options when selecting data from "scheduler_items"
"""
input scheduler_items_order_by {
  all_day: order_by
  brand: brands_order_by
  brand_id: order_by
  center: centers_order_by
  center_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_time: order_by
  meta_data: order_by
  owner: order_by
  resource_path: order_by
  scheduler_item_id: order_by
  scheduler_pattern: scheduler_patterns_order_by
  scheduler_pattern_id: order_by
  start_time: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "scheduler_items"
"""
input scheduler_items_pk_columns_input {
  scheduler_item_id: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input scheduler_items_prepend_input {
  meta_data: jsonb
}

"""
select columns of table "scheduler_items"
"""
enum scheduler_items_select_column {
  """column name"""
  all_day

  """column name"""
  brand_id

  """column name"""
  center_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_time

  """column name"""
  meta_data

  """column name"""
  owner

  """column name"""
  resource_path

  """column name"""
  scheduler_item_id

  """column name"""
  scheduler_pattern_id

  """column name"""
  start_time

  """column name"""
  updated_at
}

"""
input type for updating data in table "scheduler_items"
"""
input scheduler_items_set_input {
  all_day: Boolean
  brand_id: String
  center_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_time: timestamptz
  meta_data: jsonb
  owner: String
  resource_path: String
  scheduler_item_id: String
  scheduler_pattern_id: String
  start_time: timestamptz
  updated_at: timestamptz
}

"""
update columns of table "scheduler_items"
"""
enum scheduler_items_update_column {
  """column name"""
  all_day

  """column name"""
  brand_id

  """column name"""
  center_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_time

  """column name"""
  meta_data

  """column name"""
  owner

  """column name"""
  resource_path

  """column name"""
  scheduler_item_id

  """column name"""
  scheduler_pattern_id

  """column name"""
  start_time

  """column name"""
  updated_at
}

"""
columns and relationships of "scheduler_patterns"
"""
type scheduler_patterns {
  all_day: Boolean

  """An object relationship"""
  brand: brands
  brand_id: String

  """An object relationship"""
  center: centers
  center_id: String
  created_at: timestamptz!
  deleted_at: timestamptz
  end_time: timestamptz
  latest_released_at: timestamptz
  meta_data(
    """JSON select path"""
    path: String
  ): jsonb
  owner: String
  repeat_option_data(
    """JSON select path"""
    path: String
  ): jsonb
  resource_path: String

  """An array relationship"""
  scheduler_items(
    """distinct select on columns"""
    distinct_on: [scheduler_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_items_order_by!]

    """filter the rows returned"""
    where: scheduler_items_bool_exp
  ): [scheduler_items!]!

  """An aggregated array relationship"""
  scheduler_items_aggregate(
    """distinct select on columns"""
    distinct_on: [scheduler_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_items_order_by!]

    """filter the rows returned"""
    where: scheduler_items_bool_exp
  ): scheduler_items_aggregate!

  """An object relationship"""
  scheduler_pattern: scheduler_patterns
  scheduler_pattern_id: String!
  scheduler_pattern_parent_id: String

  """An array relationship"""
  scheduler_patterns(
    """distinct select on columns"""
    distinct_on: [scheduler_patterns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_patterns_order_by!]

    """filter the rows returned"""
    where: scheduler_patterns_bool_exp
  ): [scheduler_patterns!]!

  """An aggregated array relationship"""
  scheduler_patterns_aggregate(
    """distinct select on columns"""
    distinct_on: [scheduler_patterns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_patterns_order_by!]

    """filter the rows returned"""
    where: scheduler_patterns_bool_exp
  ): scheduler_patterns_aggregate!
  scheduler_type: String!
  start_time: timestamptz!
  time_zone: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "scheduler_patterns"
"""
type scheduler_patterns_aggregate {
  aggregate: scheduler_patterns_aggregate_fields
  nodes: [scheduler_patterns!]!
}

"""
aggregate fields of "scheduler_patterns"
"""
type scheduler_patterns_aggregate_fields {
  count(columns: [scheduler_patterns_select_column!], distinct: Boolean): Int
  max: scheduler_patterns_max_fields
  min: scheduler_patterns_min_fields
}

"""
order by aggregate values of table "scheduler_patterns"
"""
input scheduler_patterns_aggregate_order_by {
  count: order_by
  max: scheduler_patterns_max_order_by
  min: scheduler_patterns_min_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input scheduler_patterns_append_input {
  meta_data: jsonb
  repeat_option_data: jsonb
}

"""
input type for inserting array relation for remote table "scheduler_patterns"
"""
input scheduler_patterns_arr_rel_insert_input {
  data: [scheduler_patterns_insert_input!]!
  on_conflict: scheduler_patterns_on_conflict
}

"""
Boolean expression to filter rows from the table "scheduler_patterns". All fields are combined with a logical 'AND'.
"""
input scheduler_patterns_bool_exp {
  _and: [scheduler_patterns_bool_exp]
  _not: scheduler_patterns_bool_exp
  _or: [scheduler_patterns_bool_exp]
  all_day: Boolean_comparison_exp
  brand: brands_bool_exp
  brand_id: String_comparison_exp
  center: centers_bool_exp
  center_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  end_time: timestamptz_comparison_exp
  latest_released_at: timestamptz_comparison_exp
  meta_data: jsonb_comparison_exp
  owner: String_comparison_exp
  repeat_option_data: jsonb_comparison_exp
  resource_path: String_comparison_exp
  scheduler_items: scheduler_items_bool_exp
  scheduler_pattern: scheduler_patterns_bool_exp
  scheduler_pattern_id: String_comparison_exp
  scheduler_pattern_parent_id: String_comparison_exp
  scheduler_patterns: scheduler_patterns_bool_exp
  scheduler_type: String_comparison_exp
  start_time: timestamptz_comparison_exp
  time_zone: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "scheduler_patterns"
"""
enum scheduler_patterns_constraint {
  """unique or primary key constraint"""
  scheduler_patterns_pk
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input scheduler_patterns_delete_at_path_input {
  meta_data: [String]
  repeat_option_data: [String]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input scheduler_patterns_delete_elem_input {
  meta_data: Int
  repeat_option_data: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input scheduler_patterns_delete_key_input {
  meta_data: String
  repeat_option_data: String
}

"""
input type for inserting data into table "scheduler_patterns"
"""
input scheduler_patterns_insert_input {
  all_day: Boolean
  brand: brands_obj_rel_insert_input
  brand_id: String
  center: centers_obj_rel_insert_input
  center_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_time: timestamptz
  latest_released_at: timestamptz
  meta_data: jsonb
  owner: String
  repeat_option_data: jsonb
  resource_path: String
  scheduler_items: scheduler_items_arr_rel_insert_input
  scheduler_pattern: scheduler_patterns_obj_rel_insert_input
  scheduler_pattern_id: String
  scheduler_pattern_parent_id: String
  scheduler_patterns: scheduler_patterns_arr_rel_insert_input
  scheduler_type: String
  start_time: timestamptz
  time_zone: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type scheduler_patterns_max_fields {
  brand_id: String
  center_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_time: timestamptz
  latest_released_at: timestamptz
  owner: String
  resource_path: String
  scheduler_pattern_id: String
  scheduler_pattern_parent_id: String
  scheduler_type: String
  start_time: timestamptz
  time_zone: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "scheduler_patterns"
"""
input scheduler_patterns_max_order_by {
  brand_id: order_by
  center_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_time: order_by
  latest_released_at: order_by
  owner: order_by
  resource_path: order_by
  scheduler_pattern_id: order_by
  scheduler_pattern_parent_id: order_by
  scheduler_type: order_by
  start_time: order_by
  time_zone: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type scheduler_patterns_min_fields {
  brand_id: String
  center_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_time: timestamptz
  latest_released_at: timestamptz
  owner: String
  resource_path: String
  scheduler_pattern_id: String
  scheduler_pattern_parent_id: String
  scheduler_type: String
  start_time: timestamptz
  time_zone: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "scheduler_patterns"
"""
input scheduler_patterns_min_order_by {
  brand_id: order_by
  center_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_time: order_by
  latest_released_at: order_by
  owner: order_by
  resource_path: order_by
  scheduler_pattern_id: order_by
  scheduler_pattern_parent_id: order_by
  scheduler_type: order_by
  start_time: order_by
  time_zone: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "scheduler_patterns"
"""
type scheduler_patterns_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [scheduler_patterns!]!
}

"""
input type for inserting object relation for remote table "scheduler_patterns"
"""
input scheduler_patterns_obj_rel_insert_input {
  data: scheduler_patterns_insert_input!
  on_conflict: scheduler_patterns_on_conflict
}

"""
on conflict condition type for table "scheduler_patterns"
"""
input scheduler_patterns_on_conflict {
  constraint: scheduler_patterns_constraint!
  update_columns: [scheduler_patterns_update_column!]!
  where: scheduler_patterns_bool_exp
}

"""
ordering options when selecting data from "scheduler_patterns"
"""
input scheduler_patterns_order_by {
  all_day: order_by
  brand: brands_order_by
  brand_id: order_by
  center: centers_order_by
  center_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_time: order_by
  latest_released_at: order_by
  meta_data: order_by
  owner: order_by
  repeat_option_data: order_by
  resource_path: order_by
  scheduler_items_aggregate: scheduler_items_aggregate_order_by
  scheduler_pattern: scheduler_patterns_order_by
  scheduler_pattern_id: order_by
  scheduler_pattern_parent_id: order_by
  scheduler_patterns_aggregate: scheduler_patterns_aggregate_order_by
  scheduler_type: order_by
  start_time: order_by
  time_zone: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "scheduler_patterns"
"""
input scheduler_patterns_pk_columns_input {
  scheduler_pattern_id: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input scheduler_patterns_prepend_input {
  meta_data: jsonb
  repeat_option_data: jsonb
}

"""
select columns of table "scheduler_patterns"
"""
enum scheduler_patterns_select_column {
  """column name"""
  all_day

  """column name"""
  brand_id

  """column name"""
  center_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_time

  """column name"""
  latest_released_at

  """column name"""
  meta_data

  """column name"""
  owner

  """column name"""
  repeat_option_data

  """column name"""
  resource_path

  """column name"""
  scheduler_pattern_id

  """column name"""
  scheduler_pattern_parent_id

  """column name"""
  scheduler_type

  """column name"""
  start_time

  """column name"""
  time_zone

  """column name"""
  updated_at
}

"""
input type for updating data in table "scheduler_patterns"
"""
input scheduler_patterns_set_input {
  all_day: Boolean
  brand_id: String
  center_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_time: timestamptz
  latest_released_at: timestamptz
  meta_data: jsonb
  owner: String
  repeat_option_data: jsonb
  resource_path: String
  scheduler_pattern_id: String
  scheduler_pattern_parent_id: String
  scheduler_type: String
  start_time: timestamptz
  time_zone: String
  updated_at: timestamptz
}

"""
update columns of table "scheduler_patterns"
"""
enum scheduler_patterns_update_column {
  """column name"""
  all_day

  """column name"""
  brand_id

  """column name"""
  center_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_time

  """column name"""
  latest_released_at

  """column name"""
  meta_data

  """column name"""
  owner

  """column name"""
  repeat_option_data

  """column name"""
  resource_path

  """column name"""
  scheduler_pattern_id

  """column name"""
  scheduler_pattern_parent_id

  """column name"""
  scheduler_type

  """column name"""
  start_time

  """column name"""
  time_zone

  """column name"""
  updated_at
}

scalar smallint

"""
expression to compare columns of type smallint. All fields are combined with logical 'AND'.
"""
input smallint_comparison_exp {
  _eq: smallint
  _gt: smallint
  _gte: smallint
  _in: [smallint!]
  _is_null: Boolean
  _lt: smallint
  _lte: smallint
  _neq: smallint
  _nin: [smallint!]
}

"""
columns and relationships of "student_study_plans"
"""
type student_study_plans {
  """An array relationship"""
  course_students(
    """distinct select on columns"""
    distinct_on: [course_students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_students_order_by!]

    """filter the rows returned"""
    where: course_students_bool_exp
  ): [course_students!]!

  """An aggregated array relationship"""
  course_students_aggregate(
    """distinct select on columns"""
    distinct_on: [course_students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_students_order_by!]

    """filter the rows returned"""
    where: course_students_bool_exp
  ): course_students_aggregate!
  created_at: timestamptz!
  deleted_at: timestamptz
  master_study_plan_id: String
  resource_path: String!
  student_id: String!

  """An object relationship"""
  study_plan: study_plans!
  study_plan_id: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "student_study_plans"
"""
type student_study_plans_aggregate {
  aggregate: student_study_plans_aggregate_fields
  nodes: [student_study_plans!]!
}

"""
aggregate fields of "student_study_plans"
"""
type student_study_plans_aggregate_fields {
  count(columns: [student_study_plans_select_column!], distinct: Boolean): Int
  max: student_study_plans_max_fields
  min: student_study_plans_min_fields
}

"""
order by aggregate values of table "student_study_plans"
"""
input student_study_plans_aggregate_order_by {
  count: order_by
  max: student_study_plans_max_order_by
  min: student_study_plans_min_order_by
}

"""
input type for inserting array relation for remote table "student_study_plans"
"""
input student_study_plans_arr_rel_insert_input {
  data: [student_study_plans_insert_input!]!
  on_conflict: student_study_plans_on_conflict
}

"""
Boolean expression to filter rows from the table "student_study_plans". All fields are combined with a logical 'AND'.
"""
input student_study_plans_bool_exp {
  _and: [student_study_plans_bool_exp]
  _not: student_study_plans_bool_exp
  _or: [student_study_plans_bool_exp]
  course_students: course_students_bool_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  master_study_plan_id: String_comparison_exp
  resource_path: String_comparison_exp
  student_id: String_comparison_exp
  study_plan: study_plans_bool_exp
  study_plan_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "student_study_plans"
"""
enum student_study_plans_constraint {
  """unique or primary key constraint"""
  student_master_study_plan

  """unique or primary key constraint"""
  student_study_plans_pk
}

"""
input type for inserting data into table "student_study_plans"
"""
input student_study_plans_insert_input {
  course_students: course_students_arr_rel_insert_input
  created_at: timestamptz
  deleted_at: timestamptz
  master_study_plan_id: String
  resource_path: String
  student_id: String
  study_plan: study_plans_obj_rel_insert_input
  study_plan_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type student_study_plans_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  master_study_plan_id: String
  resource_path: String
  student_id: String
  study_plan_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "student_study_plans"
"""
input student_study_plans_max_order_by {
  created_at: order_by
  deleted_at: order_by
  master_study_plan_id: order_by
  resource_path: order_by
  student_id: order_by
  study_plan_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type student_study_plans_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  master_study_plan_id: String
  resource_path: String
  student_id: String
  study_plan_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "student_study_plans"
"""
input student_study_plans_min_order_by {
  created_at: order_by
  deleted_at: order_by
  master_study_plan_id: order_by
  resource_path: order_by
  student_id: order_by
  study_plan_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "student_study_plans"
"""
type student_study_plans_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [student_study_plans!]!
}

"""
input type for inserting object relation for remote table "student_study_plans"
"""
input student_study_plans_obj_rel_insert_input {
  data: student_study_plans_insert_input!
  on_conflict: student_study_plans_on_conflict
}

"""
on conflict condition type for table "student_study_plans"
"""
input student_study_plans_on_conflict {
  constraint: student_study_plans_constraint!
  update_columns: [student_study_plans_update_column!]!
  where: student_study_plans_bool_exp
}

"""
ordering options when selecting data from "student_study_plans"
"""
input student_study_plans_order_by {
  course_students_aggregate: course_students_aggregate_order_by
  created_at: order_by
  deleted_at: order_by
  master_study_plan_id: order_by
  resource_path: order_by
  student_id: order_by
  study_plan: study_plans_order_by
  study_plan_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "student_study_plans"
"""
input student_study_plans_pk_columns_input {
  student_id: String!
  study_plan_id: String!
}

"""
select columns of table "student_study_plans"
"""
enum student_study_plans_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  master_study_plan_id

  """column name"""
  resource_path

  """column name"""
  student_id

  """column name"""
  study_plan_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "student_study_plans"
"""
input student_study_plans_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  master_study_plan_id: String
  resource_path: String
  student_id: String
  study_plan_id: String
  updated_at: timestamptz
}

"""
update columns of table "student_study_plans"
"""
enum student_study_plans_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  master_study_plan_id

  """column name"""
  resource_path

  """column name"""
  student_id

  """column name"""
  study_plan_id

  """column name"""
  updated_at
}

"""
columns and relationships of "study_plan_items"
"""
type study_plan_items {
  """An object relationship"""
  assignment_study_plan_item: assignment_study_plan_items

  """An array relationship"""
  assignment_study_plan_items(
    """distinct select on columns"""
    distinct_on: [assignment_study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignment_study_plan_items_order_by!]

    """filter the rows returned"""
    where: assignment_study_plan_items_bool_exp
  ): [assignment_study_plan_items!]!

  """An aggregated array relationship"""
  assignment_study_plan_items_aggregate(
    """distinct select on columns"""
    distinct_on: [assignment_study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignment_study_plan_items_order_by!]

    """filter the rows returned"""
    where: assignment_study_plan_items_bool_exp
  ): assignment_study_plan_items_aggregate!
  available_from: timestamptz
  available_to: timestamptz
  completed_at: timestamptz
  content_structure(
    """JSON select path"""
    path: String
  ): jsonb
  content_structure_flatten: String
  copy_study_plan_item_id: String
  created_at: timestamptz!
  deleted_at: timestamptz
  display_order: Int!
  end_date: timestamptz

  """An object relationship"""
  lo_study_plan_item: lo_study_plan_items

  """An array relationship"""
  lo_study_plan_items(
    """distinct select on columns"""
    distinct_on: [lo_study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_study_plan_items_order_by!]

    """filter the rows returned"""
    where: lo_study_plan_items_bool_exp
  ): [lo_study_plan_items!]!

  """An aggregated array relationship"""
  lo_study_plan_items_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_study_plan_items_order_by!]

    """filter the rows returned"""
    where: lo_study_plan_items_bool_exp
  ): lo_study_plan_items_aggregate!
  resource_path: String!
  school_date: timestamptz
  start_date: timestamptz
  status: String

  """An object relationship"""
  study_plan: study_plans
  study_plan_id: String
  study_plan_item_id: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "study_plan_items"
"""
type study_plan_items_aggregate {
  aggregate: study_plan_items_aggregate_fields
  nodes: [study_plan_items!]!
}

"""
aggregate fields of "study_plan_items"
"""
type study_plan_items_aggregate_fields {
  avg: study_plan_items_avg_fields
  count(columns: [study_plan_items_select_column!], distinct: Boolean): Int
  max: study_plan_items_max_fields
  min: study_plan_items_min_fields
  stddev: study_plan_items_stddev_fields
  stddev_pop: study_plan_items_stddev_pop_fields
  stddev_samp: study_plan_items_stddev_samp_fields
  sum: study_plan_items_sum_fields
  var_pop: study_plan_items_var_pop_fields
  var_samp: study_plan_items_var_samp_fields
  variance: study_plan_items_variance_fields
}

"""
order by aggregate values of table "study_plan_items"
"""
input study_plan_items_aggregate_order_by {
  avg: study_plan_items_avg_order_by
  count: order_by
  max: study_plan_items_max_order_by
  min: study_plan_items_min_order_by
  stddev: study_plan_items_stddev_order_by
  stddev_pop: study_plan_items_stddev_pop_order_by
  stddev_samp: study_plan_items_stddev_samp_order_by
  sum: study_plan_items_sum_order_by
  var_pop: study_plan_items_var_pop_order_by
  var_samp: study_plan_items_var_samp_order_by
  variance: study_plan_items_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input study_plan_items_append_input {
  content_structure: jsonb
}

"""
input type for inserting array relation for remote table "study_plan_items"
"""
input study_plan_items_arr_rel_insert_input {
  data: [study_plan_items_insert_input!]!
  on_conflict: study_plan_items_on_conflict
}

"""aggregate avg on columns"""
type study_plan_items_avg_fields {
  display_order: Float
}

"""
order by avg() on columns of table "study_plan_items"
"""
input study_plan_items_avg_order_by {
  display_order: order_by
}

"""
Boolean expression to filter rows from the table "study_plan_items". All fields are combined with a logical 'AND'.
"""
input study_plan_items_bool_exp {
  _and: [study_plan_items_bool_exp]
  _not: study_plan_items_bool_exp
  _or: [study_plan_items_bool_exp]
  assignment_study_plan_item: assignment_study_plan_items_bool_exp
  assignment_study_plan_items: assignment_study_plan_items_bool_exp
  available_from: timestamptz_comparison_exp
  available_to: timestamptz_comparison_exp
  completed_at: timestamptz_comparison_exp
  content_structure: jsonb_comparison_exp
  content_structure_flatten: String_comparison_exp
  copy_study_plan_item_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  display_order: Int_comparison_exp
  end_date: timestamptz_comparison_exp
  lo_study_plan_item: lo_study_plan_items_bool_exp
  lo_study_plan_items: lo_study_plan_items_bool_exp
  resource_path: String_comparison_exp
  school_date: timestamptz_comparison_exp
  start_date: timestamptz_comparison_exp
  status: String_comparison_exp
  study_plan: study_plans_bool_exp
  study_plan_id: String_comparison_exp
  study_plan_item_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "study_plan_items"
"""
enum study_plan_items_constraint {
  """unique or primary key constraint"""
  study_plan_content_structure_idx

  """unique or primary key constraint"""
  study_plan_items_pk
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input study_plan_items_delete_at_path_input {
  content_structure: [String]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input study_plan_items_delete_elem_input {
  content_structure: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input study_plan_items_delete_key_input {
  content_structure: String
}

"""
input type for incrementing integer column in table "study_plan_items"
"""
input study_plan_items_inc_input {
  display_order: Int
}

"""
input type for inserting data into table "study_plan_items"
"""
input study_plan_items_insert_input {
  assignment_study_plan_item: assignment_study_plan_items_obj_rel_insert_input
  assignment_study_plan_items: assignment_study_plan_items_arr_rel_insert_input
  available_from: timestamptz
  available_to: timestamptz
  completed_at: timestamptz
  content_structure: jsonb
  content_structure_flatten: String
  copy_study_plan_item_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: Int
  end_date: timestamptz
  lo_study_plan_item: lo_study_plan_items_obj_rel_insert_input
  lo_study_plan_items: lo_study_plan_items_arr_rel_insert_input
  resource_path: String
  school_date: timestamptz
  start_date: timestamptz
  status: String
  study_plan: study_plans_obj_rel_insert_input
  study_plan_id: String
  study_plan_item_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type study_plan_items_max_fields {
  available_from: timestamptz
  available_to: timestamptz
  completed_at: timestamptz
  content_structure_flatten: String
  copy_study_plan_item_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: Int
  end_date: timestamptz
  resource_path: String
  school_date: timestamptz
  start_date: timestamptz
  status: String
  study_plan_id: String
  study_plan_item_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "study_plan_items"
"""
input study_plan_items_max_order_by {
  available_from: order_by
  available_to: order_by
  completed_at: order_by
  content_structure_flatten: order_by
  copy_study_plan_item_id: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  end_date: order_by
  resource_path: order_by
  school_date: order_by
  start_date: order_by
  status: order_by
  study_plan_id: order_by
  study_plan_item_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type study_plan_items_min_fields {
  available_from: timestamptz
  available_to: timestamptz
  completed_at: timestamptz
  content_structure_flatten: String
  copy_study_plan_item_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: Int
  end_date: timestamptz
  resource_path: String
  school_date: timestamptz
  start_date: timestamptz
  status: String
  study_plan_id: String
  study_plan_item_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "study_plan_items"
"""
input study_plan_items_min_order_by {
  available_from: order_by
  available_to: order_by
  completed_at: order_by
  content_structure_flatten: order_by
  copy_study_plan_item_id: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  end_date: order_by
  resource_path: order_by
  school_date: order_by
  start_date: order_by
  status: order_by
  study_plan_id: order_by
  study_plan_item_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "study_plan_items"
"""
type study_plan_items_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [study_plan_items!]!
}

"""
input type for inserting object relation for remote table "study_plan_items"
"""
input study_plan_items_obj_rel_insert_input {
  data: study_plan_items_insert_input!
  on_conflict: study_plan_items_on_conflict
}

"""
on conflict condition type for table "study_plan_items"
"""
input study_plan_items_on_conflict {
  constraint: study_plan_items_constraint!
  update_columns: [study_plan_items_update_column!]!
  where: study_plan_items_bool_exp
}

"""
ordering options when selecting data from "study_plan_items"
"""
input study_plan_items_order_by {
  assignment_study_plan_item: assignment_study_plan_items_order_by
  assignment_study_plan_items_aggregate: assignment_study_plan_items_aggregate_order_by
  available_from: order_by
  available_to: order_by
  completed_at: order_by
  content_structure: order_by
  content_structure_flatten: order_by
  copy_study_plan_item_id: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  end_date: order_by
  lo_study_plan_item: lo_study_plan_items_order_by
  lo_study_plan_items_aggregate: lo_study_plan_items_aggregate_order_by
  resource_path: order_by
  school_date: order_by
  start_date: order_by
  status: order_by
  study_plan: study_plans_order_by
  study_plan_id: order_by
  study_plan_item_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "study_plan_items"
"""
input study_plan_items_pk_columns_input {
  study_plan_item_id: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input study_plan_items_prepend_input {
  content_structure: jsonb
}

"""
select columns of table "study_plan_items"
"""
enum study_plan_items_select_column {
  """column name"""
  available_from

  """column name"""
  available_to

  """column name"""
  completed_at

  """column name"""
  content_structure

  """column name"""
  content_structure_flatten

  """column name"""
  copy_study_plan_item_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  end_date

  """column name"""
  resource_path

  """column name"""
  school_date

  """column name"""
  start_date

  """column name"""
  status

  """column name"""
  study_plan_id

  """column name"""
  study_plan_item_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "study_plan_items"
"""
input study_plan_items_set_input {
  available_from: timestamptz
  available_to: timestamptz
  completed_at: timestamptz
  content_structure: jsonb
  content_structure_flatten: String
  copy_study_plan_item_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: Int
  end_date: timestamptz
  resource_path: String
  school_date: timestamptz
  start_date: timestamptz
  status: String
  study_plan_id: String
  study_plan_item_id: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type study_plan_items_stddev_fields {
  display_order: Float
}

"""
order by stddev() on columns of table "study_plan_items"
"""
input study_plan_items_stddev_order_by {
  display_order: order_by
}

"""aggregate stddev_pop on columns"""
type study_plan_items_stddev_pop_fields {
  display_order: Float
}

"""
order by stddev_pop() on columns of table "study_plan_items"
"""
input study_plan_items_stddev_pop_order_by {
  display_order: order_by
}

"""aggregate stddev_samp on columns"""
type study_plan_items_stddev_samp_fields {
  display_order: Float
}

"""
order by stddev_samp() on columns of table "study_plan_items"
"""
input study_plan_items_stddev_samp_order_by {
  display_order: order_by
}

"""aggregate sum on columns"""
type study_plan_items_sum_fields {
  display_order: Int
}

"""
order by sum() on columns of table "study_plan_items"
"""
input study_plan_items_sum_order_by {
  display_order: order_by
}

"""
update columns of table "study_plan_items"
"""
enum study_plan_items_update_column {
  """column name"""
  available_from

  """column name"""
  available_to

  """column name"""
  completed_at

  """column name"""
  content_structure

  """column name"""
  content_structure_flatten

  """column name"""
  copy_study_plan_item_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  end_date

  """column name"""
  resource_path

  """column name"""
  school_date

  """column name"""
  start_date

  """column name"""
  status

  """column name"""
  study_plan_id

  """column name"""
  study_plan_item_id

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type study_plan_items_var_pop_fields {
  display_order: Float
}

"""
order by var_pop() on columns of table "study_plan_items"
"""
input study_plan_items_var_pop_order_by {
  display_order: order_by
}

"""aggregate var_samp on columns"""
type study_plan_items_var_samp_fields {
  display_order: Float
}

"""
order by var_samp() on columns of table "study_plan_items"
"""
input study_plan_items_var_samp_order_by {
  display_order: order_by
}

"""aggregate variance on columns"""
type study_plan_items_variance_fields {
  display_order: Float
}

"""
order by variance() on columns of table "study_plan_items"
"""
input study_plan_items_variance_order_by {
  display_order: order_by
}

"""
columns and relationships of "study_plans"
"""
type study_plans {
  book_id: String
  course_id: String

  """An array relationship"""
  course_study_plans(
    """distinct select on columns"""
    distinct_on: [course_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_study_plans_order_by!]

    """filter the rows returned"""
    where: course_study_plans_bool_exp
  ): [course_study_plans!]!

  """An aggregated array relationship"""
  course_study_plans_aggregate(
    """distinct select on columns"""
    distinct_on: [course_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_study_plans_order_by!]

    """filter the rows returned"""
    where: course_study_plans_bool_exp
  ): course_study_plans_aggregate!
  created_at: timestamptz!
  deleted_at: timestamptz
  grades: _int4
  master_study_plan_id: String
  name: String
  resource_path: String!
  school_id: Int
  status: String

  """An array relationship"""
  student_study_plans(
    """distinct select on columns"""
    distinct_on: [student_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_study_plans_order_by!]

    """filter the rows returned"""
    where: student_study_plans_bool_exp
  ): [student_study_plans!]!

  """An aggregated array relationship"""
  student_study_plans_aggregate(
    """distinct select on columns"""
    distinct_on: [student_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_study_plans_order_by!]

    """filter the rows returned"""
    where: student_study_plans_bool_exp
  ): student_study_plans_aggregate!

  """An object relationship"""
  study_plan: study_plans
  study_plan_id: String!

  """An array relationship"""
  study_plan_items(
    """distinct select on columns"""
    distinct_on: [study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [study_plan_items_order_by!]

    """filter the rows returned"""
    where: study_plan_items_bool_exp
  ): [study_plan_items!]!

  """An aggregated array relationship"""
  study_plan_items_aggregate(
    """distinct select on columns"""
    distinct_on: [study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [study_plan_items_order_by!]

    """filter the rows returned"""
    where: study_plan_items_bool_exp
  ): study_plan_items_aggregate!
  study_plan_type: String

  """An array relationship"""
  study_plans(
    """distinct select on columns"""
    distinct_on: [study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [study_plans_order_by!]

    """filter the rows returned"""
    where: study_plans_bool_exp
  ): [study_plans!]!

  """An aggregated array relationship"""
  study_plans_aggregate(
    """distinct select on columns"""
    distinct_on: [study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [study_plans_order_by!]

    """filter the rows returned"""
    where: study_plans_bool_exp
  ): study_plans_aggregate!
  track_school_progress: Boolean
  updated_at: timestamptz!
}

"""
aggregated selection of "study_plans"
"""
type study_plans_aggregate {
  aggregate: study_plans_aggregate_fields
  nodes: [study_plans!]!
}

"""
aggregate fields of "study_plans"
"""
type study_plans_aggregate_fields {
  avg: study_plans_avg_fields
  count(columns: [study_plans_select_column!], distinct: Boolean): Int
  max: study_plans_max_fields
  min: study_plans_min_fields
  stddev: study_plans_stddev_fields
  stddev_pop: study_plans_stddev_pop_fields
  stddev_samp: study_plans_stddev_samp_fields
  sum: study_plans_sum_fields
  var_pop: study_plans_var_pop_fields
  var_samp: study_plans_var_samp_fields
  variance: study_plans_variance_fields
}

"""
order by aggregate values of table "study_plans"
"""
input study_plans_aggregate_order_by {
  avg: study_plans_avg_order_by
  count: order_by
  max: study_plans_max_order_by
  min: study_plans_min_order_by
  stddev: study_plans_stddev_order_by
  stddev_pop: study_plans_stddev_pop_order_by
  stddev_samp: study_plans_stddev_samp_order_by
  sum: study_plans_sum_order_by
  var_pop: study_plans_var_pop_order_by
  var_samp: study_plans_var_samp_order_by
  variance: study_plans_variance_order_by
}

"""
input type for inserting array relation for remote table "study_plans"
"""
input study_plans_arr_rel_insert_input {
  data: [study_plans_insert_input!]!
  on_conflict: study_plans_on_conflict
}

"""aggregate avg on columns"""
type study_plans_avg_fields {
  school_id: Float
}

"""
order by avg() on columns of table "study_plans"
"""
input study_plans_avg_order_by {
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "study_plans". All fields are combined with a logical 'AND'.
"""
input study_plans_bool_exp {
  _and: [study_plans_bool_exp]
  _not: study_plans_bool_exp
  _or: [study_plans_bool_exp]
  book_id: String_comparison_exp
  course_id: String_comparison_exp
  course_study_plans: course_study_plans_bool_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  grades: _int4_comparison_exp
  master_study_plan_id: String_comparison_exp
  name: String_comparison_exp
  resource_path: String_comparison_exp
  school_id: Int_comparison_exp
  status: String_comparison_exp
  student_study_plans: student_study_plans_bool_exp
  study_plan: study_plans_bool_exp
  study_plan_id: String_comparison_exp
  study_plan_items: study_plan_items_bool_exp
  study_plan_type: String_comparison_exp
  study_plans: study_plans_bool_exp
  track_school_progress: Boolean_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "study_plans"
"""
enum study_plans_constraint {
  """unique or primary key constraint"""
  study_plans_pk
}

"""
input type for incrementing integer column in table "study_plans"
"""
input study_plans_inc_input {
  school_id: Int
}

"""
input type for inserting data into table "study_plans"
"""
input study_plans_insert_input {
  book_id: String
  course_id: String
  course_study_plans: course_study_plans_arr_rel_insert_input
  created_at: timestamptz
  deleted_at: timestamptz
  grades: _int4
  master_study_plan_id: String
  name: String
  resource_path: String
  school_id: Int
  status: String
  student_study_plans: student_study_plans_arr_rel_insert_input
  study_plan: study_plans_obj_rel_insert_input
  study_plan_id: String
  study_plan_items: study_plan_items_arr_rel_insert_input
  study_plan_type: String
  study_plans: study_plans_arr_rel_insert_input
  track_school_progress: Boolean
  updated_at: timestamptz
}

"""aggregate max on columns"""
type study_plans_max_fields {
  book_id: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  master_study_plan_id: String
  name: String
  resource_path: String
  school_id: Int
  status: String
  study_plan_id: String
  study_plan_type: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "study_plans"
"""
input study_plans_max_order_by {
  book_id: order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  master_study_plan_id: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  status: order_by
  study_plan_id: order_by
  study_plan_type: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type study_plans_min_fields {
  book_id: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  master_study_plan_id: String
  name: String
  resource_path: String
  school_id: Int
  status: String
  study_plan_id: String
  study_plan_type: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "study_plans"
"""
input study_plans_min_order_by {
  book_id: order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  master_study_plan_id: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  status: order_by
  study_plan_id: order_by
  study_plan_type: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "study_plans"
"""
type study_plans_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [study_plans!]!
}

"""
input type for inserting object relation for remote table "study_plans"
"""
input study_plans_obj_rel_insert_input {
  data: study_plans_insert_input!
  on_conflict: study_plans_on_conflict
}

"""
on conflict condition type for table "study_plans"
"""
input study_plans_on_conflict {
  constraint: study_plans_constraint!
  update_columns: [study_plans_update_column!]!
  where: study_plans_bool_exp
}

"""
ordering options when selecting data from "study_plans"
"""
input study_plans_order_by {
  book_id: order_by
  course_id: order_by
  course_study_plans_aggregate: course_study_plans_aggregate_order_by
  created_at: order_by
  deleted_at: order_by
  grades: order_by
  master_study_plan_id: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  status: order_by
  student_study_plans_aggregate: student_study_plans_aggregate_order_by
  study_plan: study_plans_order_by
  study_plan_id: order_by
  study_plan_items_aggregate: study_plan_items_aggregate_order_by
  study_plan_type: order_by
  study_plans_aggregate: study_plans_aggregate_order_by
  track_school_progress: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "study_plans"
"""
input study_plans_pk_columns_input {
  study_plan_id: String!
}

"""
select columns of table "study_plans"
"""
enum study_plans_select_column {
  """column name"""
  book_id

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  grades

  """column name"""
  master_study_plan_id

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  status

  """column name"""
  study_plan_id

  """column name"""
  study_plan_type

  """column name"""
  track_school_progress

  """column name"""
  updated_at
}

"""
input type for updating data in table "study_plans"
"""
input study_plans_set_input {
  book_id: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  grades: _int4
  master_study_plan_id: String
  name: String
  resource_path: String
  school_id: Int
  status: String
  study_plan_id: String
  study_plan_type: String
  track_school_progress: Boolean
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type study_plans_stddev_fields {
  school_id: Float
}

"""
order by stddev() on columns of table "study_plans"
"""
input study_plans_stddev_order_by {
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type study_plans_stddev_pop_fields {
  school_id: Float
}

"""
order by stddev_pop() on columns of table "study_plans"
"""
input study_plans_stddev_pop_order_by {
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type study_plans_stddev_samp_fields {
  school_id: Float
}

"""
order by stddev_samp() on columns of table "study_plans"
"""
input study_plans_stddev_samp_order_by {
  school_id: order_by
}

"""aggregate sum on columns"""
type study_plans_sum_fields {
  school_id: Int
}

"""
order by sum() on columns of table "study_plans"
"""
input study_plans_sum_order_by {
  school_id: order_by
}

"""
update columns of table "study_plans"
"""
enum study_plans_update_column {
  """column name"""
  book_id

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  grades

  """column name"""
  master_study_plan_id

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  status

  """column name"""
  study_plan_id

  """column name"""
  study_plan_type

  """column name"""
  track_school_progress

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type study_plans_var_pop_fields {
  school_id: Float
}

"""
order by var_pop() on columns of table "study_plans"
"""
input study_plans_var_pop_order_by {
  school_id: order_by
}

"""aggregate var_samp on columns"""
type study_plans_var_samp_fields {
  school_id: Float
}

"""
order by var_samp() on columns of table "study_plans"
"""
input study_plans_var_samp_order_by {
  school_id: order_by
}

"""aggregate variance on columns"""
type study_plans_variance_fields {
  school_id: Float
}

"""
order by variance() on columns of table "study_plans"
"""
input study_plans_variance_order_by {
  school_id: order_by
}

"""subscription root"""
type subscription_root {
  """
  fetch data from the table: "assign_study_plan_tasks"
  """
  assign_study_plan_tasks(
    """distinct select on columns"""
    distinct_on: [assign_study_plan_tasks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assign_study_plan_tasks_order_by!]

    """filter the rows returned"""
    where: assign_study_plan_tasks_bool_exp
  ): [assign_study_plan_tasks!]!

  """
  fetch aggregated fields from the table: "assign_study_plan_tasks"
  """
  assign_study_plan_tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [assign_study_plan_tasks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assign_study_plan_tasks_order_by!]

    """filter the rows returned"""
    where: assign_study_plan_tasks_bool_exp
  ): assign_study_plan_tasks_aggregate!

  """
  fetch data from the table: "assign_study_plan_tasks" using primary key columns
  """
  assign_study_plan_tasks_by_pk(id: String!): assign_study_plan_tasks

  """
  fetch data from the table: "assignment_study_plan_items"
  """
  assignment_study_plan_items(
    """distinct select on columns"""
    distinct_on: [assignment_study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignment_study_plan_items_order_by!]

    """filter the rows returned"""
    where: assignment_study_plan_items_bool_exp
  ): [assignment_study_plan_items!]!

  """
  fetch aggregated fields from the table: "assignment_study_plan_items"
  """
  assignment_study_plan_items_aggregate(
    """distinct select on columns"""
    distinct_on: [assignment_study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignment_study_plan_items_order_by!]

    """filter the rows returned"""
    where: assignment_study_plan_items_bool_exp
  ): assignment_study_plan_items_aggregate!

  """
  fetch data from the table: "assignment_study_plan_items" using primary key columns
  """
  assignment_study_plan_items_by_pk(assignment_id: String!, study_plan_item_id: String!): assignment_study_plan_items

  """
  fetch data from the table: "assignments"
  """
  assignments(
    """distinct select on columns"""
    distinct_on: [assignments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignments_order_by!]

    """filter the rows returned"""
    where: assignments_bool_exp
  ): [assignments!]!

  """
  fetch aggregated fields from the table: "assignments"
  """
  assignments_aggregate(
    """distinct select on columns"""
    distinct_on: [assignments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignments_order_by!]

    """filter the rows returned"""
    where: assignments_bool_exp
  ): assignments_aggregate!

  """fetch data from the table: "assignments" using primary key columns"""
  assignments_by_pk(assignment_id: String!): assignments

  """
  fetch data from the table: "books"
  """
  books(
    """distinct select on columns"""
    distinct_on: [books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_order_by!]

    """filter the rows returned"""
    where: books_bool_exp
  ): [books!]!

  """
  fetch aggregated fields from the table: "books"
  """
  books_aggregate(
    """distinct select on columns"""
    distinct_on: [books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_order_by!]

    """filter the rows returned"""
    where: books_bool_exp
  ): books_aggregate!

  """fetch data from the table: "books" using primary key columns"""
  books_by_pk(book_id: String!): books

  """
  fetch data from the table: "books_chapters"
  """
  books_chapters(
    """distinct select on columns"""
    distinct_on: [books_chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_chapters_order_by!]

    """filter the rows returned"""
    where: books_chapters_bool_exp
  ): [books_chapters!]!

  """
  fetch aggregated fields from the table: "books_chapters"
  """
  books_chapters_aggregate(
    """distinct select on columns"""
    distinct_on: [books_chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_chapters_order_by!]

    """filter the rows returned"""
    where: books_chapters_bool_exp
  ): books_chapters_aggregate!

  """fetch data from the table: "books_chapters" using primary key columns"""
  books_chapters_by_pk(book_id: String!, chapter_id: String!): books_chapters

  """
  fetch data from the table: "brands"
  """
  brands(
    """distinct select on columns"""
    distinct_on: [brands_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [brands_order_by!]

    """filter the rows returned"""
    where: brands_bool_exp
  ): [brands!]!

  """
  fetch aggregated fields from the table: "brands"
  """
  brands_aggregate(
    """distinct select on columns"""
    distinct_on: [brands_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [brands_order_by!]

    """filter the rows returned"""
    where: brands_bool_exp
  ): brands_aggregate!

  """fetch data from the table: "brands" using primary key columns"""
  brands_by_pk(brand_id: String!): brands

  """
  fetch data from the table: "centers"
  """
  centers(
    """distinct select on columns"""
    distinct_on: [centers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [centers_order_by!]

    """filter the rows returned"""
    where: centers_bool_exp
  ): [centers!]!

  """
  fetch aggregated fields from the table: "centers"
  """
  centers_aggregate(
    """distinct select on columns"""
    distinct_on: [centers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [centers_order_by!]

    """filter the rows returned"""
    where: centers_bool_exp
  ): centers_aggregate!

  """fetch data from the table: "centers" using primary key columns"""
  centers_by_pk(center_id: String!): centers

  """
  fetch data from the table: "chapters"
  """
  chapters(
    """distinct select on columns"""
    distinct_on: [chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [chapters_order_by!]

    """filter the rows returned"""
    where: chapters_bool_exp
  ): [chapters!]!

  """
  fetch aggregated fields from the table: "chapters"
  """
  chapters_aggregate(
    """distinct select on columns"""
    distinct_on: [chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [chapters_order_by!]

    """filter the rows returned"""
    where: chapters_bool_exp
  ): chapters_aggregate!

  """fetch data from the table: "chapters" using primary key columns"""
  chapters_by_pk(chapter_id: String!): chapters

  """
  fetch data from the table: "course_students"
  """
  course_students(
    """distinct select on columns"""
    distinct_on: [course_students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_students_order_by!]

    """filter the rows returned"""
    where: course_students_bool_exp
  ): [course_students!]!

  """
  fetch aggregated fields from the table: "course_students"
  """
  course_students_aggregate(
    """distinct select on columns"""
    distinct_on: [course_students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_students_order_by!]

    """filter the rows returned"""
    where: course_students_bool_exp
  ): course_students_aggregate!

  """fetch data from the table: "course_students" using primary key columns"""
  course_students_by_pk(course_id: String!, student_id: String!): course_students

  """
  fetch data from the table: "course_study_plans"
  """
  course_study_plans(
    """distinct select on columns"""
    distinct_on: [course_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_study_plans_order_by!]

    """filter the rows returned"""
    where: course_study_plans_bool_exp
  ): [course_study_plans!]!

  """
  fetch aggregated fields from the table: "course_study_plans"
  """
  course_study_plans_aggregate(
    """distinct select on columns"""
    distinct_on: [course_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_study_plans_order_by!]

    """filter the rows returned"""
    where: course_study_plans_bool_exp
  ): course_study_plans_aggregate!

  """
  fetch data from the table: "course_study_plans" using primary key columns
  """
  course_study_plans_by_pk(course_id: String!, study_plan_id: String!): course_study_plans

  """
  fetch data from the table: "courses_books"
  """
  courses_books(
    """distinct select on columns"""
    distinct_on: [courses_books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_books_order_by!]

    """filter the rows returned"""
    where: courses_books_bool_exp
  ): [courses_books!]!

  """
  fetch aggregated fields from the table: "courses_books"
  """
  courses_books_aggregate(
    """distinct select on columns"""
    distinct_on: [courses_books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_books_order_by!]

    """filter the rows returned"""
    where: courses_books_bool_exp
  ): courses_books_aggregate!

  """fetch data from the table: "courses_books" using primary key columns"""
  courses_books_by_pk(book_id: String!, course_id: String!): courses_books

  """
  execute function "find_assignment_by_topic_id" which returns "assignments"
  """
  find_assignment_by_topic_id(
    """
    input parameters for function "find_assignment_by_topic_id"
    """
    args: find_assignment_by_topic_id_args!

    """distinct select on columns"""
    distinct_on: [assignments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignments_order_by!]

    """filter the rows returned"""
    where: assignments_bool_exp
  ): [assignments!]!

  """
  execute function "find_assignment_by_topic_id" and query aggregates on result of table type "assignments"
  """
  find_assignment_by_topic_id_aggregate(
    """
    input parameters for function "find_assignment_by_topic_id"
    """
    args: find_assignment_by_topic_id_args!

    """distinct select on columns"""
    distinct_on: [assignments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignments_order_by!]

    """filter the rows returned"""
    where: assignments_bool_exp
  ): assignments_aggregate!

  """
  execute function "find_quiz_by_lo_id" which returns "quizzes"
  """
  find_quiz_by_lo_id(
    """
    input parameters for function "find_quiz_by_lo_id"
    """
    args: find_quiz_by_lo_id_args!

    """distinct select on columns"""
    distinct_on: [quizzes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizzes_order_by!]

    """filter the rows returned"""
    where: quizzes_bool_exp
  ): [quizzes!]!

  """
  execute function "find_quiz_by_lo_id" and query aggregates on result of table type "quizzes"
  """
  find_quiz_by_lo_id_aggregate(
    """
    input parameters for function "find_quiz_by_lo_id"
    """
    args: find_quiz_by_lo_id_args!

    """distinct select on columns"""
    distinct_on: [quizzes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizzes_order_by!]

    """filter the rows returned"""
    where: quizzes_bool_exp
  ): quizzes_aggregate!

  """
  execute function "get_list_course_student_study_plans_by_filter" which returns "course_students"
  """
  get_list_course_student_study_plans_by_filter(
    """
    input parameters for function "get_list_course_student_study_plans_by_filter"
    """
    args: get_list_course_student_study_plans_by_filter_args!

    """distinct select on columns"""
    distinct_on: [course_students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_students_order_by!]

    """filter the rows returned"""
    where: course_students_bool_exp
  ): [course_students!]!

  """
  execute function "get_list_course_student_study_plans_by_filter" and query aggregates on result of table type "course_students"
  """
  get_list_course_student_study_plans_by_filter_aggregate(
    """
    input parameters for function "get_list_course_student_study_plans_by_filter"
    """
    args: get_list_course_student_study_plans_by_filter_args!

    """distinct select on columns"""
    distinct_on: [course_students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_students_order_by!]

    """filter the rows returned"""
    where: course_students_bool_exp
  ): course_students_aggregate!

  """
  execute function "get_list_course_study_plan_by_filter" which returns "course_study_plans"
  """
  get_list_course_study_plan_by_filter(
    """
    input parameters for function "get_list_course_study_plan_by_filter"
    """
    args: get_list_course_study_plan_by_filter_args!

    """distinct select on columns"""
    distinct_on: [course_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_study_plans_order_by!]

    """filter the rows returned"""
    where: course_study_plans_bool_exp
  ): [course_study_plans!]!

  """
  execute function "get_list_course_study_plan_by_filter" and query aggregates on result of table type "course_study_plans"
  """
  get_list_course_study_plan_by_filter_aggregate(
    """
    input parameters for function "get_list_course_study_plan_by_filter"
    """
    args: get_list_course_study_plan_by_filter_args!

    """distinct select on columns"""
    distinct_on: [course_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_study_plans_order_by!]

    """filter the rows returned"""
    where: course_study_plans_bool_exp
  ): course_study_plans_aggregate!

  """
  execute function "get_student_study_plans_by_filter" which returns "study_plans"
  """
  get_student_study_plans_by_filter(
    """
    input parameters for function "get_student_study_plans_by_filter"
    """
    args: get_student_study_plans_by_filter_args!

    """distinct select on columns"""
    distinct_on: [study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [study_plans_order_by!]

    """filter the rows returned"""
    where: study_plans_bool_exp
  ): [study_plans!]!

  """
  execute function "get_student_study_plans_by_filter" and query aggregates on result of table type "study_plans"
  """
  get_student_study_plans_by_filter_aggregate(
    """
    input parameters for function "get_student_study_plans_by_filter"
    """
    args: get_student_study_plans_by_filter_args!

    """distinct select on columns"""
    distinct_on: [study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [study_plans_order_by!]

    """filter the rows returned"""
    where: study_plans_bool_exp
  ): study_plans_aggregate!

  """
  fetch data from the table: "learning_objectives"
  """
  learning_objectives(
    """distinct select on columns"""
    distinct_on: [learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_objectives_order_by!]

    """filter the rows returned"""
    where: learning_objectives_bool_exp
  ): [learning_objectives!]!

  """
  fetch aggregated fields from the table: "learning_objectives"
  """
  learning_objectives_aggregate(
    """distinct select on columns"""
    distinct_on: [learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_objectives_order_by!]

    """filter the rows returned"""
    where: learning_objectives_bool_exp
  ): learning_objectives_aggregate!

  """
  fetch data from the table: "learning_objectives" using primary key columns
  """
  learning_objectives_by_pk(lo_id: String!): learning_objectives

  """
  fetch data from the table: "lo_study_plan_items"
  """
  lo_study_plan_items(
    """distinct select on columns"""
    distinct_on: [lo_study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_study_plan_items_order_by!]

    """filter the rows returned"""
    where: lo_study_plan_items_bool_exp
  ): [lo_study_plan_items!]!

  """
  fetch aggregated fields from the table: "lo_study_plan_items"
  """
  lo_study_plan_items_aggregate(
    """distinct select on columns"""
    distinct_on: [lo_study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lo_study_plan_items_order_by!]

    """filter the rows returned"""
    where: lo_study_plan_items_bool_exp
  ): lo_study_plan_items_aggregate!

  """
  fetch data from the table: "lo_study_plan_items" using primary key columns
  """
  lo_study_plan_items_by_pk(lo_id: String!, study_plan_item_id: String!): lo_study_plan_items

  """
  fetch data from the table: "quiz_sets"
  """
  quiz_sets(
    """distinct select on columns"""
    distinct_on: [quiz_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quiz_sets_order_by!]

    """filter the rows returned"""
    where: quiz_sets_bool_exp
  ): [quiz_sets!]!

  """
  fetch aggregated fields from the table: "quiz_sets"
  """
  quiz_sets_aggregate(
    """distinct select on columns"""
    distinct_on: [quiz_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quiz_sets_order_by!]

    """filter the rows returned"""
    where: quiz_sets_bool_exp
  ): quiz_sets_aggregate!

  """fetch data from the table: "quiz_sets" using primary key columns"""
  quiz_sets_by_pk(quiz_set_id: String!): quiz_sets

  """
  fetch data from the table: "quizzes"
  """
  quizzes(
    """distinct select on columns"""
    distinct_on: [quizzes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizzes_order_by!]

    """filter the rows returned"""
    where: quizzes_bool_exp
  ): [quizzes!]!

  """
  fetch aggregated fields from the table: "quizzes"
  """
  quizzes_aggregate(
    """distinct select on columns"""
    distinct_on: [quizzes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizzes_order_by!]

    """filter the rows returned"""
    where: quizzes_bool_exp
  ): quizzes_aggregate!

  """fetch data from the table: "quizzes" using primary key columns"""
  quizzes_by_pk(quiz_id: String!): quizzes

  """
  fetch data from the table: "scheduler_items"
  """
  scheduler_items(
    """distinct select on columns"""
    distinct_on: [scheduler_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_items_order_by!]

    """filter the rows returned"""
    where: scheduler_items_bool_exp
  ): [scheduler_items!]!

  """
  fetch aggregated fields from the table: "scheduler_items"
  """
  scheduler_items_aggregate(
    """distinct select on columns"""
    distinct_on: [scheduler_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_items_order_by!]

    """filter the rows returned"""
    where: scheduler_items_bool_exp
  ): scheduler_items_aggregate!

  """fetch data from the table: "scheduler_items" using primary key columns"""
  scheduler_items_by_pk(scheduler_item_id: String!): scheduler_items

  """
  fetch data from the table: "scheduler_patterns"
  """
  scheduler_patterns(
    """distinct select on columns"""
    distinct_on: [scheduler_patterns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_patterns_order_by!]

    """filter the rows returned"""
    where: scheduler_patterns_bool_exp
  ): [scheduler_patterns!]!

  """
  fetch aggregated fields from the table: "scheduler_patterns"
  """
  scheduler_patterns_aggregate(
    """distinct select on columns"""
    distinct_on: [scheduler_patterns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_patterns_order_by!]

    """filter the rows returned"""
    where: scheduler_patterns_bool_exp
  ): scheduler_patterns_aggregate!

  """
  fetch data from the table: "scheduler_patterns" using primary key columns
  """
  scheduler_patterns_by_pk(scheduler_pattern_id: String!): scheduler_patterns

  """
  fetch data from the table: "student_study_plans"
  """
  student_study_plans(
    """distinct select on columns"""
    distinct_on: [student_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_study_plans_order_by!]

    """filter the rows returned"""
    where: student_study_plans_bool_exp
  ): [student_study_plans!]!

  """
  fetch aggregated fields from the table: "student_study_plans"
  """
  student_study_plans_aggregate(
    """distinct select on columns"""
    distinct_on: [student_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_study_plans_order_by!]

    """filter the rows returned"""
    where: student_study_plans_bool_exp
  ): student_study_plans_aggregate!

  """
  fetch data from the table: "student_study_plans" using primary key columns
  """
  student_study_plans_by_pk(student_id: String!, study_plan_id: String!): student_study_plans

  """
  fetch data from the table: "study_plan_items"
  """
  study_plan_items(
    """distinct select on columns"""
    distinct_on: [study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [study_plan_items_order_by!]

    """filter the rows returned"""
    where: study_plan_items_bool_exp
  ): [study_plan_items!]!

  """
  fetch aggregated fields from the table: "study_plan_items"
  """
  study_plan_items_aggregate(
    """distinct select on columns"""
    distinct_on: [study_plan_items_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [study_plan_items_order_by!]

    """filter the rows returned"""
    where: study_plan_items_bool_exp
  ): study_plan_items_aggregate!

  """
  fetch data from the table: "study_plan_items" using primary key columns
  """
  study_plan_items_by_pk(study_plan_item_id: String!): study_plan_items

  """
  fetch data from the table: "study_plans"
  """
  study_plans(
    """distinct select on columns"""
    distinct_on: [study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [study_plans_order_by!]

    """filter the rows returned"""
    where: study_plans_bool_exp
  ): [study_plans!]!

  """
  fetch aggregated fields from the table: "study_plans"
  """
  study_plans_aggregate(
    """distinct select on columns"""
    distinct_on: [study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [study_plans_order_by!]

    """filter the rows returned"""
    where: study_plans_bool_exp
  ): study_plans_aggregate!

  """fetch data from the table: "study_plans" using primary key columns"""
  study_plans_by_pk(study_plan_id: String!): study_plans

  """
  fetch data from the table: "topics"
  """
  topics(
    """distinct select on columns"""
    distinct_on: [topics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_order_by!]

    """filter the rows returned"""
    where: topics_bool_exp
  ): [topics!]!

  """
  fetch aggregated fields from the table: "topics"
  """
  topics_aggregate(
    """distinct select on columns"""
    distinct_on: [topics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_order_by!]

    """filter the rows returned"""
    where: topics_bool_exp
  ): topics_aggregate!

  """
  fetch data from the table: "topics_assignments"
  """
  topics_assignments(
    """distinct select on columns"""
    distinct_on: [topics_assignments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_assignments_order_by!]

    """filter the rows returned"""
    where: topics_assignments_bool_exp
  ): [topics_assignments!]!

  """
  fetch aggregated fields from the table: "topics_assignments"
  """
  topics_assignments_aggregate(
    """distinct select on columns"""
    distinct_on: [topics_assignments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_assignments_order_by!]

    """filter the rows returned"""
    where: topics_assignments_bool_exp
  ): topics_assignments_aggregate!

  """
  fetch data from the table: "topics_assignments" using primary key columns
  """
  topics_assignments_by_pk(assignment_id: String!, topic_id: String!): topics_assignments

  """fetch data from the table: "topics" using primary key columns"""
  topics_by_pk(topic_id: String!): topics

  """
  fetch data from the table: "topics_learning_objectives"
  """
  topics_learning_objectives(
    """distinct select on columns"""
    distinct_on: [topics_learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_learning_objectives_order_by!]

    """filter the rows returned"""
    where: topics_learning_objectives_bool_exp
  ): [topics_learning_objectives!]!

  """
  fetch aggregated fields from the table: "topics_learning_objectives"
  """
  topics_learning_objectives_aggregate(
    """distinct select on columns"""
    distinct_on: [topics_learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_learning_objectives_order_by!]

    """filter the rows returned"""
    where: topics_learning_objectives_bool_exp
  ): topics_learning_objectives_aggregate!

  """
  fetch data from the table: "topics_learning_objectives" using primary key columns
  """
  topics_learning_objectives_by_pk(lo_id: String!, topic_id: String!): topics_learning_objectives
}

scalar timestamptz

"""
expression to compare columns of type timestamptz. All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

"""
columns and relationships of "topics"
"""
type topics {
  attachment_names: _text
  attachment_urls: _text
  chapter_id: String
  copied_topic_id: String
  country: String
  created_at: timestamptz!
  deleted_at: timestamptz
  display_order: smallint
  essay_required: Boolean!
  grade: smallint!
  icon_url: String
  instruction: String

  """An array relationship"""
  learning_objectives(
    """distinct select on columns"""
    distinct_on: [learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_objectives_order_by!]

    """filter the rows returned"""
    where: learning_objectives_bool_exp
  ): [learning_objectives!]!

  """An aggregated array relationship"""
  learning_objectives_aggregate(
    """distinct select on columns"""
    distinct_on: [learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_objectives_order_by!]

    """filter the rows returned"""
    where: learning_objectives_bool_exp
  ): learning_objectives_aggregate!
  lo_display_order_counter: Int
  name: String!
  published_at: timestamptz
  resource_path: String!
  school_id: Int!
  status: String
  subject: String!
  topic_id: String!
  topic_type: String!
  total_los: Int!
  updated_at: timestamptz!
}

"""
aggregated selection of "topics"
"""
type topics_aggregate {
  aggregate: topics_aggregate_fields
  nodes: [topics!]!
}

"""
aggregate fields of "topics"
"""
type topics_aggregate_fields {
  avg: topics_avg_fields
  count(columns: [topics_select_column!], distinct: Boolean): Int
  max: topics_max_fields
  min: topics_min_fields
  stddev: topics_stddev_fields
  stddev_pop: topics_stddev_pop_fields
  stddev_samp: topics_stddev_samp_fields
  sum: topics_sum_fields
  var_pop: topics_var_pop_fields
  var_samp: topics_var_samp_fields
  variance: topics_variance_fields
}

"""
order by aggregate values of table "topics"
"""
input topics_aggregate_order_by {
  avg: topics_avg_order_by
  count: order_by
  max: topics_max_order_by
  min: topics_min_order_by
  stddev: topics_stddev_order_by
  stddev_pop: topics_stddev_pop_order_by
  stddev_samp: topics_stddev_samp_order_by
  sum: topics_sum_order_by
  var_pop: topics_var_pop_order_by
  var_samp: topics_var_samp_order_by
  variance: topics_variance_order_by
}

"""
input type for inserting array relation for remote table "topics"
"""
input topics_arr_rel_insert_input {
  data: [topics_insert_input!]!
  on_conflict: topics_on_conflict
}

"""
columns and relationships of "topics_assignments"
"""
type topics_assignments {
  """An object relationship"""
  assignment: assignments!
  assignment_id: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  display_order: smallint
  resource_path: String!
  topic_id: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "topics_assignments"
"""
type topics_assignments_aggregate {
  aggregate: topics_assignments_aggregate_fields
  nodes: [topics_assignments!]!
}

"""
aggregate fields of "topics_assignments"
"""
type topics_assignments_aggregate_fields {
  avg: topics_assignments_avg_fields
  count(columns: [topics_assignments_select_column!], distinct: Boolean): Int
  max: topics_assignments_max_fields
  min: topics_assignments_min_fields
  stddev: topics_assignments_stddev_fields
  stddev_pop: topics_assignments_stddev_pop_fields
  stddev_samp: topics_assignments_stddev_samp_fields
  sum: topics_assignments_sum_fields
  var_pop: topics_assignments_var_pop_fields
  var_samp: topics_assignments_var_samp_fields
  variance: topics_assignments_variance_fields
}

"""
order by aggregate values of table "topics_assignments"
"""
input topics_assignments_aggregate_order_by {
  avg: topics_assignments_avg_order_by
  count: order_by
  max: topics_assignments_max_order_by
  min: topics_assignments_min_order_by
  stddev: topics_assignments_stddev_order_by
  stddev_pop: topics_assignments_stddev_pop_order_by
  stddev_samp: topics_assignments_stddev_samp_order_by
  sum: topics_assignments_sum_order_by
  var_pop: topics_assignments_var_pop_order_by
  var_samp: topics_assignments_var_samp_order_by
  variance: topics_assignments_variance_order_by
}

"""
input type for inserting array relation for remote table "topics_assignments"
"""
input topics_assignments_arr_rel_insert_input {
  data: [topics_assignments_insert_input!]!
  on_conflict: topics_assignments_on_conflict
}

"""aggregate avg on columns"""
type topics_assignments_avg_fields {
  display_order: Float
}

"""
order by avg() on columns of table "topics_assignments"
"""
input topics_assignments_avg_order_by {
  display_order: order_by
}

"""
Boolean expression to filter rows from the table "topics_assignments". All fields are combined with a logical 'AND'.
"""
input topics_assignments_bool_exp {
  _and: [topics_assignments_bool_exp]
  _not: topics_assignments_bool_exp
  _or: [topics_assignments_bool_exp]
  assignment: assignments_bool_exp
  assignment_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  display_order: smallint_comparison_exp
  resource_path: String_comparison_exp
  topic_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "topics_assignments"
"""
enum topics_assignments_constraint {
  """unique or primary key constraint"""
  topics_assignments_pk
}

"""
input type for incrementing integer column in table "topics_assignments"
"""
input topics_assignments_inc_input {
  display_order: smallint
}

"""
input type for inserting data into table "topics_assignments"
"""
input topics_assignments_insert_input {
  assignment: assignments_obj_rel_insert_input
  assignment_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  resource_path: String
  topic_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type topics_assignments_max_fields {
  assignment_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  resource_path: String
  topic_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "topics_assignments"
"""
input topics_assignments_max_order_by {
  assignment_id: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  resource_path: order_by
  topic_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type topics_assignments_min_fields {
  assignment_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  resource_path: String
  topic_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "topics_assignments"
"""
input topics_assignments_min_order_by {
  assignment_id: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  resource_path: order_by
  topic_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "topics_assignments"
"""
type topics_assignments_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [topics_assignments!]!
}

"""
input type for inserting object relation for remote table "topics_assignments"
"""
input topics_assignments_obj_rel_insert_input {
  data: topics_assignments_insert_input!
  on_conflict: topics_assignments_on_conflict
}

"""
on conflict condition type for table "topics_assignments"
"""
input topics_assignments_on_conflict {
  constraint: topics_assignments_constraint!
  update_columns: [topics_assignments_update_column!]!
  where: topics_assignments_bool_exp
}

"""
ordering options when selecting data from "topics_assignments"
"""
input topics_assignments_order_by {
  assignment: assignments_order_by
  assignment_id: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  resource_path: order_by
  topic_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "topics_assignments"
"""
input topics_assignments_pk_columns_input {
  assignment_id: String!
  topic_id: String!
}

"""
select columns of table "topics_assignments"
"""
enum topics_assignments_select_column {
  """column name"""
  assignment_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  resource_path

  """column name"""
  topic_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "topics_assignments"
"""
input topics_assignments_set_input {
  assignment_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  resource_path: String
  topic_id: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type topics_assignments_stddev_fields {
  display_order: Float
}

"""
order by stddev() on columns of table "topics_assignments"
"""
input topics_assignments_stddev_order_by {
  display_order: order_by
}

"""aggregate stddev_pop on columns"""
type topics_assignments_stddev_pop_fields {
  display_order: Float
}

"""
order by stddev_pop() on columns of table "topics_assignments"
"""
input topics_assignments_stddev_pop_order_by {
  display_order: order_by
}

"""aggregate stddev_samp on columns"""
type topics_assignments_stddev_samp_fields {
  display_order: Float
}

"""
order by stddev_samp() on columns of table "topics_assignments"
"""
input topics_assignments_stddev_samp_order_by {
  display_order: order_by
}

"""aggregate sum on columns"""
type topics_assignments_sum_fields {
  display_order: smallint
}

"""
order by sum() on columns of table "topics_assignments"
"""
input topics_assignments_sum_order_by {
  display_order: order_by
}

"""
update columns of table "topics_assignments"
"""
enum topics_assignments_update_column {
  """column name"""
  assignment_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  resource_path

  """column name"""
  topic_id

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type topics_assignments_var_pop_fields {
  display_order: Float
}

"""
order by var_pop() on columns of table "topics_assignments"
"""
input topics_assignments_var_pop_order_by {
  display_order: order_by
}

"""aggregate var_samp on columns"""
type topics_assignments_var_samp_fields {
  display_order: Float
}

"""
order by var_samp() on columns of table "topics_assignments"
"""
input topics_assignments_var_samp_order_by {
  display_order: order_by
}

"""aggregate variance on columns"""
type topics_assignments_variance_fields {
  display_order: Float
}

"""
order by variance() on columns of table "topics_assignments"
"""
input topics_assignments_variance_order_by {
  display_order: order_by
}

"""aggregate avg on columns"""
type topics_avg_fields {
  display_order: Float
  grade: Float
  lo_display_order_counter: Float
  school_id: Float
  total_los: Float
}

"""
order by avg() on columns of table "topics"
"""
input topics_avg_order_by {
  display_order: order_by
  grade: order_by
  lo_display_order_counter: order_by
  school_id: order_by
  total_los: order_by
}

"""
Boolean expression to filter rows from the table "topics". All fields are combined with a logical 'AND'.
"""
input topics_bool_exp {
  _and: [topics_bool_exp]
  _not: topics_bool_exp
  _or: [topics_bool_exp]
  attachment_names: _text_comparison_exp
  attachment_urls: _text_comparison_exp
  chapter_id: String_comparison_exp
  copied_topic_id: String_comparison_exp
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  display_order: smallint_comparison_exp
  essay_required: Boolean_comparison_exp
  grade: smallint_comparison_exp
  icon_url: String_comparison_exp
  instruction: String_comparison_exp
  learning_objectives: learning_objectives_bool_exp
  lo_display_order_counter: Int_comparison_exp
  name: String_comparison_exp
  published_at: timestamptz_comparison_exp
  resource_path: String_comparison_exp
  school_id: Int_comparison_exp
  status: String_comparison_exp
  subject: String_comparison_exp
  topic_id: String_comparison_exp
  topic_type: String_comparison_exp
  total_los: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "topics"
"""
enum topics_constraint {
  """unique or primary key constraint"""
  topics_pk
}

"""
input type for incrementing integer column in table "topics"
"""
input topics_inc_input {
  display_order: smallint
  grade: smallint
  lo_display_order_counter: Int
  school_id: Int
  total_los: Int
}

"""
input type for inserting data into table "topics"
"""
input topics_insert_input {
  attachment_names: _text
  attachment_urls: _text
  chapter_id: String
  copied_topic_id: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  essay_required: Boolean
  grade: smallint
  icon_url: String
  instruction: String
  learning_objectives: learning_objectives_arr_rel_insert_input
  lo_display_order_counter: Int
  name: String
  published_at: timestamptz
  resource_path: String
  school_id: Int
  status: String
  subject: String
  topic_id: String
  topic_type: String
  total_los: Int
  updated_at: timestamptz
}

"""
columns and relationships of "topics_learning_objectives"
"""
type topics_learning_objectives {
  created_at: timestamptz!
  deleted_at: timestamptz
  display_order: smallint

  """An object relationship"""
  learning_objective: learning_objectives
  lo_id: String!
  resource_path: String!
  topic_id: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "topics_learning_objectives"
"""
type topics_learning_objectives_aggregate {
  aggregate: topics_learning_objectives_aggregate_fields
  nodes: [topics_learning_objectives!]!
}

"""
aggregate fields of "topics_learning_objectives"
"""
type topics_learning_objectives_aggregate_fields {
  avg: topics_learning_objectives_avg_fields
  count(columns: [topics_learning_objectives_select_column!], distinct: Boolean): Int
  max: topics_learning_objectives_max_fields
  min: topics_learning_objectives_min_fields
  stddev: topics_learning_objectives_stddev_fields
  stddev_pop: topics_learning_objectives_stddev_pop_fields
  stddev_samp: topics_learning_objectives_stddev_samp_fields
  sum: topics_learning_objectives_sum_fields
  var_pop: topics_learning_objectives_var_pop_fields
  var_samp: topics_learning_objectives_var_samp_fields
  variance: topics_learning_objectives_variance_fields
}

"""
order by aggregate values of table "topics_learning_objectives"
"""
input topics_learning_objectives_aggregate_order_by {
  avg: topics_learning_objectives_avg_order_by
  count: order_by
  max: topics_learning_objectives_max_order_by
  min: topics_learning_objectives_min_order_by
  stddev: topics_learning_objectives_stddev_order_by
  stddev_pop: topics_learning_objectives_stddev_pop_order_by
  stddev_samp: topics_learning_objectives_stddev_samp_order_by
  sum: topics_learning_objectives_sum_order_by
  var_pop: topics_learning_objectives_var_pop_order_by
  var_samp: topics_learning_objectives_var_samp_order_by
  variance: topics_learning_objectives_variance_order_by
}

"""
input type for inserting array relation for remote table "topics_learning_objectives"
"""
input topics_learning_objectives_arr_rel_insert_input {
  data: [topics_learning_objectives_insert_input!]!
  on_conflict: topics_learning_objectives_on_conflict
}

"""aggregate avg on columns"""
type topics_learning_objectives_avg_fields {
  display_order: Float
}

"""
order by avg() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_avg_order_by {
  display_order: order_by
}

"""
Boolean expression to filter rows from the table "topics_learning_objectives". All fields are combined with a logical 'AND'.
"""
input topics_learning_objectives_bool_exp {
  _and: [topics_learning_objectives_bool_exp]
  _not: topics_learning_objectives_bool_exp
  _or: [topics_learning_objectives_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  display_order: smallint_comparison_exp
  learning_objective: learning_objectives_bool_exp
  lo_id: String_comparison_exp
  resource_path: String_comparison_exp
  topic_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "topics_learning_objectives"
"""
enum topics_learning_objectives_constraint {
  """unique or primary key constraint"""
  topics_learning_objectives_pk
}

"""
input type for incrementing integer column in table "topics_learning_objectives"
"""
input topics_learning_objectives_inc_input {
  display_order: smallint
}

"""
input type for inserting data into table "topics_learning_objectives"
"""
input topics_learning_objectives_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  learning_objective: learning_objectives_obj_rel_insert_input
  lo_id: String
  resource_path: String
  topic_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type topics_learning_objectives_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  lo_id: String
  resource_path: String
  topic_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_max_order_by {
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  lo_id: order_by
  resource_path: order_by
  topic_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type topics_learning_objectives_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  lo_id: String
  resource_path: String
  topic_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_min_order_by {
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  lo_id: order_by
  resource_path: order_by
  topic_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "topics_learning_objectives"
"""
type topics_learning_objectives_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [topics_learning_objectives!]!
}

"""
input type for inserting object relation for remote table "topics_learning_objectives"
"""
input topics_learning_objectives_obj_rel_insert_input {
  data: topics_learning_objectives_insert_input!
  on_conflict: topics_learning_objectives_on_conflict
}

"""
on conflict condition type for table "topics_learning_objectives"
"""
input topics_learning_objectives_on_conflict {
  constraint: topics_learning_objectives_constraint!
  update_columns: [topics_learning_objectives_update_column!]!
  where: topics_learning_objectives_bool_exp
}

"""
ordering options when selecting data from "topics_learning_objectives"
"""
input topics_learning_objectives_order_by {
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  learning_objective: learning_objectives_order_by
  lo_id: order_by
  resource_path: order_by
  topic_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "topics_learning_objectives"
"""
input topics_learning_objectives_pk_columns_input {
  lo_id: String!
  topic_id: String!
}

"""
select columns of table "topics_learning_objectives"
"""
enum topics_learning_objectives_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  lo_id

  """column name"""
  resource_path

  """column name"""
  topic_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "topics_learning_objectives"
"""
input topics_learning_objectives_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  lo_id: String
  resource_path: String
  topic_id: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type topics_learning_objectives_stddev_fields {
  display_order: Float
}

"""
order by stddev() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_stddev_order_by {
  display_order: order_by
}

"""aggregate stddev_pop on columns"""
type topics_learning_objectives_stddev_pop_fields {
  display_order: Float
}

"""
order by stddev_pop() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_stddev_pop_order_by {
  display_order: order_by
}

"""aggregate stddev_samp on columns"""
type topics_learning_objectives_stddev_samp_fields {
  display_order: Float
}

"""
order by stddev_samp() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_stddev_samp_order_by {
  display_order: order_by
}

"""aggregate sum on columns"""
type topics_learning_objectives_sum_fields {
  display_order: smallint
}

"""
order by sum() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_sum_order_by {
  display_order: order_by
}

"""
update columns of table "topics_learning_objectives"
"""
enum topics_learning_objectives_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  lo_id

  """column name"""
  resource_path

  """column name"""
  topic_id

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type topics_learning_objectives_var_pop_fields {
  display_order: Float
}

"""
order by var_pop() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_var_pop_order_by {
  display_order: order_by
}

"""aggregate var_samp on columns"""
type topics_learning_objectives_var_samp_fields {
  display_order: Float
}

"""
order by var_samp() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_var_samp_order_by {
  display_order: order_by
}

"""aggregate variance on columns"""
type topics_learning_objectives_variance_fields {
  display_order: Float
}

"""
order by variance() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_variance_order_by {
  display_order: order_by
}

"""aggregate max on columns"""
type topics_max_fields {
  chapter_id: String
  copied_topic_id: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  icon_url: String
  instruction: String
  lo_display_order_counter: Int
  name: String
  published_at: timestamptz
  resource_path: String
  school_id: Int
  status: String
  subject: String
  topic_id: String
  topic_type: String
  total_los: Int
  updated_at: timestamptz
}

"""
order by max() on columns of table "topics"
"""
input topics_max_order_by {
  chapter_id: order_by
  copied_topic_id: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  grade: order_by
  icon_url: order_by
  instruction: order_by
  lo_display_order_counter: order_by
  name: order_by
  published_at: order_by
  resource_path: order_by
  school_id: order_by
  status: order_by
  subject: order_by
  topic_id: order_by
  topic_type: order_by
  total_los: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type topics_min_fields {
  chapter_id: String
  copied_topic_id: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  icon_url: String
  instruction: String
  lo_display_order_counter: Int
  name: String
  published_at: timestamptz
  resource_path: String
  school_id: Int
  status: String
  subject: String
  topic_id: String
  topic_type: String
  total_los: Int
  updated_at: timestamptz
}

"""
order by min() on columns of table "topics"
"""
input topics_min_order_by {
  chapter_id: order_by
  copied_topic_id: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  grade: order_by
  icon_url: order_by
  instruction: order_by
  lo_display_order_counter: order_by
  name: order_by
  published_at: order_by
  resource_path: order_by
  school_id: order_by
  status: order_by
  subject: order_by
  topic_id: order_by
  topic_type: order_by
  total_los: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "topics"
"""
type topics_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [topics!]!
}

"""
input type for inserting object relation for remote table "topics"
"""
input topics_obj_rel_insert_input {
  data: topics_insert_input!
  on_conflict: topics_on_conflict
}

"""
on conflict condition type for table "topics"
"""
input topics_on_conflict {
  constraint: topics_constraint!
  update_columns: [topics_update_column!]!
  where: topics_bool_exp
}

"""
ordering options when selecting data from "topics"
"""
input topics_order_by {
  attachment_names: order_by
  attachment_urls: order_by
  chapter_id: order_by
  copied_topic_id: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  essay_required: order_by
  grade: order_by
  icon_url: order_by
  instruction: order_by
  learning_objectives_aggregate: learning_objectives_aggregate_order_by
  lo_display_order_counter: order_by
  name: order_by
  published_at: order_by
  resource_path: order_by
  school_id: order_by
  status: order_by
  subject: order_by
  topic_id: order_by
  topic_type: order_by
  total_los: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "topics"
"""
input topics_pk_columns_input {
  topic_id: String!
}

"""
select columns of table "topics"
"""
enum topics_select_column {
  """column name"""
  attachment_names

  """column name"""
  attachment_urls

  """column name"""
  chapter_id

  """column name"""
  copied_topic_id

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  essay_required

  """column name"""
  grade

  """column name"""
  icon_url

  """column name"""
  instruction

  """column name"""
  lo_display_order_counter

  """column name"""
  name

  """column name"""
  published_at

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  status

  """column name"""
  subject

  """column name"""
  topic_id

  """column name"""
  topic_type

  """column name"""
  total_los

  """column name"""
  updated_at
}

"""
input type for updating data in table "topics"
"""
input topics_set_input {
  attachment_names: _text
  attachment_urls: _text
  chapter_id: String
  copied_topic_id: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  essay_required: Boolean
  grade: smallint
  icon_url: String
  instruction: String
  lo_display_order_counter: Int
  name: String
  published_at: timestamptz
  resource_path: String
  school_id: Int
  status: String
  subject: String
  topic_id: String
  topic_type: String
  total_los: Int
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type topics_stddev_fields {
  display_order: Float
  grade: Float
  lo_display_order_counter: Float
  school_id: Float
  total_los: Float
}

"""
order by stddev() on columns of table "topics"
"""
input topics_stddev_order_by {
  display_order: order_by
  grade: order_by
  lo_display_order_counter: order_by
  school_id: order_by
  total_los: order_by
}

"""aggregate stddev_pop on columns"""
type topics_stddev_pop_fields {
  display_order: Float
  grade: Float
  lo_display_order_counter: Float
  school_id: Float
  total_los: Float
}

"""
order by stddev_pop() on columns of table "topics"
"""
input topics_stddev_pop_order_by {
  display_order: order_by
  grade: order_by
  lo_display_order_counter: order_by
  school_id: order_by
  total_los: order_by
}

"""aggregate stddev_samp on columns"""
type topics_stddev_samp_fields {
  display_order: Float
  grade: Float
  lo_display_order_counter: Float
  school_id: Float
  total_los: Float
}

"""
order by stddev_samp() on columns of table "topics"
"""
input topics_stddev_samp_order_by {
  display_order: order_by
  grade: order_by
  lo_display_order_counter: order_by
  school_id: order_by
  total_los: order_by
}

"""aggregate sum on columns"""
type topics_sum_fields {
  display_order: smallint
  grade: smallint
  lo_display_order_counter: Int
  school_id: Int
  total_los: Int
}

"""
order by sum() on columns of table "topics"
"""
input topics_sum_order_by {
  display_order: order_by
  grade: order_by
  lo_display_order_counter: order_by
  school_id: order_by
  total_los: order_by
}

"""
update columns of table "topics"
"""
enum topics_update_column {
  """column name"""
  attachment_names

  """column name"""
  attachment_urls

  """column name"""
  chapter_id

  """column name"""
  copied_topic_id

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  essay_required

  """column name"""
  grade

  """column name"""
  icon_url

  """column name"""
  instruction

  """column name"""
  lo_display_order_counter

  """column name"""
  name

  """column name"""
  published_at

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  status

  """column name"""
  subject

  """column name"""
  topic_id

  """column name"""
  topic_type

  """column name"""
  total_los

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type topics_var_pop_fields {
  display_order: Float
  grade: Float
  lo_display_order_counter: Float
  school_id: Float
  total_los: Float
}

"""
order by var_pop() on columns of table "topics"
"""
input topics_var_pop_order_by {
  display_order: order_by
  grade: order_by
  lo_display_order_counter: order_by
  school_id: order_by
  total_los: order_by
}

"""aggregate var_samp on columns"""
type topics_var_samp_fields {
  display_order: Float
  grade: Float
  lo_display_order_counter: Float
  school_id: Float
  total_los: Float
}

"""
order by var_samp() on columns of table "topics"
"""
input topics_var_samp_order_by {
  display_order: order_by
  grade: order_by
  lo_display_order_counter: order_by
  school_id: order_by
  total_los: order_by
}

"""aggregate variance on columns"""
type topics_variance_fields {
  display_order: Float
  grade: Float
  lo_display_order_counter: Float
  school_id: Float
  total_los: Float
}

"""
order by variance() on columns of table "topics"
"""
input topics_variance_order_by {
  display_order: order_by
  grade: order_by
  lo_display_order_counter: order_by
  school_id: order_by
  total_los: order_by
}
