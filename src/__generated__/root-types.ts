export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  _int2: any;
  _int4: any;
  _text: any;
  bigint: any;
  date: any;
  json: any;
  jsonb: any;
  numeric: any;
  point: any;
  smallint: any;
  timestamptz: any;
};

/** expression to compare columns of type Boolean. All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
  _eq?: Maybe<Scalars['Boolean']>;
  _gt?: Maybe<Scalars['Boolean']>;
  _gte?: Maybe<Scalars['Boolean']>;
  _in?: Maybe<Array<Scalars['Boolean']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['Boolean']>;
  _lte?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<Scalars['Boolean']>;
  _nin?: Maybe<Array<Scalars['Boolean']>>;
};

/** expression to compare columns of type Float. All fields are combined with logical 'AND'. */
export type Float_Comparison_Exp = {
  _eq?: Maybe<Scalars['Float']>;
  _gt?: Maybe<Scalars['Float']>;
  _gte?: Maybe<Scalars['Float']>;
  _in?: Maybe<Array<Scalars['Float']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['Float']>;
  _lte?: Maybe<Scalars['Float']>;
  _neq?: Maybe<Scalars['Float']>;
  _nin?: Maybe<Array<Scalars['Float']>>;
};

/** expression to compare columns of type Int. All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
  _eq?: Maybe<Scalars['Int']>;
  _gt?: Maybe<Scalars['Int']>;
  _gte?: Maybe<Scalars['Int']>;
  _in?: Maybe<Array<Scalars['Int']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['Int']>;
  _lte?: Maybe<Scalars['Int']>;
  _neq?: Maybe<Scalars['Int']>;
  _nin?: Maybe<Array<Scalars['Int']>>;
};

/** expression to compare columns of type String. All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
  _eq?: Maybe<Scalars['String']>;
  _gt?: Maybe<Scalars['String']>;
  _gte?: Maybe<Scalars['String']>;
  _ilike?: Maybe<Scalars['String']>;
  _in?: Maybe<Array<Scalars['String']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _like?: Maybe<Scalars['String']>;
  _lt?: Maybe<Scalars['String']>;
  _lte?: Maybe<Scalars['String']>;
  _neq?: Maybe<Scalars['String']>;
  _nilike?: Maybe<Scalars['String']>;
  _nin?: Maybe<Array<Scalars['String']>>;
  _nlike?: Maybe<Scalars['String']>;
  _nsimilar?: Maybe<Scalars['String']>;
  _similar?: Maybe<Scalars['String']>;
};


/** expression to compare columns of type _int2. All fields are combined with logical 'AND'. */
export type _Int2_Comparison_Exp = {
  _eq?: Maybe<Scalars['_int2']>;
  _gt?: Maybe<Scalars['_int2']>;
  _gte?: Maybe<Scalars['_int2']>;
  _in?: Maybe<Array<Scalars['_int2']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['_int2']>;
  _lte?: Maybe<Scalars['_int2']>;
  _neq?: Maybe<Scalars['_int2']>;
  _nin?: Maybe<Array<Scalars['_int2']>>;
};


/** expression to compare columns of type _int4. All fields are combined with logical 'AND'. */
export type _Int4_Comparison_Exp = {
  _eq?: Maybe<Scalars['_int4']>;
  _gt?: Maybe<Scalars['_int4']>;
  _gte?: Maybe<Scalars['_int4']>;
  _in?: Maybe<Array<Scalars['_int4']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['_int4']>;
  _lte?: Maybe<Scalars['_int4']>;
  _neq?: Maybe<Scalars['_int4']>;
  _nin?: Maybe<Array<Scalars['_int4']>>;
};


/** expression to compare columns of type _text. All fields are combined with logical 'AND'. */
export type _Text_Comparison_Exp = {
  _eq?: Maybe<Scalars['_text']>;
  _gt?: Maybe<Scalars['_text']>;
  _gte?: Maybe<Scalars['_text']>;
  _in?: Maybe<Array<Scalars['_text']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['_text']>;
  _lte?: Maybe<Scalars['_text']>;
  _neq?: Maybe<Scalars['_text']>;
  _nin?: Maybe<Array<Scalars['_text']>>;
};

/** columns and relationships of "academic_years" */
export type Academic_Years = {
  academic_year_id: Scalars['String'];
  /** An array relationship */
  courses_academic_years: Array<Courses_Academic_Years>;
  /** An aggregated array relationship */
  courses_academic_years_aggregate: Courses_Academic_Years_Aggregate;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_year_date: Scalars['timestamptz'];
  name: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  school_id: Scalars['Int'];
  start_year_date: Scalars['timestamptz'];
  status: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "academic_years" */
export type Academic_YearsCourses_Academic_YearsArgs = {
  distinct_on?: Maybe<Array<Courses_Academic_Years_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Academic_Years_Order_By>>;
  where?: Maybe<Courses_Academic_Years_Bool_Exp>;
};


/** columns and relationships of "academic_years" */
export type Academic_YearsCourses_Academic_Years_AggregateArgs = {
  distinct_on?: Maybe<Array<Courses_Academic_Years_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Academic_Years_Order_By>>;
  where?: Maybe<Courses_Academic_Years_Bool_Exp>;
};

/** aggregated selection of "academic_years" */
export type Academic_Years_Aggregate = {
  aggregate?: Maybe<Academic_Years_Aggregate_Fields>;
  nodes: Array<Academic_Years>;
};

/** aggregate fields of "academic_years" */
export type Academic_Years_Aggregate_Fields = {
  avg?: Maybe<Academic_Years_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Academic_Years_Max_Fields>;
  min?: Maybe<Academic_Years_Min_Fields>;
  stddev?: Maybe<Academic_Years_Stddev_Fields>;
  stddev_pop?: Maybe<Academic_Years_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Academic_Years_Stddev_Samp_Fields>;
  sum?: Maybe<Academic_Years_Sum_Fields>;
  var_pop?: Maybe<Academic_Years_Var_Pop_Fields>;
  var_samp?: Maybe<Academic_Years_Var_Samp_Fields>;
  variance?: Maybe<Academic_Years_Variance_Fields>;
};


/** aggregate fields of "academic_years" */
export type Academic_Years_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Academic_Years_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "academic_years" */
export type Academic_Years_Aggregate_Order_By = {
  avg?: Maybe<Academic_Years_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Academic_Years_Max_Order_By>;
  min?: Maybe<Academic_Years_Min_Order_By>;
  stddev?: Maybe<Academic_Years_Stddev_Order_By>;
  stddev_pop?: Maybe<Academic_Years_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Academic_Years_Stddev_Samp_Order_By>;
  sum?: Maybe<Academic_Years_Sum_Order_By>;
  var_pop?: Maybe<Academic_Years_Var_Pop_Order_By>;
  var_samp?: Maybe<Academic_Years_Var_Samp_Order_By>;
  variance?: Maybe<Academic_Years_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "academic_years" */
export type Academic_Years_Arr_Rel_Insert_Input = {
  data: Array<Academic_Years_Insert_Input>;
  on_conflict?: Maybe<Academic_Years_On_Conflict>;
};

/** aggregate avg on columns */
export type Academic_Years_Avg_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "academic_years" */
export type Academic_Years_Avg_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "academic_years". All fields are combined with a logical 'AND'. */
export type Academic_Years_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Academic_Years_Bool_Exp>>>;
  _not?: Maybe<Academic_Years_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Academic_Years_Bool_Exp>>>;
  academic_year_id?: Maybe<String_Comparison_Exp>;
  courses_academic_years?: Maybe<Courses_Academic_Years_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  end_year_date?: Maybe<Timestamptz_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  school_id?: Maybe<Int_Comparison_Exp>;
  start_year_date?: Maybe<Timestamptz_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "academic_years" */
export enum Academic_Years_Constraint {
  /** unique or primary key constraint */
  PkAcademicYears = 'pk__academic_years'
}

/** input type for incrementing integer column in table "academic_years" */
export type Academic_Years_Inc_Input = {
  school_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "academic_years" */
export type Academic_Years_Insert_Input = {
  academic_year_id?: Maybe<Scalars['String']>;
  courses_academic_years?: Maybe<Courses_Academic_Years_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_year_date?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  start_year_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Academic_Years_Max_Fields = {
  academic_year_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_year_date?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  start_year_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "academic_years" */
export type Academic_Years_Max_Order_By = {
  academic_year_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_year_date?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  start_year_date?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Academic_Years_Min_Fields = {
  academic_year_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_year_date?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  start_year_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "academic_years" */
export type Academic_Years_Min_Order_By = {
  academic_year_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_year_date?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  start_year_date?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "academic_years" */
export type Academic_Years_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Academic_Years>;
};

/** input type for inserting object relation for remote table "academic_years" */
export type Academic_Years_Obj_Rel_Insert_Input = {
  data: Academic_Years_Insert_Input;
  on_conflict?: Maybe<Academic_Years_On_Conflict>;
};

/** on conflict condition type for table "academic_years" */
export type Academic_Years_On_Conflict = {
  constraint: Academic_Years_Constraint;
  update_columns: Array<Academic_Years_Update_Column>;
  where?: Maybe<Academic_Years_Bool_Exp>;
};

/** ordering options when selecting data from "academic_years" */
export type Academic_Years_Order_By = {
  academic_year_id?: Maybe<Order_By>;
  courses_academic_years_aggregate?: Maybe<Courses_Academic_Years_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_year_date?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  start_year_date?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "academic_years" */
export type Academic_Years_Pk_Columns_Input = {
  academic_year_id: Scalars['String'];
};

/** select columns of table "academic_years" */
export enum Academic_Years_Select_Column {
  /** column name */
  AcademicYearId = 'academic_year_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndYearDate = 'end_year_date',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  StartYearDate = 'start_year_date',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "academic_years" */
export type Academic_Years_Set_Input = {
  academic_year_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_year_date?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  start_year_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Academic_Years_Stddev_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "academic_years" */
export type Academic_Years_Stddev_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Academic_Years_Stddev_Pop_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "academic_years" */
export type Academic_Years_Stddev_Pop_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Academic_Years_Stddev_Samp_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "academic_years" */
export type Academic_Years_Stddev_Samp_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Academic_Years_Sum_Fields = {
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "academic_years" */
export type Academic_Years_Sum_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** update columns of table "academic_years" */
export enum Academic_Years_Update_Column {
  /** column name */
  AcademicYearId = 'academic_year_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndYearDate = 'end_year_date',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  StartYearDate = 'start_year_date',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Academic_Years_Var_Pop_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "academic_years" */
export type Academic_Years_Var_Pop_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Academic_Years_Var_Samp_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "academic_years" */
export type Academic_Years_Var_Samp_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Academic_Years_Variance_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "academic_years" */
export type Academic_Years_Variance_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** columns and relationships of "activity_logs" */
export type Activity_Logs = {
  action_type: Scalars['String'];
  activity_log_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  payload?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  user_id: Scalars['String'];
};


/** columns and relationships of "activity_logs" */
export type Activity_LogsPayloadArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "activity_logs" */
export type Activity_Logs_Aggregate = {
  aggregate?: Maybe<Activity_Logs_Aggregate_Fields>;
  nodes: Array<Activity_Logs>;
};

/** aggregate fields of "activity_logs" */
export type Activity_Logs_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Activity_Logs_Max_Fields>;
  min?: Maybe<Activity_Logs_Min_Fields>;
};


/** aggregate fields of "activity_logs" */
export type Activity_Logs_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Activity_Logs_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "activity_logs" */
export type Activity_Logs_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Activity_Logs_Max_Order_By>;
  min?: Maybe<Activity_Logs_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Activity_Logs_Append_Input = {
  payload?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "activity_logs" */
export type Activity_Logs_Arr_Rel_Insert_Input = {
  data: Array<Activity_Logs_Insert_Input>;
  on_conflict?: Maybe<Activity_Logs_On_Conflict>;
};

/** Boolean expression to filter rows from the table "activity_logs". All fields are combined with a logical 'AND'. */
export type Activity_Logs_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Activity_Logs_Bool_Exp>>>;
  _not?: Maybe<Activity_Logs_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Activity_Logs_Bool_Exp>>>;
  action_type?: Maybe<String_Comparison_Exp>;
  activity_log_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  payload?: Maybe<Jsonb_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user_id?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "activity_logs" */
export enum Activity_Logs_Constraint {
  /** unique or primary key constraint */
  ActivityLogsPk = 'activity_logs_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Activity_Logs_Delete_At_Path_Input = {
  payload?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Activity_Logs_Delete_Elem_Input = {
  payload?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Activity_Logs_Delete_Key_Input = {
  payload?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "activity_logs" */
export type Activity_Logs_Insert_Input = {
  action_type?: Maybe<Scalars['String']>;
  activity_log_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  payload?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Activity_Logs_Max_Fields = {
  action_type?: Maybe<Scalars['String']>;
  activity_log_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "activity_logs" */
export type Activity_Logs_Max_Order_By = {
  action_type?: Maybe<Order_By>;
  activity_log_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Activity_Logs_Min_Fields = {
  action_type?: Maybe<Scalars['String']>;
  activity_log_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "activity_logs" */
export type Activity_Logs_Min_Order_By = {
  action_type?: Maybe<Order_By>;
  activity_log_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "activity_logs" */
export type Activity_Logs_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Activity_Logs>;
};

/** input type for inserting object relation for remote table "activity_logs" */
export type Activity_Logs_Obj_Rel_Insert_Input = {
  data: Activity_Logs_Insert_Input;
  on_conflict?: Maybe<Activity_Logs_On_Conflict>;
};

/** on conflict condition type for table "activity_logs" */
export type Activity_Logs_On_Conflict = {
  constraint: Activity_Logs_Constraint;
  update_columns: Array<Activity_Logs_Update_Column>;
  where?: Maybe<Activity_Logs_Bool_Exp>;
};

/** ordering options when selecting data from "activity_logs" */
export type Activity_Logs_Order_By = {
  action_type?: Maybe<Order_By>;
  activity_log_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  payload?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: "activity_logs" */
export type Activity_Logs_Pk_Columns_Input = {
  activity_log_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Activity_Logs_Prepend_Input = {
  payload?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "activity_logs" */
export enum Activity_Logs_Select_Column {
  /** column name */
  ActionType = 'action_type',
  /** column name */
  ActivityLogId = 'activity_log_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Payload = 'payload',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "activity_logs" */
export type Activity_Logs_Set_Input = {
  action_type?: Maybe<Scalars['String']>;
  activity_log_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  payload?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** update columns of table "activity_logs" */
export enum Activity_Logs_Update_Column {
  /** column name */
  ActionType = 'action_type',
  /** column name */
  ActivityLogId = 'activity_log_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Payload = 'payload',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** columns and relationships of "apple_users" */
export type Apple_Users = {
  apple_user_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['String'];
};

/** aggregated selection of "apple_users" */
export type Apple_Users_Aggregate = {
  aggregate?: Maybe<Apple_Users_Aggregate_Fields>;
  nodes: Array<Apple_Users>;
};

/** aggregate fields of "apple_users" */
export type Apple_Users_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Apple_Users_Max_Fields>;
  min?: Maybe<Apple_Users_Min_Fields>;
};


/** aggregate fields of "apple_users" */
export type Apple_Users_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Apple_Users_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "apple_users" */
export type Apple_Users_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Apple_Users_Max_Order_By>;
  min?: Maybe<Apple_Users_Min_Order_By>;
};

/** input type for inserting array relation for remote table "apple_users" */
export type Apple_Users_Arr_Rel_Insert_Input = {
  data: Array<Apple_Users_Insert_Input>;
  on_conflict?: Maybe<Apple_Users_On_Conflict>;
};

/** Boolean expression to filter rows from the table "apple_users". All fields are combined with a logical 'AND'. */
export type Apple_Users_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Apple_Users_Bool_Exp>>>;
  _not?: Maybe<Apple_Users_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Apple_Users_Bool_Exp>>>;
  apple_user_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
  user_id?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "apple_users" */
export enum Apple_Users_Constraint {
  /** unique or primary key constraint */
  PkAppleUsers = 'pk__apple_users'
}

/** input type for inserting data into table "apple_users" */
export type Apple_Users_Insert_Input = {
  apple_user_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Apple_Users_Max_Fields = {
  apple_user_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "apple_users" */
export type Apple_Users_Max_Order_By = {
  apple_user_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Apple_Users_Min_Fields = {
  apple_user_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "apple_users" */
export type Apple_Users_Min_Order_By = {
  apple_user_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "apple_users" */
export type Apple_Users_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Apple_Users>;
};

/** input type for inserting object relation for remote table "apple_users" */
export type Apple_Users_Obj_Rel_Insert_Input = {
  data: Apple_Users_Insert_Input;
  on_conflict?: Maybe<Apple_Users_On_Conflict>;
};

/** on conflict condition type for table "apple_users" */
export type Apple_Users_On_Conflict = {
  constraint: Apple_Users_Constraint;
  update_columns: Array<Apple_Users_Update_Column>;
  where?: Maybe<Apple_Users_Bool_Exp>;
};

/** ordering options when selecting data from "apple_users" */
export type Apple_Users_Order_By = {
  apple_user_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: "apple_users" */
export type Apple_Users_Pk_Columns_Input = {
  apple_user_id: Scalars['String'];
};

/** select columns of table "apple_users" */
export enum Apple_Users_Select_Column {
  /** column name */
  AppleUserId = 'apple_user_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "apple_users" */
export type Apple_Users_Set_Input = {
  apple_user_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** update columns of table "apple_users" */
export enum Apple_Users_Update_Column {
  /** column name */
  AppleUserId = 'apple_user_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** columns and relationships of "assign_study_plan_tasks" */
export type Assign_Study_Plan_Tasks = {
  course_id?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  error_detail?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  study_plan_ids: Scalars['_text'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "assign_study_plan_tasks" */
export type Assign_Study_Plan_Tasks_Aggregate = {
  aggregate?: Maybe<Assign_Study_Plan_Tasks_Aggregate_Fields>;
  nodes: Array<Assign_Study_Plan_Tasks>;
};

/** aggregate fields of "assign_study_plan_tasks" */
export type Assign_Study_Plan_Tasks_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Assign_Study_Plan_Tasks_Max_Fields>;
  min?: Maybe<Assign_Study_Plan_Tasks_Min_Fields>;
};


/** aggregate fields of "assign_study_plan_tasks" */
export type Assign_Study_Plan_Tasks_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Assign_Study_Plan_Tasks_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "assign_study_plan_tasks" */
export type Assign_Study_Plan_Tasks_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Assign_Study_Plan_Tasks_Max_Order_By>;
  min?: Maybe<Assign_Study_Plan_Tasks_Min_Order_By>;
};

/** input type for inserting array relation for remote table "assign_study_plan_tasks" */
export type Assign_Study_Plan_Tasks_Arr_Rel_Insert_Input = {
  data: Array<Assign_Study_Plan_Tasks_Insert_Input>;
  on_conflict?: Maybe<Assign_Study_Plan_Tasks_On_Conflict>;
};

/** Boolean expression to filter rows from the table "assign_study_plan_tasks". All fields are combined with a logical 'AND'. */
export type Assign_Study_Plan_Tasks_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Assign_Study_Plan_Tasks_Bool_Exp>>>;
  _not?: Maybe<Assign_Study_Plan_Tasks_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Assign_Study_Plan_Tasks_Bool_Exp>>>;
  course_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  error_detail?: Maybe<String_Comparison_Exp>;
  id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  study_plan_ids?: Maybe<_Text_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "assign_study_plan_tasks" */
export enum Assign_Study_Plan_Tasks_Constraint {
  /** unique or primary key constraint */
  AssignStudyPlanTasksPk = 'assign_study_plan_tasks_pk'
}

/** input type for inserting data into table "assign_study_plan_tasks" */
export type Assign_Study_Plan_Tasks_Insert_Input = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  error_detail?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  study_plan_ids?: Maybe<Scalars['_text']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Assign_Study_Plan_Tasks_Max_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  error_detail?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "assign_study_plan_tasks" */
export type Assign_Study_Plan_Tasks_Max_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  error_detail?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Assign_Study_Plan_Tasks_Min_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  error_detail?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "assign_study_plan_tasks" */
export type Assign_Study_Plan_Tasks_Min_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  error_detail?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "assign_study_plan_tasks" */
export type Assign_Study_Plan_Tasks_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Assign_Study_Plan_Tasks>;
};

/** input type for inserting object relation for remote table "assign_study_plan_tasks" */
export type Assign_Study_Plan_Tasks_Obj_Rel_Insert_Input = {
  data: Assign_Study_Plan_Tasks_Insert_Input;
  on_conflict?: Maybe<Assign_Study_Plan_Tasks_On_Conflict>;
};

/** on conflict condition type for table "assign_study_plan_tasks" */
export type Assign_Study_Plan_Tasks_On_Conflict = {
  constraint: Assign_Study_Plan_Tasks_Constraint;
  update_columns: Array<Assign_Study_Plan_Tasks_Update_Column>;
  where?: Maybe<Assign_Study_Plan_Tasks_Bool_Exp>;
};

/** ordering options when selecting data from "assign_study_plan_tasks" */
export type Assign_Study_Plan_Tasks_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  error_detail?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  study_plan_ids?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "assign_study_plan_tasks" */
export type Assign_Study_Plan_Tasks_Pk_Columns_Input = {
  id: Scalars['String'];
};

/** select columns of table "assign_study_plan_tasks" */
export enum Assign_Study_Plan_Tasks_Select_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ErrorDetail = 'error_detail',
  /** column name */
  Id = 'id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudyPlanIds = 'study_plan_ids',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "assign_study_plan_tasks" */
export type Assign_Study_Plan_Tasks_Set_Input = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  error_detail?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  study_plan_ids?: Maybe<Scalars['_text']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "assign_study_plan_tasks" */
export enum Assign_Study_Plan_Tasks_Update_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ErrorDetail = 'error_detail',
  /** column name */
  Id = 'id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudyPlanIds = 'study_plan_ids',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "assignment_study_plan_items" */
export type Assignment_Study_Plan_Items = {
  /** An object relationship */
  assignment: Assignments;
  assignment_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  study_plan_item: Study_Plan_Items;
  study_plan_item_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "assignment_study_plan_items" */
export type Assignment_Study_Plan_Items_Aggregate = {
  aggregate?: Maybe<Assignment_Study_Plan_Items_Aggregate_Fields>;
  nodes: Array<Assignment_Study_Plan_Items>;
};

/** aggregate fields of "assignment_study_plan_items" */
export type Assignment_Study_Plan_Items_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Assignment_Study_Plan_Items_Max_Fields>;
  min?: Maybe<Assignment_Study_Plan_Items_Min_Fields>;
};


/** aggregate fields of "assignment_study_plan_items" */
export type Assignment_Study_Plan_Items_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Assignment_Study_Plan_Items_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "assignment_study_plan_items" */
export type Assignment_Study_Plan_Items_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Assignment_Study_Plan_Items_Max_Order_By>;
  min?: Maybe<Assignment_Study_Plan_Items_Min_Order_By>;
};

/** input type for inserting array relation for remote table "assignment_study_plan_items" */
export type Assignment_Study_Plan_Items_Arr_Rel_Insert_Input = {
  data: Array<Assignment_Study_Plan_Items_Insert_Input>;
  on_conflict?: Maybe<Assignment_Study_Plan_Items_On_Conflict>;
};

/** Boolean expression to filter rows from the table "assignment_study_plan_items". All fields are combined with a logical 'AND'. */
export type Assignment_Study_Plan_Items_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Assignment_Study_Plan_Items_Bool_Exp>>>;
  _not?: Maybe<Assignment_Study_Plan_Items_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Assignment_Study_Plan_Items_Bool_Exp>>>;
  assignment?: Maybe<Assignments_Bool_Exp>;
  assignment_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  study_plan_item?: Maybe<Study_Plan_Items_Bool_Exp>;
  study_plan_item_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "assignment_study_plan_items" */
export enum Assignment_Study_Plan_Items_Constraint {
  /** unique or primary key constraint */
  AssignmentStudyPlanItemsPk = 'assignment_study_plan_items_pk'
}

/** input type for inserting data into table "assignment_study_plan_items" */
export type Assignment_Study_Plan_Items_Insert_Input = {
  assignment?: Maybe<Assignments_Obj_Rel_Insert_Input>;
  assignment_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan_item?: Maybe<Study_Plan_Items_Obj_Rel_Insert_Input>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Assignment_Study_Plan_Items_Max_Fields = {
  assignment_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "assignment_study_plan_items" */
export type Assignment_Study_Plan_Items_Max_Order_By = {
  assignment_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Assignment_Study_Plan_Items_Min_Fields = {
  assignment_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "assignment_study_plan_items" */
export type Assignment_Study_Plan_Items_Min_Order_By = {
  assignment_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "assignment_study_plan_items" */
export type Assignment_Study_Plan_Items_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Assignment_Study_Plan_Items>;
};

/** input type for inserting object relation for remote table "assignment_study_plan_items" */
export type Assignment_Study_Plan_Items_Obj_Rel_Insert_Input = {
  data: Assignment_Study_Plan_Items_Insert_Input;
  on_conflict?: Maybe<Assignment_Study_Plan_Items_On_Conflict>;
};

/** on conflict condition type for table "assignment_study_plan_items" */
export type Assignment_Study_Plan_Items_On_Conflict = {
  constraint: Assignment_Study_Plan_Items_Constraint;
  update_columns: Array<Assignment_Study_Plan_Items_Update_Column>;
  where?: Maybe<Assignment_Study_Plan_Items_Bool_Exp>;
};

/** ordering options when selecting data from "assignment_study_plan_items" */
export type Assignment_Study_Plan_Items_Order_By = {
  assignment?: Maybe<Assignments_Order_By>;
  assignment_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  study_plan_item?: Maybe<Study_Plan_Items_Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "assignment_study_plan_items" */
export type Assignment_Study_Plan_Items_Pk_Columns_Input = {
  assignment_id: Scalars['String'];
  study_plan_item_id: Scalars['String'];
};

/** select columns of table "assignment_study_plan_items" */
export enum Assignment_Study_Plan_Items_Select_Column {
  /** column name */
  AssignmentId = 'assignment_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudyPlanItemId = 'study_plan_item_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "assignment_study_plan_items" */
export type Assignment_Study_Plan_Items_Set_Input = {
  assignment_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "assignment_study_plan_items" */
export enum Assignment_Study_Plan_Items_Update_Column {
  /** column name */
  AssignmentId = 'assignment_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudyPlanItemId = 'study_plan_item_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "assignments" */
export type Assignments = {
  assigned_by: Scalars['String'];
  assignment_id: Scalars['String'];
  /** An array relationship */
  assignment_study_plan_items: Array<Assignment_Study_Plan_Items>;
  /** An aggregated array relationship */
  assignment_study_plan_items_aggregate: Assignment_Study_Plan_Items_Aggregate;
  assignment_type?: Maybe<Scalars['String']>;
  attachment?: Maybe<Scalars['_text']>;
  check_list?: Maybe<Scalars['jsonb']>;
  class_id?: Maybe<Scalars['Int']>;
  content?: Maybe<Scalars['jsonb']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  end_date: Scalars['timestamptz'];
  instruction?: Maybe<Scalars['String']>;
  is_required_grade?: Maybe<Scalars['Boolean']>;
  max_grade?: Maybe<Scalars['Int']>;
  name: Scalars['String'];
  original_topic?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  settings?: Maybe<Scalars['jsonb']>;
  start_date: Scalars['timestamptz'];
  status?: Maybe<Scalars['String']>;
  /** An array relationship */
  student_assignments: Array<Student_Assignments>;
  /** An aggregated array relationship */
  student_assignments_aggregate: Student_Assignments_Aggregate;
  /** An object relationship */
  topic: Topics;
  topic_id: Scalars['String'];
  type?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "assignments" */
export type AssignmentsAssignment_Study_Plan_ItemsArgs = {
  distinct_on?: Maybe<Array<Assignment_Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assignment_Study_Plan_Items_Order_By>>;
  where?: Maybe<Assignment_Study_Plan_Items_Bool_Exp>;
};


/** columns and relationships of "assignments" */
export type AssignmentsAssignment_Study_Plan_Items_AggregateArgs = {
  distinct_on?: Maybe<Array<Assignment_Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assignment_Study_Plan_Items_Order_By>>;
  where?: Maybe<Assignment_Study_Plan_Items_Bool_Exp>;
};


/** columns and relationships of "assignments" */
export type AssignmentsCheck_ListArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "assignments" */
export type AssignmentsContentArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "assignments" */
export type AssignmentsSettingsArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "assignments" */
export type AssignmentsStudent_AssignmentsArgs = {
  distinct_on?: Maybe<Array<Student_Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Assignments_Order_By>>;
  where?: Maybe<Student_Assignments_Bool_Exp>;
};


/** columns and relationships of "assignments" */
export type AssignmentsStudent_Assignments_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Assignments_Order_By>>;
  where?: Maybe<Student_Assignments_Bool_Exp>;
};

/** aggregated selection of "assignments" */
export type Assignments_Aggregate = {
  aggregate?: Maybe<Assignments_Aggregate_Fields>;
  nodes: Array<Assignments>;
};

/** aggregate fields of "assignments" */
export type Assignments_Aggregate_Fields = {
  avg?: Maybe<Assignments_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Assignments_Max_Fields>;
  min?: Maybe<Assignments_Min_Fields>;
  stddev?: Maybe<Assignments_Stddev_Fields>;
  stddev_pop?: Maybe<Assignments_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Assignments_Stddev_Samp_Fields>;
  sum?: Maybe<Assignments_Sum_Fields>;
  var_pop?: Maybe<Assignments_Var_Pop_Fields>;
  var_samp?: Maybe<Assignments_Var_Samp_Fields>;
  variance?: Maybe<Assignments_Variance_Fields>;
};


/** aggregate fields of "assignments" */
export type Assignments_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Assignments_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "assignments" */
export type Assignments_Aggregate_Order_By = {
  avg?: Maybe<Assignments_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Assignments_Max_Order_By>;
  min?: Maybe<Assignments_Min_Order_By>;
  stddev?: Maybe<Assignments_Stddev_Order_By>;
  stddev_pop?: Maybe<Assignments_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Assignments_Stddev_Samp_Order_By>;
  sum?: Maybe<Assignments_Sum_Order_By>;
  var_pop?: Maybe<Assignments_Var_Pop_Order_By>;
  var_samp?: Maybe<Assignments_Var_Samp_Order_By>;
  variance?: Maybe<Assignments_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Assignments_Append_Input = {
  check_list?: Maybe<Scalars['jsonb']>;
  content?: Maybe<Scalars['jsonb']>;
  settings?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "assignments" */
export type Assignments_Arr_Rel_Insert_Input = {
  data: Array<Assignments_Insert_Input>;
  on_conflict?: Maybe<Assignments_On_Conflict>;
};

/** aggregate avg on columns */
export type Assignments_Avg_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  max_grade?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "assignments" */
export type Assignments_Avg_Order_By = {
  class_id?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  max_grade?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "assignments". All fields are combined with a logical 'AND'. */
export type Assignments_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Assignments_Bool_Exp>>>;
  _not?: Maybe<Assignments_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Assignments_Bool_Exp>>>;
  assigned_by?: Maybe<String_Comparison_Exp>;
  assignment_id?: Maybe<String_Comparison_Exp>;
  assignment_study_plan_items?: Maybe<Assignment_Study_Plan_Items_Bool_Exp>;
  assignment_type?: Maybe<String_Comparison_Exp>;
  attachment?: Maybe<_Text_Comparison_Exp>;
  check_list?: Maybe<Jsonb_Comparison_Exp>;
  class_id?: Maybe<Int_Comparison_Exp>;
  content?: Maybe<Jsonb_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  display_order?: Maybe<Int_Comparison_Exp>;
  end_date?: Maybe<Timestamptz_Comparison_Exp>;
  instruction?: Maybe<String_Comparison_Exp>;
  is_required_grade?: Maybe<Boolean_Comparison_Exp>;
  max_grade?: Maybe<Int_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  original_topic?: Maybe<String_Comparison_Exp>;
  preset_study_plan_id?: Maybe<String_Comparison_Exp>;
  preset_study_plan_weekly_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  settings?: Maybe<Jsonb_Comparison_Exp>;
  start_date?: Maybe<Timestamptz_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  student_assignments?: Maybe<Student_Assignments_Bool_Exp>;
  topic?: Maybe<Topics_Bool_Exp>;
  topic_id?: Maybe<String_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "assignments" */
export enum Assignments_Constraint {
  /** unique or primary key constraint */
  AssignmentsPk = 'assignments_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Assignments_Delete_At_Path_Input = {
  check_list?: Maybe<Array<Maybe<Scalars['String']>>>;
  content?: Maybe<Array<Maybe<Scalars['String']>>>;
  settings?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Assignments_Delete_Elem_Input = {
  check_list?: Maybe<Scalars['Int']>;
  content?: Maybe<Scalars['Int']>;
  settings?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Assignments_Delete_Key_Input = {
  check_list?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  settings?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "assignments" */
export type Assignments_Inc_Input = {
  class_id?: Maybe<Scalars['Int']>;
  display_order?: Maybe<Scalars['Int']>;
  max_grade?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "assignments" */
export type Assignments_Insert_Input = {
  assigned_by?: Maybe<Scalars['String']>;
  assignment_id?: Maybe<Scalars['String']>;
  assignment_study_plan_items?: Maybe<Assignment_Study_Plan_Items_Arr_Rel_Insert_Input>;
  assignment_type?: Maybe<Scalars['String']>;
  attachment?: Maybe<Scalars['_text']>;
  check_list?: Maybe<Scalars['jsonb']>;
  class_id?: Maybe<Scalars['Int']>;
  content?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  instruction?: Maybe<Scalars['String']>;
  is_required_grade?: Maybe<Scalars['Boolean']>;
  max_grade?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  original_topic?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  settings?: Maybe<Scalars['jsonb']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  student_assignments?: Maybe<Student_Assignments_Arr_Rel_Insert_Input>;
  topic?: Maybe<Topics_Obj_Rel_Insert_Input>;
  topic_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Assignments_Max_Fields = {
  assigned_by?: Maybe<Scalars['String']>;
  assignment_id?: Maybe<Scalars['String']>;
  assignment_type?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  instruction?: Maybe<Scalars['String']>;
  max_grade?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  original_topic?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "assignments" */
export type Assignments_Max_Order_By = {
  assigned_by?: Maybe<Order_By>;
  assignment_id?: Maybe<Order_By>;
  assignment_type?: Maybe<Order_By>;
  class_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  end_date?: Maybe<Order_By>;
  instruction?: Maybe<Order_By>;
  max_grade?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  original_topic?: Maybe<Order_By>;
  preset_study_plan_id?: Maybe<Order_By>;
  preset_study_plan_weekly_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Assignments_Min_Fields = {
  assigned_by?: Maybe<Scalars['String']>;
  assignment_id?: Maybe<Scalars['String']>;
  assignment_type?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  instruction?: Maybe<Scalars['String']>;
  max_grade?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  original_topic?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "assignments" */
export type Assignments_Min_Order_By = {
  assigned_by?: Maybe<Order_By>;
  assignment_id?: Maybe<Order_By>;
  assignment_type?: Maybe<Order_By>;
  class_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  end_date?: Maybe<Order_By>;
  instruction?: Maybe<Order_By>;
  max_grade?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  original_topic?: Maybe<Order_By>;
  preset_study_plan_id?: Maybe<Order_By>;
  preset_study_plan_weekly_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "assignments" */
export type Assignments_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Assignments>;
};

/** input type for inserting object relation for remote table "assignments" */
export type Assignments_Obj_Rel_Insert_Input = {
  data: Assignments_Insert_Input;
  on_conflict?: Maybe<Assignments_On_Conflict>;
};

/** on conflict condition type for table "assignments" */
export type Assignments_On_Conflict = {
  constraint: Assignments_Constraint;
  update_columns: Array<Assignments_Update_Column>;
  where?: Maybe<Assignments_Bool_Exp>;
};

/** ordering options when selecting data from "assignments" */
export type Assignments_Order_By = {
  assigned_by?: Maybe<Order_By>;
  assignment_id?: Maybe<Order_By>;
  assignment_study_plan_items_aggregate?: Maybe<Assignment_Study_Plan_Items_Aggregate_Order_By>;
  assignment_type?: Maybe<Order_By>;
  attachment?: Maybe<Order_By>;
  check_list?: Maybe<Order_By>;
  class_id?: Maybe<Order_By>;
  content?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  end_date?: Maybe<Order_By>;
  instruction?: Maybe<Order_By>;
  is_required_grade?: Maybe<Order_By>;
  max_grade?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  original_topic?: Maybe<Order_By>;
  preset_study_plan_id?: Maybe<Order_By>;
  preset_study_plan_weekly_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  settings?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_assignments_aggregate?: Maybe<Student_Assignments_Aggregate_Order_By>;
  topic?: Maybe<Topics_Order_By>;
  topic_id?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "assignments" */
export type Assignments_Pk_Columns_Input = {
  assignment_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Assignments_Prepend_Input = {
  check_list?: Maybe<Scalars['jsonb']>;
  content?: Maybe<Scalars['jsonb']>;
  settings?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "assignments" */
export enum Assignments_Select_Column {
  /** column name */
  AssignedBy = 'assigned_by',
  /** column name */
  AssignmentId = 'assignment_id',
  /** column name */
  AssignmentType = 'assignment_type',
  /** column name */
  Attachment = 'attachment',
  /** column name */
  CheckList = 'check_list',
  /** column name */
  ClassId = 'class_id',
  /** column name */
  Content = 'content',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  Instruction = 'instruction',
  /** column name */
  IsRequiredGrade = 'is_required_grade',
  /** column name */
  MaxGrade = 'max_grade',
  /** column name */
  Name = 'name',
  /** column name */
  OriginalTopic = 'original_topic',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  PresetStudyPlanWeeklyId = 'preset_study_plan_weekly_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Settings = 'settings',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Status = 'status',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "assignments" */
export type Assignments_Set_Input = {
  assigned_by?: Maybe<Scalars['String']>;
  assignment_id?: Maybe<Scalars['String']>;
  assignment_type?: Maybe<Scalars['String']>;
  attachment?: Maybe<Scalars['_text']>;
  check_list?: Maybe<Scalars['jsonb']>;
  class_id?: Maybe<Scalars['Int']>;
  content?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  instruction?: Maybe<Scalars['String']>;
  is_required_grade?: Maybe<Scalars['Boolean']>;
  max_grade?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  original_topic?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  settings?: Maybe<Scalars['jsonb']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Assignments_Stddev_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  max_grade?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "assignments" */
export type Assignments_Stddev_Order_By = {
  class_id?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  max_grade?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Assignments_Stddev_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  max_grade?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "assignments" */
export type Assignments_Stddev_Pop_Order_By = {
  class_id?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  max_grade?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Assignments_Stddev_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  max_grade?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "assignments" */
export type Assignments_Stddev_Samp_Order_By = {
  class_id?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  max_grade?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Assignments_Sum_Fields = {
  class_id?: Maybe<Scalars['Int']>;
  display_order?: Maybe<Scalars['Int']>;
  max_grade?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "assignments" */
export type Assignments_Sum_Order_By = {
  class_id?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  max_grade?: Maybe<Order_By>;
};

/** update columns of table "assignments" */
export enum Assignments_Update_Column {
  /** column name */
  AssignedBy = 'assigned_by',
  /** column name */
  AssignmentId = 'assignment_id',
  /** column name */
  AssignmentType = 'assignment_type',
  /** column name */
  Attachment = 'attachment',
  /** column name */
  CheckList = 'check_list',
  /** column name */
  ClassId = 'class_id',
  /** column name */
  Content = 'content',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  Instruction = 'instruction',
  /** column name */
  IsRequiredGrade = 'is_required_grade',
  /** column name */
  MaxGrade = 'max_grade',
  /** column name */
  Name = 'name',
  /** column name */
  OriginalTopic = 'original_topic',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  PresetStudyPlanWeeklyId = 'preset_study_plan_weekly_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Settings = 'settings',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Status = 'status',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Assignments_Var_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  max_grade?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "assignments" */
export type Assignments_Var_Pop_Order_By = {
  class_id?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  max_grade?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Assignments_Var_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  max_grade?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "assignments" */
export type Assignments_Var_Samp_Order_By = {
  class_id?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  max_grade?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Assignments_Variance_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  max_grade?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "assignments" */
export type Assignments_Variance_Order_By = {
  class_id?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  max_grade?: Maybe<Order_By>;
};


/** expression to compare columns of type bigint. All fields are combined with logical 'AND'. */
export type Bigint_Comparison_Exp = {
  _eq?: Maybe<Scalars['bigint']>;
  _gt?: Maybe<Scalars['bigint']>;
  _gte?: Maybe<Scalars['bigint']>;
  _in?: Maybe<Array<Scalars['bigint']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['bigint']>;
  _lte?: Maybe<Scalars['bigint']>;
  _neq?: Maybe<Scalars['bigint']>;
  _nin?: Maybe<Array<Scalars['bigint']>>;
};

/** columns and relationships of "bill_item" */
export type Bill_Item = {
  bill_item_sequence_number: Scalars['Int'];
  bill_type: Scalars['String'];
  billing_date?: Maybe<Scalars['timestamptz']>;
  billing_from?: Maybe<Scalars['timestamptz']>;
  billing_schedule_period_id?: Maybe<Scalars['Int']>;
  billing_status: Scalars['String'];
  billing_to?: Maybe<Scalars['timestamptz']>;
  created_at: Scalars['timestamptz'];
  discount_amount: Scalars['numeric'];
  discount_amount_type?: Maybe<Scalars['String']>;
  discount_amount_value: Scalars['numeric'];
  final_price: Scalars['numeric'];
  order_id: Scalars['String'];
  product_description: Scalars['String'];
  product_id: Scalars['Int'];
  product_pricing: Scalars['Int'];
  resource_path?: Maybe<Scalars['String']>;
  tax_amount?: Maybe<Scalars['numeric']>;
  tax_category?: Maybe<Scalars['String']>;
  tax_id?: Maybe<Scalars['Int']>;
  tax_percentage?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "bill_item" */
export type Bill_Item_Aggregate = {
  aggregate?: Maybe<Bill_Item_Aggregate_Fields>;
  nodes: Array<Bill_Item>;
};

/** aggregate fields of "bill_item" */
export type Bill_Item_Aggregate_Fields = {
  avg?: Maybe<Bill_Item_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Bill_Item_Max_Fields>;
  min?: Maybe<Bill_Item_Min_Fields>;
  stddev?: Maybe<Bill_Item_Stddev_Fields>;
  stddev_pop?: Maybe<Bill_Item_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Bill_Item_Stddev_Samp_Fields>;
  sum?: Maybe<Bill_Item_Sum_Fields>;
  var_pop?: Maybe<Bill_Item_Var_Pop_Fields>;
  var_samp?: Maybe<Bill_Item_Var_Samp_Fields>;
  variance?: Maybe<Bill_Item_Variance_Fields>;
};


/** aggregate fields of "bill_item" */
export type Bill_Item_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Bill_Item_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "bill_item" */
export type Bill_Item_Aggregate_Order_By = {
  avg?: Maybe<Bill_Item_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Bill_Item_Max_Order_By>;
  min?: Maybe<Bill_Item_Min_Order_By>;
  stddev?: Maybe<Bill_Item_Stddev_Order_By>;
  stddev_pop?: Maybe<Bill_Item_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Bill_Item_Stddev_Samp_Order_By>;
  sum?: Maybe<Bill_Item_Sum_Order_By>;
  var_pop?: Maybe<Bill_Item_Var_Pop_Order_By>;
  var_samp?: Maybe<Bill_Item_Var_Samp_Order_By>;
  variance?: Maybe<Bill_Item_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "bill_item" */
export type Bill_Item_Arr_Rel_Insert_Input = {
  data: Array<Bill_Item_Insert_Input>;
  on_conflict?: Maybe<Bill_Item_On_Conflict>;
};

/** aggregate avg on columns */
export type Bill_Item_Avg_Fields = {
  bill_item_sequence_number?: Maybe<Scalars['Float']>;
  billing_schedule_period_id?: Maybe<Scalars['Float']>;
  discount_amount?: Maybe<Scalars['Float']>;
  discount_amount_value?: Maybe<Scalars['Float']>;
  final_price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  product_pricing?: Maybe<Scalars['Float']>;
  tax_amount?: Maybe<Scalars['Float']>;
  tax_id?: Maybe<Scalars['Float']>;
  tax_percentage?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "bill_item" */
export type Bill_Item_Avg_Order_By = {
  bill_item_sequence_number?: Maybe<Order_By>;
  billing_schedule_period_id?: Maybe<Order_By>;
  discount_amount?: Maybe<Order_By>;
  discount_amount_value?: Maybe<Order_By>;
  final_price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  product_pricing?: Maybe<Order_By>;
  tax_amount?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "bill_item". All fields are combined with a logical 'AND'. */
export type Bill_Item_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Bill_Item_Bool_Exp>>>;
  _not?: Maybe<Bill_Item_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Bill_Item_Bool_Exp>>>;
  bill_item_sequence_number?: Maybe<Int_Comparison_Exp>;
  bill_type?: Maybe<String_Comparison_Exp>;
  billing_date?: Maybe<Timestamptz_Comparison_Exp>;
  billing_from?: Maybe<Timestamptz_Comparison_Exp>;
  billing_schedule_period_id?: Maybe<Int_Comparison_Exp>;
  billing_status?: Maybe<String_Comparison_Exp>;
  billing_to?: Maybe<Timestamptz_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  discount_amount?: Maybe<Numeric_Comparison_Exp>;
  discount_amount_type?: Maybe<String_Comparison_Exp>;
  discount_amount_value?: Maybe<Numeric_Comparison_Exp>;
  final_price?: Maybe<Numeric_Comparison_Exp>;
  order_id?: Maybe<String_Comparison_Exp>;
  product_description?: Maybe<String_Comparison_Exp>;
  product_id?: Maybe<Int_Comparison_Exp>;
  product_pricing?: Maybe<Int_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  tax_amount?: Maybe<Numeric_Comparison_Exp>;
  tax_category?: Maybe<String_Comparison_Exp>;
  tax_id?: Maybe<Int_Comparison_Exp>;
  tax_percentage?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "bill_item" */
export enum Bill_Item_Constraint {
  /** unique or primary key constraint */
  BillItemOrderBillItemSequenceNumberPk = 'bill_item_order_bill_item_sequence_number_pk',
  /** unique or primary key constraint */
  BillItemSequenceNumberResourcePathUnique = 'bill_item_sequence_number_resource_path_unique'
}

/** input type for incrementing integer column in table "bill_item" */
export type Bill_Item_Inc_Input = {
  bill_item_sequence_number?: Maybe<Scalars['Int']>;
  billing_schedule_period_id?: Maybe<Scalars['Int']>;
  discount_amount?: Maybe<Scalars['numeric']>;
  discount_amount_value?: Maybe<Scalars['numeric']>;
  final_price?: Maybe<Scalars['numeric']>;
  product_id?: Maybe<Scalars['Int']>;
  product_pricing?: Maybe<Scalars['Int']>;
  tax_amount?: Maybe<Scalars['numeric']>;
  tax_id?: Maybe<Scalars['Int']>;
  tax_percentage?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "bill_item" */
export type Bill_Item_Insert_Input = {
  bill_item_sequence_number?: Maybe<Scalars['Int']>;
  bill_type?: Maybe<Scalars['String']>;
  billing_date?: Maybe<Scalars['timestamptz']>;
  billing_from?: Maybe<Scalars['timestamptz']>;
  billing_schedule_period_id?: Maybe<Scalars['Int']>;
  billing_status?: Maybe<Scalars['String']>;
  billing_to?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  discount_amount?: Maybe<Scalars['numeric']>;
  discount_amount_type?: Maybe<Scalars['String']>;
  discount_amount_value?: Maybe<Scalars['numeric']>;
  final_price?: Maybe<Scalars['numeric']>;
  order_id?: Maybe<Scalars['String']>;
  product_description?: Maybe<Scalars['String']>;
  product_id?: Maybe<Scalars['Int']>;
  product_pricing?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  tax_amount?: Maybe<Scalars['numeric']>;
  tax_category?: Maybe<Scalars['String']>;
  tax_id?: Maybe<Scalars['Int']>;
  tax_percentage?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Bill_Item_Max_Fields = {
  bill_item_sequence_number?: Maybe<Scalars['Int']>;
  bill_type?: Maybe<Scalars['String']>;
  billing_date?: Maybe<Scalars['timestamptz']>;
  billing_from?: Maybe<Scalars['timestamptz']>;
  billing_schedule_period_id?: Maybe<Scalars['Int']>;
  billing_status?: Maybe<Scalars['String']>;
  billing_to?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  discount_amount?: Maybe<Scalars['numeric']>;
  discount_amount_type?: Maybe<Scalars['String']>;
  discount_amount_value?: Maybe<Scalars['numeric']>;
  final_price?: Maybe<Scalars['numeric']>;
  order_id?: Maybe<Scalars['String']>;
  product_description?: Maybe<Scalars['String']>;
  product_id?: Maybe<Scalars['Int']>;
  product_pricing?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  tax_amount?: Maybe<Scalars['numeric']>;
  tax_category?: Maybe<Scalars['String']>;
  tax_id?: Maybe<Scalars['Int']>;
  tax_percentage?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "bill_item" */
export type Bill_Item_Max_Order_By = {
  bill_item_sequence_number?: Maybe<Order_By>;
  bill_type?: Maybe<Order_By>;
  billing_date?: Maybe<Order_By>;
  billing_from?: Maybe<Order_By>;
  billing_schedule_period_id?: Maybe<Order_By>;
  billing_status?: Maybe<Order_By>;
  billing_to?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  discount_amount?: Maybe<Order_By>;
  discount_amount_type?: Maybe<Order_By>;
  discount_amount_value?: Maybe<Order_By>;
  final_price?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  product_description?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  product_pricing?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  tax_amount?: Maybe<Order_By>;
  tax_category?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Bill_Item_Min_Fields = {
  bill_item_sequence_number?: Maybe<Scalars['Int']>;
  bill_type?: Maybe<Scalars['String']>;
  billing_date?: Maybe<Scalars['timestamptz']>;
  billing_from?: Maybe<Scalars['timestamptz']>;
  billing_schedule_period_id?: Maybe<Scalars['Int']>;
  billing_status?: Maybe<Scalars['String']>;
  billing_to?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  discount_amount?: Maybe<Scalars['numeric']>;
  discount_amount_type?: Maybe<Scalars['String']>;
  discount_amount_value?: Maybe<Scalars['numeric']>;
  final_price?: Maybe<Scalars['numeric']>;
  order_id?: Maybe<Scalars['String']>;
  product_description?: Maybe<Scalars['String']>;
  product_id?: Maybe<Scalars['Int']>;
  product_pricing?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  tax_amount?: Maybe<Scalars['numeric']>;
  tax_category?: Maybe<Scalars['String']>;
  tax_id?: Maybe<Scalars['Int']>;
  tax_percentage?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "bill_item" */
export type Bill_Item_Min_Order_By = {
  bill_item_sequence_number?: Maybe<Order_By>;
  bill_type?: Maybe<Order_By>;
  billing_date?: Maybe<Order_By>;
  billing_from?: Maybe<Order_By>;
  billing_schedule_period_id?: Maybe<Order_By>;
  billing_status?: Maybe<Order_By>;
  billing_to?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  discount_amount?: Maybe<Order_By>;
  discount_amount_type?: Maybe<Order_By>;
  discount_amount_value?: Maybe<Order_By>;
  final_price?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  product_description?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  product_pricing?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  tax_amount?: Maybe<Order_By>;
  tax_category?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "bill_item" */
export type Bill_Item_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Bill_Item>;
};

/** input type for inserting object relation for remote table "bill_item" */
export type Bill_Item_Obj_Rel_Insert_Input = {
  data: Bill_Item_Insert_Input;
  on_conflict?: Maybe<Bill_Item_On_Conflict>;
};

/** on conflict condition type for table "bill_item" */
export type Bill_Item_On_Conflict = {
  constraint: Bill_Item_Constraint;
  update_columns: Array<Bill_Item_Update_Column>;
  where?: Maybe<Bill_Item_Bool_Exp>;
};

/** ordering options when selecting data from "bill_item" */
export type Bill_Item_Order_By = {
  bill_item_sequence_number?: Maybe<Order_By>;
  bill_type?: Maybe<Order_By>;
  billing_date?: Maybe<Order_By>;
  billing_from?: Maybe<Order_By>;
  billing_schedule_period_id?: Maybe<Order_By>;
  billing_status?: Maybe<Order_By>;
  billing_to?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  discount_amount?: Maybe<Order_By>;
  discount_amount_type?: Maybe<Order_By>;
  discount_amount_value?: Maybe<Order_By>;
  final_price?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  product_description?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  product_pricing?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  tax_amount?: Maybe<Order_By>;
  tax_category?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "bill_item" */
export type Bill_Item_Pk_Columns_Input = {
  bill_item_sequence_number: Scalars['Int'];
  order_id: Scalars['String'];
};

/** select columns of table "bill_item" */
export enum Bill_Item_Select_Column {
  /** column name */
  BillItemSequenceNumber = 'bill_item_sequence_number',
  /** column name */
  BillType = 'bill_type',
  /** column name */
  BillingDate = 'billing_date',
  /** column name */
  BillingFrom = 'billing_from',
  /** column name */
  BillingSchedulePeriodId = 'billing_schedule_period_id',
  /** column name */
  BillingStatus = 'billing_status',
  /** column name */
  BillingTo = 'billing_to',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DiscountAmount = 'discount_amount',
  /** column name */
  DiscountAmountType = 'discount_amount_type',
  /** column name */
  DiscountAmountValue = 'discount_amount_value',
  /** column name */
  FinalPrice = 'final_price',
  /** column name */
  OrderId = 'order_id',
  /** column name */
  ProductDescription = 'product_description',
  /** column name */
  ProductId = 'product_id',
  /** column name */
  ProductPricing = 'product_pricing',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TaxAmount = 'tax_amount',
  /** column name */
  TaxCategory = 'tax_category',
  /** column name */
  TaxId = 'tax_id',
  /** column name */
  TaxPercentage = 'tax_percentage',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "bill_item" */
export type Bill_Item_Set_Input = {
  bill_item_sequence_number?: Maybe<Scalars['Int']>;
  bill_type?: Maybe<Scalars['String']>;
  billing_date?: Maybe<Scalars['timestamptz']>;
  billing_from?: Maybe<Scalars['timestamptz']>;
  billing_schedule_period_id?: Maybe<Scalars['Int']>;
  billing_status?: Maybe<Scalars['String']>;
  billing_to?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  discount_amount?: Maybe<Scalars['numeric']>;
  discount_amount_type?: Maybe<Scalars['String']>;
  discount_amount_value?: Maybe<Scalars['numeric']>;
  final_price?: Maybe<Scalars['numeric']>;
  order_id?: Maybe<Scalars['String']>;
  product_description?: Maybe<Scalars['String']>;
  product_id?: Maybe<Scalars['Int']>;
  product_pricing?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  tax_amount?: Maybe<Scalars['numeric']>;
  tax_category?: Maybe<Scalars['String']>;
  tax_id?: Maybe<Scalars['Int']>;
  tax_percentage?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Bill_Item_Stddev_Fields = {
  bill_item_sequence_number?: Maybe<Scalars['Float']>;
  billing_schedule_period_id?: Maybe<Scalars['Float']>;
  discount_amount?: Maybe<Scalars['Float']>;
  discount_amount_value?: Maybe<Scalars['Float']>;
  final_price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  product_pricing?: Maybe<Scalars['Float']>;
  tax_amount?: Maybe<Scalars['Float']>;
  tax_id?: Maybe<Scalars['Float']>;
  tax_percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "bill_item" */
export type Bill_Item_Stddev_Order_By = {
  bill_item_sequence_number?: Maybe<Order_By>;
  billing_schedule_period_id?: Maybe<Order_By>;
  discount_amount?: Maybe<Order_By>;
  discount_amount_value?: Maybe<Order_By>;
  final_price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  product_pricing?: Maybe<Order_By>;
  tax_amount?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Bill_Item_Stddev_Pop_Fields = {
  bill_item_sequence_number?: Maybe<Scalars['Float']>;
  billing_schedule_period_id?: Maybe<Scalars['Float']>;
  discount_amount?: Maybe<Scalars['Float']>;
  discount_amount_value?: Maybe<Scalars['Float']>;
  final_price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  product_pricing?: Maybe<Scalars['Float']>;
  tax_amount?: Maybe<Scalars['Float']>;
  tax_id?: Maybe<Scalars['Float']>;
  tax_percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "bill_item" */
export type Bill_Item_Stddev_Pop_Order_By = {
  bill_item_sequence_number?: Maybe<Order_By>;
  billing_schedule_period_id?: Maybe<Order_By>;
  discount_amount?: Maybe<Order_By>;
  discount_amount_value?: Maybe<Order_By>;
  final_price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  product_pricing?: Maybe<Order_By>;
  tax_amount?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Bill_Item_Stddev_Samp_Fields = {
  bill_item_sequence_number?: Maybe<Scalars['Float']>;
  billing_schedule_period_id?: Maybe<Scalars['Float']>;
  discount_amount?: Maybe<Scalars['Float']>;
  discount_amount_value?: Maybe<Scalars['Float']>;
  final_price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  product_pricing?: Maybe<Scalars['Float']>;
  tax_amount?: Maybe<Scalars['Float']>;
  tax_id?: Maybe<Scalars['Float']>;
  tax_percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "bill_item" */
export type Bill_Item_Stddev_Samp_Order_By = {
  bill_item_sequence_number?: Maybe<Order_By>;
  billing_schedule_period_id?: Maybe<Order_By>;
  discount_amount?: Maybe<Order_By>;
  discount_amount_value?: Maybe<Order_By>;
  final_price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  product_pricing?: Maybe<Order_By>;
  tax_amount?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Bill_Item_Sum_Fields = {
  bill_item_sequence_number?: Maybe<Scalars['Int']>;
  billing_schedule_period_id?: Maybe<Scalars['Int']>;
  discount_amount?: Maybe<Scalars['numeric']>;
  discount_amount_value?: Maybe<Scalars['numeric']>;
  final_price?: Maybe<Scalars['numeric']>;
  product_id?: Maybe<Scalars['Int']>;
  product_pricing?: Maybe<Scalars['Int']>;
  tax_amount?: Maybe<Scalars['numeric']>;
  tax_id?: Maybe<Scalars['Int']>;
  tax_percentage?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "bill_item" */
export type Bill_Item_Sum_Order_By = {
  bill_item_sequence_number?: Maybe<Order_By>;
  billing_schedule_period_id?: Maybe<Order_By>;
  discount_amount?: Maybe<Order_By>;
  discount_amount_value?: Maybe<Order_By>;
  final_price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  product_pricing?: Maybe<Order_By>;
  tax_amount?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
};

/** update columns of table "bill_item" */
export enum Bill_Item_Update_Column {
  /** column name */
  BillItemSequenceNumber = 'bill_item_sequence_number',
  /** column name */
  BillType = 'bill_type',
  /** column name */
  BillingDate = 'billing_date',
  /** column name */
  BillingFrom = 'billing_from',
  /** column name */
  BillingSchedulePeriodId = 'billing_schedule_period_id',
  /** column name */
  BillingStatus = 'billing_status',
  /** column name */
  BillingTo = 'billing_to',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DiscountAmount = 'discount_amount',
  /** column name */
  DiscountAmountType = 'discount_amount_type',
  /** column name */
  DiscountAmountValue = 'discount_amount_value',
  /** column name */
  FinalPrice = 'final_price',
  /** column name */
  OrderId = 'order_id',
  /** column name */
  ProductDescription = 'product_description',
  /** column name */
  ProductId = 'product_id',
  /** column name */
  ProductPricing = 'product_pricing',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TaxAmount = 'tax_amount',
  /** column name */
  TaxCategory = 'tax_category',
  /** column name */
  TaxId = 'tax_id',
  /** column name */
  TaxPercentage = 'tax_percentage',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Bill_Item_Var_Pop_Fields = {
  bill_item_sequence_number?: Maybe<Scalars['Float']>;
  billing_schedule_period_id?: Maybe<Scalars['Float']>;
  discount_amount?: Maybe<Scalars['Float']>;
  discount_amount_value?: Maybe<Scalars['Float']>;
  final_price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  product_pricing?: Maybe<Scalars['Float']>;
  tax_amount?: Maybe<Scalars['Float']>;
  tax_id?: Maybe<Scalars['Float']>;
  tax_percentage?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "bill_item" */
export type Bill_Item_Var_Pop_Order_By = {
  bill_item_sequence_number?: Maybe<Order_By>;
  billing_schedule_period_id?: Maybe<Order_By>;
  discount_amount?: Maybe<Order_By>;
  discount_amount_value?: Maybe<Order_By>;
  final_price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  product_pricing?: Maybe<Order_By>;
  tax_amount?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Bill_Item_Var_Samp_Fields = {
  bill_item_sequence_number?: Maybe<Scalars['Float']>;
  billing_schedule_period_id?: Maybe<Scalars['Float']>;
  discount_amount?: Maybe<Scalars['Float']>;
  discount_amount_value?: Maybe<Scalars['Float']>;
  final_price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  product_pricing?: Maybe<Scalars['Float']>;
  tax_amount?: Maybe<Scalars['Float']>;
  tax_id?: Maybe<Scalars['Float']>;
  tax_percentage?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "bill_item" */
export type Bill_Item_Var_Samp_Order_By = {
  bill_item_sequence_number?: Maybe<Order_By>;
  billing_schedule_period_id?: Maybe<Order_By>;
  discount_amount?: Maybe<Order_By>;
  discount_amount_value?: Maybe<Order_By>;
  final_price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  product_pricing?: Maybe<Order_By>;
  tax_amount?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Bill_Item_Variance_Fields = {
  bill_item_sequence_number?: Maybe<Scalars['Float']>;
  billing_schedule_period_id?: Maybe<Scalars['Float']>;
  discount_amount?: Maybe<Scalars['Float']>;
  discount_amount_value?: Maybe<Scalars['Float']>;
  final_price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  product_pricing?: Maybe<Scalars['Float']>;
  tax_amount?: Maybe<Scalars['Float']>;
  tax_id?: Maybe<Scalars['Float']>;
  tax_percentage?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "bill_item" */
export type Bill_Item_Variance_Order_By = {
  bill_item_sequence_number?: Maybe<Order_By>;
  billing_schedule_period_id?: Maybe<Order_By>;
  discount_amount?: Maybe<Order_By>;
  discount_amount_value?: Maybe<Order_By>;
  final_price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  product_pricing?: Maybe<Order_By>;
  tax_amount?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
};

/** columns and relationships of "billing_histories" */
export type Billing_Histories = {
  billing_from: Scalars['timestamptz'];
  billing_id: Scalars['String'];
  billing_to: Scalars['timestamptz'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  generator_email: Scalars['String'];
  generator_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: Users;
};

/** aggregated selection of "billing_histories" */
export type Billing_Histories_Aggregate = {
  aggregate?: Maybe<Billing_Histories_Aggregate_Fields>;
  nodes: Array<Billing_Histories>;
};

/** aggregate fields of "billing_histories" */
export type Billing_Histories_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Billing_Histories_Max_Fields>;
  min?: Maybe<Billing_Histories_Min_Fields>;
};


/** aggregate fields of "billing_histories" */
export type Billing_Histories_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Billing_Histories_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "billing_histories" */
export type Billing_Histories_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Billing_Histories_Max_Order_By>;
  min?: Maybe<Billing_Histories_Min_Order_By>;
};

/** input type for inserting array relation for remote table "billing_histories" */
export type Billing_Histories_Arr_Rel_Insert_Input = {
  data: Array<Billing_Histories_Insert_Input>;
  on_conflict?: Maybe<Billing_Histories_On_Conflict>;
};

/** Boolean expression to filter rows from the table "billing_histories". All fields are combined with a logical 'AND'. */
export type Billing_Histories_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Billing_Histories_Bool_Exp>>>;
  _not?: Maybe<Billing_Histories_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Billing_Histories_Bool_Exp>>>;
  billing_from?: Maybe<Timestamptz_Comparison_Exp>;
  billing_id?: Maybe<String_Comparison_Exp>;
  billing_to?: Maybe<Timestamptz_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  generator_email?: Maybe<String_Comparison_Exp>;
  generator_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "billing_histories" */
export enum Billing_Histories_Constraint {
  /** unique or primary key constraint */
  BillingHistoriesPk = 'billing_histories_pk'
}

/** input type for inserting data into table "billing_histories" */
export type Billing_Histories_Insert_Input = {
  billing_from?: Maybe<Scalars['timestamptz']>;
  billing_id?: Maybe<Scalars['String']>;
  billing_to?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  generator_email?: Maybe<Scalars['String']>;
  generator_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Billing_Histories_Max_Fields = {
  billing_from?: Maybe<Scalars['timestamptz']>;
  billing_id?: Maybe<Scalars['String']>;
  billing_to?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  generator_email?: Maybe<Scalars['String']>;
  generator_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "billing_histories" */
export type Billing_Histories_Max_Order_By = {
  billing_from?: Maybe<Order_By>;
  billing_id?: Maybe<Order_By>;
  billing_to?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  generator_email?: Maybe<Order_By>;
  generator_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Billing_Histories_Min_Fields = {
  billing_from?: Maybe<Scalars['timestamptz']>;
  billing_id?: Maybe<Scalars['String']>;
  billing_to?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  generator_email?: Maybe<Scalars['String']>;
  generator_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "billing_histories" */
export type Billing_Histories_Min_Order_By = {
  billing_from?: Maybe<Order_By>;
  billing_id?: Maybe<Order_By>;
  billing_to?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  generator_email?: Maybe<Order_By>;
  generator_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "billing_histories" */
export type Billing_Histories_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Billing_Histories>;
};

/** input type for inserting object relation for remote table "billing_histories" */
export type Billing_Histories_Obj_Rel_Insert_Input = {
  data: Billing_Histories_Insert_Input;
  on_conflict?: Maybe<Billing_Histories_On_Conflict>;
};

/** on conflict condition type for table "billing_histories" */
export type Billing_Histories_On_Conflict = {
  constraint: Billing_Histories_Constraint;
  update_columns: Array<Billing_Histories_Update_Column>;
  where?: Maybe<Billing_Histories_Bool_Exp>;
};

/** ordering options when selecting data from "billing_histories" */
export type Billing_Histories_Order_By = {
  billing_from?: Maybe<Order_By>;
  billing_id?: Maybe<Order_By>;
  billing_to?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  generator_email?: Maybe<Order_By>;
  generator_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
};

/** primary key columns input for table: "billing_histories" */
export type Billing_Histories_Pk_Columns_Input = {
  billing_id: Scalars['String'];
};

/** select columns of table "billing_histories" */
export enum Billing_Histories_Select_Column {
  /** column name */
  BillingFrom = 'billing_from',
  /** column name */
  BillingId = 'billing_id',
  /** column name */
  BillingTo = 'billing_to',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  GeneratorEmail = 'generator_email',
  /** column name */
  GeneratorId = 'generator_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "billing_histories" */
export type Billing_Histories_Set_Input = {
  billing_from?: Maybe<Scalars['timestamptz']>;
  billing_id?: Maybe<Scalars['String']>;
  billing_to?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  generator_email?: Maybe<Scalars['String']>;
  generator_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "billing_histories" */
export enum Billing_Histories_Update_Column {
  /** column name */
  BillingFrom = 'billing_from',
  /** column name */
  BillingId = 'billing_id',
  /** column name */
  BillingTo = 'billing_to',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  GeneratorEmail = 'generator_email',
  /** column name */
  GeneratorId = 'generator_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "billing_schedule" */
export type Billing_Schedule = {
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  is_archived: Scalars['Boolean'];
  name: Scalars['String'];
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "billing_schedule" */
export type Billing_Schedule_Aggregate = {
  aggregate?: Maybe<Billing_Schedule_Aggregate_Fields>;
  nodes: Array<Billing_Schedule>;
};

/** aggregate fields of "billing_schedule" */
export type Billing_Schedule_Aggregate_Fields = {
  avg?: Maybe<Billing_Schedule_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Billing_Schedule_Max_Fields>;
  min?: Maybe<Billing_Schedule_Min_Fields>;
  stddev?: Maybe<Billing_Schedule_Stddev_Fields>;
  stddev_pop?: Maybe<Billing_Schedule_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Billing_Schedule_Stddev_Samp_Fields>;
  sum?: Maybe<Billing_Schedule_Sum_Fields>;
  var_pop?: Maybe<Billing_Schedule_Var_Pop_Fields>;
  var_samp?: Maybe<Billing_Schedule_Var_Samp_Fields>;
  variance?: Maybe<Billing_Schedule_Variance_Fields>;
};


/** aggregate fields of "billing_schedule" */
export type Billing_Schedule_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Billing_Schedule_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "billing_schedule" */
export type Billing_Schedule_Aggregate_Order_By = {
  avg?: Maybe<Billing_Schedule_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Billing_Schedule_Max_Order_By>;
  min?: Maybe<Billing_Schedule_Min_Order_By>;
  stddev?: Maybe<Billing_Schedule_Stddev_Order_By>;
  stddev_pop?: Maybe<Billing_Schedule_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Billing_Schedule_Stddev_Samp_Order_By>;
  sum?: Maybe<Billing_Schedule_Sum_Order_By>;
  var_pop?: Maybe<Billing_Schedule_Var_Pop_Order_By>;
  var_samp?: Maybe<Billing_Schedule_Var_Samp_Order_By>;
  variance?: Maybe<Billing_Schedule_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "billing_schedule" */
export type Billing_Schedule_Arr_Rel_Insert_Input = {
  data: Array<Billing_Schedule_Insert_Input>;
  on_conflict?: Maybe<Billing_Schedule_On_Conflict>;
};

/** aggregate avg on columns */
export type Billing_Schedule_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "billing_schedule" */
export type Billing_Schedule_Avg_Order_By = {
  id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "billing_schedule". All fields are combined with a logical 'AND'. */
export type Billing_Schedule_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Billing_Schedule_Bool_Exp>>>;
  _not?: Maybe<Billing_Schedule_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Billing_Schedule_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  is_archived?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  remarks?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "billing_schedule" */
export enum Billing_Schedule_Constraint {
  /** unique or primary key constraint */
  BillingSchedulePk = 'billing_schedule_pk'
}

/** input type for incrementing integer column in table "billing_schedule" */
export type Billing_Schedule_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "billing_schedule" */
export type Billing_Schedule_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  is_archived?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Billing_Schedule_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "billing_schedule" */
export type Billing_Schedule_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  remarks?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Billing_Schedule_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "billing_schedule" */
export type Billing_Schedule_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  remarks?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "billing_schedule" */
export type Billing_Schedule_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Billing_Schedule>;
};

/** input type for inserting object relation for remote table "billing_schedule" */
export type Billing_Schedule_Obj_Rel_Insert_Input = {
  data: Billing_Schedule_Insert_Input;
  on_conflict?: Maybe<Billing_Schedule_On_Conflict>;
};

/** on conflict condition type for table "billing_schedule" */
export type Billing_Schedule_On_Conflict = {
  constraint: Billing_Schedule_Constraint;
  update_columns: Array<Billing_Schedule_Update_Column>;
  where?: Maybe<Billing_Schedule_Bool_Exp>;
};

/** ordering options when selecting data from "billing_schedule" */
export type Billing_Schedule_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_archived?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  remarks?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** columns and relationships of "billing_schedule_period" */
export type Billing_Schedule_Period = {
  billing_date: Scalars['timestamptz'];
  billing_schedule_id: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  end_date: Scalars['timestamptz'];
  id: Scalars['Int'];
  is_archived: Scalars['Boolean'];
  name: Scalars['String'];
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date: Scalars['timestamptz'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "billing_schedule_period" */
export type Billing_Schedule_Period_Aggregate = {
  aggregate?: Maybe<Billing_Schedule_Period_Aggregate_Fields>;
  nodes: Array<Billing_Schedule_Period>;
};

/** aggregate fields of "billing_schedule_period" */
export type Billing_Schedule_Period_Aggregate_Fields = {
  avg?: Maybe<Billing_Schedule_Period_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Billing_Schedule_Period_Max_Fields>;
  min?: Maybe<Billing_Schedule_Period_Min_Fields>;
  stddev?: Maybe<Billing_Schedule_Period_Stddev_Fields>;
  stddev_pop?: Maybe<Billing_Schedule_Period_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Billing_Schedule_Period_Stddev_Samp_Fields>;
  sum?: Maybe<Billing_Schedule_Period_Sum_Fields>;
  var_pop?: Maybe<Billing_Schedule_Period_Var_Pop_Fields>;
  var_samp?: Maybe<Billing_Schedule_Period_Var_Samp_Fields>;
  variance?: Maybe<Billing_Schedule_Period_Variance_Fields>;
};


/** aggregate fields of "billing_schedule_period" */
export type Billing_Schedule_Period_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Billing_Schedule_Period_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "billing_schedule_period" */
export type Billing_Schedule_Period_Aggregate_Order_By = {
  avg?: Maybe<Billing_Schedule_Period_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Billing_Schedule_Period_Max_Order_By>;
  min?: Maybe<Billing_Schedule_Period_Min_Order_By>;
  stddev?: Maybe<Billing_Schedule_Period_Stddev_Order_By>;
  stddev_pop?: Maybe<Billing_Schedule_Period_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Billing_Schedule_Period_Stddev_Samp_Order_By>;
  sum?: Maybe<Billing_Schedule_Period_Sum_Order_By>;
  var_pop?: Maybe<Billing_Schedule_Period_Var_Pop_Order_By>;
  var_samp?: Maybe<Billing_Schedule_Period_Var_Samp_Order_By>;
  variance?: Maybe<Billing_Schedule_Period_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "billing_schedule_period" */
export type Billing_Schedule_Period_Arr_Rel_Insert_Input = {
  data: Array<Billing_Schedule_Period_Insert_Input>;
  on_conflict?: Maybe<Billing_Schedule_Period_On_Conflict>;
};

/** aggregate avg on columns */
export type Billing_Schedule_Period_Avg_Fields = {
  billing_schedule_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "billing_schedule_period" */
export type Billing_Schedule_Period_Avg_Order_By = {
  billing_schedule_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "billing_schedule_period". All fields are combined with a logical 'AND'. */
export type Billing_Schedule_Period_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Billing_Schedule_Period_Bool_Exp>>>;
  _not?: Maybe<Billing_Schedule_Period_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Billing_Schedule_Period_Bool_Exp>>>;
  billing_date?: Maybe<Timestamptz_Comparison_Exp>;
  billing_schedule_id?: Maybe<Int_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  end_date?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  is_archived?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  remarks?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  start_date?: Maybe<Timestamptz_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "billing_schedule_period" */
export enum Billing_Schedule_Period_Constraint {
  /** unique or primary key constraint */
  BillingSchedulePeriodPk = 'billing_schedule_period_pk'
}

/** input type for incrementing integer column in table "billing_schedule_period" */
export type Billing_Schedule_Period_Inc_Input = {
  billing_schedule_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "billing_schedule_period" */
export type Billing_Schedule_Period_Insert_Input = {
  billing_date?: Maybe<Scalars['timestamptz']>;
  billing_schedule_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  is_archived?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Billing_Schedule_Period_Max_Fields = {
  billing_date?: Maybe<Scalars['timestamptz']>;
  billing_schedule_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "billing_schedule_period" */
export type Billing_Schedule_Period_Max_Order_By = {
  billing_date?: Maybe<Order_By>;
  billing_schedule_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  end_date?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  remarks?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Billing_Schedule_Period_Min_Fields = {
  billing_date?: Maybe<Scalars['timestamptz']>;
  billing_schedule_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "billing_schedule_period" */
export type Billing_Schedule_Period_Min_Order_By = {
  billing_date?: Maybe<Order_By>;
  billing_schedule_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  end_date?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  remarks?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "billing_schedule_period" */
export type Billing_Schedule_Period_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Billing_Schedule_Period>;
};

/** input type for inserting object relation for remote table "billing_schedule_period" */
export type Billing_Schedule_Period_Obj_Rel_Insert_Input = {
  data: Billing_Schedule_Period_Insert_Input;
  on_conflict?: Maybe<Billing_Schedule_Period_On_Conflict>;
};

/** on conflict condition type for table "billing_schedule_period" */
export type Billing_Schedule_Period_On_Conflict = {
  constraint: Billing_Schedule_Period_Constraint;
  update_columns: Array<Billing_Schedule_Period_Update_Column>;
  where?: Maybe<Billing_Schedule_Period_Bool_Exp>;
};

/** ordering options when selecting data from "billing_schedule_period" */
export type Billing_Schedule_Period_Order_By = {
  billing_date?: Maybe<Order_By>;
  billing_schedule_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  end_date?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_archived?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  remarks?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "billing_schedule_period" */
export type Billing_Schedule_Period_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "billing_schedule_period" */
export enum Billing_Schedule_Period_Select_Column {
  /** column name */
  BillingDate = 'billing_date',
  /** column name */
  BillingScheduleId = 'billing_schedule_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  Id = 'id',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  Name = 'name',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "billing_schedule_period" */
export type Billing_Schedule_Period_Set_Input = {
  billing_date?: Maybe<Scalars['timestamptz']>;
  billing_schedule_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  is_archived?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Billing_Schedule_Period_Stddev_Fields = {
  billing_schedule_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "billing_schedule_period" */
export type Billing_Schedule_Period_Stddev_Order_By = {
  billing_schedule_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Billing_Schedule_Period_Stddev_Pop_Fields = {
  billing_schedule_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "billing_schedule_period" */
export type Billing_Schedule_Period_Stddev_Pop_Order_By = {
  billing_schedule_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Billing_Schedule_Period_Stddev_Samp_Fields = {
  billing_schedule_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "billing_schedule_period" */
export type Billing_Schedule_Period_Stddev_Samp_Order_By = {
  billing_schedule_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Billing_Schedule_Period_Sum_Fields = {
  billing_schedule_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "billing_schedule_period" */
export type Billing_Schedule_Period_Sum_Order_By = {
  billing_schedule_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** update columns of table "billing_schedule_period" */
export enum Billing_Schedule_Period_Update_Column {
  /** column name */
  BillingDate = 'billing_date',
  /** column name */
  BillingScheduleId = 'billing_schedule_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  Id = 'id',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  Name = 'name',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Billing_Schedule_Period_Var_Pop_Fields = {
  billing_schedule_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "billing_schedule_period" */
export type Billing_Schedule_Period_Var_Pop_Order_By = {
  billing_schedule_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Billing_Schedule_Period_Var_Samp_Fields = {
  billing_schedule_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "billing_schedule_period" */
export type Billing_Schedule_Period_Var_Samp_Order_By = {
  billing_schedule_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Billing_Schedule_Period_Variance_Fields = {
  billing_schedule_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "billing_schedule_period" */
export type Billing_Schedule_Period_Variance_Order_By = {
  billing_schedule_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** primary key columns input for table: "billing_schedule" */
export type Billing_Schedule_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "billing_schedule" */
export enum Billing_Schedule_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  Name = 'name',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "billing_schedule" */
export type Billing_Schedule_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  is_archived?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Billing_Schedule_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "billing_schedule" */
export type Billing_Schedule_Stddev_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Billing_Schedule_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "billing_schedule" */
export type Billing_Schedule_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Billing_Schedule_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "billing_schedule" */
export type Billing_Schedule_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Billing_Schedule_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "billing_schedule" */
export type Billing_Schedule_Sum_Order_By = {
  id?: Maybe<Order_By>;
};

/** update columns of table "billing_schedule" */
export enum Billing_Schedule_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  Name = 'name',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Billing_Schedule_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "billing_schedule" */
export type Billing_Schedule_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Billing_Schedule_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "billing_schedule" */
export type Billing_Schedule_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Billing_Schedule_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "billing_schedule" */
export type Billing_Schedule_Variance_Order_By = {
  id?: Maybe<Order_By>;
};

/** columns and relationships of "books" */
export type Books = {
  /** An array relationship */
  book_chapters: Array<Books_Chapters>;
  /** An aggregated array relationship */
  book_chapters_aggregate: Books_Chapters_Aggregate;
  book_id: Scalars['String'];
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  /** An array relationship */
  course_books: Array<Courses_Books>;
  /** An aggregated array relationship */
  course_books_aggregate: Courses_Books_Aggregate;
  created_at: Scalars['timestamptz'];
  current_chapter_display_order: Scalars['Int'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  name: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  school: Schools;
  school_id: Scalars['Int'];
  subject?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "books" */
export type BooksBook_ChaptersArgs = {
  distinct_on?: Maybe<Array<Books_Chapters_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Books_Chapters_Order_By>>;
  where?: Maybe<Books_Chapters_Bool_Exp>;
};


/** columns and relationships of "books" */
export type BooksBook_Chapters_AggregateArgs = {
  distinct_on?: Maybe<Array<Books_Chapters_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Books_Chapters_Order_By>>;
  where?: Maybe<Books_Chapters_Bool_Exp>;
};


/** columns and relationships of "books" */
export type BooksCourse_BooksArgs = {
  distinct_on?: Maybe<Array<Courses_Books_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Books_Order_By>>;
  where?: Maybe<Courses_Books_Bool_Exp>;
};


/** columns and relationships of "books" */
export type BooksCourse_Books_AggregateArgs = {
  distinct_on?: Maybe<Array<Courses_Books_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Books_Order_By>>;
  where?: Maybe<Courses_Books_Bool_Exp>;
};

/** aggregated selection of "books" */
export type Books_Aggregate = {
  aggregate?: Maybe<Books_Aggregate_Fields>;
  nodes: Array<Books>;
};

/** aggregate fields of "books" */
export type Books_Aggregate_Fields = {
  avg?: Maybe<Books_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Books_Max_Fields>;
  min?: Maybe<Books_Min_Fields>;
  stddev?: Maybe<Books_Stddev_Fields>;
  stddev_pop?: Maybe<Books_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Books_Stddev_Samp_Fields>;
  sum?: Maybe<Books_Sum_Fields>;
  var_pop?: Maybe<Books_Var_Pop_Fields>;
  var_samp?: Maybe<Books_Var_Samp_Fields>;
  variance?: Maybe<Books_Variance_Fields>;
};


/** aggregate fields of "books" */
export type Books_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Books_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "books" */
export type Books_Aggregate_Order_By = {
  avg?: Maybe<Books_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Books_Max_Order_By>;
  min?: Maybe<Books_Min_Order_By>;
  stddev?: Maybe<Books_Stddev_Order_By>;
  stddev_pop?: Maybe<Books_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Books_Stddev_Samp_Order_By>;
  sum?: Maybe<Books_Sum_Order_By>;
  var_pop?: Maybe<Books_Var_Pop_Order_By>;
  var_samp?: Maybe<Books_Var_Samp_Order_By>;
  variance?: Maybe<Books_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "books" */
export type Books_Arr_Rel_Insert_Input = {
  data: Array<Books_Insert_Input>;
  on_conflict?: Maybe<Books_On_Conflict>;
};

/** aggregate avg on columns */
export type Books_Avg_Fields = {
  current_chapter_display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "books" */
export type Books_Avg_Order_By = {
  current_chapter_display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "books". All fields are combined with a logical 'AND'. */
export type Books_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Books_Bool_Exp>>>;
  _not?: Maybe<Books_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Books_Bool_Exp>>>;
  book_chapters?: Maybe<Books_Chapters_Bool_Exp>;
  book_id?: Maybe<String_Comparison_Exp>;
  copied_from?: Maybe<String_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  course_books?: Maybe<Courses_Books_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  current_chapter_display_order?: Maybe<Int_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  grade?: Maybe<Smallint_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  school?: Maybe<Schools_Bool_Exp>;
  school_id?: Maybe<Int_Comparison_Exp>;
  subject?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** columns and relationships of "books_chapters" */
export type Books_Chapters = {
  /** An object relationship */
  book?: Maybe<Books>;
  book_id: Scalars['String'];
  /** An object relationship */
  chapter?: Maybe<Chapters>;
  chapter_id: Scalars['String'];
  /** An object relationship */
  course_book?: Maybe<Courses_Books>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "books_chapters" */
export type Books_Chapters_Aggregate = {
  aggregate?: Maybe<Books_Chapters_Aggregate_Fields>;
  nodes: Array<Books_Chapters>;
};

/** aggregate fields of "books_chapters" */
export type Books_Chapters_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Books_Chapters_Max_Fields>;
  min?: Maybe<Books_Chapters_Min_Fields>;
};


/** aggregate fields of "books_chapters" */
export type Books_Chapters_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Books_Chapters_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "books_chapters" */
export type Books_Chapters_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Books_Chapters_Max_Order_By>;
  min?: Maybe<Books_Chapters_Min_Order_By>;
};

/** input type for inserting array relation for remote table "books_chapters" */
export type Books_Chapters_Arr_Rel_Insert_Input = {
  data: Array<Books_Chapters_Insert_Input>;
  on_conflict?: Maybe<Books_Chapters_On_Conflict>;
};

/** Boolean expression to filter rows from the table "books_chapters". All fields are combined with a logical 'AND'. */
export type Books_Chapters_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Books_Chapters_Bool_Exp>>>;
  _not?: Maybe<Books_Chapters_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Books_Chapters_Bool_Exp>>>;
  book?: Maybe<Books_Bool_Exp>;
  book_id?: Maybe<String_Comparison_Exp>;
  chapter?: Maybe<Chapters_Bool_Exp>;
  chapter_id?: Maybe<String_Comparison_Exp>;
  course_book?: Maybe<Courses_Books_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "books_chapters" */
export enum Books_Chapters_Constraint {
  /** unique or primary key constraint */
  BooksChaptersPk = 'books_chapters_pk'
}

/** input type for inserting data into table "books_chapters" */
export type Books_Chapters_Insert_Input = {
  book?: Maybe<Books_Obj_Rel_Insert_Input>;
  book_id?: Maybe<Scalars['String']>;
  chapter?: Maybe<Chapters_Obj_Rel_Insert_Input>;
  chapter_id?: Maybe<Scalars['String']>;
  course_book?: Maybe<Courses_Books_Obj_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Books_Chapters_Max_Fields = {
  book_id?: Maybe<Scalars['String']>;
  chapter_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "books_chapters" */
export type Books_Chapters_Max_Order_By = {
  book_id?: Maybe<Order_By>;
  chapter_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Books_Chapters_Min_Fields = {
  book_id?: Maybe<Scalars['String']>;
  chapter_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "books_chapters" */
export type Books_Chapters_Min_Order_By = {
  book_id?: Maybe<Order_By>;
  chapter_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "books_chapters" */
export type Books_Chapters_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Books_Chapters>;
};

/** input type for inserting object relation for remote table "books_chapters" */
export type Books_Chapters_Obj_Rel_Insert_Input = {
  data: Books_Chapters_Insert_Input;
  on_conflict?: Maybe<Books_Chapters_On_Conflict>;
};

/** on conflict condition type for table "books_chapters" */
export type Books_Chapters_On_Conflict = {
  constraint: Books_Chapters_Constraint;
  update_columns: Array<Books_Chapters_Update_Column>;
  where?: Maybe<Books_Chapters_Bool_Exp>;
};

/** ordering options when selecting data from "books_chapters" */
export type Books_Chapters_Order_By = {
  book?: Maybe<Books_Order_By>;
  book_id?: Maybe<Order_By>;
  chapter?: Maybe<Chapters_Order_By>;
  chapter_id?: Maybe<Order_By>;
  course_book?: Maybe<Courses_Books_Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "books_chapters" */
export type Books_Chapters_Pk_Columns_Input = {
  book_id: Scalars['String'];
  chapter_id: Scalars['String'];
};

/** select columns of table "books_chapters" */
export enum Books_Chapters_Select_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  ChapterId = 'chapter_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "books_chapters" */
export type Books_Chapters_Set_Input = {
  book_id?: Maybe<Scalars['String']>;
  chapter_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "books_chapters" */
export enum Books_Chapters_Update_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  ChapterId = 'chapter_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** unique or primary key constraints on table "books" */
export enum Books_Constraint {
  /** unique or primary key constraint */
  BooksPk = 'books_pk'
}

/** input type for incrementing integer column in table "books" */
export type Books_Inc_Input = {
  current_chapter_display_order?: Maybe<Scalars['Int']>;
  grade?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "books" */
export type Books_Insert_Input = {
  book_chapters?: Maybe<Books_Chapters_Arr_Rel_Insert_Input>;
  book_id?: Maybe<Scalars['String']>;
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  course_books?: Maybe<Courses_Books_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_chapter_display_order?: Maybe<Scalars['Int']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school?: Maybe<Schools_Obj_Rel_Insert_Input>;
  school_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Books_Max_Fields = {
  book_id?: Maybe<Scalars['String']>;
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_chapter_display_order?: Maybe<Scalars['Int']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "books" */
export type Books_Max_Order_By = {
  book_id?: Maybe<Order_By>;
  copied_from?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  current_chapter_display_order?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Books_Min_Fields = {
  book_id?: Maybe<Scalars['String']>;
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_chapter_display_order?: Maybe<Scalars['Int']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "books" */
export type Books_Min_Order_By = {
  book_id?: Maybe<Order_By>;
  copied_from?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  current_chapter_display_order?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "books" */
export type Books_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Books>;
};

/** input type for inserting object relation for remote table "books" */
export type Books_Obj_Rel_Insert_Input = {
  data: Books_Insert_Input;
  on_conflict?: Maybe<Books_On_Conflict>;
};

/** on conflict condition type for table "books" */
export type Books_On_Conflict = {
  constraint: Books_Constraint;
  update_columns: Array<Books_Update_Column>;
  where?: Maybe<Books_Bool_Exp>;
};

/** ordering options when selecting data from "books" */
export type Books_Order_By = {
  book_chapters_aggregate?: Maybe<Books_Chapters_Aggregate_Order_By>;
  book_id?: Maybe<Order_By>;
  copied_from?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  course_books_aggregate?: Maybe<Courses_Books_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  current_chapter_display_order?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school?: Maybe<Schools_Order_By>;
  school_id?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "books" */
export type Books_Pk_Columns_Input = {
  book_id: Scalars['String'];
};

/** select columns of table "books" */
export enum Books_Select_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  CopiedFrom = 'copied_from',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentChapterDisplayOrder = 'current_chapter_display_order',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Grade = 'grade',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "books" */
export type Books_Set_Input = {
  book_id?: Maybe<Scalars['String']>;
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_chapter_display_order?: Maybe<Scalars['Int']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Books_Stddev_Fields = {
  current_chapter_display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "books" */
export type Books_Stddev_Order_By = {
  current_chapter_display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Books_Stddev_Pop_Fields = {
  current_chapter_display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "books" */
export type Books_Stddev_Pop_Order_By = {
  current_chapter_display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Books_Stddev_Samp_Fields = {
  current_chapter_display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "books" */
export type Books_Stddev_Samp_Order_By = {
  current_chapter_display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Books_Sum_Fields = {
  current_chapter_display_order?: Maybe<Scalars['Int']>;
  grade?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "books" */
export type Books_Sum_Order_By = {
  current_chapter_display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** update columns of table "books" */
export enum Books_Update_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  CopiedFrom = 'copied_from',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentChapterDisplayOrder = 'current_chapter_display_order',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Grade = 'grade',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Books_Var_Pop_Fields = {
  current_chapter_display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "books" */
export type Books_Var_Pop_Order_By = {
  current_chapter_display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Books_Var_Samp_Fields = {
  current_chapter_display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "books" */
export type Books_Var_Samp_Order_By = {
  current_chapter_display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Books_Variance_Fields = {
  current_chapter_display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "books" */
export type Books_Variance_Order_By = {
  current_chapter_display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** columns and relationships of "brands" */
export type Brands = {
  academic_year_beginning: Scalars['timestamptz'];
  academic_year_end: Scalars['timestamptz'];
  brand_id: Scalars['String'];
  /** An array relationship */
  centers: Array<Centers>;
  /** An aggregated array relationship */
  centers_aggregate: Centers_Aggregate;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name: Scalars['String'];
  /** An object relationship */
  org: Orgs;
  org_id: Scalars['String'];
  owner?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An array relationship */
  scheduler_items: Array<Scheduler_Items>;
  /** An aggregated array relationship */
  scheduler_items_aggregate: Scheduler_Items_Aggregate;
  /** An array relationship */
  scheduler_patterns: Array<Scheduler_Patterns>;
  /** An aggregated array relationship */
  scheduler_patterns_aggregate: Scheduler_Patterns_Aggregate;
  scheduler_release_status?: Maybe<Scalars['String']>;
  time_zone?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "brands" */
export type BrandsCentersArgs = {
  distinct_on?: Maybe<Array<Centers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Centers_Order_By>>;
  where?: Maybe<Centers_Bool_Exp>;
};


/** columns and relationships of "brands" */
export type BrandsCenters_AggregateArgs = {
  distinct_on?: Maybe<Array<Centers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Centers_Order_By>>;
  where?: Maybe<Centers_Bool_Exp>;
};


/** columns and relationships of "brands" */
export type BrandsScheduler_ItemsArgs = {
  distinct_on?: Maybe<Array<Scheduler_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Items_Order_By>>;
  where?: Maybe<Scheduler_Items_Bool_Exp>;
};


/** columns and relationships of "brands" */
export type BrandsScheduler_Items_AggregateArgs = {
  distinct_on?: Maybe<Array<Scheduler_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Items_Order_By>>;
  where?: Maybe<Scheduler_Items_Bool_Exp>;
};


/** columns and relationships of "brands" */
export type BrandsScheduler_PatternsArgs = {
  distinct_on?: Maybe<Array<Scheduler_Patterns_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Patterns_Order_By>>;
  where?: Maybe<Scheduler_Patterns_Bool_Exp>;
};


/** columns and relationships of "brands" */
export type BrandsScheduler_Patterns_AggregateArgs = {
  distinct_on?: Maybe<Array<Scheduler_Patterns_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Patterns_Order_By>>;
  where?: Maybe<Scheduler_Patterns_Bool_Exp>;
};

/** aggregated selection of "brands" */
export type Brands_Aggregate = {
  aggregate?: Maybe<Brands_Aggregate_Fields>;
  nodes: Array<Brands>;
};

/** aggregate fields of "brands" */
export type Brands_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Brands_Max_Fields>;
  min?: Maybe<Brands_Min_Fields>;
};


/** aggregate fields of "brands" */
export type Brands_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Brands_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "brands" */
export type Brands_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Brands_Max_Order_By>;
  min?: Maybe<Brands_Min_Order_By>;
};

/** input type for inserting array relation for remote table "brands" */
export type Brands_Arr_Rel_Insert_Input = {
  data: Array<Brands_Insert_Input>;
  on_conflict?: Maybe<Brands_On_Conflict>;
};

/** Boolean expression to filter rows from the table "brands". All fields are combined with a logical 'AND'. */
export type Brands_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Brands_Bool_Exp>>>;
  _not?: Maybe<Brands_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Brands_Bool_Exp>>>;
  academic_year_beginning?: Maybe<Timestamptz_Comparison_Exp>;
  academic_year_end?: Maybe<Timestamptz_Comparison_Exp>;
  brand_id?: Maybe<String_Comparison_Exp>;
  centers?: Maybe<Centers_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  org?: Maybe<Orgs_Bool_Exp>;
  org_id?: Maybe<String_Comparison_Exp>;
  owner?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  scheduler_items?: Maybe<Scheduler_Items_Bool_Exp>;
  scheduler_patterns?: Maybe<Scheduler_Patterns_Bool_Exp>;
  scheduler_release_status?: Maybe<String_Comparison_Exp>;
  time_zone?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "brands" */
export enum Brands_Constraint {
  /** unique or primary key constraint */
  BrandsPk = 'brands_pk',
  /** unique or primary key constraint */
  BrandsUn = 'brands_un'
}

/** input type for inserting data into table "brands" */
export type Brands_Insert_Input = {
  academic_year_beginning?: Maybe<Scalars['timestamptz']>;
  academic_year_end?: Maybe<Scalars['timestamptz']>;
  brand_id?: Maybe<Scalars['String']>;
  centers?: Maybe<Centers_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  org?: Maybe<Orgs_Obj_Rel_Insert_Input>;
  org_id?: Maybe<Scalars['String']>;
  owner?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduler_items?: Maybe<Scheduler_Items_Arr_Rel_Insert_Input>;
  scheduler_patterns?: Maybe<Scheduler_Patterns_Arr_Rel_Insert_Input>;
  scheduler_release_status?: Maybe<Scalars['String']>;
  time_zone?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Brands_Max_Fields = {
  academic_year_beginning?: Maybe<Scalars['timestamptz']>;
  academic_year_end?: Maybe<Scalars['timestamptz']>;
  brand_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  org_id?: Maybe<Scalars['String']>;
  owner?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduler_release_status?: Maybe<Scalars['String']>;
  time_zone?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "brands" */
export type Brands_Max_Order_By = {
  academic_year_beginning?: Maybe<Order_By>;
  academic_year_end?: Maybe<Order_By>;
  brand_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  org_id?: Maybe<Order_By>;
  owner?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  scheduler_release_status?: Maybe<Order_By>;
  time_zone?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Brands_Min_Fields = {
  academic_year_beginning?: Maybe<Scalars['timestamptz']>;
  academic_year_end?: Maybe<Scalars['timestamptz']>;
  brand_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  org_id?: Maybe<Scalars['String']>;
  owner?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduler_release_status?: Maybe<Scalars['String']>;
  time_zone?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "brands" */
export type Brands_Min_Order_By = {
  academic_year_beginning?: Maybe<Order_By>;
  academic_year_end?: Maybe<Order_By>;
  brand_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  org_id?: Maybe<Order_By>;
  owner?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  scheduler_release_status?: Maybe<Order_By>;
  time_zone?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "brands" */
export type Brands_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Brands>;
};

/** input type for inserting object relation for remote table "brands" */
export type Brands_Obj_Rel_Insert_Input = {
  data: Brands_Insert_Input;
  on_conflict?: Maybe<Brands_On_Conflict>;
};

/** on conflict condition type for table "brands" */
export type Brands_On_Conflict = {
  constraint: Brands_Constraint;
  update_columns: Array<Brands_Update_Column>;
  where?: Maybe<Brands_Bool_Exp>;
};

/** ordering options when selecting data from "brands" */
export type Brands_Order_By = {
  academic_year_beginning?: Maybe<Order_By>;
  academic_year_end?: Maybe<Order_By>;
  brand_id?: Maybe<Order_By>;
  centers_aggregate?: Maybe<Centers_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  org?: Maybe<Orgs_Order_By>;
  org_id?: Maybe<Order_By>;
  owner?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  scheduler_items_aggregate?: Maybe<Scheduler_Items_Aggregate_Order_By>;
  scheduler_patterns_aggregate?: Maybe<Scheduler_Patterns_Aggregate_Order_By>;
  scheduler_release_status?: Maybe<Order_By>;
  time_zone?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "brands" */
export type Brands_Pk_Columns_Input = {
  brand_id: Scalars['String'];
};

/** select columns of table "brands" */
export enum Brands_Select_Column {
  /** column name */
  AcademicYearBeginning = 'academic_year_beginning',
  /** column name */
  AcademicYearEnd = 'academic_year_end',
  /** column name */
  BrandId = 'brand_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Name = 'name',
  /** column name */
  OrgId = 'org_id',
  /** column name */
  Owner = 'owner',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchedulerReleaseStatus = 'scheduler_release_status',
  /** column name */
  TimeZone = 'time_zone',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "brands" */
export type Brands_Set_Input = {
  academic_year_beginning?: Maybe<Scalars['timestamptz']>;
  academic_year_end?: Maybe<Scalars['timestamptz']>;
  brand_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  org_id?: Maybe<Scalars['String']>;
  owner?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduler_release_status?: Maybe<Scalars['String']>;
  time_zone?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "brands" */
export enum Brands_Update_Column {
  /** column name */
  AcademicYearBeginning = 'academic_year_beginning',
  /** column name */
  AcademicYearEnd = 'academic_year_end',
  /** column name */
  BrandId = 'brand_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Name = 'name',
  /** column name */
  OrgId = 'org_id',
  /** column name */
  Owner = 'owner',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchedulerReleaseStatus = 'scheduler_release_status',
  /** column name */
  TimeZone = 'time_zone',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "centers" */
export type Centers = {
  brand_id: Scalars['String'];
  /** An object relationship */
  brands: Brands;
  center_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name: Scalars['String'];
  owner?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An array relationship */
  scheduler_items: Array<Scheduler_Items>;
  /** An aggregated array relationship */
  scheduler_items_aggregate: Scheduler_Items_Aggregate;
  /** An array relationship */
  scheduler_patterns: Array<Scheduler_Patterns>;
  /** An aggregated array relationship */
  scheduler_patterns_aggregate: Scheduler_Patterns_Aggregate;
  time_zone?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "centers" */
export type CentersScheduler_ItemsArgs = {
  distinct_on?: Maybe<Array<Scheduler_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Items_Order_By>>;
  where?: Maybe<Scheduler_Items_Bool_Exp>;
};


/** columns and relationships of "centers" */
export type CentersScheduler_Items_AggregateArgs = {
  distinct_on?: Maybe<Array<Scheduler_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Items_Order_By>>;
  where?: Maybe<Scheduler_Items_Bool_Exp>;
};


/** columns and relationships of "centers" */
export type CentersScheduler_PatternsArgs = {
  distinct_on?: Maybe<Array<Scheduler_Patterns_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Patterns_Order_By>>;
  where?: Maybe<Scheduler_Patterns_Bool_Exp>;
};


/** columns and relationships of "centers" */
export type CentersScheduler_Patterns_AggregateArgs = {
  distinct_on?: Maybe<Array<Scheduler_Patterns_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Patterns_Order_By>>;
  where?: Maybe<Scheduler_Patterns_Bool_Exp>;
};

/** aggregated selection of "centers" */
export type Centers_Aggregate = {
  aggregate?: Maybe<Centers_Aggregate_Fields>;
  nodes: Array<Centers>;
};

/** aggregate fields of "centers" */
export type Centers_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Centers_Max_Fields>;
  min?: Maybe<Centers_Min_Fields>;
};


/** aggregate fields of "centers" */
export type Centers_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Centers_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "centers" */
export type Centers_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Centers_Max_Order_By>;
  min?: Maybe<Centers_Min_Order_By>;
};

/** input type for inserting array relation for remote table "centers" */
export type Centers_Arr_Rel_Insert_Input = {
  data: Array<Centers_Insert_Input>;
  on_conflict?: Maybe<Centers_On_Conflict>;
};

/** Boolean expression to filter rows from the table "centers". All fields are combined with a logical 'AND'. */
export type Centers_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Centers_Bool_Exp>>>;
  _not?: Maybe<Centers_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Centers_Bool_Exp>>>;
  brand_id?: Maybe<String_Comparison_Exp>;
  brands?: Maybe<Brands_Bool_Exp>;
  center_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  owner?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  scheduler_items?: Maybe<Scheduler_Items_Bool_Exp>;
  scheduler_patterns?: Maybe<Scheduler_Patterns_Bool_Exp>;
  time_zone?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "centers" */
export enum Centers_Constraint {
  /** unique or primary key constraint */
  CentersPk = 'centers_pk',
  /** unique or primary key constraint */
  CentersUn = 'centers_un'
}

/** input type for inserting data into table "centers" */
export type Centers_Insert_Input = {
  brand_id?: Maybe<Scalars['String']>;
  brands?: Maybe<Brands_Obj_Rel_Insert_Input>;
  center_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  owner?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduler_items?: Maybe<Scheduler_Items_Arr_Rel_Insert_Input>;
  scheduler_patterns?: Maybe<Scheduler_Patterns_Arr_Rel_Insert_Input>;
  time_zone?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Centers_Max_Fields = {
  brand_id?: Maybe<Scalars['String']>;
  center_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  owner?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  time_zone?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "centers" */
export type Centers_Max_Order_By = {
  brand_id?: Maybe<Order_By>;
  center_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  owner?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  time_zone?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Centers_Min_Fields = {
  brand_id?: Maybe<Scalars['String']>;
  center_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  owner?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  time_zone?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "centers" */
export type Centers_Min_Order_By = {
  brand_id?: Maybe<Order_By>;
  center_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  owner?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  time_zone?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "centers" */
export type Centers_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Centers>;
};

/** input type for inserting object relation for remote table "centers" */
export type Centers_Obj_Rel_Insert_Input = {
  data: Centers_Insert_Input;
  on_conflict?: Maybe<Centers_On_Conflict>;
};

/** on conflict condition type for table "centers" */
export type Centers_On_Conflict = {
  constraint: Centers_Constraint;
  update_columns: Array<Centers_Update_Column>;
  where?: Maybe<Centers_Bool_Exp>;
};

/** ordering options when selecting data from "centers" */
export type Centers_Order_By = {
  brand_id?: Maybe<Order_By>;
  brands?: Maybe<Brands_Order_By>;
  center_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  owner?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  scheduler_items_aggregate?: Maybe<Scheduler_Items_Aggregate_Order_By>;
  scheduler_patterns_aggregate?: Maybe<Scheduler_Patterns_Aggregate_Order_By>;
  time_zone?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "centers" */
export type Centers_Pk_Columns_Input = {
  center_id: Scalars['String'];
};

/** select columns of table "centers" */
export enum Centers_Select_Column {
  /** column name */
  BrandId = 'brand_id',
  /** column name */
  CenterId = 'center_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Name = 'name',
  /** column name */
  Owner = 'owner',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TimeZone = 'time_zone',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "centers" */
export type Centers_Set_Input = {
  brand_id?: Maybe<Scalars['String']>;
  center_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  owner?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  time_zone?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "centers" */
export enum Centers_Update_Column {
  /** column name */
  BrandId = 'brand_id',
  /** column name */
  CenterId = 'center_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Name = 'name',
  /** column name */
  Owner = 'owner',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TimeZone = 'time_zone',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "chapters" */
export type Chapters = {
  /** An array relationship */
  book_chapters: Array<Books_Chapters>;
  /** An aggregated array relationship */
  book_chapters_aggregate: Books_Chapters_Aggregate;
  chapter_id: Scalars['String'];
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  current_topic_display_order?: Maybe<Scalars['Int']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  name: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  school: Schools;
  school_id: Scalars['Int'];
  subject?: Maybe<Scalars['String']>;
  /** An array relationship */
  topics: Array<Topics>;
  /** An aggregated array relationship */
  topics_aggregate: Topics_Aggregate;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "chapters" */
export type ChaptersBook_ChaptersArgs = {
  distinct_on?: Maybe<Array<Books_Chapters_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Books_Chapters_Order_By>>;
  where?: Maybe<Books_Chapters_Bool_Exp>;
};


/** columns and relationships of "chapters" */
export type ChaptersBook_Chapters_AggregateArgs = {
  distinct_on?: Maybe<Array<Books_Chapters_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Books_Chapters_Order_By>>;
  where?: Maybe<Books_Chapters_Bool_Exp>;
};


/** columns and relationships of "chapters" */
export type ChaptersTopicsArgs = {
  distinct_on?: Maybe<Array<Topics_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Topics_Order_By>>;
  where?: Maybe<Topics_Bool_Exp>;
};


/** columns and relationships of "chapters" */
export type ChaptersTopics_AggregateArgs = {
  distinct_on?: Maybe<Array<Topics_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Topics_Order_By>>;
  where?: Maybe<Topics_Bool_Exp>;
};

/** aggregated selection of "chapters" */
export type Chapters_Aggregate = {
  aggregate?: Maybe<Chapters_Aggregate_Fields>;
  nodes: Array<Chapters>;
};

/** aggregate fields of "chapters" */
export type Chapters_Aggregate_Fields = {
  avg?: Maybe<Chapters_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Chapters_Max_Fields>;
  min?: Maybe<Chapters_Min_Fields>;
  stddev?: Maybe<Chapters_Stddev_Fields>;
  stddev_pop?: Maybe<Chapters_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Chapters_Stddev_Samp_Fields>;
  sum?: Maybe<Chapters_Sum_Fields>;
  var_pop?: Maybe<Chapters_Var_Pop_Fields>;
  var_samp?: Maybe<Chapters_Var_Samp_Fields>;
  variance?: Maybe<Chapters_Variance_Fields>;
};


/** aggregate fields of "chapters" */
export type Chapters_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Chapters_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "chapters" */
export type Chapters_Aggregate_Order_By = {
  avg?: Maybe<Chapters_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Chapters_Max_Order_By>;
  min?: Maybe<Chapters_Min_Order_By>;
  stddev?: Maybe<Chapters_Stddev_Order_By>;
  stddev_pop?: Maybe<Chapters_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Chapters_Stddev_Samp_Order_By>;
  sum?: Maybe<Chapters_Sum_Order_By>;
  var_pop?: Maybe<Chapters_Var_Pop_Order_By>;
  var_samp?: Maybe<Chapters_Var_Samp_Order_By>;
  variance?: Maybe<Chapters_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "chapters" */
export type Chapters_Arr_Rel_Insert_Input = {
  data: Array<Chapters_Insert_Input>;
  on_conflict?: Maybe<Chapters_On_Conflict>;
};

/** aggregate avg on columns */
export type Chapters_Avg_Fields = {
  current_topic_display_order?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "chapters" */
export type Chapters_Avg_Order_By = {
  current_topic_display_order?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "chapters". All fields are combined with a logical 'AND'. */
export type Chapters_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Chapters_Bool_Exp>>>;
  _not?: Maybe<Chapters_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Chapters_Bool_Exp>>>;
  book_chapters?: Maybe<Books_Chapters_Bool_Exp>;
  chapter_id?: Maybe<String_Comparison_Exp>;
  copied_from?: Maybe<String_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  current_topic_display_order?: Maybe<Int_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  display_order?: Maybe<Smallint_Comparison_Exp>;
  grade?: Maybe<Smallint_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  school?: Maybe<Schools_Bool_Exp>;
  school_id?: Maybe<Int_Comparison_Exp>;
  subject?: Maybe<String_Comparison_Exp>;
  topics?: Maybe<Topics_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "chapters" */
export enum Chapters_Constraint {
  /** unique or primary key constraint */
  ChaptersPk = 'chapters_pk'
}

/** input type for incrementing integer column in table "chapters" */
export type Chapters_Inc_Input = {
  current_topic_display_order?: Maybe<Scalars['Int']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "chapters" */
export type Chapters_Insert_Input = {
  book_chapters?: Maybe<Books_Chapters_Arr_Rel_Insert_Input>;
  chapter_id?: Maybe<Scalars['String']>;
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_topic_display_order?: Maybe<Scalars['Int']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school?: Maybe<Schools_Obj_Rel_Insert_Input>;
  school_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  topics?: Maybe<Topics_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Chapters_Max_Fields = {
  chapter_id?: Maybe<Scalars['String']>;
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_topic_display_order?: Maybe<Scalars['Int']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "chapters" */
export type Chapters_Max_Order_By = {
  chapter_id?: Maybe<Order_By>;
  copied_from?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  current_topic_display_order?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Chapters_Min_Fields = {
  chapter_id?: Maybe<Scalars['String']>;
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_topic_display_order?: Maybe<Scalars['Int']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "chapters" */
export type Chapters_Min_Order_By = {
  chapter_id?: Maybe<Order_By>;
  copied_from?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  current_topic_display_order?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "chapters" */
export type Chapters_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Chapters>;
};

/** input type for inserting object relation for remote table "chapters" */
export type Chapters_Obj_Rel_Insert_Input = {
  data: Chapters_Insert_Input;
  on_conflict?: Maybe<Chapters_On_Conflict>;
};

/** on conflict condition type for table "chapters" */
export type Chapters_On_Conflict = {
  constraint: Chapters_Constraint;
  update_columns: Array<Chapters_Update_Column>;
  where?: Maybe<Chapters_Bool_Exp>;
};

/** ordering options when selecting data from "chapters" */
export type Chapters_Order_By = {
  book_chapters_aggregate?: Maybe<Books_Chapters_Aggregate_Order_By>;
  chapter_id?: Maybe<Order_By>;
  copied_from?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  current_topic_display_order?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school?: Maybe<Schools_Order_By>;
  school_id?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  topics_aggregate?: Maybe<Topics_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "chapters" */
export type Chapters_Pk_Columns_Input = {
  chapter_id: Scalars['String'];
};

/** select columns of table "chapters" */
export enum Chapters_Select_Column {
  /** column name */
  ChapterId = 'chapter_id',
  /** column name */
  CopiedFrom = 'copied_from',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentTopicDisplayOrder = 'current_topic_display_order',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  Grade = 'grade',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "chapters" */
export type Chapters_Set_Input = {
  chapter_id?: Maybe<Scalars['String']>;
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_topic_display_order?: Maybe<Scalars['Int']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Chapters_Stddev_Fields = {
  current_topic_display_order?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "chapters" */
export type Chapters_Stddev_Order_By = {
  current_topic_display_order?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Chapters_Stddev_Pop_Fields = {
  current_topic_display_order?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "chapters" */
export type Chapters_Stddev_Pop_Order_By = {
  current_topic_display_order?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Chapters_Stddev_Samp_Fields = {
  current_topic_display_order?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "chapters" */
export type Chapters_Stddev_Samp_Order_By = {
  current_topic_display_order?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Chapters_Sum_Fields = {
  current_topic_display_order?: Maybe<Scalars['Int']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "chapters" */
export type Chapters_Sum_Order_By = {
  current_topic_display_order?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** update columns of table "chapters" */
export enum Chapters_Update_Column {
  /** column name */
  ChapterId = 'chapter_id',
  /** column name */
  CopiedFrom = 'copied_from',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentTopicDisplayOrder = 'current_topic_display_order',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  Grade = 'grade',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Chapters_Var_Pop_Fields = {
  current_topic_display_order?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "chapters" */
export type Chapters_Var_Pop_Order_By = {
  current_topic_display_order?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Chapters_Var_Samp_Fields = {
  current_topic_display_order?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "chapters" */
export type Chapters_Var_Samp_Order_By = {
  current_topic_display_order?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Chapters_Variance_Fields = {
  current_topic_display_order?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "chapters" */
export type Chapters_Variance_Order_By = {
  current_topic_display_order?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** columns and relationships of "cities" */
export type Cities = {
  city_id: Scalars['Int'];
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order: Scalars['smallint'];
  /** An array relationship */
  districts: Array<Districts>;
  /** An aggregated array relationship */
  districts_aggregate: Districts_Aggregate;
  name: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  /** An array relationship */
  schools: Array<Schools>;
  /** An aggregated array relationship */
  schools_aggregate: Schools_Aggregate;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "cities" */
export type CitiesDistrictsArgs = {
  distinct_on?: Maybe<Array<Districts_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Districts_Order_By>>;
  where?: Maybe<Districts_Bool_Exp>;
};


/** columns and relationships of "cities" */
export type CitiesDistricts_AggregateArgs = {
  distinct_on?: Maybe<Array<Districts_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Districts_Order_By>>;
  where?: Maybe<Districts_Bool_Exp>;
};


/** columns and relationships of "cities" */
export type CitiesSchoolsArgs = {
  distinct_on?: Maybe<Array<Schools_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Schools_Order_By>>;
  where?: Maybe<Schools_Bool_Exp>;
};


/** columns and relationships of "cities" */
export type CitiesSchools_AggregateArgs = {
  distinct_on?: Maybe<Array<Schools_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Schools_Order_By>>;
  where?: Maybe<Schools_Bool_Exp>;
};

/** aggregated selection of "cities" */
export type Cities_Aggregate = {
  aggregate?: Maybe<Cities_Aggregate_Fields>;
  nodes: Array<Cities>;
};

/** aggregate fields of "cities" */
export type Cities_Aggregate_Fields = {
  avg?: Maybe<Cities_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Cities_Max_Fields>;
  min?: Maybe<Cities_Min_Fields>;
  stddev?: Maybe<Cities_Stddev_Fields>;
  stddev_pop?: Maybe<Cities_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Cities_Stddev_Samp_Fields>;
  sum?: Maybe<Cities_Sum_Fields>;
  var_pop?: Maybe<Cities_Var_Pop_Fields>;
  var_samp?: Maybe<Cities_Var_Samp_Fields>;
  variance?: Maybe<Cities_Variance_Fields>;
};


/** aggregate fields of "cities" */
export type Cities_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Cities_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "cities" */
export type Cities_Aggregate_Order_By = {
  avg?: Maybe<Cities_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Cities_Max_Order_By>;
  min?: Maybe<Cities_Min_Order_By>;
  stddev?: Maybe<Cities_Stddev_Order_By>;
  stddev_pop?: Maybe<Cities_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Cities_Stddev_Samp_Order_By>;
  sum?: Maybe<Cities_Sum_Order_By>;
  var_pop?: Maybe<Cities_Var_Pop_Order_By>;
  var_samp?: Maybe<Cities_Var_Samp_Order_By>;
  variance?: Maybe<Cities_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "cities" */
export type Cities_Arr_Rel_Insert_Input = {
  data: Array<Cities_Insert_Input>;
  on_conflict?: Maybe<Cities_On_Conflict>;
};

/** aggregate avg on columns */
export type Cities_Avg_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "cities" */
export type Cities_Avg_Order_By = {
  city_id?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "cities". All fields are combined with a logical 'AND'. */
export type Cities_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Cities_Bool_Exp>>>;
  _not?: Maybe<Cities_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Cities_Bool_Exp>>>;
  city_id?: Maybe<Int_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  display_order?: Maybe<Smallint_Comparison_Exp>;
  districts?: Maybe<Districts_Bool_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  schools?: Maybe<Schools_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "cities" */
export enum Cities_Constraint {
  /** unique or primary key constraint */
  CityPk = 'city_pk',
  /** unique or primary key constraint */
  CityUn = 'city_un'
}

/** input type for incrementing integer column in table "cities" */
export type Cities_Inc_Input = {
  city_id?: Maybe<Scalars['Int']>;
  display_order?: Maybe<Scalars['smallint']>;
};

/** input type for inserting data into table "cities" */
export type Cities_Insert_Input = {
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  districts?: Maybe<Districts_Arr_Rel_Insert_Input>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  schools?: Maybe<Schools_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Cities_Max_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "cities" */
export type Cities_Max_Order_By = {
  city_id?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Cities_Min_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "cities" */
export type Cities_Min_Order_By = {
  city_id?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "cities" */
export type Cities_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Cities>;
};

/** input type for inserting object relation for remote table "cities" */
export type Cities_Obj_Rel_Insert_Input = {
  data: Cities_Insert_Input;
  on_conflict?: Maybe<Cities_On_Conflict>;
};

/** on conflict condition type for table "cities" */
export type Cities_On_Conflict = {
  constraint: Cities_Constraint;
  update_columns: Array<Cities_Update_Column>;
  where?: Maybe<Cities_Bool_Exp>;
};

/** ordering options when selecting data from "cities" */
export type Cities_Order_By = {
  city_id?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  districts_aggregate?: Maybe<Districts_Aggregate_Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  schools_aggregate?: Maybe<Schools_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "cities" */
export type Cities_Pk_Columns_Input = {
  city_id: Scalars['Int'];
};

/** select columns of table "cities" */
export enum Cities_Select_Column {
  /** column name */
  CityId = 'city_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "cities" */
export type Cities_Set_Input = {
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Cities_Stddev_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "cities" */
export type Cities_Stddev_Order_By = {
  city_id?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Cities_Stddev_Pop_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "cities" */
export type Cities_Stddev_Pop_Order_By = {
  city_id?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Cities_Stddev_Samp_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "cities" */
export type Cities_Stddev_Samp_Order_By = {
  city_id?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Cities_Sum_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  display_order?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "cities" */
export type Cities_Sum_Order_By = {
  city_id?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
};

/** update columns of table "cities" */
export enum Cities_Update_Column {
  /** column name */
  CityId = 'city_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Cities_Var_Pop_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "cities" */
export type Cities_Var_Pop_Order_By = {
  city_id?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Cities_Var_Samp_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "cities" */
export type Cities_Var_Samp_Order_By = {
  city_id?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Cities_Variance_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "cities" */
export type Cities_Variance_Order_By = {
  city_id?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
};

/** columns and relationships of "class_members" */
export type Class_Members = {
  /** An object relationship */
  class: Classes;
  class_id: Scalars['Int'];
  class_member_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_owner: Scalars['Boolean'];
  resource_path?: Maybe<Scalars['String']>;
  status: Scalars['String'];
  /** An object relationship */
  student?: Maybe<Students>;
  /** An object relationship */
  student_subscription?: Maybe<Student_Subscriptions>;
  student_subscription_id?: Maybe<Scalars['String']>;
  /** An object relationship */
  teacher_by_school_id?: Maybe<Teacher_By_School_Id>;
  /** An object relationship */
  teachers?: Maybe<Teachers>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: Users;
  user_group: Scalars['String'];
  user_id: Scalars['String'];
};

/** aggregated selection of "class_members" */
export type Class_Members_Aggregate = {
  aggregate?: Maybe<Class_Members_Aggregate_Fields>;
  nodes: Array<Class_Members>;
};

/** aggregate fields of "class_members" */
export type Class_Members_Aggregate_Fields = {
  avg?: Maybe<Class_Members_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Class_Members_Max_Fields>;
  min?: Maybe<Class_Members_Min_Fields>;
  stddev?: Maybe<Class_Members_Stddev_Fields>;
  stddev_pop?: Maybe<Class_Members_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Class_Members_Stddev_Samp_Fields>;
  sum?: Maybe<Class_Members_Sum_Fields>;
  var_pop?: Maybe<Class_Members_Var_Pop_Fields>;
  var_samp?: Maybe<Class_Members_Var_Samp_Fields>;
  variance?: Maybe<Class_Members_Variance_Fields>;
};


/** aggregate fields of "class_members" */
export type Class_Members_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Class_Members_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "class_members" */
export type Class_Members_Aggregate_Order_By = {
  avg?: Maybe<Class_Members_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Class_Members_Max_Order_By>;
  min?: Maybe<Class_Members_Min_Order_By>;
  stddev?: Maybe<Class_Members_Stddev_Order_By>;
  stddev_pop?: Maybe<Class_Members_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Class_Members_Stddev_Samp_Order_By>;
  sum?: Maybe<Class_Members_Sum_Order_By>;
  var_pop?: Maybe<Class_Members_Var_Pop_Order_By>;
  var_samp?: Maybe<Class_Members_Var_Samp_Order_By>;
  variance?: Maybe<Class_Members_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "class_members" */
export type Class_Members_Arr_Rel_Insert_Input = {
  data: Array<Class_Members_Insert_Input>;
  on_conflict?: Maybe<Class_Members_On_Conflict>;
};

/** aggregate avg on columns */
export type Class_Members_Avg_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "class_members" */
export type Class_Members_Avg_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "class_members". All fields are combined with a logical 'AND'. */
export type Class_Members_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Class_Members_Bool_Exp>>>;
  _not?: Maybe<Class_Members_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Class_Members_Bool_Exp>>>;
  class?: Maybe<Classes_Bool_Exp>;
  class_id?: Maybe<Int_Comparison_Exp>;
  class_member_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  is_owner?: Maybe<Boolean_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_subscription?: Maybe<Student_Subscriptions_Bool_Exp>;
  student_subscription_id?: Maybe<String_Comparison_Exp>;
  teacher_by_school_id?: Maybe<Teacher_By_School_Id_Bool_Exp>;
  teachers?: Maybe<Teachers_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
  user_group?: Maybe<String_Comparison_Exp>;
  user_id?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "class_members" */
export enum Class_Members_Constraint {
  /** unique or primary key constraint */
  ClassMembersPk = 'class_members_pk'
}

/** input type for incrementing integer column in table "class_members" */
export type Class_Members_Inc_Input = {
  class_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "class_members" */
export type Class_Members_Insert_Input = {
  class?: Maybe<Classes_Obj_Rel_Insert_Input>;
  class_id?: Maybe<Scalars['Int']>;
  class_member_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_owner?: Maybe<Scalars['Boolean']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_subscription?: Maybe<Student_Subscriptions_Obj_Rel_Insert_Input>;
  student_subscription_id?: Maybe<Scalars['String']>;
  teachers?: Maybe<Teachers_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
  user_group?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Class_Members_Max_Fields = {
  class_id?: Maybe<Scalars['Int']>;
  class_member_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "class_members" */
export type Class_Members_Max_Order_By = {
  class_id?: Maybe<Order_By>;
  class_member_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_subscription_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_group?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Class_Members_Min_Fields = {
  class_id?: Maybe<Scalars['Int']>;
  class_member_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "class_members" */
export type Class_Members_Min_Order_By = {
  class_id?: Maybe<Order_By>;
  class_member_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_subscription_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_group?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "class_members" */
export type Class_Members_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Class_Members>;
};

/** input type for inserting object relation for remote table "class_members" */
export type Class_Members_Obj_Rel_Insert_Input = {
  data: Class_Members_Insert_Input;
  on_conflict?: Maybe<Class_Members_On_Conflict>;
};

/** on conflict condition type for table "class_members" */
export type Class_Members_On_Conflict = {
  constraint: Class_Members_Constraint;
  update_columns: Array<Class_Members_Update_Column>;
  where?: Maybe<Class_Members_Bool_Exp>;
};

/** ordering options when selecting data from "class_members" */
export type Class_Members_Order_By = {
  class?: Maybe<Classes_Order_By>;
  class_id?: Maybe<Order_By>;
  class_member_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  is_owner?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_subscription?: Maybe<Student_Subscriptions_Order_By>;
  student_subscription_id?: Maybe<Order_By>;
  teacher_by_school_id?: Maybe<Teacher_By_School_Id_Order_By>;
  teachers?: Maybe<Teachers_Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
  user_group?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: "class_members" */
export type Class_Members_Pk_Columns_Input = {
  class_member_id: Scalars['String'];
};

/** select columns of table "class_members" */
export enum Class_Members_Select_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  ClassMemberId = 'class_member_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsOwner = 'is_owner',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentSubscriptionId = 'student_subscription_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserGroup = 'user_group',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "class_members" */
export type Class_Members_Set_Input = {
  class_id?: Maybe<Scalars['Int']>;
  class_member_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_owner?: Maybe<Scalars['Boolean']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Class_Members_Stddev_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "class_members" */
export type Class_Members_Stddev_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Class_Members_Stddev_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "class_members" */
export type Class_Members_Stddev_Pop_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Class_Members_Stddev_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "class_members" */
export type Class_Members_Stddev_Samp_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Class_Members_Sum_Fields = {
  class_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "class_members" */
export type Class_Members_Sum_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** update columns of table "class_members" */
export enum Class_Members_Update_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  ClassMemberId = 'class_member_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsOwner = 'is_owner',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentSubscriptionId = 'student_subscription_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserGroup = 'user_group',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Class_Members_Var_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "class_members" */
export type Class_Members_Var_Pop_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Class_Members_Var_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "class_members" */
export type Class_Members_Var_Samp_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Class_Members_Variance_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "class_members" */
export type Class_Members_Variance_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** columns and relationships of "class_preset_study_plans" */
export type Class_Preset_Study_Plans = {
  class_id: Scalars['Int'];
  class_preset_study_plan_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  preset_study_plan: Preset_Study_Plans;
  preset_study_plan_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Aggregate = {
  aggregate?: Maybe<Class_Preset_Study_Plans_Aggregate_Fields>;
  nodes: Array<Class_Preset_Study_Plans>;
};

/** aggregate fields of "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Aggregate_Fields = {
  avg?: Maybe<Class_Preset_Study_Plans_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Class_Preset_Study_Plans_Max_Fields>;
  min?: Maybe<Class_Preset_Study_Plans_Min_Fields>;
  stddev?: Maybe<Class_Preset_Study_Plans_Stddev_Fields>;
  stddev_pop?: Maybe<Class_Preset_Study_Plans_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Class_Preset_Study_Plans_Stddev_Samp_Fields>;
  sum?: Maybe<Class_Preset_Study_Plans_Sum_Fields>;
  var_pop?: Maybe<Class_Preset_Study_Plans_Var_Pop_Fields>;
  var_samp?: Maybe<Class_Preset_Study_Plans_Var_Samp_Fields>;
  variance?: Maybe<Class_Preset_Study_Plans_Variance_Fields>;
};


/** aggregate fields of "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Class_Preset_Study_Plans_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Aggregate_Order_By = {
  avg?: Maybe<Class_Preset_Study_Plans_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Class_Preset_Study_Plans_Max_Order_By>;
  min?: Maybe<Class_Preset_Study_Plans_Min_Order_By>;
  stddev?: Maybe<Class_Preset_Study_Plans_Stddev_Order_By>;
  stddev_pop?: Maybe<Class_Preset_Study_Plans_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Class_Preset_Study_Plans_Stddev_Samp_Order_By>;
  sum?: Maybe<Class_Preset_Study_Plans_Sum_Order_By>;
  var_pop?: Maybe<Class_Preset_Study_Plans_Var_Pop_Order_By>;
  var_samp?: Maybe<Class_Preset_Study_Plans_Var_Samp_Order_By>;
  variance?: Maybe<Class_Preset_Study_Plans_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Arr_Rel_Insert_Input = {
  data: Array<Class_Preset_Study_Plans_Insert_Input>;
  on_conflict?: Maybe<Class_Preset_Study_Plans_On_Conflict>;
};

/** aggregate avg on columns */
export type Class_Preset_Study_Plans_Avg_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Avg_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "class_preset_study_plans". All fields are combined with a logical 'AND'. */
export type Class_Preset_Study_Plans_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Class_Preset_Study_Plans_Bool_Exp>>>;
  _not?: Maybe<Class_Preset_Study_Plans_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Class_Preset_Study_Plans_Bool_Exp>>>;
  class_id?: Maybe<Int_Comparison_Exp>;
  class_preset_study_plan_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  preset_study_plan?: Maybe<Preset_Study_Plans_Bool_Exp>;
  preset_study_plan_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "class_preset_study_plans" */
export enum Class_Preset_Study_Plans_Constraint {
  /** unique or primary key constraint */
  ClassPresetStudyPlansClassIdPresetStudyPlanIdUn = 'class_preset_study_plans__class_id__preset_study_plan_id__un',
  /** unique or primary key constraint */
  ClassPresetStudyPlansPk = 'class_preset_study_plans_pk'
}

/** input type for incrementing integer column in table "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Inc_Input = {
  class_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Insert_Input = {
  class_id?: Maybe<Scalars['Int']>;
  class_preset_study_plan_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  preset_study_plan?: Maybe<Preset_Study_Plans_Obj_Rel_Insert_Input>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Class_Preset_Study_Plans_Max_Fields = {
  class_id?: Maybe<Scalars['Int']>;
  class_preset_study_plan_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Max_Order_By = {
  class_id?: Maybe<Order_By>;
  class_preset_study_plan_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  preset_study_plan_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Class_Preset_Study_Plans_Min_Fields = {
  class_id?: Maybe<Scalars['Int']>;
  class_preset_study_plan_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Min_Order_By = {
  class_id?: Maybe<Order_By>;
  class_preset_study_plan_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  preset_study_plan_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Class_Preset_Study_Plans>;
};

/** input type for inserting object relation for remote table "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Obj_Rel_Insert_Input = {
  data: Class_Preset_Study_Plans_Insert_Input;
  on_conflict?: Maybe<Class_Preset_Study_Plans_On_Conflict>;
};

/** on conflict condition type for table "class_preset_study_plans" */
export type Class_Preset_Study_Plans_On_Conflict = {
  constraint: Class_Preset_Study_Plans_Constraint;
  update_columns: Array<Class_Preset_Study_Plans_Update_Column>;
  where?: Maybe<Class_Preset_Study_Plans_Bool_Exp>;
};

/** ordering options when selecting data from "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Order_By = {
  class_id?: Maybe<Order_By>;
  class_preset_study_plan_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  preset_study_plan?: Maybe<Preset_Study_Plans_Order_By>;
  preset_study_plan_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Pk_Columns_Input = {
  class_preset_study_plan_id: Scalars['String'];
};

/** select columns of table "class_preset_study_plans" */
export enum Class_Preset_Study_Plans_Select_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  ClassPresetStudyPlanId = 'class_preset_study_plan_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Set_Input = {
  class_id?: Maybe<Scalars['Int']>;
  class_preset_study_plan_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Class_Preset_Study_Plans_Stddev_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Stddev_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Class_Preset_Study_Plans_Stddev_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Stddev_Pop_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Class_Preset_Study_Plans_Stddev_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Stddev_Samp_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Class_Preset_Study_Plans_Sum_Fields = {
  class_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Sum_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** update columns of table "class_preset_study_plans" */
export enum Class_Preset_Study_Plans_Update_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  ClassPresetStudyPlanId = 'class_preset_study_plan_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Class_Preset_Study_Plans_Var_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Var_Pop_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Class_Preset_Study_Plans_Var_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Var_Samp_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Class_Preset_Study_Plans_Variance_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "class_preset_study_plans" */
export type Class_Preset_Study_Plans_Variance_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** columns and relationships of "class_students" */
export type Class_Students = {
  class_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "class_students" */
export type Class_Students_Aggregate = {
  aggregate?: Maybe<Class_Students_Aggregate_Fields>;
  nodes: Array<Class_Students>;
};

/** aggregate fields of "class_students" */
export type Class_Students_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Class_Students_Max_Fields>;
  min?: Maybe<Class_Students_Min_Fields>;
};


/** aggregate fields of "class_students" */
export type Class_Students_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Class_Students_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "class_students" */
export type Class_Students_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Class_Students_Max_Order_By>;
  min?: Maybe<Class_Students_Min_Order_By>;
};

/** input type for inserting array relation for remote table "class_students" */
export type Class_Students_Arr_Rel_Insert_Input = {
  data: Array<Class_Students_Insert_Input>;
  on_conflict?: Maybe<Class_Students_On_Conflict>;
};

/** Boolean expression to filter rows from the table "class_students". All fields are combined with a logical 'AND'. */
export type Class_Students_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Class_Students_Bool_Exp>>>;
  _not?: Maybe<Class_Students_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Class_Students_Bool_Exp>>>;
  class_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "class_students" */
export enum Class_Students_Constraint {
  /** unique or primary key constraint */
  ClassStudentsPk = 'class_students_pk'
}

/** input type for inserting data into table "class_students" */
export type Class_Students_Insert_Input = {
  class_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Class_Students_Max_Fields = {
  class_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "class_students" */
export type Class_Students_Max_Order_By = {
  class_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Class_Students_Min_Fields = {
  class_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "class_students" */
export type Class_Students_Min_Order_By = {
  class_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "class_students" */
export type Class_Students_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Class_Students>;
};

/** input type for inserting object relation for remote table "class_students" */
export type Class_Students_Obj_Rel_Insert_Input = {
  data: Class_Students_Insert_Input;
  on_conflict?: Maybe<Class_Students_On_Conflict>;
};

/** on conflict condition type for table "class_students" */
export type Class_Students_On_Conflict = {
  constraint: Class_Students_Constraint;
  update_columns: Array<Class_Students_Update_Column>;
  where?: Maybe<Class_Students_Bool_Exp>;
};

/** ordering options when selecting data from "class_students" */
export type Class_Students_Order_By = {
  class_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "class_students" */
export type Class_Students_Pk_Columns_Input = {
  class_id: Scalars['String'];
  student_id: Scalars['String'];
};

/** select columns of table "class_students" */
export enum Class_Students_Select_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "class_students" */
export type Class_Students_Set_Input = {
  class_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "class_students" */
export enum Class_Students_Update_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "class_study_plans" */
export type Class_Study_Plans = {
  class_id: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  study_plan: Study_Plans;
  study_plan_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "class_study_plans" */
export type Class_Study_Plans_Aggregate = {
  aggregate?: Maybe<Class_Study_Plans_Aggregate_Fields>;
  nodes: Array<Class_Study_Plans>;
};

/** aggregate fields of "class_study_plans" */
export type Class_Study_Plans_Aggregate_Fields = {
  avg?: Maybe<Class_Study_Plans_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Class_Study_Plans_Max_Fields>;
  min?: Maybe<Class_Study_Plans_Min_Fields>;
  stddev?: Maybe<Class_Study_Plans_Stddev_Fields>;
  stddev_pop?: Maybe<Class_Study_Plans_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Class_Study_Plans_Stddev_Samp_Fields>;
  sum?: Maybe<Class_Study_Plans_Sum_Fields>;
  var_pop?: Maybe<Class_Study_Plans_Var_Pop_Fields>;
  var_samp?: Maybe<Class_Study_Plans_Var_Samp_Fields>;
  variance?: Maybe<Class_Study_Plans_Variance_Fields>;
};


/** aggregate fields of "class_study_plans" */
export type Class_Study_Plans_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Class_Study_Plans_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "class_study_plans" */
export type Class_Study_Plans_Aggregate_Order_By = {
  avg?: Maybe<Class_Study_Plans_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Class_Study_Plans_Max_Order_By>;
  min?: Maybe<Class_Study_Plans_Min_Order_By>;
  stddev?: Maybe<Class_Study_Plans_Stddev_Order_By>;
  stddev_pop?: Maybe<Class_Study_Plans_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Class_Study_Plans_Stddev_Samp_Order_By>;
  sum?: Maybe<Class_Study_Plans_Sum_Order_By>;
  var_pop?: Maybe<Class_Study_Plans_Var_Pop_Order_By>;
  var_samp?: Maybe<Class_Study_Plans_Var_Samp_Order_By>;
  variance?: Maybe<Class_Study_Plans_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "class_study_plans" */
export type Class_Study_Plans_Arr_Rel_Insert_Input = {
  data: Array<Class_Study_Plans_Insert_Input>;
  on_conflict?: Maybe<Class_Study_Plans_On_Conflict>;
};

/** aggregate avg on columns */
export type Class_Study_Plans_Avg_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "class_study_plans" */
export type Class_Study_Plans_Avg_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "class_study_plans". All fields are combined with a logical 'AND'. */
export type Class_Study_Plans_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Class_Study_Plans_Bool_Exp>>>;
  _not?: Maybe<Class_Study_Plans_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Class_Study_Plans_Bool_Exp>>>;
  class_id?: Maybe<Int_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  study_plan?: Maybe<Study_Plans_Bool_Exp>;
  study_plan_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "class_study_plans" */
export enum Class_Study_Plans_Constraint {
  /** unique or primary key constraint */
  ClassStudyPlansPk = 'class_study_plans_pk'
}

/** input type for incrementing integer column in table "class_study_plans" */
export type Class_Study_Plans_Inc_Input = {
  class_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "class_study_plans" */
export type Class_Study_Plans_Insert_Input = {
  class_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan?: Maybe<Study_Plans_Obj_Rel_Insert_Input>;
  study_plan_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Class_Study_Plans_Max_Fields = {
  class_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "class_study_plans" */
export type Class_Study_Plans_Max_Order_By = {
  class_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  study_plan_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Class_Study_Plans_Min_Fields = {
  class_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "class_study_plans" */
export type Class_Study_Plans_Min_Order_By = {
  class_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  study_plan_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "class_study_plans" */
export type Class_Study_Plans_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Class_Study_Plans>;
};

/** input type for inserting object relation for remote table "class_study_plans" */
export type Class_Study_Plans_Obj_Rel_Insert_Input = {
  data: Class_Study_Plans_Insert_Input;
  on_conflict?: Maybe<Class_Study_Plans_On_Conflict>;
};

/** on conflict condition type for table "class_study_plans" */
export type Class_Study_Plans_On_Conflict = {
  constraint: Class_Study_Plans_Constraint;
  update_columns: Array<Class_Study_Plans_Update_Column>;
  where?: Maybe<Class_Study_Plans_Bool_Exp>;
};

/** ordering options when selecting data from "class_study_plans" */
export type Class_Study_Plans_Order_By = {
  class_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  study_plan?: Maybe<Study_Plans_Order_By>;
  study_plan_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "class_study_plans" */
export type Class_Study_Plans_Pk_Columns_Input = {
  class_id: Scalars['Int'];
  study_plan_id: Scalars['String'];
};

/** select columns of table "class_study_plans" */
export enum Class_Study_Plans_Select_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudyPlanId = 'study_plan_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "class_study_plans" */
export type Class_Study_Plans_Set_Input = {
  class_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Class_Study_Plans_Stddev_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "class_study_plans" */
export type Class_Study_Plans_Stddev_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Class_Study_Plans_Stddev_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "class_study_plans" */
export type Class_Study_Plans_Stddev_Pop_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Class_Study_Plans_Stddev_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "class_study_plans" */
export type Class_Study_Plans_Stddev_Samp_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Class_Study_Plans_Sum_Fields = {
  class_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "class_study_plans" */
export type Class_Study_Plans_Sum_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** update columns of table "class_study_plans" */
export enum Class_Study_Plans_Update_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudyPlanId = 'study_plan_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Class_Study_Plans_Var_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "class_study_plans" */
export type Class_Study_Plans_Var_Pop_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Class_Study_Plans_Var_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "class_study_plans" */
export type Class_Study_Plans_Var_Samp_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Class_Study_Plans_Variance_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "class_study_plans" */
export type Class_Study_Plans_Variance_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** columns and relationships of "classes" */
export type Classes = {
  avatar: Scalars['String'];
  class_code?: Maybe<Scalars['String']>;
  class_id: Scalars['Int'];
  /** An array relationship */
  class_members: Array<Class_Members>;
  /** An aggregated array relationship */
  class_members_aggregate: Class_Members_Aggregate;
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grades?: Maybe<Scalars['_int4']>;
  name: Scalars['String'];
  /** An object relationship */
  plan?: Maybe<Plans>;
  plan_duration?: Maybe<Scalars['smallint']>;
  plan_expired_at?: Maybe<Scalars['timestamptz']>;
  plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  school: Schools;
  school_id: Scalars['Int'];
  status: Scalars['String'];
  subjects?: Maybe<Scalars['_text']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "classes" */
export type ClassesClass_MembersArgs = {
  distinct_on?: Maybe<Array<Class_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Members_Order_By>>;
  where?: Maybe<Class_Members_Bool_Exp>;
};


/** columns and relationships of "classes" */
export type ClassesClass_Members_AggregateArgs = {
  distinct_on?: Maybe<Array<Class_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Members_Order_By>>;
  where?: Maybe<Class_Members_Bool_Exp>;
};

/** aggregated selection of "classes" */
export type Classes_Aggregate = {
  aggregate?: Maybe<Classes_Aggregate_Fields>;
  nodes: Array<Classes>;
};

/** aggregate fields of "classes" */
export type Classes_Aggregate_Fields = {
  avg?: Maybe<Classes_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Classes_Max_Fields>;
  min?: Maybe<Classes_Min_Fields>;
  stddev?: Maybe<Classes_Stddev_Fields>;
  stddev_pop?: Maybe<Classes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Classes_Stddev_Samp_Fields>;
  sum?: Maybe<Classes_Sum_Fields>;
  var_pop?: Maybe<Classes_Var_Pop_Fields>;
  var_samp?: Maybe<Classes_Var_Samp_Fields>;
  variance?: Maybe<Classes_Variance_Fields>;
};


/** aggregate fields of "classes" */
export type Classes_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Classes_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "classes" */
export type Classes_Aggregate_Order_By = {
  avg?: Maybe<Classes_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Classes_Max_Order_By>;
  min?: Maybe<Classes_Min_Order_By>;
  stddev?: Maybe<Classes_Stddev_Order_By>;
  stddev_pop?: Maybe<Classes_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Classes_Stddev_Samp_Order_By>;
  sum?: Maybe<Classes_Sum_Order_By>;
  var_pop?: Maybe<Classes_Var_Pop_Order_By>;
  var_samp?: Maybe<Classes_Var_Samp_Order_By>;
  variance?: Maybe<Classes_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "classes" */
export type Classes_Arr_Rel_Insert_Input = {
  data: Array<Classes_Insert_Input>;
  on_conflict?: Maybe<Classes_On_Conflict>;
};

/** aggregate avg on columns */
export type Classes_Avg_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "classes" */
export type Classes_Avg_Order_By = {
  class_id?: Maybe<Order_By>;
  plan_duration?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "classes". All fields are combined with a logical 'AND'. */
export type Classes_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Classes_Bool_Exp>>>;
  _not?: Maybe<Classes_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Classes_Bool_Exp>>>;
  avatar?: Maybe<String_Comparison_Exp>;
  class_code?: Maybe<String_Comparison_Exp>;
  class_id?: Maybe<Int_Comparison_Exp>;
  class_members?: Maybe<Class_Members_Bool_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  grades?: Maybe<_Int4_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  plan?: Maybe<Plans_Bool_Exp>;
  plan_duration?: Maybe<Smallint_Comparison_Exp>;
  plan_expired_at?: Maybe<Timestamptz_Comparison_Exp>;
  plan_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  school?: Maybe<Schools_Bool_Exp>;
  school_id?: Maybe<Int_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  subjects?: Maybe<_Text_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "classes" */
export enum Classes_Constraint {
  /** unique or primary key constraint */
  ClassesPk = 'classes_pk',
  /** unique or primary key constraint */
  ClassesUn = 'classes_un'
}

/** input type for incrementing integer column in table "classes" */
export type Classes_Inc_Input = {
  class_id?: Maybe<Scalars['Int']>;
  plan_duration?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "classes" */
export type Classes_Insert_Input = {
  avatar?: Maybe<Scalars['String']>;
  class_code?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['Int']>;
  class_members?: Maybe<Class_Members_Arr_Rel_Insert_Input>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grades?: Maybe<Scalars['_int4']>;
  name?: Maybe<Scalars['String']>;
  plan?: Maybe<Plans_Obj_Rel_Insert_Input>;
  plan_duration?: Maybe<Scalars['smallint']>;
  plan_expired_at?: Maybe<Scalars['timestamptz']>;
  plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school?: Maybe<Schools_Obj_Rel_Insert_Input>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  subjects?: Maybe<Scalars['_text']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Classes_Max_Fields = {
  avatar?: Maybe<Scalars['String']>;
  class_code?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  plan_duration?: Maybe<Scalars['smallint']>;
  plan_expired_at?: Maybe<Scalars['timestamptz']>;
  plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "classes" */
export type Classes_Max_Order_By = {
  avatar?: Maybe<Order_By>;
  class_code?: Maybe<Order_By>;
  class_id?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  plan_duration?: Maybe<Order_By>;
  plan_expired_at?: Maybe<Order_By>;
  plan_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Classes_Min_Fields = {
  avatar?: Maybe<Scalars['String']>;
  class_code?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  plan_duration?: Maybe<Scalars['smallint']>;
  plan_expired_at?: Maybe<Scalars['timestamptz']>;
  plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "classes" */
export type Classes_Min_Order_By = {
  avatar?: Maybe<Order_By>;
  class_code?: Maybe<Order_By>;
  class_id?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  plan_duration?: Maybe<Order_By>;
  plan_expired_at?: Maybe<Order_By>;
  plan_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "classes" */
export type Classes_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Classes>;
};

/** input type for inserting object relation for remote table "classes" */
export type Classes_Obj_Rel_Insert_Input = {
  data: Classes_Insert_Input;
  on_conflict?: Maybe<Classes_On_Conflict>;
};

/** on conflict condition type for table "classes" */
export type Classes_On_Conflict = {
  constraint: Classes_Constraint;
  update_columns: Array<Classes_Update_Column>;
  where?: Maybe<Classes_Bool_Exp>;
};

/** ordering options when selecting data from "classes" */
export type Classes_Order_By = {
  avatar?: Maybe<Order_By>;
  class_code?: Maybe<Order_By>;
  class_id?: Maybe<Order_By>;
  class_members_aggregate?: Maybe<Class_Members_Aggregate_Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  grades?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  plan?: Maybe<Plans_Order_By>;
  plan_duration?: Maybe<Order_By>;
  plan_expired_at?: Maybe<Order_By>;
  plan_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school?: Maybe<Schools_Order_By>;
  school_id?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  subjects?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "classes" */
export type Classes_Pk_Columns_Input = {
  class_id: Scalars['Int'];
};

/** select columns of table "classes" */
export enum Classes_Select_Column {
  /** column name */
  Avatar = 'avatar',
  /** column name */
  ClassCode = 'class_code',
  /** column name */
  ClassId = 'class_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Grades = 'grades',
  /** column name */
  Name = 'name',
  /** column name */
  PlanDuration = 'plan_duration',
  /** column name */
  PlanExpiredAt = 'plan_expired_at',
  /** column name */
  PlanId = 'plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Status = 'status',
  /** column name */
  Subjects = 'subjects',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "classes" */
export type Classes_Set_Input = {
  avatar?: Maybe<Scalars['String']>;
  class_code?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grades?: Maybe<Scalars['_int4']>;
  name?: Maybe<Scalars['String']>;
  plan_duration?: Maybe<Scalars['smallint']>;
  plan_expired_at?: Maybe<Scalars['timestamptz']>;
  plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  subjects?: Maybe<Scalars['_text']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Classes_Stddev_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "classes" */
export type Classes_Stddev_Order_By = {
  class_id?: Maybe<Order_By>;
  plan_duration?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Classes_Stddev_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "classes" */
export type Classes_Stddev_Pop_Order_By = {
  class_id?: Maybe<Order_By>;
  plan_duration?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Classes_Stddev_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "classes" */
export type Classes_Stddev_Samp_Order_By = {
  class_id?: Maybe<Order_By>;
  plan_duration?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Classes_Sum_Fields = {
  class_id?: Maybe<Scalars['Int']>;
  plan_duration?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "classes" */
export type Classes_Sum_Order_By = {
  class_id?: Maybe<Order_By>;
  plan_duration?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** update columns of table "classes" */
export enum Classes_Update_Column {
  /** column name */
  Avatar = 'avatar',
  /** column name */
  ClassCode = 'class_code',
  /** column name */
  ClassId = 'class_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Grades = 'grades',
  /** column name */
  Name = 'name',
  /** column name */
  PlanDuration = 'plan_duration',
  /** column name */
  PlanExpiredAt = 'plan_expired_at',
  /** column name */
  PlanId = 'plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Status = 'status',
  /** column name */
  Subjects = 'subjects',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Classes_Var_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "classes" */
export type Classes_Var_Pop_Order_By = {
  class_id?: Maybe<Order_By>;
  plan_duration?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Classes_Var_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "classes" */
export type Classes_Var_Samp_Order_By = {
  class_id?: Maybe<Order_By>;
  plan_duration?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Classes_Variance_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "classes" */
export type Classes_Variance_Order_By = {
  class_id?: Maybe<Order_By>;
  plan_duration?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** columns and relationships of "coaches" */
export type Coaches = {
  coach_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An array relationship */
  students_assigned_coaches: Array<Students_Assigned_Coaches>;
  /** An aggregated array relationship */
  students_assigned_coaches_aggregate: Students_Assigned_Coaches_Aggregate;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user?: Maybe<Users>;
};


/** columns and relationships of "coaches" */
export type CoachesStudents_Assigned_CoachesArgs = {
  distinct_on?: Maybe<Array<Students_Assigned_Coaches_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Assigned_Coaches_Order_By>>;
  where?: Maybe<Students_Assigned_Coaches_Bool_Exp>;
};


/** columns and relationships of "coaches" */
export type CoachesStudents_Assigned_Coaches_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Assigned_Coaches_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Assigned_Coaches_Order_By>>;
  where?: Maybe<Students_Assigned_Coaches_Bool_Exp>;
};

/** aggregated selection of "coaches" */
export type Coaches_Aggregate = {
  aggregate?: Maybe<Coaches_Aggregate_Fields>;
  nodes: Array<Coaches>;
};

/** aggregate fields of "coaches" */
export type Coaches_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Coaches_Max_Fields>;
  min?: Maybe<Coaches_Min_Fields>;
};


/** aggregate fields of "coaches" */
export type Coaches_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Coaches_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "coaches" */
export type Coaches_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Coaches_Max_Order_By>;
  min?: Maybe<Coaches_Min_Order_By>;
};

/** input type for inserting array relation for remote table "coaches" */
export type Coaches_Arr_Rel_Insert_Input = {
  data: Array<Coaches_Insert_Input>;
  on_conflict?: Maybe<Coaches_On_Conflict>;
};

/** Boolean expression to filter rows from the table "coaches". All fields are combined with a logical 'AND'. */
export type Coaches_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Coaches_Bool_Exp>>>;
  _not?: Maybe<Coaches_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Coaches_Bool_Exp>>>;
  coach_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  students_assigned_coaches?: Maybe<Students_Assigned_Coaches_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "coaches" */
export enum Coaches_Constraint {
  /** unique or primary key constraint */
  CoachesPk = 'coaches_pk'
}

/** input type for inserting data into table "coaches" */
export type Coaches_Insert_Input = {
  coach_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  students_assigned_coaches?: Maybe<Students_Assigned_Coaches_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Coaches_Max_Fields = {
  coach_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "coaches" */
export type Coaches_Max_Order_By = {
  coach_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Coaches_Min_Fields = {
  coach_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "coaches" */
export type Coaches_Min_Order_By = {
  coach_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "coaches" */
export type Coaches_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Coaches>;
};

/** input type for inserting object relation for remote table "coaches" */
export type Coaches_Obj_Rel_Insert_Input = {
  data: Coaches_Insert_Input;
  on_conflict?: Maybe<Coaches_On_Conflict>;
};

/** on conflict condition type for table "coaches" */
export type Coaches_On_Conflict = {
  constraint: Coaches_Constraint;
  update_columns: Array<Coaches_Update_Column>;
  where?: Maybe<Coaches_Bool_Exp>;
};

/** ordering options when selecting data from "coaches" */
export type Coaches_Order_By = {
  coach_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  students_assigned_coaches_aggregate?: Maybe<Students_Assigned_Coaches_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
};

/** primary key columns input for table: "coaches" */
export type Coaches_Pk_Columns_Input = {
  coach_id: Scalars['String'];
};

/** select columns of table "coaches" */
export enum Coaches_Select_Column {
  /** column name */
  CoachId = 'coach_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "coaches" */
export type Coaches_Set_Input = {
  coach_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "coaches" */
export enum Coaches_Update_Column {
  /** column name */
  CoachId = 'coach_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "cod_orders" */
export type Cod_Orders = {
  address_tree: Scalars['_text'];
  cod_order_id: Scalars['String'];
  cod_secret_code: Scalars['String'];
  created_at: Scalars['timestamptz'];
  customer_address: Scalars['String'];
  customer_name: Scalars['String'];
  customer_phone_number: Scalars['String'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  expected_delivery_time: Scalars['timestamptz'];
  resource_path?: Maybe<Scalars['String']>;
  status: Scalars['String'];
  student_order_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "cod_orders" */
export type Cod_Orders_Aggregate = {
  aggregate?: Maybe<Cod_Orders_Aggregate_Fields>;
  nodes: Array<Cod_Orders>;
};

/** aggregate fields of "cod_orders" */
export type Cod_Orders_Aggregate_Fields = {
  avg?: Maybe<Cod_Orders_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Cod_Orders_Max_Fields>;
  min?: Maybe<Cod_Orders_Min_Fields>;
  stddev?: Maybe<Cod_Orders_Stddev_Fields>;
  stddev_pop?: Maybe<Cod_Orders_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Cod_Orders_Stddev_Samp_Fields>;
  sum?: Maybe<Cod_Orders_Sum_Fields>;
  var_pop?: Maybe<Cod_Orders_Var_Pop_Fields>;
  var_samp?: Maybe<Cod_Orders_Var_Samp_Fields>;
  variance?: Maybe<Cod_Orders_Variance_Fields>;
};


/** aggregate fields of "cod_orders" */
export type Cod_Orders_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Cod_Orders_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "cod_orders" */
export type Cod_Orders_Aggregate_Order_By = {
  avg?: Maybe<Cod_Orders_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Cod_Orders_Max_Order_By>;
  min?: Maybe<Cod_Orders_Min_Order_By>;
  stddev?: Maybe<Cod_Orders_Stddev_Order_By>;
  stddev_pop?: Maybe<Cod_Orders_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Cod_Orders_Stddev_Samp_Order_By>;
  sum?: Maybe<Cod_Orders_Sum_Order_By>;
  var_pop?: Maybe<Cod_Orders_Var_Pop_Order_By>;
  var_samp?: Maybe<Cod_Orders_Var_Samp_Order_By>;
  variance?: Maybe<Cod_Orders_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "cod_orders" */
export type Cod_Orders_Arr_Rel_Insert_Input = {
  data: Array<Cod_Orders_Insert_Input>;
  on_conflict?: Maybe<Cod_Orders_On_Conflict>;
};

/** aggregate avg on columns */
export type Cod_Orders_Avg_Fields = {
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "cod_orders" */
export type Cod_Orders_Avg_Order_By = {
  student_order_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "cod_orders". All fields are combined with a logical 'AND'. */
export type Cod_Orders_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Cod_Orders_Bool_Exp>>>;
  _not?: Maybe<Cod_Orders_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Cod_Orders_Bool_Exp>>>;
  address_tree?: Maybe<_Text_Comparison_Exp>;
  cod_order_id?: Maybe<String_Comparison_Exp>;
  cod_secret_code?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  customer_address?: Maybe<String_Comparison_Exp>;
  customer_name?: Maybe<String_Comparison_Exp>;
  customer_phone_number?: Maybe<String_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  expected_delivery_time?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  student_order_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "cod_orders" */
export enum Cod_Orders_Constraint {
  /** unique or primary key constraint */
  CodOrdersPk1 = 'cod_orders_pk1'
}

/** input type for incrementing integer column in table "cod_orders" */
export type Cod_Orders_Inc_Input = {
  student_order_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "cod_orders" */
export type Cod_Orders_Insert_Input = {
  address_tree?: Maybe<Scalars['_text']>;
  cod_order_id?: Maybe<Scalars['String']>;
  cod_secret_code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customer_address?: Maybe<Scalars['String']>;
  customer_name?: Maybe<Scalars['String']>;
  customer_phone_number?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  expected_delivery_time?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_order_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Cod_Orders_Max_Fields = {
  cod_order_id?: Maybe<Scalars['String']>;
  cod_secret_code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customer_address?: Maybe<Scalars['String']>;
  customer_name?: Maybe<Scalars['String']>;
  customer_phone_number?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  expected_delivery_time?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_order_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "cod_orders" */
export type Cod_Orders_Max_Order_By = {
  cod_order_id?: Maybe<Order_By>;
  cod_secret_code?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  customer_address?: Maybe<Order_By>;
  customer_name?: Maybe<Order_By>;
  customer_phone_number?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  expected_delivery_time?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_order_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Cod_Orders_Min_Fields = {
  cod_order_id?: Maybe<Scalars['String']>;
  cod_secret_code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customer_address?: Maybe<Scalars['String']>;
  customer_name?: Maybe<Scalars['String']>;
  customer_phone_number?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  expected_delivery_time?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_order_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "cod_orders" */
export type Cod_Orders_Min_Order_By = {
  cod_order_id?: Maybe<Order_By>;
  cod_secret_code?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  customer_address?: Maybe<Order_By>;
  customer_name?: Maybe<Order_By>;
  customer_phone_number?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  expected_delivery_time?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_order_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "cod_orders" */
export type Cod_Orders_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Cod_Orders>;
};

/** input type for inserting object relation for remote table "cod_orders" */
export type Cod_Orders_Obj_Rel_Insert_Input = {
  data: Cod_Orders_Insert_Input;
  on_conflict?: Maybe<Cod_Orders_On_Conflict>;
};

/** on conflict condition type for table "cod_orders" */
export type Cod_Orders_On_Conflict = {
  constraint: Cod_Orders_Constraint;
  update_columns: Array<Cod_Orders_Update_Column>;
  where?: Maybe<Cod_Orders_Bool_Exp>;
};

/** ordering options when selecting data from "cod_orders" */
export type Cod_Orders_Order_By = {
  address_tree?: Maybe<Order_By>;
  cod_order_id?: Maybe<Order_By>;
  cod_secret_code?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  customer_address?: Maybe<Order_By>;
  customer_name?: Maybe<Order_By>;
  customer_phone_number?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  expected_delivery_time?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_order_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "cod_orders" */
export type Cod_Orders_Pk_Columns_Input = {
  cod_order_id: Scalars['String'];
};

/** select columns of table "cod_orders" */
export enum Cod_Orders_Select_Column {
  /** column name */
  AddressTree = 'address_tree',
  /** column name */
  CodOrderId = 'cod_order_id',
  /** column name */
  CodSecretCode = 'cod_secret_code',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomerAddress = 'customer_address',
  /** column name */
  CustomerName = 'customer_name',
  /** column name */
  CustomerPhoneNumber = 'customer_phone_number',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ExpectedDeliveryTime = 'expected_delivery_time',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentOrderId = 'student_order_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "cod_orders" */
export type Cod_Orders_Set_Input = {
  address_tree?: Maybe<Scalars['_text']>;
  cod_order_id?: Maybe<Scalars['String']>;
  cod_secret_code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customer_address?: Maybe<Scalars['String']>;
  customer_name?: Maybe<Scalars['String']>;
  customer_phone_number?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  expected_delivery_time?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_order_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Cod_Orders_Stddev_Fields = {
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "cod_orders" */
export type Cod_Orders_Stddev_Order_By = {
  student_order_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Cod_Orders_Stddev_Pop_Fields = {
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "cod_orders" */
export type Cod_Orders_Stddev_Pop_Order_By = {
  student_order_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Cod_Orders_Stddev_Samp_Fields = {
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "cod_orders" */
export type Cod_Orders_Stddev_Samp_Order_By = {
  student_order_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Cod_Orders_Sum_Fields = {
  student_order_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "cod_orders" */
export type Cod_Orders_Sum_Order_By = {
  student_order_id?: Maybe<Order_By>;
};

/** update columns of table "cod_orders" */
export enum Cod_Orders_Update_Column {
  /** column name */
  AddressTree = 'address_tree',
  /** column name */
  CodOrderId = 'cod_order_id',
  /** column name */
  CodSecretCode = 'cod_secret_code',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomerAddress = 'customer_address',
  /** column name */
  CustomerName = 'customer_name',
  /** column name */
  CustomerPhoneNumber = 'customer_phone_number',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ExpectedDeliveryTime = 'expected_delivery_time',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentOrderId = 'student_order_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Cod_Orders_Var_Pop_Fields = {
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "cod_orders" */
export type Cod_Orders_Var_Pop_Order_By = {
  student_order_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Cod_Orders_Var_Samp_Fields = {
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "cod_orders" */
export type Cod_Orders_Var_Samp_Order_By = {
  student_order_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Cod_Orders_Variance_Fields = {
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "cod_orders" */
export type Cod_Orders_Variance_Order_By = {
  student_order_id?: Maybe<Order_By>;
};

/** columns and relationships of "configs" */
export type Configs = {
  config_group: Scalars['String'];
  config_key: Scalars['String'];
  config_value: Scalars['String'];
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "configs" */
export type Configs_Aggregate = {
  aggregate?: Maybe<Configs_Aggregate_Fields>;
  nodes: Array<Configs>;
};

/** aggregate fields of "configs" */
export type Configs_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Configs_Max_Fields>;
  min?: Maybe<Configs_Min_Fields>;
};


/** aggregate fields of "configs" */
export type Configs_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Configs_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "configs" */
export type Configs_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Configs_Max_Order_By>;
  min?: Maybe<Configs_Min_Order_By>;
};

/** input type for inserting array relation for remote table "configs" */
export type Configs_Arr_Rel_Insert_Input = {
  data: Array<Configs_Insert_Input>;
  on_conflict?: Maybe<Configs_On_Conflict>;
};

/** Boolean expression to filter rows from the table "configs". All fields are combined with a logical 'AND'. */
export type Configs_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Configs_Bool_Exp>>>;
  _not?: Maybe<Configs_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Configs_Bool_Exp>>>;
  config_group?: Maybe<String_Comparison_Exp>;
  config_key?: Maybe<String_Comparison_Exp>;
  config_value?: Maybe<String_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "configs" */
export enum Configs_Constraint {
  /** unique or primary key constraint */
  ConfigPk = 'config_pk'
}

/** input type for inserting data into table "configs" */
export type Configs_Insert_Input = {
  config_group?: Maybe<Scalars['String']>;
  config_key?: Maybe<Scalars['String']>;
  config_value?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Configs_Max_Fields = {
  config_group?: Maybe<Scalars['String']>;
  config_key?: Maybe<Scalars['String']>;
  config_value?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "configs" */
export type Configs_Max_Order_By = {
  config_group?: Maybe<Order_By>;
  config_key?: Maybe<Order_By>;
  config_value?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Configs_Min_Fields = {
  config_group?: Maybe<Scalars['String']>;
  config_key?: Maybe<Scalars['String']>;
  config_value?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "configs" */
export type Configs_Min_Order_By = {
  config_group?: Maybe<Order_By>;
  config_key?: Maybe<Order_By>;
  config_value?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "configs" */
export type Configs_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Configs>;
};

/** input type for inserting object relation for remote table "configs" */
export type Configs_Obj_Rel_Insert_Input = {
  data: Configs_Insert_Input;
  on_conflict?: Maybe<Configs_On_Conflict>;
};

/** on conflict condition type for table "configs" */
export type Configs_On_Conflict = {
  constraint: Configs_Constraint;
  update_columns: Array<Configs_Update_Column>;
  where?: Maybe<Configs_Bool_Exp>;
};

/** ordering options when selecting data from "configs" */
export type Configs_Order_By = {
  config_group?: Maybe<Order_By>;
  config_key?: Maybe<Order_By>;
  config_value?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "configs" */
export type Configs_Pk_Columns_Input = {
  config_group: Scalars['String'];
  config_key: Scalars['String'];
  country: Scalars['String'];
};

/** select columns of table "configs" */
export enum Configs_Select_Column {
  /** column name */
  ConfigGroup = 'config_group',
  /** column name */
  ConfigKey = 'config_key',
  /** column name */
  ConfigValue = 'config_value',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "configs" */
export type Configs_Set_Input = {
  config_group?: Maybe<Scalars['String']>;
  config_key?: Maybe<Scalars['String']>;
  config_value?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "configs" */
export enum Configs_Update_Column {
  /** column name */
  ConfigGroup = 'config_group',
  /** column name */
  ConfigKey = 'config_key',
  /** column name */
  ConfigValue = 'config_value',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "conversion_tasks" */
export type Conversion_Tasks = {
  conversion_response?: Maybe<Scalars['jsonb']>;
  created_at: Scalars['timestamptz'];
  resource_path?: Maybe<Scalars['String']>;
  resource_url: Scalars['String'];
  status: Scalars['String'];
  task_uuid: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "conversion_tasks" */
export type Conversion_TasksConversion_ResponseArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "conversion_tasks" */
export type Conversion_Tasks_Aggregate = {
  aggregate?: Maybe<Conversion_Tasks_Aggregate_Fields>;
  nodes: Array<Conversion_Tasks>;
};

/** aggregate fields of "conversion_tasks" */
export type Conversion_Tasks_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Conversion_Tasks_Max_Fields>;
  min?: Maybe<Conversion_Tasks_Min_Fields>;
};


/** aggregate fields of "conversion_tasks" */
export type Conversion_Tasks_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Conversion_Tasks_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "conversion_tasks" */
export type Conversion_Tasks_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Conversion_Tasks_Max_Order_By>;
  min?: Maybe<Conversion_Tasks_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Conversion_Tasks_Append_Input = {
  conversion_response?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "conversion_tasks" */
export type Conversion_Tasks_Arr_Rel_Insert_Input = {
  data: Array<Conversion_Tasks_Insert_Input>;
  on_conflict?: Maybe<Conversion_Tasks_On_Conflict>;
};

/** Boolean expression to filter rows from the table "conversion_tasks". All fields are combined with a logical 'AND'. */
export type Conversion_Tasks_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Conversion_Tasks_Bool_Exp>>>;
  _not?: Maybe<Conversion_Tasks_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Conversion_Tasks_Bool_Exp>>>;
  conversion_response?: Maybe<Jsonb_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  resource_url?: Maybe<String_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  task_uuid?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "conversion_tasks" */
export enum Conversion_Tasks_Constraint {
  /** unique or primary key constraint */
  ConversionTasksPkey = 'conversion_tasks_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Conversion_Tasks_Delete_At_Path_Input = {
  conversion_response?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Conversion_Tasks_Delete_Elem_Input = {
  conversion_response?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Conversion_Tasks_Delete_Key_Input = {
  conversion_response?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "conversion_tasks" */
export type Conversion_Tasks_Insert_Input = {
  conversion_response?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  resource_url?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  task_uuid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Conversion_Tasks_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  resource_url?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  task_uuid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "conversion_tasks" */
export type Conversion_Tasks_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  resource_url?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  task_uuid?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Conversion_Tasks_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  resource_url?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  task_uuid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "conversion_tasks" */
export type Conversion_Tasks_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  resource_url?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  task_uuid?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "conversion_tasks" */
export type Conversion_Tasks_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Conversion_Tasks>;
};

/** input type for inserting object relation for remote table "conversion_tasks" */
export type Conversion_Tasks_Obj_Rel_Insert_Input = {
  data: Conversion_Tasks_Insert_Input;
  on_conflict?: Maybe<Conversion_Tasks_On_Conflict>;
};

/** on conflict condition type for table "conversion_tasks" */
export type Conversion_Tasks_On_Conflict = {
  constraint: Conversion_Tasks_Constraint;
  update_columns: Array<Conversion_Tasks_Update_Column>;
  where?: Maybe<Conversion_Tasks_Bool_Exp>;
};

/** ordering options when selecting data from "conversion_tasks" */
export type Conversion_Tasks_Order_By = {
  conversion_response?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  resource_url?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  task_uuid?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "conversion_tasks" */
export type Conversion_Tasks_Pk_Columns_Input = {
  task_uuid: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Conversion_Tasks_Prepend_Input = {
  conversion_response?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "conversion_tasks" */
export enum Conversion_Tasks_Select_Column {
  /** column name */
  ConversionResponse = 'conversion_response',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  ResourceUrl = 'resource_url',
  /** column name */
  Status = 'status',
  /** column name */
  TaskUuid = 'task_uuid',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "conversion_tasks" */
export type Conversion_Tasks_Set_Input = {
  conversion_response?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  resource_url?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  task_uuid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "conversion_tasks" */
export enum Conversion_Tasks_Update_Column {
  /** column name */
  ConversionResponse = 'conversion_response',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  ResourceUrl = 'resource_url',
  /** column name */
  Status = 'status',
  /** column name */
  TaskUuid = 'task_uuid',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "course_access_paths" */
export type Course_Access_Paths = {
  /** An object relationship */
  course: Courses;
  course_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  location: Locations;
  location_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "course_access_paths" */
export type Course_Access_Paths_Aggregate = {
  aggregate?: Maybe<Course_Access_Paths_Aggregate_Fields>;
  nodes: Array<Course_Access_Paths>;
};

/** aggregate fields of "course_access_paths" */
export type Course_Access_Paths_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Course_Access_Paths_Max_Fields>;
  min?: Maybe<Course_Access_Paths_Min_Fields>;
};


/** aggregate fields of "course_access_paths" */
export type Course_Access_Paths_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Course_Access_Paths_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "course_access_paths" */
export type Course_Access_Paths_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Course_Access_Paths_Max_Order_By>;
  min?: Maybe<Course_Access_Paths_Min_Order_By>;
};

/** input type for inserting array relation for remote table "course_access_paths" */
export type Course_Access_Paths_Arr_Rel_Insert_Input = {
  data: Array<Course_Access_Paths_Insert_Input>;
  on_conflict?: Maybe<Course_Access_Paths_On_Conflict>;
};

/** Boolean expression to filter rows from the table "course_access_paths". All fields are combined with a logical 'AND'. */
export type Course_Access_Paths_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Course_Access_Paths_Bool_Exp>>>;
  _not?: Maybe<Course_Access_Paths_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Course_Access_Paths_Bool_Exp>>>;
  course?: Maybe<Courses_Bool_Exp>;
  course_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  location?: Maybe<Locations_Bool_Exp>;
  location_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "course_access_paths" */
export enum Course_Access_Paths_Constraint {
  /** unique or primary key constraint */
  CourseAccessPathsPk = 'course_access_paths_pk'
}

/** input type for inserting data into table "course_access_paths" */
export type Course_Access_Paths_Insert_Input = {
  course?: Maybe<Courses_Obj_Rel_Insert_Input>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location?: Maybe<Locations_Obj_Rel_Insert_Input>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Course_Access_Paths_Max_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "course_access_paths" */
export type Course_Access_Paths_Max_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  location_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Course_Access_Paths_Min_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "course_access_paths" */
export type Course_Access_Paths_Min_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  location_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "course_access_paths" */
export type Course_Access_Paths_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Course_Access_Paths>;
};

/** input type for inserting object relation for remote table "course_access_paths" */
export type Course_Access_Paths_Obj_Rel_Insert_Input = {
  data: Course_Access_Paths_Insert_Input;
  on_conflict?: Maybe<Course_Access_Paths_On_Conflict>;
};

/** on conflict condition type for table "course_access_paths" */
export type Course_Access_Paths_On_Conflict = {
  constraint: Course_Access_Paths_Constraint;
  update_columns: Array<Course_Access_Paths_Update_Column>;
  where?: Maybe<Course_Access_Paths_Bool_Exp>;
};

/** ordering options when selecting data from "course_access_paths" */
export type Course_Access_Paths_Order_By = {
  course?: Maybe<Courses_Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  location?: Maybe<Locations_Order_By>;
  location_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "course_access_paths" */
export type Course_Access_Paths_Pk_Columns_Input = {
  course_id: Scalars['String'];
  location_id: Scalars['String'];
};

/** select columns of table "course_access_paths" */
export enum Course_Access_Paths_Select_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "course_access_paths" */
export type Course_Access_Paths_Set_Input = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "course_access_paths" */
export enum Course_Access_Paths_Update_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "course_classes" */
export type Course_Classes = {
  class_id: Scalars['String'];
  course_class_id: Scalars['String'];
  course_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "course_classes" */
export type Course_Classes_Aggregate = {
  aggregate?: Maybe<Course_Classes_Aggregate_Fields>;
  nodes: Array<Course_Classes>;
};

/** aggregate fields of "course_classes" */
export type Course_Classes_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Course_Classes_Max_Fields>;
  min?: Maybe<Course_Classes_Min_Fields>;
};


/** aggregate fields of "course_classes" */
export type Course_Classes_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Course_Classes_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "course_classes" */
export type Course_Classes_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Course_Classes_Max_Order_By>;
  min?: Maybe<Course_Classes_Min_Order_By>;
};

/** input type for inserting array relation for remote table "course_classes" */
export type Course_Classes_Arr_Rel_Insert_Input = {
  data: Array<Course_Classes_Insert_Input>;
  on_conflict?: Maybe<Course_Classes_On_Conflict>;
};

/** Boolean expression to filter rows from the table "course_classes". All fields are combined with a logical 'AND'. */
export type Course_Classes_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Course_Classes_Bool_Exp>>>;
  _not?: Maybe<Course_Classes_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Course_Classes_Bool_Exp>>>;
  class_id?: Maybe<String_Comparison_Exp>;
  course_class_id?: Maybe<String_Comparison_Exp>;
  course_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "course_classes" */
export enum Course_Classes_Constraint {
  /** unique or primary key constraint */
  CourseClassesPk = 'course_classes_pk'
}

/** input type for inserting data into table "course_classes" */
export type Course_Classes_Insert_Input = {
  class_id?: Maybe<Scalars['String']>;
  course_class_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Course_Classes_Max_Fields = {
  class_id?: Maybe<Scalars['String']>;
  course_class_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "course_classes" */
export type Course_Classes_Max_Order_By = {
  class_id?: Maybe<Order_By>;
  course_class_id?: Maybe<Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Course_Classes_Min_Fields = {
  class_id?: Maybe<Scalars['String']>;
  course_class_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "course_classes" */
export type Course_Classes_Min_Order_By = {
  class_id?: Maybe<Order_By>;
  course_class_id?: Maybe<Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "course_classes" */
export type Course_Classes_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Course_Classes>;
};

/** input type for inserting object relation for remote table "course_classes" */
export type Course_Classes_Obj_Rel_Insert_Input = {
  data: Course_Classes_Insert_Input;
  on_conflict?: Maybe<Course_Classes_On_Conflict>;
};

/** on conflict condition type for table "course_classes" */
export type Course_Classes_On_Conflict = {
  constraint: Course_Classes_Constraint;
  update_columns: Array<Course_Classes_Update_Column>;
  where?: Maybe<Course_Classes_Bool_Exp>;
};

/** ordering options when selecting data from "course_classes" */
export type Course_Classes_Order_By = {
  class_id?: Maybe<Order_By>;
  course_class_id?: Maybe<Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "course_classes" */
export type Course_Classes_Pk_Columns_Input = {
  class_id: Scalars['String'];
  course_id: Scalars['String'];
};

/** select columns of table "course_classes" */
export enum Course_Classes_Select_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  CourseClassId = 'course_class_id',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "course_classes" */
export type Course_Classes_Set_Input = {
  class_id?: Maybe<Scalars['String']>;
  course_class_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "course_classes" */
export enum Course_Classes_Update_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  CourseClassId = 'course_class_id',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "course_students" */
export type Course_Students = {
  course_id: Scalars['String'];
  course_student_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  student_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "course_students" */
export type Course_Students_Aggregate = {
  aggregate?: Maybe<Course_Students_Aggregate_Fields>;
  nodes: Array<Course_Students>;
};

/** aggregate fields of "course_students" */
export type Course_Students_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Course_Students_Max_Fields>;
  min?: Maybe<Course_Students_Min_Fields>;
};


/** aggregate fields of "course_students" */
export type Course_Students_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Course_Students_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "course_students" */
export type Course_Students_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Course_Students_Max_Order_By>;
  min?: Maybe<Course_Students_Min_Order_By>;
};

/** input type for inserting array relation for remote table "course_students" */
export type Course_Students_Arr_Rel_Insert_Input = {
  data: Array<Course_Students_Insert_Input>;
  on_conflict?: Maybe<Course_Students_On_Conflict>;
};

/** Boolean expression to filter rows from the table "course_students". All fields are combined with a logical 'AND'. */
export type Course_Students_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Course_Students_Bool_Exp>>>;
  _not?: Maybe<Course_Students_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Course_Students_Bool_Exp>>>;
  course_id?: Maybe<String_Comparison_Exp>;
  course_student_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  end_at?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  start_at?: Maybe<Timestamptz_Comparison_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "course_students" */
export enum Course_Students_Constraint {
  /** unique or primary key constraint */
  CourseStudentIdUn = 'course_student_id_un',
  /** unique or primary key constraint */
  CourseStudentPk = 'course_student_pk'
}

/** input type for inserting data into table "course_students" */
export type Course_Students_Insert_Input = {
  course_id?: Maybe<Scalars['String']>;
  course_student_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Course_Students_Max_Fields = {
  course_id?: Maybe<Scalars['String']>;
  course_student_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "course_students" */
export type Course_Students_Max_Order_By = {
  course_id?: Maybe<Order_By>;
  course_student_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_at?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Course_Students_Min_Fields = {
  course_id?: Maybe<Scalars['String']>;
  course_student_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "course_students" */
export type Course_Students_Min_Order_By = {
  course_id?: Maybe<Order_By>;
  course_student_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_at?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "course_students" */
export type Course_Students_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Course_Students>;
};

/** input type for inserting object relation for remote table "course_students" */
export type Course_Students_Obj_Rel_Insert_Input = {
  data: Course_Students_Insert_Input;
  on_conflict?: Maybe<Course_Students_On_Conflict>;
};

/** on conflict condition type for table "course_students" */
export type Course_Students_On_Conflict = {
  constraint: Course_Students_Constraint;
  update_columns: Array<Course_Students_Update_Column>;
  where?: Maybe<Course_Students_Bool_Exp>;
};

/** ordering options when selecting data from "course_students" */
export type Course_Students_Order_By = {
  course_id?: Maybe<Order_By>;
  course_student_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_at?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "course_students" */
export type Course_Students_Pk_Columns_Input = {
  course_id: Scalars['String'];
  student_id: Scalars['String'];
};

/** select columns of table "course_students" */
export enum Course_Students_Select_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CourseStudentId = 'course_student_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndAt = 'end_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartAt = 'start_at',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "course_students" */
export type Course_Students_Set_Input = {
  course_id?: Maybe<Scalars['String']>;
  course_student_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "course_students" */
export enum Course_Students_Update_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CourseStudentId = 'course_student_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndAt = 'end_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartAt = 'start_at',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "course_study_plans" */
export type Course_Study_Plans = {
  course_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  study_plan: Study_Plans;
  study_plan_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "course_study_plans" */
export type Course_Study_Plans_Aggregate = {
  aggregate?: Maybe<Course_Study_Plans_Aggregate_Fields>;
  nodes: Array<Course_Study_Plans>;
};

/** aggregate fields of "course_study_plans" */
export type Course_Study_Plans_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Course_Study_Plans_Max_Fields>;
  min?: Maybe<Course_Study_Plans_Min_Fields>;
};


/** aggregate fields of "course_study_plans" */
export type Course_Study_Plans_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Course_Study_Plans_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "course_study_plans" */
export type Course_Study_Plans_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Course_Study_Plans_Max_Order_By>;
  min?: Maybe<Course_Study_Plans_Min_Order_By>;
};

/** input type for inserting array relation for remote table "course_study_plans" */
export type Course_Study_Plans_Arr_Rel_Insert_Input = {
  data: Array<Course_Study_Plans_Insert_Input>;
  on_conflict?: Maybe<Course_Study_Plans_On_Conflict>;
};

/** Boolean expression to filter rows from the table "course_study_plans". All fields are combined with a logical 'AND'. */
export type Course_Study_Plans_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Course_Study_Plans_Bool_Exp>>>;
  _not?: Maybe<Course_Study_Plans_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Course_Study_Plans_Bool_Exp>>>;
  course_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  study_plan?: Maybe<Study_Plans_Bool_Exp>;
  study_plan_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "course_study_plans" */
export enum Course_Study_Plans_Constraint {
  /** unique or primary key constraint */
  CourseStudyPlansPk = 'course_study_plans_pk'
}

/** input type for inserting data into table "course_study_plans" */
export type Course_Study_Plans_Insert_Input = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan?: Maybe<Study_Plans_Obj_Rel_Insert_Input>;
  study_plan_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Course_Study_Plans_Max_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "course_study_plans" */
export type Course_Study_Plans_Max_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  study_plan_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Course_Study_Plans_Min_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "course_study_plans" */
export type Course_Study_Plans_Min_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  study_plan_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "course_study_plans" */
export type Course_Study_Plans_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Course_Study_Plans>;
};

/** input type for inserting object relation for remote table "course_study_plans" */
export type Course_Study_Plans_Obj_Rel_Insert_Input = {
  data: Course_Study_Plans_Insert_Input;
  on_conflict?: Maybe<Course_Study_Plans_On_Conflict>;
};

/** on conflict condition type for table "course_study_plans" */
export type Course_Study_Plans_On_Conflict = {
  constraint: Course_Study_Plans_Constraint;
  update_columns: Array<Course_Study_Plans_Update_Column>;
  where?: Maybe<Course_Study_Plans_Bool_Exp>;
};

/** ordering options when selecting data from "course_study_plans" */
export type Course_Study_Plans_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  study_plan?: Maybe<Study_Plans_Order_By>;
  study_plan_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "course_study_plans" */
export type Course_Study_Plans_Pk_Columns_Input = {
  course_id: Scalars['String'];
  study_plan_id: Scalars['String'];
};

/** select columns of table "course_study_plans" */
export enum Course_Study_Plans_Select_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudyPlanId = 'study_plan_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "course_study_plans" */
export type Course_Study_Plans_Set_Input = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "course_study_plans" */
export enum Course_Study_Plans_Update_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudyPlanId = 'study_plan_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "courses" */
export type Courses = {
  country?: Maybe<Scalars['String']>;
  /** An array relationship */
  course_access_paths: Array<Course_Access_Paths>;
  /** An aggregated array relationship */
  course_access_paths_aggregate: Course_Access_Paths_Aggregate;
  /** An array relationship */
  course_books: Array<Courses_Books>;
  /** An aggregated array relationship */
  course_books_aggregate: Courses_Books_Aggregate;
  /** An array relationship */
  course_classes: Array<Courses_Classes>;
  /** An aggregated array relationship */
  course_classes_aggregate: Courses_Classes_Aggregate;
  course_id: Scalars['String'];
  /** An array relationship */
  course_lessons: Array<Lessons>;
  /** An aggregated array relationship */
  course_lessons_aggregate: Lessons_Aggregate;
  course_type?: Maybe<Scalars['String']>;
  /** An array relationship */
  courses_academic_years: Array<Courses_Academic_Years>;
  /** An aggregated array relationship */
  courses_academic_years_aggregate: Courses_Academic_Years_Aggregate;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  icon?: Maybe<Scalars['String']>;
  /** An array relationship */
  lesson_groups: Array<Lesson_Groups>;
  /** An aggregated array relationship */
  lesson_groups_aggregate: Lesson_Groups_Aggregate;
  /** An array relationship */
  lesson_members: Array<Lesson_Members>;
  /** An aggregated array relationship */
  lesson_members_aggregate: Lesson_Members_Aggregate;
  /** An array relationship */
  lessons_courses: Array<Lessons_Courses>;
  /** An aggregated array relationship */
  lessons_courses_aggregate: Lessons_Courses_Aggregate;
  name: Scalars['String'];
  preset_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  school: Schools;
  school_id: Scalars['Int'];
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  /** An array relationship */
  teacher: Array<Teacher_By_School_Id>;
  /** An aggregated array relationship */
  teacher_aggregate: Teacher_By_School_Id_Aggregate;
  teacher_ids?: Maybe<Scalars['_text']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "courses" */
export type CoursesCourse_Access_PathsArgs = {
  distinct_on?: Maybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Access_Paths_Order_By>>;
  where?: Maybe<Course_Access_Paths_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesCourse_Access_Paths_AggregateArgs = {
  distinct_on?: Maybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Access_Paths_Order_By>>;
  where?: Maybe<Course_Access_Paths_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesCourse_BooksArgs = {
  distinct_on?: Maybe<Array<Courses_Books_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Books_Order_By>>;
  where?: Maybe<Courses_Books_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesCourse_Books_AggregateArgs = {
  distinct_on?: Maybe<Array<Courses_Books_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Books_Order_By>>;
  where?: Maybe<Courses_Books_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesCourse_ClassesArgs = {
  distinct_on?: Maybe<Array<Courses_Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Classes_Order_By>>;
  where?: Maybe<Courses_Classes_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesCourse_Classes_AggregateArgs = {
  distinct_on?: Maybe<Array<Courses_Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Classes_Order_By>>;
  where?: Maybe<Courses_Classes_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesCourse_LessonsArgs = {
  distinct_on?: Maybe<Array<Lessons_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Order_By>>;
  where?: Maybe<Lessons_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesCourse_Lessons_AggregateArgs = {
  distinct_on?: Maybe<Array<Lessons_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Order_By>>;
  where?: Maybe<Lessons_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesCourses_Academic_YearsArgs = {
  distinct_on?: Maybe<Array<Courses_Academic_Years_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Academic_Years_Order_By>>;
  where?: Maybe<Courses_Academic_Years_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesCourses_Academic_Years_AggregateArgs = {
  distinct_on?: Maybe<Array<Courses_Academic_Years_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Academic_Years_Order_By>>;
  where?: Maybe<Courses_Academic_Years_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesLesson_GroupsArgs = {
  distinct_on?: Maybe<Array<Lesson_Groups_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Groups_Order_By>>;
  where?: Maybe<Lesson_Groups_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesLesson_Groups_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Groups_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Groups_Order_By>>;
  where?: Maybe<Lesson_Groups_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesLesson_MembersArgs = {
  distinct_on?: Maybe<Array<Lesson_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Members_Order_By>>;
  where?: Maybe<Lesson_Members_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesLesson_Members_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Members_Order_By>>;
  where?: Maybe<Lesson_Members_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesLessons_CoursesArgs = {
  distinct_on?: Maybe<Array<Lessons_Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Courses_Order_By>>;
  where?: Maybe<Lessons_Courses_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesLessons_Courses_AggregateArgs = {
  distinct_on?: Maybe<Array<Lessons_Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Courses_Order_By>>;
  where?: Maybe<Lessons_Courses_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesTeacherArgs = {
  distinct_on?: Maybe<Array<Teacher_By_School_Id_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Teacher_By_School_Id_Order_By>>;
  where?: Maybe<Teacher_By_School_Id_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesTeacher_AggregateArgs = {
  distinct_on?: Maybe<Array<Teacher_By_School_Id_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Teacher_By_School_Id_Order_By>>;
  where?: Maybe<Teacher_By_School_Id_Bool_Exp>;
};

/** columns and relationships of "courses_academic_years" */
export type Courses_Academic_Years = {
  /** An object relationship */
  academic_year: Academic_Years;
  academic_year_id: Scalars['String'];
  /** An object relationship */
  course: Courses;
  course_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "courses_academic_years" */
export type Courses_Academic_Years_Aggregate = {
  aggregate?: Maybe<Courses_Academic_Years_Aggregate_Fields>;
  nodes: Array<Courses_Academic_Years>;
};

/** aggregate fields of "courses_academic_years" */
export type Courses_Academic_Years_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Courses_Academic_Years_Max_Fields>;
  min?: Maybe<Courses_Academic_Years_Min_Fields>;
};


/** aggregate fields of "courses_academic_years" */
export type Courses_Academic_Years_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Courses_Academic_Years_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "courses_academic_years" */
export type Courses_Academic_Years_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Courses_Academic_Years_Max_Order_By>;
  min?: Maybe<Courses_Academic_Years_Min_Order_By>;
};

/** input type for inserting array relation for remote table "courses_academic_years" */
export type Courses_Academic_Years_Arr_Rel_Insert_Input = {
  data: Array<Courses_Academic_Years_Insert_Input>;
  on_conflict?: Maybe<Courses_Academic_Years_On_Conflict>;
};

/** Boolean expression to filter rows from the table "courses_academic_years". All fields are combined with a logical 'AND'. */
export type Courses_Academic_Years_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Courses_Academic_Years_Bool_Exp>>>;
  _not?: Maybe<Courses_Academic_Years_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Courses_Academic_Years_Bool_Exp>>>;
  academic_year?: Maybe<Academic_Years_Bool_Exp>;
  academic_year_id?: Maybe<String_Comparison_Exp>;
  course?: Maybe<Courses_Bool_Exp>;
  course_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "courses_academic_years" */
export enum Courses_Academic_Years_Constraint {
  /** unique or primary key constraint */
  PkCoursesAcademicYears = 'pk__courses_academic_years'
}

/** input type for inserting data into table "courses_academic_years" */
export type Courses_Academic_Years_Insert_Input = {
  academic_year?: Maybe<Academic_Years_Obj_Rel_Insert_Input>;
  academic_year_id?: Maybe<Scalars['String']>;
  course?: Maybe<Courses_Obj_Rel_Insert_Input>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Courses_Academic_Years_Max_Fields = {
  academic_year_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "courses_academic_years" */
export type Courses_Academic_Years_Max_Order_By = {
  academic_year_id?: Maybe<Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Courses_Academic_Years_Min_Fields = {
  academic_year_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "courses_academic_years" */
export type Courses_Academic_Years_Min_Order_By = {
  academic_year_id?: Maybe<Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "courses_academic_years" */
export type Courses_Academic_Years_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Courses_Academic_Years>;
};

/** input type for inserting object relation for remote table "courses_academic_years" */
export type Courses_Academic_Years_Obj_Rel_Insert_Input = {
  data: Courses_Academic_Years_Insert_Input;
  on_conflict?: Maybe<Courses_Academic_Years_On_Conflict>;
};

/** on conflict condition type for table "courses_academic_years" */
export type Courses_Academic_Years_On_Conflict = {
  constraint: Courses_Academic_Years_Constraint;
  update_columns: Array<Courses_Academic_Years_Update_Column>;
  where?: Maybe<Courses_Academic_Years_Bool_Exp>;
};

/** ordering options when selecting data from "courses_academic_years" */
export type Courses_Academic_Years_Order_By = {
  academic_year?: Maybe<Academic_Years_Order_By>;
  academic_year_id?: Maybe<Order_By>;
  course?: Maybe<Courses_Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "courses_academic_years" */
export type Courses_Academic_Years_Pk_Columns_Input = {
  academic_year_id: Scalars['String'];
  course_id: Scalars['String'];
};

/** select columns of table "courses_academic_years" */
export enum Courses_Academic_Years_Select_Column {
  /** column name */
  AcademicYearId = 'academic_year_id',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "courses_academic_years" */
export type Courses_Academic_Years_Set_Input = {
  academic_year_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "courses_academic_years" */
export enum Courses_Academic_Years_Update_Column {
  /** column name */
  AcademicYearId = 'academic_year_id',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregated selection of "courses" */
export type Courses_Aggregate = {
  aggregate?: Maybe<Courses_Aggregate_Fields>;
  nodes: Array<Courses>;
};

/** aggregate fields of "courses" */
export type Courses_Aggregate_Fields = {
  avg?: Maybe<Courses_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Courses_Max_Fields>;
  min?: Maybe<Courses_Min_Fields>;
  stddev?: Maybe<Courses_Stddev_Fields>;
  stddev_pop?: Maybe<Courses_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Courses_Stddev_Samp_Fields>;
  sum?: Maybe<Courses_Sum_Fields>;
  var_pop?: Maybe<Courses_Var_Pop_Fields>;
  var_samp?: Maybe<Courses_Var_Samp_Fields>;
  variance?: Maybe<Courses_Variance_Fields>;
};


/** aggregate fields of "courses" */
export type Courses_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Courses_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "courses" */
export type Courses_Aggregate_Order_By = {
  avg?: Maybe<Courses_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Courses_Max_Order_By>;
  min?: Maybe<Courses_Min_Order_By>;
  stddev?: Maybe<Courses_Stddev_Order_By>;
  stddev_pop?: Maybe<Courses_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Courses_Stddev_Samp_Order_By>;
  sum?: Maybe<Courses_Sum_Order_By>;
  var_pop?: Maybe<Courses_Var_Pop_Order_By>;
  var_samp?: Maybe<Courses_Var_Samp_Order_By>;
  variance?: Maybe<Courses_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "courses" */
export type Courses_Arr_Rel_Insert_Input = {
  data: Array<Courses_Insert_Input>;
  on_conflict?: Maybe<Courses_On_Conflict>;
};

/** aggregate avg on columns */
export type Courses_Avg_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "courses" */
export type Courses_Avg_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** columns and relationships of "courses_books" */
export type Courses_Books = {
  book_id: Scalars['String'];
  /** An array relationship */
  books: Array<Books>;
  /** An aggregated array relationship */
  books_aggregate: Books_Aggregate;
  /** An object relationship */
  course?: Maybe<Courses>;
  course_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "courses_books" */
export type Courses_BooksBooksArgs = {
  distinct_on?: Maybe<Array<Books_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Books_Order_By>>;
  where?: Maybe<Books_Bool_Exp>;
};


/** columns and relationships of "courses_books" */
export type Courses_BooksBooks_AggregateArgs = {
  distinct_on?: Maybe<Array<Books_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Books_Order_By>>;
  where?: Maybe<Books_Bool_Exp>;
};

/** aggregated selection of "courses_books" */
export type Courses_Books_Aggregate = {
  aggregate?: Maybe<Courses_Books_Aggregate_Fields>;
  nodes: Array<Courses_Books>;
};

/** aggregate fields of "courses_books" */
export type Courses_Books_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Courses_Books_Max_Fields>;
  min?: Maybe<Courses_Books_Min_Fields>;
};


/** aggregate fields of "courses_books" */
export type Courses_Books_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Courses_Books_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "courses_books" */
export type Courses_Books_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Courses_Books_Max_Order_By>;
  min?: Maybe<Courses_Books_Min_Order_By>;
};

/** input type for inserting array relation for remote table "courses_books" */
export type Courses_Books_Arr_Rel_Insert_Input = {
  data: Array<Courses_Books_Insert_Input>;
  on_conflict?: Maybe<Courses_Books_On_Conflict>;
};

/** Boolean expression to filter rows from the table "courses_books". All fields are combined with a logical 'AND'. */
export type Courses_Books_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Courses_Books_Bool_Exp>>>;
  _not?: Maybe<Courses_Books_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Courses_Books_Bool_Exp>>>;
  book_id?: Maybe<String_Comparison_Exp>;
  books?: Maybe<Books_Bool_Exp>;
  course?: Maybe<Courses_Bool_Exp>;
  course_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "courses_books" */
export enum Courses_Books_Constraint {
  /** unique or primary key constraint */
  CoursesBooksPk = 'courses_books_pk'
}

/** input type for inserting data into table "courses_books" */
export type Courses_Books_Insert_Input = {
  book_id?: Maybe<Scalars['String']>;
  books?: Maybe<Books_Arr_Rel_Insert_Input>;
  course?: Maybe<Courses_Obj_Rel_Insert_Input>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Courses_Books_Max_Fields = {
  book_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "courses_books" */
export type Courses_Books_Max_Order_By = {
  book_id?: Maybe<Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Courses_Books_Min_Fields = {
  book_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "courses_books" */
export type Courses_Books_Min_Order_By = {
  book_id?: Maybe<Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "courses_books" */
export type Courses_Books_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Courses_Books>;
};

/** input type for inserting object relation for remote table "courses_books" */
export type Courses_Books_Obj_Rel_Insert_Input = {
  data: Courses_Books_Insert_Input;
  on_conflict?: Maybe<Courses_Books_On_Conflict>;
};

/** on conflict condition type for table "courses_books" */
export type Courses_Books_On_Conflict = {
  constraint: Courses_Books_Constraint;
  update_columns: Array<Courses_Books_Update_Column>;
  where?: Maybe<Courses_Books_Bool_Exp>;
};

/** ordering options when selecting data from "courses_books" */
export type Courses_Books_Order_By = {
  book_id?: Maybe<Order_By>;
  books_aggregate?: Maybe<Books_Aggregate_Order_By>;
  course?: Maybe<Courses_Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "courses_books" */
export type Courses_Books_Pk_Columns_Input = {
  book_id: Scalars['String'];
  course_id: Scalars['String'];
};

/** select columns of table "courses_books" */
export enum Courses_Books_Select_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "courses_books" */
export type Courses_Books_Set_Input = {
  book_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "courses_books" */
export enum Courses_Books_Update_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** Boolean expression to filter rows from the table "courses". All fields are combined with a logical 'AND'. */
export type Courses_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Courses_Bool_Exp>>>;
  _not?: Maybe<Courses_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Courses_Bool_Exp>>>;
  country?: Maybe<String_Comparison_Exp>;
  course_access_paths?: Maybe<Course_Access_Paths_Bool_Exp>;
  course_books?: Maybe<Courses_Books_Bool_Exp>;
  course_classes?: Maybe<Courses_Classes_Bool_Exp>;
  course_id?: Maybe<String_Comparison_Exp>;
  course_lessons?: Maybe<Lessons_Bool_Exp>;
  course_type?: Maybe<String_Comparison_Exp>;
  courses_academic_years?: Maybe<Courses_Academic_Years_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  display_order?: Maybe<Smallint_Comparison_Exp>;
  end_date?: Maybe<Timestamptz_Comparison_Exp>;
  grade?: Maybe<Smallint_Comparison_Exp>;
  icon?: Maybe<String_Comparison_Exp>;
  lesson_groups?: Maybe<Lesson_Groups_Bool_Exp>;
  lesson_members?: Maybe<Lesson_Members_Bool_Exp>;
  lessons_courses?: Maybe<Lessons_Courses_Bool_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  preset_study_plan_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  school?: Maybe<Schools_Bool_Exp>;
  school_id?: Maybe<Int_Comparison_Exp>;
  start_date?: Maybe<Timestamptz_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  subject?: Maybe<String_Comparison_Exp>;
  teacher?: Maybe<Teacher_By_School_Id_Bool_Exp>;
  teacher_ids?: Maybe<_Text_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** columns and relationships of "courses_classes" */
export type Courses_Classes = {
  /** An object relationship */
  class?: Maybe<Classes>;
  class_id: Scalars['Int'];
  /** An object relationship */
  course?: Maybe<Courses>;
  course_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  members: Array<Class_Members>;
  /** An aggregated array relationship */
  members_aggregate: Class_Members_Aggregate;
  resource_path?: Maybe<Scalars['String']>;
  status: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "courses_classes" */
export type Courses_ClassesMembersArgs = {
  distinct_on?: Maybe<Array<Class_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Members_Order_By>>;
  where?: Maybe<Class_Members_Bool_Exp>;
};


/** columns and relationships of "courses_classes" */
export type Courses_ClassesMembers_AggregateArgs = {
  distinct_on?: Maybe<Array<Class_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Members_Order_By>>;
  where?: Maybe<Class_Members_Bool_Exp>;
};

/** aggregated selection of "courses_classes" */
export type Courses_Classes_Aggregate = {
  aggregate?: Maybe<Courses_Classes_Aggregate_Fields>;
  nodes: Array<Courses_Classes>;
};

/** aggregate fields of "courses_classes" */
export type Courses_Classes_Aggregate_Fields = {
  avg?: Maybe<Courses_Classes_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Courses_Classes_Max_Fields>;
  min?: Maybe<Courses_Classes_Min_Fields>;
  stddev?: Maybe<Courses_Classes_Stddev_Fields>;
  stddev_pop?: Maybe<Courses_Classes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Courses_Classes_Stddev_Samp_Fields>;
  sum?: Maybe<Courses_Classes_Sum_Fields>;
  var_pop?: Maybe<Courses_Classes_Var_Pop_Fields>;
  var_samp?: Maybe<Courses_Classes_Var_Samp_Fields>;
  variance?: Maybe<Courses_Classes_Variance_Fields>;
};


/** aggregate fields of "courses_classes" */
export type Courses_Classes_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Courses_Classes_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "courses_classes" */
export type Courses_Classes_Aggregate_Order_By = {
  avg?: Maybe<Courses_Classes_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Courses_Classes_Max_Order_By>;
  min?: Maybe<Courses_Classes_Min_Order_By>;
  stddev?: Maybe<Courses_Classes_Stddev_Order_By>;
  stddev_pop?: Maybe<Courses_Classes_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Courses_Classes_Stddev_Samp_Order_By>;
  sum?: Maybe<Courses_Classes_Sum_Order_By>;
  var_pop?: Maybe<Courses_Classes_Var_Pop_Order_By>;
  var_samp?: Maybe<Courses_Classes_Var_Samp_Order_By>;
  variance?: Maybe<Courses_Classes_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "courses_classes" */
export type Courses_Classes_Arr_Rel_Insert_Input = {
  data: Array<Courses_Classes_Insert_Input>;
  on_conflict?: Maybe<Courses_Classes_On_Conflict>;
};

/** aggregate avg on columns */
export type Courses_Classes_Avg_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "courses_classes" */
export type Courses_Classes_Avg_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "courses_classes". All fields are combined with a logical 'AND'. */
export type Courses_Classes_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Courses_Classes_Bool_Exp>>>;
  _not?: Maybe<Courses_Classes_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Courses_Classes_Bool_Exp>>>;
  class?: Maybe<Classes_Bool_Exp>;
  class_id?: Maybe<Int_Comparison_Exp>;
  course?: Maybe<Courses_Bool_Exp>;
  course_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  members?: Maybe<Class_Members_Bool_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "courses_classes" */
export enum Courses_Classes_Constraint {
  /** unique or primary key constraint */
  CoursesClassesPk = 'courses_classes_pk'
}

/** input type for incrementing integer column in table "courses_classes" */
export type Courses_Classes_Inc_Input = {
  class_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "courses_classes" */
export type Courses_Classes_Insert_Input = {
  class?: Maybe<Classes_Obj_Rel_Insert_Input>;
  class_id?: Maybe<Scalars['Int']>;
  course?: Maybe<Courses_Obj_Rel_Insert_Input>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  members?: Maybe<Class_Members_Arr_Rel_Insert_Input>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Courses_Classes_Max_Fields = {
  class_id?: Maybe<Scalars['Int']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "courses_classes" */
export type Courses_Classes_Max_Order_By = {
  class_id?: Maybe<Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Courses_Classes_Min_Fields = {
  class_id?: Maybe<Scalars['Int']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "courses_classes" */
export type Courses_Classes_Min_Order_By = {
  class_id?: Maybe<Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "courses_classes" */
export type Courses_Classes_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Courses_Classes>;
};

/** input type for inserting object relation for remote table "courses_classes" */
export type Courses_Classes_Obj_Rel_Insert_Input = {
  data: Courses_Classes_Insert_Input;
  on_conflict?: Maybe<Courses_Classes_On_Conflict>;
};

/** on conflict condition type for table "courses_classes" */
export type Courses_Classes_On_Conflict = {
  constraint: Courses_Classes_Constraint;
  update_columns: Array<Courses_Classes_Update_Column>;
  where?: Maybe<Courses_Classes_Bool_Exp>;
};

/** ordering options when selecting data from "courses_classes" */
export type Courses_Classes_Order_By = {
  class?: Maybe<Classes_Order_By>;
  class_id?: Maybe<Order_By>;
  course?: Maybe<Courses_Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  members_aggregate?: Maybe<Class_Members_Aggregate_Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "courses_classes" */
export type Courses_Classes_Pk_Columns_Input = {
  class_id: Scalars['Int'];
  course_id: Scalars['String'];
};

/** select columns of table "courses_classes" */
export enum Courses_Classes_Select_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "courses_classes" */
export type Courses_Classes_Set_Input = {
  class_id?: Maybe<Scalars['Int']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Courses_Classes_Stddev_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "courses_classes" */
export type Courses_Classes_Stddev_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Courses_Classes_Stddev_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "courses_classes" */
export type Courses_Classes_Stddev_Pop_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Courses_Classes_Stddev_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "courses_classes" */
export type Courses_Classes_Stddev_Samp_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Courses_Classes_Sum_Fields = {
  class_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "courses_classes" */
export type Courses_Classes_Sum_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** update columns of table "courses_classes" */
export enum Courses_Classes_Update_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Courses_Classes_Var_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "courses_classes" */
export type Courses_Classes_Var_Pop_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Courses_Classes_Var_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "courses_classes" */
export type Courses_Classes_Var_Samp_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Courses_Classes_Variance_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "courses_classes" */
export type Courses_Classes_Variance_Order_By = {
  class_id?: Maybe<Order_By>;
};

/** unique or primary key constraints on table "courses" */
export enum Courses_Constraint {
  /** unique or primary key constraint */
  CoursesPk = 'courses_pk'
}

/** input type for incrementing integer column in table "courses" */
export type Courses_Inc_Input = {
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "courses" */
export type Courses_Insert_Input = {
  country?: Maybe<Scalars['String']>;
  course_access_paths?: Maybe<Course_Access_Paths_Arr_Rel_Insert_Input>;
  course_books?: Maybe<Courses_Books_Arr_Rel_Insert_Input>;
  course_classes?: Maybe<Courses_Classes_Arr_Rel_Insert_Input>;
  course_id?: Maybe<Scalars['String']>;
  course_lessons?: Maybe<Lessons_Arr_Rel_Insert_Input>;
  course_type?: Maybe<Scalars['String']>;
  courses_academic_years?: Maybe<Courses_Academic_Years_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  icon?: Maybe<Scalars['String']>;
  lesson_groups?: Maybe<Lesson_Groups_Arr_Rel_Insert_Input>;
  lesson_members?: Maybe<Lesson_Members_Arr_Rel_Insert_Input>;
  lessons_courses?: Maybe<Lessons_Courses_Arr_Rel_Insert_Input>;
  name?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school?: Maybe<Schools_Obj_Rel_Insert_Input>;
  school_id?: Maybe<Scalars['Int']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  teacher_ids?: Maybe<Scalars['_text']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Courses_Max_Fields = {
  country?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  course_type?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  icon?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "courses" */
export type Courses_Max_Order_By = {
  country?: Maybe<Order_By>;
  course_id?: Maybe<Order_By>;
  course_type?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  end_date?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  icon?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  preset_study_plan_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Courses_Min_Fields = {
  country?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  course_type?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  icon?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "courses" */
export type Courses_Min_Order_By = {
  country?: Maybe<Order_By>;
  course_id?: Maybe<Order_By>;
  course_type?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  end_date?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  icon?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  preset_study_plan_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "courses" */
export type Courses_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Courses>;
};

/** input type for inserting object relation for remote table "courses" */
export type Courses_Obj_Rel_Insert_Input = {
  data: Courses_Insert_Input;
  on_conflict?: Maybe<Courses_On_Conflict>;
};

/** on conflict condition type for table "courses" */
export type Courses_On_Conflict = {
  constraint: Courses_Constraint;
  update_columns: Array<Courses_Update_Column>;
  where?: Maybe<Courses_Bool_Exp>;
};

/** ordering options when selecting data from "courses" */
export type Courses_Order_By = {
  country?: Maybe<Order_By>;
  course_access_paths_aggregate?: Maybe<Course_Access_Paths_Aggregate_Order_By>;
  course_books_aggregate?: Maybe<Courses_Books_Aggregate_Order_By>;
  course_classes_aggregate?: Maybe<Courses_Classes_Aggregate_Order_By>;
  course_id?: Maybe<Order_By>;
  course_lessons_aggregate?: Maybe<Lessons_Aggregate_Order_By>;
  course_type?: Maybe<Order_By>;
  courses_academic_years_aggregate?: Maybe<Courses_Academic_Years_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  end_date?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  icon?: Maybe<Order_By>;
  lesson_groups_aggregate?: Maybe<Lesson_Groups_Aggregate_Order_By>;
  lesson_members_aggregate?: Maybe<Lesson_Members_Aggregate_Order_By>;
  lessons_courses_aggregate?: Maybe<Lessons_Courses_Aggregate_Order_By>;
  name?: Maybe<Order_By>;
  preset_study_plan_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school?: Maybe<Schools_Order_By>;
  school_id?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  teacher_aggregate?: Maybe<Teacher_By_School_Id_Aggregate_Order_By>;
  teacher_ids?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "courses" */
export type Courses_Pk_Columns_Input = {
  course_id: Scalars['String'];
};

/** select columns of table "courses" */
export enum Courses_Select_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CourseType = 'course_type',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  Grade = 'grade',
  /** column name */
  Icon = 'icon',
  /** column name */
  Name = 'name',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Status = 'status',
  /** column name */
  Subject = 'subject',
  /** column name */
  TeacherIds = 'teacher_ids',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "courses" */
export type Courses_Set_Input = {
  country?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  course_type?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  icon?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  teacher_ids?: Maybe<Scalars['_text']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Courses_Stddev_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "courses" */
export type Courses_Stddev_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Courses_Stddev_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "courses" */
export type Courses_Stddev_Pop_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Courses_Stddev_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "courses" */
export type Courses_Stddev_Samp_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Courses_Sum_Fields = {
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "courses" */
export type Courses_Sum_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** update columns of table "courses" */
export enum Courses_Update_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CourseType = 'course_type',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  Grade = 'grade',
  /** column name */
  Icon = 'icon',
  /** column name */
  Name = 'name',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Status = 'status',
  /** column name */
  Subject = 'subject',
  /** column name */
  TeacherIds = 'teacher_ids',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Courses_Var_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "courses" */
export type Courses_Var_Pop_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Courses_Var_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "courses" */
export type Courses_Var_Samp_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Courses_Variance_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "courses" */
export type Courses_Variance_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};


/** expression to compare columns of type date. All fields are combined with logical 'AND'. */
export type Date_Comparison_Exp = {
  _eq?: Maybe<Scalars['date']>;
  _gt?: Maybe<Scalars['date']>;
  _gte?: Maybe<Scalars['date']>;
  _in?: Maybe<Array<Scalars['date']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['date']>;
  _lte?: Maybe<Scalars['date']>;
  _neq?: Maybe<Scalars['date']>;
  _nin?: Maybe<Array<Scalars['date']>>;
};

/** columns and relationships of "discount" */
export type Discount = {
  available_from: Scalars['timestamptz'];
  available_until: Scalars['timestamptz'];
  created_at: Scalars['timestamptz'];
  discount_amount_type: Scalars['String'];
  discount_amount_value: Scalars['numeric'];
  discount_type: Scalars['String'];
  id: Scalars['Int'];
  is_archived: Scalars['Boolean'];
  name: Scalars['String'];
  /** An array relationship */
  order_items: Array<Order_Item>;
  /** An aggregated array relationship */
  order_items_aggregate: Order_Item_Aggregate;
  recurring_valid_duration?: Maybe<Scalars['Int']>;
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "discount" */
export type DiscountOrder_ItemsArgs = {
  distinct_on?: Maybe<Array<Order_Item_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Item_Order_By>>;
  where?: Maybe<Order_Item_Bool_Exp>;
};


/** columns and relationships of "discount" */
export type DiscountOrder_Items_AggregateArgs = {
  distinct_on?: Maybe<Array<Order_Item_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Item_Order_By>>;
  where?: Maybe<Order_Item_Bool_Exp>;
};

/** aggregated selection of "discount" */
export type Discount_Aggregate = {
  aggregate?: Maybe<Discount_Aggregate_Fields>;
  nodes: Array<Discount>;
};

/** aggregate fields of "discount" */
export type Discount_Aggregate_Fields = {
  avg?: Maybe<Discount_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Discount_Max_Fields>;
  min?: Maybe<Discount_Min_Fields>;
  stddev?: Maybe<Discount_Stddev_Fields>;
  stddev_pop?: Maybe<Discount_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Discount_Stddev_Samp_Fields>;
  sum?: Maybe<Discount_Sum_Fields>;
  var_pop?: Maybe<Discount_Var_Pop_Fields>;
  var_samp?: Maybe<Discount_Var_Samp_Fields>;
  variance?: Maybe<Discount_Variance_Fields>;
};


/** aggregate fields of "discount" */
export type Discount_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Discount_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "discount" */
export type Discount_Aggregate_Order_By = {
  avg?: Maybe<Discount_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Discount_Max_Order_By>;
  min?: Maybe<Discount_Min_Order_By>;
  stddev?: Maybe<Discount_Stddev_Order_By>;
  stddev_pop?: Maybe<Discount_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Discount_Stddev_Samp_Order_By>;
  sum?: Maybe<Discount_Sum_Order_By>;
  var_pop?: Maybe<Discount_Var_Pop_Order_By>;
  var_samp?: Maybe<Discount_Var_Samp_Order_By>;
  variance?: Maybe<Discount_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "discount" */
export type Discount_Arr_Rel_Insert_Input = {
  data: Array<Discount_Insert_Input>;
  on_conflict?: Maybe<Discount_On_Conflict>;
};

/** aggregate avg on columns */
export type Discount_Avg_Fields = {
  discount_amount_value?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  recurring_valid_duration?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "discount" */
export type Discount_Avg_Order_By = {
  discount_amount_value?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  recurring_valid_duration?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "discount". All fields are combined with a logical 'AND'. */
export type Discount_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Discount_Bool_Exp>>>;
  _not?: Maybe<Discount_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Discount_Bool_Exp>>>;
  available_from?: Maybe<Timestamptz_Comparison_Exp>;
  available_until?: Maybe<Timestamptz_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  discount_amount_type?: Maybe<String_Comparison_Exp>;
  discount_amount_value?: Maybe<Numeric_Comparison_Exp>;
  discount_type?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  is_archived?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order_items?: Maybe<Order_Item_Bool_Exp>;
  recurring_valid_duration?: Maybe<Int_Comparison_Exp>;
  remarks?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "discount" */
export enum Discount_Constraint {
  /** unique or primary key constraint */
  DiscountPk = 'discount_pk'
}

/** input type for incrementing integer column in table "discount" */
export type Discount_Inc_Input = {
  discount_amount_value?: Maybe<Scalars['numeric']>;
  id?: Maybe<Scalars['Int']>;
  recurring_valid_duration?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "discount" */
export type Discount_Insert_Input = {
  available_from?: Maybe<Scalars['timestamptz']>;
  available_until?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  discount_amount_type?: Maybe<Scalars['String']>;
  discount_amount_value?: Maybe<Scalars['numeric']>;
  discount_type?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  is_archived?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order_items?: Maybe<Order_Item_Arr_Rel_Insert_Input>;
  recurring_valid_duration?: Maybe<Scalars['Int']>;
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Discount_Max_Fields = {
  available_from?: Maybe<Scalars['timestamptz']>;
  available_until?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  discount_amount_type?: Maybe<Scalars['String']>;
  discount_amount_value?: Maybe<Scalars['numeric']>;
  discount_type?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  recurring_valid_duration?: Maybe<Scalars['Int']>;
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "discount" */
export type Discount_Max_Order_By = {
  available_from?: Maybe<Order_By>;
  available_until?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  discount_amount_type?: Maybe<Order_By>;
  discount_amount_value?: Maybe<Order_By>;
  discount_type?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  recurring_valid_duration?: Maybe<Order_By>;
  remarks?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Discount_Min_Fields = {
  available_from?: Maybe<Scalars['timestamptz']>;
  available_until?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  discount_amount_type?: Maybe<Scalars['String']>;
  discount_amount_value?: Maybe<Scalars['numeric']>;
  discount_type?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  recurring_valid_duration?: Maybe<Scalars['Int']>;
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "discount" */
export type Discount_Min_Order_By = {
  available_from?: Maybe<Order_By>;
  available_until?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  discount_amount_type?: Maybe<Order_By>;
  discount_amount_value?: Maybe<Order_By>;
  discount_type?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  recurring_valid_duration?: Maybe<Order_By>;
  remarks?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "discount" */
export type Discount_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Discount>;
};

/** input type for inserting object relation for remote table "discount" */
export type Discount_Obj_Rel_Insert_Input = {
  data: Discount_Insert_Input;
  on_conflict?: Maybe<Discount_On_Conflict>;
};

/** on conflict condition type for table "discount" */
export type Discount_On_Conflict = {
  constraint: Discount_Constraint;
  update_columns: Array<Discount_Update_Column>;
  where?: Maybe<Discount_Bool_Exp>;
};

/** ordering options when selecting data from "discount" */
export type Discount_Order_By = {
  available_from?: Maybe<Order_By>;
  available_until?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  discount_amount_type?: Maybe<Order_By>;
  discount_amount_value?: Maybe<Order_By>;
  discount_type?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_archived?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order_items_aggregate?: Maybe<Order_Item_Aggregate_Order_By>;
  recurring_valid_duration?: Maybe<Order_By>;
  remarks?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "discount" */
export type Discount_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "discount" */
export enum Discount_Select_Column {
  /** column name */
  AvailableFrom = 'available_from',
  /** column name */
  AvailableUntil = 'available_until',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DiscountAmountType = 'discount_amount_type',
  /** column name */
  DiscountAmountValue = 'discount_amount_value',
  /** column name */
  DiscountType = 'discount_type',
  /** column name */
  Id = 'id',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  Name = 'name',
  /** column name */
  RecurringValidDuration = 'recurring_valid_duration',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "discount" */
export type Discount_Set_Input = {
  available_from?: Maybe<Scalars['timestamptz']>;
  available_until?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  discount_amount_type?: Maybe<Scalars['String']>;
  discount_amount_value?: Maybe<Scalars['numeric']>;
  discount_type?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  is_archived?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  recurring_valid_duration?: Maybe<Scalars['Int']>;
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Discount_Stddev_Fields = {
  discount_amount_value?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  recurring_valid_duration?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "discount" */
export type Discount_Stddev_Order_By = {
  discount_amount_value?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  recurring_valid_duration?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Discount_Stddev_Pop_Fields = {
  discount_amount_value?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  recurring_valid_duration?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "discount" */
export type Discount_Stddev_Pop_Order_By = {
  discount_amount_value?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  recurring_valid_duration?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Discount_Stddev_Samp_Fields = {
  discount_amount_value?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  recurring_valid_duration?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "discount" */
export type Discount_Stddev_Samp_Order_By = {
  discount_amount_value?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  recurring_valid_duration?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Discount_Sum_Fields = {
  discount_amount_value?: Maybe<Scalars['numeric']>;
  id?: Maybe<Scalars['Int']>;
  recurring_valid_duration?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "discount" */
export type Discount_Sum_Order_By = {
  discount_amount_value?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  recurring_valid_duration?: Maybe<Order_By>;
};

/** update columns of table "discount" */
export enum Discount_Update_Column {
  /** column name */
  AvailableFrom = 'available_from',
  /** column name */
  AvailableUntil = 'available_until',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DiscountAmountType = 'discount_amount_type',
  /** column name */
  DiscountAmountValue = 'discount_amount_value',
  /** column name */
  DiscountType = 'discount_type',
  /** column name */
  Id = 'id',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  Name = 'name',
  /** column name */
  RecurringValidDuration = 'recurring_valid_duration',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Discount_Var_Pop_Fields = {
  discount_amount_value?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  recurring_valid_duration?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "discount" */
export type Discount_Var_Pop_Order_By = {
  discount_amount_value?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  recurring_valid_duration?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Discount_Var_Samp_Fields = {
  discount_amount_value?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  recurring_valid_duration?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "discount" */
export type Discount_Var_Samp_Order_By = {
  discount_amount_value?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  recurring_valid_duration?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Discount_Variance_Fields = {
  discount_amount_value?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  recurring_valid_duration?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "discount" */
export type Discount_Variance_Order_By = {
  discount_amount_value?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  recurring_valid_duration?: Maybe<Order_By>;
};

/** columns and relationships of "districts" */
export type Districts = {
  /** An object relationship */
  city: Cities;
  city_id: Scalars['Int'];
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  district_id: Scalars['Int'];
  name: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  /** An array relationship */
  schools: Array<Schools>;
  /** An aggregated array relationship */
  schools_aggregate: Schools_Aggregate;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "districts" */
export type DistrictsSchoolsArgs = {
  distinct_on?: Maybe<Array<Schools_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Schools_Order_By>>;
  where?: Maybe<Schools_Bool_Exp>;
};


/** columns and relationships of "districts" */
export type DistrictsSchools_AggregateArgs = {
  distinct_on?: Maybe<Array<Schools_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Schools_Order_By>>;
  where?: Maybe<Schools_Bool_Exp>;
};

/** aggregated selection of "districts" */
export type Districts_Aggregate = {
  aggregate?: Maybe<Districts_Aggregate_Fields>;
  nodes: Array<Districts>;
};

/** aggregate fields of "districts" */
export type Districts_Aggregate_Fields = {
  avg?: Maybe<Districts_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Districts_Max_Fields>;
  min?: Maybe<Districts_Min_Fields>;
  stddev?: Maybe<Districts_Stddev_Fields>;
  stddev_pop?: Maybe<Districts_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Districts_Stddev_Samp_Fields>;
  sum?: Maybe<Districts_Sum_Fields>;
  var_pop?: Maybe<Districts_Var_Pop_Fields>;
  var_samp?: Maybe<Districts_Var_Samp_Fields>;
  variance?: Maybe<Districts_Variance_Fields>;
};


/** aggregate fields of "districts" */
export type Districts_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Districts_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "districts" */
export type Districts_Aggregate_Order_By = {
  avg?: Maybe<Districts_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Districts_Max_Order_By>;
  min?: Maybe<Districts_Min_Order_By>;
  stddev?: Maybe<Districts_Stddev_Order_By>;
  stddev_pop?: Maybe<Districts_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Districts_Stddev_Samp_Order_By>;
  sum?: Maybe<Districts_Sum_Order_By>;
  var_pop?: Maybe<Districts_Var_Pop_Order_By>;
  var_samp?: Maybe<Districts_Var_Samp_Order_By>;
  variance?: Maybe<Districts_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "districts" */
export type Districts_Arr_Rel_Insert_Input = {
  data: Array<Districts_Insert_Input>;
  on_conflict?: Maybe<Districts_On_Conflict>;
};

/** aggregate avg on columns */
export type Districts_Avg_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "districts" */
export type Districts_Avg_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "districts". All fields are combined with a logical 'AND'. */
export type Districts_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Districts_Bool_Exp>>>;
  _not?: Maybe<Districts_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Districts_Bool_Exp>>>;
  city?: Maybe<Cities_Bool_Exp>;
  city_id?: Maybe<Int_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  district_id?: Maybe<Int_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  schools?: Maybe<Schools_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "districts" */
export enum Districts_Constraint {
  /** unique or primary key constraint */
  DistrictPk = 'district_pk',
  /** unique or primary key constraint */
  DistrictUn = 'district_un'
}

/** input type for incrementing integer column in table "districts" */
export type Districts_Inc_Input = {
  city_id?: Maybe<Scalars['Int']>;
  district_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "districts" */
export type Districts_Insert_Input = {
  city?: Maybe<Cities_Obj_Rel_Insert_Input>;
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  district_id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  schools?: Maybe<Schools_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Districts_Max_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  district_id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "districts" */
export type Districts_Max_Order_By = {
  city_id?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Districts_Min_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  district_id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "districts" */
export type Districts_Min_Order_By = {
  city_id?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "districts" */
export type Districts_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Districts>;
};

/** input type for inserting object relation for remote table "districts" */
export type Districts_Obj_Rel_Insert_Input = {
  data: Districts_Insert_Input;
  on_conflict?: Maybe<Districts_On_Conflict>;
};

/** on conflict condition type for table "districts" */
export type Districts_On_Conflict = {
  constraint: Districts_Constraint;
  update_columns: Array<Districts_Update_Column>;
  where?: Maybe<Districts_Bool_Exp>;
};

/** ordering options when selecting data from "districts" */
export type Districts_Order_By = {
  city?: Maybe<Cities_Order_By>;
  city_id?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  schools_aggregate?: Maybe<Schools_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "districts" */
export type Districts_Pk_Columns_Input = {
  district_id: Scalars['Int'];
};

/** select columns of table "districts" */
export enum Districts_Select_Column {
  /** column name */
  CityId = 'city_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DistrictId = 'district_id',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "districts" */
export type Districts_Set_Input = {
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  district_id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Districts_Stddev_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "districts" */
export type Districts_Stddev_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Districts_Stddev_Pop_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "districts" */
export type Districts_Stddev_Pop_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Districts_Stddev_Samp_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "districts" */
export type Districts_Stddev_Samp_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Districts_Sum_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  district_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "districts" */
export type Districts_Sum_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
};

/** update columns of table "districts" */
export enum Districts_Update_Column {
  /** column name */
  CityId = 'city_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DistrictId = 'district_id',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Districts_Var_Pop_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "districts" */
export type Districts_Var_Pop_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Districts_Var_Samp_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "districts" */
export type Districts_Var_Samp_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Districts_Variance_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "districts" */
export type Districts_Variance_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
};

/** columns and relationships of "e2e_features" */
export type E2e_Features = {
  background?: Maybe<Scalars['jsonb']>;
  children?: Maybe<Scalars['jsonb']>;
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  duration?: Maybe<Scalars['Int']>;
  elements?: Maybe<Scalars['_text']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  feature_id: Scalars['String'];
  instance_id: Scalars['String'];
  keyword?: Maybe<Scalars['String']>;
  media_type?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  rules?: Maybe<Scalars['_text']>;
  scenarios?: Maybe<Scalars['jsonb']>;
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['_text']>;
  updated_at: Scalars['timestamptz'];
  uri?: Maybe<Scalars['String']>;
  worker_id?: Maybe<Scalars['Int']>;
};


/** columns and relationships of "e2e_features" */
export type E2e_FeaturesBackgroundArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "e2e_features" */
export type E2e_FeaturesChildrenArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "e2e_features" */
export type E2e_FeaturesScenariosArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "e2e_features" */
export type E2e_Features_Aggregate = {
  aggregate?: Maybe<E2e_Features_Aggregate_Fields>;
  nodes: Array<E2e_Features>;
};

/** aggregate fields of "e2e_features" */
export type E2e_Features_Aggregate_Fields = {
  avg?: Maybe<E2e_Features_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<E2e_Features_Max_Fields>;
  min?: Maybe<E2e_Features_Min_Fields>;
  stddev?: Maybe<E2e_Features_Stddev_Fields>;
  stddev_pop?: Maybe<E2e_Features_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<E2e_Features_Stddev_Samp_Fields>;
  sum?: Maybe<E2e_Features_Sum_Fields>;
  var_pop?: Maybe<E2e_Features_Var_Pop_Fields>;
  var_samp?: Maybe<E2e_Features_Var_Samp_Fields>;
  variance?: Maybe<E2e_Features_Variance_Fields>;
};


/** aggregate fields of "e2e_features" */
export type E2e_Features_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<E2e_Features_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "e2e_features" */
export type E2e_Features_Aggregate_Order_By = {
  avg?: Maybe<E2e_Features_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<E2e_Features_Max_Order_By>;
  min?: Maybe<E2e_Features_Min_Order_By>;
  stddev?: Maybe<E2e_Features_Stddev_Order_By>;
  stddev_pop?: Maybe<E2e_Features_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<E2e_Features_Stddev_Samp_Order_By>;
  sum?: Maybe<E2e_Features_Sum_Order_By>;
  var_pop?: Maybe<E2e_Features_Var_Pop_Order_By>;
  var_samp?: Maybe<E2e_Features_Var_Samp_Order_By>;
  variance?: Maybe<E2e_Features_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type E2e_Features_Append_Input = {
  background?: Maybe<Scalars['jsonb']>;
  children?: Maybe<Scalars['jsonb']>;
  scenarios?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "e2e_features" */
export type E2e_Features_Arr_Rel_Insert_Input = {
  data: Array<E2e_Features_Insert_Input>;
  on_conflict?: Maybe<E2e_Features_On_Conflict>;
};

/** aggregate avg on columns */
export type E2e_Features_Avg_Fields = {
  duration?: Maybe<Scalars['Float']>;
  worker_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "e2e_features" */
export type E2e_Features_Avg_Order_By = {
  duration?: Maybe<Order_By>;
  worker_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "e2e_features". All fields are combined with a logical 'AND'. */
export type E2e_Features_Bool_Exp = {
  _and?: Maybe<Array<Maybe<E2e_Features_Bool_Exp>>>;
  _not?: Maybe<E2e_Features_Bool_Exp>;
  _or?: Maybe<Array<Maybe<E2e_Features_Bool_Exp>>>;
  background?: Maybe<Jsonb_Comparison_Exp>;
  children?: Maybe<Jsonb_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<String_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  description?: Maybe<String_Comparison_Exp>;
  duration?: Maybe<Int_Comparison_Exp>;
  elements?: Maybe<_Text_Comparison_Exp>;
  ended_at?: Maybe<Timestamptz_Comparison_Exp>;
  feature_id?: Maybe<String_Comparison_Exp>;
  instance_id?: Maybe<String_Comparison_Exp>;
  keyword?: Maybe<String_Comparison_Exp>;
  media_type?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  rules?: Maybe<_Text_Comparison_Exp>;
  scenarios?: Maybe<Jsonb_Comparison_Exp>;
  started_at?: Maybe<Timestamptz_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  tags?: Maybe<_Text_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  uri?: Maybe<String_Comparison_Exp>;
  worker_id?: Maybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "e2e_features" */
export enum E2e_Features_Constraint {
  /** unique or primary key constraint */
  E2eFeaturesPkey = 'e2e_features_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type E2e_Features_Delete_At_Path_Input = {
  background?: Maybe<Array<Maybe<Scalars['String']>>>;
  children?: Maybe<Array<Maybe<Scalars['String']>>>;
  scenarios?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type E2e_Features_Delete_Elem_Input = {
  background?: Maybe<Scalars['Int']>;
  children?: Maybe<Scalars['Int']>;
  scenarios?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type E2e_Features_Delete_Key_Input = {
  background?: Maybe<Scalars['String']>;
  children?: Maybe<Scalars['String']>;
  scenarios?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "e2e_features" */
export type E2e_Features_Inc_Input = {
  duration?: Maybe<Scalars['Int']>;
  worker_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "e2e_features" */
export type E2e_Features_Insert_Input = {
  background?: Maybe<Scalars['jsonb']>;
  children?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  duration?: Maybe<Scalars['Int']>;
  elements?: Maybe<Scalars['_text']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  feature_id?: Maybe<Scalars['String']>;
  instance_id?: Maybe<Scalars['String']>;
  keyword?: Maybe<Scalars['String']>;
  media_type?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  rules?: Maybe<Scalars['_text']>;
  scenarios?: Maybe<Scalars['jsonb']>;
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['_text']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uri?: Maybe<Scalars['String']>;
  worker_id?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type E2e_Features_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  duration?: Maybe<Scalars['Int']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  feature_id?: Maybe<Scalars['String']>;
  instance_id?: Maybe<Scalars['String']>;
  keyword?: Maybe<Scalars['String']>;
  media_type?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uri?: Maybe<Scalars['String']>;
  worker_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "e2e_features" */
export type E2e_Features_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  ended_at?: Maybe<Order_By>;
  feature_id?: Maybe<Order_By>;
  instance_id?: Maybe<Order_By>;
  keyword?: Maybe<Order_By>;
  media_type?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  started_at?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  uri?: Maybe<Order_By>;
  worker_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type E2e_Features_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  duration?: Maybe<Scalars['Int']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  feature_id?: Maybe<Scalars['String']>;
  instance_id?: Maybe<Scalars['String']>;
  keyword?: Maybe<Scalars['String']>;
  media_type?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uri?: Maybe<Scalars['String']>;
  worker_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "e2e_features" */
export type E2e_Features_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  ended_at?: Maybe<Order_By>;
  feature_id?: Maybe<Order_By>;
  instance_id?: Maybe<Order_By>;
  keyword?: Maybe<Order_By>;
  media_type?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  started_at?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  uri?: Maybe<Order_By>;
  worker_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "e2e_features" */
export type E2e_Features_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<E2e_Features>;
};

/** input type for inserting object relation for remote table "e2e_features" */
export type E2e_Features_Obj_Rel_Insert_Input = {
  data: E2e_Features_Insert_Input;
  on_conflict?: Maybe<E2e_Features_On_Conflict>;
};

/** on conflict condition type for table "e2e_features" */
export type E2e_Features_On_Conflict = {
  constraint: E2e_Features_Constraint;
  update_columns: Array<E2e_Features_Update_Column>;
  where?: Maybe<E2e_Features_Bool_Exp>;
};

/** ordering options when selecting data from "e2e_features" */
export type E2e_Features_Order_By = {
  background?: Maybe<Order_By>;
  children?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  elements?: Maybe<Order_By>;
  ended_at?: Maybe<Order_By>;
  feature_id?: Maybe<Order_By>;
  instance_id?: Maybe<Order_By>;
  keyword?: Maybe<Order_By>;
  media_type?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  rules?: Maybe<Order_By>;
  scenarios?: Maybe<Order_By>;
  started_at?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  tags?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  uri?: Maybe<Order_By>;
  worker_id?: Maybe<Order_By>;
};

/** primary key columns input for table: "e2e_features" */
export type E2e_Features_Pk_Columns_Input = {
  feature_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type E2e_Features_Prepend_Input = {
  background?: Maybe<Scalars['jsonb']>;
  children?: Maybe<Scalars['jsonb']>;
  scenarios?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "e2e_features" */
export enum E2e_Features_Select_Column {
  /** column name */
  Background = 'background',
  /** column name */
  Children = 'children',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  Duration = 'duration',
  /** column name */
  Elements = 'elements',
  /** column name */
  EndedAt = 'ended_at',
  /** column name */
  FeatureId = 'feature_id',
  /** column name */
  InstanceId = 'instance_id',
  /** column name */
  Keyword = 'keyword',
  /** column name */
  MediaType = 'media_type',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Rules = 'rules',
  /** column name */
  Scenarios = 'scenarios',
  /** column name */
  StartedAt = 'started_at',
  /** column name */
  Status = 'status',
  /** column name */
  Tags = 'tags',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Uri = 'uri',
  /** column name */
  WorkerId = 'worker_id'
}

/** input type for updating data in table "e2e_features" */
export type E2e_Features_Set_Input = {
  background?: Maybe<Scalars['jsonb']>;
  children?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  duration?: Maybe<Scalars['Int']>;
  elements?: Maybe<Scalars['_text']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  feature_id?: Maybe<Scalars['String']>;
  instance_id?: Maybe<Scalars['String']>;
  keyword?: Maybe<Scalars['String']>;
  media_type?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  rules?: Maybe<Scalars['_text']>;
  scenarios?: Maybe<Scalars['jsonb']>;
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['_text']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uri?: Maybe<Scalars['String']>;
  worker_id?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type E2e_Features_Stddev_Fields = {
  duration?: Maybe<Scalars['Float']>;
  worker_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "e2e_features" */
export type E2e_Features_Stddev_Order_By = {
  duration?: Maybe<Order_By>;
  worker_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type E2e_Features_Stddev_Pop_Fields = {
  duration?: Maybe<Scalars['Float']>;
  worker_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "e2e_features" */
export type E2e_Features_Stddev_Pop_Order_By = {
  duration?: Maybe<Order_By>;
  worker_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type E2e_Features_Stddev_Samp_Fields = {
  duration?: Maybe<Scalars['Float']>;
  worker_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "e2e_features" */
export type E2e_Features_Stddev_Samp_Order_By = {
  duration?: Maybe<Order_By>;
  worker_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type E2e_Features_Sum_Fields = {
  duration?: Maybe<Scalars['Int']>;
  worker_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "e2e_features" */
export type E2e_Features_Sum_Order_By = {
  duration?: Maybe<Order_By>;
  worker_id?: Maybe<Order_By>;
};

/** update columns of table "e2e_features" */
export enum E2e_Features_Update_Column {
  /** column name */
  Background = 'background',
  /** column name */
  Children = 'children',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  Duration = 'duration',
  /** column name */
  Elements = 'elements',
  /** column name */
  EndedAt = 'ended_at',
  /** column name */
  FeatureId = 'feature_id',
  /** column name */
  InstanceId = 'instance_id',
  /** column name */
  Keyword = 'keyword',
  /** column name */
  MediaType = 'media_type',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Rules = 'rules',
  /** column name */
  Scenarios = 'scenarios',
  /** column name */
  StartedAt = 'started_at',
  /** column name */
  Status = 'status',
  /** column name */
  Tags = 'tags',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Uri = 'uri',
  /** column name */
  WorkerId = 'worker_id'
}

/** aggregate var_pop on columns */
export type E2e_Features_Var_Pop_Fields = {
  duration?: Maybe<Scalars['Float']>;
  worker_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "e2e_features" */
export type E2e_Features_Var_Pop_Order_By = {
  duration?: Maybe<Order_By>;
  worker_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type E2e_Features_Var_Samp_Fields = {
  duration?: Maybe<Scalars['Float']>;
  worker_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "e2e_features" */
export type E2e_Features_Var_Samp_Order_By = {
  duration?: Maybe<Order_By>;
  worker_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type E2e_Features_Variance_Fields = {
  duration?: Maybe<Scalars['Float']>;
  worker_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "e2e_features" */
export type E2e_Features_Variance_Order_By = {
  duration?: Maybe<Order_By>;
  worker_id?: Maybe<Order_By>;
};

/** columns and relationships of "e2e_instances" */
export type E2e_Instances = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  duration?: Maybe<Scalars['Int']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  flavor?: Maybe<Scalars['jsonb']>;
  instance_id: Scalars['String'];
  metadata?: Maybe<Scalars['jsonb']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  status_statistics?: Maybe<Scalars['jsonb']>;
  tags?: Maybe<Scalars['_text']>;
  total_worker?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "e2e_instances" */
export type E2e_InstancesFlavorArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "e2e_instances" */
export type E2e_InstancesMetadataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "e2e_instances" */
export type E2e_InstancesStatus_StatisticsArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "e2e_instances" */
export type E2e_Instances_Aggregate = {
  aggregate?: Maybe<E2e_Instances_Aggregate_Fields>;
  nodes: Array<E2e_Instances>;
};

/** aggregate fields of "e2e_instances" */
export type E2e_Instances_Aggregate_Fields = {
  avg?: Maybe<E2e_Instances_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<E2e_Instances_Max_Fields>;
  min?: Maybe<E2e_Instances_Min_Fields>;
  stddev?: Maybe<E2e_Instances_Stddev_Fields>;
  stddev_pop?: Maybe<E2e_Instances_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<E2e_Instances_Stddev_Samp_Fields>;
  sum?: Maybe<E2e_Instances_Sum_Fields>;
  var_pop?: Maybe<E2e_Instances_Var_Pop_Fields>;
  var_samp?: Maybe<E2e_Instances_Var_Samp_Fields>;
  variance?: Maybe<E2e_Instances_Variance_Fields>;
};


/** aggregate fields of "e2e_instances" */
export type E2e_Instances_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<E2e_Instances_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "e2e_instances" */
export type E2e_Instances_Aggregate_Order_By = {
  avg?: Maybe<E2e_Instances_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<E2e_Instances_Max_Order_By>;
  min?: Maybe<E2e_Instances_Min_Order_By>;
  stddev?: Maybe<E2e_Instances_Stddev_Order_By>;
  stddev_pop?: Maybe<E2e_Instances_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<E2e_Instances_Stddev_Samp_Order_By>;
  sum?: Maybe<E2e_Instances_Sum_Order_By>;
  var_pop?: Maybe<E2e_Instances_Var_Pop_Order_By>;
  var_samp?: Maybe<E2e_Instances_Var_Samp_Order_By>;
  variance?: Maybe<E2e_Instances_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type E2e_Instances_Append_Input = {
  flavor?: Maybe<Scalars['jsonb']>;
  metadata?: Maybe<Scalars['jsonb']>;
  status_statistics?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "e2e_instances" */
export type E2e_Instances_Arr_Rel_Insert_Input = {
  data: Array<E2e_Instances_Insert_Input>;
  on_conflict?: Maybe<E2e_Instances_On_Conflict>;
};

/** aggregate avg on columns */
export type E2e_Instances_Avg_Fields = {
  duration?: Maybe<Scalars['Float']>;
  total_worker?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "e2e_instances" */
export type E2e_Instances_Avg_Order_By = {
  duration?: Maybe<Order_By>;
  total_worker?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "e2e_instances". All fields are combined with a logical 'AND'. */
export type E2e_Instances_Bool_Exp = {
  _and?: Maybe<Array<Maybe<E2e_Instances_Bool_Exp>>>;
  _not?: Maybe<E2e_Instances_Bool_Exp>;
  _or?: Maybe<Array<Maybe<E2e_Instances_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  duration?: Maybe<Int_Comparison_Exp>;
  ended_at?: Maybe<Timestamptz_Comparison_Exp>;
  flavor?: Maybe<Jsonb_Comparison_Exp>;
  instance_id?: Maybe<String_Comparison_Exp>;
  metadata?: Maybe<Jsonb_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  started_at?: Maybe<Timestamptz_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  status_statistics?: Maybe<Jsonb_Comparison_Exp>;
  tags?: Maybe<_Text_Comparison_Exp>;
  total_worker?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "e2e_instances" */
export enum E2e_Instances_Constraint {
  /** unique or primary key constraint */
  E2eInstancesPkey = 'e2e_instances_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type E2e_Instances_Delete_At_Path_Input = {
  flavor?: Maybe<Array<Maybe<Scalars['String']>>>;
  metadata?: Maybe<Array<Maybe<Scalars['String']>>>;
  status_statistics?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type E2e_Instances_Delete_Elem_Input = {
  flavor?: Maybe<Scalars['Int']>;
  metadata?: Maybe<Scalars['Int']>;
  status_statistics?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type E2e_Instances_Delete_Key_Input = {
  flavor?: Maybe<Scalars['String']>;
  metadata?: Maybe<Scalars['String']>;
  status_statistics?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "e2e_instances" */
export type E2e_Instances_Inc_Input = {
  duration?: Maybe<Scalars['Int']>;
  total_worker?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "e2e_instances" */
export type E2e_Instances_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  duration?: Maybe<Scalars['Int']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  flavor?: Maybe<Scalars['jsonb']>;
  instance_id?: Maybe<Scalars['String']>;
  metadata?: Maybe<Scalars['jsonb']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  status_statistics?: Maybe<Scalars['jsonb']>;
  tags?: Maybe<Scalars['_text']>;
  total_worker?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type E2e_Instances_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  duration?: Maybe<Scalars['Int']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  instance_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  total_worker?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "e2e_instances" */
export type E2e_Instances_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  ended_at?: Maybe<Order_By>;
  instance_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  started_at?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  total_worker?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type E2e_Instances_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  duration?: Maybe<Scalars['Int']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  instance_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  total_worker?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "e2e_instances" */
export type E2e_Instances_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  ended_at?: Maybe<Order_By>;
  instance_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  started_at?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  total_worker?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "e2e_instances" */
export type E2e_Instances_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<E2e_Instances>;
};

/** input type for inserting object relation for remote table "e2e_instances" */
export type E2e_Instances_Obj_Rel_Insert_Input = {
  data: E2e_Instances_Insert_Input;
  on_conflict?: Maybe<E2e_Instances_On_Conflict>;
};

/** on conflict condition type for table "e2e_instances" */
export type E2e_Instances_On_Conflict = {
  constraint: E2e_Instances_Constraint;
  update_columns: Array<E2e_Instances_Update_Column>;
  where?: Maybe<E2e_Instances_Bool_Exp>;
};

/** ordering options when selecting data from "e2e_instances" */
export type E2e_Instances_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  ended_at?: Maybe<Order_By>;
  flavor?: Maybe<Order_By>;
  instance_id?: Maybe<Order_By>;
  metadata?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  started_at?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  status_statistics?: Maybe<Order_By>;
  tags?: Maybe<Order_By>;
  total_worker?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "e2e_instances" */
export type E2e_Instances_Pk_Columns_Input = {
  instance_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type E2e_Instances_Prepend_Input = {
  flavor?: Maybe<Scalars['jsonb']>;
  metadata?: Maybe<Scalars['jsonb']>;
  status_statistics?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "e2e_instances" */
export enum E2e_Instances_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Duration = 'duration',
  /** column name */
  EndedAt = 'ended_at',
  /** column name */
  Flavor = 'flavor',
  /** column name */
  InstanceId = 'instance_id',
  /** column name */
  Metadata = 'metadata',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartedAt = 'started_at',
  /** column name */
  Status = 'status',
  /** column name */
  StatusStatistics = 'status_statistics',
  /** column name */
  Tags = 'tags',
  /** column name */
  TotalWorker = 'total_worker',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "e2e_instances" */
export type E2e_Instances_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  duration?: Maybe<Scalars['Int']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  flavor?: Maybe<Scalars['jsonb']>;
  instance_id?: Maybe<Scalars['String']>;
  metadata?: Maybe<Scalars['jsonb']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  status_statistics?: Maybe<Scalars['jsonb']>;
  tags?: Maybe<Scalars['_text']>;
  total_worker?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type E2e_Instances_Stddev_Fields = {
  duration?: Maybe<Scalars['Float']>;
  total_worker?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "e2e_instances" */
export type E2e_Instances_Stddev_Order_By = {
  duration?: Maybe<Order_By>;
  total_worker?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type E2e_Instances_Stddev_Pop_Fields = {
  duration?: Maybe<Scalars['Float']>;
  total_worker?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "e2e_instances" */
export type E2e_Instances_Stddev_Pop_Order_By = {
  duration?: Maybe<Order_By>;
  total_worker?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type E2e_Instances_Stddev_Samp_Fields = {
  duration?: Maybe<Scalars['Float']>;
  total_worker?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "e2e_instances" */
export type E2e_Instances_Stddev_Samp_Order_By = {
  duration?: Maybe<Order_By>;
  total_worker?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type E2e_Instances_Sum_Fields = {
  duration?: Maybe<Scalars['Int']>;
  total_worker?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "e2e_instances" */
export type E2e_Instances_Sum_Order_By = {
  duration?: Maybe<Order_By>;
  total_worker?: Maybe<Order_By>;
};

/** update columns of table "e2e_instances" */
export enum E2e_Instances_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Duration = 'duration',
  /** column name */
  EndedAt = 'ended_at',
  /** column name */
  Flavor = 'flavor',
  /** column name */
  InstanceId = 'instance_id',
  /** column name */
  Metadata = 'metadata',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartedAt = 'started_at',
  /** column name */
  Status = 'status',
  /** column name */
  StatusStatistics = 'status_statistics',
  /** column name */
  Tags = 'tags',
  /** column name */
  TotalWorker = 'total_worker',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type E2e_Instances_Var_Pop_Fields = {
  duration?: Maybe<Scalars['Float']>;
  total_worker?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "e2e_instances" */
export type E2e_Instances_Var_Pop_Order_By = {
  duration?: Maybe<Order_By>;
  total_worker?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type E2e_Instances_Var_Samp_Fields = {
  duration?: Maybe<Scalars['Float']>;
  total_worker?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "e2e_instances" */
export type E2e_Instances_Var_Samp_Order_By = {
  duration?: Maybe<Order_By>;
  total_worker?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type E2e_Instances_Variance_Fields = {
  duration?: Maybe<Scalars['Float']>;
  total_worker?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "e2e_instances" */
export type E2e_Instances_Variance_Order_By = {
  duration?: Maybe<Order_By>;
  total_worker?: Maybe<Order_By>;
};

/** columns and relationships of "e2e_scenarios" */
export type E2e_Scenarios = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  feature_id: Scalars['String'];
  keyword?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  pickle?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  scenario_id: Scalars['String'];
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  steps?: Maybe<Scalars['jsonb']>;
  tags?: Maybe<Scalars['_text']>;
  test_case?: Maybe<Scalars['jsonb']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "e2e_scenarios" */
export type E2e_ScenariosPickleArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "e2e_scenarios" */
export type E2e_ScenariosStepsArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "e2e_scenarios" */
export type E2e_ScenariosTest_CaseArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "e2e_scenarios" */
export type E2e_Scenarios_Aggregate = {
  aggregate?: Maybe<E2e_Scenarios_Aggregate_Fields>;
  nodes: Array<E2e_Scenarios>;
};

/** aggregate fields of "e2e_scenarios" */
export type E2e_Scenarios_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<E2e_Scenarios_Max_Fields>;
  min?: Maybe<E2e_Scenarios_Min_Fields>;
};


/** aggregate fields of "e2e_scenarios" */
export type E2e_Scenarios_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<E2e_Scenarios_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "e2e_scenarios" */
export type E2e_Scenarios_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<E2e_Scenarios_Max_Order_By>;
  min?: Maybe<E2e_Scenarios_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type E2e_Scenarios_Append_Input = {
  pickle?: Maybe<Scalars['jsonb']>;
  steps?: Maybe<Scalars['jsonb']>;
  test_case?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "e2e_scenarios" */
export type E2e_Scenarios_Arr_Rel_Insert_Input = {
  data: Array<E2e_Scenarios_Insert_Input>;
  on_conflict?: Maybe<E2e_Scenarios_On_Conflict>;
};

/** Boolean expression to filter rows from the table "e2e_scenarios". All fields are combined with a logical 'AND'. */
export type E2e_Scenarios_Bool_Exp = {
  _and?: Maybe<Array<Maybe<E2e_Scenarios_Bool_Exp>>>;
  _not?: Maybe<E2e_Scenarios_Bool_Exp>;
  _or?: Maybe<Array<Maybe<E2e_Scenarios_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  description?: Maybe<String_Comparison_Exp>;
  ended_at?: Maybe<Timestamptz_Comparison_Exp>;
  feature_id?: Maybe<String_Comparison_Exp>;
  keyword?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  pickle?: Maybe<Jsonb_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  scenario_id?: Maybe<String_Comparison_Exp>;
  started_at?: Maybe<Timestamptz_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  steps?: Maybe<Jsonb_Comparison_Exp>;
  tags?: Maybe<_Text_Comparison_Exp>;
  test_case?: Maybe<Jsonb_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "e2e_scenarios" */
export enum E2e_Scenarios_Constraint {
  /** unique or primary key constraint */
  E2eScenariosPkey = 'e2e_scenarios_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type E2e_Scenarios_Delete_At_Path_Input = {
  pickle?: Maybe<Array<Maybe<Scalars['String']>>>;
  steps?: Maybe<Array<Maybe<Scalars['String']>>>;
  test_case?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type E2e_Scenarios_Delete_Elem_Input = {
  pickle?: Maybe<Scalars['Int']>;
  steps?: Maybe<Scalars['Int']>;
  test_case?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type E2e_Scenarios_Delete_Key_Input = {
  pickle?: Maybe<Scalars['String']>;
  steps?: Maybe<Scalars['String']>;
  test_case?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "e2e_scenarios" */
export type E2e_Scenarios_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  feature_id?: Maybe<Scalars['String']>;
  keyword?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  pickle?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  scenario_id?: Maybe<Scalars['String']>;
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  steps?: Maybe<Scalars['jsonb']>;
  tags?: Maybe<Scalars['_text']>;
  test_case?: Maybe<Scalars['jsonb']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type E2e_Scenarios_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  feature_id?: Maybe<Scalars['String']>;
  keyword?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scenario_id?: Maybe<Scalars['String']>;
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "e2e_scenarios" */
export type E2e_Scenarios_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  ended_at?: Maybe<Order_By>;
  feature_id?: Maybe<Order_By>;
  keyword?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  scenario_id?: Maybe<Order_By>;
  started_at?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type E2e_Scenarios_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  feature_id?: Maybe<Scalars['String']>;
  keyword?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scenario_id?: Maybe<Scalars['String']>;
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "e2e_scenarios" */
export type E2e_Scenarios_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  ended_at?: Maybe<Order_By>;
  feature_id?: Maybe<Order_By>;
  keyword?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  scenario_id?: Maybe<Order_By>;
  started_at?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "e2e_scenarios" */
export type E2e_Scenarios_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<E2e_Scenarios>;
};

/** input type for inserting object relation for remote table "e2e_scenarios" */
export type E2e_Scenarios_Obj_Rel_Insert_Input = {
  data: E2e_Scenarios_Insert_Input;
  on_conflict?: Maybe<E2e_Scenarios_On_Conflict>;
};

/** on conflict condition type for table "e2e_scenarios" */
export type E2e_Scenarios_On_Conflict = {
  constraint: E2e_Scenarios_Constraint;
  update_columns: Array<E2e_Scenarios_Update_Column>;
  where?: Maybe<E2e_Scenarios_Bool_Exp>;
};

/** ordering options when selecting data from "e2e_scenarios" */
export type E2e_Scenarios_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  ended_at?: Maybe<Order_By>;
  feature_id?: Maybe<Order_By>;
  keyword?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  pickle?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  scenario_id?: Maybe<Order_By>;
  started_at?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  steps?: Maybe<Order_By>;
  tags?: Maybe<Order_By>;
  test_case?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "e2e_scenarios" */
export type E2e_Scenarios_Pk_Columns_Input = {
  scenario_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type E2e_Scenarios_Prepend_Input = {
  pickle?: Maybe<Scalars['jsonb']>;
  steps?: Maybe<Scalars['jsonb']>;
  test_case?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "e2e_scenarios" */
export enum E2e_Scenarios_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  EndedAt = 'ended_at',
  /** column name */
  FeatureId = 'feature_id',
  /** column name */
  Keyword = 'keyword',
  /** column name */
  Name = 'name',
  /** column name */
  Pickle = 'pickle',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  ScenarioId = 'scenario_id',
  /** column name */
  StartedAt = 'started_at',
  /** column name */
  Status = 'status',
  /** column name */
  Steps = 'steps',
  /** column name */
  Tags = 'tags',
  /** column name */
  TestCase = 'test_case',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "e2e_scenarios" */
export type E2e_Scenarios_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  feature_id?: Maybe<Scalars['String']>;
  keyword?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  pickle?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  scenario_id?: Maybe<Scalars['String']>;
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  steps?: Maybe<Scalars['jsonb']>;
  tags?: Maybe<Scalars['_text']>;
  test_case?: Maybe<Scalars['jsonb']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "e2e_scenarios" */
export enum E2e_Scenarios_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  EndedAt = 'ended_at',
  /** column name */
  FeatureId = 'feature_id',
  /** column name */
  Keyword = 'keyword',
  /** column name */
  Name = 'name',
  /** column name */
  Pickle = 'pickle',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  ScenarioId = 'scenario_id',
  /** column name */
  StartedAt = 'started_at',
  /** column name */
  Status = 'status',
  /** column name */
  Steps = 'steps',
  /** column name */
  Tags = 'tags',
  /** column name */
  TestCase = 'test_case',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "e2e_steps" */
export type E2e_Steps = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  duration?: Maybe<Scalars['numeric']>;
  embeddings?: Maybe<Scalars['jsonb']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  index?: Maybe<Scalars['smallint']>;
  is_hook?: Maybe<Scalars['Boolean']>;
  keyword?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scenario_id: Scalars['String'];
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  step_id: Scalars['String'];
  type?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  uri?: Maybe<Scalars['String']>;
  will_be_retried?: Maybe<Scalars['Boolean']>;
};


/** columns and relationships of "e2e_steps" */
export type E2e_StepsEmbeddingsArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "e2e_steps" */
export type E2e_Steps_Aggregate = {
  aggregate?: Maybe<E2e_Steps_Aggregate_Fields>;
  nodes: Array<E2e_Steps>;
};

/** aggregate fields of "e2e_steps" */
export type E2e_Steps_Aggregate_Fields = {
  avg?: Maybe<E2e_Steps_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<E2e_Steps_Max_Fields>;
  min?: Maybe<E2e_Steps_Min_Fields>;
  stddev?: Maybe<E2e_Steps_Stddev_Fields>;
  stddev_pop?: Maybe<E2e_Steps_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<E2e_Steps_Stddev_Samp_Fields>;
  sum?: Maybe<E2e_Steps_Sum_Fields>;
  var_pop?: Maybe<E2e_Steps_Var_Pop_Fields>;
  var_samp?: Maybe<E2e_Steps_Var_Samp_Fields>;
  variance?: Maybe<E2e_Steps_Variance_Fields>;
};


/** aggregate fields of "e2e_steps" */
export type E2e_Steps_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<E2e_Steps_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "e2e_steps" */
export type E2e_Steps_Aggregate_Order_By = {
  avg?: Maybe<E2e_Steps_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<E2e_Steps_Max_Order_By>;
  min?: Maybe<E2e_Steps_Min_Order_By>;
  stddev?: Maybe<E2e_Steps_Stddev_Order_By>;
  stddev_pop?: Maybe<E2e_Steps_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<E2e_Steps_Stddev_Samp_Order_By>;
  sum?: Maybe<E2e_Steps_Sum_Order_By>;
  var_pop?: Maybe<E2e_Steps_Var_Pop_Order_By>;
  var_samp?: Maybe<E2e_Steps_Var_Samp_Order_By>;
  variance?: Maybe<E2e_Steps_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type E2e_Steps_Append_Input = {
  embeddings?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "e2e_steps" */
export type E2e_Steps_Arr_Rel_Insert_Input = {
  data: Array<E2e_Steps_Insert_Input>;
  on_conflict?: Maybe<E2e_Steps_On_Conflict>;
};

/** aggregate avg on columns */
export type E2e_Steps_Avg_Fields = {
  duration?: Maybe<Scalars['Float']>;
  index?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "e2e_steps" */
export type E2e_Steps_Avg_Order_By = {
  duration?: Maybe<Order_By>;
  index?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "e2e_steps". All fields are combined with a logical 'AND'. */
export type E2e_Steps_Bool_Exp = {
  _and?: Maybe<Array<Maybe<E2e_Steps_Bool_Exp>>>;
  _not?: Maybe<E2e_Steps_Bool_Exp>;
  _or?: Maybe<Array<Maybe<E2e_Steps_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  duration?: Maybe<Numeric_Comparison_Exp>;
  embeddings?: Maybe<Jsonb_Comparison_Exp>;
  ended_at?: Maybe<Timestamptz_Comparison_Exp>;
  index?: Maybe<Smallint_Comparison_Exp>;
  is_hook?: Maybe<Boolean_Comparison_Exp>;
  keyword?: Maybe<String_Comparison_Exp>;
  message?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  scenario_id?: Maybe<String_Comparison_Exp>;
  started_at?: Maybe<Timestamptz_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  step_id?: Maybe<String_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  uri?: Maybe<String_Comparison_Exp>;
  will_be_retried?: Maybe<Boolean_Comparison_Exp>;
};

/** unique or primary key constraints on table "e2e_steps" */
export enum E2e_Steps_Constraint {
  /** unique or primary key constraint */
  E2eStepsPkey = 'e2e_steps_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type E2e_Steps_Delete_At_Path_Input = {
  embeddings?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type E2e_Steps_Delete_Elem_Input = {
  embeddings?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type E2e_Steps_Delete_Key_Input = {
  embeddings?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "e2e_steps" */
export type E2e_Steps_Inc_Input = {
  duration?: Maybe<Scalars['numeric']>;
  index?: Maybe<Scalars['smallint']>;
};

/** input type for inserting data into table "e2e_steps" */
export type E2e_Steps_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  duration?: Maybe<Scalars['numeric']>;
  embeddings?: Maybe<Scalars['jsonb']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  index?: Maybe<Scalars['smallint']>;
  is_hook?: Maybe<Scalars['Boolean']>;
  keyword?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scenario_id?: Maybe<Scalars['String']>;
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  step_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uri?: Maybe<Scalars['String']>;
  will_be_retried?: Maybe<Scalars['Boolean']>;
};

/** aggregate max on columns */
export type E2e_Steps_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  duration?: Maybe<Scalars['numeric']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  index?: Maybe<Scalars['smallint']>;
  keyword?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scenario_id?: Maybe<Scalars['String']>;
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  step_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uri?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "e2e_steps" */
export type E2e_Steps_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  ended_at?: Maybe<Order_By>;
  index?: Maybe<Order_By>;
  keyword?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  scenario_id?: Maybe<Order_By>;
  started_at?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  step_id?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  uri?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type E2e_Steps_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  duration?: Maybe<Scalars['numeric']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  index?: Maybe<Scalars['smallint']>;
  keyword?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scenario_id?: Maybe<Scalars['String']>;
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  step_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uri?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "e2e_steps" */
export type E2e_Steps_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  ended_at?: Maybe<Order_By>;
  index?: Maybe<Order_By>;
  keyword?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  scenario_id?: Maybe<Order_By>;
  started_at?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  step_id?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  uri?: Maybe<Order_By>;
};

/** response of any mutation on the table "e2e_steps" */
export type E2e_Steps_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<E2e_Steps>;
};

/** input type for inserting object relation for remote table "e2e_steps" */
export type E2e_Steps_Obj_Rel_Insert_Input = {
  data: E2e_Steps_Insert_Input;
  on_conflict?: Maybe<E2e_Steps_On_Conflict>;
};

/** on conflict condition type for table "e2e_steps" */
export type E2e_Steps_On_Conflict = {
  constraint: E2e_Steps_Constraint;
  update_columns: Array<E2e_Steps_Update_Column>;
  where?: Maybe<E2e_Steps_Bool_Exp>;
};

/** ordering options when selecting data from "e2e_steps" */
export type E2e_Steps_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  embeddings?: Maybe<Order_By>;
  ended_at?: Maybe<Order_By>;
  index?: Maybe<Order_By>;
  is_hook?: Maybe<Order_By>;
  keyword?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  scenario_id?: Maybe<Order_By>;
  started_at?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  step_id?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  uri?: Maybe<Order_By>;
  will_be_retried?: Maybe<Order_By>;
};

/** primary key columns input for table: "e2e_steps" */
export type E2e_Steps_Pk_Columns_Input = {
  step_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type E2e_Steps_Prepend_Input = {
  embeddings?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "e2e_steps" */
export enum E2e_Steps_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Duration = 'duration',
  /** column name */
  Embeddings = 'embeddings',
  /** column name */
  EndedAt = 'ended_at',
  /** column name */
  Index = 'index',
  /** column name */
  IsHook = 'is_hook',
  /** column name */
  Keyword = 'keyword',
  /** column name */
  Message = 'message',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  ScenarioId = 'scenario_id',
  /** column name */
  StartedAt = 'started_at',
  /** column name */
  Status = 'status',
  /** column name */
  StepId = 'step_id',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Uri = 'uri',
  /** column name */
  WillBeRetried = 'will_be_retried'
}

/** input type for updating data in table "e2e_steps" */
export type E2e_Steps_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  duration?: Maybe<Scalars['numeric']>;
  embeddings?: Maybe<Scalars['jsonb']>;
  ended_at?: Maybe<Scalars['timestamptz']>;
  index?: Maybe<Scalars['smallint']>;
  is_hook?: Maybe<Scalars['Boolean']>;
  keyword?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scenario_id?: Maybe<Scalars['String']>;
  started_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  step_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uri?: Maybe<Scalars['String']>;
  will_be_retried?: Maybe<Scalars['Boolean']>;
};

/** aggregate stddev on columns */
export type E2e_Steps_Stddev_Fields = {
  duration?: Maybe<Scalars['Float']>;
  index?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "e2e_steps" */
export type E2e_Steps_Stddev_Order_By = {
  duration?: Maybe<Order_By>;
  index?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type E2e_Steps_Stddev_Pop_Fields = {
  duration?: Maybe<Scalars['Float']>;
  index?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "e2e_steps" */
export type E2e_Steps_Stddev_Pop_Order_By = {
  duration?: Maybe<Order_By>;
  index?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type E2e_Steps_Stddev_Samp_Fields = {
  duration?: Maybe<Scalars['Float']>;
  index?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "e2e_steps" */
export type E2e_Steps_Stddev_Samp_Order_By = {
  duration?: Maybe<Order_By>;
  index?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type E2e_Steps_Sum_Fields = {
  duration?: Maybe<Scalars['numeric']>;
  index?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "e2e_steps" */
export type E2e_Steps_Sum_Order_By = {
  duration?: Maybe<Order_By>;
  index?: Maybe<Order_By>;
};

/** update columns of table "e2e_steps" */
export enum E2e_Steps_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Duration = 'duration',
  /** column name */
  Embeddings = 'embeddings',
  /** column name */
  EndedAt = 'ended_at',
  /** column name */
  Index = 'index',
  /** column name */
  IsHook = 'is_hook',
  /** column name */
  Keyword = 'keyword',
  /** column name */
  Message = 'message',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  ScenarioId = 'scenario_id',
  /** column name */
  StartedAt = 'started_at',
  /** column name */
  Status = 'status',
  /** column name */
  StepId = 'step_id',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Uri = 'uri',
  /** column name */
  WillBeRetried = 'will_be_retried'
}

/** aggregate var_pop on columns */
export type E2e_Steps_Var_Pop_Fields = {
  duration?: Maybe<Scalars['Float']>;
  index?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "e2e_steps" */
export type E2e_Steps_Var_Pop_Order_By = {
  duration?: Maybe<Order_By>;
  index?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type E2e_Steps_Var_Samp_Fields = {
  duration?: Maybe<Scalars['Float']>;
  index?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "e2e_steps" */
export type E2e_Steps_Var_Samp_Order_By = {
  duration?: Maybe<Order_By>;
  index?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type E2e_Steps_Variance_Fields = {
  duration?: Maybe<Scalars['Float']>;
  index?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "e2e_steps" */
export type E2e_Steps_Variance_Order_By = {
  duration?: Maybe<Order_By>;
  index?: Maybe<Order_By>;
};

export type Find_Assignment_By_Topic_Id_Args = {
  ids?: Maybe<Scalars['_text']>;
};

export type Find_Quiz_By_Lo_Id_Args = {
  id?: Maybe<Scalars['String']>;
};

export type Find_Teacher_By_School_Id_Args = {
  school_id?: Maybe<Scalars['Int']>;
};

export type Get_List_Course_Student_Study_Plans_By_Filter_Args = {
  _book_ids?: Maybe<Scalars['_text']>;
  _course_id?: Maybe<Scalars['String']>;
  _grades?: Maybe<Scalars['_int4']>;
  _status?: Maybe<Scalars['String']>;
  search?: Maybe<Scalars['String']>;
};

export type Get_List_Course_Study_Plan_By_Filter_Args = {
  _book_ids?: Maybe<Scalars['_text']>;
  _course_id?: Maybe<Scalars['String']>;
  _grades?: Maybe<Scalars['_int4']>;
  _status?: Maybe<Scalars['_text']>;
  search?: Maybe<Scalars['String']>;
};

export type Get_Locations_Active_By_Course_Id_Args = {
  course?: Maybe<Scalars['String']>;
};

export type Get_Locations_Lowest_Level_Args = {
  location_limit?: Maybe<Scalars['Int']>;
  location_offset?: Maybe<Scalars['Int']>;
  location_search_name?: Maybe<Scalars['String']>;
};

export type Get_Partner_Dynamic_Form_Field_Values_By_Student_Args = {
  report_id?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

export type Get_Previous_Report_Of_Student_Args = {
  report_course_id?: Maybe<Scalars['String']>;
  report_id?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

export type Get_Previous_Report_Of_Student_V2_Args = {
  report_course_id?: Maybe<Scalars['String']>;
  report_id?: Maybe<Scalars['String']>;
  report_lesson_id?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

export type Get_Previous_Report_Of_Student_V3_Args = {
  report_course_id?: Maybe<Scalars['String']>;
  report_id?: Maybe<Scalars['String']>;
  report_lesson_id?: Maybe<Scalars['String']>;
  report_user_id?: Maybe<Scalars['String']>;
};

export type Get_Student_Study_Plans_By_Filter_Args = {
  _book_ids?: Maybe<Scalars['_text']>;
  _course_id?: Maybe<Scalars['String']>;
  _grades?: Maybe<Scalars['_int4']>;
  _status?: Maybe<Scalars['String']>;
  _student_ids?: Maybe<Scalars['_text']>;
  search?: Maybe<Scalars['String']>;
};

/** columns and relationships of "grade" */
export type Grade = {
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  is_archived: Scalars['Boolean'];
  name: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "grade" */
export type Grade_Aggregate = {
  aggregate?: Maybe<Grade_Aggregate_Fields>;
  nodes: Array<Grade>;
};

/** aggregate fields of "grade" */
export type Grade_Aggregate_Fields = {
  avg?: Maybe<Grade_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Grade_Max_Fields>;
  min?: Maybe<Grade_Min_Fields>;
  stddev?: Maybe<Grade_Stddev_Fields>;
  stddev_pop?: Maybe<Grade_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Grade_Stddev_Samp_Fields>;
  sum?: Maybe<Grade_Sum_Fields>;
  var_pop?: Maybe<Grade_Var_Pop_Fields>;
  var_samp?: Maybe<Grade_Var_Samp_Fields>;
  variance?: Maybe<Grade_Variance_Fields>;
};


/** aggregate fields of "grade" */
export type Grade_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Grade_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "grade" */
export type Grade_Aggregate_Order_By = {
  avg?: Maybe<Grade_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Grade_Max_Order_By>;
  min?: Maybe<Grade_Min_Order_By>;
  stddev?: Maybe<Grade_Stddev_Order_By>;
  stddev_pop?: Maybe<Grade_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Grade_Stddev_Samp_Order_By>;
  sum?: Maybe<Grade_Sum_Order_By>;
  var_pop?: Maybe<Grade_Var_Pop_Order_By>;
  var_samp?: Maybe<Grade_Var_Samp_Order_By>;
  variance?: Maybe<Grade_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "grade" */
export type Grade_Arr_Rel_Insert_Input = {
  data: Array<Grade_Insert_Input>;
  on_conflict?: Maybe<Grade_On_Conflict>;
};

/** aggregate avg on columns */
export type Grade_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "grade" */
export type Grade_Avg_Order_By = {
  id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "grade". All fields are combined with a logical 'AND'. */
export type Grade_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Grade_Bool_Exp>>>;
  _not?: Maybe<Grade_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Grade_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  is_archived?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "grade" */
export enum Grade_Constraint {
  /** unique or primary key constraint */
  GradePk = 'grade_pk'
}

/** input type for incrementing integer column in table "grade" */
export type Grade_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "grade" */
export type Grade_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  is_archived?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Grade_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "grade" */
export type Grade_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Grade_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "grade" */
export type Grade_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "grade" */
export type Grade_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Grade>;
};

/** input type for inserting object relation for remote table "grade" */
export type Grade_Obj_Rel_Insert_Input = {
  data: Grade_Insert_Input;
  on_conflict?: Maybe<Grade_On_Conflict>;
};

/** on conflict condition type for table "grade" */
export type Grade_On_Conflict = {
  constraint: Grade_Constraint;
  update_columns: Array<Grade_Update_Column>;
  where?: Maybe<Grade_Bool_Exp>;
};

/** ordering options when selecting data from "grade" */
export type Grade_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_archived?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "grade" */
export type Grade_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "grade" */
export enum Grade_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "grade" */
export type Grade_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  is_archived?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Grade_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "grade" */
export type Grade_Stddev_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Grade_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "grade" */
export type Grade_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Grade_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "grade" */
export type Grade_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Grade_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "grade" */
export type Grade_Sum_Order_By = {
  id?: Maybe<Order_By>;
};

/** update columns of table "grade" */
export enum Grade_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Grade_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "grade" */
export type Grade_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Grade_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "grade" */
export type Grade_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Grade_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "grade" */
export type Grade_Variance_Order_By = {
  id?: Maybe<Order_By>;
};

/** columns and relationships of "groups" */
export type Groups = {
  created_at: Scalars['timestamptz'];
  description?: Maybe<Scalars['String']>;
  group_id: Scalars['String'];
  name: Scalars['String'];
  privileges?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An array relationship */
  users_groups: Array<Users_Groups>;
  /** An aggregated array relationship */
  users_groups_aggregate: Users_Groups_Aggregate;
};


/** columns and relationships of "groups" */
export type GroupsPrivilegesArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "groups" */
export type GroupsUsers_GroupsArgs = {
  distinct_on?: Maybe<Array<Users_Groups_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Groups_Order_By>>;
  where?: Maybe<Users_Groups_Bool_Exp>;
};


/** columns and relationships of "groups" */
export type GroupsUsers_Groups_AggregateArgs = {
  distinct_on?: Maybe<Array<Users_Groups_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Groups_Order_By>>;
  where?: Maybe<Users_Groups_Bool_Exp>;
};

/** aggregated selection of "groups" */
export type Groups_Aggregate = {
  aggregate?: Maybe<Groups_Aggregate_Fields>;
  nodes: Array<Groups>;
};

/** aggregate fields of "groups" */
export type Groups_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Groups_Max_Fields>;
  min?: Maybe<Groups_Min_Fields>;
};


/** aggregate fields of "groups" */
export type Groups_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Groups_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "groups" */
export type Groups_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Groups_Max_Order_By>;
  min?: Maybe<Groups_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Groups_Append_Input = {
  privileges?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "groups" */
export type Groups_Arr_Rel_Insert_Input = {
  data: Array<Groups_Insert_Input>;
  on_conflict?: Maybe<Groups_On_Conflict>;
};

/** Boolean expression to filter rows from the table "groups". All fields are combined with a logical 'AND'. */
export type Groups_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Groups_Bool_Exp>>>;
  _not?: Maybe<Groups_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Groups_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  description?: Maybe<String_Comparison_Exp>;
  group_id?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  privileges?: Maybe<Jsonb_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  users_groups?: Maybe<Users_Groups_Bool_Exp>;
};

/** unique or primary key constraints on table "groups" */
export enum Groups_Constraint {
  /** unique or primary key constraint */
  PkGroups = 'pk__groups'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Groups_Delete_At_Path_Input = {
  privileges?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Groups_Delete_Elem_Input = {
  privileges?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Groups_Delete_Key_Input = {
  privileges?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "groups" */
export type Groups_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  group_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  privileges?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  users_groups?: Maybe<Users_Groups_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Groups_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  group_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "groups" */
export type Groups_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  group_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Groups_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  group_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "groups" */
export type Groups_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  group_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "groups" */
export type Groups_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Groups>;
};

/** input type for inserting object relation for remote table "groups" */
export type Groups_Obj_Rel_Insert_Input = {
  data: Groups_Insert_Input;
  on_conflict?: Maybe<Groups_On_Conflict>;
};

/** on conflict condition type for table "groups" */
export type Groups_On_Conflict = {
  constraint: Groups_Constraint;
  update_columns: Array<Groups_Update_Column>;
  where?: Maybe<Groups_Bool_Exp>;
};

/** ordering options when selecting data from "groups" */
export type Groups_Order_By = {
  created_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  group_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  privileges?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  users_groups_aggregate?: Maybe<Users_Groups_Aggregate_Order_By>;
};

/** primary key columns input for table: "groups" */
export type Groups_Pk_Columns_Input = {
  group_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Groups_Prepend_Input = {
  privileges?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "groups" */
export enum Groups_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  GroupId = 'group_id',
  /** column name */
  Name = 'name',
  /** column name */
  Privileges = 'privileges',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "groups" */
export type Groups_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  group_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  privileges?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "groups" */
export enum Groups_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  GroupId = 'group_id',
  /** column name */
  Name = 'name',
  /** column name */
  Privileges = 'privileges',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "hub_tours" */
export type Hub_Tours = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  hub: Hubs;
  hub_id: Scalars['Int'];
  parent_phone_number?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status: Scalars['String'];
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user?: Maybe<Users>;
};

/** aggregated selection of "hub_tours" */
export type Hub_Tours_Aggregate = {
  aggregate?: Maybe<Hub_Tours_Aggregate_Fields>;
  nodes: Array<Hub_Tours>;
};

/** aggregate fields of "hub_tours" */
export type Hub_Tours_Aggregate_Fields = {
  avg?: Maybe<Hub_Tours_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Hub_Tours_Max_Fields>;
  min?: Maybe<Hub_Tours_Min_Fields>;
  stddev?: Maybe<Hub_Tours_Stddev_Fields>;
  stddev_pop?: Maybe<Hub_Tours_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Hub_Tours_Stddev_Samp_Fields>;
  sum?: Maybe<Hub_Tours_Sum_Fields>;
  var_pop?: Maybe<Hub_Tours_Var_Pop_Fields>;
  var_samp?: Maybe<Hub_Tours_Var_Samp_Fields>;
  variance?: Maybe<Hub_Tours_Variance_Fields>;
};


/** aggregate fields of "hub_tours" */
export type Hub_Tours_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Hub_Tours_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "hub_tours" */
export type Hub_Tours_Aggregate_Order_By = {
  avg?: Maybe<Hub_Tours_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Hub_Tours_Max_Order_By>;
  min?: Maybe<Hub_Tours_Min_Order_By>;
  stddev?: Maybe<Hub_Tours_Stddev_Order_By>;
  stddev_pop?: Maybe<Hub_Tours_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Hub_Tours_Stddev_Samp_Order_By>;
  sum?: Maybe<Hub_Tours_Sum_Order_By>;
  var_pop?: Maybe<Hub_Tours_Var_Pop_Order_By>;
  var_samp?: Maybe<Hub_Tours_Var_Samp_Order_By>;
  variance?: Maybe<Hub_Tours_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "hub_tours" */
export type Hub_Tours_Arr_Rel_Insert_Input = {
  data: Array<Hub_Tours_Insert_Input>;
  on_conflict?: Maybe<Hub_Tours_On_Conflict>;
};

/** aggregate avg on columns */
export type Hub_Tours_Avg_Fields = {
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "hub_tours" */
export type Hub_Tours_Avg_Order_By = {
  hub_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "hub_tours". All fields are combined with a logical 'AND'. */
export type Hub_Tours_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Hub_Tours_Bool_Exp>>>;
  _not?: Maybe<Hub_Tours_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Hub_Tours_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  hub?: Maybe<Hubs_Bool_Exp>;
  hub_id?: Maybe<Int_Comparison_Exp>;
  parent_phone_number?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "hub_tours" */
export enum Hub_Tours_Constraint {
  /** unique or primary key constraint */
  HubTourPk = 'hub_tour_pk'
}

/** input type for incrementing integer column in table "hub_tours" */
export type Hub_Tours_Inc_Input = {
  hub_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "hub_tours" */
export type Hub_Tours_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  hub?: Maybe<Hubs_Obj_Rel_Insert_Input>;
  hub_id?: Maybe<Scalars['Int']>;
  parent_phone_number?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Hub_Tours_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  hub_id?: Maybe<Scalars['Int']>;
  parent_phone_number?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "hub_tours" */
export type Hub_Tours_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  hub_id?: Maybe<Order_By>;
  parent_phone_number?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Hub_Tours_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  hub_id?: Maybe<Scalars['Int']>;
  parent_phone_number?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "hub_tours" */
export type Hub_Tours_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  hub_id?: Maybe<Order_By>;
  parent_phone_number?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "hub_tours" */
export type Hub_Tours_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Hub_Tours>;
};

/** input type for inserting object relation for remote table "hub_tours" */
export type Hub_Tours_Obj_Rel_Insert_Input = {
  data: Hub_Tours_Insert_Input;
  on_conflict?: Maybe<Hub_Tours_On_Conflict>;
};

/** on conflict condition type for table "hub_tours" */
export type Hub_Tours_On_Conflict = {
  constraint: Hub_Tours_Constraint;
  update_columns: Array<Hub_Tours_Update_Column>;
  where?: Maybe<Hub_Tours_Bool_Exp>;
};

/** ordering options when selecting data from "hub_tours" */
export type Hub_Tours_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  hub?: Maybe<Hubs_Order_By>;
  hub_id?: Maybe<Order_By>;
  parent_phone_number?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
};

/** primary key columns input for table: "hub_tours" */
export type Hub_Tours_Pk_Columns_Input = {
  hub_id: Scalars['Int'];
  student_id: Scalars['String'];
};

/** select columns of table "hub_tours" */
export enum Hub_Tours_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  HubId = 'hub_id',
  /** column name */
  ParentPhoneNumber = 'parent_phone_number',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "hub_tours" */
export type Hub_Tours_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  hub_id?: Maybe<Scalars['Int']>;
  parent_phone_number?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Hub_Tours_Stddev_Fields = {
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "hub_tours" */
export type Hub_Tours_Stddev_Order_By = {
  hub_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Hub_Tours_Stddev_Pop_Fields = {
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "hub_tours" */
export type Hub_Tours_Stddev_Pop_Order_By = {
  hub_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Hub_Tours_Stddev_Samp_Fields = {
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "hub_tours" */
export type Hub_Tours_Stddev_Samp_Order_By = {
  hub_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Hub_Tours_Sum_Fields = {
  hub_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "hub_tours" */
export type Hub_Tours_Sum_Order_By = {
  hub_id?: Maybe<Order_By>;
};

/** update columns of table "hub_tours" */
export enum Hub_Tours_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  HubId = 'hub_id',
  /** column name */
  ParentPhoneNumber = 'parent_phone_number',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Hub_Tours_Var_Pop_Fields = {
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "hub_tours" */
export type Hub_Tours_Var_Pop_Order_By = {
  hub_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Hub_Tours_Var_Samp_Fields = {
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "hub_tours" */
export type Hub_Tours_Var_Samp_Order_By = {
  hub_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Hub_Tours_Variance_Fields = {
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "hub_tours" */
export type Hub_Tours_Variance_Order_By = {
  hub_id?: Maybe<Order_By>;
};

/** columns and relationships of "hubs" */
export type Hubs = {
  address?: Maybe<Scalars['String']>;
  /** An object relationship */
  city?: Maybe<Cities>;
  city_id?: Maybe<Scalars['Int']>;
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  /** An object relationship */
  district?: Maybe<Districts>;
  district_id?: Maybe<Scalars['Int']>;
  events?: Maybe<Scalars['jsonb']>;
  hub_id: Scalars['Int'];
  /** An array relationship */
  hub_tours: Array<Hub_Tours>;
  /** An aggregated array relationship */
  hub_tours_aggregate: Hub_Tours_Aggregate;
  images?: Maybe<Scalars['_text']>;
  name: Scalars['String'];
  opening_hours?: Maybe<Scalars['_text']>;
  phone_number?: Maybe<Scalars['String']>;
  point?: Maybe<Scalars['point']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "hubs" */
export type HubsEventsArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "hubs" */
export type HubsHub_ToursArgs = {
  distinct_on?: Maybe<Array<Hub_Tours_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Hub_Tours_Order_By>>;
  where?: Maybe<Hub_Tours_Bool_Exp>;
};


/** columns and relationships of "hubs" */
export type HubsHub_Tours_AggregateArgs = {
  distinct_on?: Maybe<Array<Hub_Tours_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Hub_Tours_Order_By>>;
  where?: Maybe<Hub_Tours_Bool_Exp>;
};

/** aggregated selection of "hubs" */
export type Hubs_Aggregate = {
  aggregate?: Maybe<Hubs_Aggregate_Fields>;
  nodes: Array<Hubs>;
};

/** aggregate fields of "hubs" */
export type Hubs_Aggregate_Fields = {
  avg?: Maybe<Hubs_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Hubs_Max_Fields>;
  min?: Maybe<Hubs_Min_Fields>;
  stddev?: Maybe<Hubs_Stddev_Fields>;
  stddev_pop?: Maybe<Hubs_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Hubs_Stddev_Samp_Fields>;
  sum?: Maybe<Hubs_Sum_Fields>;
  var_pop?: Maybe<Hubs_Var_Pop_Fields>;
  var_samp?: Maybe<Hubs_Var_Samp_Fields>;
  variance?: Maybe<Hubs_Variance_Fields>;
};


/** aggregate fields of "hubs" */
export type Hubs_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Hubs_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "hubs" */
export type Hubs_Aggregate_Order_By = {
  avg?: Maybe<Hubs_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Hubs_Max_Order_By>;
  min?: Maybe<Hubs_Min_Order_By>;
  stddev?: Maybe<Hubs_Stddev_Order_By>;
  stddev_pop?: Maybe<Hubs_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Hubs_Stddev_Samp_Order_By>;
  sum?: Maybe<Hubs_Sum_Order_By>;
  var_pop?: Maybe<Hubs_Var_Pop_Order_By>;
  var_samp?: Maybe<Hubs_Var_Samp_Order_By>;
  variance?: Maybe<Hubs_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Hubs_Append_Input = {
  events?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "hubs" */
export type Hubs_Arr_Rel_Insert_Input = {
  data: Array<Hubs_Insert_Input>;
  on_conflict?: Maybe<Hubs_On_Conflict>;
};

/** aggregate avg on columns */
export type Hubs_Avg_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "hubs" */
export type Hubs_Avg_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  hub_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "hubs". All fields are combined with a logical 'AND'. */
export type Hubs_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Hubs_Bool_Exp>>>;
  _not?: Maybe<Hubs_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Hubs_Bool_Exp>>>;
  address?: Maybe<String_Comparison_Exp>;
  city?: Maybe<Cities_Bool_Exp>;
  city_id?: Maybe<Int_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  description?: Maybe<String_Comparison_Exp>;
  district?: Maybe<Districts_Bool_Exp>;
  district_id?: Maybe<Int_Comparison_Exp>;
  events?: Maybe<Jsonb_Comparison_Exp>;
  hub_id?: Maybe<Int_Comparison_Exp>;
  hub_tours?: Maybe<Hub_Tours_Bool_Exp>;
  images?: Maybe<_Text_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  opening_hours?: Maybe<_Text_Comparison_Exp>;
  phone_number?: Maybe<String_Comparison_Exp>;
  point?: Maybe<Point_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "hubs" */
export enum Hubs_Constraint {
  /** unique or primary key constraint */
  HubPk = 'hub_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Hubs_Delete_At_Path_Input = {
  events?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Hubs_Delete_Elem_Input = {
  events?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Hubs_Delete_Key_Input = {
  events?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "hubs" */
export type Hubs_Inc_Input = {
  city_id?: Maybe<Scalars['Int']>;
  district_id?: Maybe<Scalars['Int']>;
  hub_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "hubs" */
export type Hubs_Insert_Input = {
  address?: Maybe<Scalars['String']>;
  city?: Maybe<Cities_Obj_Rel_Insert_Input>;
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  district?: Maybe<Districts_Obj_Rel_Insert_Input>;
  district_id?: Maybe<Scalars['Int']>;
  events?: Maybe<Scalars['jsonb']>;
  hub_id?: Maybe<Scalars['Int']>;
  hub_tours?: Maybe<Hub_Tours_Arr_Rel_Insert_Input>;
  images?: Maybe<Scalars['_text']>;
  name?: Maybe<Scalars['String']>;
  opening_hours?: Maybe<Scalars['_text']>;
  phone_number?: Maybe<Scalars['String']>;
  point?: Maybe<Scalars['point']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Hubs_Max_Fields = {
  address?: Maybe<Scalars['String']>;
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  district_id?: Maybe<Scalars['Int']>;
  hub_id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "hubs" */
export type Hubs_Max_Order_By = {
  address?: Maybe<Order_By>;
  city_id?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  hub_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  phone_number?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Hubs_Min_Fields = {
  address?: Maybe<Scalars['String']>;
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  district_id?: Maybe<Scalars['Int']>;
  hub_id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "hubs" */
export type Hubs_Min_Order_By = {
  address?: Maybe<Order_By>;
  city_id?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  hub_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  phone_number?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "hubs" */
export type Hubs_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Hubs>;
};

/** input type for inserting object relation for remote table "hubs" */
export type Hubs_Obj_Rel_Insert_Input = {
  data: Hubs_Insert_Input;
  on_conflict?: Maybe<Hubs_On_Conflict>;
};

/** on conflict condition type for table "hubs" */
export type Hubs_On_Conflict = {
  constraint: Hubs_Constraint;
  update_columns: Array<Hubs_Update_Column>;
  where?: Maybe<Hubs_Bool_Exp>;
};

/** ordering options when selecting data from "hubs" */
export type Hubs_Order_By = {
  address?: Maybe<Order_By>;
  city?: Maybe<Cities_Order_By>;
  city_id?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  district?: Maybe<Districts_Order_By>;
  district_id?: Maybe<Order_By>;
  events?: Maybe<Order_By>;
  hub_id?: Maybe<Order_By>;
  hub_tours_aggregate?: Maybe<Hub_Tours_Aggregate_Order_By>;
  images?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  opening_hours?: Maybe<Order_By>;
  phone_number?: Maybe<Order_By>;
  point?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "hubs" */
export type Hubs_Pk_Columns_Input = {
  hub_id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Hubs_Prepend_Input = {
  events?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "hubs" */
export enum Hubs_Select_Column {
  /** column name */
  Address = 'address',
  /** column name */
  CityId = 'city_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  DistrictId = 'district_id',
  /** column name */
  Events = 'events',
  /** column name */
  HubId = 'hub_id',
  /** column name */
  Images = 'images',
  /** column name */
  Name = 'name',
  /** column name */
  OpeningHours = 'opening_hours',
  /** column name */
  PhoneNumber = 'phone_number',
  /** column name */
  Point = 'point',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "hubs" */
export type Hubs_Set_Input = {
  address?: Maybe<Scalars['String']>;
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  district_id?: Maybe<Scalars['Int']>;
  events?: Maybe<Scalars['jsonb']>;
  hub_id?: Maybe<Scalars['Int']>;
  images?: Maybe<Scalars['_text']>;
  name?: Maybe<Scalars['String']>;
  opening_hours?: Maybe<Scalars['_text']>;
  phone_number?: Maybe<Scalars['String']>;
  point?: Maybe<Scalars['point']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Hubs_Stddev_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "hubs" */
export type Hubs_Stddev_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  hub_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Hubs_Stddev_Pop_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "hubs" */
export type Hubs_Stddev_Pop_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  hub_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Hubs_Stddev_Samp_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "hubs" */
export type Hubs_Stddev_Samp_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  hub_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Hubs_Sum_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  district_id?: Maybe<Scalars['Int']>;
  hub_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "hubs" */
export type Hubs_Sum_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  hub_id?: Maybe<Order_By>;
};

/** update columns of table "hubs" */
export enum Hubs_Update_Column {
  /** column name */
  Address = 'address',
  /** column name */
  CityId = 'city_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  DistrictId = 'district_id',
  /** column name */
  Events = 'events',
  /** column name */
  HubId = 'hub_id',
  /** column name */
  Images = 'images',
  /** column name */
  Name = 'name',
  /** column name */
  OpeningHours = 'opening_hours',
  /** column name */
  PhoneNumber = 'phone_number',
  /** column name */
  Point = 'point',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Hubs_Var_Pop_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "hubs" */
export type Hubs_Var_Pop_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  hub_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Hubs_Var_Samp_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "hubs" */
export type Hubs_Var_Samp_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  hub_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Hubs_Variance_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "hubs" */
export type Hubs_Variance_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  hub_id?: Maybe<Order_By>;
};

/** columns and relationships of "info_notification_msgs" */
export type Info_Notification_Msgs = {
  content?: Maybe<Scalars['jsonb']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  info_notifications: Array<Info_Notifications>;
  /** An aggregated array relationship */
  info_notifications_aggregate: Info_Notifications_Aggregate;
  media_ids?: Maybe<Scalars['_text']>;
  notification_msg_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  title: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "info_notification_msgs" */
export type Info_Notification_MsgsContentArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "info_notification_msgs" */
export type Info_Notification_MsgsInfo_NotificationsArgs = {
  distinct_on?: Maybe<Array<Info_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Info_Notifications_Order_By>>;
  where?: Maybe<Info_Notifications_Bool_Exp>;
};


/** columns and relationships of "info_notification_msgs" */
export type Info_Notification_MsgsInfo_Notifications_AggregateArgs = {
  distinct_on?: Maybe<Array<Info_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Info_Notifications_Order_By>>;
  where?: Maybe<Info_Notifications_Bool_Exp>;
};

/** aggregated selection of "info_notification_msgs" */
export type Info_Notification_Msgs_Aggregate = {
  aggregate?: Maybe<Info_Notification_Msgs_Aggregate_Fields>;
  nodes: Array<Info_Notification_Msgs>;
};

/** aggregate fields of "info_notification_msgs" */
export type Info_Notification_Msgs_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Info_Notification_Msgs_Max_Fields>;
  min?: Maybe<Info_Notification_Msgs_Min_Fields>;
};


/** aggregate fields of "info_notification_msgs" */
export type Info_Notification_Msgs_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Info_Notification_Msgs_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "info_notification_msgs" */
export type Info_Notification_Msgs_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Info_Notification_Msgs_Max_Order_By>;
  min?: Maybe<Info_Notification_Msgs_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Info_Notification_Msgs_Append_Input = {
  content?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "info_notification_msgs" */
export type Info_Notification_Msgs_Arr_Rel_Insert_Input = {
  data: Array<Info_Notification_Msgs_Insert_Input>;
  on_conflict?: Maybe<Info_Notification_Msgs_On_Conflict>;
};

/** Boolean expression to filter rows from the table "info_notification_msgs". All fields are combined with a logical 'AND'. */
export type Info_Notification_Msgs_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Info_Notification_Msgs_Bool_Exp>>>;
  _not?: Maybe<Info_Notification_Msgs_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Info_Notification_Msgs_Bool_Exp>>>;
  content?: Maybe<Jsonb_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  info_notifications?: Maybe<Info_Notifications_Bool_Exp>;
  media_ids?: Maybe<_Text_Comparison_Exp>;
  notification_msg_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  title?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "info_notification_msgs" */
export enum Info_Notification_Msgs_Constraint {
  /** unique or primary key constraint */
  PkInfoNotificationMsgs = 'pk__info_notification_msgs'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Info_Notification_Msgs_Delete_At_Path_Input = {
  content?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Info_Notification_Msgs_Delete_Elem_Input = {
  content?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Info_Notification_Msgs_Delete_Key_Input = {
  content?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "info_notification_msgs" */
export type Info_Notification_Msgs_Insert_Input = {
  content?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  info_notifications?: Maybe<Info_Notifications_Arr_Rel_Insert_Input>;
  media_ids?: Maybe<Scalars['_text']>;
  notification_msg_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Info_Notification_Msgs_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  notification_msg_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "info_notification_msgs" */
export type Info_Notification_Msgs_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  notification_msg_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Info_Notification_Msgs_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  notification_msg_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "info_notification_msgs" */
export type Info_Notification_Msgs_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  notification_msg_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "info_notification_msgs" */
export type Info_Notification_Msgs_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Info_Notification_Msgs>;
};

/** input type for inserting object relation for remote table "info_notification_msgs" */
export type Info_Notification_Msgs_Obj_Rel_Insert_Input = {
  data: Info_Notification_Msgs_Insert_Input;
  on_conflict?: Maybe<Info_Notification_Msgs_On_Conflict>;
};

/** on conflict condition type for table "info_notification_msgs" */
export type Info_Notification_Msgs_On_Conflict = {
  constraint: Info_Notification_Msgs_Constraint;
  update_columns: Array<Info_Notification_Msgs_Update_Column>;
  where?: Maybe<Info_Notification_Msgs_Bool_Exp>;
};

/** ordering options when selecting data from "info_notification_msgs" */
export type Info_Notification_Msgs_Order_By = {
  content?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  info_notifications_aggregate?: Maybe<Info_Notifications_Aggregate_Order_By>;
  media_ids?: Maybe<Order_By>;
  notification_msg_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "info_notification_msgs" */
export type Info_Notification_Msgs_Pk_Columns_Input = {
  notification_msg_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Info_Notification_Msgs_Prepend_Input = {
  content?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "info_notification_msgs" */
export enum Info_Notification_Msgs_Select_Column {
  /** column name */
  Content = 'content',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  MediaIds = 'media_ids',
  /** column name */
  NotificationMsgId = 'notification_msg_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "info_notification_msgs" */
export type Info_Notification_Msgs_Set_Input = {
  content?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  media_ids?: Maybe<Scalars['_text']>;
  notification_msg_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "info_notification_msgs" */
export enum Info_Notification_Msgs_Update_Column {
  /** column name */
  Content = 'content',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  MediaIds = 'media_ids',
  /** column name */
  NotificationMsgId = 'notification_msg_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "info_notifications" */
export type Info_Notifications = {
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  editor_id?: Maybe<Scalars['String']>;
  event?: Maybe<Scalars['String']>;
  /** An object relationship */
  info_notification_msg?: Maybe<Info_Notification_Msgs>;
  notification_id: Scalars['String'];
  notification_msg_id?: Maybe<Scalars['String']>;
  owner: Scalars['Int'];
  receiver_ids?: Maybe<Scalars['_text']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduled_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  school: Schools;
  /** An object relationship */
  school_admin?: Maybe<School_Admins>;
  sent_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  target_groups?: Maybe<Scalars['jsonb']>;
  type: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An array relationship */
  users_info_notifications: Array<Users_Info_Notifications>;
  /** An aggregated array relationship */
  users_info_notifications_aggregate: Users_Info_Notifications_Aggregate;
};


/** columns and relationships of "info_notifications" */
export type Info_NotificationsDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "info_notifications" */
export type Info_NotificationsTarget_GroupsArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "info_notifications" */
export type Info_NotificationsUsers_Info_NotificationsArgs = {
  distinct_on?: Maybe<Array<Users_Info_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Info_Notifications_Order_By>>;
  where?: Maybe<Users_Info_Notifications_Bool_Exp>;
};


/** columns and relationships of "info_notifications" */
export type Info_NotificationsUsers_Info_Notifications_AggregateArgs = {
  distinct_on?: Maybe<Array<Users_Info_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Info_Notifications_Order_By>>;
  where?: Maybe<Users_Info_Notifications_Bool_Exp>;
};

/** aggregated selection of "info_notifications" */
export type Info_Notifications_Aggregate = {
  aggregate?: Maybe<Info_Notifications_Aggregate_Fields>;
  nodes: Array<Info_Notifications>;
};

/** aggregate fields of "info_notifications" */
export type Info_Notifications_Aggregate_Fields = {
  avg?: Maybe<Info_Notifications_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Info_Notifications_Max_Fields>;
  min?: Maybe<Info_Notifications_Min_Fields>;
  stddev?: Maybe<Info_Notifications_Stddev_Fields>;
  stddev_pop?: Maybe<Info_Notifications_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Info_Notifications_Stddev_Samp_Fields>;
  sum?: Maybe<Info_Notifications_Sum_Fields>;
  var_pop?: Maybe<Info_Notifications_Var_Pop_Fields>;
  var_samp?: Maybe<Info_Notifications_Var_Samp_Fields>;
  variance?: Maybe<Info_Notifications_Variance_Fields>;
};


/** aggregate fields of "info_notifications" */
export type Info_Notifications_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Info_Notifications_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "info_notifications" */
export type Info_Notifications_Aggregate_Order_By = {
  avg?: Maybe<Info_Notifications_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Info_Notifications_Max_Order_By>;
  min?: Maybe<Info_Notifications_Min_Order_By>;
  stddev?: Maybe<Info_Notifications_Stddev_Order_By>;
  stddev_pop?: Maybe<Info_Notifications_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Info_Notifications_Stddev_Samp_Order_By>;
  sum?: Maybe<Info_Notifications_Sum_Order_By>;
  var_pop?: Maybe<Info_Notifications_Var_Pop_Order_By>;
  var_samp?: Maybe<Info_Notifications_Var_Samp_Order_By>;
  variance?: Maybe<Info_Notifications_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Info_Notifications_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
  target_groups?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "info_notifications" */
export type Info_Notifications_Arr_Rel_Insert_Input = {
  data: Array<Info_Notifications_Insert_Input>;
  on_conflict?: Maybe<Info_Notifications_On_Conflict>;
};

/** aggregate avg on columns */
export type Info_Notifications_Avg_Fields = {
  owner?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "info_notifications" */
export type Info_Notifications_Avg_Order_By = {
  owner?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "info_notifications". All fields are combined with a logical 'AND'. */
export type Info_Notifications_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Info_Notifications_Bool_Exp>>>;
  _not?: Maybe<Info_Notifications_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Info_Notifications_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  editor_id?: Maybe<String_Comparison_Exp>;
  event?: Maybe<String_Comparison_Exp>;
  info_notification_msg?: Maybe<Info_Notification_Msgs_Bool_Exp>;
  notification_id?: Maybe<String_Comparison_Exp>;
  notification_msg_id?: Maybe<String_Comparison_Exp>;
  owner?: Maybe<Int_Comparison_Exp>;
  receiver_ids?: Maybe<_Text_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  scheduled_at?: Maybe<Timestamptz_Comparison_Exp>;
  school?: Maybe<Schools_Bool_Exp>;
  school_admin?: Maybe<School_Admins_Bool_Exp>;
  sent_at?: Maybe<Timestamptz_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  target_groups?: Maybe<Jsonb_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  users_info_notifications?: Maybe<Users_Info_Notifications_Bool_Exp>;
};

/** unique or primary key constraints on table "info_notifications" */
export enum Info_Notifications_Constraint {
  /** unique or primary key constraint */
  PkInfoNotifications = 'pk__info_notifications'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Info_Notifications_Delete_At_Path_Input = {
  data?: Maybe<Array<Maybe<Scalars['String']>>>;
  target_groups?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Info_Notifications_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
  target_groups?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Info_Notifications_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
  target_groups?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "info_notifications" */
export type Info_Notifications_Inc_Input = {
  owner?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "info_notifications" */
export type Info_Notifications_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  editor_id?: Maybe<Scalars['String']>;
  event?: Maybe<Scalars['String']>;
  info_notification_msg?: Maybe<Info_Notification_Msgs_Obj_Rel_Insert_Input>;
  notification_id?: Maybe<Scalars['String']>;
  notification_msg_id?: Maybe<Scalars['String']>;
  owner?: Maybe<Scalars['Int']>;
  receiver_ids?: Maybe<Scalars['_text']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduled_at?: Maybe<Scalars['timestamptz']>;
  school?: Maybe<Schools_Obj_Rel_Insert_Input>;
  school_admin?: Maybe<School_Admins_Obj_Rel_Insert_Input>;
  sent_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  target_groups?: Maybe<Scalars['jsonb']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  users_info_notifications?: Maybe<Users_Info_Notifications_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Info_Notifications_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  editor_id?: Maybe<Scalars['String']>;
  event?: Maybe<Scalars['String']>;
  notification_id?: Maybe<Scalars['String']>;
  notification_msg_id?: Maybe<Scalars['String']>;
  owner?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduled_at?: Maybe<Scalars['timestamptz']>;
  sent_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "info_notifications" */
export type Info_Notifications_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  editor_id?: Maybe<Order_By>;
  event?: Maybe<Order_By>;
  notification_id?: Maybe<Order_By>;
  notification_msg_id?: Maybe<Order_By>;
  owner?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  scheduled_at?: Maybe<Order_By>;
  sent_at?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Info_Notifications_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  editor_id?: Maybe<Scalars['String']>;
  event?: Maybe<Scalars['String']>;
  notification_id?: Maybe<Scalars['String']>;
  notification_msg_id?: Maybe<Scalars['String']>;
  owner?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduled_at?: Maybe<Scalars['timestamptz']>;
  sent_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "info_notifications" */
export type Info_Notifications_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  editor_id?: Maybe<Order_By>;
  event?: Maybe<Order_By>;
  notification_id?: Maybe<Order_By>;
  notification_msg_id?: Maybe<Order_By>;
  owner?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  scheduled_at?: Maybe<Order_By>;
  sent_at?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "info_notifications" */
export type Info_Notifications_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Info_Notifications>;
};

/** input type for inserting object relation for remote table "info_notifications" */
export type Info_Notifications_Obj_Rel_Insert_Input = {
  data: Info_Notifications_Insert_Input;
  on_conflict?: Maybe<Info_Notifications_On_Conflict>;
};

/** on conflict condition type for table "info_notifications" */
export type Info_Notifications_On_Conflict = {
  constraint: Info_Notifications_Constraint;
  update_columns: Array<Info_Notifications_Update_Column>;
  where?: Maybe<Info_Notifications_Bool_Exp>;
};

/** ordering options when selecting data from "info_notifications" */
export type Info_Notifications_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  editor_id?: Maybe<Order_By>;
  event?: Maybe<Order_By>;
  info_notification_msg?: Maybe<Info_Notification_Msgs_Order_By>;
  notification_id?: Maybe<Order_By>;
  notification_msg_id?: Maybe<Order_By>;
  owner?: Maybe<Order_By>;
  receiver_ids?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  scheduled_at?: Maybe<Order_By>;
  school?: Maybe<Schools_Order_By>;
  school_admin?: Maybe<School_Admins_Order_By>;
  sent_at?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  target_groups?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  users_info_notifications_aggregate?: Maybe<Users_Info_Notifications_Aggregate_Order_By>;
};

/** primary key columns input for table: "info_notifications" */
export type Info_Notifications_Pk_Columns_Input = {
  notification_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Info_Notifications_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
  target_groups?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "info_notifications" */
export enum Info_Notifications_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EditorId = 'editor_id',
  /** column name */
  Event = 'event',
  /** column name */
  NotificationId = 'notification_id',
  /** column name */
  NotificationMsgId = 'notification_msg_id',
  /** column name */
  Owner = 'owner',
  /** column name */
  ReceiverIds = 'receiver_ids',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  ScheduledAt = 'scheduled_at',
  /** column name */
  SentAt = 'sent_at',
  /** column name */
  Status = 'status',
  /** column name */
  TargetGroups = 'target_groups',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "info_notifications" */
export type Info_Notifications_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  editor_id?: Maybe<Scalars['String']>;
  event?: Maybe<Scalars['String']>;
  notification_id?: Maybe<Scalars['String']>;
  notification_msg_id?: Maybe<Scalars['String']>;
  owner?: Maybe<Scalars['Int']>;
  receiver_ids?: Maybe<Scalars['_text']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduled_at?: Maybe<Scalars['timestamptz']>;
  sent_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  target_groups?: Maybe<Scalars['jsonb']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Info_Notifications_Stddev_Fields = {
  owner?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "info_notifications" */
export type Info_Notifications_Stddev_Order_By = {
  owner?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Info_Notifications_Stddev_Pop_Fields = {
  owner?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "info_notifications" */
export type Info_Notifications_Stddev_Pop_Order_By = {
  owner?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Info_Notifications_Stddev_Samp_Fields = {
  owner?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "info_notifications" */
export type Info_Notifications_Stddev_Samp_Order_By = {
  owner?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Info_Notifications_Sum_Fields = {
  owner?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "info_notifications" */
export type Info_Notifications_Sum_Order_By = {
  owner?: Maybe<Order_By>;
};

/** update columns of table "info_notifications" */
export enum Info_Notifications_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EditorId = 'editor_id',
  /** column name */
  Event = 'event',
  /** column name */
  NotificationId = 'notification_id',
  /** column name */
  NotificationMsgId = 'notification_msg_id',
  /** column name */
  Owner = 'owner',
  /** column name */
  ReceiverIds = 'receiver_ids',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  ScheduledAt = 'scheduled_at',
  /** column name */
  SentAt = 'sent_at',
  /** column name */
  Status = 'status',
  /** column name */
  TargetGroups = 'target_groups',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Info_Notifications_Var_Pop_Fields = {
  owner?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "info_notifications" */
export type Info_Notifications_Var_Pop_Order_By = {
  owner?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Info_Notifications_Var_Samp_Fields = {
  owner?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "info_notifications" */
export type Info_Notifications_Var_Samp_Order_By = {
  owner?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Info_Notifications_Variance_Fields = {
  owner?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "info_notifications" */
export type Info_Notifications_Variance_Order_By = {
  owner?: Maybe<Order_By>;
};

/** columns and relationships of "ios_transactions" */
export type Ios_Transactions = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  ios_transaction_id: Scalars['String'];
  is_manual_verify: Scalars['Boolean'];
  receipt_data: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  status: Scalars['String'];
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "ios_transactions" */
export type Ios_Transactions_Aggregate = {
  aggregate?: Maybe<Ios_Transactions_Aggregate_Fields>;
  nodes: Array<Ios_Transactions>;
};

/** aggregate fields of "ios_transactions" */
export type Ios_Transactions_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Ios_Transactions_Max_Fields>;
  min?: Maybe<Ios_Transactions_Min_Fields>;
};


/** aggregate fields of "ios_transactions" */
export type Ios_Transactions_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Ios_Transactions_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ios_transactions" */
export type Ios_Transactions_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Ios_Transactions_Max_Order_By>;
  min?: Maybe<Ios_Transactions_Min_Order_By>;
};

/** input type for inserting array relation for remote table "ios_transactions" */
export type Ios_Transactions_Arr_Rel_Insert_Input = {
  data: Array<Ios_Transactions_Insert_Input>;
  on_conflict?: Maybe<Ios_Transactions_On_Conflict>;
};

/** Boolean expression to filter rows from the table "ios_transactions". All fields are combined with a logical 'AND'. */
export type Ios_Transactions_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Ios_Transactions_Bool_Exp>>>;
  _not?: Maybe<Ios_Transactions_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Ios_Transactions_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  ios_transaction_id?: Maybe<String_Comparison_Exp>;
  is_manual_verify?: Maybe<Boolean_Comparison_Exp>;
  receipt_data?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ios_transactions" */
export enum Ios_Transactions_Constraint {
  /** unique or primary key constraint */
  IosTransactionsPk = 'ios_transactions_pk'
}

/** input type for inserting data into table "ios_transactions" */
export type Ios_Transactions_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  ios_transaction_id?: Maybe<Scalars['String']>;
  is_manual_verify?: Maybe<Scalars['Boolean']>;
  receipt_data?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Ios_Transactions_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  ios_transaction_id?: Maybe<Scalars['String']>;
  receipt_data?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "ios_transactions" */
export type Ios_Transactions_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  ios_transaction_id?: Maybe<Order_By>;
  receipt_data?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Ios_Transactions_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  ios_transaction_id?: Maybe<Scalars['String']>;
  receipt_data?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "ios_transactions" */
export type Ios_Transactions_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  ios_transaction_id?: Maybe<Order_By>;
  receipt_data?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "ios_transactions" */
export type Ios_Transactions_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Ios_Transactions>;
};

/** input type for inserting object relation for remote table "ios_transactions" */
export type Ios_Transactions_Obj_Rel_Insert_Input = {
  data: Ios_Transactions_Insert_Input;
  on_conflict?: Maybe<Ios_Transactions_On_Conflict>;
};

/** on conflict condition type for table "ios_transactions" */
export type Ios_Transactions_On_Conflict = {
  constraint: Ios_Transactions_Constraint;
  update_columns: Array<Ios_Transactions_Update_Column>;
  where?: Maybe<Ios_Transactions_Bool_Exp>;
};

/** ordering options when selecting data from "ios_transactions" */
export type Ios_Transactions_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  ios_transaction_id?: Maybe<Order_By>;
  is_manual_verify?: Maybe<Order_By>;
  receipt_data?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "ios_transactions" */
export type Ios_Transactions_Pk_Columns_Input = {
  ios_transaction_id: Scalars['String'];
};

/** select columns of table "ios_transactions" */
export enum Ios_Transactions_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IosTransactionId = 'ios_transaction_id',
  /** column name */
  IsManualVerify = 'is_manual_verify',
  /** column name */
  ReceiptData = 'receipt_data',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "ios_transactions" */
export type Ios_Transactions_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  ios_transaction_id?: Maybe<Scalars['String']>;
  is_manual_verify?: Maybe<Scalars['Boolean']>;
  receipt_data?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "ios_transactions" */
export enum Ios_Transactions_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IosTransactionId = 'ios_transaction_id',
  /** column name */
  IsManualVerify = 'is_manual_verify',
  /** column name */
  ReceiptData = 'receipt_data',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "jpref_sync_data_logs" */
export type Jpref_Sync_Data_Logs = {
  created_at: Scalars['timestamptz'];
  jpref_sync_data_log_id: Scalars['String'];
  payload: Scalars['jsonb'];
  resource_path?: Maybe<Scalars['String']>;
  signature: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "jpref_sync_data_logs" */
export type Jpref_Sync_Data_LogsPayloadArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "jpref_sync_data_logs" */
export type Jpref_Sync_Data_Logs_Aggregate = {
  aggregate?: Maybe<Jpref_Sync_Data_Logs_Aggregate_Fields>;
  nodes: Array<Jpref_Sync_Data_Logs>;
};

/** aggregate fields of "jpref_sync_data_logs" */
export type Jpref_Sync_Data_Logs_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Jpref_Sync_Data_Logs_Max_Fields>;
  min?: Maybe<Jpref_Sync_Data_Logs_Min_Fields>;
};


/** aggregate fields of "jpref_sync_data_logs" */
export type Jpref_Sync_Data_Logs_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Jpref_Sync_Data_Logs_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "jpref_sync_data_logs" */
export type Jpref_Sync_Data_Logs_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Jpref_Sync_Data_Logs_Max_Order_By>;
  min?: Maybe<Jpref_Sync_Data_Logs_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Jpref_Sync_Data_Logs_Append_Input = {
  payload?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "jpref_sync_data_logs" */
export type Jpref_Sync_Data_Logs_Arr_Rel_Insert_Input = {
  data: Array<Jpref_Sync_Data_Logs_Insert_Input>;
  on_conflict?: Maybe<Jpref_Sync_Data_Logs_On_Conflict>;
};

/** Boolean expression to filter rows from the table "jpref_sync_data_logs". All fields are combined with a logical 'AND'. */
export type Jpref_Sync_Data_Logs_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Jpref_Sync_Data_Logs_Bool_Exp>>>;
  _not?: Maybe<Jpref_Sync_Data_Logs_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Jpref_Sync_Data_Logs_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  jpref_sync_data_log_id?: Maybe<String_Comparison_Exp>;
  payload?: Maybe<Jsonb_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  signature?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "jpref_sync_data_logs" */
export enum Jpref_Sync_Data_Logs_Constraint {
  /** unique or primary key constraint */
  PkJprefSyncDataLogs = 'pk__jpref_sync_data_logs'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Jpref_Sync_Data_Logs_Delete_At_Path_Input = {
  payload?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Jpref_Sync_Data_Logs_Delete_Elem_Input = {
  payload?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Jpref_Sync_Data_Logs_Delete_Key_Input = {
  payload?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "jpref_sync_data_logs" */
export type Jpref_Sync_Data_Logs_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  jpref_sync_data_log_id?: Maybe<Scalars['String']>;
  payload?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  signature?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Jpref_Sync_Data_Logs_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  jpref_sync_data_log_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  signature?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "jpref_sync_data_logs" */
export type Jpref_Sync_Data_Logs_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  jpref_sync_data_log_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  signature?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Jpref_Sync_Data_Logs_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  jpref_sync_data_log_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  signature?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "jpref_sync_data_logs" */
export type Jpref_Sync_Data_Logs_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  jpref_sync_data_log_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  signature?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "jpref_sync_data_logs" */
export type Jpref_Sync_Data_Logs_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Jpref_Sync_Data_Logs>;
};

/** input type for inserting object relation for remote table "jpref_sync_data_logs" */
export type Jpref_Sync_Data_Logs_Obj_Rel_Insert_Input = {
  data: Jpref_Sync_Data_Logs_Insert_Input;
  on_conflict?: Maybe<Jpref_Sync_Data_Logs_On_Conflict>;
};

/** on conflict condition type for table "jpref_sync_data_logs" */
export type Jpref_Sync_Data_Logs_On_Conflict = {
  constraint: Jpref_Sync_Data_Logs_Constraint;
  update_columns: Array<Jpref_Sync_Data_Logs_Update_Column>;
  where?: Maybe<Jpref_Sync_Data_Logs_Bool_Exp>;
};

/** ordering options when selecting data from "jpref_sync_data_logs" */
export type Jpref_Sync_Data_Logs_Order_By = {
  created_at?: Maybe<Order_By>;
  jpref_sync_data_log_id?: Maybe<Order_By>;
  payload?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  signature?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "jpref_sync_data_logs" */
export type Jpref_Sync_Data_Logs_Pk_Columns_Input = {
  jpref_sync_data_log_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Jpref_Sync_Data_Logs_Prepend_Input = {
  payload?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "jpref_sync_data_logs" */
export enum Jpref_Sync_Data_Logs_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  JprefSyncDataLogId = 'jpref_sync_data_log_id',
  /** column name */
  Payload = 'payload',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Signature = 'signature',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "jpref_sync_data_logs" */
export type Jpref_Sync_Data_Logs_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  jpref_sync_data_log_id?: Maybe<Scalars['String']>;
  payload?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  signature?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "jpref_sync_data_logs" */
export enum Jpref_Sync_Data_Logs_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  JprefSyncDataLogId = 'jpref_sync_data_log_id',
  /** column name */
  Payload = 'payload',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Signature = 'signature',
  /** column name */
  UpdatedAt = 'updated_at'
}


/** expression to compare columns of type json. All fields are combined with logical 'AND'. */
export type Json_Comparison_Exp = {
  _eq?: Maybe<Scalars['json']>;
  _gt?: Maybe<Scalars['json']>;
  _gte?: Maybe<Scalars['json']>;
  _in?: Maybe<Array<Scalars['json']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['json']>;
  _lte?: Maybe<Scalars['json']>;
  _neq?: Maybe<Scalars['json']>;
  _nin?: Maybe<Array<Scalars['json']>>;
};


/** expression to compare columns of type jsonb. All fields are combined with logical 'AND'. */
export type Jsonb_Comparison_Exp = {
  /** is the column contained in the given json value */
  _contained_in?: Maybe<Scalars['jsonb']>;
  /** does the column contain the given json value at the top level */
  _contains?: Maybe<Scalars['jsonb']>;
  _eq?: Maybe<Scalars['jsonb']>;
  _gt?: Maybe<Scalars['jsonb']>;
  _gte?: Maybe<Scalars['jsonb']>;
  /** does the string exist as a top-level key in the column */
  _has_key?: Maybe<Scalars['String']>;
  /** do all of these strings exist as top-level keys in the column */
  _has_keys_all?: Maybe<Array<Scalars['String']>>;
  /** do any of these strings exist as top-level keys in the column */
  _has_keys_any?: Maybe<Array<Scalars['String']>>;
  _in?: Maybe<Array<Scalars['jsonb']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['jsonb']>;
  _lte?: Maybe<Scalars['jsonb']>;
  _neq?: Maybe<Scalars['jsonb']>;
  _nin?: Maybe<Array<Scalars['jsonb']>>;
};

/** columns and relationships of "learning_objectives" */
export type Learning_Objectives = {
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  /** An object relationship */
  learning_objective?: Maybe<Learning_Objectives>;
  /** An array relationship */
  learning_objectives: Array<Learning_Objectives>;
  /** An aggregated array relationship */
  learning_objectives_aggregate: Learning_Objectives_Aggregate;
  lo_id: Scalars['String'];
  master_lo_id?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  prerequisites?: Maybe<Scalars['_text']>;
  /** An array relationship */
  quiz_sets: Array<Quiz_Sets>;
  /** An aggregated array relationship */
  quiz_sets_aggregate: Quiz_Sets_Aggregate;
  /** An array relationship */
  quizsets: Array<Quizsets>;
  /** An aggregated array relationship */
  quizsets_aggregate: Quizsets_Aggregate;
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  school: Schools;
  school_id: Scalars['Int'];
  /** An array relationship */
  students_learning_objectives_completenesses: Array<Students_Learning_Objectives_Completeness>;
  /** An aggregated array relationship */
  students_learning_objectives_completenesses_aggregate: Students_Learning_Objectives_Completeness_Aggregate;
  /** An array relationship */
  students_learning_objectives_records: Array<Students_Learning_Objectives_Records>;
  /** An aggregated array relationship */
  students_learning_objectives_records_aggregate: Students_Learning_Objectives_Records_Aggregate;
  study_guide?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  /** An object relationship */
  topic?: Maybe<Topics>;
  topic_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  video?: Maybe<Scalars['String']>;
  video_script?: Maybe<Scalars['String']>;
};


/** columns and relationships of "learning_objectives" */
export type Learning_ObjectivesLearning_ObjectivesArgs = {
  distinct_on?: Maybe<Array<Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Learning_Objectives_Order_By>>;
  where?: Maybe<Learning_Objectives_Bool_Exp>;
};


/** columns and relationships of "learning_objectives" */
export type Learning_ObjectivesLearning_Objectives_AggregateArgs = {
  distinct_on?: Maybe<Array<Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Learning_Objectives_Order_By>>;
  where?: Maybe<Learning_Objectives_Bool_Exp>;
};


/** columns and relationships of "learning_objectives" */
export type Learning_ObjectivesQuiz_SetsArgs = {
  distinct_on?: Maybe<Array<Quiz_Sets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quiz_Sets_Order_By>>;
  where?: Maybe<Quiz_Sets_Bool_Exp>;
};


/** columns and relationships of "learning_objectives" */
export type Learning_ObjectivesQuiz_Sets_AggregateArgs = {
  distinct_on?: Maybe<Array<Quiz_Sets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quiz_Sets_Order_By>>;
  where?: Maybe<Quiz_Sets_Bool_Exp>;
};


/** columns and relationships of "learning_objectives" */
export type Learning_ObjectivesQuizsetsArgs = {
  distinct_on?: Maybe<Array<Quizsets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quizsets_Order_By>>;
  where?: Maybe<Quizsets_Bool_Exp>;
};


/** columns and relationships of "learning_objectives" */
export type Learning_ObjectivesQuizsets_AggregateArgs = {
  distinct_on?: Maybe<Array<Quizsets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quizsets_Order_By>>;
  where?: Maybe<Quizsets_Bool_Exp>;
};


/** columns and relationships of "learning_objectives" */
export type Learning_ObjectivesStudents_Learning_Objectives_CompletenessesArgs = {
  distinct_on?: Maybe<Array<Students_Learning_Objectives_Completeness_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Learning_Objectives_Completeness_Order_By>>;
  where?: Maybe<Students_Learning_Objectives_Completeness_Bool_Exp>;
};


/** columns and relationships of "learning_objectives" */
export type Learning_ObjectivesStudents_Learning_Objectives_Completenesses_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Learning_Objectives_Completeness_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Learning_Objectives_Completeness_Order_By>>;
  where?: Maybe<Students_Learning_Objectives_Completeness_Bool_Exp>;
};


/** columns and relationships of "learning_objectives" */
export type Learning_ObjectivesStudents_Learning_Objectives_RecordsArgs = {
  distinct_on?: Maybe<Array<Students_Learning_Objectives_Records_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Learning_Objectives_Records_Order_By>>;
  where?: Maybe<Students_Learning_Objectives_Records_Bool_Exp>;
};


/** columns and relationships of "learning_objectives" */
export type Learning_ObjectivesStudents_Learning_Objectives_Records_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Learning_Objectives_Records_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Learning_Objectives_Records_Order_By>>;
  where?: Maybe<Students_Learning_Objectives_Records_Bool_Exp>;
};

/** aggregated selection of "learning_objectives" */
export type Learning_Objectives_Aggregate = {
  aggregate?: Maybe<Learning_Objectives_Aggregate_Fields>;
  nodes: Array<Learning_Objectives>;
};

/** aggregate fields of "learning_objectives" */
export type Learning_Objectives_Aggregate_Fields = {
  avg?: Maybe<Learning_Objectives_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Learning_Objectives_Max_Fields>;
  min?: Maybe<Learning_Objectives_Min_Fields>;
  stddev?: Maybe<Learning_Objectives_Stddev_Fields>;
  stddev_pop?: Maybe<Learning_Objectives_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Learning_Objectives_Stddev_Samp_Fields>;
  sum?: Maybe<Learning_Objectives_Sum_Fields>;
  var_pop?: Maybe<Learning_Objectives_Var_Pop_Fields>;
  var_samp?: Maybe<Learning_Objectives_Var_Samp_Fields>;
  variance?: Maybe<Learning_Objectives_Variance_Fields>;
};


/** aggregate fields of "learning_objectives" */
export type Learning_Objectives_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Learning_Objectives_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "learning_objectives" */
export type Learning_Objectives_Aggregate_Order_By = {
  avg?: Maybe<Learning_Objectives_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Learning_Objectives_Max_Order_By>;
  min?: Maybe<Learning_Objectives_Min_Order_By>;
  stddev?: Maybe<Learning_Objectives_Stddev_Order_By>;
  stddev_pop?: Maybe<Learning_Objectives_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Learning_Objectives_Stddev_Samp_Order_By>;
  sum?: Maybe<Learning_Objectives_Sum_Order_By>;
  var_pop?: Maybe<Learning_Objectives_Var_Pop_Order_By>;
  var_samp?: Maybe<Learning_Objectives_Var_Samp_Order_By>;
  variance?: Maybe<Learning_Objectives_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "learning_objectives" */
export type Learning_Objectives_Arr_Rel_Insert_Input = {
  data: Array<Learning_Objectives_Insert_Input>;
  on_conflict?: Maybe<Learning_Objectives_On_Conflict>;
};

/** aggregate avg on columns */
export type Learning_Objectives_Avg_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "learning_objectives" */
export type Learning_Objectives_Avg_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "learning_objectives". All fields are combined with a logical 'AND'. */
export type Learning_Objectives_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Learning_Objectives_Bool_Exp>>>;
  _not?: Maybe<Learning_Objectives_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Learning_Objectives_Bool_Exp>>>;
  copied_from?: Maybe<String_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  display_order?: Maybe<Smallint_Comparison_Exp>;
  grade?: Maybe<Smallint_Comparison_Exp>;
  learning_objective?: Maybe<Learning_Objectives_Bool_Exp>;
  learning_objectives?: Maybe<Learning_Objectives_Bool_Exp>;
  lo_id?: Maybe<String_Comparison_Exp>;
  master_lo_id?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  prerequisites?: Maybe<_Text_Comparison_Exp>;
  quiz_sets?: Maybe<Quiz_Sets_Bool_Exp>;
  quizsets?: Maybe<Quizsets_Bool_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  school?: Maybe<Schools_Bool_Exp>;
  school_id?: Maybe<Int_Comparison_Exp>;
  students_learning_objectives_completenesses?: Maybe<Students_Learning_Objectives_Completeness_Bool_Exp>;
  students_learning_objectives_records?: Maybe<Students_Learning_Objectives_Records_Bool_Exp>;
  study_guide?: Maybe<String_Comparison_Exp>;
  subject?: Maybe<String_Comparison_Exp>;
  topic?: Maybe<Topics_Bool_Exp>;
  topic_id?: Maybe<String_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  video?: Maybe<String_Comparison_Exp>;
  video_script?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "learning_objectives" */
export enum Learning_Objectives_Constraint {
  /** unique or primary key constraint */
  LearningObjectivesPk = 'learning_objectives_pk'
}

/** input type for incrementing integer column in table "learning_objectives" */
export type Learning_Objectives_Inc_Input = {
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "learning_objectives" */
export type Learning_Objectives_Insert_Input = {
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  learning_objective?: Maybe<Learning_Objectives_Obj_Rel_Insert_Input>;
  learning_objectives?: Maybe<Learning_Objectives_Arr_Rel_Insert_Input>;
  lo_id?: Maybe<Scalars['String']>;
  master_lo_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  prerequisites?: Maybe<Scalars['_text']>;
  quiz_sets?: Maybe<Quiz_Sets_Arr_Rel_Insert_Input>;
  quizsets?: Maybe<Quizsets_Arr_Rel_Insert_Input>;
  resource_path?: Maybe<Scalars['String']>;
  school?: Maybe<Schools_Obj_Rel_Insert_Input>;
  school_id?: Maybe<Scalars['Int']>;
  students_learning_objectives_completenesses?: Maybe<Students_Learning_Objectives_Completeness_Arr_Rel_Insert_Input>;
  students_learning_objectives_records?: Maybe<Students_Learning_Objectives_Records_Arr_Rel_Insert_Input>;
  study_guide?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  topic?: Maybe<Topics_Obj_Rel_Insert_Input>;
  topic_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  video?: Maybe<Scalars['String']>;
  video_script?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Learning_Objectives_Max_Fields = {
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  lo_id?: Maybe<Scalars['String']>;
  master_lo_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  study_guide?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  video?: Maybe<Scalars['String']>;
  video_script?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "learning_objectives" */
export type Learning_Objectives_Max_Order_By = {
  copied_from?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  lo_id?: Maybe<Order_By>;
  master_lo_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  study_guide?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  video?: Maybe<Order_By>;
  video_script?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Learning_Objectives_Min_Fields = {
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  lo_id?: Maybe<Scalars['String']>;
  master_lo_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  study_guide?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  video?: Maybe<Scalars['String']>;
  video_script?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "learning_objectives" */
export type Learning_Objectives_Min_Order_By = {
  copied_from?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  lo_id?: Maybe<Order_By>;
  master_lo_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  study_guide?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  video?: Maybe<Order_By>;
  video_script?: Maybe<Order_By>;
};

/** response of any mutation on the table "learning_objectives" */
export type Learning_Objectives_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Learning_Objectives>;
};

/** input type for inserting object relation for remote table "learning_objectives" */
export type Learning_Objectives_Obj_Rel_Insert_Input = {
  data: Learning_Objectives_Insert_Input;
  on_conflict?: Maybe<Learning_Objectives_On_Conflict>;
};

/** on conflict condition type for table "learning_objectives" */
export type Learning_Objectives_On_Conflict = {
  constraint: Learning_Objectives_Constraint;
  update_columns: Array<Learning_Objectives_Update_Column>;
  where?: Maybe<Learning_Objectives_Bool_Exp>;
};

/** ordering options when selecting data from "learning_objectives" */
export type Learning_Objectives_Order_By = {
  copied_from?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  learning_objective?: Maybe<Learning_Objectives_Order_By>;
  learning_objectives_aggregate?: Maybe<Learning_Objectives_Aggregate_Order_By>;
  lo_id?: Maybe<Order_By>;
  master_lo_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  prerequisites?: Maybe<Order_By>;
  quiz_sets_aggregate?: Maybe<Quiz_Sets_Aggregate_Order_By>;
  quizsets_aggregate?: Maybe<Quizsets_Aggregate_Order_By>;
  resource_path?: Maybe<Order_By>;
  school?: Maybe<Schools_Order_By>;
  school_id?: Maybe<Order_By>;
  students_learning_objectives_completenesses_aggregate?: Maybe<Students_Learning_Objectives_Completeness_Aggregate_Order_By>;
  students_learning_objectives_records_aggregate?: Maybe<Students_Learning_Objectives_Records_Aggregate_Order_By>;
  study_guide?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  topic?: Maybe<Topics_Order_By>;
  topic_id?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  video?: Maybe<Order_By>;
  video_script?: Maybe<Order_By>;
};

/** primary key columns input for table: "learning_objectives" */
export type Learning_Objectives_Pk_Columns_Input = {
  lo_id: Scalars['String'];
};

/** select columns of table "learning_objectives" */
export enum Learning_Objectives_Select_Column {
  /** column name */
  CopiedFrom = 'copied_from',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  Grade = 'grade',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  MasterLoId = 'master_lo_id',
  /** column name */
  Name = 'name',
  /** column name */
  Prerequisites = 'prerequisites',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  StudyGuide = 'study_guide',
  /** column name */
  Subject = 'subject',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Video = 'video',
  /** column name */
  VideoScript = 'video_script'
}

/** input type for updating data in table "learning_objectives" */
export type Learning_Objectives_Set_Input = {
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  lo_id?: Maybe<Scalars['String']>;
  master_lo_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  prerequisites?: Maybe<Scalars['_text']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  study_guide?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  video?: Maybe<Scalars['String']>;
  video_script?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Learning_Objectives_Stddev_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "learning_objectives" */
export type Learning_Objectives_Stddev_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Learning_Objectives_Stddev_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "learning_objectives" */
export type Learning_Objectives_Stddev_Pop_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Learning_Objectives_Stddev_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "learning_objectives" */
export type Learning_Objectives_Stddev_Samp_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Learning_Objectives_Sum_Fields = {
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "learning_objectives" */
export type Learning_Objectives_Sum_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** update columns of table "learning_objectives" */
export enum Learning_Objectives_Update_Column {
  /** column name */
  CopiedFrom = 'copied_from',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  Grade = 'grade',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  MasterLoId = 'master_lo_id',
  /** column name */
  Name = 'name',
  /** column name */
  Prerequisites = 'prerequisites',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  StudyGuide = 'study_guide',
  /** column name */
  Subject = 'subject',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Video = 'video',
  /** column name */
  VideoScript = 'video_script'
}

/** aggregate var_pop on columns */
export type Learning_Objectives_Var_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "learning_objectives" */
export type Learning_Objectives_Var_Pop_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Learning_Objectives_Var_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "learning_objectives" */
export type Learning_Objectives_Var_Samp_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Learning_Objectives_Variance_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "learning_objectives" */
export type Learning_Objectives_Variance_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** columns and relationships of "lesson_groups" */
export type Lesson_Groups = {
  course_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  lesson_group_id: Scalars['String'];
  media_ids?: Maybe<Scalars['_text']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "lesson_groups" */
export type Lesson_Groups_Aggregate = {
  aggregate?: Maybe<Lesson_Groups_Aggregate_Fields>;
  nodes: Array<Lesson_Groups>;
};

/** aggregate fields of "lesson_groups" */
export type Lesson_Groups_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lesson_Groups_Max_Fields>;
  min?: Maybe<Lesson_Groups_Min_Fields>;
};


/** aggregate fields of "lesson_groups" */
export type Lesson_Groups_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Lesson_Groups_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lesson_groups" */
export type Lesson_Groups_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Lesson_Groups_Max_Order_By>;
  min?: Maybe<Lesson_Groups_Min_Order_By>;
};

/** input type for inserting array relation for remote table "lesson_groups" */
export type Lesson_Groups_Arr_Rel_Insert_Input = {
  data: Array<Lesson_Groups_Insert_Input>;
  on_conflict?: Maybe<Lesson_Groups_On_Conflict>;
};

/** Boolean expression to filter rows from the table "lesson_groups". All fields are combined with a logical 'AND'. */
export type Lesson_Groups_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Lesson_Groups_Bool_Exp>>>;
  _not?: Maybe<Lesson_Groups_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Lesson_Groups_Bool_Exp>>>;
  course_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  lesson_group_id?: Maybe<String_Comparison_Exp>;
  media_ids?: Maybe<_Text_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "lesson_groups" */
export enum Lesson_Groups_Constraint {
  /** unique or primary key constraint */
  PkLessonGroups = 'pk__lesson_groups'
}

/** input type for inserting data into table "lesson_groups" */
export type Lesson_Groups_Insert_Input = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  lesson_group_id?: Maybe<Scalars['String']>;
  media_ids?: Maybe<Scalars['_text']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Lesson_Groups_Max_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  lesson_group_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "lesson_groups" */
export type Lesson_Groups_Max_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  lesson_group_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Lesson_Groups_Min_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  lesson_group_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "lesson_groups" */
export type Lesson_Groups_Min_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  lesson_group_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "lesson_groups" */
export type Lesson_Groups_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lesson_Groups>;
};

/** input type for inserting object relation for remote table "lesson_groups" */
export type Lesson_Groups_Obj_Rel_Insert_Input = {
  data: Lesson_Groups_Insert_Input;
  on_conflict?: Maybe<Lesson_Groups_On_Conflict>;
};

/** on conflict condition type for table "lesson_groups" */
export type Lesson_Groups_On_Conflict = {
  constraint: Lesson_Groups_Constraint;
  update_columns: Array<Lesson_Groups_Update_Column>;
  where?: Maybe<Lesson_Groups_Bool_Exp>;
};

/** ordering options when selecting data from "lesson_groups" */
export type Lesson_Groups_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  lesson_group_id?: Maybe<Order_By>;
  media_ids?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "lesson_groups" */
export type Lesson_Groups_Pk_Columns_Input = {
  course_id: Scalars['String'];
  lesson_group_id: Scalars['String'];
};

/** select columns of table "lesson_groups" */
export enum Lesson_Groups_Select_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  LessonGroupId = 'lesson_group_id',
  /** column name */
  MediaIds = 'media_ids',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "lesson_groups" */
export type Lesson_Groups_Set_Input = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  lesson_group_id?: Maybe<Scalars['String']>;
  media_ids?: Maybe<Scalars['_text']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "lesson_groups" */
export enum Lesson_Groups_Update_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  LessonGroupId = 'lesson_group_id',
  /** column name */
  MediaIds = 'media_ids',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "lesson_members" */
export type Lesson_Members = {
  attendance_remark?: Maybe<Scalars['String']>;
  attendance_status?: Maybe<Scalars['String']>;
  /** An object relationship */
  course?: Maybe<Courses>;
  course_id?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  lesson: Lessons;
  lesson_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['String'];
};

/** aggregated selection of "lesson_members" */
export type Lesson_Members_Aggregate = {
  aggregate?: Maybe<Lesson_Members_Aggregate_Fields>;
  nodes: Array<Lesson_Members>;
};

/** aggregate fields of "lesson_members" */
export type Lesson_Members_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lesson_Members_Max_Fields>;
  min?: Maybe<Lesson_Members_Min_Fields>;
};


/** aggregate fields of "lesson_members" */
export type Lesson_Members_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Lesson_Members_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lesson_members" */
export type Lesson_Members_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Lesson_Members_Max_Order_By>;
  min?: Maybe<Lesson_Members_Min_Order_By>;
};

/** input type for inserting array relation for remote table "lesson_members" */
export type Lesson_Members_Arr_Rel_Insert_Input = {
  data: Array<Lesson_Members_Insert_Input>;
  on_conflict?: Maybe<Lesson_Members_On_Conflict>;
};

/** Boolean expression to filter rows from the table "lesson_members". All fields are combined with a logical 'AND'. */
export type Lesson_Members_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Lesson_Members_Bool_Exp>>>;
  _not?: Maybe<Lesson_Members_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Lesson_Members_Bool_Exp>>>;
  attendance_remark?: Maybe<String_Comparison_Exp>;
  attendance_status?: Maybe<String_Comparison_Exp>;
  course?: Maybe<Courses_Bool_Exp>;
  course_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  lesson?: Maybe<Lessons_Bool_Exp>;
  lesson_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
  user_id?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "lesson_members" */
export enum Lesson_Members_Constraint {
  /** unique or primary key constraint */
  PkLessonMembers = 'pk__lesson_members'
}

/** input type for inserting data into table "lesson_members" */
export type Lesson_Members_Insert_Input = {
  attendance_remark?: Maybe<Scalars['String']>;
  attendance_status?: Maybe<Scalars['String']>;
  course?: Maybe<Courses_Obj_Rel_Insert_Input>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson?: Maybe<Lessons_Obj_Rel_Insert_Input>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Lesson_Members_Max_Fields = {
  attendance_remark?: Maybe<Scalars['String']>;
  attendance_status?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "lesson_members" */
export type Lesson_Members_Max_Order_By = {
  attendance_remark?: Maybe<Order_By>;
  attendance_status?: Maybe<Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Lesson_Members_Min_Fields = {
  attendance_remark?: Maybe<Scalars['String']>;
  attendance_status?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "lesson_members" */
export type Lesson_Members_Min_Order_By = {
  attendance_remark?: Maybe<Order_By>;
  attendance_status?: Maybe<Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "lesson_members" */
export type Lesson_Members_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lesson_Members>;
};

/** input type for inserting object relation for remote table "lesson_members" */
export type Lesson_Members_Obj_Rel_Insert_Input = {
  data: Lesson_Members_Insert_Input;
  on_conflict?: Maybe<Lesson_Members_On_Conflict>;
};

/** on conflict condition type for table "lesson_members" */
export type Lesson_Members_On_Conflict = {
  constraint: Lesson_Members_Constraint;
  update_columns: Array<Lesson_Members_Update_Column>;
  where?: Maybe<Lesson_Members_Bool_Exp>;
};

/** ordering options when selecting data from "lesson_members" */
export type Lesson_Members_Order_By = {
  attendance_remark?: Maybe<Order_By>;
  attendance_status?: Maybe<Order_By>;
  course?: Maybe<Courses_Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lesson?: Maybe<Lessons_Order_By>;
  lesson_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: "lesson_members" */
export type Lesson_Members_Pk_Columns_Input = {
  lesson_id: Scalars['String'];
  user_id: Scalars['String'];
};

/** select columns of table "lesson_members" */
export enum Lesson_Members_Select_Column {
  /** column name */
  AttendanceRemark = 'attendance_remark',
  /** column name */
  AttendanceStatus = 'attendance_status',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "lesson_members" */
export type Lesson_Members_Set_Input = {
  attendance_remark?: Maybe<Scalars['String']>;
  attendance_status?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** update columns of table "lesson_members" */
export enum Lesson_Members_Update_Column {
  /** column name */
  AttendanceRemark = 'attendance_remark',
  /** column name */
  AttendanceStatus = 'attendance_status',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** columns and relationships of "lesson_report_details" */
export type Lesson_Report_Details = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  lesson_report: Lesson_Reports;
  lesson_report_detail_id: Scalars['String'];
  lesson_report_id: Scalars['String'];
  /** An array relationship */
  partner_dynamic_form_field_values: Array<Partner_Dynamic_Form_Field_Values>;
  /** An aggregated array relationship */
  partner_dynamic_form_field_values_aggregate: Partner_Dynamic_Form_Field_Values_Aggregate;
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "lesson_report_details" */
export type Lesson_Report_DetailsPartner_Dynamic_Form_Field_ValuesArgs = {
  distinct_on?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: Maybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};


/** columns and relationships of "lesson_report_details" */
export type Lesson_Report_DetailsPartner_Dynamic_Form_Field_Values_AggregateArgs = {
  distinct_on?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: Maybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};

/** aggregated selection of "lesson_report_details" */
export type Lesson_Report_Details_Aggregate = {
  aggregate?: Maybe<Lesson_Report_Details_Aggregate_Fields>;
  nodes: Array<Lesson_Report_Details>;
};

/** aggregate fields of "lesson_report_details" */
export type Lesson_Report_Details_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lesson_Report_Details_Max_Fields>;
  min?: Maybe<Lesson_Report_Details_Min_Fields>;
};


/** aggregate fields of "lesson_report_details" */
export type Lesson_Report_Details_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Lesson_Report_Details_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lesson_report_details" */
export type Lesson_Report_Details_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Lesson_Report_Details_Max_Order_By>;
  min?: Maybe<Lesson_Report_Details_Min_Order_By>;
};

/** input type for inserting array relation for remote table "lesson_report_details" */
export type Lesson_Report_Details_Arr_Rel_Insert_Input = {
  data: Array<Lesson_Report_Details_Insert_Input>;
  on_conflict?: Maybe<Lesson_Report_Details_On_Conflict>;
};

/** Boolean expression to filter rows from the table "lesson_report_details". All fields are combined with a logical 'AND'. */
export type Lesson_Report_Details_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Lesson_Report_Details_Bool_Exp>>>;
  _not?: Maybe<Lesson_Report_Details_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Lesson_Report_Details_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  lesson_report?: Maybe<Lesson_Reports_Bool_Exp>;
  lesson_report_detail_id?: Maybe<String_Comparison_Exp>;
  lesson_report_id?: Maybe<String_Comparison_Exp>;
  partner_dynamic_form_field_values?: Maybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "lesson_report_details" */
export enum Lesson_Report_Details_Constraint {
  /** unique or primary key constraint */
  LessonReportDetailsPk = 'lesson_report_details_pk',
  /** unique or primary key constraint */
  UniqueLessonReportIdStudentId = 'unique__lesson_report_id__student_id'
}

/** input type for inserting data into table "lesson_report_details" */
export type Lesson_Report_Details_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_report?: Maybe<Lesson_Reports_Obj_Rel_Insert_Input>;
  lesson_report_detail_id?: Maybe<Scalars['String']>;
  lesson_report_id?: Maybe<Scalars['String']>;
  partner_dynamic_form_field_values?: Maybe<Partner_Dynamic_Form_Field_Values_Arr_Rel_Insert_Input>;
  resource_path?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Lesson_Report_Details_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_report_detail_id?: Maybe<Scalars['String']>;
  lesson_report_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "lesson_report_details" */
export type Lesson_Report_Details_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lesson_report_detail_id?: Maybe<Order_By>;
  lesson_report_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Lesson_Report_Details_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_report_detail_id?: Maybe<Scalars['String']>;
  lesson_report_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "lesson_report_details" */
export type Lesson_Report_Details_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lesson_report_detail_id?: Maybe<Order_By>;
  lesson_report_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "lesson_report_details" */
export type Lesson_Report_Details_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lesson_Report_Details>;
};

/** input type for inserting object relation for remote table "lesson_report_details" */
export type Lesson_Report_Details_Obj_Rel_Insert_Input = {
  data: Lesson_Report_Details_Insert_Input;
  on_conflict?: Maybe<Lesson_Report_Details_On_Conflict>;
};

/** on conflict condition type for table "lesson_report_details" */
export type Lesson_Report_Details_On_Conflict = {
  constraint: Lesson_Report_Details_Constraint;
  update_columns: Array<Lesson_Report_Details_Update_Column>;
  where?: Maybe<Lesson_Report_Details_Bool_Exp>;
};

/** ordering options when selecting data from "lesson_report_details" */
export type Lesson_Report_Details_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lesson_report?: Maybe<Lesson_Reports_Order_By>;
  lesson_report_detail_id?: Maybe<Order_By>;
  lesson_report_id?: Maybe<Order_By>;
  partner_dynamic_form_field_values_aggregate?: Maybe<Partner_Dynamic_Form_Field_Values_Aggregate_Order_By>;
  resource_path?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "lesson_report_details" */
export type Lesson_Report_Details_Pk_Columns_Input = {
  lesson_report_detail_id: Scalars['String'];
};

/** select columns of table "lesson_report_details" */
export enum Lesson_Report_Details_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LessonReportDetailId = 'lesson_report_detail_id',
  /** column name */
  LessonReportId = 'lesson_report_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "lesson_report_details" */
export type Lesson_Report_Details_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_report_detail_id?: Maybe<Scalars['String']>;
  lesson_report_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "lesson_report_details" */
export enum Lesson_Report_Details_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LessonReportDetailId = 'lesson_report_detail_id',
  /** column name */
  LessonReportId = 'lesson_report_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "lesson_reports" */
export type Lesson_Reports = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  form_config_id?: Maybe<Scalars['String']>;
  /** An object relationship */
  lesson?: Maybe<Lessons>;
  lesson_id?: Maybe<Scalars['String']>;
  /** An array relationship */
  lesson_report_details: Array<Lesson_Report_Details>;
  /** An aggregated array relationship */
  lesson_report_details_aggregate: Lesson_Report_Details_Aggregate;
  lesson_report_id: Scalars['String'];
  /** An object relationship */
  partner_form_config?: Maybe<Partner_Form_Configs>;
  report_submitting_status: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "lesson_reports" */
export type Lesson_ReportsLesson_Report_DetailsArgs = {
  distinct_on?: Maybe<Array<Lesson_Report_Details_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Report_Details_Order_By>>;
  where?: Maybe<Lesson_Report_Details_Bool_Exp>;
};


/** columns and relationships of "lesson_reports" */
export type Lesson_ReportsLesson_Report_Details_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Report_Details_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Report_Details_Order_By>>;
  where?: Maybe<Lesson_Report_Details_Bool_Exp>;
};

/** aggregated selection of "lesson_reports" */
export type Lesson_Reports_Aggregate = {
  aggregate?: Maybe<Lesson_Reports_Aggregate_Fields>;
  nodes: Array<Lesson_Reports>;
};

/** aggregate fields of "lesson_reports" */
export type Lesson_Reports_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lesson_Reports_Max_Fields>;
  min?: Maybe<Lesson_Reports_Min_Fields>;
};


/** aggregate fields of "lesson_reports" */
export type Lesson_Reports_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Lesson_Reports_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lesson_reports" */
export type Lesson_Reports_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Lesson_Reports_Max_Order_By>;
  min?: Maybe<Lesson_Reports_Min_Order_By>;
};

/** input type for inserting array relation for remote table "lesson_reports" */
export type Lesson_Reports_Arr_Rel_Insert_Input = {
  data: Array<Lesson_Reports_Insert_Input>;
  on_conflict?: Maybe<Lesson_Reports_On_Conflict>;
};

/** Boolean expression to filter rows from the table "lesson_reports". All fields are combined with a logical 'AND'. */
export type Lesson_Reports_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Lesson_Reports_Bool_Exp>>>;
  _not?: Maybe<Lesson_Reports_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Lesson_Reports_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  form_config_id?: Maybe<String_Comparison_Exp>;
  lesson?: Maybe<Lessons_Bool_Exp>;
  lesson_id?: Maybe<String_Comparison_Exp>;
  lesson_report_details?: Maybe<Lesson_Report_Details_Bool_Exp>;
  lesson_report_id?: Maybe<String_Comparison_Exp>;
  partner_form_config?: Maybe<Partner_Form_Configs_Bool_Exp>;
  report_submitting_status?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "lesson_reports" */
export enum Lesson_Reports_Constraint {
  /** unique or primary key constraint */
  LessonReportsPk = 'lesson_reports_pk'
}

/** input type for inserting data into table "lesson_reports" */
export type Lesson_Reports_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  form_config_id?: Maybe<Scalars['String']>;
  lesson?: Maybe<Lessons_Obj_Rel_Insert_Input>;
  lesson_id?: Maybe<Scalars['String']>;
  lesson_report_details?: Maybe<Lesson_Report_Details_Arr_Rel_Insert_Input>;
  lesson_report_id?: Maybe<Scalars['String']>;
  partner_form_config?: Maybe<Partner_Form_Configs_Obj_Rel_Insert_Input>;
  report_submitting_status?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Lesson_Reports_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  form_config_id?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  lesson_report_id?: Maybe<Scalars['String']>;
  report_submitting_status?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "lesson_reports" */
export type Lesson_Reports_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  form_config_id?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  lesson_report_id?: Maybe<Order_By>;
  report_submitting_status?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Lesson_Reports_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  form_config_id?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  lesson_report_id?: Maybe<Scalars['String']>;
  report_submitting_status?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "lesson_reports" */
export type Lesson_Reports_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  form_config_id?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  lesson_report_id?: Maybe<Order_By>;
  report_submitting_status?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "lesson_reports" */
export type Lesson_Reports_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lesson_Reports>;
};

/** input type for inserting object relation for remote table "lesson_reports" */
export type Lesson_Reports_Obj_Rel_Insert_Input = {
  data: Lesson_Reports_Insert_Input;
  on_conflict?: Maybe<Lesson_Reports_On_Conflict>;
};

/** on conflict condition type for table "lesson_reports" */
export type Lesson_Reports_On_Conflict = {
  constraint: Lesson_Reports_Constraint;
  update_columns: Array<Lesson_Reports_Update_Column>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};

/** ordering options when selecting data from "lesson_reports" */
export type Lesson_Reports_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  form_config_id?: Maybe<Order_By>;
  lesson?: Maybe<Lessons_Order_By>;
  lesson_id?: Maybe<Order_By>;
  lesson_report_details_aggregate?: Maybe<Lesson_Report_Details_Aggregate_Order_By>;
  lesson_report_id?: Maybe<Order_By>;
  partner_form_config?: Maybe<Partner_Form_Configs_Order_By>;
  report_submitting_status?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "lesson_reports" */
export type Lesson_Reports_Pk_Columns_Input = {
  lesson_report_id: Scalars['String'];
};

/** select columns of table "lesson_reports" */
export enum Lesson_Reports_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  FormConfigId = 'form_config_id',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  LessonReportId = 'lesson_report_id',
  /** column name */
  ReportSubmittingStatus = 'report_submitting_status',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "lesson_reports" */
export type Lesson_Reports_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  form_config_id?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  lesson_report_id?: Maybe<Scalars['String']>;
  report_submitting_status?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "lesson_reports" */
export enum Lesson_Reports_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  FormConfigId = 'form_config_id',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  LessonReportId = 'lesson_report_id',
  /** column name */
  ReportSubmittingStatus = 'report_submitting_status',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "lesson_schedules" */
export type Lesson_Schedules = {
  control_settings?: Maybe<Scalars['jsonb']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  formatted_date?: Maybe<Scalars['String']>;
  formatted_day?: Maybe<Scalars['String']>;
  formatted_month?: Maybe<Scalars['String']>;
  formatted_year?: Maybe<Scalars['String']>;
  lesson_group_id?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  lesson_type?: Maybe<Scalars['String']>;
  room_id?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "lesson_schedules" */
export type Lesson_SchedulesControl_SettingsArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "lesson_schedules" */
export type Lesson_Schedules_Aggregate = {
  aggregate?: Maybe<Lesson_Schedules_Aggregate_Fields>;
  nodes: Array<Lesson_Schedules>;
};

/** aggregate fields of "lesson_schedules" */
export type Lesson_Schedules_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lesson_Schedules_Max_Fields>;
  min?: Maybe<Lesson_Schedules_Min_Fields>;
};


/** aggregate fields of "lesson_schedules" */
export type Lesson_Schedules_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Lesson_Schedules_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lesson_schedules" */
export type Lesson_Schedules_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Lesson_Schedules_Max_Order_By>;
  min?: Maybe<Lesson_Schedules_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Lesson_Schedules_Append_Input = {
  control_settings?: Maybe<Scalars['jsonb']>;
};

/** Boolean expression to filter rows from the table "lesson_schedules". All fields are combined with a logical 'AND'. */
export type Lesson_Schedules_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Lesson_Schedules_Bool_Exp>>>;
  _not?: Maybe<Lesson_Schedules_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Lesson_Schedules_Bool_Exp>>>;
  control_settings?: Maybe<Jsonb_Comparison_Exp>;
  course_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  end_at?: Maybe<Timestamptz_Comparison_Exp>;
  formatted_date?: Maybe<String_Comparison_Exp>;
  formatted_day?: Maybe<String_Comparison_Exp>;
  formatted_month?: Maybe<String_Comparison_Exp>;
  formatted_year?: Maybe<String_Comparison_Exp>;
  lesson_group_id?: Maybe<String_Comparison_Exp>;
  lesson_id?: Maybe<String_Comparison_Exp>;
  lesson_type?: Maybe<String_Comparison_Exp>;
  room_id?: Maybe<String_Comparison_Exp>;
  start_date?: Maybe<Timestamptz_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  teacher_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Lesson_Schedules_Delete_At_Path_Input = {
  control_settings?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Lesson_Schedules_Delete_Elem_Input = {
  control_settings?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Lesson_Schedules_Delete_Key_Input = {
  control_settings?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Lesson_Schedules_Max_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  formatted_date?: Maybe<Scalars['String']>;
  formatted_day?: Maybe<Scalars['String']>;
  formatted_month?: Maybe<Scalars['String']>;
  formatted_year?: Maybe<Scalars['String']>;
  lesson_group_id?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  lesson_type?: Maybe<Scalars['String']>;
  room_id?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "lesson_schedules" */
export type Lesson_Schedules_Max_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_at?: Maybe<Order_By>;
  formatted_date?: Maybe<Order_By>;
  formatted_day?: Maybe<Order_By>;
  formatted_month?: Maybe<Order_By>;
  formatted_year?: Maybe<Order_By>;
  lesson_group_id?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  lesson_type?: Maybe<Order_By>;
  room_id?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  teacher_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Lesson_Schedules_Min_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  formatted_date?: Maybe<Scalars['String']>;
  formatted_day?: Maybe<Scalars['String']>;
  formatted_month?: Maybe<Scalars['String']>;
  formatted_year?: Maybe<Scalars['String']>;
  lesson_group_id?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  lesson_type?: Maybe<Scalars['String']>;
  room_id?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "lesson_schedules" */
export type Lesson_Schedules_Min_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_at?: Maybe<Order_By>;
  formatted_date?: Maybe<Order_By>;
  formatted_day?: Maybe<Order_By>;
  formatted_month?: Maybe<Order_By>;
  formatted_year?: Maybe<Order_By>;
  lesson_group_id?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  lesson_type?: Maybe<Order_By>;
  room_id?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  teacher_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** ordering options when selecting data from "lesson_schedules" */
export type Lesson_Schedules_Order_By = {
  control_settings?: Maybe<Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_at?: Maybe<Order_By>;
  formatted_date?: Maybe<Order_By>;
  formatted_day?: Maybe<Order_By>;
  formatted_month?: Maybe<Order_By>;
  formatted_year?: Maybe<Order_By>;
  lesson_group_id?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  lesson_type?: Maybe<Order_By>;
  room_id?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  teacher_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Lesson_Schedules_Prepend_Input = {
  control_settings?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "lesson_schedules" */
export enum Lesson_Schedules_Select_Column {
  /** column name */
  ControlSettings = 'control_settings',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndAt = 'end_at',
  /** column name */
  FormattedDate = 'formatted_date',
  /** column name */
  FormattedDay = 'formatted_day',
  /** column name */
  FormattedMonth = 'formatted_month',
  /** column name */
  FormattedYear = 'formatted_year',
  /** column name */
  LessonGroupId = 'lesson_group_id',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  LessonType = 'lesson_type',
  /** column name */
  RoomId = 'room_id',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Status = 'status',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  lesson_student_subscription: Lesson_Student_Subscriptions;
  /** An object relationship */
  location: Locations;
  location_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  student_subscription_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Aggregate = {
  aggregate?: Maybe<Lesson_Student_Subscription_Access_Path_Aggregate_Fields>;
  nodes: Array<Lesson_Student_Subscription_Access_Path>;
};

/** aggregate fields of "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lesson_Student_Subscription_Access_Path_Max_Fields>;
  min?: Maybe<Lesson_Student_Subscription_Access_Path_Min_Fields>;
};


/** aggregate fields of "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Lesson_Student_Subscription_Access_Path_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Lesson_Student_Subscription_Access_Path_Max_Order_By>;
  min?: Maybe<Lesson_Student_Subscription_Access_Path_Min_Order_By>;
};

/** input type for inserting array relation for remote table "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Arr_Rel_Insert_Input = {
  data: Array<Lesson_Student_Subscription_Access_Path_Insert_Input>;
  on_conflict?: Maybe<Lesson_Student_Subscription_Access_Path_On_Conflict>;
};

/** Boolean expression to filter rows from the table "lesson_student_subscription_access_path". All fields are combined with a logical 'AND'. */
export type Lesson_Student_Subscription_Access_Path_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>>>;
  _not?: Maybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  lesson_student_subscription?: Maybe<Lesson_Student_Subscriptions_Bool_Exp>;
  location?: Maybe<Locations_Bool_Exp>;
  location_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student_subscription_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "lesson_student_subscription_access_path" */
export enum Lesson_Student_Subscription_Access_Path_Constraint {
  /** unique or primary key constraint */
  LessonStudentSubscriptionAccessPathPk = 'lesson_student_subscription_access_path_pk'
}

/** input type for inserting data into table "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_student_subscription?: Maybe<Lesson_Student_Subscriptions_Obj_Rel_Insert_Input>;
  location?: Maybe<Locations_Obj_Rel_Insert_Input>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Lesson_Student_Subscription_Access_Path_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  location_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_subscription_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Lesson_Student_Subscription_Access_Path_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  location_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_subscription_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lesson_Student_Subscription_Access_Path>;
};

/** input type for inserting object relation for remote table "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Obj_Rel_Insert_Input = {
  data: Lesson_Student_Subscription_Access_Path_Insert_Input;
  on_conflict?: Maybe<Lesson_Student_Subscription_Access_Path_On_Conflict>;
};

/** on conflict condition type for table "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_On_Conflict = {
  constraint: Lesson_Student_Subscription_Access_Path_Constraint;
  update_columns: Array<Lesson_Student_Subscription_Access_Path_Update_Column>;
  where?: Maybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
};

/** ordering options when selecting data from "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lesson_student_subscription?: Maybe<Lesson_Student_Subscriptions_Order_By>;
  location?: Maybe<Locations_Order_By>;
  location_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_subscription_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Pk_Columns_Input = {
  location_id: Scalars['String'];
  student_subscription_id: Scalars['String'];
};

/** select columns of table "lesson_student_subscription_access_path" */
export enum Lesson_Student_Subscription_Access_Path_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentSubscriptionId = 'student_subscription_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "lesson_student_subscription_access_path" */
export enum Lesson_Student_Subscription_Access_Path_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentSubscriptionId = 'student_subscription_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions = {
  /** An object relationship */
  course: Courses;
  course_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  lesson_student_subscription_access_paths: Array<Lesson_Student_Subscription_Access_Path>;
  /** An aggregated array relationship */
  lesson_student_subscription_access_paths_aggregate: Lesson_Student_Subscription_Access_Path_Aggregate;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  student_subscription_id: Scalars['String'];
  subscription_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "lesson_student_subscriptions" */
export type Lesson_Student_SubscriptionsLesson_Student_Subscription_Access_PathsArgs = {
  distinct_on?: Maybe<Array<Lesson_Student_Subscription_Access_Path_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Student_Subscription_Access_Path_Order_By>>;
  where?: Maybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
};


/** columns and relationships of "lesson_student_subscriptions" */
export type Lesson_Student_SubscriptionsLesson_Student_Subscription_Access_Paths_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Student_Subscription_Access_Path_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Student_Subscription_Access_Path_Order_By>>;
  where?: Maybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
};

/** aggregated selection of "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Aggregate = {
  aggregate?: Maybe<Lesson_Student_Subscriptions_Aggregate_Fields>;
  nodes: Array<Lesson_Student_Subscriptions>;
};

/** aggregate fields of "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lesson_Student_Subscriptions_Max_Fields>;
  min?: Maybe<Lesson_Student_Subscriptions_Min_Fields>;
};


/** aggregate fields of "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Lesson_Student_Subscriptions_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Lesson_Student_Subscriptions_Max_Order_By>;
  min?: Maybe<Lesson_Student_Subscriptions_Min_Order_By>;
};

/** input type for inserting array relation for remote table "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Arr_Rel_Insert_Input = {
  data: Array<Lesson_Student_Subscriptions_Insert_Input>;
  on_conflict?: Maybe<Lesson_Student_Subscriptions_On_Conflict>;
};

/** Boolean expression to filter rows from the table "lesson_student_subscriptions". All fields are combined with a logical 'AND'. */
export type Lesson_Student_Subscriptions_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Lesson_Student_Subscriptions_Bool_Exp>>>;
  _not?: Maybe<Lesson_Student_Subscriptions_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Lesson_Student_Subscriptions_Bool_Exp>>>;
  course?: Maybe<Courses_Bool_Exp>;
  course_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  end_at?: Maybe<Timestamptz_Comparison_Exp>;
  lesson_student_subscription_access_paths?: Maybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  start_at?: Maybe<Timestamptz_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  student_subscription_id?: Maybe<String_Comparison_Exp>;
  subscription_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "lesson_student_subscriptions" */
export enum Lesson_Student_Subscriptions_Constraint {
  /** unique or primary key constraint */
  LessonStudentSubscriptionsPkey = 'lesson_student_subscriptions_pkey',
  /** unique or primary key constraint */
  LessonStudentSubscriptionsUniq = 'lesson_student_subscriptions_uniq'
}

/** input type for inserting data into table "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Insert_Input = {
  course?: Maybe<Courses_Obj_Rel_Insert_Input>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  lesson_student_subscription_access_paths?: Maybe<Lesson_Student_Subscription_Access_Path_Arr_Rel_Insert_Input>;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Lesson_Student_Subscriptions_Max_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  student_id?: Maybe<Scalars['String']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Max_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_at?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  student_subscription_id?: Maybe<Order_By>;
  subscription_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Lesson_Student_Subscriptions_Min_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  student_id?: Maybe<Scalars['String']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Min_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_at?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  student_subscription_id?: Maybe<Order_By>;
  subscription_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lesson_Student_Subscriptions>;
};

/** input type for inserting object relation for remote table "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Obj_Rel_Insert_Input = {
  data: Lesson_Student_Subscriptions_Insert_Input;
  on_conflict?: Maybe<Lesson_Student_Subscriptions_On_Conflict>;
};

/** on conflict condition type for table "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_On_Conflict = {
  constraint: Lesson_Student_Subscriptions_Constraint;
  update_columns: Array<Lesson_Student_Subscriptions_Update_Column>;
  where?: Maybe<Lesson_Student_Subscriptions_Bool_Exp>;
};

/** ordering options when selecting data from "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Order_By = {
  course?: Maybe<Courses_Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_at?: Maybe<Order_By>;
  lesson_student_subscription_access_paths_aggregate?: Maybe<Lesson_Student_Subscription_Access_Path_Aggregate_Order_By>;
  resource_path?: Maybe<Order_By>;
  start_at?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  student_subscription_id?: Maybe<Order_By>;
  subscription_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Pk_Columns_Input = {
  student_subscription_id: Scalars['String'];
};

/** select columns of table "lesson_student_subscriptions" */
export enum Lesson_Student_Subscriptions_Select_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndAt = 'end_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartAt = 'start_at',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudentSubscriptionId = 'student_subscription_id',
  /** column name */
  SubscriptionId = 'subscription_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Set_Input = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  student_id?: Maybe<Scalars['String']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "lesson_student_subscriptions" */
export enum Lesson_Student_Subscriptions_Update_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndAt = 'end_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartAt = 'start_at',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudentSubscriptionId = 'student_subscription_id',
  /** column name */
  SubscriptionId = 'subscription_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "lesson_study_plan_items" */
export type Lesson_Study_Plan_Items = {
  course_id?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  study_plan_item_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "lesson_study_plan_items" */
export type Lesson_Study_Plan_Items_Aggregate = {
  aggregate?: Maybe<Lesson_Study_Plan_Items_Aggregate_Fields>;
  nodes: Array<Lesson_Study_Plan_Items>;
};

/** aggregate fields of "lesson_study_plan_items" */
export type Lesson_Study_Plan_Items_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lesson_Study_Plan_Items_Max_Fields>;
  min?: Maybe<Lesson_Study_Plan_Items_Min_Fields>;
};


/** aggregate fields of "lesson_study_plan_items" */
export type Lesson_Study_Plan_Items_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Lesson_Study_Plan_Items_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lesson_study_plan_items" */
export type Lesson_Study_Plan_Items_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Lesson_Study_Plan_Items_Max_Order_By>;
  min?: Maybe<Lesson_Study_Plan_Items_Min_Order_By>;
};

/** input type for inserting array relation for remote table "lesson_study_plan_items" */
export type Lesson_Study_Plan_Items_Arr_Rel_Insert_Input = {
  data: Array<Lesson_Study_Plan_Items_Insert_Input>;
  on_conflict?: Maybe<Lesson_Study_Plan_Items_On_Conflict>;
};

/** Boolean expression to filter rows from the table "lesson_study_plan_items". All fields are combined with a logical 'AND'. */
export type Lesson_Study_Plan_Items_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Lesson_Study_Plan_Items_Bool_Exp>>>;
  _not?: Maybe<Lesson_Study_Plan_Items_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Lesson_Study_Plan_Items_Bool_Exp>>>;
  course_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  lesson_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  study_plan_item_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "lesson_study_plan_items" */
export enum Lesson_Study_Plan_Items_Constraint {
  /** unique or primary key constraint */
  LessonStudyPlanItemsPk = 'lesson_study_plan_items_pk'
}

/** input type for inserting data into table "lesson_study_plan_items" */
export type Lesson_Study_Plan_Items_Insert_Input = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Lesson_Study_Plan_Items_Max_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "lesson_study_plan_items" */
export type Lesson_Study_Plan_Items_Max_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Lesson_Study_Plan_Items_Min_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "lesson_study_plan_items" */
export type Lesson_Study_Plan_Items_Min_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "lesson_study_plan_items" */
export type Lesson_Study_Plan_Items_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lesson_Study_Plan_Items>;
};

/** input type for inserting object relation for remote table "lesson_study_plan_items" */
export type Lesson_Study_Plan_Items_Obj_Rel_Insert_Input = {
  data: Lesson_Study_Plan_Items_Insert_Input;
  on_conflict?: Maybe<Lesson_Study_Plan_Items_On_Conflict>;
};

/** on conflict condition type for table "lesson_study_plan_items" */
export type Lesson_Study_Plan_Items_On_Conflict = {
  constraint: Lesson_Study_Plan_Items_Constraint;
  update_columns: Array<Lesson_Study_Plan_Items_Update_Column>;
  where?: Maybe<Lesson_Study_Plan_Items_Bool_Exp>;
};

/** ordering options when selecting data from "lesson_study_plan_items" */
export type Lesson_Study_Plan_Items_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "lesson_study_plan_items" */
export type Lesson_Study_Plan_Items_Pk_Columns_Input = {
  lesson_id: Scalars['String'];
  study_plan_item_id: Scalars['String'];
};

/** select columns of table "lesson_study_plan_items" */
export enum Lesson_Study_Plan_Items_Select_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudyPlanItemId = 'study_plan_item_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "lesson_study_plan_items" */
export type Lesson_Study_Plan_Items_Set_Input = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "lesson_study_plan_items" */
export enum Lesson_Study_Plan_Items_Update_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudyPlanItemId = 'study_plan_item_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "lessons" */
export type Lessons = {
  center_id?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['String']>;
  control_settings?: Maybe<Scalars['jsonb']>;
  /** An object relationship */
  course?: Maybe<Courses>;
  course_id?: Maybe<Scalars['String']>;
  /** An array relationship */
  courses_classes: Array<Courses_Classes>;
  /** An aggregated array relationship */
  courses_classes_aggregate: Courses_Classes_Aggregate;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  learner_ids: Scalars['_text'];
  lesson_group_id?: Maybe<Scalars['String']>;
  lesson_id: Scalars['String'];
  /** An array relationship */
  lesson_members: Array<Lesson_Members>;
  /** An aggregated array relationship */
  lesson_members_aggregate: Lesson_Members_Aggregate;
  /** An array relationship */
  lesson_reports: Array<Lesson_Reports>;
  /** An aggregated array relationship */
  lesson_reports_aggregate: Lesson_Reports_Aggregate;
  lesson_type?: Maybe<Scalars['String']>;
  /** An array relationship */
  lessons_courses: Array<Lessons_Courses>;
  /** An aggregated array relationship */
  lessons_courses_aggregate: Lessons_Courses_Aggregate;
  /** An array relationship */
  lessons_teachers: Array<Lessons_Teachers>;
  /** An aggregated array relationship */
  lessons_teachers_aggregate: Lessons_Teachers_Aggregate;
  name?: Maybe<Scalars['String']>;
  /** An object relationship */
  preset_study_plan_weekly_format?: Maybe<Preset_Study_Plans_Weekly_Format>;
  /** An object relationship */
  preset_study_plans_weekly?: Maybe<Preset_Study_Plans_Weekly>;
  resource_path?: Maybe<Scalars['String']>;
  room_id?: Maybe<Scalars['String']>;
  room_state?: Maybe<Scalars['jsonb']>;
  scheduling_status?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  stream_learner_counter: Scalars['Int'];
  teacher_id?: Maybe<Scalars['String']>;
  teaching_medium?: Maybe<Scalars['String']>;
  teaching_method?: Maybe<Scalars['String']>;
  teaching_model?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  users?: Maybe<Users>;
};


/** columns and relationships of "lessons" */
export type LessonsControl_SettingsArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "lessons" */
export type LessonsCourses_ClassesArgs = {
  distinct_on?: Maybe<Array<Courses_Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Classes_Order_By>>;
  where?: Maybe<Courses_Classes_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsCourses_Classes_AggregateArgs = {
  distinct_on?: Maybe<Array<Courses_Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Classes_Order_By>>;
  where?: Maybe<Courses_Classes_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsLesson_MembersArgs = {
  distinct_on?: Maybe<Array<Lesson_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Members_Order_By>>;
  where?: Maybe<Lesson_Members_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsLesson_Members_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Members_Order_By>>;
  where?: Maybe<Lesson_Members_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsLesson_ReportsArgs = {
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsLesson_Reports_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsLessons_CoursesArgs = {
  distinct_on?: Maybe<Array<Lessons_Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Courses_Order_By>>;
  where?: Maybe<Lessons_Courses_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsLessons_Courses_AggregateArgs = {
  distinct_on?: Maybe<Array<Lessons_Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Courses_Order_By>>;
  where?: Maybe<Lessons_Courses_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsLessons_TeachersArgs = {
  distinct_on?: Maybe<Array<Lessons_Teachers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Teachers_Order_By>>;
  where?: Maybe<Lessons_Teachers_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsLessons_Teachers_AggregateArgs = {
  distinct_on?: Maybe<Array<Lessons_Teachers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Teachers_Order_By>>;
  where?: Maybe<Lessons_Teachers_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsRoom_StateArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "lessons" */
export type Lessons_Aggregate = {
  aggregate?: Maybe<Lessons_Aggregate_Fields>;
  nodes: Array<Lessons>;
};

/** aggregate fields of "lessons" */
export type Lessons_Aggregate_Fields = {
  avg?: Maybe<Lessons_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lessons_Max_Fields>;
  min?: Maybe<Lessons_Min_Fields>;
  stddev?: Maybe<Lessons_Stddev_Fields>;
  stddev_pop?: Maybe<Lessons_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Lessons_Stddev_Samp_Fields>;
  sum?: Maybe<Lessons_Sum_Fields>;
  var_pop?: Maybe<Lessons_Var_Pop_Fields>;
  var_samp?: Maybe<Lessons_Var_Samp_Fields>;
  variance?: Maybe<Lessons_Variance_Fields>;
};


/** aggregate fields of "lessons" */
export type Lessons_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Lessons_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lessons" */
export type Lessons_Aggregate_Order_By = {
  avg?: Maybe<Lessons_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Lessons_Max_Order_By>;
  min?: Maybe<Lessons_Min_Order_By>;
  stddev?: Maybe<Lessons_Stddev_Order_By>;
  stddev_pop?: Maybe<Lessons_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Lessons_Stddev_Samp_Order_By>;
  sum?: Maybe<Lessons_Sum_Order_By>;
  var_pop?: Maybe<Lessons_Var_Pop_Order_By>;
  var_samp?: Maybe<Lessons_Var_Samp_Order_By>;
  variance?: Maybe<Lessons_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Lessons_Append_Input = {
  control_settings?: Maybe<Scalars['jsonb']>;
  room_state?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "lessons" */
export type Lessons_Arr_Rel_Insert_Input = {
  data: Array<Lessons_Insert_Input>;
  on_conflict?: Maybe<Lessons_On_Conflict>;
};

/** aggregate avg on columns */
export type Lessons_Avg_Fields = {
  stream_learner_counter?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "lessons" */
export type Lessons_Avg_Order_By = {
  stream_learner_counter?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "lessons". All fields are combined with a logical 'AND'. */
export type Lessons_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Lessons_Bool_Exp>>>;
  _not?: Maybe<Lessons_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Lessons_Bool_Exp>>>;
  center_id?: Maybe<String_Comparison_Exp>;
  class_id?: Maybe<String_Comparison_Exp>;
  control_settings?: Maybe<Jsonb_Comparison_Exp>;
  course?: Maybe<Courses_Bool_Exp>;
  course_id?: Maybe<String_Comparison_Exp>;
  courses_classes?: Maybe<Courses_Classes_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  end_at?: Maybe<Timestamptz_Comparison_Exp>;
  end_time?: Maybe<Timestamptz_Comparison_Exp>;
  learner_ids?: Maybe<_Text_Comparison_Exp>;
  lesson_group_id?: Maybe<String_Comparison_Exp>;
  lesson_id?: Maybe<String_Comparison_Exp>;
  lesson_members?: Maybe<Lesson_Members_Bool_Exp>;
  lesson_reports?: Maybe<Lesson_Reports_Bool_Exp>;
  lesson_type?: Maybe<String_Comparison_Exp>;
  lessons_courses?: Maybe<Lessons_Courses_Bool_Exp>;
  lessons_teachers?: Maybe<Lessons_Teachers_Bool_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  preset_study_plan_weekly_format?: Maybe<Preset_Study_Plans_Weekly_Format_Bool_Exp>;
  preset_study_plans_weekly?: Maybe<Preset_Study_Plans_Weekly_Bool_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  room_id?: Maybe<String_Comparison_Exp>;
  room_state?: Maybe<Jsonb_Comparison_Exp>;
  scheduling_status?: Maybe<String_Comparison_Exp>;
  start_time?: Maybe<Timestamptz_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  stream_learner_counter?: Maybe<Int_Comparison_Exp>;
  teacher_id?: Maybe<String_Comparison_Exp>;
  teaching_medium?: Maybe<String_Comparison_Exp>;
  teaching_method?: Maybe<String_Comparison_Exp>;
  teaching_model?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  users?: Maybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "lessons" */
export enum Lessons_Constraint {
  /** unique or primary key constraint */
  LessonsPk = 'lessons_pk'
}

/** columns and relationships of "lessons_courses" */
export type Lessons_Courses = {
  /** An object relationship */
  course: Courses;
  course_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  lesson: Lessons;
  lesson_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "lessons_courses" */
export type Lessons_Courses_Aggregate = {
  aggregate?: Maybe<Lessons_Courses_Aggregate_Fields>;
  nodes: Array<Lessons_Courses>;
};

/** aggregate fields of "lessons_courses" */
export type Lessons_Courses_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lessons_Courses_Max_Fields>;
  min?: Maybe<Lessons_Courses_Min_Fields>;
};


/** aggregate fields of "lessons_courses" */
export type Lessons_Courses_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Lessons_Courses_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lessons_courses" */
export type Lessons_Courses_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Lessons_Courses_Max_Order_By>;
  min?: Maybe<Lessons_Courses_Min_Order_By>;
};

/** input type for inserting array relation for remote table "lessons_courses" */
export type Lessons_Courses_Arr_Rel_Insert_Input = {
  data: Array<Lessons_Courses_Insert_Input>;
  on_conflict?: Maybe<Lessons_Courses_On_Conflict>;
};

/** Boolean expression to filter rows from the table "lessons_courses". All fields are combined with a logical 'AND'. */
export type Lessons_Courses_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Lessons_Courses_Bool_Exp>>>;
  _not?: Maybe<Lessons_Courses_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Lessons_Courses_Bool_Exp>>>;
  course?: Maybe<Courses_Bool_Exp>;
  course_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  lesson?: Maybe<Lessons_Bool_Exp>;
  lesson_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "lessons_courses" */
export enum Lessons_Courses_Constraint {
  /** unique or primary key constraint */
  LessonsCoursesPk = 'lessons_courses_pk'
}

/** input type for inserting data into table "lessons_courses" */
export type Lessons_Courses_Insert_Input = {
  course?: Maybe<Courses_Obj_Rel_Insert_Input>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson?: Maybe<Lessons_Obj_Rel_Insert_Input>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Lessons_Courses_Max_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "lessons_courses" */
export type Lessons_Courses_Max_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Lessons_Courses_Min_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "lessons_courses" */
export type Lessons_Courses_Min_Order_By = {
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** response of any mutation on the table "lessons_courses" */
export type Lessons_Courses_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lessons_Courses>;
};

/** input type for inserting object relation for remote table "lessons_courses" */
export type Lessons_Courses_Obj_Rel_Insert_Input = {
  data: Lessons_Courses_Insert_Input;
  on_conflict?: Maybe<Lessons_Courses_On_Conflict>;
};

/** on conflict condition type for table "lessons_courses" */
export type Lessons_Courses_On_Conflict = {
  constraint: Lessons_Courses_Constraint;
  update_columns: Array<Lessons_Courses_Update_Column>;
  where?: Maybe<Lessons_Courses_Bool_Exp>;
};

/** ordering options when selecting data from "lessons_courses" */
export type Lessons_Courses_Order_By = {
  course?: Maybe<Courses_Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lesson?: Maybe<Lessons_Order_By>;
  lesson_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** primary key columns input for table: "lessons_courses" */
export type Lessons_Courses_Pk_Columns_Input = {
  course_id: Scalars['String'];
  lesson_id: Scalars['String'];
};

/** select columns of table "lessons_courses" */
export enum Lessons_Courses_Select_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  ResourcePath = 'resource_path'
}

/** input type for updating data in table "lessons_courses" */
export type Lessons_Courses_Set_Input = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** update columns of table "lessons_courses" */
export enum Lessons_Courses_Update_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  ResourcePath = 'resource_path'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Lessons_Delete_At_Path_Input = {
  control_settings?: Maybe<Array<Maybe<Scalars['String']>>>;
  room_state?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Lessons_Delete_Elem_Input = {
  control_settings?: Maybe<Scalars['Int']>;
  room_state?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Lessons_Delete_Key_Input = {
  control_settings?: Maybe<Scalars['String']>;
  room_state?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "lessons" */
export type Lessons_Inc_Input = {
  stream_learner_counter?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "lessons" */
export type Lessons_Insert_Input = {
  center_id?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['String']>;
  control_settings?: Maybe<Scalars['jsonb']>;
  course?: Maybe<Courses_Obj_Rel_Insert_Input>;
  course_id?: Maybe<Scalars['String']>;
  courses_classes?: Maybe<Courses_Classes_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  learner_ids?: Maybe<Scalars['_text']>;
  lesson_group_id?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  lesson_members?: Maybe<Lesson_Members_Arr_Rel_Insert_Input>;
  lesson_reports?: Maybe<Lesson_Reports_Arr_Rel_Insert_Input>;
  lesson_type?: Maybe<Scalars['String']>;
  lessons_courses?: Maybe<Lessons_Courses_Arr_Rel_Insert_Input>;
  lessons_teachers?: Maybe<Lessons_Teachers_Arr_Rel_Insert_Input>;
  name?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_format?: Maybe<Preset_Study_Plans_Weekly_Format_Obj_Rel_Insert_Input>;
  preset_study_plans_weekly?: Maybe<Preset_Study_Plans_Weekly_Obj_Rel_Insert_Input>;
  resource_path?: Maybe<Scalars['String']>;
  room_id?: Maybe<Scalars['String']>;
  room_state?: Maybe<Scalars['jsonb']>;
  scheduling_status?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  stream_learner_counter?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['String']>;
  teaching_medium?: Maybe<Scalars['String']>;
  teaching_method?: Maybe<Scalars['String']>;
  teaching_model?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  users?: Maybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Lessons_Max_Fields = {
  center_id?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  lesson_group_id?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  lesson_type?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  room_id?: Maybe<Scalars['String']>;
  scheduling_status?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  stream_learner_counter?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['String']>;
  teaching_medium?: Maybe<Scalars['String']>;
  teaching_method?: Maybe<Scalars['String']>;
  teaching_model?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "lessons" */
export type Lessons_Max_Order_By = {
  center_id?: Maybe<Order_By>;
  class_id?: Maybe<Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_at?: Maybe<Order_By>;
  end_time?: Maybe<Order_By>;
  lesson_group_id?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  lesson_type?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  room_id?: Maybe<Order_By>;
  scheduling_status?: Maybe<Order_By>;
  start_time?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  stream_learner_counter?: Maybe<Order_By>;
  teacher_id?: Maybe<Order_By>;
  teaching_medium?: Maybe<Order_By>;
  teaching_method?: Maybe<Order_By>;
  teaching_model?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Lessons_Min_Fields = {
  center_id?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  lesson_group_id?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  lesson_type?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  room_id?: Maybe<Scalars['String']>;
  scheduling_status?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  stream_learner_counter?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['String']>;
  teaching_medium?: Maybe<Scalars['String']>;
  teaching_method?: Maybe<Scalars['String']>;
  teaching_model?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "lessons" */
export type Lessons_Min_Order_By = {
  center_id?: Maybe<Order_By>;
  class_id?: Maybe<Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_at?: Maybe<Order_By>;
  end_time?: Maybe<Order_By>;
  lesson_group_id?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  lesson_type?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  room_id?: Maybe<Order_By>;
  scheduling_status?: Maybe<Order_By>;
  start_time?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  stream_learner_counter?: Maybe<Order_By>;
  teacher_id?: Maybe<Order_By>;
  teaching_medium?: Maybe<Order_By>;
  teaching_method?: Maybe<Order_By>;
  teaching_model?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "lessons" */
export type Lessons_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lessons>;
};

/** input type for inserting object relation for remote table "lessons" */
export type Lessons_Obj_Rel_Insert_Input = {
  data: Lessons_Insert_Input;
  on_conflict?: Maybe<Lessons_On_Conflict>;
};

/** on conflict condition type for table "lessons" */
export type Lessons_On_Conflict = {
  constraint: Lessons_Constraint;
  update_columns: Array<Lessons_Update_Column>;
  where?: Maybe<Lessons_Bool_Exp>;
};

/** ordering options when selecting data from "lessons" */
export type Lessons_Order_By = {
  center_id?: Maybe<Order_By>;
  class_id?: Maybe<Order_By>;
  control_settings?: Maybe<Order_By>;
  course?: Maybe<Courses_Order_By>;
  course_id?: Maybe<Order_By>;
  courses_classes_aggregate?: Maybe<Courses_Classes_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_at?: Maybe<Order_By>;
  end_time?: Maybe<Order_By>;
  learner_ids?: Maybe<Order_By>;
  lesson_group_id?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  lesson_members_aggregate?: Maybe<Lesson_Members_Aggregate_Order_By>;
  lesson_reports_aggregate?: Maybe<Lesson_Reports_Aggregate_Order_By>;
  lesson_type?: Maybe<Order_By>;
  lessons_courses_aggregate?: Maybe<Lessons_Courses_Aggregate_Order_By>;
  lessons_teachers_aggregate?: Maybe<Lessons_Teachers_Aggregate_Order_By>;
  name?: Maybe<Order_By>;
  preset_study_plan_weekly_format?: Maybe<Preset_Study_Plans_Weekly_Format_Order_By>;
  preset_study_plans_weekly?: Maybe<Preset_Study_Plans_Weekly_Order_By>;
  resource_path?: Maybe<Order_By>;
  room_id?: Maybe<Order_By>;
  room_state?: Maybe<Order_By>;
  scheduling_status?: Maybe<Order_By>;
  start_time?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  stream_learner_counter?: Maybe<Order_By>;
  teacher_id?: Maybe<Order_By>;
  teaching_medium?: Maybe<Order_By>;
  teaching_method?: Maybe<Order_By>;
  teaching_model?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  users?: Maybe<Users_Order_By>;
};

/** primary key columns input for table: "lessons" */
export type Lessons_Pk_Columns_Input = {
  lesson_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Lessons_Prepend_Input = {
  control_settings?: Maybe<Scalars['jsonb']>;
  room_state?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "lessons" */
export enum Lessons_Select_Column {
  /** column name */
  CenterId = 'center_id',
  /** column name */
  ClassId = 'class_id',
  /** column name */
  ControlSettings = 'control_settings',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndAt = 'end_at',
  /** column name */
  EndTime = 'end_time',
  /** column name */
  LearnerIds = 'learner_ids',
  /** column name */
  LessonGroupId = 'lesson_group_id',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  LessonType = 'lesson_type',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  RoomId = 'room_id',
  /** column name */
  RoomState = 'room_state',
  /** column name */
  SchedulingStatus = 'scheduling_status',
  /** column name */
  StartTime = 'start_time',
  /** column name */
  Status = 'status',
  /** column name */
  StreamLearnerCounter = 'stream_learner_counter',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  TeachingMedium = 'teaching_medium',
  /** column name */
  TeachingMethod = 'teaching_method',
  /** column name */
  TeachingModel = 'teaching_model',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "lessons" */
export type Lessons_Set_Input = {
  center_id?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['String']>;
  control_settings?: Maybe<Scalars['jsonb']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  learner_ids?: Maybe<Scalars['_text']>;
  lesson_group_id?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  lesson_type?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  room_id?: Maybe<Scalars['String']>;
  room_state?: Maybe<Scalars['jsonb']>;
  scheduling_status?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  stream_learner_counter?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['String']>;
  teaching_medium?: Maybe<Scalars['String']>;
  teaching_method?: Maybe<Scalars['String']>;
  teaching_model?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Lessons_Stddev_Fields = {
  stream_learner_counter?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "lessons" */
export type Lessons_Stddev_Order_By = {
  stream_learner_counter?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Lessons_Stddev_Pop_Fields = {
  stream_learner_counter?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "lessons" */
export type Lessons_Stddev_Pop_Order_By = {
  stream_learner_counter?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Lessons_Stddev_Samp_Fields = {
  stream_learner_counter?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "lessons" */
export type Lessons_Stddev_Samp_Order_By = {
  stream_learner_counter?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Lessons_Sum_Fields = {
  stream_learner_counter?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "lessons" */
export type Lessons_Sum_Order_By = {
  stream_learner_counter?: Maybe<Order_By>;
};

/** columns and relationships of "lessons_teachers" */
export type Lessons_Teachers = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  lesson: Lessons;
  lesson_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  teacher: Teachers;
  teacher_id: Scalars['String'];
};

/** aggregated selection of "lessons_teachers" */
export type Lessons_Teachers_Aggregate = {
  aggregate?: Maybe<Lessons_Teachers_Aggregate_Fields>;
  nodes: Array<Lessons_Teachers>;
};

/** aggregate fields of "lessons_teachers" */
export type Lessons_Teachers_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lessons_Teachers_Max_Fields>;
  min?: Maybe<Lessons_Teachers_Min_Fields>;
};


/** aggregate fields of "lessons_teachers" */
export type Lessons_Teachers_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Lessons_Teachers_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lessons_teachers" */
export type Lessons_Teachers_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Lessons_Teachers_Max_Order_By>;
  min?: Maybe<Lessons_Teachers_Min_Order_By>;
};

/** input type for inserting array relation for remote table "lessons_teachers" */
export type Lessons_Teachers_Arr_Rel_Insert_Input = {
  data: Array<Lessons_Teachers_Insert_Input>;
  on_conflict?: Maybe<Lessons_Teachers_On_Conflict>;
};

/** Boolean expression to filter rows from the table "lessons_teachers". All fields are combined with a logical 'AND'. */
export type Lessons_Teachers_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Lessons_Teachers_Bool_Exp>>>;
  _not?: Maybe<Lessons_Teachers_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Lessons_Teachers_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  lesson?: Maybe<Lessons_Bool_Exp>;
  lesson_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  teacher?: Maybe<Teachers_Bool_Exp>;
  teacher_id?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "lessons_teachers" */
export enum Lessons_Teachers_Constraint {
  /** unique or primary key constraint */
  LessonsTeachersPk = 'lessons_teachers_pk'
}

/** input type for inserting data into table "lessons_teachers" */
export type Lessons_Teachers_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson?: Maybe<Lessons_Obj_Rel_Insert_Input>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  teacher?: Maybe<Teachers_Obj_Rel_Insert_Input>;
  teacher_id?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Lessons_Teachers_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "lessons_teachers" */
export type Lessons_Teachers_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  teacher_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Lessons_Teachers_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "lessons_teachers" */
export type Lessons_Teachers_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  teacher_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "lessons_teachers" */
export type Lessons_Teachers_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lessons_Teachers>;
};

/** input type for inserting object relation for remote table "lessons_teachers" */
export type Lessons_Teachers_Obj_Rel_Insert_Input = {
  data: Lessons_Teachers_Insert_Input;
  on_conflict?: Maybe<Lessons_Teachers_On_Conflict>;
};

/** on conflict condition type for table "lessons_teachers" */
export type Lessons_Teachers_On_Conflict = {
  constraint: Lessons_Teachers_Constraint;
  update_columns: Array<Lessons_Teachers_Update_Column>;
  where?: Maybe<Lessons_Teachers_Bool_Exp>;
};

/** ordering options when selecting data from "lessons_teachers" */
export type Lessons_Teachers_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lesson?: Maybe<Lessons_Order_By>;
  lesson_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  teacher?: Maybe<Teachers_Order_By>;
  teacher_id?: Maybe<Order_By>;
};

/** primary key columns input for table: "lessons_teachers" */
export type Lessons_Teachers_Pk_Columns_Input = {
  lesson_id: Scalars['String'];
  teacher_id: Scalars['String'];
};

/** select columns of table "lessons_teachers" */
export enum Lessons_Teachers_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TeacherId = 'teacher_id'
}

/** input type for updating data in table "lessons_teachers" */
export type Lessons_Teachers_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['String']>;
};

/** update columns of table "lessons_teachers" */
export enum Lessons_Teachers_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TeacherId = 'teacher_id'
}

/** update columns of table "lessons" */
export enum Lessons_Update_Column {
  /** column name */
  CenterId = 'center_id',
  /** column name */
  ClassId = 'class_id',
  /** column name */
  ControlSettings = 'control_settings',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndAt = 'end_at',
  /** column name */
  EndTime = 'end_time',
  /** column name */
  LearnerIds = 'learner_ids',
  /** column name */
  LessonGroupId = 'lesson_group_id',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  LessonType = 'lesson_type',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  RoomId = 'room_id',
  /** column name */
  RoomState = 'room_state',
  /** column name */
  SchedulingStatus = 'scheduling_status',
  /** column name */
  StartTime = 'start_time',
  /** column name */
  Status = 'status',
  /** column name */
  StreamLearnerCounter = 'stream_learner_counter',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  TeachingMedium = 'teaching_medium',
  /** column name */
  TeachingMethod = 'teaching_method',
  /** column name */
  TeachingModel = 'teaching_model',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Lessons_Var_Pop_Fields = {
  stream_learner_counter?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "lessons" */
export type Lessons_Var_Pop_Order_By = {
  stream_learner_counter?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Lessons_Var_Samp_Fields = {
  stream_learner_counter?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "lessons" */
export type Lessons_Var_Samp_Order_By = {
  stream_learner_counter?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Lessons_Variance_Fields = {
  stream_learner_counter?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "lessons" */
export type Lessons_Variance_Order_By = {
  stream_learner_counter?: Maybe<Order_By>;
};

/** columns and relationships of "lo_study_plan_items" */
export type Lo_Study_Plan_Items = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lo_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  study_plan_item: Study_Plan_Items;
  study_plan_item_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "lo_study_plan_items" */
export type Lo_Study_Plan_Items_Aggregate = {
  aggregate?: Maybe<Lo_Study_Plan_Items_Aggregate_Fields>;
  nodes: Array<Lo_Study_Plan_Items>;
};

/** aggregate fields of "lo_study_plan_items" */
export type Lo_Study_Plan_Items_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lo_Study_Plan_Items_Max_Fields>;
  min?: Maybe<Lo_Study_Plan_Items_Min_Fields>;
};


/** aggregate fields of "lo_study_plan_items" */
export type Lo_Study_Plan_Items_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Lo_Study_Plan_Items_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lo_study_plan_items" */
export type Lo_Study_Plan_Items_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Lo_Study_Plan_Items_Max_Order_By>;
  min?: Maybe<Lo_Study_Plan_Items_Min_Order_By>;
};

/** input type for inserting array relation for remote table "lo_study_plan_items" */
export type Lo_Study_Plan_Items_Arr_Rel_Insert_Input = {
  data: Array<Lo_Study_Plan_Items_Insert_Input>;
  on_conflict?: Maybe<Lo_Study_Plan_Items_On_Conflict>;
};

/** Boolean expression to filter rows from the table "lo_study_plan_items". All fields are combined with a logical 'AND'. */
export type Lo_Study_Plan_Items_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Lo_Study_Plan_Items_Bool_Exp>>>;
  _not?: Maybe<Lo_Study_Plan_Items_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Lo_Study_Plan_Items_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  lo_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  study_plan_item?: Maybe<Study_Plan_Items_Bool_Exp>;
  study_plan_item_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "lo_study_plan_items" */
export enum Lo_Study_Plan_Items_Constraint {
  /** unique or primary key constraint */
  LoStudyPlanItemsPk = 'lo_study_plan_items_pk'
}

/** input type for inserting data into table "lo_study_plan_items" */
export type Lo_Study_Plan_Items_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lo_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan_item?: Maybe<Study_Plan_Items_Obj_Rel_Insert_Input>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Lo_Study_Plan_Items_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lo_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "lo_study_plan_items" */
export type Lo_Study_Plan_Items_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lo_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Lo_Study_Plan_Items_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lo_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "lo_study_plan_items" */
export type Lo_Study_Plan_Items_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lo_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "lo_study_plan_items" */
export type Lo_Study_Plan_Items_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lo_Study_Plan_Items>;
};

/** input type for inserting object relation for remote table "lo_study_plan_items" */
export type Lo_Study_Plan_Items_Obj_Rel_Insert_Input = {
  data: Lo_Study_Plan_Items_Insert_Input;
  on_conflict?: Maybe<Lo_Study_Plan_Items_On_Conflict>;
};

/** on conflict condition type for table "lo_study_plan_items" */
export type Lo_Study_Plan_Items_On_Conflict = {
  constraint: Lo_Study_Plan_Items_Constraint;
  update_columns: Array<Lo_Study_Plan_Items_Update_Column>;
  where?: Maybe<Lo_Study_Plan_Items_Bool_Exp>;
};

/** ordering options when selecting data from "lo_study_plan_items" */
export type Lo_Study_Plan_Items_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lo_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  study_plan_item?: Maybe<Study_Plan_Items_Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "lo_study_plan_items" */
export type Lo_Study_Plan_Items_Pk_Columns_Input = {
  lo_id: Scalars['String'];
  study_plan_item_id: Scalars['String'];
};

/** select columns of table "lo_study_plan_items" */
export enum Lo_Study_Plan_Items_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudyPlanItemId = 'study_plan_item_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "lo_study_plan_items" */
export type Lo_Study_Plan_Items_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lo_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "lo_study_plan_items" */
export enum Lo_Study_Plan_Items_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudyPlanItemId = 'study_plan_item_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "locations" */
export type Locations = {
  access_path?: Maybe<Scalars['String']>;
  /** An array relationship */
  course_access_paths: Array<Course_Access_Paths>;
  /** An aggregated array relationship */
  course_access_paths_aggregate: Course_Access_Paths_Aggregate;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_archived: Scalars['Boolean'];
  /** An array relationship */
  lesson_student_subscription_access_paths: Array<Lesson_Student_Subscription_Access_Path>;
  /** An aggregated array relationship */
  lesson_student_subscription_access_paths_aggregate: Lesson_Student_Subscription_Access_Path_Aggregate;
  location_id: Scalars['String'];
  location_type?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  parent_location_id?: Maybe<Scalars['String']>;
  partner_internal_id?: Maybe<Scalars['String']>;
  partner_internal_parent_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "locations" */
export type LocationsCourse_Access_PathsArgs = {
  distinct_on?: Maybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Access_Paths_Order_By>>;
  where?: Maybe<Course_Access_Paths_Bool_Exp>;
};


/** columns and relationships of "locations" */
export type LocationsCourse_Access_Paths_AggregateArgs = {
  distinct_on?: Maybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Access_Paths_Order_By>>;
  where?: Maybe<Course_Access_Paths_Bool_Exp>;
};


/** columns and relationships of "locations" */
export type LocationsLesson_Student_Subscription_Access_PathsArgs = {
  distinct_on?: Maybe<Array<Lesson_Student_Subscription_Access_Path_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Student_Subscription_Access_Path_Order_By>>;
  where?: Maybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
};


/** columns and relationships of "locations" */
export type LocationsLesson_Student_Subscription_Access_Paths_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Student_Subscription_Access_Path_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Student_Subscription_Access_Path_Order_By>>;
  where?: Maybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
};

/** aggregated selection of "locations" */
export type Locations_Aggregate = {
  aggregate?: Maybe<Locations_Aggregate_Fields>;
  nodes: Array<Locations>;
};

/** aggregate fields of "locations" */
export type Locations_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Locations_Max_Fields>;
  min?: Maybe<Locations_Min_Fields>;
};


/** aggregate fields of "locations" */
export type Locations_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Locations_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "locations" */
export type Locations_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Locations_Max_Order_By>;
  min?: Maybe<Locations_Min_Order_By>;
};

/** input type for inserting array relation for remote table "locations" */
export type Locations_Arr_Rel_Insert_Input = {
  data: Array<Locations_Insert_Input>;
  on_conflict?: Maybe<Locations_On_Conflict>;
};

/** Boolean expression to filter rows from the table "locations". All fields are combined with a logical 'AND'. */
export type Locations_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Locations_Bool_Exp>>>;
  _not?: Maybe<Locations_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Locations_Bool_Exp>>>;
  access_path?: Maybe<String_Comparison_Exp>;
  course_access_paths?: Maybe<Course_Access_Paths_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  is_archived?: Maybe<Boolean_Comparison_Exp>;
  lesson_student_subscription_access_paths?: Maybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
  location_id?: Maybe<String_Comparison_Exp>;
  location_type?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  parent_location_id?: Maybe<String_Comparison_Exp>;
  partner_internal_id?: Maybe<String_Comparison_Exp>;
  partner_internal_parent_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "locations" */
export enum Locations_Constraint {
  /** unique or primary key constraint */
  LocationPk = 'location_pk',
  /** unique or primary key constraint */
  LocationsPkey = 'locations_pkey'
}

/** input type for inserting data into table "locations" */
export type Locations_Insert_Input = {
  access_path?: Maybe<Scalars['String']>;
  course_access_paths?: Maybe<Course_Access_Paths_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_archived?: Maybe<Scalars['Boolean']>;
  lesson_student_subscription_access_paths?: Maybe<Lesson_Student_Subscription_Access_Path_Arr_Rel_Insert_Input>;
  location_id?: Maybe<Scalars['String']>;
  location_type?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  parent_location_id?: Maybe<Scalars['String']>;
  partner_internal_id?: Maybe<Scalars['String']>;
  partner_internal_parent_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Locations_Max_Fields = {
  access_path?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  location_type?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  parent_location_id?: Maybe<Scalars['String']>;
  partner_internal_id?: Maybe<Scalars['String']>;
  partner_internal_parent_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "locations" */
export type Locations_Max_Order_By = {
  access_path?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  location_id?: Maybe<Order_By>;
  location_type?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  parent_location_id?: Maybe<Order_By>;
  partner_internal_id?: Maybe<Order_By>;
  partner_internal_parent_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Locations_Min_Fields = {
  access_path?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  location_type?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  parent_location_id?: Maybe<Scalars['String']>;
  partner_internal_id?: Maybe<Scalars['String']>;
  partner_internal_parent_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "locations" */
export type Locations_Min_Order_By = {
  access_path?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  location_id?: Maybe<Order_By>;
  location_type?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  parent_location_id?: Maybe<Order_By>;
  partner_internal_id?: Maybe<Order_By>;
  partner_internal_parent_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "locations" */
export type Locations_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Locations>;
};

/** input type for inserting object relation for remote table "locations" */
export type Locations_Obj_Rel_Insert_Input = {
  data: Locations_Insert_Input;
  on_conflict?: Maybe<Locations_On_Conflict>;
};

/** on conflict condition type for table "locations" */
export type Locations_On_Conflict = {
  constraint: Locations_Constraint;
  update_columns: Array<Locations_Update_Column>;
  where?: Maybe<Locations_Bool_Exp>;
};

/** ordering options when selecting data from "locations" */
export type Locations_Order_By = {
  access_path?: Maybe<Order_By>;
  course_access_paths_aggregate?: Maybe<Course_Access_Paths_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  is_archived?: Maybe<Order_By>;
  lesson_student_subscription_access_paths_aggregate?: Maybe<Lesson_Student_Subscription_Access_Path_Aggregate_Order_By>;
  location_id?: Maybe<Order_By>;
  location_type?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  parent_location_id?: Maybe<Order_By>;
  partner_internal_id?: Maybe<Order_By>;
  partner_internal_parent_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "locations" */
export type Locations_Pk_Columns_Input = {
  location_id: Scalars['String'];
};

/** select columns of table "locations" */
export enum Locations_Select_Column {
  /** column name */
  AccessPath = 'access_path',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  LocationType = 'location_type',
  /** column name */
  Name = 'name',
  /** column name */
  ParentLocationId = 'parent_location_id',
  /** column name */
  PartnerInternalId = 'partner_internal_id',
  /** column name */
  PartnerInternalParentId = 'partner_internal_parent_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "locations" */
export type Locations_Set_Input = {
  access_path?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_archived?: Maybe<Scalars['Boolean']>;
  location_id?: Maybe<Scalars['String']>;
  location_type?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  parent_location_id?: Maybe<Scalars['String']>;
  partner_internal_id?: Maybe<Scalars['String']>;
  partner_internal_parent_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "locations" */
export enum Locations_Update_Column {
  /** column name */
  AccessPath = 'access_path',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  LocationType = 'location_type',
  /** column name */
  Name = 'name',
  /** column name */
  ParentLocationId = 'parent_location_id',
  /** column name */
  PartnerInternalId = 'partner_internal_id',
  /** column name */
  PartnerInternalParentId = 'partner_internal_parent_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "media" */
export type Media = {
  comments?: Maybe<Scalars['jsonb']>;
  /** An array relationship */
  conversion_tasks: Array<Conversion_Tasks>;
  /** An aggregated array relationship */
  conversion_tasks_aggregate: Conversion_Tasks_Aggregate;
  converted_images?: Maybe<Scalars['jsonb']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  media_id: Scalars['String'];
  name?: Maybe<Scalars['String']>;
  resource?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "media" */
export type MediaCommentsArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "media" */
export type MediaConversion_TasksArgs = {
  distinct_on?: Maybe<Array<Conversion_Tasks_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Conversion_Tasks_Order_By>>;
  where?: Maybe<Conversion_Tasks_Bool_Exp>;
};


/** columns and relationships of "media" */
export type MediaConversion_Tasks_AggregateArgs = {
  distinct_on?: Maybe<Array<Conversion_Tasks_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Conversion_Tasks_Order_By>>;
  where?: Maybe<Conversion_Tasks_Bool_Exp>;
};


/** columns and relationships of "media" */
export type MediaConverted_ImagesArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "media" */
export type Media_Aggregate = {
  aggregate?: Maybe<Media_Aggregate_Fields>;
  nodes: Array<Media>;
};

/** aggregate fields of "media" */
export type Media_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Media_Max_Fields>;
  min?: Maybe<Media_Min_Fields>;
};


/** aggregate fields of "media" */
export type Media_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Media_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "media" */
export type Media_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Media_Max_Order_By>;
  min?: Maybe<Media_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Media_Append_Input = {
  comments?: Maybe<Scalars['jsonb']>;
  converted_images?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "media" */
export type Media_Arr_Rel_Insert_Input = {
  data: Array<Media_Insert_Input>;
  on_conflict?: Maybe<Media_On_Conflict>;
};

/** Boolean expression to filter rows from the table "media". All fields are combined with a logical 'AND'. */
export type Media_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Media_Bool_Exp>>>;
  _not?: Maybe<Media_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Media_Bool_Exp>>>;
  comments?: Maybe<Jsonb_Comparison_Exp>;
  conversion_tasks?: Maybe<Conversion_Tasks_Bool_Exp>;
  converted_images?: Maybe<Jsonb_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  media_id?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  resource?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "media" */
export enum Media_Constraint {
  /** unique or primary key constraint */
  MediaPk = 'media_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Media_Delete_At_Path_Input = {
  comments?: Maybe<Array<Maybe<Scalars['String']>>>;
  converted_images?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Media_Delete_Elem_Input = {
  comments?: Maybe<Scalars['Int']>;
  converted_images?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Media_Delete_Key_Input = {
  comments?: Maybe<Scalars['String']>;
  converted_images?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "media" */
export type Media_Insert_Input = {
  comments?: Maybe<Scalars['jsonb']>;
  conversion_tasks?: Maybe<Conversion_Tasks_Arr_Rel_Insert_Input>;
  converted_images?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  media_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Media_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  media_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "media" */
export type Media_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  media_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Media_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  media_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "media" */
export type Media_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  media_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "media" */
export type Media_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Media>;
};

/** input type for inserting object relation for remote table "media" */
export type Media_Obj_Rel_Insert_Input = {
  data: Media_Insert_Input;
  on_conflict?: Maybe<Media_On_Conflict>;
};

/** on conflict condition type for table "media" */
export type Media_On_Conflict = {
  constraint: Media_Constraint;
  update_columns: Array<Media_Update_Column>;
  where?: Maybe<Media_Bool_Exp>;
};

/** ordering options when selecting data from "media" */
export type Media_Order_By = {
  comments?: Maybe<Order_By>;
  conversion_tasks_aggregate?: Maybe<Conversion_Tasks_Aggregate_Order_By>;
  converted_images?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  media_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "media" */
export type Media_Pk_Columns_Input = {
  media_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Media_Prepend_Input = {
  comments?: Maybe<Scalars['jsonb']>;
  converted_images?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "media" */
export enum Media_Select_Column {
  /** column name */
  Comments = 'comments',
  /** column name */
  ConvertedImages = 'converted_images',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  MediaId = 'media_id',
  /** column name */
  Name = 'name',
  /** column name */
  Resource = 'resource',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "media" */
export type Media_Set_Input = {
  comments?: Maybe<Scalars['jsonb']>;
  converted_images?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  media_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "media" */
export enum Media_Update_Column {
  /** column name */
  Comments = 'comments',
  /** column name */
  ConvertedImages = 'converted_images',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  MediaId = 'media_id',
  /** column name */
  Name = 'name',
  /** column name */
  Resource = 'resource',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** mutation root */
export type Mutation_Root = {
  /** delete data from the table: "academic_years" */
  delete_academic_years?: Maybe<Academic_Years_Mutation_Response>;
  /** delete single row from the table: "academic_years" */
  delete_academic_years_by_pk?: Maybe<Academic_Years>;
  /** delete data from the table: "activity_logs" */
  delete_activity_logs?: Maybe<Activity_Logs_Mutation_Response>;
  /** delete single row from the table: "activity_logs" */
  delete_activity_logs_by_pk?: Maybe<Activity_Logs>;
  /** delete data from the table: "apple_users" */
  delete_apple_users?: Maybe<Apple_Users_Mutation_Response>;
  /** delete single row from the table: "apple_users" */
  delete_apple_users_by_pk?: Maybe<Apple_Users>;
  /** delete data from the table: "assign_study_plan_tasks" */
  delete_assign_study_plan_tasks?: Maybe<Assign_Study_Plan_Tasks_Mutation_Response>;
  /** delete single row from the table: "assign_study_plan_tasks" */
  delete_assign_study_plan_tasks_by_pk?: Maybe<Assign_Study_Plan_Tasks>;
  /** delete data from the table: "assignment_study_plan_items" */
  delete_assignment_study_plan_items?: Maybe<Assignment_Study_Plan_Items_Mutation_Response>;
  /** delete single row from the table: "assignment_study_plan_items" */
  delete_assignment_study_plan_items_by_pk?: Maybe<Assignment_Study_Plan_Items>;
  /** delete data from the table: "assignments" */
  delete_assignments?: Maybe<Assignments_Mutation_Response>;
  /** delete single row from the table: "assignments" */
  delete_assignments_by_pk?: Maybe<Assignments>;
  /** delete data from the table: "bill_item" */
  delete_bill_item?: Maybe<Bill_Item_Mutation_Response>;
  /** delete single row from the table: "bill_item" */
  delete_bill_item_by_pk?: Maybe<Bill_Item>;
  /** delete data from the table: "billing_histories" */
  delete_billing_histories?: Maybe<Billing_Histories_Mutation_Response>;
  /** delete single row from the table: "billing_histories" */
  delete_billing_histories_by_pk?: Maybe<Billing_Histories>;
  /** delete data from the table: "billing_schedule" */
  delete_billing_schedule?: Maybe<Billing_Schedule_Mutation_Response>;
  /** delete single row from the table: "billing_schedule" */
  delete_billing_schedule_by_pk?: Maybe<Billing_Schedule>;
  /** delete data from the table: "billing_schedule_period" */
  delete_billing_schedule_period?: Maybe<Billing_Schedule_Period_Mutation_Response>;
  /** delete single row from the table: "billing_schedule_period" */
  delete_billing_schedule_period_by_pk?: Maybe<Billing_Schedule_Period>;
  /** delete data from the table: "books" */
  delete_books?: Maybe<Books_Mutation_Response>;
  /** delete single row from the table: "books" */
  delete_books_by_pk?: Maybe<Books>;
  /** delete data from the table: "books_chapters" */
  delete_books_chapters?: Maybe<Books_Chapters_Mutation_Response>;
  /** delete single row from the table: "books_chapters" */
  delete_books_chapters_by_pk?: Maybe<Books_Chapters>;
  /** delete data from the table: "brands" */
  delete_brands?: Maybe<Brands_Mutation_Response>;
  /** delete single row from the table: "brands" */
  delete_brands_by_pk?: Maybe<Brands>;
  /** delete data from the table: "centers" */
  delete_centers?: Maybe<Centers_Mutation_Response>;
  /** delete single row from the table: "centers" */
  delete_centers_by_pk?: Maybe<Centers>;
  /** delete data from the table: "chapters" */
  delete_chapters?: Maybe<Chapters_Mutation_Response>;
  /** delete single row from the table: "chapters" */
  delete_chapters_by_pk?: Maybe<Chapters>;
  /** delete data from the table: "cities" */
  delete_cities?: Maybe<Cities_Mutation_Response>;
  /** delete single row from the table: "cities" */
  delete_cities_by_pk?: Maybe<Cities>;
  /** delete data from the table: "class_members" */
  delete_class_members?: Maybe<Class_Members_Mutation_Response>;
  /** delete single row from the table: "class_members" */
  delete_class_members_by_pk?: Maybe<Class_Members>;
  /** delete data from the table: "class_preset_study_plans" */
  delete_class_preset_study_plans?: Maybe<Class_Preset_Study_Plans_Mutation_Response>;
  /** delete single row from the table: "class_preset_study_plans" */
  delete_class_preset_study_plans_by_pk?: Maybe<Class_Preset_Study_Plans>;
  /** delete data from the table: "class_students" */
  delete_class_students?: Maybe<Class_Students_Mutation_Response>;
  /** delete single row from the table: "class_students" */
  delete_class_students_by_pk?: Maybe<Class_Students>;
  /** delete data from the table: "class_study_plans" */
  delete_class_study_plans?: Maybe<Class_Study_Plans_Mutation_Response>;
  /** delete single row from the table: "class_study_plans" */
  delete_class_study_plans_by_pk?: Maybe<Class_Study_Plans>;
  /** delete data from the table: "classes" */
  delete_classes?: Maybe<Classes_Mutation_Response>;
  /** delete single row from the table: "classes" */
  delete_classes_by_pk?: Maybe<Classes>;
  /** delete data from the table: "coaches" */
  delete_coaches?: Maybe<Coaches_Mutation_Response>;
  /** delete single row from the table: "coaches" */
  delete_coaches_by_pk?: Maybe<Coaches>;
  /** delete data from the table: "cod_orders" */
  delete_cod_orders?: Maybe<Cod_Orders_Mutation_Response>;
  /** delete single row from the table: "cod_orders" */
  delete_cod_orders_by_pk?: Maybe<Cod_Orders>;
  /** delete data from the table: "configs" */
  delete_configs?: Maybe<Configs_Mutation_Response>;
  /** delete single row from the table: "configs" */
  delete_configs_by_pk?: Maybe<Configs>;
  /** delete data from the table: "conversion_tasks" */
  delete_conversion_tasks?: Maybe<Conversion_Tasks_Mutation_Response>;
  /** delete single row from the table: "conversion_tasks" */
  delete_conversion_tasks_by_pk?: Maybe<Conversion_Tasks>;
  /** delete data from the table: "course_access_paths" */
  delete_course_access_paths?: Maybe<Course_Access_Paths_Mutation_Response>;
  /** delete single row from the table: "course_access_paths" */
  delete_course_access_paths_by_pk?: Maybe<Course_Access_Paths>;
  /** delete data from the table: "course_classes" */
  delete_course_classes?: Maybe<Course_Classes_Mutation_Response>;
  /** delete single row from the table: "course_classes" */
  delete_course_classes_by_pk?: Maybe<Course_Classes>;
  /** delete data from the table: "course_students" */
  delete_course_students?: Maybe<Course_Students_Mutation_Response>;
  /** delete single row from the table: "course_students" */
  delete_course_students_by_pk?: Maybe<Course_Students>;
  /** delete data from the table: "course_study_plans" */
  delete_course_study_plans?: Maybe<Course_Study_Plans_Mutation_Response>;
  /** delete single row from the table: "course_study_plans" */
  delete_course_study_plans_by_pk?: Maybe<Course_Study_Plans>;
  /** delete data from the table: "courses" */
  delete_courses?: Maybe<Courses_Mutation_Response>;
  /** delete data from the table: "courses_academic_years" */
  delete_courses_academic_years?: Maybe<Courses_Academic_Years_Mutation_Response>;
  /** delete single row from the table: "courses_academic_years" */
  delete_courses_academic_years_by_pk?: Maybe<Courses_Academic_Years>;
  /** delete data from the table: "courses_books" */
  delete_courses_books?: Maybe<Courses_Books_Mutation_Response>;
  /** delete single row from the table: "courses_books" */
  delete_courses_books_by_pk?: Maybe<Courses_Books>;
  /** delete single row from the table: "courses" */
  delete_courses_by_pk?: Maybe<Courses>;
  /** delete data from the table: "courses_classes" */
  delete_courses_classes?: Maybe<Courses_Classes_Mutation_Response>;
  /** delete single row from the table: "courses_classes" */
  delete_courses_classes_by_pk?: Maybe<Courses_Classes>;
  /** delete data from the table: "discount" */
  delete_discount?: Maybe<Discount_Mutation_Response>;
  /** delete single row from the table: "discount" */
  delete_discount_by_pk?: Maybe<Discount>;
  /** delete data from the table: "districts" */
  delete_districts?: Maybe<Districts_Mutation_Response>;
  /** delete single row from the table: "districts" */
  delete_districts_by_pk?: Maybe<Districts>;
  /** delete data from the table: "e2e_features" */
  delete_e2e_features?: Maybe<E2e_Features_Mutation_Response>;
  /** delete single row from the table: "e2e_features" */
  delete_e2e_features_by_pk?: Maybe<E2e_Features>;
  /** delete data from the table: "e2e_instances" */
  delete_e2e_instances?: Maybe<E2e_Instances_Mutation_Response>;
  /** delete single row from the table: "e2e_instances" */
  delete_e2e_instances_by_pk?: Maybe<E2e_Instances>;
  /** delete data from the table: "e2e_scenarios" */
  delete_e2e_scenarios?: Maybe<E2e_Scenarios_Mutation_Response>;
  /** delete single row from the table: "e2e_scenarios" */
  delete_e2e_scenarios_by_pk?: Maybe<E2e_Scenarios>;
  /** delete data from the table: "e2e_steps" */
  delete_e2e_steps?: Maybe<E2e_Steps_Mutation_Response>;
  /** delete single row from the table: "e2e_steps" */
  delete_e2e_steps_by_pk?: Maybe<E2e_Steps>;
  /** delete data from the table: "grade" */
  delete_grade?: Maybe<Grade_Mutation_Response>;
  /** delete single row from the table: "grade" */
  delete_grade_by_pk?: Maybe<Grade>;
  /** delete data from the table: "groups" */
  delete_groups?: Maybe<Groups_Mutation_Response>;
  /** delete single row from the table: "groups" */
  delete_groups_by_pk?: Maybe<Groups>;
  /** delete data from the table: "hub_tours" */
  delete_hub_tours?: Maybe<Hub_Tours_Mutation_Response>;
  /** delete single row from the table: "hub_tours" */
  delete_hub_tours_by_pk?: Maybe<Hub_Tours>;
  /** delete data from the table: "hubs" */
  delete_hubs?: Maybe<Hubs_Mutation_Response>;
  /** delete single row from the table: "hubs" */
  delete_hubs_by_pk?: Maybe<Hubs>;
  /** delete data from the table: "info_notification_msgs" */
  delete_info_notification_msgs?: Maybe<Info_Notification_Msgs_Mutation_Response>;
  /** delete single row from the table: "info_notification_msgs" */
  delete_info_notification_msgs_by_pk?: Maybe<Info_Notification_Msgs>;
  /** delete data from the table: "info_notifications" */
  delete_info_notifications?: Maybe<Info_Notifications_Mutation_Response>;
  /** delete single row from the table: "info_notifications" */
  delete_info_notifications_by_pk?: Maybe<Info_Notifications>;
  /** delete data from the table: "ios_transactions" */
  delete_ios_transactions?: Maybe<Ios_Transactions_Mutation_Response>;
  /** delete single row from the table: "ios_transactions" */
  delete_ios_transactions_by_pk?: Maybe<Ios_Transactions>;
  /** delete data from the table: "jpref_sync_data_logs" */
  delete_jpref_sync_data_logs?: Maybe<Jpref_Sync_Data_Logs_Mutation_Response>;
  /** delete single row from the table: "jpref_sync_data_logs" */
  delete_jpref_sync_data_logs_by_pk?: Maybe<Jpref_Sync_Data_Logs>;
  /** delete data from the table: "learning_objectives" */
  delete_learning_objectives?: Maybe<Learning_Objectives_Mutation_Response>;
  /** delete single row from the table: "learning_objectives" */
  delete_learning_objectives_by_pk?: Maybe<Learning_Objectives>;
  /** delete data from the table: "lesson_groups" */
  delete_lesson_groups?: Maybe<Lesson_Groups_Mutation_Response>;
  /** delete single row from the table: "lesson_groups" */
  delete_lesson_groups_by_pk?: Maybe<Lesson_Groups>;
  /** delete data from the table: "lesson_members" */
  delete_lesson_members?: Maybe<Lesson_Members_Mutation_Response>;
  /** delete single row from the table: "lesson_members" */
  delete_lesson_members_by_pk?: Maybe<Lesson_Members>;
  /** delete data from the table: "lesson_report_details" */
  delete_lesson_report_details?: Maybe<Lesson_Report_Details_Mutation_Response>;
  /** delete single row from the table: "lesson_report_details" */
  delete_lesson_report_details_by_pk?: Maybe<Lesson_Report_Details>;
  /** delete data from the table: "lesson_reports" */
  delete_lesson_reports?: Maybe<Lesson_Reports_Mutation_Response>;
  /** delete single row from the table: "lesson_reports" */
  delete_lesson_reports_by_pk?: Maybe<Lesson_Reports>;
  /** delete data from the table: "lesson_student_subscription_access_path" */
  delete_lesson_student_subscription_access_path?: Maybe<Lesson_Student_Subscription_Access_Path_Mutation_Response>;
  /** delete single row from the table: "lesson_student_subscription_access_path" */
  delete_lesson_student_subscription_access_path_by_pk?: Maybe<Lesson_Student_Subscription_Access_Path>;
  /** delete data from the table: "lesson_student_subscriptions" */
  delete_lesson_student_subscriptions?: Maybe<Lesson_Student_Subscriptions_Mutation_Response>;
  /** delete single row from the table: "lesson_student_subscriptions" */
  delete_lesson_student_subscriptions_by_pk?: Maybe<Lesson_Student_Subscriptions>;
  /** delete data from the table: "lesson_study_plan_items" */
  delete_lesson_study_plan_items?: Maybe<Lesson_Study_Plan_Items_Mutation_Response>;
  /** delete single row from the table: "lesson_study_plan_items" */
  delete_lesson_study_plan_items_by_pk?: Maybe<Lesson_Study_Plan_Items>;
  /** delete data from the table: "lessons" */
  delete_lessons?: Maybe<Lessons_Mutation_Response>;
  /** delete single row from the table: "lessons" */
  delete_lessons_by_pk?: Maybe<Lessons>;
  /** delete data from the table: "lessons_courses" */
  delete_lessons_courses?: Maybe<Lessons_Courses_Mutation_Response>;
  /** delete single row from the table: "lessons_courses" */
  delete_lessons_courses_by_pk?: Maybe<Lessons_Courses>;
  /** delete data from the table: "lessons_teachers" */
  delete_lessons_teachers?: Maybe<Lessons_Teachers_Mutation_Response>;
  /** delete single row from the table: "lessons_teachers" */
  delete_lessons_teachers_by_pk?: Maybe<Lessons_Teachers>;
  /** delete data from the table: "lo_study_plan_items" */
  delete_lo_study_plan_items?: Maybe<Lo_Study_Plan_Items_Mutation_Response>;
  /** delete single row from the table: "lo_study_plan_items" */
  delete_lo_study_plan_items_by_pk?: Maybe<Lo_Study_Plan_Items>;
  /** delete data from the table: "locations" */
  delete_locations?: Maybe<Locations_Mutation_Response>;
  /** delete single row from the table: "locations" */
  delete_locations_by_pk?: Maybe<Locations>;
  /** delete data from the table: "media" */
  delete_media?: Maybe<Media_Mutation_Response>;
  /** delete single row from the table: "media" */
  delete_media_by_pk?: Maybe<Media>;
  /** delete data from the table: "notification_messages" */
  delete_notification_messages?: Maybe<Notification_Messages_Mutation_Response>;
  /** delete single row from the table: "notification_messages" */
  delete_notification_messages_by_pk?: Maybe<Notification_Messages>;
  /** delete data from the table: "notification_targets" */
  delete_notification_targets?: Maybe<Notification_Targets_Mutation_Response>;
  /** delete single row from the table: "notification_targets" */
  delete_notification_targets_by_pk?: Maybe<Notification_Targets>;
  /** delete data from the table: "notifications" */
  delete_notifications?: Maybe<Notifications_Mutation_Response>;
  /** delete single row from the table: "notifications" */
  delete_notifications_by_pk?: Maybe<Notifications>;
  /** delete data from the table: "order" */
  delete_order?: Maybe<Order_Mutation_Response>;
  /** delete data from the table: "order_action_log" */
  delete_order_action_log?: Maybe<Order_Action_Log_Mutation_Response>;
  /** delete single row from the table: "order_action_log" */
  delete_order_action_log_by_pk?: Maybe<Order_Action_Log>;
  /** delete single row from the table: "order" */
  delete_order_by_pk?: Maybe<Order>;
  /** delete data from the table: "order_item" */
  delete_order_item?: Maybe<Order_Item_Mutation_Response>;
  /** delete single row from the table: "order_item" */
  delete_order_item_by_pk?: Maybe<Order_Item>;
  /** delete data from the table: "organizations" */
  delete_organizations?: Maybe<Organizations_Mutation_Response>;
  /** delete single row from the table: "organizations" */
  delete_organizations_by_pk?: Maybe<Organizations>;
  /** delete data from the table: "orgs" */
  delete_orgs?: Maybe<Orgs_Mutation_Response>;
  /** delete single row from the table: "orgs" */
  delete_orgs_by_pk?: Maybe<Orgs>;
  /** delete data from the table: "packages" */
  delete_packages?: Maybe<Packages_Mutation_Response>;
  /** delete single row from the table: "packages" */
  delete_packages_by_pk?: Maybe<Packages>;
  /** delete data from the table: "parents" */
  delete_parents?: Maybe<Parents_Mutation_Response>;
  /** delete single row from the table: "parents" */
  delete_parents_by_pk?: Maybe<Parents>;
  /** delete data from the table: "partner_dynamic_form_field_values" */
  delete_partner_dynamic_form_field_values?: Maybe<Partner_Dynamic_Form_Field_Values_Mutation_Response>;
  /** delete single row from the table: "partner_dynamic_form_field_values" */
  delete_partner_dynamic_form_field_values_by_pk?: Maybe<Partner_Dynamic_Form_Field_Values>;
  /** delete data from the table: "partner_form_configs" */
  delete_partner_form_configs?: Maybe<Partner_Form_Configs_Mutation_Response>;
  /** delete single row from the table: "partner_form_configs" */
  delete_partner_form_configs_by_pk?: Maybe<Partner_Form_Configs>;
  /** delete data from the table: "plans" */
  delete_plans?: Maybe<Plans_Mutation_Response>;
  /** delete single row from the table: "plans" */
  delete_plans_by_pk?: Maybe<Plans>;
  /** delete data from the table: "preset_study_plans" */
  delete_preset_study_plans?: Maybe<Preset_Study_Plans_Mutation_Response>;
  /** delete single row from the table: "preset_study_plans" */
  delete_preset_study_plans_by_pk?: Maybe<Preset_Study_Plans>;
  /** delete data from the table: "preset_study_plans_weekly" */
  delete_preset_study_plans_weekly?: Maybe<Preset_Study_Plans_Weekly_Mutation_Response>;
  /** delete single row from the table: "preset_study_plans_weekly" */
  delete_preset_study_plans_weekly_by_pk?: Maybe<Preset_Study_Plans_Weekly>;
  /** delete data from the table: "preset_study_plans_weekly_format" */
  delete_preset_study_plans_weekly_format?: Maybe<Preset_Study_Plans_Weekly_Format_Mutation_Response>;
  /** delete data from the table: "product" */
  delete_product?: Maybe<Product_Mutation_Response>;
  /** delete single row from the table: "product" */
  delete_product_by_pk?: Maybe<Product>;
  /** delete data from the table: "product_fee" */
  delete_product_fee?: Maybe<Product_Fee_Mutation_Response>;
  /** delete single row from the table: "product_fee" */
  delete_product_fee_by_pk?: Maybe<Product_Fee>;
  /** delete data from the table: "product_grade" */
  delete_product_grade?: Maybe<Product_Grade_Mutation_Response>;
  /** delete single row from the table: "product_grade" */
  delete_product_grade_by_pk?: Maybe<Product_Grade>;
  /** delete data from the table: "product_location" */
  delete_product_location?: Maybe<Product_Location_Mutation_Response>;
  /** delete single row from the table: "product_location" */
  delete_product_location_by_pk?: Maybe<Product_Location>;
  /** delete data from the table: "product_material" */
  delete_product_material?: Maybe<Product_Material_Mutation_Response>;
  /** delete single row from the table: "product_material" */
  delete_product_material_by_pk?: Maybe<Product_Material>;
  /** delete data from the table: "product_package" */
  delete_product_package?: Maybe<Product_Package_Mutation_Response>;
  /** delete single row from the table: "product_package" */
  delete_product_package_by_pk?: Maybe<Product_Package>;
  /** delete data from the table: "product_price" */
  delete_product_price?: Maybe<Product_Price_Mutation_Response>;
  /** delete single row from the table: "product_price" */
  delete_product_price_by_pk?: Maybe<Product_Price>;
  /** delete data from the table: "promotion_rules" */
  delete_promotion_rules?: Maybe<Promotion_Rules_Mutation_Response>;
  /** delete single row from the table: "promotion_rules" */
  delete_promotion_rules_by_pk?: Maybe<Promotion_Rules>;
  /** delete data from the table: "promotions" */
  delete_promotions?: Maybe<Promotions_Mutation_Response>;
  /** delete single row from the table: "promotions" */
  delete_promotions_by_pk?: Maybe<Promotions>;
  /** delete data from the table: "questions" */
  delete_questions?: Maybe<Questions_Mutation_Response>;
  /** delete single row from the table: "questions" */
  delete_questions_by_pk?: Maybe<Questions>;
  /** delete data from the table: "questions_tagged_learning_objectives" */
  delete_questions_tagged_learning_objectives?: Maybe<Questions_Tagged_Learning_Objectives_Mutation_Response>;
  /** delete single row from the table: "questions_tagged_learning_objectives" */
  delete_questions_tagged_learning_objectives_by_pk?: Maybe<Questions_Tagged_Learning_Objectives>;
  /** delete data from the table: "quiz_sets" */
  delete_quiz_sets?: Maybe<Quiz_Sets_Mutation_Response>;
  /** delete single row from the table: "quiz_sets" */
  delete_quiz_sets_by_pk?: Maybe<Quiz_Sets>;
  /** delete data from the table: "quizsets" */
  delete_quizsets?: Maybe<Quizsets_Mutation_Response>;
  /** delete single row from the table: "quizsets" */
  delete_quizsets_by_pk?: Maybe<Quizsets>;
  /** delete data from the table: "quizzes" */
  delete_quizzes?: Maybe<Quizzes_Mutation_Response>;
  /** delete single row from the table: "quizzes" */
  delete_quizzes_by_pk?: Maybe<Quizzes>;
  /** delete data from the table: "scheduler_items" */
  delete_scheduler_items?: Maybe<Scheduler_Items_Mutation_Response>;
  /** delete single row from the table: "scheduler_items" */
  delete_scheduler_items_by_pk?: Maybe<Scheduler_Items>;
  /** delete data from the table: "scheduler_patterns" */
  delete_scheduler_patterns?: Maybe<Scheduler_Patterns_Mutation_Response>;
  /** delete single row from the table: "scheduler_patterns" */
  delete_scheduler_patterns_by_pk?: Maybe<Scheduler_Patterns>;
  /** delete data from the table: "schema_migrations" */
  delete_schema_migrations?: Maybe<Schema_Migrations_Mutation_Response>;
  /** delete single row from the table: "schema_migrations" */
  delete_schema_migrations_by_pk?: Maybe<Schema_Migrations>;
  /** delete data from the table: "school_admins" */
  delete_school_admins?: Maybe<School_Admins_Mutation_Response>;
  /** delete single row from the table: "school_admins" */
  delete_school_admins_by_pk?: Maybe<School_Admins>;
  /** delete data from the table: "school_configs" */
  delete_school_configs?: Maybe<School_Configs_Mutation_Response>;
  /** delete single row from the table: "school_configs" */
  delete_school_configs_by_pk?: Maybe<School_Configs>;
  /** delete data from the table: "schools" */
  delete_schools?: Maybe<Schools_Mutation_Response>;
  /** delete single row from the table: "schools" */
  delete_schools_by_pk?: Maybe<Schools>;
  /** delete data from the table: "shuffled_quiz_sets" */
  delete_shuffled_quiz_sets?: Maybe<Shuffled_Quiz_Sets_Mutation_Response>;
  /** delete single row from the table: "shuffled_quiz_sets" */
  delete_shuffled_quiz_sets_by_pk?: Maybe<Shuffled_Quiz_Sets>;
  /** delete data from the table: "student_assignments" */
  delete_student_assignments?: Maybe<Student_Assignments_Mutation_Response>;
  /** delete single row from the table: "student_assignments" */
  delete_student_assignments_by_pk?: Maybe<Student_Assignments>;
  /** delete data from the table: "student_comments" */
  delete_student_comments?: Maybe<Student_Comments_Mutation_Response>;
  /** delete single row from the table: "student_comments" */
  delete_student_comments_by_pk?: Maybe<Student_Comments>;
  /** delete data from the table: "student_entryexit_records" */
  delete_student_entryexit_records?: Maybe<Student_Entryexit_Records_Mutation_Response>;
  /** delete single row from the table: "student_entryexit_records" */
  delete_student_entryexit_records_by_pk?: Maybe<Student_Entryexit_Records>;
  /** delete data from the table: "student_event_logs" */
  delete_student_event_logs?: Maybe<Student_Event_Logs_Mutation_Response>;
  /** delete single row from the table: "student_event_logs" */
  delete_student_event_logs_by_pk?: Maybe<Student_Event_Logs>;
  /** delete data from the table: "student_learning_time_by_daily" */
  delete_student_learning_time_by_daily?: Maybe<Student_Learning_Time_By_Daily_Mutation_Response>;
  /** delete single row from the table: "student_learning_time_by_daily" */
  delete_student_learning_time_by_daily_by_pk?: Maybe<Student_Learning_Time_By_Daily>;
  /** delete data from the table: "student_packages" */
  delete_student_packages?: Maybe<Student_Packages_Mutation_Response>;
  /** delete single row from the table: "student_packages" */
  delete_student_packages_by_pk?: Maybe<Student_Packages>;
  /** delete data from the table: "student_parents" */
  delete_student_parents?: Maybe<Student_Parents_Mutation_Response>;
  /** delete single row from the table: "student_parents" */
  delete_student_parents_by_pk?: Maybe<Student_Parents>;
  /** delete data from the table: "student_qr" */
  delete_student_qr?: Maybe<Student_Qr_Mutation_Response>;
  /** delete single row from the table: "student_qr" */
  delete_student_qr_by_pk?: Maybe<Student_Qr>;
  /** delete data from the table: "student_questions" */
  delete_student_questions?: Maybe<Student_Questions_Mutation_Response>;
  /** delete single row from the table: "student_questions" */
  delete_student_questions_by_pk?: Maybe<Student_Questions>;
  /** delete data from the table: "student_statistics" */
  delete_student_statistics?: Maybe<Student_Statistics_Mutation_Response>;
  /** delete data from the table: "student_study_plans" */
  delete_student_study_plans?: Maybe<Student_Study_Plans_Mutation_Response>;
  /** delete single row from the table: "student_study_plans" */
  delete_student_study_plans_by_pk?: Maybe<Student_Study_Plans>;
  /** delete data from the table: "student_submission_grades" */
  delete_student_submission_grades?: Maybe<Student_Submission_Grades_Mutation_Response>;
  /** delete single row from the table: "student_submission_grades" */
  delete_student_submission_grades_by_pk?: Maybe<Student_Submission_Grades>;
  /** delete data from the table: "student_submission_scores" */
  delete_student_submission_scores?: Maybe<Student_Submission_Scores_Mutation_Response>;
  /** delete single row from the table: "student_submission_scores" */
  delete_student_submission_scores_by_pk?: Maybe<Student_Submission_Scores>;
  /** delete data from the table: "student_submissions" */
  delete_student_submissions?: Maybe<Student_Submissions_Mutation_Response>;
  /** delete single row from the table: "student_submissions" */
  delete_student_submissions_by_pk?: Maybe<Student_Submissions>;
  /** delete data from the table: "student_subscriptions" */
  delete_student_subscriptions?: Maybe<Student_Subscriptions_Mutation_Response>;
  /** delete single row from the table: "student_subscriptions" */
  delete_student_subscriptions_by_pk?: Maybe<Student_Subscriptions>;
  /** delete data from the table: "students" */
  delete_students?: Maybe<Students_Mutation_Response>;
  /** delete data from the table: "students_assigned_coaches" */
  delete_students_assigned_coaches?: Maybe<Students_Assigned_Coaches_Mutation_Response>;
  /** delete single row from the table: "students" */
  delete_students_by_pk?: Maybe<Students>;
  /** delete data from the table: "students_learning_objectives_completeness" */
  delete_students_learning_objectives_completeness?: Maybe<Students_Learning_Objectives_Completeness_Mutation_Response>;
  /** delete single row from the table: "students_learning_objectives_completeness" */
  delete_students_learning_objectives_completeness_by_pk?: Maybe<Students_Learning_Objectives_Completeness>;
  /** delete data from the table: "students_learning_objectives_records" */
  delete_students_learning_objectives_records?: Maybe<Students_Learning_Objectives_Records_Mutation_Response>;
  /** delete single row from the table: "students_learning_objectives_records" */
  delete_students_learning_objectives_records_by_pk?: Maybe<Students_Learning_Objectives_Records>;
  /** delete data from the table: "students_study_plans_weekly" */
  delete_students_study_plans_weekly?: Maybe<Students_Study_Plans_Weekly_Mutation_Response>;
  /** delete single row from the table: "students_study_plans_weekly" */
  delete_students_study_plans_weekly_by_pk?: Maybe<Students_Study_Plans_Weekly>;
  /** delete data from the table: "students_topics_completeness" */
  delete_students_topics_completeness?: Maybe<Students_Topics_Completeness_Mutation_Response>;
  /** delete data from the table: "students_topics_overdue" */
  delete_students_topics_overdue?: Maybe<Students_Topics_Overdue_Mutation_Response>;
  /** delete single row from the table: "students_topics_overdue" */
  delete_students_topics_overdue_by_pk?: Maybe<Students_Topics_Overdue>;
  /** delete data from the table: "study_plan_items" */
  delete_study_plan_items?: Maybe<Study_Plan_Items_Mutation_Response>;
  /** delete single row from the table: "study_plan_items" */
  delete_study_plan_items_by_pk?: Maybe<Study_Plan_Items>;
  /** delete data from the table: "study_plans" */
  delete_study_plans?: Maybe<Study_Plans_Mutation_Response>;
  /** delete single row from the table: "study_plans" */
  delete_study_plans_by_pk?: Maybe<Study_Plans>;
  /** delete data from the table: "tax" */
  delete_tax?: Maybe<Tax_Mutation_Response>;
  /** delete single row from the table: "tax" */
  delete_tax_by_pk?: Maybe<Tax>;
  /** delete data from the table: "teachers" */
  delete_teachers?: Maybe<Teachers_Mutation_Response>;
  /** delete single row from the table: "teachers" */
  delete_teachers_by_pk?: Maybe<Teachers>;
  /** delete data from the table: "topics" */
  delete_topics?: Maybe<Topics_Mutation_Response>;
  /** delete data from the table: "topics_assignments" */
  delete_topics_assignments?: Maybe<Topics_Assignments_Mutation_Response>;
  /** delete single row from the table: "topics_assignments" */
  delete_topics_assignments_by_pk?: Maybe<Topics_Assignments>;
  /** delete single row from the table: "topics" */
  delete_topics_by_pk?: Maybe<Topics>;
  /** delete data from the table: "topics_learning_objectives" */
  delete_topics_learning_objectives?: Maybe<Topics_Learning_Objectives_Mutation_Response>;
  /** delete single row from the table: "topics_learning_objectives" */
  delete_topics_learning_objectives_by_pk?: Maybe<Topics_Learning_Objectives>;
  /** delete data from the table: "tutors" */
  delete_tutors?: Maybe<Tutors_Mutation_Response>;
  /** delete single row from the table: "tutors" */
  delete_tutors_by_pk?: Maybe<Tutors>;
  /** delete data from the table: "user_access_paths" */
  delete_user_access_paths?: Maybe<User_Access_Paths_Mutation_Response>;
  /** delete single row from the table: "user_access_paths" */
  delete_user_access_paths_by_pk?: Maybe<User_Access_Paths>;
  /** delete data from the table: "user_notifications" */
  delete_user_notifications?: Maybe<User_Notifications_Mutation_Response>;
  /** delete single row from the table: "user_notifications" */
  delete_user_notifications_by_pk?: Maybe<User_Notifications>;
  /** delete data from the table: "users" */
  delete_users?: Maybe<Users_Mutation_Response>;
  /** delete single row from the table: "users" */
  delete_users_by_pk?: Maybe<Users>;
  /** delete data from the table: "users_groups" */
  delete_users_groups?: Maybe<Users_Groups_Mutation_Response>;
  /** delete single row from the table: "users_groups" */
  delete_users_groups_by_pk?: Maybe<Users_Groups>;
  /** delete data from the table: "users_info_notifications" */
  delete_users_info_notifications?: Maybe<Users_Info_Notifications_Mutation_Response>;
  /** delete single row from the table: "users_info_notifications" */
  delete_users_info_notifications_by_pk?: Maybe<Users_Info_Notifications>;
  /** insert data into the table: "academic_years" */
  insert_academic_years?: Maybe<Academic_Years_Mutation_Response>;
  /** insert a single row into the table: "academic_years" */
  insert_academic_years_one?: Maybe<Academic_Years>;
  /** insert data into the table: "activity_logs" */
  insert_activity_logs?: Maybe<Activity_Logs_Mutation_Response>;
  /** insert a single row into the table: "activity_logs" */
  insert_activity_logs_one?: Maybe<Activity_Logs>;
  /** insert data into the table: "apple_users" */
  insert_apple_users?: Maybe<Apple_Users_Mutation_Response>;
  /** insert a single row into the table: "apple_users" */
  insert_apple_users_one?: Maybe<Apple_Users>;
  /** insert data into the table: "assign_study_plan_tasks" */
  insert_assign_study_plan_tasks?: Maybe<Assign_Study_Plan_Tasks_Mutation_Response>;
  /** insert a single row into the table: "assign_study_plan_tasks" */
  insert_assign_study_plan_tasks_one?: Maybe<Assign_Study_Plan_Tasks>;
  /** insert data into the table: "assignment_study_plan_items" */
  insert_assignment_study_plan_items?: Maybe<Assignment_Study_Plan_Items_Mutation_Response>;
  /** insert a single row into the table: "assignment_study_plan_items" */
  insert_assignment_study_plan_items_one?: Maybe<Assignment_Study_Plan_Items>;
  /** insert data into the table: "assignments" */
  insert_assignments?: Maybe<Assignments_Mutation_Response>;
  /** insert a single row into the table: "assignments" */
  insert_assignments_one?: Maybe<Assignments>;
  /** insert data into the table: "bill_item" */
  insert_bill_item?: Maybe<Bill_Item_Mutation_Response>;
  /** insert a single row into the table: "bill_item" */
  insert_bill_item_one?: Maybe<Bill_Item>;
  /** insert data into the table: "billing_histories" */
  insert_billing_histories?: Maybe<Billing_Histories_Mutation_Response>;
  /** insert a single row into the table: "billing_histories" */
  insert_billing_histories_one?: Maybe<Billing_Histories>;
  /** insert data into the table: "billing_schedule" */
  insert_billing_schedule?: Maybe<Billing_Schedule_Mutation_Response>;
  /** insert a single row into the table: "billing_schedule" */
  insert_billing_schedule_one?: Maybe<Billing_Schedule>;
  /** insert data into the table: "billing_schedule_period" */
  insert_billing_schedule_period?: Maybe<Billing_Schedule_Period_Mutation_Response>;
  /** insert a single row into the table: "billing_schedule_period" */
  insert_billing_schedule_period_one?: Maybe<Billing_Schedule_Period>;
  /** insert data into the table: "books" */
  insert_books?: Maybe<Books_Mutation_Response>;
  /** insert data into the table: "books_chapters" */
  insert_books_chapters?: Maybe<Books_Chapters_Mutation_Response>;
  /** insert a single row into the table: "books_chapters" */
  insert_books_chapters_one?: Maybe<Books_Chapters>;
  /** insert a single row into the table: "books" */
  insert_books_one?: Maybe<Books>;
  /** insert data into the table: "brands" */
  insert_brands?: Maybe<Brands_Mutation_Response>;
  /** insert a single row into the table: "brands" */
  insert_brands_one?: Maybe<Brands>;
  /** insert data into the table: "centers" */
  insert_centers?: Maybe<Centers_Mutation_Response>;
  /** insert a single row into the table: "centers" */
  insert_centers_one?: Maybe<Centers>;
  /** insert data into the table: "chapters" */
  insert_chapters?: Maybe<Chapters_Mutation_Response>;
  /** insert a single row into the table: "chapters" */
  insert_chapters_one?: Maybe<Chapters>;
  /** insert data into the table: "cities" */
  insert_cities?: Maybe<Cities_Mutation_Response>;
  /** insert a single row into the table: "cities" */
  insert_cities_one?: Maybe<Cities>;
  /** insert data into the table: "class_members" */
  insert_class_members?: Maybe<Class_Members_Mutation_Response>;
  /** insert a single row into the table: "class_members" */
  insert_class_members_one?: Maybe<Class_Members>;
  /** insert data into the table: "class_preset_study_plans" */
  insert_class_preset_study_plans?: Maybe<Class_Preset_Study_Plans_Mutation_Response>;
  /** insert a single row into the table: "class_preset_study_plans" */
  insert_class_preset_study_plans_one?: Maybe<Class_Preset_Study_Plans>;
  /** insert data into the table: "class_students" */
  insert_class_students?: Maybe<Class_Students_Mutation_Response>;
  /** insert a single row into the table: "class_students" */
  insert_class_students_one?: Maybe<Class_Students>;
  /** insert data into the table: "class_study_plans" */
  insert_class_study_plans?: Maybe<Class_Study_Plans_Mutation_Response>;
  /** insert a single row into the table: "class_study_plans" */
  insert_class_study_plans_one?: Maybe<Class_Study_Plans>;
  /** insert data into the table: "classes" */
  insert_classes?: Maybe<Classes_Mutation_Response>;
  /** insert a single row into the table: "classes" */
  insert_classes_one?: Maybe<Classes>;
  /** insert data into the table: "coaches" */
  insert_coaches?: Maybe<Coaches_Mutation_Response>;
  /** insert a single row into the table: "coaches" */
  insert_coaches_one?: Maybe<Coaches>;
  /** insert data into the table: "cod_orders" */
  insert_cod_orders?: Maybe<Cod_Orders_Mutation_Response>;
  /** insert a single row into the table: "cod_orders" */
  insert_cod_orders_one?: Maybe<Cod_Orders>;
  /** insert data into the table: "configs" */
  insert_configs?: Maybe<Configs_Mutation_Response>;
  /** insert a single row into the table: "configs" */
  insert_configs_one?: Maybe<Configs>;
  /** insert data into the table: "conversion_tasks" */
  insert_conversion_tasks?: Maybe<Conversion_Tasks_Mutation_Response>;
  /** insert a single row into the table: "conversion_tasks" */
  insert_conversion_tasks_one?: Maybe<Conversion_Tasks>;
  /** insert data into the table: "course_access_paths" */
  insert_course_access_paths?: Maybe<Course_Access_Paths_Mutation_Response>;
  /** insert a single row into the table: "course_access_paths" */
  insert_course_access_paths_one?: Maybe<Course_Access_Paths>;
  /** insert data into the table: "course_classes" */
  insert_course_classes?: Maybe<Course_Classes_Mutation_Response>;
  /** insert a single row into the table: "course_classes" */
  insert_course_classes_one?: Maybe<Course_Classes>;
  /** insert data into the table: "course_students" */
  insert_course_students?: Maybe<Course_Students_Mutation_Response>;
  /** insert a single row into the table: "course_students" */
  insert_course_students_one?: Maybe<Course_Students>;
  /** insert data into the table: "course_study_plans" */
  insert_course_study_plans?: Maybe<Course_Study_Plans_Mutation_Response>;
  /** insert a single row into the table: "course_study_plans" */
  insert_course_study_plans_one?: Maybe<Course_Study_Plans>;
  /** insert data into the table: "courses" */
  insert_courses?: Maybe<Courses_Mutation_Response>;
  /** insert data into the table: "courses_academic_years" */
  insert_courses_academic_years?: Maybe<Courses_Academic_Years_Mutation_Response>;
  /** insert a single row into the table: "courses_academic_years" */
  insert_courses_academic_years_one?: Maybe<Courses_Academic_Years>;
  /** insert data into the table: "courses_books" */
  insert_courses_books?: Maybe<Courses_Books_Mutation_Response>;
  /** insert a single row into the table: "courses_books" */
  insert_courses_books_one?: Maybe<Courses_Books>;
  /** insert data into the table: "courses_classes" */
  insert_courses_classes?: Maybe<Courses_Classes_Mutation_Response>;
  /** insert a single row into the table: "courses_classes" */
  insert_courses_classes_one?: Maybe<Courses_Classes>;
  /** insert a single row into the table: "courses" */
  insert_courses_one?: Maybe<Courses>;
  /** insert data into the table: "discount" */
  insert_discount?: Maybe<Discount_Mutation_Response>;
  /** insert a single row into the table: "discount" */
  insert_discount_one?: Maybe<Discount>;
  /** insert data into the table: "districts" */
  insert_districts?: Maybe<Districts_Mutation_Response>;
  /** insert a single row into the table: "districts" */
  insert_districts_one?: Maybe<Districts>;
  /** insert data into the table: "e2e_features" */
  insert_e2e_features?: Maybe<E2e_Features_Mutation_Response>;
  /** insert a single row into the table: "e2e_features" */
  insert_e2e_features_one?: Maybe<E2e_Features>;
  /** insert data into the table: "e2e_instances" */
  insert_e2e_instances?: Maybe<E2e_Instances_Mutation_Response>;
  /** insert a single row into the table: "e2e_instances" */
  insert_e2e_instances_one?: Maybe<E2e_Instances>;
  /** insert data into the table: "e2e_scenarios" */
  insert_e2e_scenarios?: Maybe<E2e_Scenarios_Mutation_Response>;
  /** insert a single row into the table: "e2e_scenarios" */
  insert_e2e_scenarios_one?: Maybe<E2e_Scenarios>;
  /** insert data into the table: "e2e_steps" */
  insert_e2e_steps?: Maybe<E2e_Steps_Mutation_Response>;
  /** insert a single row into the table: "e2e_steps" */
  insert_e2e_steps_one?: Maybe<E2e_Steps>;
  /** insert data into the table: "grade" */
  insert_grade?: Maybe<Grade_Mutation_Response>;
  /** insert a single row into the table: "grade" */
  insert_grade_one?: Maybe<Grade>;
  /** insert data into the table: "groups" */
  insert_groups?: Maybe<Groups_Mutation_Response>;
  /** insert a single row into the table: "groups" */
  insert_groups_one?: Maybe<Groups>;
  /** insert data into the table: "hub_tours" */
  insert_hub_tours?: Maybe<Hub_Tours_Mutation_Response>;
  /** insert a single row into the table: "hub_tours" */
  insert_hub_tours_one?: Maybe<Hub_Tours>;
  /** insert data into the table: "hubs" */
  insert_hubs?: Maybe<Hubs_Mutation_Response>;
  /** insert a single row into the table: "hubs" */
  insert_hubs_one?: Maybe<Hubs>;
  /** insert data into the table: "info_notification_msgs" */
  insert_info_notification_msgs?: Maybe<Info_Notification_Msgs_Mutation_Response>;
  /** insert a single row into the table: "info_notification_msgs" */
  insert_info_notification_msgs_one?: Maybe<Info_Notification_Msgs>;
  /** insert data into the table: "info_notifications" */
  insert_info_notifications?: Maybe<Info_Notifications_Mutation_Response>;
  /** insert a single row into the table: "info_notifications" */
  insert_info_notifications_one?: Maybe<Info_Notifications>;
  /** insert data into the table: "ios_transactions" */
  insert_ios_transactions?: Maybe<Ios_Transactions_Mutation_Response>;
  /** insert a single row into the table: "ios_transactions" */
  insert_ios_transactions_one?: Maybe<Ios_Transactions>;
  /** insert data into the table: "jpref_sync_data_logs" */
  insert_jpref_sync_data_logs?: Maybe<Jpref_Sync_Data_Logs_Mutation_Response>;
  /** insert a single row into the table: "jpref_sync_data_logs" */
  insert_jpref_sync_data_logs_one?: Maybe<Jpref_Sync_Data_Logs>;
  /** insert data into the table: "learning_objectives" */
  insert_learning_objectives?: Maybe<Learning_Objectives_Mutation_Response>;
  /** insert a single row into the table: "learning_objectives" */
  insert_learning_objectives_one?: Maybe<Learning_Objectives>;
  /** insert data into the table: "lesson_groups" */
  insert_lesson_groups?: Maybe<Lesson_Groups_Mutation_Response>;
  /** insert a single row into the table: "lesson_groups" */
  insert_lesson_groups_one?: Maybe<Lesson_Groups>;
  /** insert data into the table: "lesson_members" */
  insert_lesson_members?: Maybe<Lesson_Members_Mutation_Response>;
  /** insert a single row into the table: "lesson_members" */
  insert_lesson_members_one?: Maybe<Lesson_Members>;
  /** insert data into the table: "lesson_report_details" */
  insert_lesson_report_details?: Maybe<Lesson_Report_Details_Mutation_Response>;
  /** insert a single row into the table: "lesson_report_details" */
  insert_lesson_report_details_one?: Maybe<Lesson_Report_Details>;
  /** insert data into the table: "lesson_reports" */
  insert_lesson_reports?: Maybe<Lesson_Reports_Mutation_Response>;
  /** insert a single row into the table: "lesson_reports" */
  insert_lesson_reports_one?: Maybe<Lesson_Reports>;
  /** insert data into the table: "lesson_student_subscription_access_path" */
  insert_lesson_student_subscription_access_path?: Maybe<Lesson_Student_Subscription_Access_Path_Mutation_Response>;
  /** insert a single row into the table: "lesson_student_subscription_access_path" */
  insert_lesson_student_subscription_access_path_one?: Maybe<Lesson_Student_Subscription_Access_Path>;
  /** insert data into the table: "lesson_student_subscriptions" */
  insert_lesson_student_subscriptions?: Maybe<Lesson_Student_Subscriptions_Mutation_Response>;
  /** insert a single row into the table: "lesson_student_subscriptions" */
  insert_lesson_student_subscriptions_one?: Maybe<Lesson_Student_Subscriptions>;
  /** insert data into the table: "lesson_study_plan_items" */
  insert_lesson_study_plan_items?: Maybe<Lesson_Study_Plan_Items_Mutation_Response>;
  /** insert a single row into the table: "lesson_study_plan_items" */
  insert_lesson_study_plan_items_one?: Maybe<Lesson_Study_Plan_Items>;
  /** insert data into the table: "lessons" */
  insert_lessons?: Maybe<Lessons_Mutation_Response>;
  /** insert data into the table: "lessons_courses" */
  insert_lessons_courses?: Maybe<Lessons_Courses_Mutation_Response>;
  /** insert a single row into the table: "lessons_courses" */
  insert_lessons_courses_one?: Maybe<Lessons_Courses>;
  /** insert a single row into the table: "lessons" */
  insert_lessons_one?: Maybe<Lessons>;
  /** insert data into the table: "lessons_teachers" */
  insert_lessons_teachers?: Maybe<Lessons_Teachers_Mutation_Response>;
  /** insert a single row into the table: "lessons_teachers" */
  insert_lessons_teachers_one?: Maybe<Lessons_Teachers>;
  /** insert data into the table: "lo_study_plan_items" */
  insert_lo_study_plan_items?: Maybe<Lo_Study_Plan_Items_Mutation_Response>;
  /** insert a single row into the table: "lo_study_plan_items" */
  insert_lo_study_plan_items_one?: Maybe<Lo_Study_Plan_Items>;
  /** insert data into the table: "locations" */
  insert_locations?: Maybe<Locations_Mutation_Response>;
  /** insert a single row into the table: "locations" */
  insert_locations_one?: Maybe<Locations>;
  /** insert data into the table: "media" */
  insert_media?: Maybe<Media_Mutation_Response>;
  /** insert a single row into the table: "media" */
  insert_media_one?: Maybe<Media>;
  /** insert data into the table: "notification_messages" */
  insert_notification_messages?: Maybe<Notification_Messages_Mutation_Response>;
  /** insert a single row into the table: "notification_messages" */
  insert_notification_messages_one?: Maybe<Notification_Messages>;
  /** insert data into the table: "notification_targets" */
  insert_notification_targets?: Maybe<Notification_Targets_Mutation_Response>;
  /** insert a single row into the table: "notification_targets" */
  insert_notification_targets_one?: Maybe<Notification_Targets>;
  /** insert data into the table: "notifications" */
  insert_notifications?: Maybe<Notifications_Mutation_Response>;
  /** insert a single row into the table: "notifications" */
  insert_notifications_one?: Maybe<Notifications>;
  /** insert data into the table: "order" */
  insert_order?: Maybe<Order_Mutation_Response>;
  /** insert data into the table: "order_action_log" */
  insert_order_action_log?: Maybe<Order_Action_Log_Mutation_Response>;
  /** insert a single row into the table: "order_action_log" */
  insert_order_action_log_one?: Maybe<Order_Action_Log>;
  /** insert data into the table: "order_item" */
  insert_order_item?: Maybe<Order_Item_Mutation_Response>;
  /** insert a single row into the table: "order_item" */
  insert_order_item_one?: Maybe<Order_Item>;
  /** insert a single row into the table: "order" */
  insert_order_one?: Maybe<Order>;
  /** insert data into the table: "organizations" */
  insert_organizations?: Maybe<Organizations_Mutation_Response>;
  /** insert a single row into the table: "organizations" */
  insert_organizations_one?: Maybe<Organizations>;
  /** insert data into the table: "orgs" */
  insert_orgs?: Maybe<Orgs_Mutation_Response>;
  /** insert a single row into the table: "orgs" */
  insert_orgs_one?: Maybe<Orgs>;
  /** insert data into the table: "packages" */
  insert_packages?: Maybe<Packages_Mutation_Response>;
  /** insert a single row into the table: "packages" */
  insert_packages_one?: Maybe<Packages>;
  /** insert data into the table: "parents" */
  insert_parents?: Maybe<Parents_Mutation_Response>;
  /** insert a single row into the table: "parents" */
  insert_parents_one?: Maybe<Parents>;
  /** insert data into the table: "partner_dynamic_form_field_values" */
  insert_partner_dynamic_form_field_values?: Maybe<Partner_Dynamic_Form_Field_Values_Mutation_Response>;
  /** insert a single row into the table: "partner_dynamic_form_field_values" */
  insert_partner_dynamic_form_field_values_one?: Maybe<Partner_Dynamic_Form_Field_Values>;
  /** insert data into the table: "partner_form_configs" */
  insert_partner_form_configs?: Maybe<Partner_Form_Configs_Mutation_Response>;
  /** insert a single row into the table: "partner_form_configs" */
  insert_partner_form_configs_one?: Maybe<Partner_Form_Configs>;
  /** insert data into the table: "plans" */
  insert_plans?: Maybe<Plans_Mutation_Response>;
  /** insert a single row into the table: "plans" */
  insert_plans_one?: Maybe<Plans>;
  /** insert data into the table: "preset_study_plans" */
  insert_preset_study_plans?: Maybe<Preset_Study_Plans_Mutation_Response>;
  /** insert a single row into the table: "preset_study_plans" */
  insert_preset_study_plans_one?: Maybe<Preset_Study_Plans>;
  /** insert data into the table: "preset_study_plans_weekly" */
  insert_preset_study_plans_weekly?: Maybe<Preset_Study_Plans_Weekly_Mutation_Response>;
  /** insert data into the table: "preset_study_plans_weekly_format" */
  insert_preset_study_plans_weekly_format?: Maybe<Preset_Study_Plans_Weekly_Format_Mutation_Response>;
  /** insert a single row into the table: "preset_study_plans_weekly_format" */
  insert_preset_study_plans_weekly_format_one?: Maybe<Preset_Study_Plans_Weekly_Format>;
  /** insert a single row into the table: "preset_study_plans_weekly" */
  insert_preset_study_plans_weekly_one?: Maybe<Preset_Study_Plans_Weekly>;
  /** insert data into the table: "product" */
  insert_product?: Maybe<Product_Mutation_Response>;
  /** insert data into the table: "product_fee" */
  insert_product_fee?: Maybe<Product_Fee_Mutation_Response>;
  /** insert a single row into the table: "product_fee" */
  insert_product_fee_one?: Maybe<Product_Fee>;
  /** insert data into the table: "product_grade" */
  insert_product_grade?: Maybe<Product_Grade_Mutation_Response>;
  /** insert a single row into the table: "product_grade" */
  insert_product_grade_one?: Maybe<Product_Grade>;
  /** insert data into the table: "product_location" */
  insert_product_location?: Maybe<Product_Location_Mutation_Response>;
  /** insert a single row into the table: "product_location" */
  insert_product_location_one?: Maybe<Product_Location>;
  /** insert data into the table: "product_material" */
  insert_product_material?: Maybe<Product_Material_Mutation_Response>;
  /** insert a single row into the table: "product_material" */
  insert_product_material_one?: Maybe<Product_Material>;
  /** insert a single row into the table: "product" */
  insert_product_one?: Maybe<Product>;
  /** insert data into the table: "product_package" */
  insert_product_package?: Maybe<Product_Package_Mutation_Response>;
  /** insert a single row into the table: "product_package" */
  insert_product_package_one?: Maybe<Product_Package>;
  /** insert data into the table: "product_price" */
  insert_product_price?: Maybe<Product_Price_Mutation_Response>;
  /** insert a single row into the table: "product_price" */
  insert_product_price_one?: Maybe<Product_Price>;
  /** insert data into the table: "promotion_rules" */
  insert_promotion_rules?: Maybe<Promotion_Rules_Mutation_Response>;
  /** insert a single row into the table: "promotion_rules" */
  insert_promotion_rules_one?: Maybe<Promotion_Rules>;
  /** insert data into the table: "promotions" */
  insert_promotions?: Maybe<Promotions_Mutation_Response>;
  /** insert a single row into the table: "promotions" */
  insert_promotions_one?: Maybe<Promotions>;
  /** insert data into the table: "questions" */
  insert_questions?: Maybe<Questions_Mutation_Response>;
  /** insert a single row into the table: "questions" */
  insert_questions_one?: Maybe<Questions>;
  /** insert data into the table: "questions_tagged_learning_objectives" */
  insert_questions_tagged_learning_objectives?: Maybe<Questions_Tagged_Learning_Objectives_Mutation_Response>;
  /** insert a single row into the table: "questions_tagged_learning_objectives" */
  insert_questions_tagged_learning_objectives_one?: Maybe<Questions_Tagged_Learning_Objectives>;
  /** insert data into the table: "quiz_sets" */
  insert_quiz_sets?: Maybe<Quiz_Sets_Mutation_Response>;
  /** insert a single row into the table: "quiz_sets" */
  insert_quiz_sets_one?: Maybe<Quiz_Sets>;
  /** insert data into the table: "quizsets" */
  insert_quizsets?: Maybe<Quizsets_Mutation_Response>;
  /** insert a single row into the table: "quizsets" */
  insert_quizsets_one?: Maybe<Quizsets>;
  /** insert data into the table: "quizzes" */
  insert_quizzes?: Maybe<Quizzes_Mutation_Response>;
  /** insert a single row into the table: "quizzes" */
  insert_quizzes_one?: Maybe<Quizzes>;
  /** insert data into the table: "scheduler_items" */
  insert_scheduler_items?: Maybe<Scheduler_Items_Mutation_Response>;
  /** insert a single row into the table: "scheduler_items" */
  insert_scheduler_items_one?: Maybe<Scheduler_Items>;
  /** insert data into the table: "scheduler_patterns" */
  insert_scheduler_patterns?: Maybe<Scheduler_Patterns_Mutation_Response>;
  /** insert a single row into the table: "scheduler_patterns" */
  insert_scheduler_patterns_one?: Maybe<Scheduler_Patterns>;
  /** insert data into the table: "schema_migrations" */
  insert_schema_migrations?: Maybe<Schema_Migrations_Mutation_Response>;
  /** insert a single row into the table: "schema_migrations" */
  insert_schema_migrations_one?: Maybe<Schema_Migrations>;
  /** insert data into the table: "school_admins" */
  insert_school_admins?: Maybe<School_Admins_Mutation_Response>;
  /** insert a single row into the table: "school_admins" */
  insert_school_admins_one?: Maybe<School_Admins>;
  /** insert data into the table: "school_configs" */
  insert_school_configs?: Maybe<School_Configs_Mutation_Response>;
  /** insert a single row into the table: "school_configs" */
  insert_school_configs_one?: Maybe<School_Configs>;
  /** insert data into the table: "schools" */
  insert_schools?: Maybe<Schools_Mutation_Response>;
  /** insert a single row into the table: "schools" */
  insert_schools_one?: Maybe<Schools>;
  /** insert data into the table: "shuffled_quiz_sets" */
  insert_shuffled_quiz_sets?: Maybe<Shuffled_Quiz_Sets_Mutation_Response>;
  /** insert a single row into the table: "shuffled_quiz_sets" */
  insert_shuffled_quiz_sets_one?: Maybe<Shuffled_Quiz_Sets>;
  /** insert data into the table: "student_assignments" */
  insert_student_assignments?: Maybe<Student_Assignments_Mutation_Response>;
  /** insert a single row into the table: "student_assignments" */
  insert_student_assignments_one?: Maybe<Student_Assignments>;
  /** insert data into the table: "student_comments" */
  insert_student_comments?: Maybe<Student_Comments_Mutation_Response>;
  /** insert a single row into the table: "student_comments" */
  insert_student_comments_one?: Maybe<Student_Comments>;
  /** insert data into the table: "student_entryexit_records" */
  insert_student_entryexit_records?: Maybe<Student_Entryexit_Records_Mutation_Response>;
  /** insert a single row into the table: "student_entryexit_records" */
  insert_student_entryexit_records_one?: Maybe<Student_Entryexit_Records>;
  /** insert data into the table: "student_event_logs" */
  insert_student_event_logs?: Maybe<Student_Event_Logs_Mutation_Response>;
  /** insert a single row into the table: "student_event_logs" */
  insert_student_event_logs_one?: Maybe<Student_Event_Logs>;
  /** insert data into the table: "student_learning_time_by_daily" */
  insert_student_learning_time_by_daily?: Maybe<Student_Learning_Time_By_Daily_Mutation_Response>;
  /** insert a single row into the table: "student_learning_time_by_daily" */
  insert_student_learning_time_by_daily_one?: Maybe<Student_Learning_Time_By_Daily>;
  /** insert data into the table: "student_packages" */
  insert_student_packages?: Maybe<Student_Packages_Mutation_Response>;
  /** insert a single row into the table: "student_packages" */
  insert_student_packages_one?: Maybe<Student_Packages>;
  /** insert data into the table: "student_parents" */
  insert_student_parents?: Maybe<Student_Parents_Mutation_Response>;
  /** insert a single row into the table: "student_parents" */
  insert_student_parents_one?: Maybe<Student_Parents>;
  /** insert data into the table: "student_qr" */
  insert_student_qr?: Maybe<Student_Qr_Mutation_Response>;
  /** insert a single row into the table: "student_qr" */
  insert_student_qr_one?: Maybe<Student_Qr>;
  /** insert data into the table: "student_questions" */
  insert_student_questions?: Maybe<Student_Questions_Mutation_Response>;
  /** insert a single row into the table: "student_questions" */
  insert_student_questions_one?: Maybe<Student_Questions>;
  /** insert data into the table: "student_statistics" */
  insert_student_statistics?: Maybe<Student_Statistics_Mutation_Response>;
  /** insert a single row into the table: "student_statistics" */
  insert_student_statistics_one?: Maybe<Student_Statistics>;
  /** insert data into the table: "student_study_plans" */
  insert_student_study_plans?: Maybe<Student_Study_Plans_Mutation_Response>;
  /** insert a single row into the table: "student_study_plans" */
  insert_student_study_plans_one?: Maybe<Student_Study_Plans>;
  /** insert data into the table: "student_submission_grades" */
  insert_student_submission_grades?: Maybe<Student_Submission_Grades_Mutation_Response>;
  /** insert a single row into the table: "student_submission_grades" */
  insert_student_submission_grades_one?: Maybe<Student_Submission_Grades>;
  /** insert data into the table: "student_submission_scores" */
  insert_student_submission_scores?: Maybe<Student_Submission_Scores_Mutation_Response>;
  /** insert a single row into the table: "student_submission_scores" */
  insert_student_submission_scores_one?: Maybe<Student_Submission_Scores>;
  /** insert data into the table: "student_submissions" */
  insert_student_submissions?: Maybe<Student_Submissions_Mutation_Response>;
  /** insert a single row into the table: "student_submissions" */
  insert_student_submissions_one?: Maybe<Student_Submissions>;
  /** insert data into the table: "student_subscriptions" */
  insert_student_subscriptions?: Maybe<Student_Subscriptions_Mutation_Response>;
  /** insert a single row into the table: "student_subscriptions" */
  insert_student_subscriptions_one?: Maybe<Student_Subscriptions>;
  /** insert data into the table: "students" */
  insert_students?: Maybe<Students_Mutation_Response>;
  /** insert data into the table: "students_assigned_coaches" */
  insert_students_assigned_coaches?: Maybe<Students_Assigned_Coaches_Mutation_Response>;
  /** insert a single row into the table: "students_assigned_coaches" */
  insert_students_assigned_coaches_one?: Maybe<Students_Assigned_Coaches>;
  /** insert data into the table: "students_learning_objectives_completeness" */
  insert_students_learning_objectives_completeness?: Maybe<Students_Learning_Objectives_Completeness_Mutation_Response>;
  /** insert a single row into the table: "students_learning_objectives_completeness" */
  insert_students_learning_objectives_completeness_one?: Maybe<Students_Learning_Objectives_Completeness>;
  /** insert data into the table: "students_learning_objectives_records" */
  insert_students_learning_objectives_records?: Maybe<Students_Learning_Objectives_Records_Mutation_Response>;
  /** insert a single row into the table: "students_learning_objectives_records" */
  insert_students_learning_objectives_records_one?: Maybe<Students_Learning_Objectives_Records>;
  /** insert a single row into the table: "students" */
  insert_students_one?: Maybe<Students>;
  /** insert data into the table: "students_study_plans_weekly" */
  insert_students_study_plans_weekly?: Maybe<Students_Study_Plans_Weekly_Mutation_Response>;
  /** insert a single row into the table: "students_study_plans_weekly" */
  insert_students_study_plans_weekly_one?: Maybe<Students_Study_Plans_Weekly>;
  /** insert data into the table: "students_topics_completeness" */
  insert_students_topics_completeness?: Maybe<Students_Topics_Completeness_Mutation_Response>;
  /** insert a single row into the table: "students_topics_completeness" */
  insert_students_topics_completeness_one?: Maybe<Students_Topics_Completeness>;
  /** insert data into the table: "students_topics_overdue" */
  insert_students_topics_overdue?: Maybe<Students_Topics_Overdue_Mutation_Response>;
  /** insert a single row into the table: "students_topics_overdue" */
  insert_students_topics_overdue_one?: Maybe<Students_Topics_Overdue>;
  /** insert data into the table: "study_plan_items" */
  insert_study_plan_items?: Maybe<Study_Plan_Items_Mutation_Response>;
  /** insert a single row into the table: "study_plan_items" */
  insert_study_plan_items_one?: Maybe<Study_Plan_Items>;
  /** insert data into the table: "study_plans" */
  insert_study_plans?: Maybe<Study_Plans_Mutation_Response>;
  /** insert a single row into the table: "study_plans" */
  insert_study_plans_one?: Maybe<Study_Plans>;
  /** insert data into the table: "tax" */
  insert_tax?: Maybe<Tax_Mutation_Response>;
  /** insert a single row into the table: "tax" */
  insert_tax_one?: Maybe<Tax>;
  /** insert data into the table: "teachers" */
  insert_teachers?: Maybe<Teachers_Mutation_Response>;
  /** insert a single row into the table: "teachers" */
  insert_teachers_one?: Maybe<Teachers>;
  /** insert data into the table: "topics" */
  insert_topics?: Maybe<Topics_Mutation_Response>;
  /** insert data into the table: "topics_assignments" */
  insert_topics_assignments?: Maybe<Topics_Assignments_Mutation_Response>;
  /** insert a single row into the table: "topics_assignments" */
  insert_topics_assignments_one?: Maybe<Topics_Assignments>;
  /** insert data into the table: "topics_learning_objectives" */
  insert_topics_learning_objectives?: Maybe<Topics_Learning_Objectives_Mutation_Response>;
  /** insert a single row into the table: "topics_learning_objectives" */
  insert_topics_learning_objectives_one?: Maybe<Topics_Learning_Objectives>;
  /** insert a single row into the table: "topics" */
  insert_topics_one?: Maybe<Topics>;
  /** insert data into the table: "tutors" */
  insert_tutors?: Maybe<Tutors_Mutation_Response>;
  /** insert a single row into the table: "tutors" */
  insert_tutors_one?: Maybe<Tutors>;
  /** insert data into the table: "user_access_paths" */
  insert_user_access_paths?: Maybe<User_Access_Paths_Mutation_Response>;
  /** insert a single row into the table: "user_access_paths" */
  insert_user_access_paths_one?: Maybe<User_Access_Paths>;
  /** insert data into the table: "user_notifications" */
  insert_user_notifications?: Maybe<User_Notifications_Mutation_Response>;
  /** insert a single row into the table: "user_notifications" */
  insert_user_notifications_one?: Maybe<User_Notifications>;
  /** insert data into the table: "users" */
  insert_users?: Maybe<Users_Mutation_Response>;
  /** insert data into the table: "users_groups" */
  insert_users_groups?: Maybe<Users_Groups_Mutation_Response>;
  /** insert a single row into the table: "users_groups" */
  insert_users_groups_one?: Maybe<Users_Groups>;
  /** insert data into the table: "users_info_notifications" */
  insert_users_info_notifications?: Maybe<Users_Info_Notifications_Mutation_Response>;
  /** insert a single row into the table: "users_info_notifications" */
  insert_users_info_notifications_one?: Maybe<Users_Info_Notifications>;
  /** insert a single row into the table: "users" */
  insert_users_one?: Maybe<Users>;
  /** update data of the table: "academic_years" */
  update_academic_years?: Maybe<Academic_Years_Mutation_Response>;
  /** update single row of the table: "academic_years" */
  update_academic_years_by_pk?: Maybe<Academic_Years>;
  /** update data of the table: "activity_logs" */
  update_activity_logs?: Maybe<Activity_Logs_Mutation_Response>;
  /** update single row of the table: "activity_logs" */
  update_activity_logs_by_pk?: Maybe<Activity_Logs>;
  /** update data of the table: "apple_users" */
  update_apple_users?: Maybe<Apple_Users_Mutation_Response>;
  /** update single row of the table: "apple_users" */
  update_apple_users_by_pk?: Maybe<Apple_Users>;
  /** update data of the table: "assign_study_plan_tasks" */
  update_assign_study_plan_tasks?: Maybe<Assign_Study_Plan_Tasks_Mutation_Response>;
  /** update single row of the table: "assign_study_plan_tasks" */
  update_assign_study_plan_tasks_by_pk?: Maybe<Assign_Study_Plan_Tasks>;
  /** update data of the table: "assignment_study_plan_items" */
  update_assignment_study_plan_items?: Maybe<Assignment_Study_Plan_Items_Mutation_Response>;
  /** update single row of the table: "assignment_study_plan_items" */
  update_assignment_study_plan_items_by_pk?: Maybe<Assignment_Study_Plan_Items>;
  /** update data of the table: "assignments" */
  update_assignments?: Maybe<Assignments_Mutation_Response>;
  /** update single row of the table: "assignments" */
  update_assignments_by_pk?: Maybe<Assignments>;
  /** update data of the table: "bill_item" */
  update_bill_item?: Maybe<Bill_Item_Mutation_Response>;
  /** update single row of the table: "bill_item" */
  update_bill_item_by_pk?: Maybe<Bill_Item>;
  /** update data of the table: "billing_histories" */
  update_billing_histories?: Maybe<Billing_Histories_Mutation_Response>;
  /** update single row of the table: "billing_histories" */
  update_billing_histories_by_pk?: Maybe<Billing_Histories>;
  /** update data of the table: "billing_schedule" */
  update_billing_schedule?: Maybe<Billing_Schedule_Mutation_Response>;
  /** update single row of the table: "billing_schedule" */
  update_billing_schedule_by_pk?: Maybe<Billing_Schedule>;
  /** update data of the table: "billing_schedule_period" */
  update_billing_schedule_period?: Maybe<Billing_Schedule_Period_Mutation_Response>;
  /** update single row of the table: "billing_schedule_period" */
  update_billing_schedule_period_by_pk?: Maybe<Billing_Schedule_Period>;
  /** update data of the table: "books" */
  update_books?: Maybe<Books_Mutation_Response>;
  /** update single row of the table: "books" */
  update_books_by_pk?: Maybe<Books>;
  /** update data of the table: "books_chapters" */
  update_books_chapters?: Maybe<Books_Chapters_Mutation_Response>;
  /** update single row of the table: "books_chapters" */
  update_books_chapters_by_pk?: Maybe<Books_Chapters>;
  /** update data of the table: "brands" */
  update_brands?: Maybe<Brands_Mutation_Response>;
  /** update single row of the table: "brands" */
  update_brands_by_pk?: Maybe<Brands>;
  /** update data of the table: "centers" */
  update_centers?: Maybe<Centers_Mutation_Response>;
  /** update single row of the table: "centers" */
  update_centers_by_pk?: Maybe<Centers>;
  /** update data of the table: "chapters" */
  update_chapters?: Maybe<Chapters_Mutation_Response>;
  /** update single row of the table: "chapters" */
  update_chapters_by_pk?: Maybe<Chapters>;
  /** update data of the table: "cities" */
  update_cities?: Maybe<Cities_Mutation_Response>;
  /** update single row of the table: "cities" */
  update_cities_by_pk?: Maybe<Cities>;
  /** update data of the table: "class_members" */
  update_class_members?: Maybe<Class_Members_Mutation_Response>;
  /** update single row of the table: "class_members" */
  update_class_members_by_pk?: Maybe<Class_Members>;
  /** update data of the table: "class_preset_study_plans" */
  update_class_preset_study_plans?: Maybe<Class_Preset_Study_Plans_Mutation_Response>;
  /** update single row of the table: "class_preset_study_plans" */
  update_class_preset_study_plans_by_pk?: Maybe<Class_Preset_Study_Plans>;
  /** update data of the table: "class_students" */
  update_class_students?: Maybe<Class_Students_Mutation_Response>;
  /** update single row of the table: "class_students" */
  update_class_students_by_pk?: Maybe<Class_Students>;
  /** update data of the table: "class_study_plans" */
  update_class_study_plans?: Maybe<Class_Study_Plans_Mutation_Response>;
  /** update single row of the table: "class_study_plans" */
  update_class_study_plans_by_pk?: Maybe<Class_Study_Plans>;
  /** update data of the table: "classes" */
  update_classes?: Maybe<Classes_Mutation_Response>;
  /** update single row of the table: "classes" */
  update_classes_by_pk?: Maybe<Classes>;
  /** update data of the table: "coaches" */
  update_coaches?: Maybe<Coaches_Mutation_Response>;
  /** update single row of the table: "coaches" */
  update_coaches_by_pk?: Maybe<Coaches>;
  /** update data of the table: "cod_orders" */
  update_cod_orders?: Maybe<Cod_Orders_Mutation_Response>;
  /** update single row of the table: "cod_orders" */
  update_cod_orders_by_pk?: Maybe<Cod_Orders>;
  /** update data of the table: "configs" */
  update_configs?: Maybe<Configs_Mutation_Response>;
  /** update single row of the table: "configs" */
  update_configs_by_pk?: Maybe<Configs>;
  /** update data of the table: "conversion_tasks" */
  update_conversion_tasks?: Maybe<Conversion_Tasks_Mutation_Response>;
  /** update single row of the table: "conversion_tasks" */
  update_conversion_tasks_by_pk?: Maybe<Conversion_Tasks>;
  /** update data of the table: "course_access_paths" */
  update_course_access_paths?: Maybe<Course_Access_Paths_Mutation_Response>;
  /** update single row of the table: "course_access_paths" */
  update_course_access_paths_by_pk?: Maybe<Course_Access_Paths>;
  /** update data of the table: "course_classes" */
  update_course_classes?: Maybe<Course_Classes_Mutation_Response>;
  /** update single row of the table: "course_classes" */
  update_course_classes_by_pk?: Maybe<Course_Classes>;
  /** update data of the table: "course_students" */
  update_course_students?: Maybe<Course_Students_Mutation_Response>;
  /** update single row of the table: "course_students" */
  update_course_students_by_pk?: Maybe<Course_Students>;
  /** update data of the table: "course_study_plans" */
  update_course_study_plans?: Maybe<Course_Study_Plans_Mutation_Response>;
  /** update single row of the table: "course_study_plans" */
  update_course_study_plans_by_pk?: Maybe<Course_Study_Plans>;
  /** update data of the table: "courses" */
  update_courses?: Maybe<Courses_Mutation_Response>;
  /** update data of the table: "courses_academic_years" */
  update_courses_academic_years?: Maybe<Courses_Academic_Years_Mutation_Response>;
  /** update single row of the table: "courses_academic_years" */
  update_courses_academic_years_by_pk?: Maybe<Courses_Academic_Years>;
  /** update data of the table: "courses_books" */
  update_courses_books?: Maybe<Courses_Books_Mutation_Response>;
  /** update single row of the table: "courses_books" */
  update_courses_books_by_pk?: Maybe<Courses_Books>;
  /** update single row of the table: "courses" */
  update_courses_by_pk?: Maybe<Courses>;
  /** update data of the table: "courses_classes" */
  update_courses_classes?: Maybe<Courses_Classes_Mutation_Response>;
  /** update single row of the table: "courses_classes" */
  update_courses_classes_by_pk?: Maybe<Courses_Classes>;
  /** update data of the table: "discount" */
  update_discount?: Maybe<Discount_Mutation_Response>;
  /** update single row of the table: "discount" */
  update_discount_by_pk?: Maybe<Discount>;
  /** update data of the table: "districts" */
  update_districts?: Maybe<Districts_Mutation_Response>;
  /** update single row of the table: "districts" */
  update_districts_by_pk?: Maybe<Districts>;
  /** update data of the table: "e2e_features" */
  update_e2e_features?: Maybe<E2e_Features_Mutation_Response>;
  /** update single row of the table: "e2e_features" */
  update_e2e_features_by_pk?: Maybe<E2e_Features>;
  /** update data of the table: "e2e_instances" */
  update_e2e_instances?: Maybe<E2e_Instances_Mutation_Response>;
  /** update single row of the table: "e2e_instances" */
  update_e2e_instances_by_pk?: Maybe<E2e_Instances>;
  /** update data of the table: "e2e_scenarios" */
  update_e2e_scenarios?: Maybe<E2e_Scenarios_Mutation_Response>;
  /** update single row of the table: "e2e_scenarios" */
  update_e2e_scenarios_by_pk?: Maybe<E2e_Scenarios>;
  /** update data of the table: "e2e_steps" */
  update_e2e_steps?: Maybe<E2e_Steps_Mutation_Response>;
  /** update single row of the table: "e2e_steps" */
  update_e2e_steps_by_pk?: Maybe<E2e_Steps>;
  /** update data of the table: "grade" */
  update_grade?: Maybe<Grade_Mutation_Response>;
  /** update single row of the table: "grade" */
  update_grade_by_pk?: Maybe<Grade>;
  /** update data of the table: "groups" */
  update_groups?: Maybe<Groups_Mutation_Response>;
  /** update single row of the table: "groups" */
  update_groups_by_pk?: Maybe<Groups>;
  /** update data of the table: "hub_tours" */
  update_hub_tours?: Maybe<Hub_Tours_Mutation_Response>;
  /** update single row of the table: "hub_tours" */
  update_hub_tours_by_pk?: Maybe<Hub_Tours>;
  /** update data of the table: "hubs" */
  update_hubs?: Maybe<Hubs_Mutation_Response>;
  /** update single row of the table: "hubs" */
  update_hubs_by_pk?: Maybe<Hubs>;
  /** update data of the table: "info_notification_msgs" */
  update_info_notification_msgs?: Maybe<Info_Notification_Msgs_Mutation_Response>;
  /** update single row of the table: "info_notification_msgs" */
  update_info_notification_msgs_by_pk?: Maybe<Info_Notification_Msgs>;
  /** update data of the table: "info_notifications" */
  update_info_notifications?: Maybe<Info_Notifications_Mutation_Response>;
  /** update single row of the table: "info_notifications" */
  update_info_notifications_by_pk?: Maybe<Info_Notifications>;
  /** update data of the table: "ios_transactions" */
  update_ios_transactions?: Maybe<Ios_Transactions_Mutation_Response>;
  /** update single row of the table: "ios_transactions" */
  update_ios_transactions_by_pk?: Maybe<Ios_Transactions>;
  /** update data of the table: "jpref_sync_data_logs" */
  update_jpref_sync_data_logs?: Maybe<Jpref_Sync_Data_Logs_Mutation_Response>;
  /** update single row of the table: "jpref_sync_data_logs" */
  update_jpref_sync_data_logs_by_pk?: Maybe<Jpref_Sync_Data_Logs>;
  /** update data of the table: "learning_objectives" */
  update_learning_objectives?: Maybe<Learning_Objectives_Mutation_Response>;
  /** update single row of the table: "learning_objectives" */
  update_learning_objectives_by_pk?: Maybe<Learning_Objectives>;
  /** update data of the table: "lesson_groups" */
  update_lesson_groups?: Maybe<Lesson_Groups_Mutation_Response>;
  /** update single row of the table: "lesson_groups" */
  update_lesson_groups_by_pk?: Maybe<Lesson_Groups>;
  /** update data of the table: "lesson_members" */
  update_lesson_members?: Maybe<Lesson_Members_Mutation_Response>;
  /** update single row of the table: "lesson_members" */
  update_lesson_members_by_pk?: Maybe<Lesson_Members>;
  /** update data of the table: "lesson_report_details" */
  update_lesson_report_details?: Maybe<Lesson_Report_Details_Mutation_Response>;
  /** update single row of the table: "lesson_report_details" */
  update_lesson_report_details_by_pk?: Maybe<Lesson_Report_Details>;
  /** update data of the table: "lesson_reports" */
  update_lesson_reports?: Maybe<Lesson_Reports_Mutation_Response>;
  /** update single row of the table: "lesson_reports" */
  update_lesson_reports_by_pk?: Maybe<Lesson_Reports>;
  /** update data of the table: "lesson_student_subscription_access_path" */
  update_lesson_student_subscription_access_path?: Maybe<Lesson_Student_Subscription_Access_Path_Mutation_Response>;
  /** update single row of the table: "lesson_student_subscription_access_path" */
  update_lesson_student_subscription_access_path_by_pk?: Maybe<Lesson_Student_Subscription_Access_Path>;
  /** update data of the table: "lesson_student_subscriptions" */
  update_lesson_student_subscriptions?: Maybe<Lesson_Student_Subscriptions_Mutation_Response>;
  /** update single row of the table: "lesson_student_subscriptions" */
  update_lesson_student_subscriptions_by_pk?: Maybe<Lesson_Student_Subscriptions>;
  /** update data of the table: "lesson_study_plan_items" */
  update_lesson_study_plan_items?: Maybe<Lesson_Study_Plan_Items_Mutation_Response>;
  /** update single row of the table: "lesson_study_plan_items" */
  update_lesson_study_plan_items_by_pk?: Maybe<Lesson_Study_Plan_Items>;
  /** update data of the table: "lessons" */
  update_lessons?: Maybe<Lessons_Mutation_Response>;
  /** update single row of the table: "lessons" */
  update_lessons_by_pk?: Maybe<Lessons>;
  /** update data of the table: "lessons_courses" */
  update_lessons_courses?: Maybe<Lessons_Courses_Mutation_Response>;
  /** update single row of the table: "lessons_courses" */
  update_lessons_courses_by_pk?: Maybe<Lessons_Courses>;
  /** update data of the table: "lessons_teachers" */
  update_lessons_teachers?: Maybe<Lessons_Teachers_Mutation_Response>;
  /** update single row of the table: "lessons_teachers" */
  update_lessons_teachers_by_pk?: Maybe<Lessons_Teachers>;
  /** update data of the table: "lo_study_plan_items" */
  update_lo_study_plan_items?: Maybe<Lo_Study_Plan_Items_Mutation_Response>;
  /** update single row of the table: "lo_study_plan_items" */
  update_lo_study_plan_items_by_pk?: Maybe<Lo_Study_Plan_Items>;
  /** update data of the table: "locations" */
  update_locations?: Maybe<Locations_Mutation_Response>;
  /** update single row of the table: "locations" */
  update_locations_by_pk?: Maybe<Locations>;
  /** update data of the table: "media" */
  update_media?: Maybe<Media_Mutation_Response>;
  /** update single row of the table: "media" */
  update_media_by_pk?: Maybe<Media>;
  /** update data of the table: "notification_messages" */
  update_notification_messages?: Maybe<Notification_Messages_Mutation_Response>;
  /** update single row of the table: "notification_messages" */
  update_notification_messages_by_pk?: Maybe<Notification_Messages>;
  /** update data of the table: "notification_targets" */
  update_notification_targets?: Maybe<Notification_Targets_Mutation_Response>;
  /** update single row of the table: "notification_targets" */
  update_notification_targets_by_pk?: Maybe<Notification_Targets>;
  /** update data of the table: "notifications" */
  update_notifications?: Maybe<Notifications_Mutation_Response>;
  /** update single row of the table: "notifications" */
  update_notifications_by_pk?: Maybe<Notifications>;
  /** update data of the table: "order" */
  update_order?: Maybe<Order_Mutation_Response>;
  /** update data of the table: "order_action_log" */
  update_order_action_log?: Maybe<Order_Action_Log_Mutation_Response>;
  /** update single row of the table: "order_action_log" */
  update_order_action_log_by_pk?: Maybe<Order_Action_Log>;
  /** update single row of the table: "order" */
  update_order_by_pk?: Maybe<Order>;
  /** update data of the table: "order_item" */
  update_order_item?: Maybe<Order_Item_Mutation_Response>;
  /** update single row of the table: "order_item" */
  update_order_item_by_pk?: Maybe<Order_Item>;
  /** update data of the table: "organizations" */
  update_organizations?: Maybe<Organizations_Mutation_Response>;
  /** update single row of the table: "organizations" */
  update_organizations_by_pk?: Maybe<Organizations>;
  /** update data of the table: "orgs" */
  update_orgs?: Maybe<Orgs_Mutation_Response>;
  /** update single row of the table: "orgs" */
  update_orgs_by_pk?: Maybe<Orgs>;
  /** update data of the table: "packages" */
  update_packages?: Maybe<Packages_Mutation_Response>;
  /** update single row of the table: "packages" */
  update_packages_by_pk?: Maybe<Packages>;
  /** update data of the table: "parents" */
  update_parents?: Maybe<Parents_Mutation_Response>;
  /** update single row of the table: "parents" */
  update_parents_by_pk?: Maybe<Parents>;
  /** update data of the table: "partner_dynamic_form_field_values" */
  update_partner_dynamic_form_field_values?: Maybe<Partner_Dynamic_Form_Field_Values_Mutation_Response>;
  /** update single row of the table: "partner_dynamic_form_field_values" */
  update_partner_dynamic_form_field_values_by_pk?: Maybe<Partner_Dynamic_Form_Field_Values>;
  /** update data of the table: "partner_form_configs" */
  update_partner_form_configs?: Maybe<Partner_Form_Configs_Mutation_Response>;
  /** update single row of the table: "partner_form_configs" */
  update_partner_form_configs_by_pk?: Maybe<Partner_Form_Configs>;
  /** update data of the table: "plans" */
  update_plans?: Maybe<Plans_Mutation_Response>;
  /** update single row of the table: "plans" */
  update_plans_by_pk?: Maybe<Plans>;
  /** update data of the table: "preset_study_plans" */
  update_preset_study_plans?: Maybe<Preset_Study_Plans_Mutation_Response>;
  /** update single row of the table: "preset_study_plans" */
  update_preset_study_plans_by_pk?: Maybe<Preset_Study_Plans>;
  /** update data of the table: "preset_study_plans_weekly" */
  update_preset_study_plans_weekly?: Maybe<Preset_Study_Plans_Weekly_Mutation_Response>;
  /** update single row of the table: "preset_study_plans_weekly" */
  update_preset_study_plans_weekly_by_pk?: Maybe<Preset_Study_Plans_Weekly>;
  /** update data of the table: "preset_study_plans_weekly_format" */
  update_preset_study_plans_weekly_format?: Maybe<Preset_Study_Plans_Weekly_Format_Mutation_Response>;
  /** update data of the table: "product" */
  update_product?: Maybe<Product_Mutation_Response>;
  /** update single row of the table: "product" */
  update_product_by_pk?: Maybe<Product>;
  /** update data of the table: "product_fee" */
  update_product_fee?: Maybe<Product_Fee_Mutation_Response>;
  /** update single row of the table: "product_fee" */
  update_product_fee_by_pk?: Maybe<Product_Fee>;
  /** update data of the table: "product_grade" */
  update_product_grade?: Maybe<Product_Grade_Mutation_Response>;
  /** update single row of the table: "product_grade" */
  update_product_grade_by_pk?: Maybe<Product_Grade>;
  /** update data of the table: "product_location" */
  update_product_location?: Maybe<Product_Location_Mutation_Response>;
  /** update single row of the table: "product_location" */
  update_product_location_by_pk?: Maybe<Product_Location>;
  /** update data of the table: "product_material" */
  update_product_material?: Maybe<Product_Material_Mutation_Response>;
  /** update single row of the table: "product_material" */
  update_product_material_by_pk?: Maybe<Product_Material>;
  /** update data of the table: "product_package" */
  update_product_package?: Maybe<Product_Package_Mutation_Response>;
  /** update single row of the table: "product_package" */
  update_product_package_by_pk?: Maybe<Product_Package>;
  /** update data of the table: "product_price" */
  update_product_price?: Maybe<Product_Price_Mutation_Response>;
  /** update single row of the table: "product_price" */
  update_product_price_by_pk?: Maybe<Product_Price>;
  /** update data of the table: "promotion_rules" */
  update_promotion_rules?: Maybe<Promotion_Rules_Mutation_Response>;
  /** update single row of the table: "promotion_rules" */
  update_promotion_rules_by_pk?: Maybe<Promotion_Rules>;
  /** update data of the table: "promotions" */
  update_promotions?: Maybe<Promotions_Mutation_Response>;
  /** update single row of the table: "promotions" */
  update_promotions_by_pk?: Maybe<Promotions>;
  /** update data of the table: "questions" */
  update_questions?: Maybe<Questions_Mutation_Response>;
  /** update single row of the table: "questions" */
  update_questions_by_pk?: Maybe<Questions>;
  /** update data of the table: "questions_tagged_learning_objectives" */
  update_questions_tagged_learning_objectives?: Maybe<Questions_Tagged_Learning_Objectives_Mutation_Response>;
  /** update single row of the table: "questions_tagged_learning_objectives" */
  update_questions_tagged_learning_objectives_by_pk?: Maybe<Questions_Tagged_Learning_Objectives>;
  /** update data of the table: "quiz_sets" */
  update_quiz_sets?: Maybe<Quiz_Sets_Mutation_Response>;
  /** update single row of the table: "quiz_sets" */
  update_quiz_sets_by_pk?: Maybe<Quiz_Sets>;
  /** update data of the table: "quizsets" */
  update_quizsets?: Maybe<Quizsets_Mutation_Response>;
  /** update single row of the table: "quizsets" */
  update_quizsets_by_pk?: Maybe<Quizsets>;
  /** update data of the table: "quizzes" */
  update_quizzes?: Maybe<Quizzes_Mutation_Response>;
  /** update single row of the table: "quizzes" */
  update_quizzes_by_pk?: Maybe<Quizzes>;
  /** update data of the table: "scheduler_items" */
  update_scheduler_items?: Maybe<Scheduler_Items_Mutation_Response>;
  /** update single row of the table: "scheduler_items" */
  update_scheduler_items_by_pk?: Maybe<Scheduler_Items>;
  /** update data of the table: "scheduler_patterns" */
  update_scheduler_patterns?: Maybe<Scheduler_Patterns_Mutation_Response>;
  /** update single row of the table: "scheduler_patterns" */
  update_scheduler_patterns_by_pk?: Maybe<Scheduler_Patterns>;
  /** update data of the table: "schema_migrations" */
  update_schema_migrations?: Maybe<Schema_Migrations_Mutation_Response>;
  /** update single row of the table: "schema_migrations" */
  update_schema_migrations_by_pk?: Maybe<Schema_Migrations>;
  /** update data of the table: "school_admins" */
  update_school_admins?: Maybe<School_Admins_Mutation_Response>;
  /** update single row of the table: "school_admins" */
  update_school_admins_by_pk?: Maybe<School_Admins>;
  /** update data of the table: "school_configs" */
  update_school_configs?: Maybe<School_Configs_Mutation_Response>;
  /** update single row of the table: "school_configs" */
  update_school_configs_by_pk?: Maybe<School_Configs>;
  /** update data of the table: "schools" */
  update_schools?: Maybe<Schools_Mutation_Response>;
  /** update single row of the table: "schools" */
  update_schools_by_pk?: Maybe<Schools>;
  /** update data of the table: "shuffled_quiz_sets" */
  update_shuffled_quiz_sets?: Maybe<Shuffled_Quiz_Sets_Mutation_Response>;
  /** update single row of the table: "shuffled_quiz_sets" */
  update_shuffled_quiz_sets_by_pk?: Maybe<Shuffled_Quiz_Sets>;
  /** update data of the table: "student_assignments" */
  update_student_assignments?: Maybe<Student_Assignments_Mutation_Response>;
  /** update single row of the table: "student_assignments" */
  update_student_assignments_by_pk?: Maybe<Student_Assignments>;
  /** update data of the table: "student_comments" */
  update_student_comments?: Maybe<Student_Comments_Mutation_Response>;
  /** update single row of the table: "student_comments" */
  update_student_comments_by_pk?: Maybe<Student_Comments>;
  /** update data of the table: "student_entryexit_records" */
  update_student_entryexit_records?: Maybe<Student_Entryexit_Records_Mutation_Response>;
  /** update single row of the table: "student_entryexit_records" */
  update_student_entryexit_records_by_pk?: Maybe<Student_Entryexit_Records>;
  /** update data of the table: "student_event_logs" */
  update_student_event_logs?: Maybe<Student_Event_Logs_Mutation_Response>;
  /** update single row of the table: "student_event_logs" */
  update_student_event_logs_by_pk?: Maybe<Student_Event_Logs>;
  /** update data of the table: "student_learning_time_by_daily" */
  update_student_learning_time_by_daily?: Maybe<Student_Learning_Time_By_Daily_Mutation_Response>;
  /** update single row of the table: "student_learning_time_by_daily" */
  update_student_learning_time_by_daily_by_pk?: Maybe<Student_Learning_Time_By_Daily>;
  /** update data of the table: "student_packages" */
  update_student_packages?: Maybe<Student_Packages_Mutation_Response>;
  /** update single row of the table: "student_packages" */
  update_student_packages_by_pk?: Maybe<Student_Packages>;
  /** update data of the table: "student_parents" */
  update_student_parents?: Maybe<Student_Parents_Mutation_Response>;
  /** update single row of the table: "student_parents" */
  update_student_parents_by_pk?: Maybe<Student_Parents>;
  /** update data of the table: "student_qr" */
  update_student_qr?: Maybe<Student_Qr_Mutation_Response>;
  /** update single row of the table: "student_qr" */
  update_student_qr_by_pk?: Maybe<Student_Qr>;
  /** update data of the table: "student_questions" */
  update_student_questions?: Maybe<Student_Questions_Mutation_Response>;
  /** update single row of the table: "student_questions" */
  update_student_questions_by_pk?: Maybe<Student_Questions>;
  /** update data of the table: "student_statistics" */
  update_student_statistics?: Maybe<Student_Statistics_Mutation_Response>;
  /** update data of the table: "student_study_plans" */
  update_student_study_plans?: Maybe<Student_Study_Plans_Mutation_Response>;
  /** update single row of the table: "student_study_plans" */
  update_student_study_plans_by_pk?: Maybe<Student_Study_Plans>;
  /** update data of the table: "student_submission_grades" */
  update_student_submission_grades?: Maybe<Student_Submission_Grades_Mutation_Response>;
  /** update single row of the table: "student_submission_grades" */
  update_student_submission_grades_by_pk?: Maybe<Student_Submission_Grades>;
  /** update data of the table: "student_submission_scores" */
  update_student_submission_scores?: Maybe<Student_Submission_Scores_Mutation_Response>;
  /** update single row of the table: "student_submission_scores" */
  update_student_submission_scores_by_pk?: Maybe<Student_Submission_Scores>;
  /** update data of the table: "student_submissions" */
  update_student_submissions?: Maybe<Student_Submissions_Mutation_Response>;
  /** update single row of the table: "student_submissions" */
  update_student_submissions_by_pk?: Maybe<Student_Submissions>;
  /** update data of the table: "student_subscriptions" */
  update_student_subscriptions?: Maybe<Student_Subscriptions_Mutation_Response>;
  /** update single row of the table: "student_subscriptions" */
  update_student_subscriptions_by_pk?: Maybe<Student_Subscriptions>;
  /** update data of the table: "students" */
  update_students?: Maybe<Students_Mutation_Response>;
  /** update data of the table: "students_assigned_coaches" */
  update_students_assigned_coaches?: Maybe<Students_Assigned_Coaches_Mutation_Response>;
  /** update single row of the table: "students" */
  update_students_by_pk?: Maybe<Students>;
  /** update data of the table: "students_learning_objectives_completeness" */
  update_students_learning_objectives_completeness?: Maybe<Students_Learning_Objectives_Completeness_Mutation_Response>;
  /** update single row of the table: "students_learning_objectives_completeness" */
  update_students_learning_objectives_completeness_by_pk?: Maybe<Students_Learning_Objectives_Completeness>;
  /** update data of the table: "students_learning_objectives_records" */
  update_students_learning_objectives_records?: Maybe<Students_Learning_Objectives_Records_Mutation_Response>;
  /** update single row of the table: "students_learning_objectives_records" */
  update_students_learning_objectives_records_by_pk?: Maybe<Students_Learning_Objectives_Records>;
  /** update data of the table: "students_study_plans_weekly" */
  update_students_study_plans_weekly?: Maybe<Students_Study_Plans_Weekly_Mutation_Response>;
  /** update single row of the table: "students_study_plans_weekly" */
  update_students_study_plans_weekly_by_pk?: Maybe<Students_Study_Plans_Weekly>;
  /** update data of the table: "students_topics_completeness" */
  update_students_topics_completeness?: Maybe<Students_Topics_Completeness_Mutation_Response>;
  /** update data of the table: "students_topics_overdue" */
  update_students_topics_overdue?: Maybe<Students_Topics_Overdue_Mutation_Response>;
  /** update single row of the table: "students_topics_overdue" */
  update_students_topics_overdue_by_pk?: Maybe<Students_Topics_Overdue>;
  /** update data of the table: "study_plan_items" */
  update_study_plan_items?: Maybe<Study_Plan_Items_Mutation_Response>;
  /** update single row of the table: "study_plan_items" */
  update_study_plan_items_by_pk?: Maybe<Study_Plan_Items>;
  /** update data of the table: "study_plans" */
  update_study_plans?: Maybe<Study_Plans_Mutation_Response>;
  /** update single row of the table: "study_plans" */
  update_study_plans_by_pk?: Maybe<Study_Plans>;
  /** update data of the table: "tax" */
  update_tax?: Maybe<Tax_Mutation_Response>;
  /** update single row of the table: "tax" */
  update_tax_by_pk?: Maybe<Tax>;
  /** update data of the table: "teachers" */
  update_teachers?: Maybe<Teachers_Mutation_Response>;
  /** update single row of the table: "teachers" */
  update_teachers_by_pk?: Maybe<Teachers>;
  /** update data of the table: "topics" */
  update_topics?: Maybe<Topics_Mutation_Response>;
  /** update data of the table: "topics_assignments" */
  update_topics_assignments?: Maybe<Topics_Assignments_Mutation_Response>;
  /** update single row of the table: "topics_assignments" */
  update_topics_assignments_by_pk?: Maybe<Topics_Assignments>;
  /** update single row of the table: "topics" */
  update_topics_by_pk?: Maybe<Topics>;
  /** update data of the table: "topics_learning_objectives" */
  update_topics_learning_objectives?: Maybe<Topics_Learning_Objectives_Mutation_Response>;
  /** update single row of the table: "topics_learning_objectives" */
  update_topics_learning_objectives_by_pk?: Maybe<Topics_Learning_Objectives>;
  /** update data of the table: "tutors" */
  update_tutors?: Maybe<Tutors_Mutation_Response>;
  /** update single row of the table: "tutors" */
  update_tutors_by_pk?: Maybe<Tutors>;
  /** update data of the table: "user_access_paths" */
  update_user_access_paths?: Maybe<User_Access_Paths_Mutation_Response>;
  /** update single row of the table: "user_access_paths" */
  update_user_access_paths_by_pk?: Maybe<User_Access_Paths>;
  /** update data of the table: "user_notifications" */
  update_user_notifications?: Maybe<User_Notifications_Mutation_Response>;
  /** update single row of the table: "user_notifications" */
  update_user_notifications_by_pk?: Maybe<User_Notifications>;
  /** update data of the table: "users" */
  update_users?: Maybe<Users_Mutation_Response>;
  /** update single row of the table: "users" */
  update_users_by_pk?: Maybe<Users>;
  /** update data of the table: "users_groups" */
  update_users_groups?: Maybe<Users_Groups_Mutation_Response>;
  /** update single row of the table: "users_groups" */
  update_users_groups_by_pk?: Maybe<Users_Groups>;
  /** update data of the table: "users_info_notifications" */
  update_users_info_notifications?: Maybe<Users_Info_Notifications_Mutation_Response>;
  /** update single row of the table: "users_info_notifications" */
  update_users_info_notifications_by_pk?: Maybe<Users_Info_Notifications>;
};


/** mutation root */
export type Mutation_RootDelete_Academic_YearsArgs = {
  where: Academic_Years_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Academic_Years_By_PkArgs = {
  academic_year_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Activity_LogsArgs = {
  where: Activity_Logs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Activity_Logs_By_PkArgs = {
  activity_log_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Apple_UsersArgs = {
  where: Apple_Users_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Apple_Users_By_PkArgs = {
  apple_user_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Assign_Study_Plan_TasksArgs = {
  where: Assign_Study_Plan_Tasks_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Assign_Study_Plan_Tasks_By_PkArgs = {
  id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Assignment_Study_Plan_ItemsArgs = {
  where: Assignment_Study_Plan_Items_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Assignment_Study_Plan_Items_By_PkArgs = {
  assignment_id: Scalars['String'];
  study_plan_item_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_AssignmentsArgs = {
  where: Assignments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Assignments_By_PkArgs = {
  assignment_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Bill_ItemArgs = {
  where: Bill_Item_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Bill_Item_By_PkArgs = {
  bill_item_sequence_number: Scalars['Int'];
  order_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Billing_HistoriesArgs = {
  where: Billing_Histories_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Billing_Histories_By_PkArgs = {
  billing_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Billing_ScheduleArgs = {
  where: Billing_Schedule_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Billing_Schedule_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Billing_Schedule_PeriodArgs = {
  where: Billing_Schedule_Period_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Billing_Schedule_Period_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_BooksArgs = {
  where: Books_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Books_By_PkArgs = {
  book_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Books_ChaptersArgs = {
  where: Books_Chapters_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Books_Chapters_By_PkArgs = {
  book_id: Scalars['String'];
  chapter_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_BrandsArgs = {
  where: Brands_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Brands_By_PkArgs = {
  brand_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_CentersArgs = {
  where: Centers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Centers_By_PkArgs = {
  center_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_ChaptersArgs = {
  where: Chapters_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Chapters_By_PkArgs = {
  chapter_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_CitiesArgs = {
  where: Cities_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Cities_By_PkArgs = {
  city_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Class_MembersArgs = {
  where: Class_Members_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Class_Members_By_PkArgs = {
  class_member_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Class_Preset_Study_PlansArgs = {
  where: Class_Preset_Study_Plans_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Class_Preset_Study_Plans_By_PkArgs = {
  class_preset_study_plan_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Class_StudentsArgs = {
  where: Class_Students_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Class_Students_By_PkArgs = {
  class_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Class_Study_PlansArgs = {
  where: Class_Study_Plans_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Class_Study_Plans_By_PkArgs = {
  class_id: Scalars['Int'];
  study_plan_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_ClassesArgs = {
  where: Classes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Classes_By_PkArgs = {
  class_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_CoachesArgs = {
  where: Coaches_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Coaches_By_PkArgs = {
  coach_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Cod_OrdersArgs = {
  where: Cod_Orders_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Cod_Orders_By_PkArgs = {
  cod_order_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_ConfigsArgs = {
  where: Configs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Configs_By_PkArgs = {
  config_group: Scalars['String'];
  config_key: Scalars['String'];
  country: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Conversion_TasksArgs = {
  where: Conversion_Tasks_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Conversion_Tasks_By_PkArgs = {
  task_uuid: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Course_Access_PathsArgs = {
  where: Course_Access_Paths_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Course_Access_Paths_By_PkArgs = {
  course_id: Scalars['String'];
  location_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Course_ClassesArgs = {
  where: Course_Classes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Course_Classes_By_PkArgs = {
  class_id: Scalars['String'];
  course_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Course_StudentsArgs = {
  where: Course_Students_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Course_Students_By_PkArgs = {
  course_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Course_Study_PlansArgs = {
  where: Course_Study_Plans_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Course_Study_Plans_By_PkArgs = {
  course_id: Scalars['String'];
  study_plan_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_CoursesArgs = {
  where: Courses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Courses_Academic_YearsArgs = {
  where: Courses_Academic_Years_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Courses_Academic_Years_By_PkArgs = {
  academic_year_id: Scalars['String'];
  course_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Courses_BooksArgs = {
  where: Courses_Books_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Courses_Books_By_PkArgs = {
  book_id: Scalars['String'];
  course_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Courses_By_PkArgs = {
  course_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Courses_ClassesArgs = {
  where: Courses_Classes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Courses_Classes_By_PkArgs = {
  class_id: Scalars['Int'];
  course_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_DiscountArgs = {
  where: Discount_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Discount_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_DistrictsArgs = {
  where: Districts_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Districts_By_PkArgs = {
  district_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_E2e_FeaturesArgs = {
  where: E2e_Features_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_E2e_Features_By_PkArgs = {
  feature_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_E2e_InstancesArgs = {
  where: E2e_Instances_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_E2e_Instances_By_PkArgs = {
  instance_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_E2e_ScenariosArgs = {
  where: E2e_Scenarios_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_E2e_Scenarios_By_PkArgs = {
  scenario_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_E2e_StepsArgs = {
  where: E2e_Steps_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_E2e_Steps_By_PkArgs = {
  step_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_GradeArgs = {
  where: Grade_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Grade_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_GroupsArgs = {
  where: Groups_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Groups_By_PkArgs = {
  group_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Hub_ToursArgs = {
  where: Hub_Tours_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Hub_Tours_By_PkArgs = {
  hub_id: Scalars['Int'];
  student_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_HubsArgs = {
  where: Hubs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Hubs_By_PkArgs = {
  hub_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Info_Notification_MsgsArgs = {
  where: Info_Notification_Msgs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Info_Notification_Msgs_By_PkArgs = {
  notification_msg_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Info_NotificationsArgs = {
  where: Info_Notifications_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Info_Notifications_By_PkArgs = {
  notification_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Ios_TransactionsArgs = {
  where: Ios_Transactions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Ios_Transactions_By_PkArgs = {
  ios_transaction_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Jpref_Sync_Data_LogsArgs = {
  where: Jpref_Sync_Data_Logs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Jpref_Sync_Data_Logs_By_PkArgs = {
  jpref_sync_data_log_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Learning_ObjectivesArgs = {
  where: Learning_Objectives_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Learning_Objectives_By_PkArgs = {
  lo_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Lesson_GroupsArgs = {
  where: Lesson_Groups_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Groups_By_PkArgs = {
  course_id: Scalars['String'];
  lesson_group_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Lesson_MembersArgs = {
  where: Lesson_Members_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Members_By_PkArgs = {
  lesson_id: Scalars['String'];
  user_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Report_DetailsArgs = {
  where: Lesson_Report_Details_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Report_Details_By_PkArgs = {
  lesson_report_detail_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Lesson_ReportsArgs = {
  where: Lesson_Reports_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Reports_By_PkArgs = {
  lesson_report_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Student_Subscription_Access_PathArgs = {
  where: Lesson_Student_Subscription_Access_Path_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Student_Subscription_Access_Path_By_PkArgs = {
  location_id: Scalars['String'];
  student_subscription_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Student_SubscriptionsArgs = {
  where: Lesson_Student_Subscriptions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Student_Subscriptions_By_PkArgs = {
  student_subscription_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Study_Plan_ItemsArgs = {
  where: Lesson_Study_Plan_Items_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Study_Plan_Items_By_PkArgs = {
  lesson_id: Scalars['String'];
  study_plan_item_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_LessonsArgs = {
  where: Lessons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lessons_By_PkArgs = {
  lesson_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Lessons_CoursesArgs = {
  where: Lessons_Courses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lessons_Courses_By_PkArgs = {
  course_id: Scalars['String'];
  lesson_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Lessons_TeachersArgs = {
  where: Lessons_Teachers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lessons_Teachers_By_PkArgs = {
  lesson_id: Scalars['String'];
  teacher_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Lo_Study_Plan_ItemsArgs = {
  where: Lo_Study_Plan_Items_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lo_Study_Plan_Items_By_PkArgs = {
  lo_id: Scalars['String'];
  study_plan_item_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_LocationsArgs = {
  where: Locations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Locations_By_PkArgs = {
  location_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_MediaArgs = {
  where: Media_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Media_By_PkArgs = {
  media_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Notification_MessagesArgs = {
  where: Notification_Messages_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Notification_Messages_By_PkArgs = {
  notification_message_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Notification_TargetsArgs = {
  where: Notification_Targets_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Notification_Targets_By_PkArgs = {
  target_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_NotificationsArgs = {
  where: Notifications_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Notifications_By_PkArgs = {
  notification_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_OrderArgs = {
  where: Order_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Order_Action_LogArgs = {
  where: Order_Action_Log_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Order_Action_Log_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Order_By_PkArgs = {
  id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Order_ItemArgs = {
  where: Order_Item_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Order_Item_By_PkArgs = {
  order_id: Scalars['String'];
  product_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_OrganizationsArgs = {
  where: Organizations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Organizations_By_PkArgs = {
  organization_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_OrgsArgs = {
  where: Orgs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Orgs_By_PkArgs = {
  org_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_PackagesArgs = {
  where: Packages_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Packages_By_PkArgs = {
  package_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_ParentsArgs = {
  where: Parents_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Parents_By_PkArgs = {
  parent_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Partner_Dynamic_Form_Field_ValuesArgs = {
  where: Partner_Dynamic_Form_Field_Values_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Partner_Dynamic_Form_Field_Values_By_PkArgs = {
  dynamic_form_field_value_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Partner_Form_ConfigsArgs = {
  where: Partner_Form_Configs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Partner_Form_Configs_By_PkArgs = {
  form_config_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_PlansArgs = {
  where: Plans_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Plans_By_PkArgs = {
  country: Scalars['String'];
  plan_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Preset_Study_PlansArgs = {
  where: Preset_Study_Plans_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Preset_Study_Plans_By_PkArgs = {
  preset_study_plan_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Preset_Study_Plans_WeeklyArgs = {
  where: Preset_Study_Plans_Weekly_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Preset_Study_Plans_Weekly_By_PkArgs = {
  preset_study_plan_weekly_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Preset_Study_Plans_Weekly_FormatArgs = {
  where: Preset_Study_Plans_Weekly_Format_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ProductArgs = {
  where: Product_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Product_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Product_FeeArgs = {
  where: Product_Fee_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Product_Fee_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Product_GradeArgs = {
  where: Product_Grade_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Product_Grade_By_PkArgs = {
  grade_id: Scalars['Int'];
  product_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Product_LocationArgs = {
  where: Product_Location_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Product_Location_By_PkArgs = {
  location_id: Scalars['String'];
  product_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Product_MaterialArgs = {
  where: Product_Material_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Product_Material_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Product_PackageArgs = {
  where: Product_Package_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Product_Package_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Product_PriceArgs = {
  where: Product_Price_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Product_Price_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Promotion_RulesArgs = {
  where: Promotion_Rules_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Promotion_Rules_By_PkArgs = {
  promotion_rule_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_PromotionsArgs = {
  where: Promotions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Promotions_By_PkArgs = {
  promotion_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_QuestionsArgs = {
  where: Questions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Questions_By_PkArgs = {
  question_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Questions_Tagged_Learning_ObjectivesArgs = {
  where: Questions_Tagged_Learning_Objectives_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Questions_Tagged_Learning_Objectives_By_PkArgs = {
  lo_id: Scalars['String'];
  question_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Quiz_SetsArgs = {
  where: Quiz_Sets_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Quiz_Sets_By_PkArgs = {
  quiz_set_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_QuizsetsArgs = {
  where: Quizsets_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Quizsets_By_PkArgs = {
  lo_id: Scalars['String'];
  question_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_QuizzesArgs = {
  where: Quizzes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Quizzes_By_PkArgs = {
  quiz_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Scheduler_ItemsArgs = {
  where: Scheduler_Items_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Scheduler_Items_By_PkArgs = {
  scheduler_item_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Scheduler_PatternsArgs = {
  where: Scheduler_Patterns_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Scheduler_Patterns_By_PkArgs = {
  scheduler_pattern_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Schema_MigrationsArgs = {
  where: Schema_Migrations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Schema_Migrations_By_PkArgs = {
  version: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDelete_School_AdminsArgs = {
  where: School_Admins_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_School_Admins_By_PkArgs = {
  school_admin_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_School_ConfigsArgs = {
  where: School_Configs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_School_Configs_By_PkArgs = {
  school_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_SchoolsArgs = {
  where: Schools_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Schools_By_PkArgs = {
  school_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Shuffled_Quiz_SetsArgs = {
  where: Shuffled_Quiz_Sets_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Shuffled_Quiz_Sets_By_PkArgs = {
  shuffled_quiz_set_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Student_AssignmentsArgs = {
  where: Student_Assignments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Student_Assignments_By_PkArgs = {
  assignment_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Student_CommentsArgs = {
  where: Student_Comments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Student_Comments_By_PkArgs = {
  comment_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Student_Entryexit_RecordsArgs = {
  where: Student_Entryexit_Records_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Student_Entryexit_Records_By_PkArgs = {
  entryexit_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Student_Event_LogsArgs = {
  where: Student_Event_Logs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Student_Event_Logs_By_PkArgs = {
  student_event_log_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Student_Learning_Time_By_DailyArgs = {
  where: Student_Learning_Time_By_Daily_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Student_Learning_Time_By_Daily_By_PkArgs = {
  learning_time_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Student_PackagesArgs = {
  where: Student_Packages_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Student_Packages_By_PkArgs = {
  student_package_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Student_ParentsArgs = {
  where: Student_Parents_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Student_Parents_By_PkArgs = {
  parent_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Student_QrArgs = {
  where: Student_Qr_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Student_Qr_By_PkArgs = {
  qr_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Student_QuestionsArgs = {
  where: Student_Questions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Student_Questions_By_PkArgs = {
  student_question_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Student_StatisticsArgs = {
  where: Student_Statistics_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Student_Study_PlansArgs = {
  where: Student_Study_Plans_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Student_Study_Plans_By_PkArgs = {
  student_id: Scalars['String'];
  study_plan_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Student_Submission_GradesArgs = {
  where: Student_Submission_Grades_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Student_Submission_Grades_By_PkArgs = {
  student_submission_grade_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Student_Submission_ScoresArgs = {
  where: Student_Submission_Scores_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Student_Submission_Scores_By_PkArgs = {
  student_submission_score_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Student_SubmissionsArgs = {
  where: Student_Submissions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Student_Submissions_By_PkArgs = {
  student_submission_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Student_SubscriptionsArgs = {
  where: Student_Subscriptions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Student_Subscriptions_By_PkArgs = {
  student_subscription_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_StudentsArgs = {
  where: Students_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Students_Assigned_CoachesArgs = {
  where: Students_Assigned_Coaches_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Students_By_PkArgs = {
  student_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Students_Learning_Objectives_CompletenessArgs = {
  where: Students_Learning_Objectives_Completeness_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Students_Learning_Objectives_Completeness_By_PkArgs = {
  lo_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Students_Learning_Objectives_RecordsArgs = {
  where: Students_Learning_Objectives_Records_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Students_Learning_Objectives_Records_By_PkArgs = {
  record_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Students_Study_Plans_WeeklyArgs = {
  where: Students_Study_Plans_Weekly_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Students_Study_Plans_Weekly_By_PkArgs = {
  preset_study_plan_weekly_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Students_Topics_CompletenessArgs = {
  where: Students_Topics_Completeness_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Students_Topics_OverdueArgs = {
  where: Students_Topics_Overdue_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Students_Topics_Overdue_By_PkArgs = {
  student_id: Scalars['String'];
  topic_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Study_Plan_ItemsArgs = {
  where: Study_Plan_Items_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Study_Plan_Items_By_PkArgs = {
  study_plan_item_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Study_PlansArgs = {
  where: Study_Plans_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Study_Plans_By_PkArgs = {
  study_plan_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_TaxArgs = {
  where: Tax_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Tax_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_TeachersArgs = {
  where: Teachers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Teachers_By_PkArgs = {
  teacher_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_TopicsArgs = {
  where: Topics_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Topics_AssignmentsArgs = {
  where: Topics_Assignments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Topics_Assignments_By_PkArgs = {
  assignment_id: Scalars['String'];
  topic_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Topics_By_PkArgs = {
  topic_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Topics_Learning_ObjectivesArgs = {
  where: Topics_Learning_Objectives_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Topics_Learning_Objectives_By_PkArgs = {
  lo_id: Scalars['String'];
  topic_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_TutorsArgs = {
  where: Tutors_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Tutors_By_PkArgs = {
  tutor_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_User_Access_PathsArgs = {
  where: User_Access_Paths_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_User_Access_Paths_By_PkArgs = {
  location_id: Scalars['String'];
  user_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_User_NotificationsArgs = {
  where: User_Notifications_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_User_Notifications_By_PkArgs = {
  user_notification_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_UsersArgs = {
  where: Users_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Users_By_PkArgs = {
  user_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Users_GroupsArgs = {
  where: Users_Groups_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Users_Groups_By_PkArgs = {
  group_id: Scalars['String'];
  user_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Users_Info_NotificationsArgs = {
  where: Users_Info_Notifications_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Users_Info_Notifications_By_PkArgs = {
  user_notification_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootInsert_Academic_YearsArgs = {
  objects: Array<Academic_Years_Insert_Input>;
  on_conflict?: Maybe<Academic_Years_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Academic_Years_OneArgs = {
  object: Academic_Years_Insert_Input;
  on_conflict?: Maybe<Academic_Years_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Activity_LogsArgs = {
  objects: Array<Activity_Logs_Insert_Input>;
  on_conflict?: Maybe<Activity_Logs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Activity_Logs_OneArgs = {
  object: Activity_Logs_Insert_Input;
  on_conflict?: Maybe<Activity_Logs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Apple_UsersArgs = {
  objects: Array<Apple_Users_Insert_Input>;
  on_conflict?: Maybe<Apple_Users_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Apple_Users_OneArgs = {
  object: Apple_Users_Insert_Input;
  on_conflict?: Maybe<Apple_Users_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Assign_Study_Plan_TasksArgs = {
  objects: Array<Assign_Study_Plan_Tasks_Insert_Input>;
  on_conflict?: Maybe<Assign_Study_Plan_Tasks_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Assign_Study_Plan_Tasks_OneArgs = {
  object: Assign_Study_Plan_Tasks_Insert_Input;
  on_conflict?: Maybe<Assign_Study_Plan_Tasks_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Assignment_Study_Plan_ItemsArgs = {
  objects: Array<Assignment_Study_Plan_Items_Insert_Input>;
  on_conflict?: Maybe<Assignment_Study_Plan_Items_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Assignment_Study_Plan_Items_OneArgs = {
  object: Assignment_Study_Plan_Items_Insert_Input;
  on_conflict?: Maybe<Assignment_Study_Plan_Items_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_AssignmentsArgs = {
  objects: Array<Assignments_Insert_Input>;
  on_conflict?: Maybe<Assignments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Assignments_OneArgs = {
  object: Assignments_Insert_Input;
  on_conflict?: Maybe<Assignments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Bill_ItemArgs = {
  objects: Array<Bill_Item_Insert_Input>;
  on_conflict?: Maybe<Bill_Item_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Bill_Item_OneArgs = {
  object: Bill_Item_Insert_Input;
  on_conflict?: Maybe<Bill_Item_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Billing_HistoriesArgs = {
  objects: Array<Billing_Histories_Insert_Input>;
  on_conflict?: Maybe<Billing_Histories_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Billing_Histories_OneArgs = {
  object: Billing_Histories_Insert_Input;
  on_conflict?: Maybe<Billing_Histories_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Billing_ScheduleArgs = {
  objects: Array<Billing_Schedule_Insert_Input>;
  on_conflict?: Maybe<Billing_Schedule_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Billing_Schedule_OneArgs = {
  object: Billing_Schedule_Insert_Input;
  on_conflict?: Maybe<Billing_Schedule_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Billing_Schedule_PeriodArgs = {
  objects: Array<Billing_Schedule_Period_Insert_Input>;
  on_conflict?: Maybe<Billing_Schedule_Period_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Billing_Schedule_Period_OneArgs = {
  object: Billing_Schedule_Period_Insert_Input;
  on_conflict?: Maybe<Billing_Schedule_Period_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_BooksArgs = {
  objects: Array<Books_Insert_Input>;
  on_conflict?: Maybe<Books_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Books_ChaptersArgs = {
  objects: Array<Books_Chapters_Insert_Input>;
  on_conflict?: Maybe<Books_Chapters_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Books_Chapters_OneArgs = {
  object: Books_Chapters_Insert_Input;
  on_conflict?: Maybe<Books_Chapters_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Books_OneArgs = {
  object: Books_Insert_Input;
  on_conflict?: Maybe<Books_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_BrandsArgs = {
  objects: Array<Brands_Insert_Input>;
  on_conflict?: Maybe<Brands_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Brands_OneArgs = {
  object: Brands_Insert_Input;
  on_conflict?: Maybe<Brands_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_CentersArgs = {
  objects: Array<Centers_Insert_Input>;
  on_conflict?: Maybe<Centers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Centers_OneArgs = {
  object: Centers_Insert_Input;
  on_conflict?: Maybe<Centers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ChaptersArgs = {
  objects: Array<Chapters_Insert_Input>;
  on_conflict?: Maybe<Chapters_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chapters_OneArgs = {
  object: Chapters_Insert_Input;
  on_conflict?: Maybe<Chapters_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_CitiesArgs = {
  objects: Array<Cities_Insert_Input>;
  on_conflict?: Maybe<Cities_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Cities_OneArgs = {
  object: Cities_Insert_Input;
  on_conflict?: Maybe<Cities_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Class_MembersArgs = {
  objects: Array<Class_Members_Insert_Input>;
  on_conflict?: Maybe<Class_Members_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Class_Members_OneArgs = {
  object: Class_Members_Insert_Input;
  on_conflict?: Maybe<Class_Members_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Class_Preset_Study_PlansArgs = {
  objects: Array<Class_Preset_Study_Plans_Insert_Input>;
  on_conflict?: Maybe<Class_Preset_Study_Plans_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Class_Preset_Study_Plans_OneArgs = {
  object: Class_Preset_Study_Plans_Insert_Input;
  on_conflict?: Maybe<Class_Preset_Study_Plans_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Class_StudentsArgs = {
  objects: Array<Class_Students_Insert_Input>;
  on_conflict?: Maybe<Class_Students_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Class_Students_OneArgs = {
  object: Class_Students_Insert_Input;
  on_conflict?: Maybe<Class_Students_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Class_Study_PlansArgs = {
  objects: Array<Class_Study_Plans_Insert_Input>;
  on_conflict?: Maybe<Class_Study_Plans_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Class_Study_Plans_OneArgs = {
  object: Class_Study_Plans_Insert_Input;
  on_conflict?: Maybe<Class_Study_Plans_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ClassesArgs = {
  objects: Array<Classes_Insert_Input>;
  on_conflict?: Maybe<Classes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Classes_OneArgs = {
  object: Classes_Insert_Input;
  on_conflict?: Maybe<Classes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_CoachesArgs = {
  objects: Array<Coaches_Insert_Input>;
  on_conflict?: Maybe<Coaches_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Coaches_OneArgs = {
  object: Coaches_Insert_Input;
  on_conflict?: Maybe<Coaches_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Cod_OrdersArgs = {
  objects: Array<Cod_Orders_Insert_Input>;
  on_conflict?: Maybe<Cod_Orders_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Cod_Orders_OneArgs = {
  object: Cod_Orders_Insert_Input;
  on_conflict?: Maybe<Cod_Orders_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ConfigsArgs = {
  objects: Array<Configs_Insert_Input>;
  on_conflict?: Maybe<Configs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Configs_OneArgs = {
  object: Configs_Insert_Input;
  on_conflict?: Maybe<Configs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Conversion_TasksArgs = {
  objects: Array<Conversion_Tasks_Insert_Input>;
  on_conflict?: Maybe<Conversion_Tasks_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Conversion_Tasks_OneArgs = {
  object: Conversion_Tasks_Insert_Input;
  on_conflict?: Maybe<Conversion_Tasks_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Course_Access_PathsArgs = {
  objects: Array<Course_Access_Paths_Insert_Input>;
  on_conflict?: Maybe<Course_Access_Paths_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Course_Access_Paths_OneArgs = {
  object: Course_Access_Paths_Insert_Input;
  on_conflict?: Maybe<Course_Access_Paths_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Course_ClassesArgs = {
  objects: Array<Course_Classes_Insert_Input>;
  on_conflict?: Maybe<Course_Classes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Course_Classes_OneArgs = {
  object: Course_Classes_Insert_Input;
  on_conflict?: Maybe<Course_Classes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Course_StudentsArgs = {
  objects: Array<Course_Students_Insert_Input>;
  on_conflict?: Maybe<Course_Students_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Course_Students_OneArgs = {
  object: Course_Students_Insert_Input;
  on_conflict?: Maybe<Course_Students_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Course_Study_PlansArgs = {
  objects: Array<Course_Study_Plans_Insert_Input>;
  on_conflict?: Maybe<Course_Study_Plans_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Course_Study_Plans_OneArgs = {
  object: Course_Study_Plans_Insert_Input;
  on_conflict?: Maybe<Course_Study_Plans_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_CoursesArgs = {
  objects: Array<Courses_Insert_Input>;
  on_conflict?: Maybe<Courses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Courses_Academic_YearsArgs = {
  objects: Array<Courses_Academic_Years_Insert_Input>;
  on_conflict?: Maybe<Courses_Academic_Years_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Courses_Academic_Years_OneArgs = {
  object: Courses_Academic_Years_Insert_Input;
  on_conflict?: Maybe<Courses_Academic_Years_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Courses_BooksArgs = {
  objects: Array<Courses_Books_Insert_Input>;
  on_conflict?: Maybe<Courses_Books_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Courses_Books_OneArgs = {
  object: Courses_Books_Insert_Input;
  on_conflict?: Maybe<Courses_Books_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Courses_ClassesArgs = {
  objects: Array<Courses_Classes_Insert_Input>;
  on_conflict?: Maybe<Courses_Classes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Courses_Classes_OneArgs = {
  object: Courses_Classes_Insert_Input;
  on_conflict?: Maybe<Courses_Classes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Courses_OneArgs = {
  object: Courses_Insert_Input;
  on_conflict?: Maybe<Courses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DiscountArgs = {
  objects: Array<Discount_Insert_Input>;
  on_conflict?: Maybe<Discount_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Discount_OneArgs = {
  object: Discount_Insert_Input;
  on_conflict?: Maybe<Discount_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DistrictsArgs = {
  objects: Array<Districts_Insert_Input>;
  on_conflict?: Maybe<Districts_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Districts_OneArgs = {
  object: Districts_Insert_Input;
  on_conflict?: Maybe<Districts_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_E2e_FeaturesArgs = {
  objects: Array<E2e_Features_Insert_Input>;
  on_conflict?: Maybe<E2e_Features_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_E2e_Features_OneArgs = {
  object: E2e_Features_Insert_Input;
  on_conflict?: Maybe<E2e_Features_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_E2e_InstancesArgs = {
  objects: Array<E2e_Instances_Insert_Input>;
  on_conflict?: Maybe<E2e_Instances_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_E2e_Instances_OneArgs = {
  object: E2e_Instances_Insert_Input;
  on_conflict?: Maybe<E2e_Instances_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_E2e_ScenariosArgs = {
  objects: Array<E2e_Scenarios_Insert_Input>;
  on_conflict?: Maybe<E2e_Scenarios_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_E2e_Scenarios_OneArgs = {
  object: E2e_Scenarios_Insert_Input;
  on_conflict?: Maybe<E2e_Scenarios_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_E2e_StepsArgs = {
  objects: Array<E2e_Steps_Insert_Input>;
  on_conflict?: Maybe<E2e_Steps_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_E2e_Steps_OneArgs = {
  object: E2e_Steps_Insert_Input;
  on_conflict?: Maybe<E2e_Steps_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_GradeArgs = {
  objects: Array<Grade_Insert_Input>;
  on_conflict?: Maybe<Grade_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Grade_OneArgs = {
  object: Grade_Insert_Input;
  on_conflict?: Maybe<Grade_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_GroupsArgs = {
  objects: Array<Groups_Insert_Input>;
  on_conflict?: Maybe<Groups_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Groups_OneArgs = {
  object: Groups_Insert_Input;
  on_conflict?: Maybe<Groups_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Hub_ToursArgs = {
  objects: Array<Hub_Tours_Insert_Input>;
  on_conflict?: Maybe<Hub_Tours_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Hub_Tours_OneArgs = {
  object: Hub_Tours_Insert_Input;
  on_conflict?: Maybe<Hub_Tours_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_HubsArgs = {
  objects: Array<Hubs_Insert_Input>;
  on_conflict?: Maybe<Hubs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Hubs_OneArgs = {
  object: Hubs_Insert_Input;
  on_conflict?: Maybe<Hubs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Info_Notification_MsgsArgs = {
  objects: Array<Info_Notification_Msgs_Insert_Input>;
  on_conflict?: Maybe<Info_Notification_Msgs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Info_Notification_Msgs_OneArgs = {
  object: Info_Notification_Msgs_Insert_Input;
  on_conflict?: Maybe<Info_Notification_Msgs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Info_NotificationsArgs = {
  objects: Array<Info_Notifications_Insert_Input>;
  on_conflict?: Maybe<Info_Notifications_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Info_Notifications_OneArgs = {
  object: Info_Notifications_Insert_Input;
  on_conflict?: Maybe<Info_Notifications_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ios_TransactionsArgs = {
  objects: Array<Ios_Transactions_Insert_Input>;
  on_conflict?: Maybe<Ios_Transactions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ios_Transactions_OneArgs = {
  object: Ios_Transactions_Insert_Input;
  on_conflict?: Maybe<Ios_Transactions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Jpref_Sync_Data_LogsArgs = {
  objects: Array<Jpref_Sync_Data_Logs_Insert_Input>;
  on_conflict?: Maybe<Jpref_Sync_Data_Logs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Jpref_Sync_Data_Logs_OneArgs = {
  object: Jpref_Sync_Data_Logs_Insert_Input;
  on_conflict?: Maybe<Jpref_Sync_Data_Logs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Learning_ObjectivesArgs = {
  objects: Array<Learning_Objectives_Insert_Input>;
  on_conflict?: Maybe<Learning_Objectives_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Learning_Objectives_OneArgs = {
  object: Learning_Objectives_Insert_Input;
  on_conflict?: Maybe<Learning_Objectives_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_GroupsArgs = {
  objects: Array<Lesson_Groups_Insert_Input>;
  on_conflict?: Maybe<Lesson_Groups_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Groups_OneArgs = {
  object: Lesson_Groups_Insert_Input;
  on_conflict?: Maybe<Lesson_Groups_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_MembersArgs = {
  objects: Array<Lesson_Members_Insert_Input>;
  on_conflict?: Maybe<Lesson_Members_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Members_OneArgs = {
  object: Lesson_Members_Insert_Input;
  on_conflict?: Maybe<Lesson_Members_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Report_DetailsArgs = {
  objects: Array<Lesson_Report_Details_Insert_Input>;
  on_conflict?: Maybe<Lesson_Report_Details_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Report_Details_OneArgs = {
  object: Lesson_Report_Details_Insert_Input;
  on_conflict?: Maybe<Lesson_Report_Details_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_ReportsArgs = {
  objects: Array<Lesson_Reports_Insert_Input>;
  on_conflict?: Maybe<Lesson_Reports_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Reports_OneArgs = {
  object: Lesson_Reports_Insert_Input;
  on_conflict?: Maybe<Lesson_Reports_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Student_Subscription_Access_PathArgs = {
  objects: Array<Lesson_Student_Subscription_Access_Path_Insert_Input>;
  on_conflict?: Maybe<Lesson_Student_Subscription_Access_Path_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Student_Subscription_Access_Path_OneArgs = {
  object: Lesson_Student_Subscription_Access_Path_Insert_Input;
  on_conflict?: Maybe<Lesson_Student_Subscription_Access_Path_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Student_SubscriptionsArgs = {
  objects: Array<Lesson_Student_Subscriptions_Insert_Input>;
  on_conflict?: Maybe<Lesson_Student_Subscriptions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Student_Subscriptions_OneArgs = {
  object: Lesson_Student_Subscriptions_Insert_Input;
  on_conflict?: Maybe<Lesson_Student_Subscriptions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Study_Plan_ItemsArgs = {
  objects: Array<Lesson_Study_Plan_Items_Insert_Input>;
  on_conflict?: Maybe<Lesson_Study_Plan_Items_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Study_Plan_Items_OneArgs = {
  object: Lesson_Study_Plan_Items_Insert_Input;
  on_conflict?: Maybe<Lesson_Study_Plan_Items_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_LessonsArgs = {
  objects: Array<Lessons_Insert_Input>;
  on_conflict?: Maybe<Lessons_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lessons_CoursesArgs = {
  objects: Array<Lessons_Courses_Insert_Input>;
  on_conflict?: Maybe<Lessons_Courses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lessons_Courses_OneArgs = {
  object: Lessons_Courses_Insert_Input;
  on_conflict?: Maybe<Lessons_Courses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lessons_OneArgs = {
  object: Lessons_Insert_Input;
  on_conflict?: Maybe<Lessons_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lessons_TeachersArgs = {
  objects: Array<Lessons_Teachers_Insert_Input>;
  on_conflict?: Maybe<Lessons_Teachers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lessons_Teachers_OneArgs = {
  object: Lessons_Teachers_Insert_Input;
  on_conflict?: Maybe<Lessons_Teachers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lo_Study_Plan_ItemsArgs = {
  objects: Array<Lo_Study_Plan_Items_Insert_Input>;
  on_conflict?: Maybe<Lo_Study_Plan_Items_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lo_Study_Plan_Items_OneArgs = {
  object: Lo_Study_Plan_Items_Insert_Input;
  on_conflict?: Maybe<Lo_Study_Plan_Items_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_LocationsArgs = {
  objects: Array<Locations_Insert_Input>;
  on_conflict?: Maybe<Locations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Locations_OneArgs = {
  object: Locations_Insert_Input;
  on_conflict?: Maybe<Locations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_MediaArgs = {
  objects: Array<Media_Insert_Input>;
  on_conflict?: Maybe<Media_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Media_OneArgs = {
  object: Media_Insert_Input;
  on_conflict?: Maybe<Media_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Notification_MessagesArgs = {
  objects: Array<Notification_Messages_Insert_Input>;
  on_conflict?: Maybe<Notification_Messages_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Notification_Messages_OneArgs = {
  object: Notification_Messages_Insert_Input;
  on_conflict?: Maybe<Notification_Messages_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Notification_TargetsArgs = {
  objects: Array<Notification_Targets_Insert_Input>;
  on_conflict?: Maybe<Notification_Targets_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Notification_Targets_OneArgs = {
  object: Notification_Targets_Insert_Input;
  on_conflict?: Maybe<Notification_Targets_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_NotificationsArgs = {
  objects: Array<Notifications_Insert_Input>;
  on_conflict?: Maybe<Notifications_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Notifications_OneArgs = {
  object: Notifications_Insert_Input;
  on_conflict?: Maybe<Notifications_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_OrderArgs = {
  objects: Array<Order_Insert_Input>;
  on_conflict?: Maybe<Order_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Order_Action_LogArgs = {
  objects: Array<Order_Action_Log_Insert_Input>;
  on_conflict?: Maybe<Order_Action_Log_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Order_Action_Log_OneArgs = {
  object: Order_Action_Log_Insert_Input;
  on_conflict?: Maybe<Order_Action_Log_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Order_ItemArgs = {
  objects: Array<Order_Item_Insert_Input>;
  on_conflict?: Maybe<Order_Item_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Order_Item_OneArgs = {
  object: Order_Item_Insert_Input;
  on_conflict?: Maybe<Order_Item_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Order_OneArgs = {
  object: Order_Insert_Input;
  on_conflict?: Maybe<Order_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_OrganizationsArgs = {
  objects: Array<Organizations_Insert_Input>;
  on_conflict?: Maybe<Organizations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Organizations_OneArgs = {
  object: Organizations_Insert_Input;
  on_conflict?: Maybe<Organizations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_OrgsArgs = {
  objects: Array<Orgs_Insert_Input>;
  on_conflict?: Maybe<Orgs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Orgs_OneArgs = {
  object: Orgs_Insert_Input;
  on_conflict?: Maybe<Orgs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_PackagesArgs = {
  objects: Array<Packages_Insert_Input>;
  on_conflict?: Maybe<Packages_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Packages_OneArgs = {
  object: Packages_Insert_Input;
  on_conflict?: Maybe<Packages_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ParentsArgs = {
  objects: Array<Parents_Insert_Input>;
  on_conflict?: Maybe<Parents_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Parents_OneArgs = {
  object: Parents_Insert_Input;
  on_conflict?: Maybe<Parents_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Partner_Dynamic_Form_Field_ValuesArgs = {
  objects: Array<Partner_Dynamic_Form_Field_Values_Insert_Input>;
  on_conflict?: Maybe<Partner_Dynamic_Form_Field_Values_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Partner_Dynamic_Form_Field_Values_OneArgs = {
  object: Partner_Dynamic_Form_Field_Values_Insert_Input;
  on_conflict?: Maybe<Partner_Dynamic_Form_Field_Values_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Partner_Form_ConfigsArgs = {
  objects: Array<Partner_Form_Configs_Insert_Input>;
  on_conflict?: Maybe<Partner_Form_Configs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Partner_Form_Configs_OneArgs = {
  object: Partner_Form_Configs_Insert_Input;
  on_conflict?: Maybe<Partner_Form_Configs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_PlansArgs = {
  objects: Array<Plans_Insert_Input>;
  on_conflict?: Maybe<Plans_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Plans_OneArgs = {
  object: Plans_Insert_Input;
  on_conflict?: Maybe<Plans_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Preset_Study_PlansArgs = {
  objects: Array<Preset_Study_Plans_Insert_Input>;
  on_conflict?: Maybe<Preset_Study_Plans_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Preset_Study_Plans_OneArgs = {
  object: Preset_Study_Plans_Insert_Input;
  on_conflict?: Maybe<Preset_Study_Plans_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Preset_Study_Plans_WeeklyArgs = {
  objects: Array<Preset_Study_Plans_Weekly_Insert_Input>;
  on_conflict?: Maybe<Preset_Study_Plans_Weekly_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Preset_Study_Plans_Weekly_FormatArgs = {
  objects: Array<Preset_Study_Plans_Weekly_Format_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Preset_Study_Plans_Weekly_Format_OneArgs = {
  object: Preset_Study_Plans_Weekly_Format_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_Preset_Study_Plans_Weekly_OneArgs = {
  object: Preset_Study_Plans_Weekly_Insert_Input;
  on_conflict?: Maybe<Preset_Study_Plans_Weekly_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ProductArgs = {
  objects: Array<Product_Insert_Input>;
  on_conflict?: Maybe<Product_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Product_FeeArgs = {
  objects: Array<Product_Fee_Insert_Input>;
  on_conflict?: Maybe<Product_Fee_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Product_Fee_OneArgs = {
  object: Product_Fee_Insert_Input;
  on_conflict?: Maybe<Product_Fee_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Product_GradeArgs = {
  objects: Array<Product_Grade_Insert_Input>;
  on_conflict?: Maybe<Product_Grade_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Product_Grade_OneArgs = {
  object: Product_Grade_Insert_Input;
  on_conflict?: Maybe<Product_Grade_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Product_LocationArgs = {
  objects: Array<Product_Location_Insert_Input>;
  on_conflict?: Maybe<Product_Location_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Product_Location_OneArgs = {
  object: Product_Location_Insert_Input;
  on_conflict?: Maybe<Product_Location_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Product_MaterialArgs = {
  objects: Array<Product_Material_Insert_Input>;
  on_conflict?: Maybe<Product_Material_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Product_Material_OneArgs = {
  object: Product_Material_Insert_Input;
  on_conflict?: Maybe<Product_Material_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Product_OneArgs = {
  object: Product_Insert_Input;
  on_conflict?: Maybe<Product_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Product_PackageArgs = {
  objects: Array<Product_Package_Insert_Input>;
  on_conflict?: Maybe<Product_Package_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Product_Package_OneArgs = {
  object: Product_Package_Insert_Input;
  on_conflict?: Maybe<Product_Package_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Product_PriceArgs = {
  objects: Array<Product_Price_Insert_Input>;
  on_conflict?: Maybe<Product_Price_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Product_Price_OneArgs = {
  object: Product_Price_Insert_Input;
  on_conflict?: Maybe<Product_Price_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Promotion_RulesArgs = {
  objects: Array<Promotion_Rules_Insert_Input>;
  on_conflict?: Maybe<Promotion_Rules_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Promotion_Rules_OneArgs = {
  object: Promotion_Rules_Insert_Input;
  on_conflict?: Maybe<Promotion_Rules_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_PromotionsArgs = {
  objects: Array<Promotions_Insert_Input>;
  on_conflict?: Maybe<Promotions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Promotions_OneArgs = {
  object: Promotions_Insert_Input;
  on_conflict?: Maybe<Promotions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_QuestionsArgs = {
  objects: Array<Questions_Insert_Input>;
  on_conflict?: Maybe<Questions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Questions_OneArgs = {
  object: Questions_Insert_Input;
  on_conflict?: Maybe<Questions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Questions_Tagged_Learning_ObjectivesArgs = {
  objects: Array<Questions_Tagged_Learning_Objectives_Insert_Input>;
  on_conflict?: Maybe<Questions_Tagged_Learning_Objectives_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Questions_Tagged_Learning_Objectives_OneArgs = {
  object: Questions_Tagged_Learning_Objectives_Insert_Input;
  on_conflict?: Maybe<Questions_Tagged_Learning_Objectives_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Quiz_SetsArgs = {
  objects: Array<Quiz_Sets_Insert_Input>;
  on_conflict?: Maybe<Quiz_Sets_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Quiz_Sets_OneArgs = {
  object: Quiz_Sets_Insert_Input;
  on_conflict?: Maybe<Quiz_Sets_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_QuizsetsArgs = {
  objects: Array<Quizsets_Insert_Input>;
  on_conflict?: Maybe<Quizsets_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Quizsets_OneArgs = {
  object: Quizsets_Insert_Input;
  on_conflict?: Maybe<Quizsets_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_QuizzesArgs = {
  objects: Array<Quizzes_Insert_Input>;
  on_conflict?: Maybe<Quizzes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Quizzes_OneArgs = {
  object: Quizzes_Insert_Input;
  on_conflict?: Maybe<Quizzes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Scheduler_ItemsArgs = {
  objects: Array<Scheduler_Items_Insert_Input>;
  on_conflict?: Maybe<Scheduler_Items_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Scheduler_Items_OneArgs = {
  object: Scheduler_Items_Insert_Input;
  on_conflict?: Maybe<Scheduler_Items_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Scheduler_PatternsArgs = {
  objects: Array<Scheduler_Patterns_Insert_Input>;
  on_conflict?: Maybe<Scheduler_Patterns_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Scheduler_Patterns_OneArgs = {
  object: Scheduler_Patterns_Insert_Input;
  on_conflict?: Maybe<Scheduler_Patterns_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Schema_MigrationsArgs = {
  objects: Array<Schema_Migrations_Insert_Input>;
  on_conflict?: Maybe<Schema_Migrations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Schema_Migrations_OneArgs = {
  object: Schema_Migrations_Insert_Input;
  on_conflict?: Maybe<Schema_Migrations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_School_AdminsArgs = {
  objects: Array<School_Admins_Insert_Input>;
  on_conflict?: Maybe<School_Admins_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_School_Admins_OneArgs = {
  object: School_Admins_Insert_Input;
  on_conflict?: Maybe<School_Admins_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_School_ConfigsArgs = {
  objects: Array<School_Configs_Insert_Input>;
  on_conflict?: Maybe<School_Configs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_School_Configs_OneArgs = {
  object: School_Configs_Insert_Input;
  on_conflict?: Maybe<School_Configs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_SchoolsArgs = {
  objects: Array<Schools_Insert_Input>;
  on_conflict?: Maybe<Schools_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Schools_OneArgs = {
  object: Schools_Insert_Input;
  on_conflict?: Maybe<Schools_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Shuffled_Quiz_SetsArgs = {
  objects: Array<Shuffled_Quiz_Sets_Insert_Input>;
  on_conflict?: Maybe<Shuffled_Quiz_Sets_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Shuffled_Quiz_Sets_OneArgs = {
  object: Shuffled_Quiz_Sets_Insert_Input;
  on_conflict?: Maybe<Shuffled_Quiz_Sets_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_AssignmentsArgs = {
  objects: Array<Student_Assignments_Insert_Input>;
  on_conflict?: Maybe<Student_Assignments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Assignments_OneArgs = {
  object: Student_Assignments_Insert_Input;
  on_conflict?: Maybe<Student_Assignments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_CommentsArgs = {
  objects: Array<Student_Comments_Insert_Input>;
  on_conflict?: Maybe<Student_Comments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Comments_OneArgs = {
  object: Student_Comments_Insert_Input;
  on_conflict?: Maybe<Student_Comments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Entryexit_RecordsArgs = {
  objects: Array<Student_Entryexit_Records_Insert_Input>;
  on_conflict?: Maybe<Student_Entryexit_Records_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Entryexit_Records_OneArgs = {
  object: Student_Entryexit_Records_Insert_Input;
  on_conflict?: Maybe<Student_Entryexit_Records_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Event_LogsArgs = {
  objects: Array<Student_Event_Logs_Insert_Input>;
  on_conflict?: Maybe<Student_Event_Logs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Event_Logs_OneArgs = {
  object: Student_Event_Logs_Insert_Input;
  on_conflict?: Maybe<Student_Event_Logs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Learning_Time_By_DailyArgs = {
  objects: Array<Student_Learning_Time_By_Daily_Insert_Input>;
  on_conflict?: Maybe<Student_Learning_Time_By_Daily_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Learning_Time_By_Daily_OneArgs = {
  object: Student_Learning_Time_By_Daily_Insert_Input;
  on_conflict?: Maybe<Student_Learning_Time_By_Daily_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_PackagesArgs = {
  objects: Array<Student_Packages_Insert_Input>;
  on_conflict?: Maybe<Student_Packages_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Packages_OneArgs = {
  object: Student_Packages_Insert_Input;
  on_conflict?: Maybe<Student_Packages_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_ParentsArgs = {
  objects: Array<Student_Parents_Insert_Input>;
  on_conflict?: Maybe<Student_Parents_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Parents_OneArgs = {
  object: Student_Parents_Insert_Input;
  on_conflict?: Maybe<Student_Parents_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_QrArgs = {
  objects: Array<Student_Qr_Insert_Input>;
  on_conflict?: Maybe<Student_Qr_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Qr_OneArgs = {
  object: Student_Qr_Insert_Input;
  on_conflict?: Maybe<Student_Qr_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_QuestionsArgs = {
  objects: Array<Student_Questions_Insert_Input>;
  on_conflict?: Maybe<Student_Questions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Questions_OneArgs = {
  object: Student_Questions_Insert_Input;
  on_conflict?: Maybe<Student_Questions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_StatisticsArgs = {
  objects: Array<Student_Statistics_Insert_Input>;
  on_conflict?: Maybe<Student_Statistics_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Statistics_OneArgs = {
  object: Student_Statistics_Insert_Input;
  on_conflict?: Maybe<Student_Statistics_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Study_PlansArgs = {
  objects: Array<Student_Study_Plans_Insert_Input>;
  on_conflict?: Maybe<Student_Study_Plans_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Study_Plans_OneArgs = {
  object: Student_Study_Plans_Insert_Input;
  on_conflict?: Maybe<Student_Study_Plans_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Submission_GradesArgs = {
  objects: Array<Student_Submission_Grades_Insert_Input>;
  on_conflict?: Maybe<Student_Submission_Grades_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Submission_Grades_OneArgs = {
  object: Student_Submission_Grades_Insert_Input;
  on_conflict?: Maybe<Student_Submission_Grades_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Submission_ScoresArgs = {
  objects: Array<Student_Submission_Scores_Insert_Input>;
  on_conflict?: Maybe<Student_Submission_Scores_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Submission_Scores_OneArgs = {
  object: Student_Submission_Scores_Insert_Input;
  on_conflict?: Maybe<Student_Submission_Scores_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_SubmissionsArgs = {
  objects: Array<Student_Submissions_Insert_Input>;
  on_conflict?: Maybe<Student_Submissions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Submissions_OneArgs = {
  object: Student_Submissions_Insert_Input;
  on_conflict?: Maybe<Student_Submissions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_SubscriptionsArgs = {
  objects: Array<Student_Subscriptions_Insert_Input>;
  on_conflict?: Maybe<Student_Subscriptions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Subscriptions_OneArgs = {
  object: Student_Subscriptions_Insert_Input;
  on_conflict?: Maybe<Student_Subscriptions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_StudentsArgs = {
  objects: Array<Students_Insert_Input>;
  on_conflict?: Maybe<Students_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Students_Assigned_CoachesArgs = {
  objects: Array<Students_Assigned_Coaches_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Students_Assigned_Coaches_OneArgs = {
  object: Students_Assigned_Coaches_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_Students_Learning_Objectives_CompletenessArgs = {
  objects: Array<Students_Learning_Objectives_Completeness_Insert_Input>;
  on_conflict?: Maybe<Students_Learning_Objectives_Completeness_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Students_Learning_Objectives_Completeness_OneArgs = {
  object: Students_Learning_Objectives_Completeness_Insert_Input;
  on_conflict?: Maybe<Students_Learning_Objectives_Completeness_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Students_Learning_Objectives_RecordsArgs = {
  objects: Array<Students_Learning_Objectives_Records_Insert_Input>;
  on_conflict?: Maybe<Students_Learning_Objectives_Records_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Students_Learning_Objectives_Records_OneArgs = {
  object: Students_Learning_Objectives_Records_Insert_Input;
  on_conflict?: Maybe<Students_Learning_Objectives_Records_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Students_OneArgs = {
  object: Students_Insert_Input;
  on_conflict?: Maybe<Students_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Students_Study_Plans_WeeklyArgs = {
  objects: Array<Students_Study_Plans_Weekly_Insert_Input>;
  on_conflict?: Maybe<Students_Study_Plans_Weekly_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Students_Study_Plans_Weekly_OneArgs = {
  object: Students_Study_Plans_Weekly_Insert_Input;
  on_conflict?: Maybe<Students_Study_Plans_Weekly_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Students_Topics_CompletenessArgs = {
  objects: Array<Students_Topics_Completeness_Insert_Input>;
  on_conflict?: Maybe<Students_Topics_Completeness_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Students_Topics_Completeness_OneArgs = {
  object: Students_Topics_Completeness_Insert_Input;
  on_conflict?: Maybe<Students_Topics_Completeness_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Students_Topics_OverdueArgs = {
  objects: Array<Students_Topics_Overdue_Insert_Input>;
  on_conflict?: Maybe<Students_Topics_Overdue_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Students_Topics_Overdue_OneArgs = {
  object: Students_Topics_Overdue_Insert_Input;
  on_conflict?: Maybe<Students_Topics_Overdue_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Study_Plan_ItemsArgs = {
  objects: Array<Study_Plan_Items_Insert_Input>;
  on_conflict?: Maybe<Study_Plan_Items_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Study_Plan_Items_OneArgs = {
  object: Study_Plan_Items_Insert_Input;
  on_conflict?: Maybe<Study_Plan_Items_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Study_PlansArgs = {
  objects: Array<Study_Plans_Insert_Input>;
  on_conflict?: Maybe<Study_Plans_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Study_Plans_OneArgs = {
  object: Study_Plans_Insert_Input;
  on_conflict?: Maybe<Study_Plans_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TaxArgs = {
  objects: Array<Tax_Insert_Input>;
  on_conflict?: Maybe<Tax_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Tax_OneArgs = {
  object: Tax_Insert_Input;
  on_conflict?: Maybe<Tax_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TeachersArgs = {
  objects: Array<Teachers_Insert_Input>;
  on_conflict?: Maybe<Teachers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Teachers_OneArgs = {
  object: Teachers_Insert_Input;
  on_conflict?: Maybe<Teachers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TopicsArgs = {
  objects: Array<Topics_Insert_Input>;
  on_conflict?: Maybe<Topics_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Topics_AssignmentsArgs = {
  objects: Array<Topics_Assignments_Insert_Input>;
  on_conflict?: Maybe<Topics_Assignments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Topics_Assignments_OneArgs = {
  object: Topics_Assignments_Insert_Input;
  on_conflict?: Maybe<Topics_Assignments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Topics_Learning_ObjectivesArgs = {
  objects: Array<Topics_Learning_Objectives_Insert_Input>;
  on_conflict?: Maybe<Topics_Learning_Objectives_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Topics_Learning_Objectives_OneArgs = {
  object: Topics_Learning_Objectives_Insert_Input;
  on_conflict?: Maybe<Topics_Learning_Objectives_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Topics_OneArgs = {
  object: Topics_Insert_Input;
  on_conflict?: Maybe<Topics_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TutorsArgs = {
  objects: Array<Tutors_Insert_Input>;
  on_conflict?: Maybe<Tutors_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Tutors_OneArgs = {
  object: Tutors_Insert_Input;
  on_conflict?: Maybe<Tutors_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_Access_PathsArgs = {
  objects: Array<User_Access_Paths_Insert_Input>;
  on_conflict?: Maybe<User_Access_Paths_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_Access_Paths_OneArgs = {
  object: User_Access_Paths_Insert_Input;
  on_conflict?: Maybe<User_Access_Paths_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_NotificationsArgs = {
  objects: Array<User_Notifications_Insert_Input>;
  on_conflict?: Maybe<User_Notifications_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_Notifications_OneArgs = {
  object: User_Notifications_Insert_Input;
  on_conflict?: Maybe<User_Notifications_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_UsersArgs = {
  objects: Array<Users_Insert_Input>;
  on_conflict?: Maybe<Users_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Users_GroupsArgs = {
  objects: Array<Users_Groups_Insert_Input>;
  on_conflict?: Maybe<Users_Groups_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Users_Groups_OneArgs = {
  object: Users_Groups_Insert_Input;
  on_conflict?: Maybe<Users_Groups_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Users_Info_NotificationsArgs = {
  objects: Array<Users_Info_Notifications_Insert_Input>;
  on_conflict?: Maybe<Users_Info_Notifications_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Users_Info_Notifications_OneArgs = {
  object: Users_Info_Notifications_Insert_Input;
  on_conflict?: Maybe<Users_Info_Notifications_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Users_OneArgs = {
  object: Users_Insert_Input;
  on_conflict?: Maybe<Users_On_Conflict>;
};


/** mutation root */
export type Mutation_RootUpdate_Academic_YearsArgs = {
  _inc?: Maybe<Academic_Years_Inc_Input>;
  _set?: Maybe<Academic_Years_Set_Input>;
  where: Academic_Years_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Academic_Years_By_PkArgs = {
  _inc?: Maybe<Academic_Years_Inc_Input>;
  _set?: Maybe<Academic_Years_Set_Input>;
  pk_columns: Academic_Years_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Activity_LogsArgs = {
  _append?: Maybe<Activity_Logs_Append_Input>;
  _delete_at_path?: Maybe<Activity_Logs_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Activity_Logs_Delete_Elem_Input>;
  _delete_key?: Maybe<Activity_Logs_Delete_Key_Input>;
  _prepend?: Maybe<Activity_Logs_Prepend_Input>;
  _set?: Maybe<Activity_Logs_Set_Input>;
  where: Activity_Logs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Activity_Logs_By_PkArgs = {
  _append?: Maybe<Activity_Logs_Append_Input>;
  _delete_at_path?: Maybe<Activity_Logs_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Activity_Logs_Delete_Elem_Input>;
  _delete_key?: Maybe<Activity_Logs_Delete_Key_Input>;
  _prepend?: Maybe<Activity_Logs_Prepend_Input>;
  _set?: Maybe<Activity_Logs_Set_Input>;
  pk_columns: Activity_Logs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Apple_UsersArgs = {
  _set?: Maybe<Apple_Users_Set_Input>;
  where: Apple_Users_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Apple_Users_By_PkArgs = {
  _set?: Maybe<Apple_Users_Set_Input>;
  pk_columns: Apple_Users_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Assign_Study_Plan_TasksArgs = {
  _set?: Maybe<Assign_Study_Plan_Tasks_Set_Input>;
  where: Assign_Study_Plan_Tasks_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Assign_Study_Plan_Tasks_By_PkArgs = {
  _set?: Maybe<Assign_Study_Plan_Tasks_Set_Input>;
  pk_columns: Assign_Study_Plan_Tasks_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Assignment_Study_Plan_ItemsArgs = {
  _set?: Maybe<Assignment_Study_Plan_Items_Set_Input>;
  where: Assignment_Study_Plan_Items_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Assignment_Study_Plan_Items_By_PkArgs = {
  _set?: Maybe<Assignment_Study_Plan_Items_Set_Input>;
  pk_columns: Assignment_Study_Plan_Items_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_AssignmentsArgs = {
  _append?: Maybe<Assignments_Append_Input>;
  _delete_at_path?: Maybe<Assignments_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Assignments_Delete_Elem_Input>;
  _delete_key?: Maybe<Assignments_Delete_Key_Input>;
  _inc?: Maybe<Assignments_Inc_Input>;
  _prepend?: Maybe<Assignments_Prepend_Input>;
  _set?: Maybe<Assignments_Set_Input>;
  where: Assignments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Assignments_By_PkArgs = {
  _append?: Maybe<Assignments_Append_Input>;
  _delete_at_path?: Maybe<Assignments_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Assignments_Delete_Elem_Input>;
  _delete_key?: Maybe<Assignments_Delete_Key_Input>;
  _inc?: Maybe<Assignments_Inc_Input>;
  _prepend?: Maybe<Assignments_Prepend_Input>;
  _set?: Maybe<Assignments_Set_Input>;
  pk_columns: Assignments_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Bill_ItemArgs = {
  _inc?: Maybe<Bill_Item_Inc_Input>;
  _set?: Maybe<Bill_Item_Set_Input>;
  where: Bill_Item_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Bill_Item_By_PkArgs = {
  _inc?: Maybe<Bill_Item_Inc_Input>;
  _set?: Maybe<Bill_Item_Set_Input>;
  pk_columns: Bill_Item_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Billing_HistoriesArgs = {
  _set?: Maybe<Billing_Histories_Set_Input>;
  where: Billing_Histories_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Billing_Histories_By_PkArgs = {
  _set?: Maybe<Billing_Histories_Set_Input>;
  pk_columns: Billing_Histories_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Billing_ScheduleArgs = {
  _inc?: Maybe<Billing_Schedule_Inc_Input>;
  _set?: Maybe<Billing_Schedule_Set_Input>;
  where: Billing_Schedule_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Billing_Schedule_By_PkArgs = {
  _inc?: Maybe<Billing_Schedule_Inc_Input>;
  _set?: Maybe<Billing_Schedule_Set_Input>;
  pk_columns: Billing_Schedule_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Billing_Schedule_PeriodArgs = {
  _inc?: Maybe<Billing_Schedule_Period_Inc_Input>;
  _set?: Maybe<Billing_Schedule_Period_Set_Input>;
  where: Billing_Schedule_Period_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Billing_Schedule_Period_By_PkArgs = {
  _inc?: Maybe<Billing_Schedule_Period_Inc_Input>;
  _set?: Maybe<Billing_Schedule_Period_Set_Input>;
  pk_columns: Billing_Schedule_Period_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_BooksArgs = {
  _inc?: Maybe<Books_Inc_Input>;
  _set?: Maybe<Books_Set_Input>;
  where: Books_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Books_By_PkArgs = {
  _inc?: Maybe<Books_Inc_Input>;
  _set?: Maybe<Books_Set_Input>;
  pk_columns: Books_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Books_ChaptersArgs = {
  _set?: Maybe<Books_Chapters_Set_Input>;
  where: Books_Chapters_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Books_Chapters_By_PkArgs = {
  _set?: Maybe<Books_Chapters_Set_Input>;
  pk_columns: Books_Chapters_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_BrandsArgs = {
  _set?: Maybe<Brands_Set_Input>;
  where: Brands_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Brands_By_PkArgs = {
  _set?: Maybe<Brands_Set_Input>;
  pk_columns: Brands_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_CentersArgs = {
  _set?: Maybe<Centers_Set_Input>;
  where: Centers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Centers_By_PkArgs = {
  _set?: Maybe<Centers_Set_Input>;
  pk_columns: Centers_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ChaptersArgs = {
  _inc?: Maybe<Chapters_Inc_Input>;
  _set?: Maybe<Chapters_Set_Input>;
  where: Chapters_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Chapters_By_PkArgs = {
  _inc?: Maybe<Chapters_Inc_Input>;
  _set?: Maybe<Chapters_Set_Input>;
  pk_columns: Chapters_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_CitiesArgs = {
  _inc?: Maybe<Cities_Inc_Input>;
  _set?: Maybe<Cities_Set_Input>;
  where: Cities_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Cities_By_PkArgs = {
  _inc?: Maybe<Cities_Inc_Input>;
  _set?: Maybe<Cities_Set_Input>;
  pk_columns: Cities_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Class_MembersArgs = {
  _inc?: Maybe<Class_Members_Inc_Input>;
  _set?: Maybe<Class_Members_Set_Input>;
  where: Class_Members_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Class_Members_By_PkArgs = {
  _inc?: Maybe<Class_Members_Inc_Input>;
  _set?: Maybe<Class_Members_Set_Input>;
  pk_columns: Class_Members_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Class_Preset_Study_PlansArgs = {
  _inc?: Maybe<Class_Preset_Study_Plans_Inc_Input>;
  _set?: Maybe<Class_Preset_Study_Plans_Set_Input>;
  where: Class_Preset_Study_Plans_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Class_Preset_Study_Plans_By_PkArgs = {
  _inc?: Maybe<Class_Preset_Study_Plans_Inc_Input>;
  _set?: Maybe<Class_Preset_Study_Plans_Set_Input>;
  pk_columns: Class_Preset_Study_Plans_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Class_StudentsArgs = {
  _set?: Maybe<Class_Students_Set_Input>;
  where: Class_Students_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Class_Students_By_PkArgs = {
  _set?: Maybe<Class_Students_Set_Input>;
  pk_columns: Class_Students_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Class_Study_PlansArgs = {
  _inc?: Maybe<Class_Study_Plans_Inc_Input>;
  _set?: Maybe<Class_Study_Plans_Set_Input>;
  where: Class_Study_Plans_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Class_Study_Plans_By_PkArgs = {
  _inc?: Maybe<Class_Study_Plans_Inc_Input>;
  _set?: Maybe<Class_Study_Plans_Set_Input>;
  pk_columns: Class_Study_Plans_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ClassesArgs = {
  _inc?: Maybe<Classes_Inc_Input>;
  _set?: Maybe<Classes_Set_Input>;
  where: Classes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Classes_By_PkArgs = {
  _inc?: Maybe<Classes_Inc_Input>;
  _set?: Maybe<Classes_Set_Input>;
  pk_columns: Classes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_CoachesArgs = {
  _set?: Maybe<Coaches_Set_Input>;
  where: Coaches_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Coaches_By_PkArgs = {
  _set?: Maybe<Coaches_Set_Input>;
  pk_columns: Coaches_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Cod_OrdersArgs = {
  _inc?: Maybe<Cod_Orders_Inc_Input>;
  _set?: Maybe<Cod_Orders_Set_Input>;
  where: Cod_Orders_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Cod_Orders_By_PkArgs = {
  _inc?: Maybe<Cod_Orders_Inc_Input>;
  _set?: Maybe<Cod_Orders_Set_Input>;
  pk_columns: Cod_Orders_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ConfigsArgs = {
  _set?: Maybe<Configs_Set_Input>;
  where: Configs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Configs_By_PkArgs = {
  _set?: Maybe<Configs_Set_Input>;
  pk_columns: Configs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Conversion_TasksArgs = {
  _append?: Maybe<Conversion_Tasks_Append_Input>;
  _delete_at_path?: Maybe<Conversion_Tasks_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Conversion_Tasks_Delete_Elem_Input>;
  _delete_key?: Maybe<Conversion_Tasks_Delete_Key_Input>;
  _prepend?: Maybe<Conversion_Tasks_Prepend_Input>;
  _set?: Maybe<Conversion_Tasks_Set_Input>;
  where: Conversion_Tasks_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Conversion_Tasks_By_PkArgs = {
  _append?: Maybe<Conversion_Tasks_Append_Input>;
  _delete_at_path?: Maybe<Conversion_Tasks_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Conversion_Tasks_Delete_Elem_Input>;
  _delete_key?: Maybe<Conversion_Tasks_Delete_Key_Input>;
  _prepend?: Maybe<Conversion_Tasks_Prepend_Input>;
  _set?: Maybe<Conversion_Tasks_Set_Input>;
  pk_columns: Conversion_Tasks_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Course_Access_PathsArgs = {
  _set?: Maybe<Course_Access_Paths_Set_Input>;
  where: Course_Access_Paths_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Course_Access_Paths_By_PkArgs = {
  _set?: Maybe<Course_Access_Paths_Set_Input>;
  pk_columns: Course_Access_Paths_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Course_ClassesArgs = {
  _set?: Maybe<Course_Classes_Set_Input>;
  where: Course_Classes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Course_Classes_By_PkArgs = {
  _set?: Maybe<Course_Classes_Set_Input>;
  pk_columns: Course_Classes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Course_StudentsArgs = {
  _set?: Maybe<Course_Students_Set_Input>;
  where: Course_Students_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Course_Students_By_PkArgs = {
  _set?: Maybe<Course_Students_Set_Input>;
  pk_columns: Course_Students_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Course_Study_PlansArgs = {
  _set?: Maybe<Course_Study_Plans_Set_Input>;
  where: Course_Study_Plans_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Course_Study_Plans_By_PkArgs = {
  _set?: Maybe<Course_Study_Plans_Set_Input>;
  pk_columns: Course_Study_Plans_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_CoursesArgs = {
  _inc?: Maybe<Courses_Inc_Input>;
  _set?: Maybe<Courses_Set_Input>;
  where: Courses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Courses_Academic_YearsArgs = {
  _set?: Maybe<Courses_Academic_Years_Set_Input>;
  where: Courses_Academic_Years_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Courses_Academic_Years_By_PkArgs = {
  _set?: Maybe<Courses_Academic_Years_Set_Input>;
  pk_columns: Courses_Academic_Years_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Courses_BooksArgs = {
  _set?: Maybe<Courses_Books_Set_Input>;
  where: Courses_Books_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Courses_Books_By_PkArgs = {
  _set?: Maybe<Courses_Books_Set_Input>;
  pk_columns: Courses_Books_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Courses_By_PkArgs = {
  _inc?: Maybe<Courses_Inc_Input>;
  _set?: Maybe<Courses_Set_Input>;
  pk_columns: Courses_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Courses_ClassesArgs = {
  _inc?: Maybe<Courses_Classes_Inc_Input>;
  _set?: Maybe<Courses_Classes_Set_Input>;
  where: Courses_Classes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Courses_Classes_By_PkArgs = {
  _inc?: Maybe<Courses_Classes_Inc_Input>;
  _set?: Maybe<Courses_Classes_Set_Input>;
  pk_columns: Courses_Classes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_DiscountArgs = {
  _inc?: Maybe<Discount_Inc_Input>;
  _set?: Maybe<Discount_Set_Input>;
  where: Discount_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Discount_By_PkArgs = {
  _inc?: Maybe<Discount_Inc_Input>;
  _set?: Maybe<Discount_Set_Input>;
  pk_columns: Discount_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_DistrictsArgs = {
  _inc?: Maybe<Districts_Inc_Input>;
  _set?: Maybe<Districts_Set_Input>;
  where: Districts_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Districts_By_PkArgs = {
  _inc?: Maybe<Districts_Inc_Input>;
  _set?: Maybe<Districts_Set_Input>;
  pk_columns: Districts_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_E2e_FeaturesArgs = {
  _append?: Maybe<E2e_Features_Append_Input>;
  _delete_at_path?: Maybe<E2e_Features_Delete_At_Path_Input>;
  _delete_elem?: Maybe<E2e_Features_Delete_Elem_Input>;
  _delete_key?: Maybe<E2e_Features_Delete_Key_Input>;
  _inc?: Maybe<E2e_Features_Inc_Input>;
  _prepend?: Maybe<E2e_Features_Prepend_Input>;
  _set?: Maybe<E2e_Features_Set_Input>;
  where: E2e_Features_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_E2e_Features_By_PkArgs = {
  _append?: Maybe<E2e_Features_Append_Input>;
  _delete_at_path?: Maybe<E2e_Features_Delete_At_Path_Input>;
  _delete_elem?: Maybe<E2e_Features_Delete_Elem_Input>;
  _delete_key?: Maybe<E2e_Features_Delete_Key_Input>;
  _inc?: Maybe<E2e_Features_Inc_Input>;
  _prepend?: Maybe<E2e_Features_Prepend_Input>;
  _set?: Maybe<E2e_Features_Set_Input>;
  pk_columns: E2e_Features_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_E2e_InstancesArgs = {
  _append?: Maybe<E2e_Instances_Append_Input>;
  _delete_at_path?: Maybe<E2e_Instances_Delete_At_Path_Input>;
  _delete_elem?: Maybe<E2e_Instances_Delete_Elem_Input>;
  _delete_key?: Maybe<E2e_Instances_Delete_Key_Input>;
  _inc?: Maybe<E2e_Instances_Inc_Input>;
  _prepend?: Maybe<E2e_Instances_Prepend_Input>;
  _set?: Maybe<E2e_Instances_Set_Input>;
  where: E2e_Instances_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_E2e_Instances_By_PkArgs = {
  _append?: Maybe<E2e_Instances_Append_Input>;
  _delete_at_path?: Maybe<E2e_Instances_Delete_At_Path_Input>;
  _delete_elem?: Maybe<E2e_Instances_Delete_Elem_Input>;
  _delete_key?: Maybe<E2e_Instances_Delete_Key_Input>;
  _inc?: Maybe<E2e_Instances_Inc_Input>;
  _prepend?: Maybe<E2e_Instances_Prepend_Input>;
  _set?: Maybe<E2e_Instances_Set_Input>;
  pk_columns: E2e_Instances_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_E2e_ScenariosArgs = {
  _append?: Maybe<E2e_Scenarios_Append_Input>;
  _delete_at_path?: Maybe<E2e_Scenarios_Delete_At_Path_Input>;
  _delete_elem?: Maybe<E2e_Scenarios_Delete_Elem_Input>;
  _delete_key?: Maybe<E2e_Scenarios_Delete_Key_Input>;
  _prepend?: Maybe<E2e_Scenarios_Prepend_Input>;
  _set?: Maybe<E2e_Scenarios_Set_Input>;
  where: E2e_Scenarios_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_E2e_Scenarios_By_PkArgs = {
  _append?: Maybe<E2e_Scenarios_Append_Input>;
  _delete_at_path?: Maybe<E2e_Scenarios_Delete_At_Path_Input>;
  _delete_elem?: Maybe<E2e_Scenarios_Delete_Elem_Input>;
  _delete_key?: Maybe<E2e_Scenarios_Delete_Key_Input>;
  _prepend?: Maybe<E2e_Scenarios_Prepend_Input>;
  _set?: Maybe<E2e_Scenarios_Set_Input>;
  pk_columns: E2e_Scenarios_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_E2e_StepsArgs = {
  _append?: Maybe<E2e_Steps_Append_Input>;
  _delete_at_path?: Maybe<E2e_Steps_Delete_At_Path_Input>;
  _delete_elem?: Maybe<E2e_Steps_Delete_Elem_Input>;
  _delete_key?: Maybe<E2e_Steps_Delete_Key_Input>;
  _inc?: Maybe<E2e_Steps_Inc_Input>;
  _prepend?: Maybe<E2e_Steps_Prepend_Input>;
  _set?: Maybe<E2e_Steps_Set_Input>;
  where: E2e_Steps_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_E2e_Steps_By_PkArgs = {
  _append?: Maybe<E2e_Steps_Append_Input>;
  _delete_at_path?: Maybe<E2e_Steps_Delete_At_Path_Input>;
  _delete_elem?: Maybe<E2e_Steps_Delete_Elem_Input>;
  _delete_key?: Maybe<E2e_Steps_Delete_Key_Input>;
  _inc?: Maybe<E2e_Steps_Inc_Input>;
  _prepend?: Maybe<E2e_Steps_Prepend_Input>;
  _set?: Maybe<E2e_Steps_Set_Input>;
  pk_columns: E2e_Steps_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_GradeArgs = {
  _inc?: Maybe<Grade_Inc_Input>;
  _set?: Maybe<Grade_Set_Input>;
  where: Grade_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Grade_By_PkArgs = {
  _inc?: Maybe<Grade_Inc_Input>;
  _set?: Maybe<Grade_Set_Input>;
  pk_columns: Grade_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_GroupsArgs = {
  _append?: Maybe<Groups_Append_Input>;
  _delete_at_path?: Maybe<Groups_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Groups_Delete_Elem_Input>;
  _delete_key?: Maybe<Groups_Delete_Key_Input>;
  _prepend?: Maybe<Groups_Prepend_Input>;
  _set?: Maybe<Groups_Set_Input>;
  where: Groups_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Groups_By_PkArgs = {
  _append?: Maybe<Groups_Append_Input>;
  _delete_at_path?: Maybe<Groups_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Groups_Delete_Elem_Input>;
  _delete_key?: Maybe<Groups_Delete_Key_Input>;
  _prepend?: Maybe<Groups_Prepend_Input>;
  _set?: Maybe<Groups_Set_Input>;
  pk_columns: Groups_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Hub_ToursArgs = {
  _inc?: Maybe<Hub_Tours_Inc_Input>;
  _set?: Maybe<Hub_Tours_Set_Input>;
  where: Hub_Tours_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Hub_Tours_By_PkArgs = {
  _inc?: Maybe<Hub_Tours_Inc_Input>;
  _set?: Maybe<Hub_Tours_Set_Input>;
  pk_columns: Hub_Tours_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_HubsArgs = {
  _append?: Maybe<Hubs_Append_Input>;
  _delete_at_path?: Maybe<Hubs_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Hubs_Delete_Elem_Input>;
  _delete_key?: Maybe<Hubs_Delete_Key_Input>;
  _inc?: Maybe<Hubs_Inc_Input>;
  _prepend?: Maybe<Hubs_Prepend_Input>;
  _set?: Maybe<Hubs_Set_Input>;
  where: Hubs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Hubs_By_PkArgs = {
  _append?: Maybe<Hubs_Append_Input>;
  _delete_at_path?: Maybe<Hubs_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Hubs_Delete_Elem_Input>;
  _delete_key?: Maybe<Hubs_Delete_Key_Input>;
  _inc?: Maybe<Hubs_Inc_Input>;
  _prepend?: Maybe<Hubs_Prepend_Input>;
  _set?: Maybe<Hubs_Set_Input>;
  pk_columns: Hubs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Info_Notification_MsgsArgs = {
  _append?: Maybe<Info_Notification_Msgs_Append_Input>;
  _delete_at_path?: Maybe<Info_Notification_Msgs_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Info_Notification_Msgs_Delete_Elem_Input>;
  _delete_key?: Maybe<Info_Notification_Msgs_Delete_Key_Input>;
  _prepend?: Maybe<Info_Notification_Msgs_Prepend_Input>;
  _set?: Maybe<Info_Notification_Msgs_Set_Input>;
  where: Info_Notification_Msgs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Info_Notification_Msgs_By_PkArgs = {
  _append?: Maybe<Info_Notification_Msgs_Append_Input>;
  _delete_at_path?: Maybe<Info_Notification_Msgs_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Info_Notification_Msgs_Delete_Elem_Input>;
  _delete_key?: Maybe<Info_Notification_Msgs_Delete_Key_Input>;
  _prepend?: Maybe<Info_Notification_Msgs_Prepend_Input>;
  _set?: Maybe<Info_Notification_Msgs_Set_Input>;
  pk_columns: Info_Notification_Msgs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Info_NotificationsArgs = {
  _append?: Maybe<Info_Notifications_Append_Input>;
  _delete_at_path?: Maybe<Info_Notifications_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Info_Notifications_Delete_Elem_Input>;
  _delete_key?: Maybe<Info_Notifications_Delete_Key_Input>;
  _inc?: Maybe<Info_Notifications_Inc_Input>;
  _prepend?: Maybe<Info_Notifications_Prepend_Input>;
  _set?: Maybe<Info_Notifications_Set_Input>;
  where: Info_Notifications_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Info_Notifications_By_PkArgs = {
  _append?: Maybe<Info_Notifications_Append_Input>;
  _delete_at_path?: Maybe<Info_Notifications_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Info_Notifications_Delete_Elem_Input>;
  _delete_key?: Maybe<Info_Notifications_Delete_Key_Input>;
  _inc?: Maybe<Info_Notifications_Inc_Input>;
  _prepend?: Maybe<Info_Notifications_Prepend_Input>;
  _set?: Maybe<Info_Notifications_Set_Input>;
  pk_columns: Info_Notifications_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Ios_TransactionsArgs = {
  _set?: Maybe<Ios_Transactions_Set_Input>;
  where: Ios_Transactions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Ios_Transactions_By_PkArgs = {
  _set?: Maybe<Ios_Transactions_Set_Input>;
  pk_columns: Ios_Transactions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Jpref_Sync_Data_LogsArgs = {
  _append?: Maybe<Jpref_Sync_Data_Logs_Append_Input>;
  _delete_at_path?: Maybe<Jpref_Sync_Data_Logs_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Jpref_Sync_Data_Logs_Delete_Elem_Input>;
  _delete_key?: Maybe<Jpref_Sync_Data_Logs_Delete_Key_Input>;
  _prepend?: Maybe<Jpref_Sync_Data_Logs_Prepend_Input>;
  _set?: Maybe<Jpref_Sync_Data_Logs_Set_Input>;
  where: Jpref_Sync_Data_Logs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Jpref_Sync_Data_Logs_By_PkArgs = {
  _append?: Maybe<Jpref_Sync_Data_Logs_Append_Input>;
  _delete_at_path?: Maybe<Jpref_Sync_Data_Logs_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Jpref_Sync_Data_Logs_Delete_Elem_Input>;
  _delete_key?: Maybe<Jpref_Sync_Data_Logs_Delete_Key_Input>;
  _prepend?: Maybe<Jpref_Sync_Data_Logs_Prepend_Input>;
  _set?: Maybe<Jpref_Sync_Data_Logs_Set_Input>;
  pk_columns: Jpref_Sync_Data_Logs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Learning_ObjectivesArgs = {
  _inc?: Maybe<Learning_Objectives_Inc_Input>;
  _set?: Maybe<Learning_Objectives_Set_Input>;
  where: Learning_Objectives_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Learning_Objectives_By_PkArgs = {
  _inc?: Maybe<Learning_Objectives_Inc_Input>;
  _set?: Maybe<Learning_Objectives_Set_Input>;
  pk_columns: Learning_Objectives_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_GroupsArgs = {
  _set?: Maybe<Lesson_Groups_Set_Input>;
  where: Lesson_Groups_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Groups_By_PkArgs = {
  _set?: Maybe<Lesson_Groups_Set_Input>;
  pk_columns: Lesson_Groups_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_MembersArgs = {
  _set?: Maybe<Lesson_Members_Set_Input>;
  where: Lesson_Members_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Members_By_PkArgs = {
  _set?: Maybe<Lesson_Members_Set_Input>;
  pk_columns: Lesson_Members_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Report_DetailsArgs = {
  _set?: Maybe<Lesson_Report_Details_Set_Input>;
  where: Lesson_Report_Details_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Report_Details_By_PkArgs = {
  _set?: Maybe<Lesson_Report_Details_Set_Input>;
  pk_columns: Lesson_Report_Details_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_ReportsArgs = {
  _set?: Maybe<Lesson_Reports_Set_Input>;
  where: Lesson_Reports_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Reports_By_PkArgs = {
  _set?: Maybe<Lesson_Reports_Set_Input>;
  pk_columns: Lesson_Reports_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Student_Subscription_Access_PathArgs = {
  _set?: Maybe<Lesson_Student_Subscription_Access_Path_Set_Input>;
  where: Lesson_Student_Subscription_Access_Path_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Student_Subscription_Access_Path_By_PkArgs = {
  _set?: Maybe<Lesson_Student_Subscription_Access_Path_Set_Input>;
  pk_columns: Lesson_Student_Subscription_Access_Path_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Student_SubscriptionsArgs = {
  _set?: Maybe<Lesson_Student_Subscriptions_Set_Input>;
  where: Lesson_Student_Subscriptions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Student_Subscriptions_By_PkArgs = {
  _set?: Maybe<Lesson_Student_Subscriptions_Set_Input>;
  pk_columns: Lesson_Student_Subscriptions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Study_Plan_ItemsArgs = {
  _set?: Maybe<Lesson_Study_Plan_Items_Set_Input>;
  where: Lesson_Study_Plan_Items_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Study_Plan_Items_By_PkArgs = {
  _set?: Maybe<Lesson_Study_Plan_Items_Set_Input>;
  pk_columns: Lesson_Study_Plan_Items_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_LessonsArgs = {
  _append?: Maybe<Lessons_Append_Input>;
  _delete_at_path?: Maybe<Lessons_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Lessons_Delete_Elem_Input>;
  _delete_key?: Maybe<Lessons_Delete_Key_Input>;
  _inc?: Maybe<Lessons_Inc_Input>;
  _prepend?: Maybe<Lessons_Prepend_Input>;
  _set?: Maybe<Lessons_Set_Input>;
  where: Lessons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lessons_By_PkArgs = {
  _append?: Maybe<Lessons_Append_Input>;
  _delete_at_path?: Maybe<Lessons_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Lessons_Delete_Elem_Input>;
  _delete_key?: Maybe<Lessons_Delete_Key_Input>;
  _inc?: Maybe<Lessons_Inc_Input>;
  _prepend?: Maybe<Lessons_Prepend_Input>;
  _set?: Maybe<Lessons_Set_Input>;
  pk_columns: Lessons_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lessons_CoursesArgs = {
  _set?: Maybe<Lessons_Courses_Set_Input>;
  where: Lessons_Courses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lessons_Courses_By_PkArgs = {
  _set?: Maybe<Lessons_Courses_Set_Input>;
  pk_columns: Lessons_Courses_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lessons_TeachersArgs = {
  _set?: Maybe<Lessons_Teachers_Set_Input>;
  where: Lessons_Teachers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lessons_Teachers_By_PkArgs = {
  _set?: Maybe<Lessons_Teachers_Set_Input>;
  pk_columns: Lessons_Teachers_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lo_Study_Plan_ItemsArgs = {
  _set?: Maybe<Lo_Study_Plan_Items_Set_Input>;
  where: Lo_Study_Plan_Items_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lo_Study_Plan_Items_By_PkArgs = {
  _set?: Maybe<Lo_Study_Plan_Items_Set_Input>;
  pk_columns: Lo_Study_Plan_Items_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_LocationsArgs = {
  _set?: Maybe<Locations_Set_Input>;
  where: Locations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Locations_By_PkArgs = {
  _set?: Maybe<Locations_Set_Input>;
  pk_columns: Locations_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_MediaArgs = {
  _append?: Maybe<Media_Append_Input>;
  _delete_at_path?: Maybe<Media_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Media_Delete_Elem_Input>;
  _delete_key?: Maybe<Media_Delete_Key_Input>;
  _prepend?: Maybe<Media_Prepend_Input>;
  _set?: Maybe<Media_Set_Input>;
  where: Media_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Media_By_PkArgs = {
  _append?: Maybe<Media_Append_Input>;
  _delete_at_path?: Maybe<Media_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Media_Delete_Elem_Input>;
  _delete_key?: Maybe<Media_Delete_Key_Input>;
  _prepend?: Maybe<Media_Prepend_Input>;
  _set?: Maybe<Media_Set_Input>;
  pk_columns: Media_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Notification_MessagesArgs = {
  _inc?: Maybe<Notification_Messages_Inc_Input>;
  _set?: Maybe<Notification_Messages_Set_Input>;
  where: Notification_Messages_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Notification_Messages_By_PkArgs = {
  _inc?: Maybe<Notification_Messages_Inc_Input>;
  _set?: Maybe<Notification_Messages_Set_Input>;
  pk_columns: Notification_Messages_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Notification_TargetsArgs = {
  _set?: Maybe<Notification_Targets_Set_Input>;
  where: Notification_Targets_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Notification_Targets_By_PkArgs = {
  _set?: Maybe<Notification_Targets_Set_Input>;
  pk_columns: Notification_Targets_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_NotificationsArgs = {
  _append?: Maybe<Notifications_Append_Input>;
  _delete_at_path?: Maybe<Notifications_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Notifications_Delete_Elem_Input>;
  _delete_key?: Maybe<Notifications_Delete_Key_Input>;
  _prepend?: Maybe<Notifications_Prepend_Input>;
  _set?: Maybe<Notifications_Set_Input>;
  where: Notifications_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Notifications_By_PkArgs = {
  _append?: Maybe<Notifications_Append_Input>;
  _delete_at_path?: Maybe<Notifications_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Notifications_Delete_Elem_Input>;
  _delete_key?: Maybe<Notifications_Delete_Key_Input>;
  _prepend?: Maybe<Notifications_Prepend_Input>;
  _set?: Maybe<Notifications_Set_Input>;
  pk_columns: Notifications_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_OrderArgs = {
  _inc?: Maybe<Order_Inc_Input>;
  _set?: Maybe<Order_Set_Input>;
  where: Order_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Order_Action_LogArgs = {
  _inc?: Maybe<Order_Action_Log_Inc_Input>;
  _set?: Maybe<Order_Action_Log_Set_Input>;
  where: Order_Action_Log_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Order_Action_Log_By_PkArgs = {
  _inc?: Maybe<Order_Action_Log_Inc_Input>;
  _set?: Maybe<Order_Action_Log_Set_Input>;
  pk_columns: Order_Action_Log_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Order_By_PkArgs = {
  _inc?: Maybe<Order_Inc_Input>;
  _set?: Maybe<Order_Set_Input>;
  pk_columns: Order_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Order_ItemArgs = {
  _inc?: Maybe<Order_Item_Inc_Input>;
  _set?: Maybe<Order_Item_Set_Input>;
  where: Order_Item_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Order_Item_By_PkArgs = {
  _inc?: Maybe<Order_Item_Inc_Input>;
  _set?: Maybe<Order_Item_Set_Input>;
  pk_columns: Order_Item_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_OrganizationsArgs = {
  _set?: Maybe<Organizations_Set_Input>;
  where: Organizations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Organizations_By_PkArgs = {
  _set?: Maybe<Organizations_Set_Input>;
  pk_columns: Organizations_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_OrgsArgs = {
  _set?: Maybe<Orgs_Set_Input>;
  where: Orgs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Orgs_By_PkArgs = {
  _set?: Maybe<Orgs_Set_Input>;
  pk_columns: Orgs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_PackagesArgs = {
  _append?: Maybe<Packages_Append_Input>;
  _delete_at_path?: Maybe<Packages_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Packages_Delete_Elem_Input>;
  _delete_key?: Maybe<Packages_Delete_Key_Input>;
  _inc?: Maybe<Packages_Inc_Input>;
  _prepend?: Maybe<Packages_Prepend_Input>;
  _set?: Maybe<Packages_Set_Input>;
  where: Packages_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Packages_By_PkArgs = {
  _append?: Maybe<Packages_Append_Input>;
  _delete_at_path?: Maybe<Packages_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Packages_Delete_Elem_Input>;
  _delete_key?: Maybe<Packages_Delete_Key_Input>;
  _inc?: Maybe<Packages_Inc_Input>;
  _prepend?: Maybe<Packages_Prepend_Input>;
  _set?: Maybe<Packages_Set_Input>;
  pk_columns: Packages_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ParentsArgs = {
  _inc?: Maybe<Parents_Inc_Input>;
  _set?: Maybe<Parents_Set_Input>;
  where: Parents_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Parents_By_PkArgs = {
  _inc?: Maybe<Parents_Inc_Input>;
  _set?: Maybe<Parents_Set_Input>;
  pk_columns: Parents_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Partner_Dynamic_Form_Field_ValuesArgs = {
  _append?: Maybe<Partner_Dynamic_Form_Field_Values_Append_Input>;
  _delete_at_path?: Maybe<Partner_Dynamic_Form_Field_Values_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Partner_Dynamic_Form_Field_Values_Delete_Elem_Input>;
  _delete_key?: Maybe<Partner_Dynamic_Form_Field_Values_Delete_Key_Input>;
  _inc?: Maybe<Partner_Dynamic_Form_Field_Values_Inc_Input>;
  _prepend?: Maybe<Partner_Dynamic_Form_Field_Values_Prepend_Input>;
  _set?: Maybe<Partner_Dynamic_Form_Field_Values_Set_Input>;
  where: Partner_Dynamic_Form_Field_Values_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Partner_Dynamic_Form_Field_Values_By_PkArgs = {
  _append?: Maybe<Partner_Dynamic_Form_Field_Values_Append_Input>;
  _delete_at_path?: Maybe<Partner_Dynamic_Form_Field_Values_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Partner_Dynamic_Form_Field_Values_Delete_Elem_Input>;
  _delete_key?: Maybe<Partner_Dynamic_Form_Field_Values_Delete_Key_Input>;
  _inc?: Maybe<Partner_Dynamic_Form_Field_Values_Inc_Input>;
  _prepend?: Maybe<Partner_Dynamic_Form_Field_Values_Prepend_Input>;
  _set?: Maybe<Partner_Dynamic_Form_Field_Values_Set_Input>;
  pk_columns: Partner_Dynamic_Form_Field_Values_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Partner_Form_ConfigsArgs = {
  _append?: Maybe<Partner_Form_Configs_Append_Input>;
  _delete_at_path?: Maybe<Partner_Form_Configs_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Partner_Form_Configs_Delete_Elem_Input>;
  _delete_key?: Maybe<Partner_Form_Configs_Delete_Key_Input>;
  _inc?: Maybe<Partner_Form_Configs_Inc_Input>;
  _prepend?: Maybe<Partner_Form_Configs_Prepend_Input>;
  _set?: Maybe<Partner_Form_Configs_Set_Input>;
  where: Partner_Form_Configs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Partner_Form_Configs_By_PkArgs = {
  _append?: Maybe<Partner_Form_Configs_Append_Input>;
  _delete_at_path?: Maybe<Partner_Form_Configs_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Partner_Form_Configs_Delete_Elem_Input>;
  _delete_key?: Maybe<Partner_Form_Configs_Delete_Key_Input>;
  _inc?: Maybe<Partner_Form_Configs_Inc_Input>;
  _prepend?: Maybe<Partner_Form_Configs_Prepend_Input>;
  _set?: Maybe<Partner_Form_Configs_Set_Input>;
  pk_columns: Partner_Form_Configs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_PlansArgs = {
  _inc?: Maybe<Plans_Inc_Input>;
  _set?: Maybe<Plans_Set_Input>;
  where: Plans_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Plans_By_PkArgs = {
  _inc?: Maybe<Plans_Inc_Input>;
  _set?: Maybe<Plans_Set_Input>;
  pk_columns: Plans_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Preset_Study_PlansArgs = {
  _inc?: Maybe<Preset_Study_Plans_Inc_Input>;
  _set?: Maybe<Preset_Study_Plans_Set_Input>;
  where: Preset_Study_Plans_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Preset_Study_Plans_By_PkArgs = {
  _inc?: Maybe<Preset_Study_Plans_Inc_Input>;
  _set?: Maybe<Preset_Study_Plans_Set_Input>;
  pk_columns: Preset_Study_Plans_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Preset_Study_Plans_WeeklyArgs = {
  _inc?: Maybe<Preset_Study_Plans_Weekly_Inc_Input>;
  _set?: Maybe<Preset_Study_Plans_Weekly_Set_Input>;
  where: Preset_Study_Plans_Weekly_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Preset_Study_Plans_Weekly_By_PkArgs = {
  _inc?: Maybe<Preset_Study_Plans_Weekly_Inc_Input>;
  _set?: Maybe<Preset_Study_Plans_Weekly_Set_Input>;
  pk_columns: Preset_Study_Plans_Weekly_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Preset_Study_Plans_Weekly_FormatArgs = {
  _inc?: Maybe<Preset_Study_Plans_Weekly_Format_Inc_Input>;
  _set?: Maybe<Preset_Study_Plans_Weekly_Format_Set_Input>;
  where: Preset_Study_Plans_Weekly_Format_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ProductArgs = {
  _inc?: Maybe<Product_Inc_Input>;
  _set?: Maybe<Product_Set_Input>;
  where: Product_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Product_By_PkArgs = {
  _inc?: Maybe<Product_Inc_Input>;
  _set?: Maybe<Product_Set_Input>;
  pk_columns: Product_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Product_FeeArgs = {
  _inc?: Maybe<Product_Fee_Inc_Input>;
  _set?: Maybe<Product_Fee_Set_Input>;
  where: Product_Fee_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Product_Fee_By_PkArgs = {
  _inc?: Maybe<Product_Fee_Inc_Input>;
  _set?: Maybe<Product_Fee_Set_Input>;
  pk_columns: Product_Fee_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Product_GradeArgs = {
  _inc?: Maybe<Product_Grade_Inc_Input>;
  _set?: Maybe<Product_Grade_Set_Input>;
  where: Product_Grade_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Product_Grade_By_PkArgs = {
  _inc?: Maybe<Product_Grade_Inc_Input>;
  _set?: Maybe<Product_Grade_Set_Input>;
  pk_columns: Product_Grade_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Product_LocationArgs = {
  _inc?: Maybe<Product_Location_Inc_Input>;
  _set?: Maybe<Product_Location_Set_Input>;
  where: Product_Location_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Product_Location_By_PkArgs = {
  _inc?: Maybe<Product_Location_Inc_Input>;
  _set?: Maybe<Product_Location_Set_Input>;
  pk_columns: Product_Location_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Product_MaterialArgs = {
  _inc?: Maybe<Product_Material_Inc_Input>;
  _set?: Maybe<Product_Material_Set_Input>;
  where: Product_Material_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Product_Material_By_PkArgs = {
  _inc?: Maybe<Product_Material_Inc_Input>;
  _set?: Maybe<Product_Material_Set_Input>;
  pk_columns: Product_Material_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Product_PackageArgs = {
  _inc?: Maybe<Product_Package_Inc_Input>;
  _set?: Maybe<Product_Package_Set_Input>;
  where: Product_Package_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Product_Package_By_PkArgs = {
  _inc?: Maybe<Product_Package_Inc_Input>;
  _set?: Maybe<Product_Package_Set_Input>;
  pk_columns: Product_Package_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Product_PriceArgs = {
  _inc?: Maybe<Product_Price_Inc_Input>;
  _set?: Maybe<Product_Price_Set_Input>;
  where: Product_Price_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Product_Price_By_PkArgs = {
  _inc?: Maybe<Product_Price_Inc_Input>;
  _set?: Maybe<Product_Price_Set_Input>;
  pk_columns: Product_Price_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Promotion_RulesArgs = {
  _append?: Maybe<Promotion_Rules_Append_Input>;
  _delete_at_path?: Maybe<Promotion_Rules_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Promotion_Rules_Delete_Elem_Input>;
  _delete_key?: Maybe<Promotion_Rules_Delete_Key_Input>;
  _inc?: Maybe<Promotion_Rules_Inc_Input>;
  _prepend?: Maybe<Promotion_Rules_Prepend_Input>;
  _set?: Maybe<Promotion_Rules_Set_Input>;
  where: Promotion_Rules_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Promotion_Rules_By_PkArgs = {
  _append?: Maybe<Promotion_Rules_Append_Input>;
  _delete_at_path?: Maybe<Promotion_Rules_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Promotion_Rules_Delete_Elem_Input>;
  _delete_key?: Maybe<Promotion_Rules_Delete_Key_Input>;
  _inc?: Maybe<Promotion_Rules_Inc_Input>;
  _prepend?: Maybe<Promotion_Rules_Prepend_Input>;
  _set?: Maybe<Promotion_Rules_Set_Input>;
  pk_columns: Promotion_Rules_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_PromotionsArgs = {
  _inc?: Maybe<Promotions_Inc_Input>;
  _set?: Maybe<Promotions_Set_Input>;
  where: Promotions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Promotions_By_PkArgs = {
  _inc?: Maybe<Promotions_Inc_Input>;
  _set?: Maybe<Promotions_Set_Input>;
  pk_columns: Promotions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_QuestionsArgs = {
  _inc?: Maybe<Questions_Inc_Input>;
  _set?: Maybe<Questions_Set_Input>;
  where: Questions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Questions_By_PkArgs = {
  _inc?: Maybe<Questions_Inc_Input>;
  _set?: Maybe<Questions_Set_Input>;
  pk_columns: Questions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Questions_Tagged_Learning_ObjectivesArgs = {
  _inc?: Maybe<Questions_Tagged_Learning_Objectives_Inc_Input>;
  _set?: Maybe<Questions_Tagged_Learning_Objectives_Set_Input>;
  where: Questions_Tagged_Learning_Objectives_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Questions_Tagged_Learning_Objectives_By_PkArgs = {
  _inc?: Maybe<Questions_Tagged_Learning_Objectives_Inc_Input>;
  _set?: Maybe<Questions_Tagged_Learning_Objectives_Set_Input>;
  pk_columns: Questions_Tagged_Learning_Objectives_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Quiz_SetsArgs = {
  _set?: Maybe<Quiz_Sets_Set_Input>;
  where: Quiz_Sets_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Quiz_Sets_By_PkArgs = {
  _set?: Maybe<Quiz_Sets_Set_Input>;
  pk_columns: Quiz_Sets_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_QuizsetsArgs = {
  _inc?: Maybe<Quizsets_Inc_Input>;
  _set?: Maybe<Quizsets_Set_Input>;
  where: Quizsets_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Quizsets_By_PkArgs = {
  _inc?: Maybe<Quizsets_Inc_Input>;
  _set?: Maybe<Quizsets_Set_Input>;
  pk_columns: Quizsets_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_QuizzesArgs = {
  _append?: Maybe<Quizzes_Append_Input>;
  _delete_at_path?: Maybe<Quizzes_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Quizzes_Delete_Elem_Input>;
  _delete_key?: Maybe<Quizzes_Delete_Key_Input>;
  _inc?: Maybe<Quizzes_Inc_Input>;
  _prepend?: Maybe<Quizzes_Prepend_Input>;
  _set?: Maybe<Quizzes_Set_Input>;
  where: Quizzes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Quizzes_By_PkArgs = {
  _append?: Maybe<Quizzes_Append_Input>;
  _delete_at_path?: Maybe<Quizzes_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Quizzes_Delete_Elem_Input>;
  _delete_key?: Maybe<Quizzes_Delete_Key_Input>;
  _inc?: Maybe<Quizzes_Inc_Input>;
  _prepend?: Maybe<Quizzes_Prepend_Input>;
  _set?: Maybe<Quizzes_Set_Input>;
  pk_columns: Quizzes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Scheduler_ItemsArgs = {
  _append?: Maybe<Scheduler_Items_Append_Input>;
  _delete_at_path?: Maybe<Scheduler_Items_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Scheduler_Items_Delete_Elem_Input>;
  _delete_key?: Maybe<Scheduler_Items_Delete_Key_Input>;
  _prepend?: Maybe<Scheduler_Items_Prepend_Input>;
  _set?: Maybe<Scheduler_Items_Set_Input>;
  where: Scheduler_Items_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Scheduler_Items_By_PkArgs = {
  _append?: Maybe<Scheduler_Items_Append_Input>;
  _delete_at_path?: Maybe<Scheduler_Items_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Scheduler_Items_Delete_Elem_Input>;
  _delete_key?: Maybe<Scheduler_Items_Delete_Key_Input>;
  _prepend?: Maybe<Scheduler_Items_Prepend_Input>;
  _set?: Maybe<Scheduler_Items_Set_Input>;
  pk_columns: Scheduler_Items_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Scheduler_PatternsArgs = {
  _append?: Maybe<Scheduler_Patterns_Append_Input>;
  _delete_at_path?: Maybe<Scheduler_Patterns_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Scheduler_Patterns_Delete_Elem_Input>;
  _delete_key?: Maybe<Scheduler_Patterns_Delete_Key_Input>;
  _prepend?: Maybe<Scheduler_Patterns_Prepend_Input>;
  _set?: Maybe<Scheduler_Patterns_Set_Input>;
  where: Scheduler_Patterns_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Scheduler_Patterns_By_PkArgs = {
  _append?: Maybe<Scheduler_Patterns_Append_Input>;
  _delete_at_path?: Maybe<Scheduler_Patterns_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Scheduler_Patterns_Delete_Elem_Input>;
  _delete_key?: Maybe<Scheduler_Patterns_Delete_Key_Input>;
  _prepend?: Maybe<Scheduler_Patterns_Prepend_Input>;
  _set?: Maybe<Scheduler_Patterns_Set_Input>;
  pk_columns: Scheduler_Patterns_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Schema_MigrationsArgs = {
  _inc?: Maybe<Schema_Migrations_Inc_Input>;
  _set?: Maybe<Schema_Migrations_Set_Input>;
  where: Schema_Migrations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Schema_Migrations_By_PkArgs = {
  _inc?: Maybe<Schema_Migrations_Inc_Input>;
  _set?: Maybe<Schema_Migrations_Set_Input>;
  pk_columns: Schema_Migrations_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_School_AdminsArgs = {
  _inc?: Maybe<School_Admins_Inc_Input>;
  _set?: Maybe<School_Admins_Set_Input>;
  where: School_Admins_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_School_Admins_By_PkArgs = {
  _inc?: Maybe<School_Admins_Inc_Input>;
  _set?: Maybe<School_Admins_Set_Input>;
  pk_columns: School_Admins_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_School_ConfigsArgs = {
  _inc?: Maybe<School_Configs_Inc_Input>;
  _set?: Maybe<School_Configs_Set_Input>;
  where: School_Configs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_School_Configs_By_PkArgs = {
  _inc?: Maybe<School_Configs_Inc_Input>;
  _set?: Maybe<School_Configs_Set_Input>;
  pk_columns: School_Configs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_SchoolsArgs = {
  _inc?: Maybe<Schools_Inc_Input>;
  _set?: Maybe<Schools_Set_Input>;
  where: Schools_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Schools_By_PkArgs = {
  _inc?: Maybe<Schools_Inc_Input>;
  _set?: Maybe<Schools_Set_Input>;
  pk_columns: Schools_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Shuffled_Quiz_SetsArgs = {
  _append?: Maybe<Shuffled_Quiz_Sets_Append_Input>;
  _delete_at_path?: Maybe<Shuffled_Quiz_Sets_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Shuffled_Quiz_Sets_Delete_Elem_Input>;
  _delete_key?: Maybe<Shuffled_Quiz_Sets_Delete_Key_Input>;
  _inc?: Maybe<Shuffled_Quiz_Sets_Inc_Input>;
  _prepend?: Maybe<Shuffled_Quiz_Sets_Prepend_Input>;
  _set?: Maybe<Shuffled_Quiz_Sets_Set_Input>;
  where: Shuffled_Quiz_Sets_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Shuffled_Quiz_Sets_By_PkArgs = {
  _append?: Maybe<Shuffled_Quiz_Sets_Append_Input>;
  _delete_at_path?: Maybe<Shuffled_Quiz_Sets_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Shuffled_Quiz_Sets_Delete_Elem_Input>;
  _delete_key?: Maybe<Shuffled_Quiz_Sets_Delete_Key_Input>;
  _inc?: Maybe<Shuffled_Quiz_Sets_Inc_Input>;
  _prepend?: Maybe<Shuffled_Quiz_Sets_Prepend_Input>;
  _set?: Maybe<Shuffled_Quiz_Sets_Set_Input>;
  pk_columns: Shuffled_Quiz_Sets_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Student_AssignmentsArgs = {
  _set?: Maybe<Student_Assignments_Set_Input>;
  where: Student_Assignments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Assignments_By_PkArgs = {
  _set?: Maybe<Student_Assignments_Set_Input>;
  pk_columns: Student_Assignments_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Student_CommentsArgs = {
  _set?: Maybe<Student_Comments_Set_Input>;
  where: Student_Comments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Comments_By_PkArgs = {
  _set?: Maybe<Student_Comments_Set_Input>;
  pk_columns: Student_Comments_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Entryexit_RecordsArgs = {
  _inc?: Maybe<Student_Entryexit_Records_Inc_Input>;
  _set?: Maybe<Student_Entryexit_Records_Set_Input>;
  where: Student_Entryexit_Records_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Entryexit_Records_By_PkArgs = {
  _inc?: Maybe<Student_Entryexit_Records_Inc_Input>;
  _set?: Maybe<Student_Entryexit_Records_Set_Input>;
  pk_columns: Student_Entryexit_Records_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Event_LogsArgs = {
  _append?: Maybe<Student_Event_Logs_Append_Input>;
  _delete_at_path?: Maybe<Student_Event_Logs_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Student_Event_Logs_Delete_Elem_Input>;
  _delete_key?: Maybe<Student_Event_Logs_Delete_Key_Input>;
  _inc?: Maybe<Student_Event_Logs_Inc_Input>;
  _prepend?: Maybe<Student_Event_Logs_Prepend_Input>;
  _set?: Maybe<Student_Event_Logs_Set_Input>;
  where: Student_Event_Logs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Event_Logs_By_PkArgs = {
  _append?: Maybe<Student_Event_Logs_Append_Input>;
  _delete_at_path?: Maybe<Student_Event_Logs_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Student_Event_Logs_Delete_Elem_Input>;
  _delete_key?: Maybe<Student_Event_Logs_Delete_Key_Input>;
  _inc?: Maybe<Student_Event_Logs_Inc_Input>;
  _prepend?: Maybe<Student_Event_Logs_Prepend_Input>;
  _set?: Maybe<Student_Event_Logs_Set_Input>;
  pk_columns: Student_Event_Logs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Learning_Time_By_DailyArgs = {
  _inc?: Maybe<Student_Learning_Time_By_Daily_Inc_Input>;
  _set?: Maybe<Student_Learning_Time_By_Daily_Set_Input>;
  where: Student_Learning_Time_By_Daily_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Learning_Time_By_Daily_By_PkArgs = {
  _inc?: Maybe<Student_Learning_Time_By_Daily_Inc_Input>;
  _set?: Maybe<Student_Learning_Time_By_Daily_Set_Input>;
  pk_columns: Student_Learning_Time_By_Daily_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Student_PackagesArgs = {
  _append?: Maybe<Student_Packages_Append_Input>;
  _delete_at_path?: Maybe<Student_Packages_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Student_Packages_Delete_Elem_Input>;
  _delete_key?: Maybe<Student_Packages_Delete_Key_Input>;
  _prepend?: Maybe<Student_Packages_Prepend_Input>;
  _set?: Maybe<Student_Packages_Set_Input>;
  where: Student_Packages_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Packages_By_PkArgs = {
  _append?: Maybe<Student_Packages_Append_Input>;
  _delete_at_path?: Maybe<Student_Packages_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Student_Packages_Delete_Elem_Input>;
  _delete_key?: Maybe<Student_Packages_Delete_Key_Input>;
  _prepend?: Maybe<Student_Packages_Prepend_Input>;
  _set?: Maybe<Student_Packages_Set_Input>;
  pk_columns: Student_Packages_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Student_ParentsArgs = {
  _set?: Maybe<Student_Parents_Set_Input>;
  where: Student_Parents_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Parents_By_PkArgs = {
  _set?: Maybe<Student_Parents_Set_Input>;
  pk_columns: Student_Parents_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Student_QrArgs = {
  _inc?: Maybe<Student_Qr_Inc_Input>;
  _set?: Maybe<Student_Qr_Set_Input>;
  where: Student_Qr_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Qr_By_PkArgs = {
  _inc?: Maybe<Student_Qr_Inc_Input>;
  _set?: Maybe<Student_Qr_Set_Input>;
  pk_columns: Student_Qr_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Student_QuestionsArgs = {
  _inc?: Maybe<Student_Questions_Inc_Input>;
  _set?: Maybe<Student_Questions_Set_Input>;
  where: Student_Questions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Questions_By_PkArgs = {
  _inc?: Maybe<Student_Questions_Inc_Input>;
  _set?: Maybe<Student_Questions_Set_Input>;
  pk_columns: Student_Questions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Student_StatisticsArgs = {
  _append?: Maybe<Student_Statistics_Append_Input>;
  _delete_at_path?: Maybe<Student_Statistics_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Student_Statistics_Delete_Elem_Input>;
  _delete_key?: Maybe<Student_Statistics_Delete_Key_Input>;
  _inc?: Maybe<Student_Statistics_Inc_Input>;
  _prepend?: Maybe<Student_Statistics_Prepend_Input>;
  _set?: Maybe<Student_Statistics_Set_Input>;
  where: Student_Statistics_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Study_PlansArgs = {
  _set?: Maybe<Student_Study_Plans_Set_Input>;
  where: Student_Study_Plans_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Study_Plans_By_PkArgs = {
  _set?: Maybe<Student_Study_Plans_Set_Input>;
  pk_columns: Student_Study_Plans_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Submission_GradesArgs = {
  _append?: Maybe<Student_Submission_Grades_Append_Input>;
  _delete_at_path?: Maybe<Student_Submission_Grades_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Student_Submission_Grades_Delete_Elem_Input>;
  _delete_key?: Maybe<Student_Submission_Grades_Delete_Key_Input>;
  _inc?: Maybe<Student_Submission_Grades_Inc_Input>;
  _prepend?: Maybe<Student_Submission_Grades_Prepend_Input>;
  _set?: Maybe<Student_Submission_Grades_Set_Input>;
  where: Student_Submission_Grades_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Submission_Grades_By_PkArgs = {
  _append?: Maybe<Student_Submission_Grades_Append_Input>;
  _delete_at_path?: Maybe<Student_Submission_Grades_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Student_Submission_Grades_Delete_Elem_Input>;
  _delete_key?: Maybe<Student_Submission_Grades_Delete_Key_Input>;
  _inc?: Maybe<Student_Submission_Grades_Inc_Input>;
  _prepend?: Maybe<Student_Submission_Grades_Prepend_Input>;
  _set?: Maybe<Student_Submission_Grades_Set_Input>;
  pk_columns: Student_Submission_Grades_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Submission_ScoresArgs = {
  _inc?: Maybe<Student_Submission_Scores_Inc_Input>;
  _set?: Maybe<Student_Submission_Scores_Set_Input>;
  where: Student_Submission_Scores_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Submission_Scores_By_PkArgs = {
  _inc?: Maybe<Student_Submission_Scores_Inc_Input>;
  _set?: Maybe<Student_Submission_Scores_Set_Input>;
  pk_columns: Student_Submission_Scores_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Student_SubmissionsArgs = {
  _append?: Maybe<Student_Submissions_Append_Input>;
  _delete_at_path?: Maybe<Student_Submissions_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Student_Submissions_Delete_Elem_Input>;
  _delete_key?: Maybe<Student_Submissions_Delete_Key_Input>;
  _prepend?: Maybe<Student_Submissions_Prepend_Input>;
  _set?: Maybe<Student_Submissions_Set_Input>;
  where: Student_Submissions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Submissions_By_PkArgs = {
  _append?: Maybe<Student_Submissions_Append_Input>;
  _delete_at_path?: Maybe<Student_Submissions_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Student_Submissions_Delete_Elem_Input>;
  _delete_key?: Maybe<Student_Submissions_Delete_Key_Input>;
  _prepend?: Maybe<Student_Submissions_Prepend_Input>;
  _set?: Maybe<Student_Submissions_Set_Input>;
  pk_columns: Student_Submissions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Student_SubscriptionsArgs = {
  _inc?: Maybe<Student_Subscriptions_Inc_Input>;
  _set?: Maybe<Student_Subscriptions_Set_Input>;
  where: Student_Subscriptions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Subscriptions_By_PkArgs = {
  _inc?: Maybe<Student_Subscriptions_Inc_Input>;
  _set?: Maybe<Student_Subscriptions_Set_Input>;
  pk_columns: Student_Subscriptions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_StudentsArgs = {
  _append?: Maybe<Students_Append_Input>;
  _delete_at_path?: Maybe<Students_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Students_Delete_Elem_Input>;
  _delete_key?: Maybe<Students_Delete_Key_Input>;
  _inc?: Maybe<Students_Inc_Input>;
  _prepend?: Maybe<Students_Prepend_Input>;
  _set?: Maybe<Students_Set_Input>;
  where: Students_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Students_Assigned_CoachesArgs = {
  _set?: Maybe<Students_Assigned_Coaches_Set_Input>;
  where: Students_Assigned_Coaches_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Students_By_PkArgs = {
  _append?: Maybe<Students_Append_Input>;
  _delete_at_path?: Maybe<Students_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Students_Delete_Elem_Input>;
  _delete_key?: Maybe<Students_Delete_Key_Input>;
  _inc?: Maybe<Students_Inc_Input>;
  _prepend?: Maybe<Students_Prepend_Input>;
  _set?: Maybe<Students_Set_Input>;
  pk_columns: Students_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Students_Learning_Objectives_CompletenessArgs = {
  _inc?: Maybe<Students_Learning_Objectives_Completeness_Inc_Input>;
  _set?: Maybe<Students_Learning_Objectives_Completeness_Set_Input>;
  where: Students_Learning_Objectives_Completeness_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Students_Learning_Objectives_Completeness_By_PkArgs = {
  _inc?: Maybe<Students_Learning_Objectives_Completeness_Inc_Input>;
  _set?: Maybe<Students_Learning_Objectives_Completeness_Set_Input>;
  pk_columns: Students_Learning_Objectives_Completeness_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Students_Learning_Objectives_RecordsArgs = {
  _inc?: Maybe<Students_Learning_Objectives_Records_Inc_Input>;
  _set?: Maybe<Students_Learning_Objectives_Records_Set_Input>;
  where: Students_Learning_Objectives_Records_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Students_Learning_Objectives_Records_By_PkArgs = {
  _inc?: Maybe<Students_Learning_Objectives_Records_Inc_Input>;
  _set?: Maybe<Students_Learning_Objectives_Records_Set_Input>;
  pk_columns: Students_Learning_Objectives_Records_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Students_Study_Plans_WeeklyArgs = {
  _set?: Maybe<Students_Study_Plans_Weekly_Set_Input>;
  where: Students_Study_Plans_Weekly_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Students_Study_Plans_Weekly_By_PkArgs = {
  _set?: Maybe<Students_Study_Plans_Weekly_Set_Input>;
  pk_columns: Students_Study_Plans_Weekly_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Students_Topics_CompletenessArgs = {
  _inc?: Maybe<Students_Topics_Completeness_Inc_Input>;
  _set?: Maybe<Students_Topics_Completeness_Set_Input>;
  where: Students_Topics_Completeness_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Students_Topics_OverdueArgs = {
  _set?: Maybe<Students_Topics_Overdue_Set_Input>;
  where: Students_Topics_Overdue_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Students_Topics_Overdue_By_PkArgs = {
  _set?: Maybe<Students_Topics_Overdue_Set_Input>;
  pk_columns: Students_Topics_Overdue_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Study_Plan_ItemsArgs = {
  _append?: Maybe<Study_Plan_Items_Append_Input>;
  _delete_at_path?: Maybe<Study_Plan_Items_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Study_Plan_Items_Delete_Elem_Input>;
  _delete_key?: Maybe<Study_Plan_Items_Delete_Key_Input>;
  _inc?: Maybe<Study_Plan_Items_Inc_Input>;
  _prepend?: Maybe<Study_Plan_Items_Prepend_Input>;
  _set?: Maybe<Study_Plan_Items_Set_Input>;
  where: Study_Plan_Items_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Study_Plan_Items_By_PkArgs = {
  _append?: Maybe<Study_Plan_Items_Append_Input>;
  _delete_at_path?: Maybe<Study_Plan_Items_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Study_Plan_Items_Delete_Elem_Input>;
  _delete_key?: Maybe<Study_Plan_Items_Delete_Key_Input>;
  _inc?: Maybe<Study_Plan_Items_Inc_Input>;
  _prepend?: Maybe<Study_Plan_Items_Prepend_Input>;
  _set?: Maybe<Study_Plan_Items_Set_Input>;
  pk_columns: Study_Plan_Items_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Study_PlansArgs = {
  _inc?: Maybe<Study_Plans_Inc_Input>;
  _set?: Maybe<Study_Plans_Set_Input>;
  where: Study_Plans_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Study_Plans_By_PkArgs = {
  _inc?: Maybe<Study_Plans_Inc_Input>;
  _set?: Maybe<Study_Plans_Set_Input>;
  pk_columns: Study_Plans_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_TaxArgs = {
  _inc?: Maybe<Tax_Inc_Input>;
  _set?: Maybe<Tax_Set_Input>;
  where: Tax_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Tax_By_PkArgs = {
  _inc?: Maybe<Tax_Inc_Input>;
  _set?: Maybe<Tax_Set_Input>;
  pk_columns: Tax_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_TeachersArgs = {
  _set?: Maybe<Teachers_Set_Input>;
  where: Teachers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Teachers_By_PkArgs = {
  _set?: Maybe<Teachers_Set_Input>;
  pk_columns: Teachers_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_TopicsArgs = {
  _inc?: Maybe<Topics_Inc_Input>;
  _set?: Maybe<Topics_Set_Input>;
  where: Topics_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Topics_AssignmentsArgs = {
  _inc?: Maybe<Topics_Assignments_Inc_Input>;
  _set?: Maybe<Topics_Assignments_Set_Input>;
  where: Topics_Assignments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Topics_Assignments_By_PkArgs = {
  _inc?: Maybe<Topics_Assignments_Inc_Input>;
  _set?: Maybe<Topics_Assignments_Set_Input>;
  pk_columns: Topics_Assignments_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Topics_By_PkArgs = {
  _inc?: Maybe<Topics_Inc_Input>;
  _set?: Maybe<Topics_Set_Input>;
  pk_columns: Topics_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Topics_Learning_ObjectivesArgs = {
  _inc?: Maybe<Topics_Learning_Objectives_Inc_Input>;
  _set?: Maybe<Topics_Learning_Objectives_Set_Input>;
  where: Topics_Learning_Objectives_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Topics_Learning_Objectives_By_PkArgs = {
  _inc?: Maybe<Topics_Learning_Objectives_Inc_Input>;
  _set?: Maybe<Topics_Learning_Objectives_Set_Input>;
  pk_columns: Topics_Learning_Objectives_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_TutorsArgs = {
  _inc?: Maybe<Tutors_Inc_Input>;
  _set?: Maybe<Tutors_Set_Input>;
  where: Tutors_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Tutors_By_PkArgs = {
  _inc?: Maybe<Tutors_Inc_Input>;
  _set?: Maybe<Tutors_Set_Input>;
  pk_columns: Tutors_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_User_Access_PathsArgs = {
  _set?: Maybe<User_Access_Paths_Set_Input>;
  where: User_Access_Paths_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_User_Access_Paths_By_PkArgs = {
  _set?: Maybe<User_Access_Paths_Set_Input>;
  pk_columns: User_Access_Paths_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_User_NotificationsArgs = {
  _set?: Maybe<User_Notifications_Set_Input>;
  where: User_Notifications_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_User_Notifications_By_PkArgs = {
  _set?: Maybe<User_Notifications_Set_Input>;
  pk_columns: User_Notifications_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_UsersArgs = {
  _set?: Maybe<Users_Set_Input>;
  where: Users_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Users_By_PkArgs = {
  _set?: Maybe<Users_Set_Input>;
  pk_columns: Users_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Users_GroupsArgs = {
  _set?: Maybe<Users_Groups_Set_Input>;
  where: Users_Groups_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Users_Groups_By_PkArgs = {
  _set?: Maybe<Users_Groups_Set_Input>;
  pk_columns: Users_Groups_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Users_Info_NotificationsArgs = {
  _inc?: Maybe<Users_Info_Notifications_Inc_Input>;
  _set?: Maybe<Users_Info_Notifications_Set_Input>;
  where: Users_Info_Notifications_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Users_Info_Notifications_By_PkArgs = {
  _inc?: Maybe<Users_Info_Notifications_Inc_Input>;
  _set?: Maybe<Users_Info_Notifications_Set_Input>;
  pk_columns: Users_Info_Notifications_Pk_Columns_Input;
};

/** columns and relationships of "notification_messages" */
export type Notification_Messages = {
  body?: Maybe<Scalars['String']>;
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  key: Scalars['String'];
  notification_message_id: Scalars['Int'];
  receiver_group: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "notification_messages" */
export type Notification_Messages_Aggregate = {
  aggregate?: Maybe<Notification_Messages_Aggregate_Fields>;
  nodes: Array<Notification_Messages>;
};

/** aggregate fields of "notification_messages" */
export type Notification_Messages_Aggregate_Fields = {
  avg?: Maybe<Notification_Messages_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Notification_Messages_Max_Fields>;
  min?: Maybe<Notification_Messages_Min_Fields>;
  stddev?: Maybe<Notification_Messages_Stddev_Fields>;
  stddev_pop?: Maybe<Notification_Messages_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Notification_Messages_Stddev_Samp_Fields>;
  sum?: Maybe<Notification_Messages_Sum_Fields>;
  var_pop?: Maybe<Notification_Messages_Var_Pop_Fields>;
  var_samp?: Maybe<Notification_Messages_Var_Samp_Fields>;
  variance?: Maybe<Notification_Messages_Variance_Fields>;
};


/** aggregate fields of "notification_messages" */
export type Notification_Messages_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Notification_Messages_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "notification_messages" */
export type Notification_Messages_Aggregate_Order_By = {
  avg?: Maybe<Notification_Messages_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Notification_Messages_Max_Order_By>;
  min?: Maybe<Notification_Messages_Min_Order_By>;
  stddev?: Maybe<Notification_Messages_Stddev_Order_By>;
  stddev_pop?: Maybe<Notification_Messages_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Notification_Messages_Stddev_Samp_Order_By>;
  sum?: Maybe<Notification_Messages_Sum_Order_By>;
  var_pop?: Maybe<Notification_Messages_Var_Pop_Order_By>;
  var_samp?: Maybe<Notification_Messages_Var_Samp_Order_By>;
  variance?: Maybe<Notification_Messages_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "notification_messages" */
export type Notification_Messages_Arr_Rel_Insert_Input = {
  data: Array<Notification_Messages_Insert_Input>;
  on_conflict?: Maybe<Notification_Messages_On_Conflict>;
};

/** aggregate avg on columns */
export type Notification_Messages_Avg_Fields = {
  notification_message_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "notification_messages" */
export type Notification_Messages_Avg_Order_By = {
  notification_message_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "notification_messages". All fields are combined with a logical 'AND'. */
export type Notification_Messages_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Notification_Messages_Bool_Exp>>>;
  _not?: Maybe<Notification_Messages_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Notification_Messages_Bool_Exp>>>;
  body?: Maybe<String_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  key?: Maybe<String_Comparison_Exp>;
  notification_message_id?: Maybe<Int_Comparison_Exp>;
  receiver_group?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  title?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "notification_messages" */
export enum Notification_Messages_Constraint {
  /** unique or primary key constraint */
  NotificationMessagesPk = 'notification_messages_pk',
  /** unique or primary key constraint */
  NotificationMessagesUn = 'notification_messages_un'
}

/** input type for incrementing integer column in table "notification_messages" */
export type Notification_Messages_Inc_Input = {
  notification_message_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "notification_messages" */
export type Notification_Messages_Insert_Input = {
  body?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  key?: Maybe<Scalars['String']>;
  notification_message_id?: Maybe<Scalars['Int']>;
  receiver_group?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Notification_Messages_Max_Fields = {
  body?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  key?: Maybe<Scalars['String']>;
  notification_message_id?: Maybe<Scalars['Int']>;
  receiver_group?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "notification_messages" */
export type Notification_Messages_Max_Order_By = {
  body?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  key?: Maybe<Order_By>;
  notification_message_id?: Maybe<Order_By>;
  receiver_group?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Notification_Messages_Min_Fields = {
  body?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  key?: Maybe<Scalars['String']>;
  notification_message_id?: Maybe<Scalars['Int']>;
  receiver_group?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "notification_messages" */
export type Notification_Messages_Min_Order_By = {
  body?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  key?: Maybe<Order_By>;
  notification_message_id?: Maybe<Order_By>;
  receiver_group?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "notification_messages" */
export type Notification_Messages_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Notification_Messages>;
};

/** input type for inserting object relation for remote table "notification_messages" */
export type Notification_Messages_Obj_Rel_Insert_Input = {
  data: Notification_Messages_Insert_Input;
  on_conflict?: Maybe<Notification_Messages_On_Conflict>;
};

/** on conflict condition type for table "notification_messages" */
export type Notification_Messages_On_Conflict = {
  constraint: Notification_Messages_Constraint;
  update_columns: Array<Notification_Messages_Update_Column>;
  where?: Maybe<Notification_Messages_Bool_Exp>;
};

/** ordering options when selecting data from "notification_messages" */
export type Notification_Messages_Order_By = {
  body?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  key?: Maybe<Order_By>;
  notification_message_id?: Maybe<Order_By>;
  receiver_group?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "notification_messages" */
export type Notification_Messages_Pk_Columns_Input = {
  notification_message_id: Scalars['Int'];
};

/** select columns of table "notification_messages" */
export enum Notification_Messages_Select_Column {
  /** column name */
  Body = 'body',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Key = 'key',
  /** column name */
  NotificationMessageId = 'notification_message_id',
  /** column name */
  ReceiverGroup = 'receiver_group',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "notification_messages" */
export type Notification_Messages_Set_Input = {
  body?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  key?: Maybe<Scalars['String']>;
  notification_message_id?: Maybe<Scalars['Int']>;
  receiver_group?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Notification_Messages_Stddev_Fields = {
  notification_message_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "notification_messages" */
export type Notification_Messages_Stddev_Order_By = {
  notification_message_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Notification_Messages_Stddev_Pop_Fields = {
  notification_message_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "notification_messages" */
export type Notification_Messages_Stddev_Pop_Order_By = {
  notification_message_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Notification_Messages_Stddev_Samp_Fields = {
  notification_message_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "notification_messages" */
export type Notification_Messages_Stddev_Samp_Order_By = {
  notification_message_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Notification_Messages_Sum_Fields = {
  notification_message_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "notification_messages" */
export type Notification_Messages_Sum_Order_By = {
  notification_message_id?: Maybe<Order_By>;
};

/** update columns of table "notification_messages" */
export enum Notification_Messages_Update_Column {
  /** column name */
  Body = 'body',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Key = 'key',
  /** column name */
  NotificationMessageId = 'notification_message_id',
  /** column name */
  ReceiverGroup = 'receiver_group',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Notification_Messages_Var_Pop_Fields = {
  notification_message_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "notification_messages" */
export type Notification_Messages_Var_Pop_Order_By = {
  notification_message_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Notification_Messages_Var_Samp_Fields = {
  notification_message_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "notification_messages" */
export type Notification_Messages_Var_Samp_Order_By = {
  notification_message_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Notification_Messages_Variance_Fields = {
  notification_message_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "notification_messages" */
export type Notification_Messages_Variance_Order_By = {
  notification_message_id?: Maybe<Order_By>;
};

/** columns and relationships of "notification_targets" */
export type Notification_Targets = {
  conditions?: Maybe<Scalars['json']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  target_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "notification_targets" */
export type Notification_TargetsConditionsArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "notification_targets" */
export type Notification_Targets_Aggregate = {
  aggregate?: Maybe<Notification_Targets_Aggregate_Fields>;
  nodes: Array<Notification_Targets>;
};

/** aggregate fields of "notification_targets" */
export type Notification_Targets_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Notification_Targets_Max_Fields>;
  min?: Maybe<Notification_Targets_Min_Fields>;
};


/** aggregate fields of "notification_targets" */
export type Notification_Targets_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Notification_Targets_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "notification_targets" */
export type Notification_Targets_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Notification_Targets_Max_Order_By>;
  min?: Maybe<Notification_Targets_Min_Order_By>;
};

/** input type for inserting array relation for remote table "notification_targets" */
export type Notification_Targets_Arr_Rel_Insert_Input = {
  data: Array<Notification_Targets_Insert_Input>;
  on_conflict?: Maybe<Notification_Targets_On_Conflict>;
};

/** Boolean expression to filter rows from the table "notification_targets". All fields are combined with a logical 'AND'. */
export type Notification_Targets_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Notification_Targets_Bool_Exp>>>;
  _not?: Maybe<Notification_Targets_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Notification_Targets_Bool_Exp>>>;
  conditions?: Maybe<Json_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  target_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "notification_targets" */
export enum Notification_Targets_Constraint {
  /** unique or primary key constraint */
  NotificationTargetPk = 'notification_target_pk'
}

/** input type for inserting data into table "notification_targets" */
export type Notification_Targets_Insert_Input = {
  conditions?: Maybe<Scalars['json']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  target_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Notification_Targets_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  target_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "notification_targets" */
export type Notification_Targets_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  target_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Notification_Targets_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  target_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "notification_targets" */
export type Notification_Targets_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  target_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "notification_targets" */
export type Notification_Targets_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Notification_Targets>;
};

/** input type for inserting object relation for remote table "notification_targets" */
export type Notification_Targets_Obj_Rel_Insert_Input = {
  data: Notification_Targets_Insert_Input;
  on_conflict?: Maybe<Notification_Targets_On_Conflict>;
};

/** on conflict condition type for table "notification_targets" */
export type Notification_Targets_On_Conflict = {
  constraint: Notification_Targets_Constraint;
  update_columns: Array<Notification_Targets_Update_Column>;
  where?: Maybe<Notification_Targets_Bool_Exp>;
};

/** ordering options when selecting data from "notification_targets" */
export type Notification_Targets_Order_By = {
  conditions?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  target_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "notification_targets" */
export type Notification_Targets_Pk_Columns_Input = {
  target_id: Scalars['String'];
};

/** select columns of table "notification_targets" */
export enum Notification_Targets_Select_Column {
  /** column name */
  Conditions = 'conditions',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TargetId = 'target_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "notification_targets" */
export type Notification_Targets_Set_Input = {
  conditions?: Maybe<Scalars['json']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  target_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "notification_targets" */
export enum Notification_Targets_Update_Column {
  /** column name */
  Conditions = 'conditions',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TargetId = 'target_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "notifications" */
export type Notifications = {
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description: Scalars['String'];
  event: Scalars['String'];
  notification_id: Scalars['String'];
  /** An array relationship */
  notification_target: Array<Notification_Targets>;
  /** An aggregated array relationship */
  notification_target_aggregate: Notification_Targets_Aggregate;
  resource_path?: Maybe<Scalars['String']>;
  schedule_at: Scalars['timestamptz'];
  target?: Maybe<Scalars['String']>;
  title: Scalars['String'];
  type: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An array relationship */
  user_notifications: Array<User_Notifications>;
  /** An aggregated array relationship */
  user_notifications_aggregate: User_Notifications_Aggregate;
};


/** columns and relationships of "notifications" */
export type NotificationsDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "notifications" */
export type NotificationsNotification_TargetArgs = {
  distinct_on?: Maybe<Array<Notification_Targets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notification_Targets_Order_By>>;
  where?: Maybe<Notification_Targets_Bool_Exp>;
};


/** columns and relationships of "notifications" */
export type NotificationsNotification_Target_AggregateArgs = {
  distinct_on?: Maybe<Array<Notification_Targets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notification_Targets_Order_By>>;
  where?: Maybe<Notification_Targets_Bool_Exp>;
};


/** columns and relationships of "notifications" */
export type NotificationsUser_NotificationsArgs = {
  distinct_on?: Maybe<Array<User_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Notifications_Order_By>>;
  where?: Maybe<User_Notifications_Bool_Exp>;
};


/** columns and relationships of "notifications" */
export type NotificationsUser_Notifications_AggregateArgs = {
  distinct_on?: Maybe<Array<User_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Notifications_Order_By>>;
  where?: Maybe<User_Notifications_Bool_Exp>;
};

/** aggregated selection of "notifications" */
export type Notifications_Aggregate = {
  aggregate?: Maybe<Notifications_Aggregate_Fields>;
  nodes: Array<Notifications>;
};

/** aggregate fields of "notifications" */
export type Notifications_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Notifications_Max_Fields>;
  min?: Maybe<Notifications_Min_Fields>;
};


/** aggregate fields of "notifications" */
export type Notifications_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Notifications_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "notifications" */
export type Notifications_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Notifications_Max_Order_By>;
  min?: Maybe<Notifications_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Notifications_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "notifications" */
export type Notifications_Arr_Rel_Insert_Input = {
  data: Array<Notifications_Insert_Input>;
  on_conflict?: Maybe<Notifications_On_Conflict>;
};

/** Boolean expression to filter rows from the table "notifications". All fields are combined with a logical 'AND'. */
export type Notifications_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Notifications_Bool_Exp>>>;
  _not?: Maybe<Notifications_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Notifications_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  description?: Maybe<String_Comparison_Exp>;
  event?: Maybe<String_Comparison_Exp>;
  notification_id?: Maybe<String_Comparison_Exp>;
  notification_target?: Maybe<Notification_Targets_Bool_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  schedule_at?: Maybe<Timestamptz_Comparison_Exp>;
  target?: Maybe<String_Comparison_Exp>;
  title?: Maybe<String_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user_notifications?: Maybe<User_Notifications_Bool_Exp>;
};

/** unique or primary key constraints on table "notifications" */
export enum Notifications_Constraint {
  /** unique or primary key constraint */
  NotificationsPk = 'notifications_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Notifications_Delete_At_Path_Input = {
  data?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Notifications_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Notifications_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "notifications" */
export type Notifications_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  event?: Maybe<Scalars['String']>;
  notification_id?: Maybe<Scalars['String']>;
  notification_target?: Maybe<Notification_Targets_Arr_Rel_Insert_Input>;
  resource_path?: Maybe<Scalars['String']>;
  schedule_at?: Maybe<Scalars['timestamptz']>;
  target?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_notifications?: Maybe<User_Notifications_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Notifications_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  event?: Maybe<Scalars['String']>;
  notification_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  schedule_at?: Maybe<Scalars['timestamptz']>;
  target?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "notifications" */
export type Notifications_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  event?: Maybe<Order_By>;
  notification_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  schedule_at?: Maybe<Order_By>;
  target?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Notifications_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  event?: Maybe<Scalars['String']>;
  notification_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  schedule_at?: Maybe<Scalars['timestamptz']>;
  target?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "notifications" */
export type Notifications_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  event?: Maybe<Order_By>;
  notification_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  schedule_at?: Maybe<Order_By>;
  target?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "notifications" */
export type Notifications_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Notifications>;
};

/** input type for inserting object relation for remote table "notifications" */
export type Notifications_Obj_Rel_Insert_Input = {
  data: Notifications_Insert_Input;
  on_conflict?: Maybe<Notifications_On_Conflict>;
};

/** on conflict condition type for table "notifications" */
export type Notifications_On_Conflict = {
  constraint: Notifications_Constraint;
  update_columns: Array<Notifications_Update_Column>;
  where?: Maybe<Notifications_Bool_Exp>;
};

/** ordering options when selecting data from "notifications" */
export type Notifications_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  event?: Maybe<Order_By>;
  notification_id?: Maybe<Order_By>;
  notification_target_aggregate?: Maybe<Notification_Targets_Aggregate_Order_By>;
  resource_path?: Maybe<Order_By>;
  schedule_at?: Maybe<Order_By>;
  target?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_notifications_aggregate?: Maybe<User_Notifications_Aggregate_Order_By>;
};

/** primary key columns input for table: "notifications" */
export type Notifications_Pk_Columns_Input = {
  notification_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Notifications_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "notifications" */
export enum Notifications_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  Event = 'event',
  /** column name */
  NotificationId = 'notification_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  ScheduleAt = 'schedule_at',
  /** column name */
  Target = 'target',
  /** column name */
  Title = 'title',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "notifications" */
export type Notifications_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  event?: Maybe<Scalars['String']>;
  notification_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  schedule_at?: Maybe<Scalars['timestamptz']>;
  target?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "notifications" */
export enum Notifications_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  Event = 'event',
  /** column name */
  NotificationId = 'notification_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  ScheduleAt = 'schedule_at',
  /** column name */
  Target = 'target',
  /** column name */
  Title = 'title',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}


/** expression to compare columns of type numeric. All fields are combined with logical 'AND'. */
export type Numeric_Comparison_Exp = {
  _eq?: Maybe<Scalars['numeric']>;
  _gt?: Maybe<Scalars['numeric']>;
  _gte?: Maybe<Scalars['numeric']>;
  _in?: Maybe<Array<Scalars['numeric']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['numeric']>;
  _lte?: Maybe<Scalars['numeric']>;
  _neq?: Maybe<Scalars['numeric']>;
  _nin?: Maybe<Array<Scalars['numeric']>>;
};

/** columns and relationships of "order" */
export type Order = {
  created_at: Scalars['timestamptz'];
  id: Scalars['String'];
  location_id: Scalars['String'];
  order_comment?: Maybe<Scalars['String']>;
  order_sequence_number: Scalars['Int'];
  order_status: Scalars['String'];
  order_type?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** columns and relationships of "order_action_log" */
export type Order_Action_Log = {
  action?: Maybe<Scalars['String']>;
  comment?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  order_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['String'];
};

/** aggregated selection of "order_action_log" */
export type Order_Action_Log_Aggregate = {
  aggregate?: Maybe<Order_Action_Log_Aggregate_Fields>;
  nodes: Array<Order_Action_Log>;
};

/** aggregate fields of "order_action_log" */
export type Order_Action_Log_Aggregate_Fields = {
  avg?: Maybe<Order_Action_Log_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Order_Action_Log_Max_Fields>;
  min?: Maybe<Order_Action_Log_Min_Fields>;
  stddev?: Maybe<Order_Action_Log_Stddev_Fields>;
  stddev_pop?: Maybe<Order_Action_Log_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Order_Action_Log_Stddev_Samp_Fields>;
  sum?: Maybe<Order_Action_Log_Sum_Fields>;
  var_pop?: Maybe<Order_Action_Log_Var_Pop_Fields>;
  var_samp?: Maybe<Order_Action_Log_Var_Samp_Fields>;
  variance?: Maybe<Order_Action_Log_Variance_Fields>;
};


/** aggregate fields of "order_action_log" */
export type Order_Action_Log_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Order_Action_Log_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "order_action_log" */
export type Order_Action_Log_Aggregate_Order_By = {
  avg?: Maybe<Order_Action_Log_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Order_Action_Log_Max_Order_By>;
  min?: Maybe<Order_Action_Log_Min_Order_By>;
  stddev?: Maybe<Order_Action_Log_Stddev_Order_By>;
  stddev_pop?: Maybe<Order_Action_Log_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Order_Action_Log_Stddev_Samp_Order_By>;
  sum?: Maybe<Order_Action_Log_Sum_Order_By>;
  var_pop?: Maybe<Order_Action_Log_Var_Pop_Order_By>;
  var_samp?: Maybe<Order_Action_Log_Var_Samp_Order_By>;
  variance?: Maybe<Order_Action_Log_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "order_action_log" */
export type Order_Action_Log_Arr_Rel_Insert_Input = {
  data: Array<Order_Action_Log_Insert_Input>;
  on_conflict?: Maybe<Order_Action_Log_On_Conflict>;
};

/** aggregate avg on columns */
export type Order_Action_Log_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "order_action_log" */
export type Order_Action_Log_Avg_Order_By = {
  id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "order_action_log". All fields are combined with a logical 'AND'. */
export type Order_Action_Log_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Order_Action_Log_Bool_Exp>>>;
  _not?: Maybe<Order_Action_Log_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Order_Action_Log_Bool_Exp>>>;
  action?: Maybe<String_Comparison_Exp>;
  comment?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  order_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
  user_id?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "order_action_log" */
export enum Order_Action_Log_Constraint {
  /** unique or primary key constraint */
  OrderActionLogPk = 'order_action_log_pk'
}

/** input type for incrementing integer column in table "order_action_log" */
export type Order_Action_Log_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "order_action_log" */
export type Order_Action_Log_Insert_Input = {
  action?: Maybe<Scalars['String']>;
  comment?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  order_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Order_Action_Log_Max_Fields = {
  action?: Maybe<Scalars['String']>;
  comment?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  order_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "order_action_log" */
export type Order_Action_Log_Max_Order_By = {
  action?: Maybe<Order_By>;
  comment?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Order_Action_Log_Min_Fields = {
  action?: Maybe<Scalars['String']>;
  comment?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  order_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "order_action_log" */
export type Order_Action_Log_Min_Order_By = {
  action?: Maybe<Order_By>;
  comment?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "order_action_log" */
export type Order_Action_Log_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Order_Action_Log>;
};

/** input type for inserting object relation for remote table "order_action_log" */
export type Order_Action_Log_Obj_Rel_Insert_Input = {
  data: Order_Action_Log_Insert_Input;
  on_conflict?: Maybe<Order_Action_Log_On_Conflict>;
};

/** on conflict condition type for table "order_action_log" */
export type Order_Action_Log_On_Conflict = {
  constraint: Order_Action_Log_Constraint;
  update_columns: Array<Order_Action_Log_Update_Column>;
  where?: Maybe<Order_Action_Log_Bool_Exp>;
};

/** ordering options when selecting data from "order_action_log" */
export type Order_Action_Log_Order_By = {
  action?: Maybe<Order_By>;
  comment?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: "order_action_log" */
export type Order_Action_Log_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "order_action_log" */
export enum Order_Action_Log_Select_Column {
  /** column name */
  Action = 'action',
  /** column name */
  Comment = 'comment',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  OrderId = 'order_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "order_action_log" */
export type Order_Action_Log_Set_Input = {
  action?: Maybe<Scalars['String']>;
  comment?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  order_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Order_Action_Log_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "order_action_log" */
export type Order_Action_Log_Stddev_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Order_Action_Log_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "order_action_log" */
export type Order_Action_Log_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Order_Action_Log_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "order_action_log" */
export type Order_Action_Log_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Order_Action_Log_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "order_action_log" */
export type Order_Action_Log_Sum_Order_By = {
  id?: Maybe<Order_By>;
};

/** update columns of table "order_action_log" */
export enum Order_Action_Log_Update_Column {
  /** column name */
  Action = 'action',
  /** column name */
  Comment = 'comment',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  OrderId = 'order_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Order_Action_Log_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "order_action_log" */
export type Order_Action_Log_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Order_Action_Log_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "order_action_log" */
export type Order_Action_Log_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Order_Action_Log_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "order_action_log" */
export type Order_Action_Log_Variance_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregated selection of "order" */
export type Order_Aggregate = {
  aggregate?: Maybe<Order_Aggregate_Fields>;
  nodes: Array<Order>;
};

/** aggregate fields of "order" */
export type Order_Aggregate_Fields = {
  avg?: Maybe<Order_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Order_Max_Fields>;
  min?: Maybe<Order_Min_Fields>;
  stddev?: Maybe<Order_Stddev_Fields>;
  stddev_pop?: Maybe<Order_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Order_Stddev_Samp_Fields>;
  sum?: Maybe<Order_Sum_Fields>;
  var_pop?: Maybe<Order_Var_Pop_Fields>;
  var_samp?: Maybe<Order_Var_Samp_Fields>;
  variance?: Maybe<Order_Variance_Fields>;
};


/** aggregate fields of "order" */
export type Order_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Order_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "order" */
export type Order_Aggregate_Order_By = {
  avg?: Maybe<Order_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Order_Max_Order_By>;
  min?: Maybe<Order_Min_Order_By>;
  stddev?: Maybe<Order_Stddev_Order_By>;
  stddev_pop?: Maybe<Order_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Order_Stddev_Samp_Order_By>;
  sum?: Maybe<Order_Sum_Order_By>;
  var_pop?: Maybe<Order_Var_Pop_Order_By>;
  var_samp?: Maybe<Order_Var_Samp_Order_By>;
  variance?: Maybe<Order_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "order" */
export type Order_Arr_Rel_Insert_Input = {
  data: Array<Order_Insert_Input>;
  on_conflict?: Maybe<Order_On_Conflict>;
};

/** aggregate avg on columns */
export type Order_Avg_Fields = {
  order_sequence_number?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "order" */
export type Order_Avg_Order_By = {
  order_sequence_number?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "order". All fields are combined with a logical 'AND'. */
export type Order_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Order_Bool_Exp>>>;
  _not?: Maybe<Order_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Order_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<String_Comparison_Exp>;
  location_id?: Maybe<String_Comparison_Exp>;
  order_comment?: Maybe<String_Comparison_Exp>;
  order_sequence_number?: Maybe<Int_Comparison_Exp>;
  order_status?: Maybe<String_Comparison_Exp>;
  order_type?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** column ordering options */
export enum Order_By {
  /** in the ascending order, nulls last */
  Asc = 'asc',
  /** in the ascending order, nulls first */
  AscNullsFirst = 'asc_nulls_first',
  /** in the ascending order, nulls last */
  AscNullsLast = 'asc_nulls_last',
  /** in the descending order, nulls first */
  Desc = 'desc',
  /** in the descending order, nulls first */
  DescNullsFirst = 'desc_nulls_first',
  /** in the descending order, nulls last */
  DescNullsLast = 'desc_nulls_last'
}

/** unique or primary key constraints on table "order" */
export enum Order_Constraint {
  /** unique or primary key constraint */
  OrderPk = 'order_pk',
  /** unique or primary key constraint */
  OrderSequenceNumberResourcePathUnique = 'order_sequence_number_resource_path_unique'
}

/** input type for incrementing integer column in table "order" */
export type Order_Inc_Input = {
  order_sequence_number?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "order" */
export type Order_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['String']>;
  location_id?: Maybe<Scalars['String']>;
  order_comment?: Maybe<Scalars['String']>;
  order_sequence_number?: Maybe<Scalars['Int']>;
  order_status?: Maybe<Scalars['String']>;
  order_type?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** columns and relationships of "order_item" */
export type Order_Item = {
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  discount?: Maybe<Discount>;
  discount_id?: Maybe<Scalars['Int']>;
  order_id: Scalars['String'];
  /** An object relationship */
  product: Product;
  product_id: Scalars['Int'];
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
};

/** aggregated selection of "order_item" */
export type Order_Item_Aggregate = {
  aggregate?: Maybe<Order_Item_Aggregate_Fields>;
  nodes: Array<Order_Item>;
};

/** aggregate fields of "order_item" */
export type Order_Item_Aggregate_Fields = {
  avg?: Maybe<Order_Item_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Order_Item_Max_Fields>;
  min?: Maybe<Order_Item_Min_Fields>;
  stddev?: Maybe<Order_Item_Stddev_Fields>;
  stddev_pop?: Maybe<Order_Item_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Order_Item_Stddev_Samp_Fields>;
  sum?: Maybe<Order_Item_Sum_Fields>;
  var_pop?: Maybe<Order_Item_Var_Pop_Fields>;
  var_samp?: Maybe<Order_Item_Var_Samp_Fields>;
  variance?: Maybe<Order_Item_Variance_Fields>;
};


/** aggregate fields of "order_item" */
export type Order_Item_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Order_Item_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "order_item" */
export type Order_Item_Aggregate_Order_By = {
  avg?: Maybe<Order_Item_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Order_Item_Max_Order_By>;
  min?: Maybe<Order_Item_Min_Order_By>;
  stddev?: Maybe<Order_Item_Stddev_Order_By>;
  stddev_pop?: Maybe<Order_Item_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Order_Item_Stddev_Samp_Order_By>;
  sum?: Maybe<Order_Item_Sum_Order_By>;
  var_pop?: Maybe<Order_Item_Var_Pop_Order_By>;
  var_samp?: Maybe<Order_Item_Var_Samp_Order_By>;
  variance?: Maybe<Order_Item_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "order_item" */
export type Order_Item_Arr_Rel_Insert_Input = {
  data: Array<Order_Item_Insert_Input>;
  on_conflict?: Maybe<Order_Item_On_Conflict>;
};

/** aggregate avg on columns */
export type Order_Item_Avg_Fields = {
  discount_id?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "order_item" */
export type Order_Item_Avg_Order_By = {
  discount_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "order_item". All fields are combined with a logical 'AND'. */
export type Order_Item_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Order_Item_Bool_Exp>>>;
  _not?: Maybe<Order_Item_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Order_Item_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  discount?: Maybe<Discount_Bool_Exp>;
  discount_id?: Maybe<Int_Comparison_Exp>;
  order_id?: Maybe<String_Comparison_Exp>;
  product?: Maybe<Product_Bool_Exp>;
  product_id?: Maybe<Int_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  start_date?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "order_item" */
export enum Order_Item_Constraint {
  /** unique or primary key constraint */
  OrderItemPk = 'order_item_pk'
}

/** input type for incrementing integer column in table "order_item" */
export type Order_Item_Inc_Input = {
  discount_id?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "order_item" */
export type Order_Item_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  discount?: Maybe<Discount_Obj_Rel_Insert_Input>;
  discount_id?: Maybe<Scalars['Int']>;
  order_id?: Maybe<Scalars['String']>;
  product?: Maybe<Product_Obj_Rel_Insert_Input>;
  product_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Order_Item_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  discount_id?: Maybe<Scalars['Int']>;
  order_id?: Maybe<Scalars['String']>;
  product_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "order_item" */
export type Order_Item_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  discount_id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Order_Item_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  discount_id?: Maybe<Scalars['Int']>;
  order_id?: Maybe<Scalars['String']>;
  product_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "order_item" */
export type Order_Item_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  discount_id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
};

/** response of any mutation on the table "order_item" */
export type Order_Item_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Order_Item>;
};

/** input type for inserting object relation for remote table "order_item" */
export type Order_Item_Obj_Rel_Insert_Input = {
  data: Order_Item_Insert_Input;
  on_conflict?: Maybe<Order_Item_On_Conflict>;
};

/** on conflict condition type for table "order_item" */
export type Order_Item_On_Conflict = {
  constraint: Order_Item_Constraint;
  update_columns: Array<Order_Item_Update_Column>;
  where?: Maybe<Order_Item_Bool_Exp>;
};

/** ordering options when selecting data from "order_item" */
export type Order_Item_Order_By = {
  created_at?: Maybe<Order_By>;
  discount?: Maybe<Discount_Order_By>;
  discount_id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  product?: Maybe<Product_Order_By>;
  product_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
};

/** primary key columns input for table: "order_item" */
export type Order_Item_Pk_Columns_Input = {
  order_id: Scalars['String'];
  product_id: Scalars['Int'];
};

/** select columns of table "order_item" */
export enum Order_Item_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DiscountId = 'discount_id',
  /** column name */
  OrderId = 'order_id',
  /** column name */
  ProductId = 'product_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartDate = 'start_date'
}

/** input type for updating data in table "order_item" */
export type Order_Item_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  discount_id?: Maybe<Scalars['Int']>;
  order_id?: Maybe<Scalars['String']>;
  product_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Order_Item_Stddev_Fields = {
  discount_id?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "order_item" */
export type Order_Item_Stddev_Order_By = {
  discount_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Order_Item_Stddev_Pop_Fields = {
  discount_id?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "order_item" */
export type Order_Item_Stddev_Pop_Order_By = {
  discount_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Order_Item_Stddev_Samp_Fields = {
  discount_id?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "order_item" */
export type Order_Item_Stddev_Samp_Order_By = {
  discount_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Order_Item_Sum_Fields = {
  discount_id?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "order_item" */
export type Order_Item_Sum_Order_By = {
  discount_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
};

/** update columns of table "order_item" */
export enum Order_Item_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DiscountId = 'discount_id',
  /** column name */
  OrderId = 'order_id',
  /** column name */
  ProductId = 'product_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartDate = 'start_date'
}

/** aggregate var_pop on columns */
export type Order_Item_Var_Pop_Fields = {
  discount_id?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "order_item" */
export type Order_Item_Var_Pop_Order_By = {
  discount_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Order_Item_Var_Samp_Fields = {
  discount_id?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "order_item" */
export type Order_Item_Var_Samp_Order_By = {
  discount_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Order_Item_Variance_Fields = {
  discount_id?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "order_item" */
export type Order_Item_Variance_Order_By = {
  discount_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
};

/** aggregate max on columns */
export type Order_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['String']>;
  location_id?: Maybe<Scalars['String']>;
  order_comment?: Maybe<Scalars['String']>;
  order_sequence_number?: Maybe<Scalars['Int']>;
  order_status?: Maybe<Scalars['String']>;
  order_type?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "order" */
export type Order_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  location_id?: Maybe<Order_By>;
  order_comment?: Maybe<Order_By>;
  order_sequence_number?: Maybe<Order_By>;
  order_status?: Maybe<Order_By>;
  order_type?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Order_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['String']>;
  location_id?: Maybe<Scalars['String']>;
  order_comment?: Maybe<Scalars['String']>;
  order_sequence_number?: Maybe<Scalars['Int']>;
  order_status?: Maybe<Scalars['String']>;
  order_type?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "order" */
export type Order_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  location_id?: Maybe<Order_By>;
  order_comment?: Maybe<Order_By>;
  order_sequence_number?: Maybe<Order_By>;
  order_status?: Maybe<Order_By>;
  order_type?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "order" */
export type Order_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Order>;
};

/** input type for inserting object relation for remote table "order" */
export type Order_Obj_Rel_Insert_Input = {
  data: Order_Insert_Input;
  on_conflict?: Maybe<Order_On_Conflict>;
};

/** on conflict condition type for table "order" */
export type Order_On_Conflict = {
  constraint: Order_Constraint;
  update_columns: Array<Order_Update_Column>;
  where?: Maybe<Order_Bool_Exp>;
};

/** ordering options when selecting data from "order" */
export type Order_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  location_id?: Maybe<Order_By>;
  order_comment?: Maybe<Order_By>;
  order_sequence_number?: Maybe<Order_By>;
  order_status?: Maybe<Order_By>;
  order_type?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "order" */
export type Order_Pk_Columns_Input = {
  id: Scalars['String'];
};

/** select columns of table "order" */
export enum Order_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  OrderComment = 'order_comment',
  /** column name */
  OrderSequenceNumber = 'order_sequence_number',
  /** column name */
  OrderStatus = 'order_status',
  /** column name */
  OrderType = 'order_type',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "order" */
export type Order_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['String']>;
  location_id?: Maybe<Scalars['String']>;
  order_comment?: Maybe<Scalars['String']>;
  order_sequence_number?: Maybe<Scalars['Int']>;
  order_status?: Maybe<Scalars['String']>;
  order_type?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Order_Stddev_Fields = {
  order_sequence_number?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "order" */
export type Order_Stddev_Order_By = {
  order_sequence_number?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Order_Stddev_Pop_Fields = {
  order_sequence_number?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "order" */
export type Order_Stddev_Pop_Order_By = {
  order_sequence_number?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Order_Stddev_Samp_Fields = {
  order_sequence_number?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "order" */
export type Order_Stddev_Samp_Order_By = {
  order_sequence_number?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Order_Sum_Fields = {
  order_sequence_number?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "order" */
export type Order_Sum_Order_By = {
  order_sequence_number?: Maybe<Order_By>;
};

/** update columns of table "order" */
export enum Order_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  OrderComment = 'order_comment',
  /** column name */
  OrderSequenceNumber = 'order_sequence_number',
  /** column name */
  OrderStatus = 'order_status',
  /** column name */
  OrderType = 'order_type',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Order_Var_Pop_Fields = {
  order_sequence_number?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "order" */
export type Order_Var_Pop_Order_By = {
  order_sequence_number?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Order_Var_Samp_Fields = {
  order_sequence_number?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "order" */
export type Order_Var_Samp_Order_By = {
  order_sequence_number?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Order_Variance_Fields = {
  order_sequence_number?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "order" */
export type Order_Variance_Order_By = {
  order_sequence_number?: Maybe<Order_By>;
};

/** columns and relationships of "organizations" */
export type Organizations = {
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  domain_name?: Maybe<Scalars['String']>;
  logo_url?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  organization_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  tenant_id?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "organizations" */
export type Organizations_Aggregate = {
  aggregate?: Maybe<Organizations_Aggregate_Fields>;
  nodes: Array<Organizations>;
};

/** aggregate fields of "organizations" */
export type Organizations_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Organizations_Max_Fields>;
  min?: Maybe<Organizations_Min_Fields>;
};


/** aggregate fields of "organizations" */
export type Organizations_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Organizations_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "organizations" */
export type Organizations_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Organizations_Max_Order_By>;
  min?: Maybe<Organizations_Min_Order_By>;
};

/** input type for inserting array relation for remote table "organizations" */
export type Organizations_Arr_Rel_Insert_Input = {
  data: Array<Organizations_Insert_Input>;
  on_conflict?: Maybe<Organizations_On_Conflict>;
};

/** Boolean expression to filter rows from the table "organizations". All fields are combined with a logical 'AND'. */
export type Organizations_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Organizations_Bool_Exp>>>;
  _not?: Maybe<Organizations_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Organizations_Bool_Exp>>>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  domain_name?: Maybe<String_Comparison_Exp>;
  logo_url?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  organization_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  tenant_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "organizations" */
export enum Organizations_Constraint {
  /** unique or primary key constraint */
  OrganizationsPk = 'organizations__pk',
  /** unique or primary key constraint */
  OrganizationsTenantIdUn = 'organizations__tenant_id__un'
}

/** input type for inserting data into table "organizations" */
export type Organizations_Insert_Input = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  domain_name?: Maybe<Scalars['String']>;
  logo_url?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  organization_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  tenant_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Organizations_Max_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  domain_name?: Maybe<Scalars['String']>;
  logo_url?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  organization_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  tenant_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "organizations" */
export type Organizations_Max_Order_By = {
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  domain_name?: Maybe<Order_By>;
  logo_url?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  tenant_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Organizations_Min_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  domain_name?: Maybe<Scalars['String']>;
  logo_url?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  organization_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  tenant_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "organizations" */
export type Organizations_Min_Order_By = {
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  domain_name?: Maybe<Order_By>;
  logo_url?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  tenant_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "organizations" */
export type Organizations_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Organizations>;
};

/** input type for inserting object relation for remote table "organizations" */
export type Organizations_Obj_Rel_Insert_Input = {
  data: Organizations_Insert_Input;
  on_conflict?: Maybe<Organizations_On_Conflict>;
};

/** on conflict condition type for table "organizations" */
export type Organizations_On_Conflict = {
  constraint: Organizations_Constraint;
  update_columns: Array<Organizations_Update_Column>;
  where?: Maybe<Organizations_Bool_Exp>;
};

/** ordering options when selecting data from "organizations" */
export type Organizations_Order_By = {
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  domain_name?: Maybe<Order_By>;
  logo_url?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  tenant_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "organizations" */
export type Organizations_Pk_Columns_Input = {
  organization_id: Scalars['String'];
};

/** select columns of table "organizations" */
export enum Organizations_Select_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DomainName = 'domain_name',
  /** column name */
  LogoUrl = 'logo_url',
  /** column name */
  Name = 'name',
  /** column name */
  OrganizationId = 'organization_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TenantId = 'tenant_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "organizations" */
export type Organizations_Set_Input = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  domain_name?: Maybe<Scalars['String']>;
  logo_url?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  organization_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  tenant_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "organizations" */
export enum Organizations_Update_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DomainName = 'domain_name',
  /** column name */
  LogoUrl = 'logo_url',
  /** column name */
  Name = 'name',
  /** column name */
  OrganizationId = 'organization_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TenantId = 'tenant_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "orgs" */
export type Orgs = {
  /** An array relationship */
  brands: Array<Brands>;
  /** An aggregated array relationship */
  brands_aggregate: Brands_Aggregate;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name: Scalars['String'];
  org_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "orgs" */
export type OrgsBrandsArgs = {
  distinct_on?: Maybe<Array<Brands_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Brands_Order_By>>;
  where?: Maybe<Brands_Bool_Exp>;
};


/** columns and relationships of "orgs" */
export type OrgsBrands_AggregateArgs = {
  distinct_on?: Maybe<Array<Brands_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Brands_Order_By>>;
  where?: Maybe<Brands_Bool_Exp>;
};

/** aggregated selection of "orgs" */
export type Orgs_Aggregate = {
  aggregate?: Maybe<Orgs_Aggregate_Fields>;
  nodes: Array<Orgs>;
};

/** aggregate fields of "orgs" */
export type Orgs_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Orgs_Max_Fields>;
  min?: Maybe<Orgs_Min_Fields>;
};


/** aggregate fields of "orgs" */
export type Orgs_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Orgs_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "orgs" */
export type Orgs_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Orgs_Max_Order_By>;
  min?: Maybe<Orgs_Min_Order_By>;
};

/** input type for inserting array relation for remote table "orgs" */
export type Orgs_Arr_Rel_Insert_Input = {
  data: Array<Orgs_Insert_Input>;
  on_conflict?: Maybe<Orgs_On_Conflict>;
};

/** Boolean expression to filter rows from the table "orgs". All fields are combined with a logical 'AND'. */
export type Orgs_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Orgs_Bool_Exp>>>;
  _not?: Maybe<Orgs_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Orgs_Bool_Exp>>>;
  brands?: Maybe<Brands_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  org_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "orgs" */
export enum Orgs_Constraint {
  /** unique or primary key constraint */
  OrgsPk = 'orgs_pk',
  /** unique or primary key constraint */
  OrgsUn = 'orgs_un'
}

/** input type for inserting data into table "orgs" */
export type Orgs_Insert_Input = {
  brands?: Maybe<Brands_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  org_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Orgs_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  org_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "orgs" */
export type Orgs_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  org_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Orgs_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  org_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "orgs" */
export type Orgs_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  org_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "orgs" */
export type Orgs_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Orgs>;
};

/** input type for inserting object relation for remote table "orgs" */
export type Orgs_Obj_Rel_Insert_Input = {
  data: Orgs_Insert_Input;
  on_conflict?: Maybe<Orgs_On_Conflict>;
};

/** on conflict condition type for table "orgs" */
export type Orgs_On_Conflict = {
  constraint: Orgs_Constraint;
  update_columns: Array<Orgs_Update_Column>;
  where?: Maybe<Orgs_Bool_Exp>;
};

/** ordering options when selecting data from "orgs" */
export type Orgs_Order_By = {
  brands_aggregate?: Maybe<Brands_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  org_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "orgs" */
export type Orgs_Pk_Columns_Input = {
  org_id: Scalars['String'];
};

/** select columns of table "orgs" */
export enum Orgs_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Name = 'name',
  /** column name */
  OrgId = 'org_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "orgs" */
export type Orgs_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  org_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "orgs" */
export enum Orgs_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Name = 'name',
  /** column name */
  OrgId = 'org_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "packages" */
export type Packages = {
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  descriptions?: Maybe<Scalars['_text']>;
  discounted_price?: Maybe<Scalars['Int']>;
  duration?: Maybe<Scalars['Int']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  is_active: Scalars['Boolean'];
  is_recommended: Scalars['Boolean'];
  name: Scalars['String'];
  package_id: Scalars['String'];
  price: Scalars['Int'];
  prioritize_level?: Maybe<Scalars['Int']>;
  properties: Scalars['jsonb'];
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  student_packages: Array<Student_Packages>;
  /** An aggregated array relationship */
  student_packages_aggregate: Student_Packages_Aggregate;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "packages" */
export type PackagesPropertiesArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "packages" */
export type PackagesStudent_PackagesArgs = {
  distinct_on?: Maybe<Array<Student_Packages_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Packages_Order_By>>;
  where?: Maybe<Student_Packages_Bool_Exp>;
};


/** columns and relationships of "packages" */
export type PackagesStudent_Packages_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Packages_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Packages_Order_By>>;
  where?: Maybe<Student_Packages_Bool_Exp>;
};

/** aggregated selection of "packages" */
export type Packages_Aggregate = {
  aggregate?: Maybe<Packages_Aggregate_Fields>;
  nodes: Array<Packages>;
};

/** aggregate fields of "packages" */
export type Packages_Aggregate_Fields = {
  avg?: Maybe<Packages_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Packages_Max_Fields>;
  min?: Maybe<Packages_Min_Fields>;
  stddev?: Maybe<Packages_Stddev_Fields>;
  stddev_pop?: Maybe<Packages_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Packages_Stddev_Samp_Fields>;
  sum?: Maybe<Packages_Sum_Fields>;
  var_pop?: Maybe<Packages_Var_Pop_Fields>;
  var_samp?: Maybe<Packages_Var_Samp_Fields>;
  variance?: Maybe<Packages_Variance_Fields>;
};


/** aggregate fields of "packages" */
export type Packages_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Packages_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "packages" */
export type Packages_Aggregate_Order_By = {
  avg?: Maybe<Packages_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Packages_Max_Order_By>;
  min?: Maybe<Packages_Min_Order_By>;
  stddev?: Maybe<Packages_Stddev_Order_By>;
  stddev_pop?: Maybe<Packages_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Packages_Stddev_Samp_Order_By>;
  sum?: Maybe<Packages_Sum_Order_By>;
  var_pop?: Maybe<Packages_Var_Pop_Order_By>;
  var_samp?: Maybe<Packages_Var_Samp_Order_By>;
  variance?: Maybe<Packages_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Packages_Append_Input = {
  properties?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "packages" */
export type Packages_Arr_Rel_Insert_Input = {
  data: Array<Packages_Insert_Input>;
  on_conflict?: Maybe<Packages_On_Conflict>;
};

/** aggregate avg on columns */
export type Packages_Avg_Fields = {
  discounted_price?: Maybe<Scalars['Float']>;
  duration?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "packages" */
export type Packages_Avg_Order_By = {
  discounted_price?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  prioritize_level?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "packages". All fields are combined with a logical 'AND'. */
export type Packages_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Packages_Bool_Exp>>>;
  _not?: Maybe<Packages_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Packages_Bool_Exp>>>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  descriptions?: Maybe<_Text_Comparison_Exp>;
  discounted_price?: Maybe<Int_Comparison_Exp>;
  duration?: Maybe<Int_Comparison_Exp>;
  end_at?: Maybe<Timestamptz_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  is_recommended?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  package_id?: Maybe<String_Comparison_Exp>;
  price?: Maybe<Int_Comparison_Exp>;
  prioritize_level?: Maybe<Int_Comparison_Exp>;
  properties?: Maybe<Jsonb_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  start_at?: Maybe<Timestamptz_Comparison_Exp>;
  student_packages?: Maybe<Student_Packages_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "packages" */
export enum Packages_Constraint {
  /** unique or primary key constraint */
  PkPackages = 'pk__packages'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Packages_Delete_At_Path_Input = {
  properties?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Packages_Delete_Elem_Input = {
  properties?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Packages_Delete_Key_Input = {
  properties?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "packages" */
export type Packages_Inc_Input = {
  discounted_price?: Maybe<Scalars['Int']>;
  duration?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['Int']>;
  prioritize_level?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "packages" */
export type Packages_Insert_Input = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  descriptions?: Maybe<Scalars['_text']>;
  discounted_price?: Maybe<Scalars['Int']>;
  duration?: Maybe<Scalars['Int']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  is_active?: Maybe<Scalars['Boolean']>;
  is_recommended?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  package_id?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  prioritize_level?: Maybe<Scalars['Int']>;
  properties?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  student_packages?: Maybe<Student_Packages_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Packages_Max_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  discounted_price?: Maybe<Scalars['Int']>;
  duration?: Maybe<Scalars['Int']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  package_id?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  prioritize_level?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "packages" */
export type Packages_Max_Order_By = {
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  discounted_price?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  end_at?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  package_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  prioritize_level?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_at?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Packages_Min_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  discounted_price?: Maybe<Scalars['Int']>;
  duration?: Maybe<Scalars['Int']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  package_id?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  prioritize_level?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "packages" */
export type Packages_Min_Order_By = {
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  discounted_price?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  end_at?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  package_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  prioritize_level?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_at?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "packages" */
export type Packages_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Packages>;
};

/** input type for inserting object relation for remote table "packages" */
export type Packages_Obj_Rel_Insert_Input = {
  data: Packages_Insert_Input;
  on_conflict?: Maybe<Packages_On_Conflict>;
};

/** on conflict condition type for table "packages" */
export type Packages_On_Conflict = {
  constraint: Packages_Constraint;
  update_columns: Array<Packages_Update_Column>;
  where?: Maybe<Packages_Bool_Exp>;
};

/** ordering options when selecting data from "packages" */
export type Packages_Order_By = {
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  descriptions?: Maybe<Order_By>;
  discounted_price?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  end_at?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  is_recommended?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  package_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  prioritize_level?: Maybe<Order_By>;
  properties?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_at?: Maybe<Order_By>;
  student_packages_aggregate?: Maybe<Student_Packages_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "packages" */
export type Packages_Pk_Columns_Input = {
  package_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Packages_Prepend_Input = {
  properties?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "packages" */
export enum Packages_Select_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Descriptions = 'descriptions',
  /** column name */
  DiscountedPrice = 'discounted_price',
  /** column name */
  Duration = 'duration',
  /** column name */
  EndAt = 'end_at',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  IsRecommended = 'is_recommended',
  /** column name */
  Name = 'name',
  /** column name */
  PackageId = 'package_id',
  /** column name */
  Price = 'price',
  /** column name */
  PrioritizeLevel = 'prioritize_level',
  /** column name */
  Properties = 'properties',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartAt = 'start_at',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "packages" */
export type Packages_Set_Input = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  descriptions?: Maybe<Scalars['_text']>;
  discounted_price?: Maybe<Scalars['Int']>;
  duration?: Maybe<Scalars['Int']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  is_active?: Maybe<Scalars['Boolean']>;
  is_recommended?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  package_id?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  prioritize_level?: Maybe<Scalars['Int']>;
  properties?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Packages_Stddev_Fields = {
  discounted_price?: Maybe<Scalars['Float']>;
  duration?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "packages" */
export type Packages_Stddev_Order_By = {
  discounted_price?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  prioritize_level?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Packages_Stddev_Pop_Fields = {
  discounted_price?: Maybe<Scalars['Float']>;
  duration?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "packages" */
export type Packages_Stddev_Pop_Order_By = {
  discounted_price?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  prioritize_level?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Packages_Stddev_Samp_Fields = {
  discounted_price?: Maybe<Scalars['Float']>;
  duration?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "packages" */
export type Packages_Stddev_Samp_Order_By = {
  discounted_price?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  prioritize_level?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Packages_Sum_Fields = {
  discounted_price?: Maybe<Scalars['Int']>;
  duration?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['Int']>;
  prioritize_level?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "packages" */
export type Packages_Sum_Order_By = {
  discounted_price?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  prioritize_level?: Maybe<Order_By>;
};

/** update columns of table "packages" */
export enum Packages_Update_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Descriptions = 'descriptions',
  /** column name */
  DiscountedPrice = 'discounted_price',
  /** column name */
  Duration = 'duration',
  /** column name */
  EndAt = 'end_at',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  IsRecommended = 'is_recommended',
  /** column name */
  Name = 'name',
  /** column name */
  PackageId = 'package_id',
  /** column name */
  Price = 'price',
  /** column name */
  PrioritizeLevel = 'prioritize_level',
  /** column name */
  Properties = 'properties',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartAt = 'start_at',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Packages_Var_Pop_Fields = {
  discounted_price?: Maybe<Scalars['Float']>;
  duration?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "packages" */
export type Packages_Var_Pop_Order_By = {
  discounted_price?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  prioritize_level?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Packages_Var_Samp_Fields = {
  discounted_price?: Maybe<Scalars['Float']>;
  duration?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "packages" */
export type Packages_Var_Samp_Order_By = {
  discounted_price?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  prioritize_level?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Packages_Variance_Fields = {
  discounted_price?: Maybe<Scalars['Float']>;
  duration?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "packages" */
export type Packages_Variance_Order_By = {
  discounted_price?: Maybe<Order_By>;
  duration?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  prioritize_level?: Maybe<Order_By>;
};

/** columns and relationships of "parents" */
export type Parents = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  parent_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  /** An array relationship */
  student_parents: Array<Student_Parents>;
  /** An aggregated array relationship */
  student_parents_aggregate: Student_Parents_Aggregate;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user?: Maybe<Users>;
};


/** columns and relationships of "parents" */
export type ParentsStudent_ParentsArgs = {
  distinct_on?: Maybe<Array<Student_Parents_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Parents_Order_By>>;
  where?: Maybe<Student_Parents_Bool_Exp>;
};


/** columns and relationships of "parents" */
export type ParentsStudent_Parents_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Parents_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Parents_Order_By>>;
  where?: Maybe<Student_Parents_Bool_Exp>;
};

/** aggregated selection of "parents" */
export type Parents_Aggregate = {
  aggregate?: Maybe<Parents_Aggregate_Fields>;
  nodes: Array<Parents>;
};

/** aggregate fields of "parents" */
export type Parents_Aggregate_Fields = {
  avg?: Maybe<Parents_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Parents_Max_Fields>;
  min?: Maybe<Parents_Min_Fields>;
  stddev?: Maybe<Parents_Stddev_Fields>;
  stddev_pop?: Maybe<Parents_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Parents_Stddev_Samp_Fields>;
  sum?: Maybe<Parents_Sum_Fields>;
  var_pop?: Maybe<Parents_Var_Pop_Fields>;
  var_samp?: Maybe<Parents_Var_Samp_Fields>;
  variance?: Maybe<Parents_Variance_Fields>;
};


/** aggregate fields of "parents" */
export type Parents_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Parents_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "parents" */
export type Parents_Aggregate_Order_By = {
  avg?: Maybe<Parents_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Parents_Max_Order_By>;
  min?: Maybe<Parents_Min_Order_By>;
  stddev?: Maybe<Parents_Stddev_Order_By>;
  stddev_pop?: Maybe<Parents_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Parents_Stddev_Samp_Order_By>;
  sum?: Maybe<Parents_Sum_Order_By>;
  var_pop?: Maybe<Parents_Var_Pop_Order_By>;
  var_samp?: Maybe<Parents_Var_Samp_Order_By>;
  variance?: Maybe<Parents_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "parents" */
export type Parents_Arr_Rel_Insert_Input = {
  data: Array<Parents_Insert_Input>;
  on_conflict?: Maybe<Parents_On_Conflict>;
};

/** aggregate avg on columns */
export type Parents_Avg_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "parents" */
export type Parents_Avg_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "parents". All fields are combined with a logical 'AND'. */
export type Parents_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Parents_Bool_Exp>>>;
  _not?: Maybe<Parents_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Parents_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  parent_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  school_id?: Maybe<Int_Comparison_Exp>;
  student_parents?: Maybe<Student_Parents_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "parents" */
export enum Parents_Constraint {
  /** unique or primary key constraint */
  ParentsParentIdPk = 'parents__parent_id_pk'
}

/** input type for incrementing integer column in table "parents" */
export type Parents_Inc_Input = {
  school_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "parents" */
export type Parents_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  parent_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  student_parents?: Maybe<Student_Parents_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Parents_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  parent_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "parents" */
export type Parents_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  parent_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Parents_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  parent_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "parents" */
export type Parents_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  parent_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "parents" */
export type Parents_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Parents>;
};

/** input type for inserting object relation for remote table "parents" */
export type Parents_Obj_Rel_Insert_Input = {
  data: Parents_Insert_Input;
  on_conflict?: Maybe<Parents_On_Conflict>;
};

/** on conflict condition type for table "parents" */
export type Parents_On_Conflict = {
  constraint: Parents_Constraint;
  update_columns: Array<Parents_Update_Column>;
  where?: Maybe<Parents_Bool_Exp>;
};

/** ordering options when selecting data from "parents" */
export type Parents_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  parent_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  student_parents_aggregate?: Maybe<Student_Parents_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
};

/** primary key columns input for table: "parents" */
export type Parents_Pk_Columns_Input = {
  parent_id: Scalars['String'];
};

/** select columns of table "parents" */
export enum Parents_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ParentId = 'parent_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "parents" */
export type Parents_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  parent_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Parents_Stddev_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "parents" */
export type Parents_Stddev_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Parents_Stddev_Pop_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "parents" */
export type Parents_Stddev_Pop_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Parents_Stddev_Samp_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "parents" */
export type Parents_Stddev_Samp_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Parents_Sum_Fields = {
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "parents" */
export type Parents_Sum_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** update columns of table "parents" */
export enum Parents_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ParentId = 'parent_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Parents_Var_Pop_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "parents" */
export type Parents_Var_Pop_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Parents_Var_Samp_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "parents" */
export type Parents_Var_Samp_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Parents_Variance_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "parents" */
export type Parents_Variance_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** columns and relationships of "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values = {
  bool_value?: Maybe<Scalars['Boolean']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  dynamic_form_field_value_id: Scalars['String'];
  field_id: Scalars['String'];
  field_render_guide?: Maybe<Scalars['jsonb']>;
  int_array_value?: Maybe<Scalars['_int4']>;
  int_set_value?: Maybe<Scalars['_int4']>;
  int_value?: Maybe<Scalars['Int']>;
  /** An object relationship */
  lesson_report_detail: Lesson_Report_Details;
  lesson_report_detail_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  string_array_value?: Maybe<Scalars['_text']>;
  string_set_value?: Maybe<Scalars['_text']>;
  string_value?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  value_type?: Maybe<Scalars['String']>;
};


/** columns and relationships of "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_ValuesField_Render_GuideArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Aggregate = {
  aggregate?: Maybe<Partner_Dynamic_Form_Field_Values_Aggregate_Fields>;
  nodes: Array<Partner_Dynamic_Form_Field_Values>;
};

/** aggregate fields of "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Aggregate_Fields = {
  avg?: Maybe<Partner_Dynamic_Form_Field_Values_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Partner_Dynamic_Form_Field_Values_Max_Fields>;
  min?: Maybe<Partner_Dynamic_Form_Field_Values_Min_Fields>;
  stddev?: Maybe<Partner_Dynamic_Form_Field_Values_Stddev_Fields>;
  stddev_pop?: Maybe<Partner_Dynamic_Form_Field_Values_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Partner_Dynamic_Form_Field_Values_Stddev_Samp_Fields>;
  sum?: Maybe<Partner_Dynamic_Form_Field_Values_Sum_Fields>;
  var_pop?: Maybe<Partner_Dynamic_Form_Field_Values_Var_Pop_Fields>;
  var_samp?: Maybe<Partner_Dynamic_Form_Field_Values_Var_Samp_Fields>;
  variance?: Maybe<Partner_Dynamic_Form_Field_Values_Variance_Fields>;
};


/** aggregate fields of "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Aggregate_Order_By = {
  avg?: Maybe<Partner_Dynamic_Form_Field_Values_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Partner_Dynamic_Form_Field_Values_Max_Order_By>;
  min?: Maybe<Partner_Dynamic_Form_Field_Values_Min_Order_By>;
  stddev?: Maybe<Partner_Dynamic_Form_Field_Values_Stddev_Order_By>;
  stddev_pop?: Maybe<Partner_Dynamic_Form_Field_Values_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Partner_Dynamic_Form_Field_Values_Stddev_Samp_Order_By>;
  sum?: Maybe<Partner_Dynamic_Form_Field_Values_Sum_Order_By>;
  var_pop?: Maybe<Partner_Dynamic_Form_Field_Values_Var_Pop_Order_By>;
  var_samp?: Maybe<Partner_Dynamic_Form_Field_Values_Var_Samp_Order_By>;
  variance?: Maybe<Partner_Dynamic_Form_Field_Values_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Partner_Dynamic_Form_Field_Values_Append_Input = {
  field_render_guide?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Arr_Rel_Insert_Input = {
  data: Array<Partner_Dynamic_Form_Field_Values_Insert_Input>;
  on_conflict?: Maybe<Partner_Dynamic_Form_Field_Values_On_Conflict>;
};

/** aggregate avg on columns */
export type Partner_Dynamic_Form_Field_Values_Avg_Fields = {
  int_value?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Avg_Order_By = {
  int_value?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "partner_dynamic_form_field_values". All fields are combined with a logical 'AND'. */
export type Partner_Dynamic_Form_Field_Values_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>>>;
  _not?: Maybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>>>;
  bool_value?: Maybe<Boolean_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  dynamic_form_field_value_id?: Maybe<String_Comparison_Exp>;
  field_id?: Maybe<String_Comparison_Exp>;
  field_render_guide?: Maybe<Jsonb_Comparison_Exp>;
  int_array_value?: Maybe<_Int4_Comparison_Exp>;
  int_set_value?: Maybe<_Int4_Comparison_Exp>;
  int_value?: Maybe<Int_Comparison_Exp>;
  lesson_report_detail?: Maybe<Lesson_Report_Details_Bool_Exp>;
  lesson_report_detail_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  string_array_value?: Maybe<_Text_Comparison_Exp>;
  string_set_value?: Maybe<_Text_Comparison_Exp>;
  string_value?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  value_type?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "partner_dynamic_form_field_values" */
export enum Partner_Dynamic_Form_Field_Values_Constraint {
  /** unique or primary key constraint */
  PartnerDynamicFormFieldValuesPk = 'partner_dynamic_form_field_values_pk',
  /** unique or primary key constraint */
  UniqueLessonReportDetailIdFieldId = 'unique__lesson_report_detail_id__field_id'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Partner_Dynamic_Form_Field_Values_Delete_At_Path_Input = {
  field_render_guide?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Partner_Dynamic_Form_Field_Values_Delete_Elem_Input = {
  field_render_guide?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Partner_Dynamic_Form_Field_Values_Delete_Key_Input = {
  field_render_guide?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Inc_Input = {
  int_value?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Insert_Input = {
  bool_value?: Maybe<Scalars['Boolean']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  dynamic_form_field_value_id?: Maybe<Scalars['String']>;
  field_id?: Maybe<Scalars['String']>;
  field_render_guide?: Maybe<Scalars['jsonb']>;
  int_array_value?: Maybe<Scalars['_int4']>;
  int_set_value?: Maybe<Scalars['_int4']>;
  int_value?: Maybe<Scalars['Int']>;
  lesson_report_detail?: Maybe<Lesson_Report_Details_Obj_Rel_Insert_Input>;
  lesson_report_detail_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  string_array_value?: Maybe<Scalars['_text']>;
  string_set_value?: Maybe<Scalars['_text']>;
  string_value?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  value_type?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Partner_Dynamic_Form_Field_Values_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  dynamic_form_field_value_id?: Maybe<Scalars['String']>;
  field_id?: Maybe<Scalars['String']>;
  int_value?: Maybe<Scalars['Int']>;
  lesson_report_detail_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  string_value?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  value_type?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  dynamic_form_field_value_id?: Maybe<Order_By>;
  field_id?: Maybe<Order_By>;
  int_value?: Maybe<Order_By>;
  lesson_report_detail_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  string_value?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  value_type?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Partner_Dynamic_Form_Field_Values_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  dynamic_form_field_value_id?: Maybe<Scalars['String']>;
  field_id?: Maybe<Scalars['String']>;
  int_value?: Maybe<Scalars['Int']>;
  lesson_report_detail_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  string_value?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  value_type?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  dynamic_form_field_value_id?: Maybe<Order_By>;
  field_id?: Maybe<Order_By>;
  int_value?: Maybe<Order_By>;
  lesson_report_detail_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  string_value?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  value_type?: Maybe<Order_By>;
};

/** response of any mutation on the table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Partner_Dynamic_Form_Field_Values>;
};

/** input type for inserting object relation for remote table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Obj_Rel_Insert_Input = {
  data: Partner_Dynamic_Form_Field_Values_Insert_Input;
  on_conflict?: Maybe<Partner_Dynamic_Form_Field_Values_On_Conflict>;
};

/** on conflict condition type for table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_On_Conflict = {
  constraint: Partner_Dynamic_Form_Field_Values_Constraint;
  update_columns: Array<Partner_Dynamic_Form_Field_Values_Update_Column>;
  where?: Maybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};

/** ordering options when selecting data from "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Order_By = {
  bool_value?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  dynamic_form_field_value_id?: Maybe<Order_By>;
  field_id?: Maybe<Order_By>;
  field_render_guide?: Maybe<Order_By>;
  int_array_value?: Maybe<Order_By>;
  int_set_value?: Maybe<Order_By>;
  int_value?: Maybe<Order_By>;
  lesson_report_detail?: Maybe<Lesson_Report_Details_Order_By>;
  lesson_report_detail_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  string_array_value?: Maybe<Order_By>;
  string_set_value?: Maybe<Order_By>;
  string_value?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  value_type?: Maybe<Order_By>;
};

/** primary key columns input for table: "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Pk_Columns_Input = {
  dynamic_form_field_value_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Partner_Dynamic_Form_Field_Values_Prepend_Input = {
  field_render_guide?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "partner_dynamic_form_field_values" */
export enum Partner_Dynamic_Form_Field_Values_Select_Column {
  /** column name */
  BoolValue = 'bool_value',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DynamicFormFieldValueId = 'dynamic_form_field_value_id',
  /** column name */
  FieldId = 'field_id',
  /** column name */
  FieldRenderGuide = 'field_render_guide',
  /** column name */
  IntArrayValue = 'int_array_value',
  /** column name */
  IntSetValue = 'int_set_value',
  /** column name */
  IntValue = 'int_value',
  /** column name */
  LessonReportDetailId = 'lesson_report_detail_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StringArrayValue = 'string_array_value',
  /** column name */
  StringSetValue = 'string_set_value',
  /** column name */
  StringValue = 'string_value',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  ValueType = 'value_type'
}

/** input type for updating data in table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Set_Input = {
  bool_value?: Maybe<Scalars['Boolean']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  dynamic_form_field_value_id?: Maybe<Scalars['String']>;
  field_id?: Maybe<Scalars['String']>;
  field_render_guide?: Maybe<Scalars['jsonb']>;
  int_array_value?: Maybe<Scalars['_int4']>;
  int_set_value?: Maybe<Scalars['_int4']>;
  int_value?: Maybe<Scalars['Int']>;
  lesson_report_detail_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  string_array_value?: Maybe<Scalars['_text']>;
  string_set_value?: Maybe<Scalars['_text']>;
  string_value?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  value_type?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Partner_Dynamic_Form_Field_Values_Stddev_Fields = {
  int_value?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Stddev_Order_By = {
  int_value?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Partner_Dynamic_Form_Field_Values_Stddev_Pop_Fields = {
  int_value?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Stddev_Pop_Order_By = {
  int_value?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Partner_Dynamic_Form_Field_Values_Stddev_Samp_Fields = {
  int_value?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Stddev_Samp_Order_By = {
  int_value?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Partner_Dynamic_Form_Field_Values_Sum_Fields = {
  int_value?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Sum_Order_By = {
  int_value?: Maybe<Order_By>;
};

/** update columns of table "partner_dynamic_form_field_values" */
export enum Partner_Dynamic_Form_Field_Values_Update_Column {
  /** column name */
  BoolValue = 'bool_value',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DynamicFormFieldValueId = 'dynamic_form_field_value_id',
  /** column name */
  FieldId = 'field_id',
  /** column name */
  FieldRenderGuide = 'field_render_guide',
  /** column name */
  IntArrayValue = 'int_array_value',
  /** column name */
  IntSetValue = 'int_set_value',
  /** column name */
  IntValue = 'int_value',
  /** column name */
  LessonReportDetailId = 'lesson_report_detail_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StringArrayValue = 'string_array_value',
  /** column name */
  StringSetValue = 'string_set_value',
  /** column name */
  StringValue = 'string_value',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  ValueType = 'value_type'
}

/** aggregate var_pop on columns */
export type Partner_Dynamic_Form_Field_Values_Var_Pop_Fields = {
  int_value?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Var_Pop_Order_By = {
  int_value?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Partner_Dynamic_Form_Field_Values_Var_Samp_Fields = {
  int_value?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Var_Samp_Order_By = {
  int_value?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Partner_Dynamic_Form_Field_Values_Variance_Fields = {
  int_value?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Variance_Order_By = {
  int_value?: Maybe<Order_By>;
};

/** columns and relationships of "partner_form_configs" */
export type Partner_Form_Configs = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  feature_name: Scalars['String'];
  form_config_data?: Maybe<Scalars['jsonb']>;
  form_config_id: Scalars['String'];
  /** An array relationship */
  lesson_reports: Array<Lesson_Reports>;
  /** An aggregated array relationship */
  lesson_reports_aggregate: Lesson_Reports_Aggregate;
  partner_id: Scalars['Int'];
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  school: Schools;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "partner_form_configs" */
export type Partner_Form_ConfigsForm_Config_DataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "partner_form_configs" */
export type Partner_Form_ConfigsLesson_ReportsArgs = {
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};


/** columns and relationships of "partner_form_configs" */
export type Partner_Form_ConfigsLesson_Reports_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};

/** aggregated selection of "partner_form_configs" */
export type Partner_Form_Configs_Aggregate = {
  aggregate?: Maybe<Partner_Form_Configs_Aggregate_Fields>;
  nodes: Array<Partner_Form_Configs>;
};

/** aggregate fields of "partner_form_configs" */
export type Partner_Form_Configs_Aggregate_Fields = {
  avg?: Maybe<Partner_Form_Configs_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Partner_Form_Configs_Max_Fields>;
  min?: Maybe<Partner_Form_Configs_Min_Fields>;
  stddev?: Maybe<Partner_Form_Configs_Stddev_Fields>;
  stddev_pop?: Maybe<Partner_Form_Configs_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Partner_Form_Configs_Stddev_Samp_Fields>;
  sum?: Maybe<Partner_Form_Configs_Sum_Fields>;
  var_pop?: Maybe<Partner_Form_Configs_Var_Pop_Fields>;
  var_samp?: Maybe<Partner_Form_Configs_Var_Samp_Fields>;
  variance?: Maybe<Partner_Form_Configs_Variance_Fields>;
};


/** aggregate fields of "partner_form_configs" */
export type Partner_Form_Configs_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Partner_Form_Configs_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "partner_form_configs" */
export type Partner_Form_Configs_Aggregate_Order_By = {
  avg?: Maybe<Partner_Form_Configs_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Partner_Form_Configs_Max_Order_By>;
  min?: Maybe<Partner_Form_Configs_Min_Order_By>;
  stddev?: Maybe<Partner_Form_Configs_Stddev_Order_By>;
  stddev_pop?: Maybe<Partner_Form_Configs_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Partner_Form_Configs_Stddev_Samp_Order_By>;
  sum?: Maybe<Partner_Form_Configs_Sum_Order_By>;
  var_pop?: Maybe<Partner_Form_Configs_Var_Pop_Order_By>;
  var_samp?: Maybe<Partner_Form_Configs_Var_Samp_Order_By>;
  variance?: Maybe<Partner_Form_Configs_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Partner_Form_Configs_Append_Input = {
  form_config_data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "partner_form_configs" */
export type Partner_Form_Configs_Arr_Rel_Insert_Input = {
  data: Array<Partner_Form_Configs_Insert_Input>;
  on_conflict?: Maybe<Partner_Form_Configs_On_Conflict>;
};

/** aggregate avg on columns */
export type Partner_Form_Configs_Avg_Fields = {
  partner_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Avg_Order_By = {
  partner_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "partner_form_configs". All fields are combined with a logical 'AND'. */
export type Partner_Form_Configs_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Partner_Form_Configs_Bool_Exp>>>;
  _not?: Maybe<Partner_Form_Configs_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Partner_Form_Configs_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  feature_name?: Maybe<String_Comparison_Exp>;
  form_config_data?: Maybe<Jsonb_Comparison_Exp>;
  form_config_id?: Maybe<String_Comparison_Exp>;
  lesson_reports?: Maybe<Lesson_Reports_Bool_Exp>;
  partner_id?: Maybe<Int_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  school?: Maybe<Schools_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "partner_form_configs" */
export enum Partner_Form_Configs_Constraint {
  /** unique or primary key constraint */
  PartnerFormConfigsPk = 'partner_form_configs_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Partner_Form_Configs_Delete_At_Path_Input = {
  form_config_data?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Partner_Form_Configs_Delete_Elem_Input = {
  form_config_data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Partner_Form_Configs_Delete_Key_Input = {
  form_config_data?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "partner_form_configs" */
export type Partner_Form_Configs_Inc_Input = {
  partner_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "partner_form_configs" */
export type Partner_Form_Configs_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  feature_name?: Maybe<Scalars['String']>;
  form_config_data?: Maybe<Scalars['jsonb']>;
  form_config_id?: Maybe<Scalars['String']>;
  lesson_reports?: Maybe<Lesson_Reports_Arr_Rel_Insert_Input>;
  partner_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  school?: Maybe<Schools_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Partner_Form_Configs_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  feature_name?: Maybe<Scalars['String']>;
  form_config_id?: Maybe<Scalars['String']>;
  partner_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  feature_name?: Maybe<Order_By>;
  form_config_id?: Maybe<Order_By>;
  partner_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Partner_Form_Configs_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  feature_name?: Maybe<Scalars['String']>;
  form_config_id?: Maybe<Scalars['String']>;
  partner_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  feature_name?: Maybe<Order_By>;
  form_config_id?: Maybe<Order_By>;
  partner_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "partner_form_configs" */
export type Partner_Form_Configs_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Partner_Form_Configs>;
};

/** input type for inserting object relation for remote table "partner_form_configs" */
export type Partner_Form_Configs_Obj_Rel_Insert_Input = {
  data: Partner_Form_Configs_Insert_Input;
  on_conflict?: Maybe<Partner_Form_Configs_On_Conflict>;
};

/** on conflict condition type for table "partner_form_configs" */
export type Partner_Form_Configs_On_Conflict = {
  constraint: Partner_Form_Configs_Constraint;
  update_columns: Array<Partner_Form_Configs_Update_Column>;
  where?: Maybe<Partner_Form_Configs_Bool_Exp>;
};

/** ordering options when selecting data from "partner_form_configs" */
export type Partner_Form_Configs_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  feature_name?: Maybe<Order_By>;
  form_config_data?: Maybe<Order_By>;
  form_config_id?: Maybe<Order_By>;
  lesson_reports_aggregate?: Maybe<Lesson_Reports_Aggregate_Order_By>;
  partner_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school?: Maybe<Schools_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "partner_form_configs" */
export type Partner_Form_Configs_Pk_Columns_Input = {
  form_config_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Partner_Form_Configs_Prepend_Input = {
  form_config_data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "partner_form_configs" */
export enum Partner_Form_Configs_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  FeatureName = 'feature_name',
  /** column name */
  FormConfigData = 'form_config_data',
  /** column name */
  FormConfigId = 'form_config_id',
  /** column name */
  PartnerId = 'partner_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "partner_form_configs" */
export type Partner_Form_Configs_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  feature_name?: Maybe<Scalars['String']>;
  form_config_data?: Maybe<Scalars['jsonb']>;
  form_config_id?: Maybe<Scalars['String']>;
  partner_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Partner_Form_Configs_Stddev_Fields = {
  partner_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Stddev_Order_By = {
  partner_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Partner_Form_Configs_Stddev_Pop_Fields = {
  partner_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Stddev_Pop_Order_By = {
  partner_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Partner_Form_Configs_Stddev_Samp_Fields = {
  partner_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Stddev_Samp_Order_By = {
  partner_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Partner_Form_Configs_Sum_Fields = {
  partner_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Sum_Order_By = {
  partner_id?: Maybe<Order_By>;
};

/** update columns of table "partner_form_configs" */
export enum Partner_Form_Configs_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  FeatureName = 'feature_name',
  /** column name */
  FormConfigData = 'form_config_data',
  /** column name */
  FormConfigId = 'form_config_id',
  /** column name */
  PartnerId = 'partner_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Partner_Form_Configs_Var_Pop_Fields = {
  partner_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Var_Pop_Order_By = {
  partner_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Partner_Form_Configs_Var_Samp_Fields = {
  partner_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Var_Samp_Order_By = {
  partner_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Partner_Form_Configs_Variance_Fields = {
  partner_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Variance_Order_By = {
  partner_id?: Maybe<Order_By>;
};

/** columns and relationships of "plans" */
export type Plans = {
  benefits?: Maybe<Scalars['_text']>;
  /** An array relationship */
  classes: Array<Classes>;
  /** An aggregated array relationship */
  classes_aggregate: Classes_Aggregate;
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  is_purchasable: Scalars['Boolean'];
  plan_id: Scalars['String'];
  plan_privileges: Scalars['_text'];
  prioritize_level?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An array relationship */
  student_subscriptions: Array<Student_Subscriptions>;
  /** An aggregated array relationship */
  student_subscriptions_aggregate: Student_Subscriptions_Aggregate;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "plans" */
export type PlansClassesArgs = {
  distinct_on?: Maybe<Array<Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Classes_Order_By>>;
  where?: Maybe<Classes_Bool_Exp>;
};


/** columns and relationships of "plans" */
export type PlansClasses_AggregateArgs = {
  distinct_on?: Maybe<Array<Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Classes_Order_By>>;
  where?: Maybe<Classes_Bool_Exp>;
};


/** columns and relationships of "plans" */
export type PlansStudent_SubscriptionsArgs = {
  distinct_on?: Maybe<Array<Student_Subscriptions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Subscriptions_Order_By>>;
  where?: Maybe<Student_Subscriptions_Bool_Exp>;
};


/** columns and relationships of "plans" */
export type PlansStudent_Subscriptions_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Subscriptions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Subscriptions_Order_By>>;
  where?: Maybe<Student_Subscriptions_Bool_Exp>;
};

/** aggregated selection of "plans" */
export type Plans_Aggregate = {
  aggregate?: Maybe<Plans_Aggregate_Fields>;
  nodes: Array<Plans>;
};

/** aggregate fields of "plans" */
export type Plans_Aggregate_Fields = {
  avg?: Maybe<Plans_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Plans_Max_Fields>;
  min?: Maybe<Plans_Min_Fields>;
  stddev?: Maybe<Plans_Stddev_Fields>;
  stddev_pop?: Maybe<Plans_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Plans_Stddev_Samp_Fields>;
  sum?: Maybe<Plans_Sum_Fields>;
  var_pop?: Maybe<Plans_Var_Pop_Fields>;
  var_samp?: Maybe<Plans_Var_Samp_Fields>;
  variance?: Maybe<Plans_Variance_Fields>;
};


/** aggregate fields of "plans" */
export type Plans_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Plans_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "plans" */
export type Plans_Aggregate_Order_By = {
  avg?: Maybe<Plans_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Plans_Max_Order_By>;
  min?: Maybe<Plans_Min_Order_By>;
  stddev?: Maybe<Plans_Stddev_Order_By>;
  stddev_pop?: Maybe<Plans_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Plans_Stddev_Samp_Order_By>;
  sum?: Maybe<Plans_Sum_Order_By>;
  var_pop?: Maybe<Plans_Var_Pop_Order_By>;
  var_samp?: Maybe<Plans_Var_Samp_Order_By>;
  variance?: Maybe<Plans_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "plans" */
export type Plans_Arr_Rel_Insert_Input = {
  data: Array<Plans_Insert_Input>;
  on_conflict?: Maybe<Plans_On_Conflict>;
};

/** aggregate avg on columns */
export type Plans_Avg_Fields = {
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "plans" */
export type Plans_Avg_Order_By = {
  prioritize_level?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "plans". All fields are combined with a logical 'AND'. */
export type Plans_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Plans_Bool_Exp>>>;
  _not?: Maybe<Plans_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Plans_Bool_Exp>>>;
  benefits?: Maybe<_Text_Comparison_Exp>;
  classes?: Maybe<Classes_Bool_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  description?: Maybe<String_Comparison_Exp>;
  is_purchasable?: Maybe<Boolean_Comparison_Exp>;
  plan_id?: Maybe<String_Comparison_Exp>;
  plan_privileges?: Maybe<_Text_Comparison_Exp>;
  prioritize_level?: Maybe<Smallint_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student_subscriptions?: Maybe<Student_Subscriptions_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "plans" */
export enum Plans_Constraint {
  /** unique or primary key constraint */
  PlansPk = 'plans_pk'
}

/** input type for incrementing integer column in table "plans" */
export type Plans_Inc_Input = {
  prioritize_level?: Maybe<Scalars['smallint']>;
};

/** input type for inserting data into table "plans" */
export type Plans_Insert_Input = {
  benefits?: Maybe<Scalars['_text']>;
  classes?: Maybe<Classes_Arr_Rel_Insert_Input>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  is_purchasable?: Maybe<Scalars['Boolean']>;
  plan_id?: Maybe<Scalars['String']>;
  plan_privileges?: Maybe<Scalars['_text']>;
  prioritize_level?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  student_subscriptions?: Maybe<Student_Subscriptions_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Plans_Max_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  plan_id?: Maybe<Scalars['String']>;
  prioritize_level?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "plans" */
export type Plans_Max_Order_By = {
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  plan_id?: Maybe<Order_By>;
  prioritize_level?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Plans_Min_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  plan_id?: Maybe<Scalars['String']>;
  prioritize_level?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "plans" */
export type Plans_Min_Order_By = {
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  plan_id?: Maybe<Order_By>;
  prioritize_level?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "plans" */
export type Plans_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Plans>;
};

/** input type for inserting object relation for remote table "plans" */
export type Plans_Obj_Rel_Insert_Input = {
  data: Plans_Insert_Input;
  on_conflict?: Maybe<Plans_On_Conflict>;
};

/** on conflict condition type for table "plans" */
export type Plans_On_Conflict = {
  constraint: Plans_Constraint;
  update_columns: Array<Plans_Update_Column>;
  where?: Maybe<Plans_Bool_Exp>;
};

/** ordering options when selecting data from "plans" */
export type Plans_Order_By = {
  benefits?: Maybe<Order_By>;
  classes_aggregate?: Maybe<Classes_Aggregate_Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  is_purchasable?: Maybe<Order_By>;
  plan_id?: Maybe<Order_By>;
  plan_privileges?: Maybe<Order_By>;
  prioritize_level?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_subscriptions_aggregate?: Maybe<Student_Subscriptions_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "plans" */
export type Plans_Pk_Columns_Input = {
  country: Scalars['String'];
  plan_id: Scalars['String'];
};

/** select columns of table "plans" */
export enum Plans_Select_Column {
  /** column name */
  Benefits = 'benefits',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  IsPurchasable = 'is_purchasable',
  /** column name */
  PlanId = 'plan_id',
  /** column name */
  PlanPrivileges = 'plan_privileges',
  /** column name */
  PrioritizeLevel = 'prioritize_level',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "plans" */
export type Plans_Set_Input = {
  benefits?: Maybe<Scalars['_text']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  is_purchasable?: Maybe<Scalars['Boolean']>;
  plan_id?: Maybe<Scalars['String']>;
  plan_privileges?: Maybe<Scalars['_text']>;
  prioritize_level?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Plans_Stddev_Fields = {
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "plans" */
export type Plans_Stddev_Order_By = {
  prioritize_level?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Plans_Stddev_Pop_Fields = {
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "plans" */
export type Plans_Stddev_Pop_Order_By = {
  prioritize_level?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Plans_Stddev_Samp_Fields = {
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "plans" */
export type Plans_Stddev_Samp_Order_By = {
  prioritize_level?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Plans_Sum_Fields = {
  prioritize_level?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "plans" */
export type Plans_Sum_Order_By = {
  prioritize_level?: Maybe<Order_By>;
};

/** update columns of table "plans" */
export enum Plans_Update_Column {
  /** column name */
  Benefits = 'benefits',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  IsPurchasable = 'is_purchasable',
  /** column name */
  PlanId = 'plan_id',
  /** column name */
  PlanPrivileges = 'plan_privileges',
  /** column name */
  PrioritizeLevel = 'prioritize_level',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Plans_Var_Pop_Fields = {
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "plans" */
export type Plans_Var_Pop_Order_By = {
  prioritize_level?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Plans_Var_Samp_Fields = {
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "plans" */
export type Plans_Var_Samp_Order_By = {
  prioritize_level?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Plans_Variance_Fields = {
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "plans" */
export type Plans_Variance_Order_By = {
  prioritize_level?: Maybe<Order_By>;
};


/** expression to compare columns of type point. All fields are combined with logical 'AND'. */
export type Point_Comparison_Exp = {
  _eq?: Maybe<Scalars['point']>;
  _gt?: Maybe<Scalars['point']>;
  _gte?: Maybe<Scalars['point']>;
  _in?: Maybe<Array<Scalars['point']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['point']>;
  _lte?: Maybe<Scalars['point']>;
  _neq?: Maybe<Scalars['point']>;
  _nin?: Maybe<Array<Scalars['point']>>;
};

/** columns and relationships of "preset_study_plans" */
export type Preset_Study_Plans = {
  /** An array relationship */
  class_preset_study_plans: Array<Class_Preset_Study_Plans>;
  /** An aggregated array relationship */
  class_preset_study_plans_aggregate: Class_Preset_Study_Plans_Aggregate;
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade: Scalars['smallint'];
  name: Scalars['String'];
  preset_study_plan_id: Scalars['String'];
  /** An array relationship */
  preset_study_plans_weeklies: Array<Preset_Study_Plans_Weekly>;
  /** An aggregated array relationship */
  preset_study_plans_weeklies_aggregate: Preset_Study_Plans_Weekly_Aggregate;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  subject: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "preset_study_plans" */
export type Preset_Study_PlansClass_Preset_Study_PlansArgs = {
  distinct_on?: Maybe<Array<Class_Preset_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Preset_Study_Plans_Order_By>>;
  where?: Maybe<Class_Preset_Study_Plans_Bool_Exp>;
};


/** columns and relationships of "preset_study_plans" */
export type Preset_Study_PlansClass_Preset_Study_Plans_AggregateArgs = {
  distinct_on?: Maybe<Array<Class_Preset_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Preset_Study_Plans_Order_By>>;
  where?: Maybe<Class_Preset_Study_Plans_Bool_Exp>;
};


/** columns and relationships of "preset_study_plans" */
export type Preset_Study_PlansPreset_Study_Plans_WeekliesArgs = {
  distinct_on?: Maybe<Array<Preset_Study_Plans_Weekly_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Preset_Study_Plans_Weekly_Order_By>>;
  where?: Maybe<Preset_Study_Plans_Weekly_Bool_Exp>;
};


/** columns and relationships of "preset_study_plans" */
export type Preset_Study_PlansPreset_Study_Plans_Weeklies_AggregateArgs = {
  distinct_on?: Maybe<Array<Preset_Study_Plans_Weekly_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Preset_Study_Plans_Weekly_Order_By>>;
  where?: Maybe<Preset_Study_Plans_Weekly_Bool_Exp>;
};

/** aggregated selection of "preset_study_plans" */
export type Preset_Study_Plans_Aggregate = {
  aggregate?: Maybe<Preset_Study_Plans_Aggregate_Fields>;
  nodes: Array<Preset_Study_Plans>;
};

/** aggregate fields of "preset_study_plans" */
export type Preset_Study_Plans_Aggregate_Fields = {
  avg?: Maybe<Preset_Study_Plans_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Preset_Study_Plans_Max_Fields>;
  min?: Maybe<Preset_Study_Plans_Min_Fields>;
  stddev?: Maybe<Preset_Study_Plans_Stddev_Fields>;
  stddev_pop?: Maybe<Preset_Study_Plans_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Preset_Study_Plans_Stddev_Samp_Fields>;
  sum?: Maybe<Preset_Study_Plans_Sum_Fields>;
  var_pop?: Maybe<Preset_Study_Plans_Var_Pop_Fields>;
  var_samp?: Maybe<Preset_Study_Plans_Var_Samp_Fields>;
  variance?: Maybe<Preset_Study_Plans_Variance_Fields>;
};


/** aggregate fields of "preset_study_plans" */
export type Preset_Study_Plans_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Preset_Study_Plans_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "preset_study_plans" */
export type Preset_Study_Plans_Aggregate_Order_By = {
  avg?: Maybe<Preset_Study_Plans_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Preset_Study_Plans_Max_Order_By>;
  min?: Maybe<Preset_Study_Plans_Min_Order_By>;
  stddev?: Maybe<Preset_Study_Plans_Stddev_Order_By>;
  stddev_pop?: Maybe<Preset_Study_Plans_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Preset_Study_Plans_Stddev_Samp_Order_By>;
  sum?: Maybe<Preset_Study_Plans_Sum_Order_By>;
  var_pop?: Maybe<Preset_Study_Plans_Var_Pop_Order_By>;
  var_samp?: Maybe<Preset_Study_Plans_Var_Samp_Order_By>;
  variance?: Maybe<Preset_Study_Plans_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "preset_study_plans" */
export type Preset_Study_Plans_Arr_Rel_Insert_Input = {
  data: Array<Preset_Study_Plans_Insert_Input>;
  on_conflict?: Maybe<Preset_Study_Plans_On_Conflict>;
};

/** aggregate avg on columns */
export type Preset_Study_Plans_Avg_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Avg_Order_By = {
  grade?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "preset_study_plans". All fields are combined with a logical 'AND'. */
export type Preset_Study_Plans_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Preset_Study_Plans_Bool_Exp>>>;
  _not?: Maybe<Preset_Study_Plans_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Preset_Study_Plans_Bool_Exp>>>;
  class_preset_study_plans?: Maybe<Class_Preset_Study_Plans_Bool_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  grade?: Maybe<Smallint_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  preset_study_plan_id?: Maybe<String_Comparison_Exp>;
  preset_study_plans_weeklies?: Maybe<Preset_Study_Plans_Weekly_Bool_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  start_date?: Maybe<Timestamptz_Comparison_Exp>;
  subject?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "preset_study_plans" */
export enum Preset_Study_Plans_Constraint {
  /** unique or primary key constraint */
  PresetStudyPlansPk = 'preset_study_plans_pk'
}

/** input type for incrementing integer column in table "preset_study_plans" */
export type Preset_Study_Plans_Inc_Input = {
  grade?: Maybe<Scalars['smallint']>;
};

/** input type for inserting data into table "preset_study_plans" */
export type Preset_Study_Plans_Insert_Input = {
  class_preset_study_plans?: Maybe<Class_Preset_Study_Plans_Arr_Rel_Insert_Input>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plans_weeklies?: Maybe<Preset_Study_Plans_Weekly_Arr_Rel_Insert_Input>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Preset_Study_Plans_Max_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Max_Order_By = {
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  preset_study_plan_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Preset_Study_Plans_Min_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Min_Order_By = {
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  preset_study_plan_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "preset_study_plans" */
export type Preset_Study_Plans_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Preset_Study_Plans>;
};

/** input type for inserting object relation for remote table "preset_study_plans" */
export type Preset_Study_Plans_Obj_Rel_Insert_Input = {
  data: Preset_Study_Plans_Insert_Input;
  on_conflict?: Maybe<Preset_Study_Plans_On_Conflict>;
};

/** on conflict condition type for table "preset_study_plans" */
export type Preset_Study_Plans_On_Conflict = {
  constraint: Preset_Study_Plans_Constraint;
  update_columns: Array<Preset_Study_Plans_Update_Column>;
  where?: Maybe<Preset_Study_Plans_Bool_Exp>;
};

/** ordering options when selecting data from "preset_study_plans" */
export type Preset_Study_Plans_Order_By = {
  class_preset_study_plans_aggregate?: Maybe<Class_Preset_Study_Plans_Aggregate_Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  preset_study_plan_id?: Maybe<Order_By>;
  preset_study_plans_weeklies_aggregate?: Maybe<Preset_Study_Plans_Weekly_Aggregate_Order_By>;
  resource_path?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "preset_study_plans" */
export type Preset_Study_Plans_Pk_Columns_Input = {
  preset_study_plan_id: Scalars['String'];
};

/** select columns of table "preset_study_plans" */
export enum Preset_Study_Plans_Select_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Grade = 'grade',
  /** column name */
  Name = 'name',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "preset_study_plans" */
export type Preset_Study_Plans_Set_Input = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Preset_Study_Plans_Stddev_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Stddev_Order_By = {
  grade?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Preset_Study_Plans_Stddev_Pop_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Stddev_Pop_Order_By = {
  grade?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Preset_Study_Plans_Stddev_Samp_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Stddev_Samp_Order_By = {
  grade?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Preset_Study_Plans_Sum_Fields = {
  grade?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Sum_Order_By = {
  grade?: Maybe<Order_By>;
};

/** update columns of table "preset_study_plans" */
export enum Preset_Study_Plans_Update_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Grade = 'grade',
  /** column name */
  Name = 'name',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Preset_Study_Plans_Var_Pop_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Var_Pop_Order_By = {
  grade?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Preset_Study_Plans_Var_Samp_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Var_Samp_Order_By = {
  grade?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Preset_Study_Plans_Variance_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Variance_Order_By = {
  grade?: Maybe<Order_By>;
};

/** columns and relationships of "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  preset_study_plan_id: Scalars['String'];
  preset_study_plan_weekly_id: Scalars['String'];
  /** An object relationship */
  preset_study_plans: Preset_Study_Plans;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  topic: Topics;
  topic_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  week: Scalars['smallint'];
};

/** aggregated selection of "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Aggregate = {
  aggregate?: Maybe<Preset_Study_Plans_Weekly_Aggregate_Fields>;
  nodes: Array<Preset_Study_Plans_Weekly>;
};

/** aggregate fields of "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Aggregate_Fields = {
  avg?: Maybe<Preset_Study_Plans_Weekly_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Preset_Study_Plans_Weekly_Max_Fields>;
  min?: Maybe<Preset_Study_Plans_Weekly_Min_Fields>;
  stddev?: Maybe<Preset_Study_Plans_Weekly_Stddev_Fields>;
  stddev_pop?: Maybe<Preset_Study_Plans_Weekly_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Preset_Study_Plans_Weekly_Stddev_Samp_Fields>;
  sum?: Maybe<Preset_Study_Plans_Weekly_Sum_Fields>;
  var_pop?: Maybe<Preset_Study_Plans_Weekly_Var_Pop_Fields>;
  var_samp?: Maybe<Preset_Study_Plans_Weekly_Var_Samp_Fields>;
  variance?: Maybe<Preset_Study_Plans_Weekly_Variance_Fields>;
};


/** aggregate fields of "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Preset_Study_Plans_Weekly_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Aggregate_Order_By = {
  avg?: Maybe<Preset_Study_Plans_Weekly_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Preset_Study_Plans_Weekly_Max_Order_By>;
  min?: Maybe<Preset_Study_Plans_Weekly_Min_Order_By>;
  stddev?: Maybe<Preset_Study_Plans_Weekly_Stddev_Order_By>;
  stddev_pop?: Maybe<Preset_Study_Plans_Weekly_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Preset_Study_Plans_Weekly_Stddev_Samp_Order_By>;
  sum?: Maybe<Preset_Study_Plans_Weekly_Sum_Order_By>;
  var_pop?: Maybe<Preset_Study_Plans_Weekly_Var_Pop_Order_By>;
  var_samp?: Maybe<Preset_Study_Plans_Weekly_Var_Samp_Order_By>;
  variance?: Maybe<Preset_Study_Plans_Weekly_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Arr_Rel_Insert_Input = {
  data: Array<Preset_Study_Plans_Weekly_Insert_Input>;
  on_conflict?: Maybe<Preset_Study_Plans_Weekly_On_Conflict>;
};

/** aggregate avg on columns */
export type Preset_Study_Plans_Weekly_Avg_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Avg_Order_By = {
  week?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "preset_study_plans_weekly". All fields are combined with a logical 'AND'. */
export type Preset_Study_Plans_Weekly_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Preset_Study_Plans_Weekly_Bool_Exp>>>;
  _not?: Maybe<Preset_Study_Plans_Weekly_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Preset_Study_Plans_Weekly_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  end_date?: Maybe<Timestamptz_Comparison_Exp>;
  lesson_id?: Maybe<String_Comparison_Exp>;
  preset_study_plan_id?: Maybe<String_Comparison_Exp>;
  preset_study_plan_weekly_id?: Maybe<String_Comparison_Exp>;
  preset_study_plans?: Maybe<Preset_Study_Plans_Bool_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  start_date?: Maybe<Timestamptz_Comparison_Exp>;
  topic?: Maybe<Topics_Bool_Exp>;
  topic_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  week?: Maybe<Smallint_Comparison_Exp>;
};

/** unique or primary key constraints on table "preset_study_plans_weekly" */
export enum Preset_Study_Plans_Weekly_Constraint {
  /** unique or primary key constraint */
  WeeklyPresetStudyPlansPk = 'weekly_preset_study_plans_pk',
  /** unique or primary key constraint */
  WeeklyPresetStudyPlansUn = 'weekly_preset_study_plans_un'
}

/** columns and relationships of "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  formatted_date?: Maybe<Scalars['String']>;
  formatted_day?: Maybe<Scalars['String']>;
  formatted_month?: Maybe<Scalars['String']>;
  formatted_year?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  topic?: Maybe<Topics>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week?: Maybe<Scalars['smallint']>;
};

/** aggregated selection of "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Aggregate = {
  aggregate?: Maybe<Preset_Study_Plans_Weekly_Format_Aggregate_Fields>;
  nodes: Array<Preset_Study_Plans_Weekly_Format>;
};

/** aggregate fields of "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Aggregate_Fields = {
  avg?: Maybe<Preset_Study_Plans_Weekly_Format_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Preset_Study_Plans_Weekly_Format_Max_Fields>;
  min?: Maybe<Preset_Study_Plans_Weekly_Format_Min_Fields>;
  stddev?: Maybe<Preset_Study_Plans_Weekly_Format_Stddev_Fields>;
  stddev_pop?: Maybe<Preset_Study_Plans_Weekly_Format_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Preset_Study_Plans_Weekly_Format_Stddev_Samp_Fields>;
  sum?: Maybe<Preset_Study_Plans_Weekly_Format_Sum_Fields>;
  var_pop?: Maybe<Preset_Study_Plans_Weekly_Format_Var_Pop_Fields>;
  var_samp?: Maybe<Preset_Study_Plans_Weekly_Format_Var_Samp_Fields>;
  variance?: Maybe<Preset_Study_Plans_Weekly_Format_Variance_Fields>;
};


/** aggregate fields of "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Preset_Study_Plans_Weekly_Format_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Aggregate_Order_By = {
  avg?: Maybe<Preset_Study_Plans_Weekly_Format_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Preset_Study_Plans_Weekly_Format_Max_Order_By>;
  min?: Maybe<Preset_Study_Plans_Weekly_Format_Min_Order_By>;
  stddev?: Maybe<Preset_Study_Plans_Weekly_Format_Stddev_Order_By>;
  stddev_pop?: Maybe<Preset_Study_Plans_Weekly_Format_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Preset_Study_Plans_Weekly_Format_Stddev_Samp_Order_By>;
  sum?: Maybe<Preset_Study_Plans_Weekly_Format_Sum_Order_By>;
  var_pop?: Maybe<Preset_Study_Plans_Weekly_Format_Var_Pop_Order_By>;
  var_samp?: Maybe<Preset_Study_Plans_Weekly_Format_Var_Samp_Order_By>;
  variance?: Maybe<Preset_Study_Plans_Weekly_Format_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Arr_Rel_Insert_Input = {
  data: Array<Preset_Study_Plans_Weekly_Format_Insert_Input>;
};

/** aggregate avg on columns */
export type Preset_Study_Plans_Weekly_Format_Avg_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Avg_Order_By = {
  week?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "preset_study_plans_weekly_format". All fields are combined with a logical 'AND'. */
export type Preset_Study_Plans_Weekly_Format_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Preset_Study_Plans_Weekly_Format_Bool_Exp>>>;
  _not?: Maybe<Preset_Study_Plans_Weekly_Format_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Preset_Study_Plans_Weekly_Format_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  end_date?: Maybe<Timestamptz_Comparison_Exp>;
  formatted_date?: Maybe<String_Comparison_Exp>;
  formatted_day?: Maybe<String_Comparison_Exp>;
  formatted_month?: Maybe<String_Comparison_Exp>;
  formatted_year?: Maybe<String_Comparison_Exp>;
  lesson_id?: Maybe<String_Comparison_Exp>;
  preset_study_plan_id?: Maybe<String_Comparison_Exp>;
  preset_study_plan_weekly_id?: Maybe<String_Comparison_Exp>;
  start_date?: Maybe<Timestamptz_Comparison_Exp>;
  topic?: Maybe<Topics_Bool_Exp>;
  topic_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  week?: Maybe<Smallint_Comparison_Exp>;
};

/** input type for incrementing integer column in table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Inc_Input = {
  week?: Maybe<Scalars['smallint']>;
};

/** input type for inserting data into table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  formatted_date?: Maybe<Scalars['String']>;
  formatted_day?: Maybe<Scalars['String']>;
  formatted_month?: Maybe<Scalars['String']>;
  formatted_year?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  topic?: Maybe<Topics_Obj_Rel_Insert_Input>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week?: Maybe<Scalars['smallint']>;
};

/** aggregate max on columns */
export type Preset_Study_Plans_Weekly_Format_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  formatted_date?: Maybe<Scalars['String']>;
  formatted_day?: Maybe<Scalars['String']>;
  formatted_month?: Maybe<Scalars['String']>;
  formatted_year?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week?: Maybe<Scalars['smallint']>;
};

/** order by max() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_date?: Maybe<Order_By>;
  formatted_date?: Maybe<Order_By>;
  formatted_day?: Maybe<Order_By>;
  formatted_month?: Maybe<Order_By>;
  formatted_year?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  preset_study_plan_id?: Maybe<Order_By>;
  preset_study_plan_weekly_id?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  week?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Preset_Study_Plans_Weekly_Format_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  formatted_date?: Maybe<Scalars['String']>;
  formatted_day?: Maybe<Scalars['String']>;
  formatted_month?: Maybe<Scalars['String']>;
  formatted_year?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week?: Maybe<Scalars['smallint']>;
};

/** order by min() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_date?: Maybe<Order_By>;
  formatted_date?: Maybe<Order_By>;
  formatted_day?: Maybe<Order_By>;
  formatted_month?: Maybe<Order_By>;
  formatted_year?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  preset_study_plan_id?: Maybe<Order_By>;
  preset_study_plan_weekly_id?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  week?: Maybe<Order_By>;
};

/** response of any mutation on the table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Preset_Study_Plans_Weekly_Format>;
};

/** input type for inserting object relation for remote table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Obj_Rel_Insert_Input = {
  data: Preset_Study_Plans_Weekly_Format_Insert_Input;
};

/** ordering options when selecting data from "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_date?: Maybe<Order_By>;
  formatted_date?: Maybe<Order_By>;
  formatted_day?: Maybe<Order_By>;
  formatted_month?: Maybe<Order_By>;
  formatted_year?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  preset_study_plan_id?: Maybe<Order_By>;
  preset_study_plan_weekly_id?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  topic?: Maybe<Topics_Order_By>;
  topic_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  week?: Maybe<Order_By>;
};

/** select columns of table "preset_study_plans_weekly_format" */
export enum Preset_Study_Plans_Weekly_Format_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  FormattedDate = 'formatted_date',
  /** column name */
  FormattedDay = 'formatted_day',
  /** column name */
  FormattedMonth = 'formatted_month',
  /** column name */
  FormattedYear = 'formatted_year',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  PresetStudyPlanWeeklyId = 'preset_study_plan_weekly_id',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Week = 'week'
}

/** input type for updating data in table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  formatted_date?: Maybe<Scalars['String']>;
  formatted_day?: Maybe<Scalars['String']>;
  formatted_month?: Maybe<Scalars['String']>;
  formatted_year?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week?: Maybe<Scalars['smallint']>;
};

/** aggregate stddev on columns */
export type Preset_Study_Plans_Weekly_Format_Stddev_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Stddev_Order_By = {
  week?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Preset_Study_Plans_Weekly_Format_Stddev_Pop_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Stddev_Pop_Order_By = {
  week?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Preset_Study_Plans_Weekly_Format_Stddev_Samp_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Stddev_Samp_Order_By = {
  week?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Preset_Study_Plans_Weekly_Format_Sum_Fields = {
  week?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Sum_Order_By = {
  week?: Maybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Preset_Study_Plans_Weekly_Format_Var_Pop_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Var_Pop_Order_By = {
  week?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Preset_Study_Plans_Weekly_Format_Var_Samp_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Var_Samp_Order_By = {
  week?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Preset_Study_Plans_Weekly_Format_Variance_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Variance_Order_By = {
  week?: Maybe<Order_By>;
};

/** input type for incrementing integer column in table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Inc_Input = {
  week?: Maybe<Scalars['smallint']>;
};

/** input type for inserting data into table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  preset_study_plans?: Maybe<Preset_Study_Plans_Obj_Rel_Insert_Input>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  topic?: Maybe<Topics_Obj_Rel_Insert_Input>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week?: Maybe<Scalars['smallint']>;
};

/** aggregate max on columns */
export type Preset_Study_Plans_Weekly_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week?: Maybe<Scalars['smallint']>;
};

/** order by max() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_date?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  preset_study_plan_id?: Maybe<Order_By>;
  preset_study_plan_weekly_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  week?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Preset_Study_Plans_Weekly_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week?: Maybe<Scalars['smallint']>;
};

/** order by min() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_date?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  preset_study_plan_id?: Maybe<Order_By>;
  preset_study_plan_weekly_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  week?: Maybe<Order_By>;
};

/** response of any mutation on the table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Preset_Study_Plans_Weekly>;
};

/** input type for inserting object relation for remote table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Obj_Rel_Insert_Input = {
  data: Preset_Study_Plans_Weekly_Insert_Input;
  on_conflict?: Maybe<Preset_Study_Plans_Weekly_On_Conflict>;
};

/** on conflict condition type for table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_On_Conflict = {
  constraint: Preset_Study_Plans_Weekly_Constraint;
  update_columns: Array<Preset_Study_Plans_Weekly_Update_Column>;
  where?: Maybe<Preset_Study_Plans_Weekly_Bool_Exp>;
};

/** ordering options when selecting data from "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_date?: Maybe<Order_By>;
  lesson_id?: Maybe<Order_By>;
  preset_study_plan_id?: Maybe<Order_By>;
  preset_study_plan_weekly_id?: Maybe<Order_By>;
  preset_study_plans?: Maybe<Preset_Study_Plans_Order_By>;
  resource_path?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  topic?: Maybe<Topics_Order_By>;
  topic_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  week?: Maybe<Order_By>;
};

/** primary key columns input for table: "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Pk_Columns_Input = {
  preset_study_plan_weekly_id: Scalars['String'];
};

/** select columns of table "preset_study_plans_weekly" */
export enum Preset_Study_Plans_Weekly_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  PresetStudyPlanWeeklyId = 'preset_study_plan_weekly_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Week = 'week'
}

/** input type for updating data in table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week?: Maybe<Scalars['smallint']>;
};

/** aggregate stddev on columns */
export type Preset_Study_Plans_Weekly_Stddev_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Stddev_Order_By = {
  week?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Preset_Study_Plans_Weekly_Stddev_Pop_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Stddev_Pop_Order_By = {
  week?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Preset_Study_Plans_Weekly_Stddev_Samp_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Stddev_Samp_Order_By = {
  week?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Preset_Study_Plans_Weekly_Sum_Fields = {
  week?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Sum_Order_By = {
  week?: Maybe<Order_By>;
};

/** update columns of table "preset_study_plans_weekly" */
export enum Preset_Study_Plans_Weekly_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  PresetStudyPlanWeeklyId = 'preset_study_plan_weekly_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Week = 'week'
}

/** aggregate var_pop on columns */
export type Preset_Study_Plans_Weekly_Var_Pop_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Var_Pop_Order_By = {
  week?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Preset_Study_Plans_Weekly_Var_Samp_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Var_Samp_Order_By = {
  week?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Preset_Study_Plans_Weekly_Variance_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Variance_Order_By = {
  week?: Maybe<Order_By>;
};

/** columns and relationships of "product" */
export type Product = {
  available_from: Scalars['timestamptz'];
  available_until: Scalars['timestamptz'];
  billing_schedule_id?: Maybe<Scalars['Int']>;
  created_at: Scalars['timestamptz'];
  custom_billing_period?: Maybe<Scalars['timestamptz']>;
  disable_pro_rating_flag: Scalars['Boolean'];
  id: Scalars['Int'];
  is_archived: Scalars['Boolean'];
  name: Scalars['String'];
  /** An array relationship */
  order_items: Array<Order_Item>;
  /** An aggregated array relationship */
  order_items_aggregate: Order_Item_Aggregate;
  /** An array relationship */
  product_fees: Array<Product_Fee>;
  /** An aggregated array relationship */
  product_fees_aggregate: Product_Fee_Aggregate;
  /** An array relationship */
  product_grades: Array<Product_Grade>;
  /** An aggregated array relationship */
  product_grades_aggregate: Product_Grade_Aggregate;
  /** An array relationship */
  product_locations: Array<Product_Location>;
  /** An aggregated array relationship */
  product_locations_aggregate: Product_Location_Aggregate;
  /** An array relationship */
  product_materials: Array<Product_Material>;
  /** An aggregated array relationship */
  product_materials_aggregate: Product_Material_Aggregate;
  /** An array relationship */
  product_packages: Array<Product_Package>;
  /** An aggregated array relationship */
  product_packages_aggregate: Product_Package_Aggregate;
  /** An array relationship */
  product_prices: Array<Product_Price>;
  /** An aggregated array relationship */
  product_prices_aggregate: Product_Price_Aggregate;
  product_type: Scalars['String'];
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  tax_id?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "product" */
export type ProductOrder_ItemsArgs = {
  distinct_on?: Maybe<Array<Order_Item_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Item_Order_By>>;
  where?: Maybe<Order_Item_Bool_Exp>;
};


/** columns and relationships of "product" */
export type ProductOrder_Items_AggregateArgs = {
  distinct_on?: Maybe<Array<Order_Item_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Item_Order_By>>;
  where?: Maybe<Order_Item_Bool_Exp>;
};


/** columns and relationships of "product" */
export type ProductProduct_FeesArgs = {
  distinct_on?: Maybe<Array<Product_Fee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Fee_Order_By>>;
  where?: Maybe<Product_Fee_Bool_Exp>;
};


/** columns and relationships of "product" */
export type ProductProduct_Fees_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Fee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Fee_Order_By>>;
  where?: Maybe<Product_Fee_Bool_Exp>;
};


/** columns and relationships of "product" */
export type ProductProduct_GradesArgs = {
  distinct_on?: Maybe<Array<Product_Grade_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Grade_Order_By>>;
  where?: Maybe<Product_Grade_Bool_Exp>;
};


/** columns and relationships of "product" */
export type ProductProduct_Grades_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Grade_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Grade_Order_By>>;
  where?: Maybe<Product_Grade_Bool_Exp>;
};


/** columns and relationships of "product" */
export type ProductProduct_LocationsArgs = {
  distinct_on?: Maybe<Array<Product_Location_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Location_Order_By>>;
  where?: Maybe<Product_Location_Bool_Exp>;
};


/** columns and relationships of "product" */
export type ProductProduct_Locations_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Location_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Location_Order_By>>;
  where?: Maybe<Product_Location_Bool_Exp>;
};


/** columns and relationships of "product" */
export type ProductProduct_MaterialsArgs = {
  distinct_on?: Maybe<Array<Product_Material_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Material_Order_By>>;
  where?: Maybe<Product_Material_Bool_Exp>;
};


/** columns and relationships of "product" */
export type ProductProduct_Materials_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Material_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Material_Order_By>>;
  where?: Maybe<Product_Material_Bool_Exp>;
};


/** columns and relationships of "product" */
export type ProductProduct_PackagesArgs = {
  distinct_on?: Maybe<Array<Product_Package_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Package_Order_By>>;
  where?: Maybe<Product_Package_Bool_Exp>;
};


/** columns and relationships of "product" */
export type ProductProduct_Packages_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Package_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Package_Order_By>>;
  where?: Maybe<Product_Package_Bool_Exp>;
};


/** columns and relationships of "product" */
export type ProductProduct_PricesArgs = {
  distinct_on?: Maybe<Array<Product_Price_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Price_Order_By>>;
  where?: Maybe<Product_Price_Bool_Exp>;
};


/** columns and relationships of "product" */
export type ProductProduct_Prices_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Price_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Price_Order_By>>;
  where?: Maybe<Product_Price_Bool_Exp>;
};

/** aggregated selection of "product" */
export type Product_Aggregate = {
  aggregate?: Maybe<Product_Aggregate_Fields>;
  nodes: Array<Product>;
};

/** aggregate fields of "product" */
export type Product_Aggregate_Fields = {
  avg?: Maybe<Product_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Product_Max_Fields>;
  min?: Maybe<Product_Min_Fields>;
  stddev?: Maybe<Product_Stddev_Fields>;
  stddev_pop?: Maybe<Product_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Product_Stddev_Samp_Fields>;
  sum?: Maybe<Product_Sum_Fields>;
  var_pop?: Maybe<Product_Var_Pop_Fields>;
  var_samp?: Maybe<Product_Var_Samp_Fields>;
  variance?: Maybe<Product_Variance_Fields>;
};


/** aggregate fields of "product" */
export type Product_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Product_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "product" */
export type Product_Aggregate_Order_By = {
  avg?: Maybe<Product_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Product_Max_Order_By>;
  min?: Maybe<Product_Min_Order_By>;
  stddev?: Maybe<Product_Stddev_Order_By>;
  stddev_pop?: Maybe<Product_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Product_Stddev_Samp_Order_By>;
  sum?: Maybe<Product_Sum_Order_By>;
  var_pop?: Maybe<Product_Var_Pop_Order_By>;
  var_samp?: Maybe<Product_Var_Samp_Order_By>;
  variance?: Maybe<Product_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "product" */
export type Product_Arr_Rel_Insert_Input = {
  data: Array<Product_Insert_Input>;
  on_conflict?: Maybe<Product_On_Conflict>;
};

/** aggregate avg on columns */
export type Product_Avg_Fields = {
  billing_schedule_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tax_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "product" */
export type Product_Avg_Order_By = {
  billing_schedule_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "product". All fields are combined with a logical 'AND'. */
export type Product_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Product_Bool_Exp>>>;
  _not?: Maybe<Product_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Product_Bool_Exp>>>;
  available_from?: Maybe<Timestamptz_Comparison_Exp>;
  available_until?: Maybe<Timestamptz_Comparison_Exp>;
  billing_schedule_id?: Maybe<Int_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  custom_billing_period?: Maybe<Timestamptz_Comparison_Exp>;
  disable_pro_rating_flag?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  is_archived?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order_items?: Maybe<Order_Item_Bool_Exp>;
  product_fees?: Maybe<Product_Fee_Bool_Exp>;
  product_grades?: Maybe<Product_Grade_Bool_Exp>;
  product_locations?: Maybe<Product_Location_Bool_Exp>;
  product_materials?: Maybe<Product_Material_Bool_Exp>;
  product_packages?: Maybe<Product_Package_Bool_Exp>;
  product_prices?: Maybe<Product_Price_Bool_Exp>;
  product_type?: Maybe<String_Comparison_Exp>;
  remarks?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  tax_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "product" */
export enum Product_Constraint {
  /** unique or primary key constraint */
  ProductPk = 'product_pk'
}

/** columns and relationships of "product_fee" */
export type Product_Fee = {
  fee_type: Scalars['String'];
  id: Scalars['Int'];
  /** An object relationship */
  product: Product;
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "product_fee" */
export type Product_Fee_Aggregate = {
  aggregate?: Maybe<Product_Fee_Aggregate_Fields>;
  nodes: Array<Product_Fee>;
};

/** aggregate fields of "product_fee" */
export type Product_Fee_Aggregate_Fields = {
  avg?: Maybe<Product_Fee_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Product_Fee_Max_Fields>;
  min?: Maybe<Product_Fee_Min_Fields>;
  stddev?: Maybe<Product_Fee_Stddev_Fields>;
  stddev_pop?: Maybe<Product_Fee_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Product_Fee_Stddev_Samp_Fields>;
  sum?: Maybe<Product_Fee_Sum_Fields>;
  var_pop?: Maybe<Product_Fee_Var_Pop_Fields>;
  var_samp?: Maybe<Product_Fee_Var_Samp_Fields>;
  variance?: Maybe<Product_Fee_Variance_Fields>;
};


/** aggregate fields of "product_fee" */
export type Product_Fee_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Product_Fee_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "product_fee" */
export type Product_Fee_Aggregate_Order_By = {
  avg?: Maybe<Product_Fee_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Product_Fee_Max_Order_By>;
  min?: Maybe<Product_Fee_Min_Order_By>;
  stddev?: Maybe<Product_Fee_Stddev_Order_By>;
  stddev_pop?: Maybe<Product_Fee_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Product_Fee_Stddev_Samp_Order_By>;
  sum?: Maybe<Product_Fee_Sum_Order_By>;
  var_pop?: Maybe<Product_Fee_Var_Pop_Order_By>;
  var_samp?: Maybe<Product_Fee_Var_Samp_Order_By>;
  variance?: Maybe<Product_Fee_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "product_fee" */
export type Product_Fee_Arr_Rel_Insert_Input = {
  data: Array<Product_Fee_Insert_Input>;
  on_conflict?: Maybe<Product_Fee_On_Conflict>;
};

/** aggregate avg on columns */
export type Product_Fee_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "product_fee" */
export type Product_Fee_Avg_Order_By = {
  id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "product_fee". All fields are combined with a logical 'AND'. */
export type Product_Fee_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Product_Fee_Bool_Exp>>>;
  _not?: Maybe<Product_Fee_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Product_Fee_Bool_Exp>>>;
  fee_type?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  product?: Maybe<Product_Bool_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "product_fee" */
export enum Product_Fee_Constraint {
  /** unique or primary key constraint */
  ProductFeePk = 'product_fee_pk'
}

/** input type for incrementing integer column in table "product_fee" */
export type Product_Fee_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "product_fee" */
export type Product_Fee_Insert_Input = {
  fee_type?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  product?: Maybe<Product_Obj_Rel_Insert_Input>;
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Product_Fee_Max_Fields = {
  fee_type?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "product_fee" */
export type Product_Fee_Max_Order_By = {
  fee_type?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Product_Fee_Min_Fields = {
  fee_type?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "product_fee" */
export type Product_Fee_Min_Order_By = {
  fee_type?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** response of any mutation on the table "product_fee" */
export type Product_Fee_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Product_Fee>;
};

/** input type for inserting object relation for remote table "product_fee" */
export type Product_Fee_Obj_Rel_Insert_Input = {
  data: Product_Fee_Insert_Input;
  on_conflict?: Maybe<Product_Fee_On_Conflict>;
};

/** on conflict condition type for table "product_fee" */
export type Product_Fee_On_Conflict = {
  constraint: Product_Fee_Constraint;
  update_columns: Array<Product_Fee_Update_Column>;
  where?: Maybe<Product_Fee_Bool_Exp>;
};

/** ordering options when selecting data from "product_fee" */
export type Product_Fee_Order_By = {
  fee_type?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  product?: Maybe<Product_Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** primary key columns input for table: "product_fee" */
export type Product_Fee_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "product_fee" */
export enum Product_Fee_Select_Column {
  /** column name */
  FeeType = 'fee_type',
  /** column name */
  Id = 'id',
  /** column name */
  ResourcePath = 'resource_path'
}

/** input type for updating data in table "product_fee" */
export type Product_Fee_Set_Input = {
  fee_type?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Product_Fee_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "product_fee" */
export type Product_Fee_Stddev_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Product_Fee_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "product_fee" */
export type Product_Fee_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Product_Fee_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "product_fee" */
export type Product_Fee_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Product_Fee_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "product_fee" */
export type Product_Fee_Sum_Order_By = {
  id?: Maybe<Order_By>;
};

/** update columns of table "product_fee" */
export enum Product_Fee_Update_Column {
  /** column name */
  FeeType = 'fee_type',
  /** column name */
  Id = 'id',
  /** column name */
  ResourcePath = 'resource_path'
}

/** aggregate var_pop on columns */
export type Product_Fee_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "product_fee" */
export type Product_Fee_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Product_Fee_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "product_fee" */
export type Product_Fee_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Product_Fee_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "product_fee" */
export type Product_Fee_Variance_Order_By = {
  id?: Maybe<Order_By>;
};

/** columns and relationships of "product_grade" */
export type Product_Grade = {
  created_at: Scalars['timestamptz'];
  grade_id: Scalars['Int'];
  /** An object relationship */
  product: Product;
  product_id: Scalars['Int'];
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "product_grade" */
export type Product_Grade_Aggregate = {
  aggregate?: Maybe<Product_Grade_Aggregate_Fields>;
  nodes: Array<Product_Grade>;
};

/** aggregate fields of "product_grade" */
export type Product_Grade_Aggregate_Fields = {
  avg?: Maybe<Product_Grade_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Product_Grade_Max_Fields>;
  min?: Maybe<Product_Grade_Min_Fields>;
  stddev?: Maybe<Product_Grade_Stddev_Fields>;
  stddev_pop?: Maybe<Product_Grade_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Product_Grade_Stddev_Samp_Fields>;
  sum?: Maybe<Product_Grade_Sum_Fields>;
  var_pop?: Maybe<Product_Grade_Var_Pop_Fields>;
  var_samp?: Maybe<Product_Grade_Var_Samp_Fields>;
  variance?: Maybe<Product_Grade_Variance_Fields>;
};


/** aggregate fields of "product_grade" */
export type Product_Grade_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Product_Grade_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "product_grade" */
export type Product_Grade_Aggregate_Order_By = {
  avg?: Maybe<Product_Grade_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Product_Grade_Max_Order_By>;
  min?: Maybe<Product_Grade_Min_Order_By>;
  stddev?: Maybe<Product_Grade_Stddev_Order_By>;
  stddev_pop?: Maybe<Product_Grade_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Product_Grade_Stddev_Samp_Order_By>;
  sum?: Maybe<Product_Grade_Sum_Order_By>;
  var_pop?: Maybe<Product_Grade_Var_Pop_Order_By>;
  var_samp?: Maybe<Product_Grade_Var_Samp_Order_By>;
  variance?: Maybe<Product_Grade_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "product_grade" */
export type Product_Grade_Arr_Rel_Insert_Input = {
  data: Array<Product_Grade_Insert_Input>;
  on_conflict?: Maybe<Product_Grade_On_Conflict>;
};

/** aggregate avg on columns */
export type Product_Grade_Avg_Fields = {
  grade_id?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "product_grade" */
export type Product_Grade_Avg_Order_By = {
  grade_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "product_grade". All fields are combined with a logical 'AND'. */
export type Product_Grade_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Product_Grade_Bool_Exp>>>;
  _not?: Maybe<Product_Grade_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Product_Grade_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  grade_id?: Maybe<Int_Comparison_Exp>;
  product?: Maybe<Product_Bool_Exp>;
  product_id?: Maybe<Int_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "product_grade" */
export enum Product_Grade_Constraint {
  /** unique or primary key constraint */
  ProductGradePk = 'product_grade_pk'
}

/** input type for incrementing integer column in table "product_grade" */
export type Product_Grade_Inc_Input = {
  grade_id?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "product_grade" */
export type Product_Grade_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  grade_id?: Maybe<Scalars['Int']>;
  product?: Maybe<Product_Obj_Rel_Insert_Input>;
  product_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Product_Grade_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  grade_id?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "product_grade" */
export type Product_Grade_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  grade_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Product_Grade_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  grade_id?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "product_grade" */
export type Product_Grade_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  grade_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** response of any mutation on the table "product_grade" */
export type Product_Grade_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Product_Grade>;
};

/** input type for inserting object relation for remote table "product_grade" */
export type Product_Grade_Obj_Rel_Insert_Input = {
  data: Product_Grade_Insert_Input;
  on_conflict?: Maybe<Product_Grade_On_Conflict>;
};

/** on conflict condition type for table "product_grade" */
export type Product_Grade_On_Conflict = {
  constraint: Product_Grade_Constraint;
  update_columns: Array<Product_Grade_Update_Column>;
  where?: Maybe<Product_Grade_Bool_Exp>;
};

/** ordering options when selecting data from "product_grade" */
export type Product_Grade_Order_By = {
  created_at?: Maybe<Order_By>;
  grade_id?: Maybe<Order_By>;
  product?: Maybe<Product_Order_By>;
  product_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** primary key columns input for table: "product_grade" */
export type Product_Grade_Pk_Columns_Input = {
  grade_id: Scalars['Int'];
  product_id: Scalars['Int'];
};

/** select columns of table "product_grade" */
export enum Product_Grade_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  GradeId = 'grade_id',
  /** column name */
  ProductId = 'product_id',
  /** column name */
  ResourcePath = 'resource_path'
}

/** input type for updating data in table "product_grade" */
export type Product_Grade_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  grade_id?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Product_Grade_Stddev_Fields = {
  grade_id?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "product_grade" */
export type Product_Grade_Stddev_Order_By = {
  grade_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Product_Grade_Stddev_Pop_Fields = {
  grade_id?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "product_grade" */
export type Product_Grade_Stddev_Pop_Order_By = {
  grade_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Product_Grade_Stddev_Samp_Fields = {
  grade_id?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "product_grade" */
export type Product_Grade_Stddev_Samp_Order_By = {
  grade_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Product_Grade_Sum_Fields = {
  grade_id?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "product_grade" */
export type Product_Grade_Sum_Order_By = {
  grade_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
};

/** update columns of table "product_grade" */
export enum Product_Grade_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  GradeId = 'grade_id',
  /** column name */
  ProductId = 'product_id',
  /** column name */
  ResourcePath = 'resource_path'
}

/** aggregate var_pop on columns */
export type Product_Grade_Var_Pop_Fields = {
  grade_id?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "product_grade" */
export type Product_Grade_Var_Pop_Order_By = {
  grade_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Product_Grade_Var_Samp_Fields = {
  grade_id?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "product_grade" */
export type Product_Grade_Var_Samp_Order_By = {
  grade_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Product_Grade_Variance_Fields = {
  grade_id?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "product_grade" */
export type Product_Grade_Variance_Order_By = {
  grade_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
};

/** input type for incrementing integer column in table "product" */
export type Product_Inc_Input = {
  billing_schedule_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  tax_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "product" */
export type Product_Insert_Input = {
  available_from?: Maybe<Scalars['timestamptz']>;
  available_until?: Maybe<Scalars['timestamptz']>;
  billing_schedule_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  custom_billing_period?: Maybe<Scalars['timestamptz']>;
  disable_pro_rating_flag?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  is_archived?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order_items?: Maybe<Order_Item_Arr_Rel_Insert_Input>;
  product_fees?: Maybe<Product_Fee_Arr_Rel_Insert_Input>;
  product_grades?: Maybe<Product_Grade_Arr_Rel_Insert_Input>;
  product_locations?: Maybe<Product_Location_Arr_Rel_Insert_Input>;
  product_materials?: Maybe<Product_Material_Arr_Rel_Insert_Input>;
  product_packages?: Maybe<Product_Package_Arr_Rel_Insert_Input>;
  product_prices?: Maybe<Product_Price_Arr_Rel_Insert_Input>;
  product_type?: Maybe<Scalars['String']>;
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  tax_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** columns and relationships of "product_location" */
export type Product_Location = {
  created_at: Scalars['timestamptz'];
  location_id: Scalars['String'];
  /** An object relationship */
  product: Product;
  product_id: Scalars['Int'];
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "product_location" */
export type Product_Location_Aggregate = {
  aggregate?: Maybe<Product_Location_Aggregate_Fields>;
  nodes: Array<Product_Location>;
};

/** aggregate fields of "product_location" */
export type Product_Location_Aggregate_Fields = {
  avg?: Maybe<Product_Location_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Product_Location_Max_Fields>;
  min?: Maybe<Product_Location_Min_Fields>;
  stddev?: Maybe<Product_Location_Stddev_Fields>;
  stddev_pop?: Maybe<Product_Location_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Product_Location_Stddev_Samp_Fields>;
  sum?: Maybe<Product_Location_Sum_Fields>;
  var_pop?: Maybe<Product_Location_Var_Pop_Fields>;
  var_samp?: Maybe<Product_Location_Var_Samp_Fields>;
  variance?: Maybe<Product_Location_Variance_Fields>;
};


/** aggregate fields of "product_location" */
export type Product_Location_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Product_Location_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "product_location" */
export type Product_Location_Aggregate_Order_By = {
  avg?: Maybe<Product_Location_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Product_Location_Max_Order_By>;
  min?: Maybe<Product_Location_Min_Order_By>;
  stddev?: Maybe<Product_Location_Stddev_Order_By>;
  stddev_pop?: Maybe<Product_Location_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Product_Location_Stddev_Samp_Order_By>;
  sum?: Maybe<Product_Location_Sum_Order_By>;
  var_pop?: Maybe<Product_Location_Var_Pop_Order_By>;
  var_samp?: Maybe<Product_Location_Var_Samp_Order_By>;
  variance?: Maybe<Product_Location_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "product_location" */
export type Product_Location_Arr_Rel_Insert_Input = {
  data: Array<Product_Location_Insert_Input>;
  on_conflict?: Maybe<Product_Location_On_Conflict>;
};

/** aggregate avg on columns */
export type Product_Location_Avg_Fields = {
  product_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "product_location" */
export type Product_Location_Avg_Order_By = {
  product_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "product_location". All fields are combined with a logical 'AND'. */
export type Product_Location_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Product_Location_Bool_Exp>>>;
  _not?: Maybe<Product_Location_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Product_Location_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  location_id?: Maybe<String_Comparison_Exp>;
  product?: Maybe<Product_Bool_Exp>;
  product_id?: Maybe<Int_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "product_location" */
export enum Product_Location_Constraint {
  /** unique or primary key constraint */
  ProductLocationPk = 'product_location_pk'
}

/** input type for incrementing integer column in table "product_location" */
export type Product_Location_Inc_Input = {
  product_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "product_location" */
export type Product_Location_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  product?: Maybe<Product_Obj_Rel_Insert_Input>;
  product_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Product_Location_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  product_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "product_location" */
export type Product_Location_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  location_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Product_Location_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  product_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "product_location" */
export type Product_Location_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  location_id?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** response of any mutation on the table "product_location" */
export type Product_Location_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Product_Location>;
};

/** input type for inserting object relation for remote table "product_location" */
export type Product_Location_Obj_Rel_Insert_Input = {
  data: Product_Location_Insert_Input;
  on_conflict?: Maybe<Product_Location_On_Conflict>;
};

/** on conflict condition type for table "product_location" */
export type Product_Location_On_Conflict = {
  constraint: Product_Location_Constraint;
  update_columns: Array<Product_Location_Update_Column>;
  where?: Maybe<Product_Location_Bool_Exp>;
};

/** ordering options when selecting data from "product_location" */
export type Product_Location_Order_By = {
  created_at?: Maybe<Order_By>;
  location_id?: Maybe<Order_By>;
  product?: Maybe<Product_Order_By>;
  product_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** primary key columns input for table: "product_location" */
export type Product_Location_Pk_Columns_Input = {
  location_id: Scalars['String'];
  product_id: Scalars['Int'];
};

/** select columns of table "product_location" */
export enum Product_Location_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  ProductId = 'product_id',
  /** column name */
  ResourcePath = 'resource_path'
}

/** input type for updating data in table "product_location" */
export type Product_Location_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  product_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Product_Location_Stddev_Fields = {
  product_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "product_location" */
export type Product_Location_Stddev_Order_By = {
  product_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Product_Location_Stddev_Pop_Fields = {
  product_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "product_location" */
export type Product_Location_Stddev_Pop_Order_By = {
  product_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Product_Location_Stddev_Samp_Fields = {
  product_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "product_location" */
export type Product_Location_Stddev_Samp_Order_By = {
  product_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Product_Location_Sum_Fields = {
  product_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "product_location" */
export type Product_Location_Sum_Order_By = {
  product_id?: Maybe<Order_By>;
};

/** update columns of table "product_location" */
export enum Product_Location_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  ProductId = 'product_id',
  /** column name */
  ResourcePath = 'resource_path'
}

/** aggregate var_pop on columns */
export type Product_Location_Var_Pop_Fields = {
  product_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "product_location" */
export type Product_Location_Var_Pop_Order_By = {
  product_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Product_Location_Var_Samp_Fields = {
  product_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "product_location" */
export type Product_Location_Var_Samp_Order_By = {
  product_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Product_Location_Variance_Fields = {
  product_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "product_location" */
export type Product_Location_Variance_Order_By = {
  product_id?: Maybe<Order_By>;
};

/** columns and relationships of "product_material" */
export type Product_Material = {
  custom_billing_date?: Maybe<Scalars['timestamptz']>;
  id: Scalars['Int'];
  material_type: Scalars['String'];
  /** An object relationship */
  product: Product;
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "product_material" */
export type Product_Material_Aggregate = {
  aggregate?: Maybe<Product_Material_Aggregate_Fields>;
  nodes: Array<Product_Material>;
};

/** aggregate fields of "product_material" */
export type Product_Material_Aggregate_Fields = {
  avg?: Maybe<Product_Material_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Product_Material_Max_Fields>;
  min?: Maybe<Product_Material_Min_Fields>;
  stddev?: Maybe<Product_Material_Stddev_Fields>;
  stddev_pop?: Maybe<Product_Material_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Product_Material_Stddev_Samp_Fields>;
  sum?: Maybe<Product_Material_Sum_Fields>;
  var_pop?: Maybe<Product_Material_Var_Pop_Fields>;
  var_samp?: Maybe<Product_Material_Var_Samp_Fields>;
  variance?: Maybe<Product_Material_Variance_Fields>;
};


/** aggregate fields of "product_material" */
export type Product_Material_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Product_Material_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "product_material" */
export type Product_Material_Aggregate_Order_By = {
  avg?: Maybe<Product_Material_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Product_Material_Max_Order_By>;
  min?: Maybe<Product_Material_Min_Order_By>;
  stddev?: Maybe<Product_Material_Stddev_Order_By>;
  stddev_pop?: Maybe<Product_Material_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Product_Material_Stddev_Samp_Order_By>;
  sum?: Maybe<Product_Material_Sum_Order_By>;
  var_pop?: Maybe<Product_Material_Var_Pop_Order_By>;
  var_samp?: Maybe<Product_Material_Var_Samp_Order_By>;
  variance?: Maybe<Product_Material_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "product_material" */
export type Product_Material_Arr_Rel_Insert_Input = {
  data: Array<Product_Material_Insert_Input>;
  on_conflict?: Maybe<Product_Material_On_Conflict>;
};

/** aggregate avg on columns */
export type Product_Material_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "product_material" */
export type Product_Material_Avg_Order_By = {
  id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "product_material". All fields are combined with a logical 'AND'. */
export type Product_Material_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Product_Material_Bool_Exp>>>;
  _not?: Maybe<Product_Material_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Product_Material_Bool_Exp>>>;
  custom_billing_date?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  material_type?: Maybe<String_Comparison_Exp>;
  product?: Maybe<Product_Bool_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "product_material" */
export enum Product_Material_Constraint {
  /** unique or primary key constraint */
  ProductMaterialPk = 'product_material_pk'
}

/** input type for incrementing integer column in table "product_material" */
export type Product_Material_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "product_material" */
export type Product_Material_Insert_Input = {
  custom_billing_date?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  material_type?: Maybe<Scalars['String']>;
  product?: Maybe<Product_Obj_Rel_Insert_Input>;
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Product_Material_Max_Fields = {
  custom_billing_date?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  material_type?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "product_material" */
export type Product_Material_Max_Order_By = {
  custom_billing_date?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  material_type?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Product_Material_Min_Fields = {
  custom_billing_date?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  material_type?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "product_material" */
export type Product_Material_Min_Order_By = {
  custom_billing_date?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  material_type?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** response of any mutation on the table "product_material" */
export type Product_Material_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Product_Material>;
};

/** input type for inserting object relation for remote table "product_material" */
export type Product_Material_Obj_Rel_Insert_Input = {
  data: Product_Material_Insert_Input;
  on_conflict?: Maybe<Product_Material_On_Conflict>;
};

/** on conflict condition type for table "product_material" */
export type Product_Material_On_Conflict = {
  constraint: Product_Material_Constraint;
  update_columns: Array<Product_Material_Update_Column>;
  where?: Maybe<Product_Material_Bool_Exp>;
};

/** ordering options when selecting data from "product_material" */
export type Product_Material_Order_By = {
  custom_billing_date?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  material_type?: Maybe<Order_By>;
  product?: Maybe<Product_Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** primary key columns input for table: "product_material" */
export type Product_Material_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "product_material" */
export enum Product_Material_Select_Column {
  /** column name */
  CustomBillingDate = 'custom_billing_date',
  /** column name */
  Id = 'id',
  /** column name */
  MaterialType = 'material_type',
  /** column name */
  ResourcePath = 'resource_path'
}

/** input type for updating data in table "product_material" */
export type Product_Material_Set_Input = {
  custom_billing_date?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  material_type?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Product_Material_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "product_material" */
export type Product_Material_Stddev_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Product_Material_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "product_material" */
export type Product_Material_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Product_Material_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "product_material" */
export type Product_Material_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Product_Material_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "product_material" */
export type Product_Material_Sum_Order_By = {
  id?: Maybe<Order_By>;
};

/** update columns of table "product_material" */
export enum Product_Material_Update_Column {
  /** column name */
  CustomBillingDate = 'custom_billing_date',
  /** column name */
  Id = 'id',
  /** column name */
  MaterialType = 'material_type',
  /** column name */
  ResourcePath = 'resource_path'
}

/** aggregate var_pop on columns */
export type Product_Material_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "product_material" */
export type Product_Material_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Product_Material_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "product_material" */
export type Product_Material_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Product_Material_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "product_material" */
export type Product_Material_Variance_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate max on columns */
export type Product_Max_Fields = {
  available_from?: Maybe<Scalars['timestamptz']>;
  available_until?: Maybe<Scalars['timestamptz']>;
  billing_schedule_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  custom_billing_period?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  product_type?: Maybe<Scalars['String']>;
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  tax_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "product" */
export type Product_Max_Order_By = {
  available_from?: Maybe<Order_By>;
  available_until?: Maybe<Order_By>;
  billing_schedule_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  custom_billing_period?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  product_type?: Maybe<Order_By>;
  remarks?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Product_Min_Fields = {
  available_from?: Maybe<Scalars['timestamptz']>;
  available_until?: Maybe<Scalars['timestamptz']>;
  billing_schedule_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  custom_billing_period?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  product_type?: Maybe<Scalars['String']>;
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  tax_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "product" */
export type Product_Min_Order_By = {
  available_from?: Maybe<Order_By>;
  available_until?: Maybe<Order_By>;
  billing_schedule_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  custom_billing_period?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  product_type?: Maybe<Order_By>;
  remarks?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "product" */
export type Product_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Product>;
};

/** input type for inserting object relation for remote table "product" */
export type Product_Obj_Rel_Insert_Input = {
  data: Product_Insert_Input;
  on_conflict?: Maybe<Product_On_Conflict>;
};

/** on conflict condition type for table "product" */
export type Product_On_Conflict = {
  constraint: Product_Constraint;
  update_columns: Array<Product_Update_Column>;
  where?: Maybe<Product_Bool_Exp>;
};

/** ordering options when selecting data from "product" */
export type Product_Order_By = {
  available_from?: Maybe<Order_By>;
  available_until?: Maybe<Order_By>;
  billing_schedule_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  custom_billing_period?: Maybe<Order_By>;
  disable_pro_rating_flag?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_archived?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order_items_aggregate?: Maybe<Order_Item_Aggregate_Order_By>;
  product_fees_aggregate?: Maybe<Product_Fee_Aggregate_Order_By>;
  product_grades_aggregate?: Maybe<Product_Grade_Aggregate_Order_By>;
  product_locations_aggregate?: Maybe<Product_Location_Aggregate_Order_By>;
  product_materials_aggregate?: Maybe<Product_Material_Aggregate_Order_By>;
  product_packages_aggregate?: Maybe<Product_Package_Aggregate_Order_By>;
  product_prices_aggregate?: Maybe<Product_Price_Aggregate_Order_By>;
  product_type?: Maybe<Order_By>;
  remarks?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** columns and relationships of "product_package" */
export type Product_Package = {
  id: Scalars['Int'];
  max_slot: Scalars['Int'];
  package_end_date?: Maybe<Scalars['timestamptz']>;
  package_start_date?: Maybe<Scalars['timestamptz']>;
  package_type: Scalars['String'];
  /** An object relationship */
  product: Product;
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "product_package" */
export type Product_Package_Aggregate = {
  aggregate?: Maybe<Product_Package_Aggregate_Fields>;
  nodes: Array<Product_Package>;
};

/** aggregate fields of "product_package" */
export type Product_Package_Aggregate_Fields = {
  avg?: Maybe<Product_Package_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Product_Package_Max_Fields>;
  min?: Maybe<Product_Package_Min_Fields>;
  stddev?: Maybe<Product_Package_Stddev_Fields>;
  stddev_pop?: Maybe<Product_Package_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Product_Package_Stddev_Samp_Fields>;
  sum?: Maybe<Product_Package_Sum_Fields>;
  var_pop?: Maybe<Product_Package_Var_Pop_Fields>;
  var_samp?: Maybe<Product_Package_Var_Samp_Fields>;
  variance?: Maybe<Product_Package_Variance_Fields>;
};


/** aggregate fields of "product_package" */
export type Product_Package_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Product_Package_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "product_package" */
export type Product_Package_Aggregate_Order_By = {
  avg?: Maybe<Product_Package_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Product_Package_Max_Order_By>;
  min?: Maybe<Product_Package_Min_Order_By>;
  stddev?: Maybe<Product_Package_Stddev_Order_By>;
  stddev_pop?: Maybe<Product_Package_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Product_Package_Stddev_Samp_Order_By>;
  sum?: Maybe<Product_Package_Sum_Order_By>;
  var_pop?: Maybe<Product_Package_Var_Pop_Order_By>;
  var_samp?: Maybe<Product_Package_Var_Samp_Order_By>;
  variance?: Maybe<Product_Package_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "product_package" */
export type Product_Package_Arr_Rel_Insert_Input = {
  data: Array<Product_Package_Insert_Input>;
  on_conflict?: Maybe<Product_Package_On_Conflict>;
};

/** aggregate avg on columns */
export type Product_Package_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
  max_slot?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "product_package" */
export type Product_Package_Avg_Order_By = {
  id?: Maybe<Order_By>;
  max_slot?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "product_package". All fields are combined with a logical 'AND'. */
export type Product_Package_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Product_Package_Bool_Exp>>>;
  _not?: Maybe<Product_Package_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Product_Package_Bool_Exp>>>;
  id?: Maybe<Int_Comparison_Exp>;
  max_slot?: Maybe<Int_Comparison_Exp>;
  package_end_date?: Maybe<Timestamptz_Comparison_Exp>;
  package_start_date?: Maybe<Timestamptz_Comparison_Exp>;
  package_type?: Maybe<String_Comparison_Exp>;
  product?: Maybe<Product_Bool_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "product_package" */
export enum Product_Package_Constraint {
  /** unique or primary key constraint */
  ProductPackagePk = 'product_package_pk'
}

/** input type for incrementing integer column in table "product_package" */
export type Product_Package_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  max_slot?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "product_package" */
export type Product_Package_Insert_Input = {
  id?: Maybe<Scalars['Int']>;
  max_slot?: Maybe<Scalars['Int']>;
  package_end_date?: Maybe<Scalars['timestamptz']>;
  package_start_date?: Maybe<Scalars['timestamptz']>;
  package_type?: Maybe<Scalars['String']>;
  product?: Maybe<Product_Obj_Rel_Insert_Input>;
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Product_Package_Max_Fields = {
  id?: Maybe<Scalars['Int']>;
  max_slot?: Maybe<Scalars['Int']>;
  package_end_date?: Maybe<Scalars['timestamptz']>;
  package_start_date?: Maybe<Scalars['timestamptz']>;
  package_type?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "product_package" */
export type Product_Package_Max_Order_By = {
  id?: Maybe<Order_By>;
  max_slot?: Maybe<Order_By>;
  package_end_date?: Maybe<Order_By>;
  package_start_date?: Maybe<Order_By>;
  package_type?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Product_Package_Min_Fields = {
  id?: Maybe<Scalars['Int']>;
  max_slot?: Maybe<Scalars['Int']>;
  package_end_date?: Maybe<Scalars['timestamptz']>;
  package_start_date?: Maybe<Scalars['timestamptz']>;
  package_type?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "product_package" */
export type Product_Package_Min_Order_By = {
  id?: Maybe<Order_By>;
  max_slot?: Maybe<Order_By>;
  package_end_date?: Maybe<Order_By>;
  package_start_date?: Maybe<Order_By>;
  package_type?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** response of any mutation on the table "product_package" */
export type Product_Package_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Product_Package>;
};

/** input type for inserting object relation for remote table "product_package" */
export type Product_Package_Obj_Rel_Insert_Input = {
  data: Product_Package_Insert_Input;
  on_conflict?: Maybe<Product_Package_On_Conflict>;
};

/** on conflict condition type for table "product_package" */
export type Product_Package_On_Conflict = {
  constraint: Product_Package_Constraint;
  update_columns: Array<Product_Package_Update_Column>;
  where?: Maybe<Product_Package_Bool_Exp>;
};

/** ordering options when selecting data from "product_package" */
export type Product_Package_Order_By = {
  id?: Maybe<Order_By>;
  max_slot?: Maybe<Order_By>;
  package_end_date?: Maybe<Order_By>;
  package_start_date?: Maybe<Order_By>;
  package_type?: Maybe<Order_By>;
  product?: Maybe<Product_Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** primary key columns input for table: "product_package" */
export type Product_Package_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "product_package" */
export enum Product_Package_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  MaxSlot = 'max_slot',
  /** column name */
  PackageEndDate = 'package_end_date',
  /** column name */
  PackageStartDate = 'package_start_date',
  /** column name */
  PackageType = 'package_type',
  /** column name */
  ResourcePath = 'resource_path'
}

/** input type for updating data in table "product_package" */
export type Product_Package_Set_Input = {
  id?: Maybe<Scalars['Int']>;
  max_slot?: Maybe<Scalars['Int']>;
  package_end_date?: Maybe<Scalars['timestamptz']>;
  package_start_date?: Maybe<Scalars['timestamptz']>;
  package_type?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Product_Package_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
  max_slot?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "product_package" */
export type Product_Package_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  max_slot?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Product_Package_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
  max_slot?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "product_package" */
export type Product_Package_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  max_slot?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Product_Package_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
  max_slot?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "product_package" */
export type Product_Package_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  max_slot?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Product_Package_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
  max_slot?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "product_package" */
export type Product_Package_Sum_Order_By = {
  id?: Maybe<Order_By>;
  max_slot?: Maybe<Order_By>;
};

/** update columns of table "product_package" */
export enum Product_Package_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  MaxSlot = 'max_slot',
  /** column name */
  PackageEndDate = 'package_end_date',
  /** column name */
  PackageStartDate = 'package_start_date',
  /** column name */
  PackageType = 'package_type',
  /** column name */
  ResourcePath = 'resource_path'
}

/** aggregate var_pop on columns */
export type Product_Package_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
  max_slot?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "product_package" */
export type Product_Package_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  max_slot?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Product_Package_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
  max_slot?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "product_package" */
export type Product_Package_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  max_slot?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Product_Package_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
  max_slot?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "product_package" */
export type Product_Package_Variance_Order_By = {
  id?: Maybe<Order_By>;
  max_slot?: Maybe<Order_By>;
};

/** primary key columns input for table: "product" */
export type Product_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** columns and relationships of "product_price" */
export type Product_Price = {
  billing_schedule_period_id?: Maybe<Scalars['Int']>;
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  price: Scalars['numeric'];
  /** An object relationship */
  product: Product;
  product_id: Scalars['Int'];
  quantity?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "product_price" */
export type Product_Price_Aggregate = {
  aggregate?: Maybe<Product_Price_Aggregate_Fields>;
  nodes: Array<Product_Price>;
};

/** aggregate fields of "product_price" */
export type Product_Price_Aggregate_Fields = {
  avg?: Maybe<Product_Price_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Product_Price_Max_Fields>;
  min?: Maybe<Product_Price_Min_Fields>;
  stddev?: Maybe<Product_Price_Stddev_Fields>;
  stddev_pop?: Maybe<Product_Price_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Product_Price_Stddev_Samp_Fields>;
  sum?: Maybe<Product_Price_Sum_Fields>;
  var_pop?: Maybe<Product_Price_Var_Pop_Fields>;
  var_samp?: Maybe<Product_Price_Var_Samp_Fields>;
  variance?: Maybe<Product_Price_Variance_Fields>;
};


/** aggregate fields of "product_price" */
export type Product_Price_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Product_Price_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "product_price" */
export type Product_Price_Aggregate_Order_By = {
  avg?: Maybe<Product_Price_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Product_Price_Max_Order_By>;
  min?: Maybe<Product_Price_Min_Order_By>;
  stddev?: Maybe<Product_Price_Stddev_Order_By>;
  stddev_pop?: Maybe<Product_Price_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Product_Price_Stddev_Samp_Order_By>;
  sum?: Maybe<Product_Price_Sum_Order_By>;
  var_pop?: Maybe<Product_Price_Var_Pop_Order_By>;
  var_samp?: Maybe<Product_Price_Var_Samp_Order_By>;
  variance?: Maybe<Product_Price_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "product_price" */
export type Product_Price_Arr_Rel_Insert_Input = {
  data: Array<Product_Price_Insert_Input>;
  on_conflict?: Maybe<Product_Price_On_Conflict>;
};

/** aggregate avg on columns */
export type Product_Price_Avg_Fields = {
  billing_schedule_period_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "product_price" */
export type Product_Price_Avg_Order_By = {
  billing_schedule_period_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "product_price". All fields are combined with a logical 'AND'. */
export type Product_Price_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Product_Price_Bool_Exp>>>;
  _not?: Maybe<Product_Price_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Product_Price_Bool_Exp>>>;
  billing_schedule_period_id?: Maybe<Int_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  price?: Maybe<Numeric_Comparison_Exp>;
  product?: Maybe<Product_Bool_Exp>;
  product_id?: Maybe<Int_Comparison_Exp>;
  quantity?: Maybe<Int_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "product_price" */
export enum Product_Price_Constraint {
  /** unique or primary key constraint */
  ProductPricePk = 'product_price_pk',
  /** unique or primary key constraint */
  ProductPriceUniIdx = 'product_price_uni_idx'
}

/** input type for incrementing integer column in table "product_price" */
export type Product_Price_Inc_Input = {
  billing_schedule_period_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['numeric']>;
  product_id?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "product_price" */
export type Product_Price_Insert_Input = {
  billing_schedule_period_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['numeric']>;
  product?: Maybe<Product_Obj_Rel_Insert_Input>;
  product_id?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Product_Price_Max_Fields = {
  billing_schedule_period_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['numeric']>;
  product_id?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "product_price" */
export type Product_Price_Max_Order_By = {
  billing_schedule_period_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Product_Price_Min_Fields = {
  billing_schedule_period_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['numeric']>;
  product_id?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "product_price" */
export type Product_Price_Min_Order_By = {
  billing_schedule_period_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** response of any mutation on the table "product_price" */
export type Product_Price_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Product_Price>;
};

/** input type for inserting object relation for remote table "product_price" */
export type Product_Price_Obj_Rel_Insert_Input = {
  data: Product_Price_Insert_Input;
  on_conflict?: Maybe<Product_Price_On_Conflict>;
};

/** on conflict condition type for table "product_price" */
export type Product_Price_On_Conflict = {
  constraint: Product_Price_Constraint;
  update_columns: Array<Product_Price_Update_Column>;
  where?: Maybe<Product_Price_Bool_Exp>;
};

/** ordering options when selecting data from "product_price" */
export type Product_Price_Order_By = {
  billing_schedule_period_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product?: Maybe<Product_Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** primary key columns input for table: "product_price" */
export type Product_Price_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "product_price" */
export enum Product_Price_Select_Column {
  /** column name */
  BillingSchedulePeriodId = 'billing_schedule_period_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Price = 'price',
  /** column name */
  ProductId = 'product_id',
  /** column name */
  Quantity = 'quantity',
  /** column name */
  ResourcePath = 'resource_path'
}

/** input type for updating data in table "product_price" */
export type Product_Price_Set_Input = {
  billing_schedule_period_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['numeric']>;
  product_id?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Product_Price_Stddev_Fields = {
  billing_schedule_period_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "product_price" */
export type Product_Price_Stddev_Order_By = {
  billing_schedule_period_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Product_Price_Stddev_Pop_Fields = {
  billing_schedule_period_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "product_price" */
export type Product_Price_Stddev_Pop_Order_By = {
  billing_schedule_period_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Product_Price_Stddev_Samp_Fields = {
  billing_schedule_period_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "product_price" */
export type Product_Price_Stddev_Samp_Order_By = {
  billing_schedule_period_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Product_Price_Sum_Fields = {
  billing_schedule_period_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['numeric']>;
  product_id?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "product_price" */
export type Product_Price_Sum_Order_By = {
  billing_schedule_period_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
};

/** update columns of table "product_price" */
export enum Product_Price_Update_Column {
  /** column name */
  BillingSchedulePeriodId = 'billing_schedule_period_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Price = 'price',
  /** column name */
  ProductId = 'product_id',
  /** column name */
  Quantity = 'quantity',
  /** column name */
  ResourcePath = 'resource_path'
}

/** aggregate var_pop on columns */
export type Product_Price_Var_Pop_Fields = {
  billing_schedule_period_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "product_price" */
export type Product_Price_Var_Pop_Order_By = {
  billing_schedule_period_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Product_Price_Var_Samp_Fields = {
  billing_schedule_period_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "product_price" */
export type Product_Price_Var_Samp_Order_By = {
  billing_schedule_period_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Product_Price_Variance_Fields = {
  billing_schedule_period_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "product_price" */
export type Product_Price_Variance_Order_By = {
  billing_schedule_period_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
};

/** select columns of table "product" */
export enum Product_Select_Column {
  /** column name */
  AvailableFrom = 'available_from',
  /** column name */
  AvailableUntil = 'available_until',
  /** column name */
  BillingScheduleId = 'billing_schedule_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomBillingPeriod = 'custom_billing_period',
  /** column name */
  DisableProRatingFlag = 'disable_pro_rating_flag',
  /** column name */
  Id = 'id',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  Name = 'name',
  /** column name */
  ProductType = 'product_type',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TaxId = 'tax_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "product" */
export type Product_Set_Input = {
  available_from?: Maybe<Scalars['timestamptz']>;
  available_until?: Maybe<Scalars['timestamptz']>;
  billing_schedule_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  custom_billing_period?: Maybe<Scalars['timestamptz']>;
  disable_pro_rating_flag?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  is_archived?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  product_type?: Maybe<Scalars['String']>;
  remarks?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  tax_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Product_Stddev_Fields = {
  billing_schedule_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tax_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "product" */
export type Product_Stddev_Order_By = {
  billing_schedule_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Product_Stddev_Pop_Fields = {
  billing_schedule_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tax_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "product" */
export type Product_Stddev_Pop_Order_By = {
  billing_schedule_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Product_Stddev_Samp_Fields = {
  billing_schedule_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tax_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "product" */
export type Product_Stddev_Samp_Order_By = {
  billing_schedule_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Product_Sum_Fields = {
  billing_schedule_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  tax_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "product" */
export type Product_Sum_Order_By = {
  billing_schedule_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
};

/** update columns of table "product" */
export enum Product_Update_Column {
  /** column name */
  AvailableFrom = 'available_from',
  /** column name */
  AvailableUntil = 'available_until',
  /** column name */
  BillingScheduleId = 'billing_schedule_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomBillingPeriod = 'custom_billing_period',
  /** column name */
  DisableProRatingFlag = 'disable_pro_rating_flag',
  /** column name */
  Id = 'id',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  Name = 'name',
  /** column name */
  ProductType = 'product_type',
  /** column name */
  Remarks = 'remarks',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TaxId = 'tax_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Product_Var_Pop_Fields = {
  billing_schedule_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tax_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "product" */
export type Product_Var_Pop_Order_By = {
  billing_schedule_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Product_Var_Samp_Fields = {
  billing_schedule_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tax_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "product" */
export type Product_Var_Samp_Order_By = {
  billing_schedule_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Product_Variance_Fields = {
  billing_schedule_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tax_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "product" */
export type Product_Variance_Order_By = {
  billing_schedule_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tax_id?: Maybe<Order_By>;
};

/** columns and relationships of "promotion_rules" */
export type Promotion_Rules = {
  conditions?: Maybe<Scalars['jsonb']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  discount_amount: Scalars['numeric'];
  discount_type?: Maybe<Scalars['String']>;
  promo_type: Scalars['String'];
  /** An object relationship */
  promotion: Promotions;
  promotion_id: Scalars['Int'];
  promotion_rule_id: Scalars['Int'];
  resource_path?: Maybe<Scalars['String']>;
  rewards?: Maybe<Scalars['jsonb']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "promotion_rules" */
export type Promotion_RulesConditionsArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "promotion_rules" */
export type Promotion_RulesRewardsArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "promotion_rules" */
export type Promotion_Rules_Aggregate = {
  aggregate?: Maybe<Promotion_Rules_Aggregate_Fields>;
  nodes: Array<Promotion_Rules>;
};

/** aggregate fields of "promotion_rules" */
export type Promotion_Rules_Aggregate_Fields = {
  avg?: Maybe<Promotion_Rules_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Promotion_Rules_Max_Fields>;
  min?: Maybe<Promotion_Rules_Min_Fields>;
  stddev?: Maybe<Promotion_Rules_Stddev_Fields>;
  stddev_pop?: Maybe<Promotion_Rules_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Promotion_Rules_Stddev_Samp_Fields>;
  sum?: Maybe<Promotion_Rules_Sum_Fields>;
  var_pop?: Maybe<Promotion_Rules_Var_Pop_Fields>;
  var_samp?: Maybe<Promotion_Rules_Var_Samp_Fields>;
  variance?: Maybe<Promotion_Rules_Variance_Fields>;
};


/** aggregate fields of "promotion_rules" */
export type Promotion_Rules_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Promotion_Rules_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "promotion_rules" */
export type Promotion_Rules_Aggregate_Order_By = {
  avg?: Maybe<Promotion_Rules_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Promotion_Rules_Max_Order_By>;
  min?: Maybe<Promotion_Rules_Min_Order_By>;
  stddev?: Maybe<Promotion_Rules_Stddev_Order_By>;
  stddev_pop?: Maybe<Promotion_Rules_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Promotion_Rules_Stddev_Samp_Order_By>;
  sum?: Maybe<Promotion_Rules_Sum_Order_By>;
  var_pop?: Maybe<Promotion_Rules_Var_Pop_Order_By>;
  var_samp?: Maybe<Promotion_Rules_Var_Samp_Order_By>;
  variance?: Maybe<Promotion_Rules_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Promotion_Rules_Append_Input = {
  conditions?: Maybe<Scalars['jsonb']>;
  rewards?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "promotion_rules" */
export type Promotion_Rules_Arr_Rel_Insert_Input = {
  data: Array<Promotion_Rules_Insert_Input>;
  on_conflict?: Maybe<Promotion_Rules_On_Conflict>;
};

/** aggregate avg on columns */
export type Promotion_Rules_Avg_Fields = {
  discount_amount?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  promotion_rule_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "promotion_rules" */
export type Promotion_Rules_Avg_Order_By = {
  discount_amount?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  promotion_rule_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "promotion_rules". All fields are combined with a logical 'AND'. */
export type Promotion_Rules_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Promotion_Rules_Bool_Exp>>>;
  _not?: Maybe<Promotion_Rules_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Promotion_Rules_Bool_Exp>>>;
  conditions?: Maybe<Jsonb_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  discount_amount?: Maybe<Numeric_Comparison_Exp>;
  discount_type?: Maybe<String_Comparison_Exp>;
  promo_type?: Maybe<String_Comparison_Exp>;
  promotion?: Maybe<Promotions_Bool_Exp>;
  promotion_id?: Maybe<Int_Comparison_Exp>;
  promotion_rule_id?: Maybe<Int_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  rewards?: Maybe<Jsonb_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "promotion_rules" */
export enum Promotion_Rules_Constraint {
  /** unique or primary key constraint */
  PromotionRuleIdPk = 'promotion_rule_id_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Promotion_Rules_Delete_At_Path_Input = {
  conditions?: Maybe<Array<Maybe<Scalars['String']>>>;
  rewards?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Promotion_Rules_Delete_Elem_Input = {
  conditions?: Maybe<Scalars['Int']>;
  rewards?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Promotion_Rules_Delete_Key_Input = {
  conditions?: Maybe<Scalars['String']>;
  rewards?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "promotion_rules" */
export type Promotion_Rules_Inc_Input = {
  discount_amount?: Maybe<Scalars['numeric']>;
  promotion_id?: Maybe<Scalars['Int']>;
  promotion_rule_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "promotion_rules" */
export type Promotion_Rules_Insert_Input = {
  conditions?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  discount_amount?: Maybe<Scalars['numeric']>;
  discount_type?: Maybe<Scalars['String']>;
  promo_type?: Maybe<Scalars['String']>;
  promotion?: Maybe<Promotions_Obj_Rel_Insert_Input>;
  promotion_id?: Maybe<Scalars['Int']>;
  promotion_rule_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  rewards?: Maybe<Scalars['jsonb']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Promotion_Rules_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  discount_amount?: Maybe<Scalars['numeric']>;
  discount_type?: Maybe<Scalars['String']>;
  promo_type?: Maybe<Scalars['String']>;
  promotion_id?: Maybe<Scalars['Int']>;
  promotion_rule_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "promotion_rules" */
export type Promotion_Rules_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  discount_amount?: Maybe<Order_By>;
  discount_type?: Maybe<Order_By>;
  promo_type?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  promotion_rule_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Promotion_Rules_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  discount_amount?: Maybe<Scalars['numeric']>;
  discount_type?: Maybe<Scalars['String']>;
  promo_type?: Maybe<Scalars['String']>;
  promotion_id?: Maybe<Scalars['Int']>;
  promotion_rule_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "promotion_rules" */
export type Promotion_Rules_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  discount_amount?: Maybe<Order_By>;
  discount_type?: Maybe<Order_By>;
  promo_type?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  promotion_rule_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "promotion_rules" */
export type Promotion_Rules_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Promotion_Rules>;
};

/** input type for inserting object relation for remote table "promotion_rules" */
export type Promotion_Rules_Obj_Rel_Insert_Input = {
  data: Promotion_Rules_Insert_Input;
  on_conflict?: Maybe<Promotion_Rules_On_Conflict>;
};

/** on conflict condition type for table "promotion_rules" */
export type Promotion_Rules_On_Conflict = {
  constraint: Promotion_Rules_Constraint;
  update_columns: Array<Promotion_Rules_Update_Column>;
  where?: Maybe<Promotion_Rules_Bool_Exp>;
};

/** ordering options when selecting data from "promotion_rules" */
export type Promotion_Rules_Order_By = {
  conditions?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  discount_amount?: Maybe<Order_By>;
  discount_type?: Maybe<Order_By>;
  promo_type?: Maybe<Order_By>;
  promotion?: Maybe<Promotions_Order_By>;
  promotion_id?: Maybe<Order_By>;
  promotion_rule_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  rewards?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "promotion_rules" */
export type Promotion_Rules_Pk_Columns_Input = {
  promotion_rule_id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Promotion_Rules_Prepend_Input = {
  conditions?: Maybe<Scalars['jsonb']>;
  rewards?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "promotion_rules" */
export enum Promotion_Rules_Select_Column {
  /** column name */
  Conditions = 'conditions',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DiscountAmount = 'discount_amount',
  /** column name */
  DiscountType = 'discount_type',
  /** column name */
  PromoType = 'promo_type',
  /** column name */
  PromotionId = 'promotion_id',
  /** column name */
  PromotionRuleId = 'promotion_rule_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Rewards = 'rewards',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "promotion_rules" */
export type Promotion_Rules_Set_Input = {
  conditions?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  discount_amount?: Maybe<Scalars['numeric']>;
  discount_type?: Maybe<Scalars['String']>;
  promo_type?: Maybe<Scalars['String']>;
  promotion_id?: Maybe<Scalars['Int']>;
  promotion_rule_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  rewards?: Maybe<Scalars['jsonb']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Promotion_Rules_Stddev_Fields = {
  discount_amount?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  promotion_rule_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "promotion_rules" */
export type Promotion_Rules_Stddev_Order_By = {
  discount_amount?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  promotion_rule_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Promotion_Rules_Stddev_Pop_Fields = {
  discount_amount?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  promotion_rule_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "promotion_rules" */
export type Promotion_Rules_Stddev_Pop_Order_By = {
  discount_amount?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  promotion_rule_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Promotion_Rules_Stddev_Samp_Fields = {
  discount_amount?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  promotion_rule_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "promotion_rules" */
export type Promotion_Rules_Stddev_Samp_Order_By = {
  discount_amount?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  promotion_rule_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Promotion_Rules_Sum_Fields = {
  discount_amount?: Maybe<Scalars['numeric']>;
  promotion_id?: Maybe<Scalars['Int']>;
  promotion_rule_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "promotion_rules" */
export type Promotion_Rules_Sum_Order_By = {
  discount_amount?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  promotion_rule_id?: Maybe<Order_By>;
};

/** update columns of table "promotion_rules" */
export enum Promotion_Rules_Update_Column {
  /** column name */
  Conditions = 'conditions',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DiscountAmount = 'discount_amount',
  /** column name */
  DiscountType = 'discount_type',
  /** column name */
  PromoType = 'promo_type',
  /** column name */
  PromotionId = 'promotion_id',
  /** column name */
  PromotionRuleId = 'promotion_rule_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Rewards = 'rewards',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Promotion_Rules_Var_Pop_Fields = {
  discount_amount?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  promotion_rule_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "promotion_rules" */
export type Promotion_Rules_Var_Pop_Order_By = {
  discount_amount?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  promotion_rule_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Promotion_Rules_Var_Samp_Fields = {
  discount_amount?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  promotion_rule_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "promotion_rules" */
export type Promotion_Rules_Var_Samp_Order_By = {
  discount_amount?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  promotion_rule_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Promotion_Rules_Variance_Fields = {
  discount_amount?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  promotion_rule_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "promotion_rules" */
export type Promotion_Rules_Variance_Order_By = {
  discount_amount?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  promotion_rule_id?: Maybe<Order_By>;
};

/** columns and relationships of "promotions" */
export type Promotions = {
  code: Scalars['String'];
  code_prefix: Scalars['String'];
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  expired_date?: Maybe<Scalars['timestamptz']>;
  notes: Scalars['String'];
  owner_id: Scalars['String'];
  prefix_sequence_number: Scalars['Int'];
  promotion_id: Scalars['Int'];
  /** An array relationship */
  promotion_rules: Array<Promotion_Rules>;
  /** An aggregated array relationship */
  promotion_rules_aggregate: Promotion_Rules_Aggregate;
  redemption_limit_per_code: Scalars['Int'];
  redemption_limit_per_user: Scalars['Int'];
  resource_path?: Maybe<Scalars['String']>;
  started_date?: Maybe<Scalars['timestamptz']>;
  status: Scalars['String'];
  total_redemptions: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: Users;
};


/** columns and relationships of "promotions" */
export type PromotionsPromotion_RulesArgs = {
  distinct_on?: Maybe<Array<Promotion_Rules_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Promotion_Rules_Order_By>>;
  where?: Maybe<Promotion_Rules_Bool_Exp>;
};


/** columns and relationships of "promotions" */
export type PromotionsPromotion_Rules_AggregateArgs = {
  distinct_on?: Maybe<Array<Promotion_Rules_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Promotion_Rules_Order_By>>;
  where?: Maybe<Promotion_Rules_Bool_Exp>;
};

/** aggregated selection of "promotions" */
export type Promotions_Aggregate = {
  aggregate?: Maybe<Promotions_Aggregate_Fields>;
  nodes: Array<Promotions>;
};

/** aggregate fields of "promotions" */
export type Promotions_Aggregate_Fields = {
  avg?: Maybe<Promotions_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Promotions_Max_Fields>;
  min?: Maybe<Promotions_Min_Fields>;
  stddev?: Maybe<Promotions_Stddev_Fields>;
  stddev_pop?: Maybe<Promotions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Promotions_Stddev_Samp_Fields>;
  sum?: Maybe<Promotions_Sum_Fields>;
  var_pop?: Maybe<Promotions_Var_Pop_Fields>;
  var_samp?: Maybe<Promotions_Var_Samp_Fields>;
  variance?: Maybe<Promotions_Variance_Fields>;
};


/** aggregate fields of "promotions" */
export type Promotions_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Promotions_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "promotions" */
export type Promotions_Aggregate_Order_By = {
  avg?: Maybe<Promotions_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Promotions_Max_Order_By>;
  min?: Maybe<Promotions_Min_Order_By>;
  stddev?: Maybe<Promotions_Stddev_Order_By>;
  stddev_pop?: Maybe<Promotions_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Promotions_Stddev_Samp_Order_By>;
  sum?: Maybe<Promotions_Sum_Order_By>;
  var_pop?: Maybe<Promotions_Var_Pop_Order_By>;
  var_samp?: Maybe<Promotions_Var_Samp_Order_By>;
  variance?: Maybe<Promotions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "promotions" */
export type Promotions_Arr_Rel_Insert_Input = {
  data: Array<Promotions_Insert_Input>;
  on_conflict?: Maybe<Promotions_On_Conflict>;
};

/** aggregate avg on columns */
export type Promotions_Avg_Fields = {
  prefix_sequence_number?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  redemption_limit_per_code?: Maybe<Scalars['Float']>;
  redemption_limit_per_user?: Maybe<Scalars['Float']>;
  total_redemptions?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "promotions" */
export type Promotions_Avg_Order_By = {
  prefix_sequence_number?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  redemption_limit_per_code?: Maybe<Order_By>;
  redemption_limit_per_user?: Maybe<Order_By>;
  total_redemptions?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "promotions". All fields are combined with a logical 'AND'. */
export type Promotions_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Promotions_Bool_Exp>>>;
  _not?: Maybe<Promotions_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Promotions_Bool_Exp>>>;
  code?: Maybe<String_Comparison_Exp>;
  code_prefix?: Maybe<String_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  expired_date?: Maybe<Timestamptz_Comparison_Exp>;
  notes?: Maybe<String_Comparison_Exp>;
  owner_id?: Maybe<String_Comparison_Exp>;
  prefix_sequence_number?: Maybe<Int_Comparison_Exp>;
  promotion_id?: Maybe<Int_Comparison_Exp>;
  promotion_rules?: Maybe<Promotion_Rules_Bool_Exp>;
  redemption_limit_per_code?: Maybe<Int_Comparison_Exp>;
  redemption_limit_per_user?: Maybe<Int_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  started_date?: Maybe<Timestamptz_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  total_redemptions?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "promotions" */
export enum Promotions_Constraint {
  /** unique or primary key constraint */
  PromotionsPk = 'promotions_pk',
  /** unique or primary key constraint */
  PromotionsUn = 'promotions_un'
}

/** input type for incrementing integer column in table "promotions" */
export type Promotions_Inc_Input = {
  prefix_sequence_number?: Maybe<Scalars['Int']>;
  promotion_id?: Maybe<Scalars['Int']>;
  redemption_limit_per_code?: Maybe<Scalars['Int']>;
  redemption_limit_per_user?: Maybe<Scalars['Int']>;
  total_redemptions?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "promotions" */
export type Promotions_Insert_Input = {
  code?: Maybe<Scalars['String']>;
  code_prefix?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  expired_date?: Maybe<Scalars['timestamptz']>;
  notes?: Maybe<Scalars['String']>;
  owner_id?: Maybe<Scalars['String']>;
  prefix_sequence_number?: Maybe<Scalars['Int']>;
  promotion_id?: Maybe<Scalars['Int']>;
  promotion_rules?: Maybe<Promotion_Rules_Arr_Rel_Insert_Input>;
  redemption_limit_per_code?: Maybe<Scalars['Int']>;
  redemption_limit_per_user?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  started_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  total_redemptions?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Promotions_Max_Fields = {
  code?: Maybe<Scalars['String']>;
  code_prefix?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  expired_date?: Maybe<Scalars['timestamptz']>;
  notes?: Maybe<Scalars['String']>;
  owner_id?: Maybe<Scalars['String']>;
  prefix_sequence_number?: Maybe<Scalars['Int']>;
  promotion_id?: Maybe<Scalars['Int']>;
  redemption_limit_per_code?: Maybe<Scalars['Int']>;
  redemption_limit_per_user?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  started_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  total_redemptions?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "promotions" */
export type Promotions_Max_Order_By = {
  code?: Maybe<Order_By>;
  code_prefix?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  expired_date?: Maybe<Order_By>;
  notes?: Maybe<Order_By>;
  owner_id?: Maybe<Order_By>;
  prefix_sequence_number?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  redemption_limit_per_code?: Maybe<Order_By>;
  redemption_limit_per_user?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  started_date?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  total_redemptions?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Promotions_Min_Fields = {
  code?: Maybe<Scalars['String']>;
  code_prefix?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  expired_date?: Maybe<Scalars['timestamptz']>;
  notes?: Maybe<Scalars['String']>;
  owner_id?: Maybe<Scalars['String']>;
  prefix_sequence_number?: Maybe<Scalars['Int']>;
  promotion_id?: Maybe<Scalars['Int']>;
  redemption_limit_per_code?: Maybe<Scalars['Int']>;
  redemption_limit_per_user?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  started_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  total_redemptions?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "promotions" */
export type Promotions_Min_Order_By = {
  code?: Maybe<Order_By>;
  code_prefix?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  expired_date?: Maybe<Order_By>;
  notes?: Maybe<Order_By>;
  owner_id?: Maybe<Order_By>;
  prefix_sequence_number?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  redemption_limit_per_code?: Maybe<Order_By>;
  redemption_limit_per_user?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  started_date?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  total_redemptions?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "promotions" */
export type Promotions_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Promotions>;
};

/** input type for inserting object relation for remote table "promotions" */
export type Promotions_Obj_Rel_Insert_Input = {
  data: Promotions_Insert_Input;
  on_conflict?: Maybe<Promotions_On_Conflict>;
};

/** on conflict condition type for table "promotions" */
export type Promotions_On_Conflict = {
  constraint: Promotions_Constraint;
  update_columns: Array<Promotions_Update_Column>;
  where?: Maybe<Promotions_Bool_Exp>;
};

/** ordering options when selecting data from "promotions" */
export type Promotions_Order_By = {
  code?: Maybe<Order_By>;
  code_prefix?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  expired_date?: Maybe<Order_By>;
  notes?: Maybe<Order_By>;
  owner_id?: Maybe<Order_By>;
  prefix_sequence_number?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  promotion_rules_aggregate?: Maybe<Promotion_Rules_Aggregate_Order_By>;
  redemption_limit_per_code?: Maybe<Order_By>;
  redemption_limit_per_user?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  started_date?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  total_redemptions?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
};

/** primary key columns input for table: "promotions" */
export type Promotions_Pk_Columns_Input = {
  promotion_id: Scalars['Int'];
};

/** select columns of table "promotions" */
export enum Promotions_Select_Column {
  /** column name */
  Code = 'code',
  /** column name */
  CodePrefix = 'code_prefix',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ExpiredDate = 'expired_date',
  /** column name */
  Notes = 'notes',
  /** column name */
  OwnerId = 'owner_id',
  /** column name */
  PrefixSequenceNumber = 'prefix_sequence_number',
  /** column name */
  PromotionId = 'promotion_id',
  /** column name */
  RedemptionLimitPerCode = 'redemption_limit_per_code',
  /** column name */
  RedemptionLimitPerUser = 'redemption_limit_per_user',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartedDate = 'started_date',
  /** column name */
  Status = 'status',
  /** column name */
  TotalRedemptions = 'total_redemptions',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "promotions" */
export type Promotions_Set_Input = {
  code?: Maybe<Scalars['String']>;
  code_prefix?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  expired_date?: Maybe<Scalars['timestamptz']>;
  notes?: Maybe<Scalars['String']>;
  owner_id?: Maybe<Scalars['String']>;
  prefix_sequence_number?: Maybe<Scalars['Int']>;
  promotion_id?: Maybe<Scalars['Int']>;
  redemption_limit_per_code?: Maybe<Scalars['Int']>;
  redemption_limit_per_user?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  started_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  total_redemptions?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Promotions_Stddev_Fields = {
  prefix_sequence_number?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  redemption_limit_per_code?: Maybe<Scalars['Float']>;
  redemption_limit_per_user?: Maybe<Scalars['Float']>;
  total_redemptions?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "promotions" */
export type Promotions_Stddev_Order_By = {
  prefix_sequence_number?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  redemption_limit_per_code?: Maybe<Order_By>;
  redemption_limit_per_user?: Maybe<Order_By>;
  total_redemptions?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Promotions_Stddev_Pop_Fields = {
  prefix_sequence_number?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  redemption_limit_per_code?: Maybe<Scalars['Float']>;
  redemption_limit_per_user?: Maybe<Scalars['Float']>;
  total_redemptions?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "promotions" */
export type Promotions_Stddev_Pop_Order_By = {
  prefix_sequence_number?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  redemption_limit_per_code?: Maybe<Order_By>;
  redemption_limit_per_user?: Maybe<Order_By>;
  total_redemptions?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Promotions_Stddev_Samp_Fields = {
  prefix_sequence_number?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  redemption_limit_per_code?: Maybe<Scalars['Float']>;
  redemption_limit_per_user?: Maybe<Scalars['Float']>;
  total_redemptions?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "promotions" */
export type Promotions_Stddev_Samp_Order_By = {
  prefix_sequence_number?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  redemption_limit_per_code?: Maybe<Order_By>;
  redemption_limit_per_user?: Maybe<Order_By>;
  total_redemptions?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Promotions_Sum_Fields = {
  prefix_sequence_number?: Maybe<Scalars['Int']>;
  promotion_id?: Maybe<Scalars['Int']>;
  redemption_limit_per_code?: Maybe<Scalars['Int']>;
  redemption_limit_per_user?: Maybe<Scalars['Int']>;
  total_redemptions?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "promotions" */
export type Promotions_Sum_Order_By = {
  prefix_sequence_number?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  redemption_limit_per_code?: Maybe<Order_By>;
  redemption_limit_per_user?: Maybe<Order_By>;
  total_redemptions?: Maybe<Order_By>;
};

/** update columns of table "promotions" */
export enum Promotions_Update_Column {
  /** column name */
  Code = 'code',
  /** column name */
  CodePrefix = 'code_prefix',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ExpiredDate = 'expired_date',
  /** column name */
  Notes = 'notes',
  /** column name */
  OwnerId = 'owner_id',
  /** column name */
  PrefixSequenceNumber = 'prefix_sequence_number',
  /** column name */
  PromotionId = 'promotion_id',
  /** column name */
  RedemptionLimitPerCode = 'redemption_limit_per_code',
  /** column name */
  RedemptionLimitPerUser = 'redemption_limit_per_user',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartedDate = 'started_date',
  /** column name */
  Status = 'status',
  /** column name */
  TotalRedemptions = 'total_redemptions',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Promotions_Var_Pop_Fields = {
  prefix_sequence_number?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  redemption_limit_per_code?: Maybe<Scalars['Float']>;
  redemption_limit_per_user?: Maybe<Scalars['Float']>;
  total_redemptions?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "promotions" */
export type Promotions_Var_Pop_Order_By = {
  prefix_sequence_number?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  redemption_limit_per_code?: Maybe<Order_By>;
  redemption_limit_per_user?: Maybe<Order_By>;
  total_redemptions?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Promotions_Var_Samp_Fields = {
  prefix_sequence_number?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  redemption_limit_per_code?: Maybe<Scalars['Float']>;
  redemption_limit_per_user?: Maybe<Scalars['Float']>;
  total_redemptions?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "promotions" */
export type Promotions_Var_Samp_Order_By = {
  prefix_sequence_number?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  redemption_limit_per_code?: Maybe<Order_By>;
  redemption_limit_per_user?: Maybe<Order_By>;
  total_redemptions?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Promotions_Variance_Fields = {
  prefix_sequence_number?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  redemption_limit_per_code?: Maybe<Scalars['Float']>;
  redemption_limit_per_user?: Maybe<Scalars['Float']>;
  total_redemptions?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "promotions" */
export type Promotions_Variance_Order_By = {
  prefix_sequence_number?: Maybe<Order_By>;
  promotion_id?: Maybe<Order_By>;
  redemption_limit_per_code?: Maybe<Order_By>;
  redemption_limit_per_user?: Maybe<Order_By>;
  total_redemptions?: Maybe<Order_By>;
};

/** query root */
export type Query_Root = {
  /** fetch data from the table: "academic_years" */
  academic_years: Array<Academic_Years>;
  /** fetch aggregated fields from the table: "academic_years" */
  academic_years_aggregate: Academic_Years_Aggregate;
  /** fetch data from the table: "academic_years" using primary key columns */
  academic_years_by_pk?: Maybe<Academic_Years>;
  /** fetch data from the table: "activity_logs" */
  activity_logs: Array<Activity_Logs>;
  /** fetch aggregated fields from the table: "activity_logs" */
  activity_logs_aggregate: Activity_Logs_Aggregate;
  /** fetch data from the table: "activity_logs" using primary key columns */
  activity_logs_by_pk?: Maybe<Activity_Logs>;
  /** fetch data from the table: "apple_users" */
  apple_users: Array<Apple_Users>;
  /** fetch aggregated fields from the table: "apple_users" */
  apple_users_aggregate: Apple_Users_Aggregate;
  /** fetch data from the table: "apple_users" using primary key columns */
  apple_users_by_pk?: Maybe<Apple_Users>;
  /** fetch data from the table: "assign_study_plan_tasks" */
  assign_study_plan_tasks: Array<Assign_Study_Plan_Tasks>;
  /** fetch aggregated fields from the table: "assign_study_plan_tasks" */
  assign_study_plan_tasks_aggregate: Assign_Study_Plan_Tasks_Aggregate;
  /** fetch data from the table: "assign_study_plan_tasks" using primary key columns */
  assign_study_plan_tasks_by_pk?: Maybe<Assign_Study_Plan_Tasks>;
  /** fetch data from the table: "assignment_study_plan_items" */
  assignment_study_plan_items: Array<Assignment_Study_Plan_Items>;
  /** fetch aggregated fields from the table: "assignment_study_plan_items" */
  assignment_study_plan_items_aggregate: Assignment_Study_Plan_Items_Aggregate;
  /** fetch data from the table: "assignment_study_plan_items" using primary key columns */
  assignment_study_plan_items_by_pk?: Maybe<Assignment_Study_Plan_Items>;
  /** fetch data from the table: "assignments" */
  assignments: Array<Assignments>;
  /** fetch aggregated fields from the table: "assignments" */
  assignments_aggregate: Assignments_Aggregate;
  /** fetch data from the table: "assignments" using primary key columns */
  assignments_by_pk?: Maybe<Assignments>;
  /** fetch data from the table: "bill_item" */
  bill_item: Array<Bill_Item>;
  /** fetch aggregated fields from the table: "bill_item" */
  bill_item_aggregate: Bill_Item_Aggregate;
  /** fetch data from the table: "bill_item" using primary key columns */
  bill_item_by_pk?: Maybe<Bill_Item>;
  /** fetch data from the table: "billing_histories" */
  billing_histories: Array<Billing_Histories>;
  /** fetch aggregated fields from the table: "billing_histories" */
  billing_histories_aggregate: Billing_Histories_Aggregate;
  /** fetch data from the table: "billing_histories" using primary key columns */
  billing_histories_by_pk?: Maybe<Billing_Histories>;
  /** fetch data from the table: "billing_schedule" */
  billing_schedule: Array<Billing_Schedule>;
  /** fetch aggregated fields from the table: "billing_schedule" */
  billing_schedule_aggregate: Billing_Schedule_Aggregate;
  /** fetch data from the table: "billing_schedule" using primary key columns */
  billing_schedule_by_pk?: Maybe<Billing_Schedule>;
  /** fetch data from the table: "billing_schedule_period" */
  billing_schedule_period: Array<Billing_Schedule_Period>;
  /** fetch aggregated fields from the table: "billing_schedule_period" */
  billing_schedule_period_aggregate: Billing_Schedule_Period_Aggregate;
  /** fetch data from the table: "billing_schedule_period" using primary key columns */
  billing_schedule_period_by_pk?: Maybe<Billing_Schedule_Period>;
  /** fetch data from the table: "books" */
  books: Array<Books>;
  /** fetch aggregated fields from the table: "books" */
  books_aggregate: Books_Aggregate;
  /** fetch data from the table: "books" using primary key columns */
  books_by_pk?: Maybe<Books>;
  /** fetch data from the table: "books_chapters" */
  books_chapters: Array<Books_Chapters>;
  /** fetch aggregated fields from the table: "books_chapters" */
  books_chapters_aggregate: Books_Chapters_Aggregate;
  /** fetch data from the table: "books_chapters" using primary key columns */
  books_chapters_by_pk?: Maybe<Books_Chapters>;
  /** fetch data from the table: "brands" */
  brands: Array<Brands>;
  /** fetch aggregated fields from the table: "brands" */
  brands_aggregate: Brands_Aggregate;
  /** fetch data from the table: "brands" using primary key columns */
  brands_by_pk?: Maybe<Brands>;
  /** fetch data from the table: "centers" */
  centers: Array<Centers>;
  /** fetch aggregated fields from the table: "centers" */
  centers_aggregate: Centers_Aggregate;
  /** fetch data from the table: "centers" using primary key columns */
  centers_by_pk?: Maybe<Centers>;
  /** fetch data from the table: "chapters" */
  chapters: Array<Chapters>;
  /** fetch aggregated fields from the table: "chapters" */
  chapters_aggregate: Chapters_Aggregate;
  /** fetch data from the table: "chapters" using primary key columns */
  chapters_by_pk?: Maybe<Chapters>;
  /** fetch data from the table: "cities" */
  cities: Array<Cities>;
  /** fetch aggregated fields from the table: "cities" */
  cities_aggregate: Cities_Aggregate;
  /** fetch data from the table: "cities" using primary key columns */
  cities_by_pk?: Maybe<Cities>;
  /** fetch data from the table: "class_members" */
  class_members: Array<Class_Members>;
  /** fetch aggregated fields from the table: "class_members" */
  class_members_aggregate: Class_Members_Aggregate;
  /** fetch data from the table: "class_members" using primary key columns */
  class_members_by_pk?: Maybe<Class_Members>;
  /** fetch data from the table: "class_preset_study_plans" */
  class_preset_study_plans: Array<Class_Preset_Study_Plans>;
  /** fetch aggregated fields from the table: "class_preset_study_plans" */
  class_preset_study_plans_aggregate: Class_Preset_Study_Plans_Aggregate;
  /** fetch data from the table: "class_preset_study_plans" using primary key columns */
  class_preset_study_plans_by_pk?: Maybe<Class_Preset_Study_Plans>;
  /** fetch data from the table: "class_students" */
  class_students: Array<Class_Students>;
  /** fetch aggregated fields from the table: "class_students" */
  class_students_aggregate: Class_Students_Aggregate;
  /** fetch data from the table: "class_students" using primary key columns */
  class_students_by_pk?: Maybe<Class_Students>;
  /** fetch data from the table: "class_study_plans" */
  class_study_plans: Array<Class_Study_Plans>;
  /** fetch aggregated fields from the table: "class_study_plans" */
  class_study_plans_aggregate: Class_Study_Plans_Aggregate;
  /** fetch data from the table: "class_study_plans" using primary key columns */
  class_study_plans_by_pk?: Maybe<Class_Study_Plans>;
  /** fetch data from the table: "classes" */
  classes: Array<Classes>;
  /** fetch aggregated fields from the table: "classes" */
  classes_aggregate: Classes_Aggregate;
  /** fetch data from the table: "classes" using primary key columns */
  classes_by_pk?: Maybe<Classes>;
  /** fetch data from the table: "coaches" */
  coaches: Array<Coaches>;
  /** fetch aggregated fields from the table: "coaches" */
  coaches_aggregate: Coaches_Aggregate;
  /** fetch data from the table: "coaches" using primary key columns */
  coaches_by_pk?: Maybe<Coaches>;
  /** fetch data from the table: "cod_orders" */
  cod_orders: Array<Cod_Orders>;
  /** fetch aggregated fields from the table: "cod_orders" */
  cod_orders_aggregate: Cod_Orders_Aggregate;
  /** fetch data from the table: "cod_orders" using primary key columns */
  cod_orders_by_pk?: Maybe<Cod_Orders>;
  /** fetch data from the table: "configs" */
  configs: Array<Configs>;
  /** fetch aggregated fields from the table: "configs" */
  configs_aggregate: Configs_Aggregate;
  /** fetch data from the table: "configs" using primary key columns */
  configs_by_pk?: Maybe<Configs>;
  /** fetch data from the table: "conversion_tasks" */
  conversion_tasks: Array<Conversion_Tasks>;
  /** fetch aggregated fields from the table: "conversion_tasks" */
  conversion_tasks_aggregate: Conversion_Tasks_Aggregate;
  /** fetch data from the table: "conversion_tasks" using primary key columns */
  conversion_tasks_by_pk?: Maybe<Conversion_Tasks>;
  /** fetch data from the table: "course_access_paths" */
  course_access_paths: Array<Course_Access_Paths>;
  /** fetch aggregated fields from the table: "course_access_paths" */
  course_access_paths_aggregate: Course_Access_Paths_Aggregate;
  /** fetch data from the table: "course_access_paths" using primary key columns */
  course_access_paths_by_pk?: Maybe<Course_Access_Paths>;
  /** fetch data from the table: "course_classes" */
  course_classes: Array<Course_Classes>;
  /** fetch aggregated fields from the table: "course_classes" */
  course_classes_aggregate: Course_Classes_Aggregate;
  /** fetch data from the table: "course_classes" using primary key columns */
  course_classes_by_pk?: Maybe<Course_Classes>;
  /** fetch data from the table: "course_students" */
  course_students: Array<Course_Students>;
  /** fetch aggregated fields from the table: "course_students" */
  course_students_aggregate: Course_Students_Aggregate;
  /** fetch data from the table: "course_students" using primary key columns */
  course_students_by_pk?: Maybe<Course_Students>;
  /** fetch data from the table: "course_study_plans" */
  course_study_plans: Array<Course_Study_Plans>;
  /** fetch aggregated fields from the table: "course_study_plans" */
  course_study_plans_aggregate: Course_Study_Plans_Aggregate;
  /** fetch data from the table: "course_study_plans" using primary key columns */
  course_study_plans_by_pk?: Maybe<Course_Study_Plans>;
  /** fetch data from the table: "courses" */
  courses: Array<Courses>;
  /** fetch data from the table: "courses_academic_years" */
  courses_academic_years: Array<Courses_Academic_Years>;
  /** fetch aggregated fields from the table: "courses_academic_years" */
  courses_academic_years_aggregate: Courses_Academic_Years_Aggregate;
  /** fetch data from the table: "courses_academic_years" using primary key columns */
  courses_academic_years_by_pk?: Maybe<Courses_Academic_Years>;
  /** fetch aggregated fields from the table: "courses" */
  courses_aggregate: Courses_Aggregate;
  /** fetch data from the table: "courses_books" */
  courses_books: Array<Courses_Books>;
  /** fetch aggregated fields from the table: "courses_books" */
  courses_books_aggregate: Courses_Books_Aggregate;
  /** fetch data from the table: "courses_books" using primary key columns */
  courses_books_by_pk?: Maybe<Courses_Books>;
  /** fetch data from the table: "courses" using primary key columns */
  courses_by_pk?: Maybe<Courses>;
  /** fetch data from the table: "courses_classes" */
  courses_classes: Array<Courses_Classes>;
  /** fetch aggregated fields from the table: "courses_classes" */
  courses_classes_aggregate: Courses_Classes_Aggregate;
  /** fetch data from the table: "courses_classes" using primary key columns */
  courses_classes_by_pk?: Maybe<Courses_Classes>;
  /** fetch data from the table: "discount" */
  discount: Array<Discount>;
  /** fetch aggregated fields from the table: "discount" */
  discount_aggregate: Discount_Aggregate;
  /** fetch data from the table: "discount" using primary key columns */
  discount_by_pk?: Maybe<Discount>;
  /** fetch data from the table: "districts" */
  districts: Array<Districts>;
  /** fetch aggregated fields from the table: "districts" */
  districts_aggregate: Districts_Aggregate;
  /** fetch data from the table: "districts" using primary key columns */
  districts_by_pk?: Maybe<Districts>;
  /** fetch data from the table: "e2e_features" */
  e2e_features: Array<E2e_Features>;
  /** fetch aggregated fields from the table: "e2e_features" */
  e2e_features_aggregate: E2e_Features_Aggregate;
  /** fetch data from the table: "e2e_features" using primary key columns */
  e2e_features_by_pk?: Maybe<E2e_Features>;
  /** fetch data from the table: "e2e_instances" */
  e2e_instances: Array<E2e_Instances>;
  /** fetch aggregated fields from the table: "e2e_instances" */
  e2e_instances_aggregate: E2e_Instances_Aggregate;
  /** fetch data from the table: "e2e_instances" using primary key columns */
  e2e_instances_by_pk?: Maybe<E2e_Instances>;
  /** fetch data from the table: "e2e_scenarios" */
  e2e_scenarios: Array<E2e_Scenarios>;
  /** fetch aggregated fields from the table: "e2e_scenarios" */
  e2e_scenarios_aggregate: E2e_Scenarios_Aggregate;
  /** fetch data from the table: "e2e_scenarios" using primary key columns */
  e2e_scenarios_by_pk?: Maybe<E2e_Scenarios>;
  /** fetch data from the table: "e2e_steps" */
  e2e_steps: Array<E2e_Steps>;
  /** fetch aggregated fields from the table: "e2e_steps" */
  e2e_steps_aggregate: E2e_Steps_Aggregate;
  /** fetch data from the table: "e2e_steps" using primary key columns */
  e2e_steps_by_pk?: Maybe<E2e_Steps>;
  /** execute function "find_assignment_by_topic_id" which returns "assignments" */
  find_assignment_by_topic_id: Array<Assignments>;
  /** execute function "find_assignment_by_topic_id" and query aggregates on result of table type "assignments" */
  find_assignment_by_topic_id_aggregate: Assignments_Aggregate;
  /** execute function "find_quiz_by_lo_id" which returns "quizzes" */
  find_quiz_by_lo_id: Array<Quizzes>;
  /** execute function "find_quiz_by_lo_id" and query aggregates on result of table type "quizzes" */
  find_quiz_by_lo_id_aggregate: Quizzes_Aggregate;
  /** execute function "find_teacher_by_school_id" which returns "users" */
  find_teacher_by_school_id: Array<Users>;
  /** execute function "find_teacher_by_school_id" and query aggregates on result of table type "users" */
  find_teacher_by_school_id_aggregate: Users_Aggregate;
  /** execute function "get_list_course_student_study_plans_by_filter" which returns "course_students" */
  get_list_course_student_study_plans_by_filter: Array<Course_Students>;
  /** execute function "get_list_course_student_study_plans_by_filter" and query aggregates on result of table type "course_students" */
  get_list_course_student_study_plans_by_filter_aggregate: Course_Students_Aggregate;
  /** execute function "get_list_course_study_plan_by_filter" which returns "course_study_plans" */
  get_list_course_study_plan_by_filter: Array<Course_Study_Plans>;
  /** execute function "get_list_course_study_plan_by_filter" and query aggregates on result of table type "course_study_plans" */
  get_list_course_study_plan_by_filter_aggregate: Course_Study_Plans_Aggregate;
  /** execute function "get_locations_active_by_course_id" which returns "course_access_paths" */
  get_locations_active_by_course_id: Array<Course_Access_Paths>;
  /** execute function "get_locations_active_by_course_id" and query aggregates on result of table type "course_access_paths" */
  get_locations_active_by_course_id_aggregate: Course_Access_Paths_Aggregate;
  /** execute function "get_locations_lowest_level" which returns "locations" */
  get_locations_lowest_level: Array<Locations>;
  /** execute function "get_locations_lowest_level" and query aggregates on result of table type "locations" */
  get_locations_lowest_level_aggregate: Locations_Aggregate;
  /** execute function "get_partner_dynamic_form_field_values_by_student" which returns "partner_dynamic_form_field_values" */
  get_partner_dynamic_form_field_values_by_student: Array<Partner_Dynamic_Form_Field_Values>;
  /** execute function "get_partner_dynamic_form_field_values_by_student" and query aggregates on result of table type "partner_dynamic_form_field_values" */
  get_partner_dynamic_form_field_values_by_student_aggregate: Partner_Dynamic_Form_Field_Values_Aggregate;
  /** execute function "get_previous_report_of_student" which returns "lesson_reports" */
  get_previous_report_of_student: Array<Lesson_Reports>;
  /** execute function "get_previous_report_of_student" and query aggregates on result of table type "lesson_reports" */
  get_previous_report_of_student_aggregate: Lesson_Reports_Aggregate;
  /** execute function "get_previous_report_of_student_v2" which returns "lesson_reports" */
  get_previous_report_of_student_v2: Array<Lesson_Reports>;
  /** execute function "get_previous_report_of_student_v2" and query aggregates on result of table type "lesson_reports" */
  get_previous_report_of_student_v2_aggregate: Lesson_Reports_Aggregate;
  /** execute function "get_previous_report_of_student_v3" which returns "lesson_reports" */
  get_previous_report_of_student_v3: Array<Lesson_Reports>;
  /** execute function "get_previous_report_of_student_v3" and query aggregates on result of table type "lesson_reports" */
  get_previous_report_of_student_v3_aggregate: Lesson_Reports_Aggregate;
  /** execute function "get_student_study_plans_by_filter" which returns "study_plans" */
  get_student_study_plans_by_filter: Array<Study_Plans>;
  /** execute function "get_student_study_plans_by_filter" and query aggregates on result of table type "study_plans" */
  get_student_study_plans_by_filter_aggregate: Study_Plans_Aggregate;
  /** fetch data from the table: "grade" */
  grade: Array<Grade>;
  /** fetch aggregated fields from the table: "grade" */
  grade_aggregate: Grade_Aggregate;
  /** fetch data from the table: "grade" using primary key columns */
  grade_by_pk?: Maybe<Grade>;
  /** fetch data from the table: "groups" */
  groups: Array<Groups>;
  /** fetch aggregated fields from the table: "groups" */
  groups_aggregate: Groups_Aggregate;
  /** fetch data from the table: "groups" using primary key columns */
  groups_by_pk?: Maybe<Groups>;
  /** fetch data from the table: "hub_tours" */
  hub_tours: Array<Hub_Tours>;
  /** fetch aggregated fields from the table: "hub_tours" */
  hub_tours_aggregate: Hub_Tours_Aggregate;
  /** fetch data from the table: "hub_tours" using primary key columns */
  hub_tours_by_pk?: Maybe<Hub_Tours>;
  /** fetch data from the table: "hubs" */
  hubs: Array<Hubs>;
  /** fetch aggregated fields from the table: "hubs" */
  hubs_aggregate: Hubs_Aggregate;
  /** fetch data from the table: "hubs" using primary key columns */
  hubs_by_pk?: Maybe<Hubs>;
  /** fetch data from the table: "info_notification_msgs" */
  info_notification_msgs: Array<Info_Notification_Msgs>;
  /** fetch aggregated fields from the table: "info_notification_msgs" */
  info_notification_msgs_aggregate: Info_Notification_Msgs_Aggregate;
  /** fetch data from the table: "info_notification_msgs" using primary key columns */
  info_notification_msgs_by_pk?: Maybe<Info_Notification_Msgs>;
  /** fetch data from the table: "info_notifications" */
  info_notifications: Array<Info_Notifications>;
  /** fetch aggregated fields from the table: "info_notifications" */
  info_notifications_aggregate: Info_Notifications_Aggregate;
  /** fetch data from the table: "info_notifications" using primary key columns */
  info_notifications_by_pk?: Maybe<Info_Notifications>;
  /** fetch data from the table: "ios_transactions" */
  ios_transactions: Array<Ios_Transactions>;
  /** fetch aggregated fields from the table: "ios_transactions" */
  ios_transactions_aggregate: Ios_Transactions_Aggregate;
  /** fetch data from the table: "ios_transactions" using primary key columns */
  ios_transactions_by_pk?: Maybe<Ios_Transactions>;
  /** fetch data from the table: "jpref_sync_data_logs" */
  jpref_sync_data_logs: Array<Jpref_Sync_Data_Logs>;
  /** fetch aggregated fields from the table: "jpref_sync_data_logs" */
  jpref_sync_data_logs_aggregate: Jpref_Sync_Data_Logs_Aggregate;
  /** fetch data from the table: "jpref_sync_data_logs" using primary key columns */
  jpref_sync_data_logs_by_pk?: Maybe<Jpref_Sync_Data_Logs>;
  /** fetch data from the table: "learning_objectives" */
  learning_objectives: Array<Learning_Objectives>;
  /** fetch aggregated fields from the table: "learning_objectives" */
  learning_objectives_aggregate: Learning_Objectives_Aggregate;
  /** fetch data from the table: "learning_objectives" using primary key columns */
  learning_objectives_by_pk?: Maybe<Learning_Objectives>;
  /** fetch data from the table: "lesson_groups" */
  lesson_groups: Array<Lesson_Groups>;
  /** fetch aggregated fields from the table: "lesson_groups" */
  lesson_groups_aggregate: Lesson_Groups_Aggregate;
  /** fetch data from the table: "lesson_groups" using primary key columns */
  lesson_groups_by_pk?: Maybe<Lesson_Groups>;
  /** fetch data from the table: "lesson_members" */
  lesson_members: Array<Lesson_Members>;
  /** fetch aggregated fields from the table: "lesson_members" */
  lesson_members_aggregate: Lesson_Members_Aggregate;
  /** fetch data from the table: "lesson_members" using primary key columns */
  lesson_members_by_pk?: Maybe<Lesson_Members>;
  /** fetch data from the table: "lesson_report_details" */
  lesson_report_details: Array<Lesson_Report_Details>;
  /** fetch aggregated fields from the table: "lesson_report_details" */
  lesson_report_details_aggregate: Lesson_Report_Details_Aggregate;
  /** fetch data from the table: "lesson_report_details" using primary key columns */
  lesson_report_details_by_pk?: Maybe<Lesson_Report_Details>;
  /** fetch data from the table: "lesson_reports" */
  lesson_reports: Array<Lesson_Reports>;
  /** fetch aggregated fields from the table: "lesson_reports" */
  lesson_reports_aggregate: Lesson_Reports_Aggregate;
  /** fetch data from the table: "lesson_reports" using primary key columns */
  lesson_reports_by_pk?: Maybe<Lesson_Reports>;
  /** fetch data from the table: "lesson_schedules" */
  lesson_schedules: Array<Lesson_Schedules>;
  /** fetch aggregated fields from the table: "lesson_schedules" */
  lesson_schedules_aggregate: Lesson_Schedules_Aggregate;
  /** fetch data from the table: "lesson_student_subscription_access_path" */
  lesson_student_subscription_access_path: Array<Lesson_Student_Subscription_Access_Path>;
  /** fetch aggregated fields from the table: "lesson_student_subscription_access_path" */
  lesson_student_subscription_access_path_aggregate: Lesson_Student_Subscription_Access_Path_Aggregate;
  /** fetch data from the table: "lesson_student_subscription_access_path" using primary key columns */
  lesson_student_subscription_access_path_by_pk?: Maybe<Lesson_Student_Subscription_Access_Path>;
  /** fetch data from the table: "lesson_student_subscriptions" */
  lesson_student_subscriptions: Array<Lesson_Student_Subscriptions>;
  /** fetch aggregated fields from the table: "lesson_student_subscriptions" */
  lesson_student_subscriptions_aggregate: Lesson_Student_Subscriptions_Aggregate;
  /** fetch data from the table: "lesson_student_subscriptions" using primary key columns */
  lesson_student_subscriptions_by_pk?: Maybe<Lesson_Student_Subscriptions>;
  /** fetch data from the table: "lesson_study_plan_items" */
  lesson_study_plan_items: Array<Lesson_Study_Plan_Items>;
  /** fetch aggregated fields from the table: "lesson_study_plan_items" */
  lesson_study_plan_items_aggregate: Lesson_Study_Plan_Items_Aggregate;
  /** fetch data from the table: "lesson_study_plan_items" using primary key columns */
  lesson_study_plan_items_by_pk?: Maybe<Lesson_Study_Plan_Items>;
  /** fetch data from the table: "lessons" */
  lessons: Array<Lessons>;
  /** fetch aggregated fields from the table: "lessons" */
  lessons_aggregate: Lessons_Aggregate;
  /** fetch data from the table: "lessons" using primary key columns */
  lessons_by_pk?: Maybe<Lessons>;
  /** fetch data from the table: "lessons_courses" */
  lessons_courses: Array<Lessons_Courses>;
  /** fetch aggregated fields from the table: "lessons_courses" */
  lessons_courses_aggregate: Lessons_Courses_Aggregate;
  /** fetch data from the table: "lessons_courses" using primary key columns */
  lessons_courses_by_pk?: Maybe<Lessons_Courses>;
  /** fetch data from the table: "lessons_teachers" */
  lessons_teachers: Array<Lessons_Teachers>;
  /** fetch aggregated fields from the table: "lessons_teachers" */
  lessons_teachers_aggregate: Lessons_Teachers_Aggregate;
  /** fetch data from the table: "lessons_teachers" using primary key columns */
  lessons_teachers_by_pk?: Maybe<Lessons_Teachers>;
  /** fetch data from the table: "lo_study_plan_items" */
  lo_study_plan_items: Array<Lo_Study_Plan_Items>;
  /** fetch aggregated fields from the table: "lo_study_plan_items" */
  lo_study_plan_items_aggregate: Lo_Study_Plan_Items_Aggregate;
  /** fetch data from the table: "lo_study_plan_items" using primary key columns */
  lo_study_plan_items_by_pk?: Maybe<Lo_Study_Plan_Items>;
  /** fetch data from the table: "locations" */
  locations: Array<Locations>;
  /** fetch aggregated fields from the table: "locations" */
  locations_aggregate: Locations_Aggregate;
  /** fetch data from the table: "locations" using primary key columns */
  locations_by_pk?: Maybe<Locations>;
  /** fetch data from the table: "media" */
  media: Array<Media>;
  /** fetch aggregated fields from the table: "media" */
  media_aggregate: Media_Aggregate;
  /** fetch data from the table: "media" using primary key columns */
  media_by_pk?: Maybe<Media>;
  /** fetch data from the table: "notification_messages" */
  notification_messages: Array<Notification_Messages>;
  /** fetch aggregated fields from the table: "notification_messages" */
  notification_messages_aggregate: Notification_Messages_Aggregate;
  /** fetch data from the table: "notification_messages" using primary key columns */
  notification_messages_by_pk?: Maybe<Notification_Messages>;
  /** fetch data from the table: "notification_targets" */
  notification_targets: Array<Notification_Targets>;
  /** fetch aggregated fields from the table: "notification_targets" */
  notification_targets_aggregate: Notification_Targets_Aggregate;
  /** fetch data from the table: "notification_targets" using primary key columns */
  notification_targets_by_pk?: Maybe<Notification_Targets>;
  /** fetch data from the table: "notifications" */
  notifications: Array<Notifications>;
  /** fetch aggregated fields from the table: "notifications" */
  notifications_aggregate: Notifications_Aggregate;
  /** fetch data from the table: "notifications" using primary key columns */
  notifications_by_pk?: Maybe<Notifications>;
  /** fetch data from the table: "order" */
  order: Array<Order>;
  /** fetch data from the table: "order_action_log" */
  order_action_log: Array<Order_Action_Log>;
  /** fetch aggregated fields from the table: "order_action_log" */
  order_action_log_aggregate: Order_Action_Log_Aggregate;
  /** fetch data from the table: "order_action_log" using primary key columns */
  order_action_log_by_pk?: Maybe<Order_Action_Log>;
  /** fetch aggregated fields from the table: "order" */
  order_aggregate: Order_Aggregate;
  /** fetch data from the table: "order" using primary key columns */
  order_by_pk?: Maybe<Order>;
  /** fetch data from the table: "order_item" */
  order_item: Array<Order_Item>;
  /** fetch aggregated fields from the table: "order_item" */
  order_item_aggregate: Order_Item_Aggregate;
  /** fetch data from the table: "order_item" using primary key columns */
  order_item_by_pk?: Maybe<Order_Item>;
  /** fetch data from the table: "organizations" */
  organizations: Array<Organizations>;
  /** fetch aggregated fields from the table: "organizations" */
  organizations_aggregate: Organizations_Aggregate;
  /** fetch data from the table: "organizations" using primary key columns */
  organizations_by_pk?: Maybe<Organizations>;
  /** fetch data from the table: "orgs" */
  orgs: Array<Orgs>;
  /** fetch aggregated fields from the table: "orgs" */
  orgs_aggregate: Orgs_Aggregate;
  /** fetch data from the table: "orgs" using primary key columns */
  orgs_by_pk?: Maybe<Orgs>;
  /** fetch data from the table: "packages" */
  packages: Array<Packages>;
  /** fetch aggregated fields from the table: "packages" */
  packages_aggregate: Packages_Aggregate;
  /** fetch data from the table: "packages" using primary key columns */
  packages_by_pk?: Maybe<Packages>;
  /** fetch data from the table: "parents" */
  parents: Array<Parents>;
  /** fetch aggregated fields from the table: "parents" */
  parents_aggregate: Parents_Aggregate;
  /** fetch data from the table: "parents" using primary key columns */
  parents_by_pk?: Maybe<Parents>;
  /** fetch data from the table: "partner_dynamic_form_field_values" */
  partner_dynamic_form_field_values: Array<Partner_Dynamic_Form_Field_Values>;
  /** fetch aggregated fields from the table: "partner_dynamic_form_field_values" */
  partner_dynamic_form_field_values_aggregate: Partner_Dynamic_Form_Field_Values_Aggregate;
  /** fetch data from the table: "partner_dynamic_form_field_values" using primary key columns */
  partner_dynamic_form_field_values_by_pk?: Maybe<Partner_Dynamic_Form_Field_Values>;
  /** fetch data from the table: "partner_form_configs" */
  partner_form_configs: Array<Partner_Form_Configs>;
  /** fetch aggregated fields from the table: "partner_form_configs" */
  partner_form_configs_aggregate: Partner_Form_Configs_Aggregate;
  /** fetch data from the table: "partner_form_configs" using primary key columns */
  partner_form_configs_by_pk?: Maybe<Partner_Form_Configs>;
  /** fetch data from the table: "plans" */
  plans: Array<Plans>;
  /** fetch aggregated fields from the table: "plans" */
  plans_aggregate: Plans_Aggregate;
  /** fetch data from the table: "plans" using primary key columns */
  plans_by_pk?: Maybe<Plans>;
  /** fetch data from the table: "preset_study_plans" */
  preset_study_plans: Array<Preset_Study_Plans>;
  /** fetch aggregated fields from the table: "preset_study_plans" */
  preset_study_plans_aggregate: Preset_Study_Plans_Aggregate;
  /** fetch data from the table: "preset_study_plans" using primary key columns */
  preset_study_plans_by_pk?: Maybe<Preset_Study_Plans>;
  /** fetch data from the table: "preset_study_plans_weekly" */
  preset_study_plans_weekly: Array<Preset_Study_Plans_Weekly>;
  /** fetch aggregated fields from the table: "preset_study_plans_weekly" */
  preset_study_plans_weekly_aggregate: Preset_Study_Plans_Weekly_Aggregate;
  /** fetch data from the table: "preset_study_plans_weekly" using primary key columns */
  preset_study_plans_weekly_by_pk?: Maybe<Preset_Study_Plans_Weekly>;
  /** fetch data from the table: "preset_study_plans_weekly_format" */
  preset_study_plans_weekly_format: Array<Preset_Study_Plans_Weekly_Format>;
  /** fetch aggregated fields from the table: "preset_study_plans_weekly_format" */
  preset_study_plans_weekly_format_aggregate: Preset_Study_Plans_Weekly_Format_Aggregate;
  /** fetch data from the table: "product" */
  product: Array<Product>;
  /** fetch aggregated fields from the table: "product" */
  product_aggregate: Product_Aggregate;
  /** fetch data from the table: "product" using primary key columns */
  product_by_pk?: Maybe<Product>;
  /** fetch data from the table: "product_fee" */
  product_fee: Array<Product_Fee>;
  /** fetch aggregated fields from the table: "product_fee" */
  product_fee_aggregate: Product_Fee_Aggregate;
  /** fetch data from the table: "product_fee" using primary key columns */
  product_fee_by_pk?: Maybe<Product_Fee>;
  /** fetch data from the table: "product_grade" */
  product_grade: Array<Product_Grade>;
  /** fetch aggregated fields from the table: "product_grade" */
  product_grade_aggregate: Product_Grade_Aggregate;
  /** fetch data from the table: "product_grade" using primary key columns */
  product_grade_by_pk?: Maybe<Product_Grade>;
  /** fetch data from the table: "product_location" */
  product_location: Array<Product_Location>;
  /** fetch aggregated fields from the table: "product_location" */
  product_location_aggregate: Product_Location_Aggregate;
  /** fetch data from the table: "product_location" using primary key columns */
  product_location_by_pk?: Maybe<Product_Location>;
  /** fetch data from the table: "product_material" */
  product_material: Array<Product_Material>;
  /** fetch aggregated fields from the table: "product_material" */
  product_material_aggregate: Product_Material_Aggregate;
  /** fetch data from the table: "product_material" using primary key columns */
  product_material_by_pk?: Maybe<Product_Material>;
  /** fetch data from the table: "product_package" */
  product_package: Array<Product_Package>;
  /** fetch aggregated fields from the table: "product_package" */
  product_package_aggregate: Product_Package_Aggregate;
  /** fetch data from the table: "product_package" using primary key columns */
  product_package_by_pk?: Maybe<Product_Package>;
  /** fetch data from the table: "product_price" */
  product_price: Array<Product_Price>;
  /** fetch aggregated fields from the table: "product_price" */
  product_price_aggregate: Product_Price_Aggregate;
  /** fetch data from the table: "product_price" using primary key columns */
  product_price_by_pk?: Maybe<Product_Price>;
  /** fetch data from the table: "promotion_rules" */
  promotion_rules: Array<Promotion_Rules>;
  /** fetch aggregated fields from the table: "promotion_rules" */
  promotion_rules_aggregate: Promotion_Rules_Aggregate;
  /** fetch data from the table: "promotion_rules" using primary key columns */
  promotion_rules_by_pk?: Maybe<Promotion_Rules>;
  /** fetch data from the table: "promotions" */
  promotions: Array<Promotions>;
  /** fetch aggregated fields from the table: "promotions" */
  promotions_aggregate: Promotions_Aggregate;
  /** fetch data from the table: "promotions" using primary key columns */
  promotions_by_pk?: Maybe<Promotions>;
  /** fetch data from the table: "questions" */
  questions: Array<Questions>;
  /** fetch aggregated fields from the table: "questions" */
  questions_aggregate: Questions_Aggregate;
  /** fetch data from the table: "questions" using primary key columns */
  questions_by_pk?: Maybe<Questions>;
  /** fetch data from the table: "questions_tagged_learning_objectives" */
  questions_tagged_learning_objectives: Array<Questions_Tagged_Learning_Objectives>;
  /** fetch aggregated fields from the table: "questions_tagged_learning_objectives" */
  questions_tagged_learning_objectives_aggregate: Questions_Tagged_Learning_Objectives_Aggregate;
  /** fetch data from the table: "questions_tagged_learning_objectives" using primary key columns */
  questions_tagged_learning_objectives_by_pk?: Maybe<Questions_Tagged_Learning_Objectives>;
  /** fetch data from the table: "quiz_sets" */
  quiz_sets: Array<Quiz_Sets>;
  /** fetch aggregated fields from the table: "quiz_sets" */
  quiz_sets_aggregate: Quiz_Sets_Aggregate;
  /** fetch data from the table: "quiz_sets" using primary key columns */
  quiz_sets_by_pk?: Maybe<Quiz_Sets>;
  /** fetch data from the table: "quizsets" */
  quizsets: Array<Quizsets>;
  /** fetch aggregated fields from the table: "quizsets" */
  quizsets_aggregate: Quizsets_Aggregate;
  /** fetch data from the table: "quizsets" using primary key columns */
  quizsets_by_pk?: Maybe<Quizsets>;
  /** fetch data from the table: "quizzes" */
  quizzes: Array<Quizzes>;
  /** fetch aggregated fields from the table: "quizzes" */
  quizzes_aggregate: Quizzes_Aggregate;
  /** fetch data from the table: "quizzes" using primary key columns */
  quizzes_by_pk?: Maybe<Quizzes>;
  /** fetch data from the table: "scheduler_items" */
  scheduler_items: Array<Scheduler_Items>;
  /** fetch aggregated fields from the table: "scheduler_items" */
  scheduler_items_aggregate: Scheduler_Items_Aggregate;
  /** fetch data from the table: "scheduler_items" using primary key columns */
  scheduler_items_by_pk?: Maybe<Scheduler_Items>;
  /** fetch data from the table: "scheduler_patterns" */
  scheduler_patterns: Array<Scheduler_Patterns>;
  /** fetch aggregated fields from the table: "scheduler_patterns" */
  scheduler_patterns_aggregate: Scheduler_Patterns_Aggregate;
  /** fetch data from the table: "scheduler_patterns" using primary key columns */
  scheduler_patterns_by_pk?: Maybe<Scheduler_Patterns>;
  /** fetch data from the table: "schema_migrations" */
  schema_migrations: Array<Schema_Migrations>;
  /** fetch aggregated fields from the table: "schema_migrations" */
  schema_migrations_aggregate: Schema_Migrations_Aggregate;
  /** fetch data from the table: "schema_migrations" using primary key columns */
  schema_migrations_by_pk?: Maybe<Schema_Migrations>;
  /** fetch data from the table: "school_admins" */
  school_admins: Array<School_Admins>;
  /** fetch aggregated fields from the table: "school_admins" */
  school_admins_aggregate: School_Admins_Aggregate;
  /** fetch data from the table: "school_admins" using primary key columns */
  school_admins_by_pk?: Maybe<School_Admins>;
  /** fetch data from the table: "school_configs" */
  school_configs: Array<School_Configs>;
  /** fetch aggregated fields from the table: "school_configs" */
  school_configs_aggregate: School_Configs_Aggregate;
  /** fetch data from the table: "school_configs" using primary key columns */
  school_configs_by_pk?: Maybe<School_Configs>;
  /** fetch data from the table: "schools" */
  schools: Array<Schools>;
  /** fetch aggregated fields from the table: "schools" */
  schools_aggregate: Schools_Aggregate;
  /** fetch data from the table: "schools" using primary key columns */
  schools_by_pk?: Maybe<Schools>;
  /** execute function "search_courses_by_name" which returns "courses" */
  search_courses_by_name: Array<Courses>;
  /** execute function "search_courses_by_name" and query aggregates on result of table type "courses" */
  search_courses_by_name_aggregate: Courses_Aggregate;
  /** fetch data from the table: "shuffled_quiz_sets" */
  shuffled_quiz_sets: Array<Shuffled_Quiz_Sets>;
  /** fetch aggregated fields from the table: "shuffled_quiz_sets" */
  shuffled_quiz_sets_aggregate: Shuffled_Quiz_Sets_Aggregate;
  /** fetch data from the table: "shuffled_quiz_sets" using primary key columns */
  shuffled_quiz_sets_by_pk?: Maybe<Shuffled_Quiz_Sets>;
  /** fetch data from the table: "student_assignments" */
  student_assignments: Array<Student_Assignments>;
  /** fetch aggregated fields from the table: "student_assignments" */
  student_assignments_aggregate: Student_Assignments_Aggregate;
  /** fetch data from the table: "student_assignments" using primary key columns */
  student_assignments_by_pk?: Maybe<Student_Assignments>;
  /** fetch data from the table: "student_comments" */
  student_comments: Array<Student_Comments>;
  /** fetch aggregated fields from the table: "student_comments" */
  student_comments_aggregate: Student_Comments_Aggregate;
  /** fetch data from the table: "student_comments" using primary key columns */
  student_comments_by_pk?: Maybe<Student_Comments>;
  /** fetch data from the table: "student_entryexit_records" */
  student_entryexit_records: Array<Student_Entryexit_Records>;
  /** fetch aggregated fields from the table: "student_entryexit_records" */
  student_entryexit_records_aggregate: Student_Entryexit_Records_Aggregate;
  /** fetch data from the table: "student_entryexit_records" using primary key columns */
  student_entryexit_records_by_pk?: Maybe<Student_Entryexit_Records>;
  /** fetch data from the table: "student_event_logs" */
  student_event_logs: Array<Student_Event_Logs>;
  /** fetch aggregated fields from the table: "student_event_logs" */
  student_event_logs_aggregate: Student_Event_Logs_Aggregate;
  /** fetch data from the table: "student_event_logs" using primary key columns */
  student_event_logs_by_pk?: Maybe<Student_Event_Logs>;
  /** fetch data from the table: "student_learning_time_by_daily" */
  student_learning_time_by_daily: Array<Student_Learning_Time_By_Daily>;
  /** fetch aggregated fields from the table: "student_learning_time_by_daily" */
  student_learning_time_by_daily_aggregate: Student_Learning_Time_By_Daily_Aggregate;
  /** fetch data from the table: "student_learning_time_by_daily" using primary key columns */
  student_learning_time_by_daily_by_pk?: Maybe<Student_Learning_Time_By_Daily>;
  /** fetch data from the table: "student_packages" */
  student_packages: Array<Student_Packages>;
  /** fetch aggregated fields from the table: "student_packages" */
  student_packages_aggregate: Student_Packages_Aggregate;
  /** fetch data from the table: "student_packages" using primary key columns */
  student_packages_by_pk?: Maybe<Student_Packages>;
  /** fetch data from the table: "student_parents" */
  student_parents: Array<Student_Parents>;
  /** fetch aggregated fields from the table: "student_parents" */
  student_parents_aggregate: Student_Parents_Aggregate;
  /** fetch data from the table: "student_parents" using primary key columns */
  student_parents_by_pk?: Maybe<Student_Parents>;
  /** fetch data from the table: "student_qr" */
  student_qr: Array<Student_Qr>;
  /** fetch aggregated fields from the table: "student_qr" */
  student_qr_aggregate: Student_Qr_Aggregate;
  /** fetch data from the table: "student_qr" using primary key columns */
  student_qr_by_pk?: Maybe<Student_Qr>;
  /** fetch data from the table: "student_questions" */
  student_questions: Array<Student_Questions>;
  /** fetch aggregated fields from the table: "student_questions" */
  student_questions_aggregate: Student_Questions_Aggregate;
  /** fetch data from the table: "student_questions" using primary key columns */
  student_questions_by_pk?: Maybe<Student_Questions>;
  /** fetch data from the table: "student_statistics" */
  student_statistics: Array<Student_Statistics>;
  /** fetch aggregated fields from the table: "student_statistics" */
  student_statistics_aggregate: Student_Statistics_Aggregate;
  /** fetch data from the table: "student_study_plans" */
  student_study_plans: Array<Student_Study_Plans>;
  /** fetch aggregated fields from the table: "student_study_plans" */
  student_study_plans_aggregate: Student_Study_Plans_Aggregate;
  /** fetch data from the table: "student_study_plans" using primary key columns */
  student_study_plans_by_pk?: Maybe<Student_Study_Plans>;
  /** fetch data from the table: "student_submission_grades" */
  student_submission_grades: Array<Student_Submission_Grades>;
  /** fetch aggregated fields from the table: "student_submission_grades" */
  student_submission_grades_aggregate: Student_Submission_Grades_Aggregate;
  /** fetch data from the table: "student_submission_grades" using primary key columns */
  student_submission_grades_by_pk?: Maybe<Student_Submission_Grades>;
  /** fetch data from the table: "student_submission_scores" */
  student_submission_scores: Array<Student_Submission_Scores>;
  /** fetch aggregated fields from the table: "student_submission_scores" */
  student_submission_scores_aggregate: Student_Submission_Scores_Aggregate;
  /** fetch data from the table: "student_submission_scores" using primary key columns */
  student_submission_scores_by_pk?: Maybe<Student_Submission_Scores>;
  /** fetch data from the table: "student_submissions" */
  student_submissions: Array<Student_Submissions>;
  /** fetch aggregated fields from the table: "student_submissions" */
  student_submissions_aggregate: Student_Submissions_Aggregate;
  /** fetch data from the table: "student_submissions" using primary key columns */
  student_submissions_by_pk?: Maybe<Student_Submissions>;
  /** fetch data from the table: "student_subscriptions" */
  student_subscriptions: Array<Student_Subscriptions>;
  /** fetch aggregated fields from the table: "student_subscriptions" */
  student_subscriptions_aggregate: Student_Subscriptions_Aggregate;
  /** fetch data from the table: "student_subscriptions" using primary key columns */
  student_subscriptions_by_pk?: Maybe<Student_Subscriptions>;
  /** fetch data from the table: "students" */
  students: Array<Students>;
  /** fetch aggregated fields from the table: "students" */
  students_aggregate: Students_Aggregate;
  /** fetch data from the table: "students_assigned_coaches" */
  students_assigned_coaches: Array<Students_Assigned_Coaches>;
  /** fetch aggregated fields from the table: "students_assigned_coaches" */
  students_assigned_coaches_aggregate: Students_Assigned_Coaches_Aggregate;
  /** fetch data from the table: "students" using primary key columns */
  students_by_pk?: Maybe<Students>;
  /** fetch data from the table: "students_learning_objectives_completeness" */
  students_learning_objectives_completeness: Array<Students_Learning_Objectives_Completeness>;
  /** fetch aggregated fields from the table: "students_learning_objectives_completeness" */
  students_learning_objectives_completeness_aggregate: Students_Learning_Objectives_Completeness_Aggregate;
  /** fetch data from the table: "students_learning_objectives_completeness" using primary key columns */
  students_learning_objectives_completeness_by_pk?: Maybe<Students_Learning_Objectives_Completeness>;
  /** fetch data from the table: "students_learning_objectives_records" */
  students_learning_objectives_records: Array<Students_Learning_Objectives_Records>;
  /** fetch aggregated fields from the table: "students_learning_objectives_records" */
  students_learning_objectives_records_aggregate: Students_Learning_Objectives_Records_Aggregate;
  /** fetch data from the table: "students_learning_objectives_records" using primary key columns */
  students_learning_objectives_records_by_pk?: Maybe<Students_Learning_Objectives_Records>;
  /** fetch data from the table: "students_study_plans_weekly" */
  students_study_plans_weekly: Array<Students_Study_Plans_Weekly>;
  /** fetch aggregated fields from the table: "students_study_plans_weekly" */
  students_study_plans_weekly_aggregate: Students_Study_Plans_Weekly_Aggregate;
  /** fetch data from the table: "students_study_plans_weekly" using primary key columns */
  students_study_plans_weekly_by_pk?: Maybe<Students_Study_Plans_Weekly>;
  /** fetch data from the table: "students_topics_completeness" */
  students_topics_completeness: Array<Students_Topics_Completeness>;
  /** fetch aggregated fields from the table: "students_topics_completeness" */
  students_topics_completeness_aggregate: Students_Topics_Completeness_Aggregate;
  /** fetch data from the table: "students_topics_overdue" */
  students_topics_overdue: Array<Students_Topics_Overdue>;
  /** fetch aggregated fields from the table: "students_topics_overdue" */
  students_topics_overdue_aggregate: Students_Topics_Overdue_Aggregate;
  /** fetch data from the table: "students_topics_overdue" using primary key columns */
  students_topics_overdue_by_pk?: Maybe<Students_Topics_Overdue>;
  /** fetch data from the table: "study_plan_items" */
  study_plan_items: Array<Study_Plan_Items>;
  /** fetch aggregated fields from the table: "study_plan_items" */
  study_plan_items_aggregate: Study_Plan_Items_Aggregate;
  /** fetch data from the table: "study_plan_items" using primary key columns */
  study_plan_items_by_pk?: Maybe<Study_Plan_Items>;
  /** fetch data from the table: "study_plans" */
  study_plans: Array<Study_Plans>;
  /** fetch aggregated fields from the table: "study_plans" */
  study_plans_aggregate: Study_Plans_Aggregate;
  /** fetch data from the table: "study_plans" using primary key columns */
  study_plans_by_pk?: Maybe<Study_Plans>;
  /** fetch data from the table: "tax" */
  tax: Array<Tax>;
  /** fetch aggregated fields from the table: "tax" */
  tax_aggregate: Tax_Aggregate;
  /** fetch data from the table: "tax" using primary key columns */
  tax_by_pk?: Maybe<Tax>;
  /** fetch data from the table: "teacher_by_school_id" */
  teacher_by_school_id: Array<Teacher_By_School_Id>;
  /** fetch aggregated fields from the table: "teacher_by_school_id" */
  teacher_by_school_id_aggregate: Teacher_By_School_Id_Aggregate;
  /** fetch data from the table: "teachers" */
  teachers: Array<Teachers>;
  /** fetch aggregated fields from the table: "teachers" */
  teachers_aggregate: Teachers_Aggregate;
  /** fetch data from the table: "teachers" using primary key columns */
  teachers_by_pk?: Maybe<Teachers>;
  /** fetch data from the table: "topics" */
  topics: Array<Topics>;
  /** fetch aggregated fields from the table: "topics" */
  topics_aggregate: Topics_Aggregate;
  /** fetch data from the table: "topics_assignments" */
  topics_assignments: Array<Topics_Assignments>;
  /** fetch aggregated fields from the table: "topics_assignments" */
  topics_assignments_aggregate: Topics_Assignments_Aggregate;
  /** fetch data from the table: "topics_assignments" using primary key columns */
  topics_assignments_by_pk?: Maybe<Topics_Assignments>;
  /** fetch data from the table: "topics" using primary key columns */
  topics_by_pk?: Maybe<Topics>;
  /** fetch data from the table: "topics_learning_objectives" */
  topics_learning_objectives: Array<Topics_Learning_Objectives>;
  /** fetch aggregated fields from the table: "topics_learning_objectives" */
  topics_learning_objectives_aggregate: Topics_Learning_Objectives_Aggregate;
  /** fetch data from the table: "topics_learning_objectives" using primary key columns */
  topics_learning_objectives_by_pk?: Maybe<Topics_Learning_Objectives>;
  /** fetch data from the table: "tutors" */
  tutors: Array<Tutors>;
  /** fetch aggregated fields from the table: "tutors" */
  tutors_aggregate: Tutors_Aggregate;
  /** fetch data from the table: "tutors" using primary key columns */
  tutors_by_pk?: Maybe<Tutors>;
  /** fetch data from the table: "user_access_paths" */
  user_access_paths: Array<User_Access_Paths>;
  /** fetch aggregated fields from the table: "user_access_paths" */
  user_access_paths_aggregate: User_Access_Paths_Aggregate;
  /** fetch data from the table: "user_access_paths" using primary key columns */
  user_access_paths_by_pk?: Maybe<User_Access_Paths>;
  /** fetch data from the table: "user_notifications" */
  user_notifications: Array<User_Notifications>;
  /** fetch aggregated fields from the table: "user_notifications" */
  user_notifications_aggregate: User_Notifications_Aggregate;
  /** fetch data from the table: "user_notifications" using primary key columns */
  user_notifications_by_pk?: Maybe<User_Notifications>;
  /** fetch data from the table: "users" */
  users: Array<Users>;
  /** fetch aggregated fields from the table: "users" */
  users_aggregate: Users_Aggregate;
  /** fetch data from the table: "users" using primary key columns */
  users_by_pk?: Maybe<Users>;
  /** fetch data from the table: "users_groups" */
  users_groups: Array<Users_Groups>;
  /** fetch aggregated fields from the table: "users_groups" */
  users_groups_aggregate: Users_Groups_Aggregate;
  /** fetch data from the table: "users_groups" using primary key columns */
  users_groups_by_pk?: Maybe<Users_Groups>;
  /** fetch data from the table: "users_info_notifications" */
  users_info_notifications: Array<Users_Info_Notifications>;
  /** fetch aggregated fields from the table: "users_info_notifications" */
  users_info_notifications_aggregate: Users_Info_Notifications_Aggregate;
  /** fetch data from the table: "users_info_notifications" using primary key columns */
  users_info_notifications_by_pk?: Maybe<Users_Info_Notifications>;
};


/** query root */
export type Query_RootAcademic_YearsArgs = {
  distinct_on?: Maybe<Array<Academic_Years_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Academic_Years_Order_By>>;
  where?: Maybe<Academic_Years_Bool_Exp>;
};


/** query root */
export type Query_RootAcademic_Years_AggregateArgs = {
  distinct_on?: Maybe<Array<Academic_Years_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Academic_Years_Order_By>>;
  where?: Maybe<Academic_Years_Bool_Exp>;
};


/** query root */
export type Query_RootAcademic_Years_By_PkArgs = {
  academic_year_id: Scalars['String'];
};


/** query root */
export type Query_RootActivity_LogsArgs = {
  distinct_on?: Maybe<Array<Activity_Logs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Activity_Logs_Order_By>>;
  where?: Maybe<Activity_Logs_Bool_Exp>;
};


/** query root */
export type Query_RootActivity_Logs_AggregateArgs = {
  distinct_on?: Maybe<Array<Activity_Logs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Activity_Logs_Order_By>>;
  where?: Maybe<Activity_Logs_Bool_Exp>;
};


/** query root */
export type Query_RootActivity_Logs_By_PkArgs = {
  activity_log_id: Scalars['String'];
};


/** query root */
export type Query_RootApple_UsersArgs = {
  distinct_on?: Maybe<Array<Apple_Users_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Apple_Users_Order_By>>;
  where?: Maybe<Apple_Users_Bool_Exp>;
};


/** query root */
export type Query_RootApple_Users_AggregateArgs = {
  distinct_on?: Maybe<Array<Apple_Users_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Apple_Users_Order_By>>;
  where?: Maybe<Apple_Users_Bool_Exp>;
};


/** query root */
export type Query_RootApple_Users_By_PkArgs = {
  apple_user_id: Scalars['String'];
};


/** query root */
export type Query_RootAssign_Study_Plan_TasksArgs = {
  distinct_on?: Maybe<Array<Assign_Study_Plan_Tasks_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assign_Study_Plan_Tasks_Order_By>>;
  where?: Maybe<Assign_Study_Plan_Tasks_Bool_Exp>;
};


/** query root */
export type Query_RootAssign_Study_Plan_Tasks_AggregateArgs = {
  distinct_on?: Maybe<Array<Assign_Study_Plan_Tasks_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assign_Study_Plan_Tasks_Order_By>>;
  where?: Maybe<Assign_Study_Plan_Tasks_Bool_Exp>;
};


/** query root */
export type Query_RootAssign_Study_Plan_Tasks_By_PkArgs = {
  id: Scalars['String'];
};


/** query root */
export type Query_RootAssignment_Study_Plan_ItemsArgs = {
  distinct_on?: Maybe<Array<Assignment_Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assignment_Study_Plan_Items_Order_By>>;
  where?: Maybe<Assignment_Study_Plan_Items_Bool_Exp>;
};


/** query root */
export type Query_RootAssignment_Study_Plan_Items_AggregateArgs = {
  distinct_on?: Maybe<Array<Assignment_Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assignment_Study_Plan_Items_Order_By>>;
  where?: Maybe<Assignment_Study_Plan_Items_Bool_Exp>;
};


/** query root */
export type Query_RootAssignment_Study_Plan_Items_By_PkArgs = {
  assignment_id: Scalars['String'];
  study_plan_item_id: Scalars['String'];
};


/** query root */
export type Query_RootAssignmentsArgs = {
  distinct_on?: Maybe<Array<Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assignments_Order_By>>;
  where?: Maybe<Assignments_Bool_Exp>;
};


/** query root */
export type Query_RootAssignments_AggregateArgs = {
  distinct_on?: Maybe<Array<Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assignments_Order_By>>;
  where?: Maybe<Assignments_Bool_Exp>;
};


/** query root */
export type Query_RootAssignments_By_PkArgs = {
  assignment_id: Scalars['String'];
};


/** query root */
export type Query_RootBill_ItemArgs = {
  distinct_on?: Maybe<Array<Bill_Item_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Bill_Item_Order_By>>;
  where?: Maybe<Bill_Item_Bool_Exp>;
};


/** query root */
export type Query_RootBill_Item_AggregateArgs = {
  distinct_on?: Maybe<Array<Bill_Item_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Bill_Item_Order_By>>;
  where?: Maybe<Bill_Item_Bool_Exp>;
};


/** query root */
export type Query_RootBill_Item_By_PkArgs = {
  bill_item_sequence_number: Scalars['Int'];
  order_id: Scalars['String'];
};


/** query root */
export type Query_RootBilling_HistoriesArgs = {
  distinct_on?: Maybe<Array<Billing_Histories_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Billing_Histories_Order_By>>;
  where?: Maybe<Billing_Histories_Bool_Exp>;
};


/** query root */
export type Query_RootBilling_Histories_AggregateArgs = {
  distinct_on?: Maybe<Array<Billing_Histories_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Billing_Histories_Order_By>>;
  where?: Maybe<Billing_Histories_Bool_Exp>;
};


/** query root */
export type Query_RootBilling_Histories_By_PkArgs = {
  billing_id: Scalars['String'];
};


/** query root */
export type Query_RootBilling_ScheduleArgs = {
  distinct_on?: Maybe<Array<Billing_Schedule_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Billing_Schedule_Order_By>>;
  where?: Maybe<Billing_Schedule_Bool_Exp>;
};


/** query root */
export type Query_RootBilling_Schedule_AggregateArgs = {
  distinct_on?: Maybe<Array<Billing_Schedule_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Billing_Schedule_Order_By>>;
  where?: Maybe<Billing_Schedule_Bool_Exp>;
};


/** query root */
export type Query_RootBilling_Schedule_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootBilling_Schedule_PeriodArgs = {
  distinct_on?: Maybe<Array<Billing_Schedule_Period_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Billing_Schedule_Period_Order_By>>;
  where?: Maybe<Billing_Schedule_Period_Bool_Exp>;
};


/** query root */
export type Query_RootBilling_Schedule_Period_AggregateArgs = {
  distinct_on?: Maybe<Array<Billing_Schedule_Period_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Billing_Schedule_Period_Order_By>>;
  where?: Maybe<Billing_Schedule_Period_Bool_Exp>;
};


/** query root */
export type Query_RootBilling_Schedule_Period_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootBooksArgs = {
  distinct_on?: Maybe<Array<Books_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Books_Order_By>>;
  where?: Maybe<Books_Bool_Exp>;
};


/** query root */
export type Query_RootBooks_AggregateArgs = {
  distinct_on?: Maybe<Array<Books_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Books_Order_By>>;
  where?: Maybe<Books_Bool_Exp>;
};


/** query root */
export type Query_RootBooks_By_PkArgs = {
  book_id: Scalars['String'];
};


/** query root */
export type Query_RootBooks_ChaptersArgs = {
  distinct_on?: Maybe<Array<Books_Chapters_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Books_Chapters_Order_By>>;
  where?: Maybe<Books_Chapters_Bool_Exp>;
};


/** query root */
export type Query_RootBooks_Chapters_AggregateArgs = {
  distinct_on?: Maybe<Array<Books_Chapters_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Books_Chapters_Order_By>>;
  where?: Maybe<Books_Chapters_Bool_Exp>;
};


/** query root */
export type Query_RootBooks_Chapters_By_PkArgs = {
  book_id: Scalars['String'];
  chapter_id: Scalars['String'];
};


/** query root */
export type Query_RootBrandsArgs = {
  distinct_on?: Maybe<Array<Brands_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Brands_Order_By>>;
  where?: Maybe<Brands_Bool_Exp>;
};


/** query root */
export type Query_RootBrands_AggregateArgs = {
  distinct_on?: Maybe<Array<Brands_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Brands_Order_By>>;
  where?: Maybe<Brands_Bool_Exp>;
};


/** query root */
export type Query_RootBrands_By_PkArgs = {
  brand_id: Scalars['String'];
};


/** query root */
export type Query_RootCentersArgs = {
  distinct_on?: Maybe<Array<Centers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Centers_Order_By>>;
  where?: Maybe<Centers_Bool_Exp>;
};


/** query root */
export type Query_RootCenters_AggregateArgs = {
  distinct_on?: Maybe<Array<Centers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Centers_Order_By>>;
  where?: Maybe<Centers_Bool_Exp>;
};


/** query root */
export type Query_RootCenters_By_PkArgs = {
  center_id: Scalars['String'];
};


/** query root */
export type Query_RootChaptersArgs = {
  distinct_on?: Maybe<Array<Chapters_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chapters_Order_By>>;
  where?: Maybe<Chapters_Bool_Exp>;
};


/** query root */
export type Query_RootChapters_AggregateArgs = {
  distinct_on?: Maybe<Array<Chapters_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chapters_Order_By>>;
  where?: Maybe<Chapters_Bool_Exp>;
};


/** query root */
export type Query_RootChapters_By_PkArgs = {
  chapter_id: Scalars['String'];
};


/** query root */
export type Query_RootCitiesArgs = {
  distinct_on?: Maybe<Array<Cities_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Cities_Order_By>>;
  where?: Maybe<Cities_Bool_Exp>;
};


/** query root */
export type Query_RootCities_AggregateArgs = {
  distinct_on?: Maybe<Array<Cities_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Cities_Order_By>>;
  where?: Maybe<Cities_Bool_Exp>;
};


/** query root */
export type Query_RootCities_By_PkArgs = {
  city_id: Scalars['Int'];
};


/** query root */
export type Query_RootClass_MembersArgs = {
  distinct_on?: Maybe<Array<Class_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Members_Order_By>>;
  where?: Maybe<Class_Members_Bool_Exp>;
};


/** query root */
export type Query_RootClass_Members_AggregateArgs = {
  distinct_on?: Maybe<Array<Class_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Members_Order_By>>;
  where?: Maybe<Class_Members_Bool_Exp>;
};


/** query root */
export type Query_RootClass_Members_By_PkArgs = {
  class_member_id: Scalars['String'];
};


/** query root */
export type Query_RootClass_Preset_Study_PlansArgs = {
  distinct_on?: Maybe<Array<Class_Preset_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Preset_Study_Plans_Order_By>>;
  where?: Maybe<Class_Preset_Study_Plans_Bool_Exp>;
};


/** query root */
export type Query_RootClass_Preset_Study_Plans_AggregateArgs = {
  distinct_on?: Maybe<Array<Class_Preset_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Preset_Study_Plans_Order_By>>;
  where?: Maybe<Class_Preset_Study_Plans_Bool_Exp>;
};


/** query root */
export type Query_RootClass_Preset_Study_Plans_By_PkArgs = {
  class_preset_study_plan_id: Scalars['String'];
};


/** query root */
export type Query_RootClass_StudentsArgs = {
  distinct_on?: Maybe<Array<Class_Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Students_Order_By>>;
  where?: Maybe<Class_Students_Bool_Exp>;
};


/** query root */
export type Query_RootClass_Students_AggregateArgs = {
  distinct_on?: Maybe<Array<Class_Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Students_Order_By>>;
  where?: Maybe<Class_Students_Bool_Exp>;
};


/** query root */
export type Query_RootClass_Students_By_PkArgs = {
  class_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** query root */
export type Query_RootClass_Study_PlansArgs = {
  distinct_on?: Maybe<Array<Class_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Study_Plans_Order_By>>;
  where?: Maybe<Class_Study_Plans_Bool_Exp>;
};


/** query root */
export type Query_RootClass_Study_Plans_AggregateArgs = {
  distinct_on?: Maybe<Array<Class_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Study_Plans_Order_By>>;
  where?: Maybe<Class_Study_Plans_Bool_Exp>;
};


/** query root */
export type Query_RootClass_Study_Plans_By_PkArgs = {
  class_id: Scalars['Int'];
  study_plan_id: Scalars['String'];
};


/** query root */
export type Query_RootClassesArgs = {
  distinct_on?: Maybe<Array<Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Classes_Order_By>>;
  where?: Maybe<Classes_Bool_Exp>;
};


/** query root */
export type Query_RootClasses_AggregateArgs = {
  distinct_on?: Maybe<Array<Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Classes_Order_By>>;
  where?: Maybe<Classes_Bool_Exp>;
};


/** query root */
export type Query_RootClasses_By_PkArgs = {
  class_id: Scalars['Int'];
};


/** query root */
export type Query_RootCoachesArgs = {
  distinct_on?: Maybe<Array<Coaches_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Coaches_Order_By>>;
  where?: Maybe<Coaches_Bool_Exp>;
};


/** query root */
export type Query_RootCoaches_AggregateArgs = {
  distinct_on?: Maybe<Array<Coaches_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Coaches_Order_By>>;
  where?: Maybe<Coaches_Bool_Exp>;
};


/** query root */
export type Query_RootCoaches_By_PkArgs = {
  coach_id: Scalars['String'];
};


/** query root */
export type Query_RootCod_OrdersArgs = {
  distinct_on?: Maybe<Array<Cod_Orders_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Cod_Orders_Order_By>>;
  where?: Maybe<Cod_Orders_Bool_Exp>;
};


/** query root */
export type Query_RootCod_Orders_AggregateArgs = {
  distinct_on?: Maybe<Array<Cod_Orders_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Cod_Orders_Order_By>>;
  where?: Maybe<Cod_Orders_Bool_Exp>;
};


/** query root */
export type Query_RootCod_Orders_By_PkArgs = {
  cod_order_id: Scalars['String'];
};


/** query root */
export type Query_RootConfigsArgs = {
  distinct_on?: Maybe<Array<Configs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Configs_Order_By>>;
  where?: Maybe<Configs_Bool_Exp>;
};


/** query root */
export type Query_RootConfigs_AggregateArgs = {
  distinct_on?: Maybe<Array<Configs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Configs_Order_By>>;
  where?: Maybe<Configs_Bool_Exp>;
};


/** query root */
export type Query_RootConfigs_By_PkArgs = {
  config_group: Scalars['String'];
  config_key: Scalars['String'];
  country: Scalars['String'];
};


/** query root */
export type Query_RootConversion_TasksArgs = {
  distinct_on?: Maybe<Array<Conversion_Tasks_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Conversion_Tasks_Order_By>>;
  where?: Maybe<Conversion_Tasks_Bool_Exp>;
};


/** query root */
export type Query_RootConversion_Tasks_AggregateArgs = {
  distinct_on?: Maybe<Array<Conversion_Tasks_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Conversion_Tasks_Order_By>>;
  where?: Maybe<Conversion_Tasks_Bool_Exp>;
};


/** query root */
export type Query_RootConversion_Tasks_By_PkArgs = {
  task_uuid: Scalars['String'];
};


/** query root */
export type Query_RootCourse_Access_PathsArgs = {
  distinct_on?: Maybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Access_Paths_Order_By>>;
  where?: Maybe<Course_Access_Paths_Bool_Exp>;
};


/** query root */
export type Query_RootCourse_Access_Paths_AggregateArgs = {
  distinct_on?: Maybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Access_Paths_Order_By>>;
  where?: Maybe<Course_Access_Paths_Bool_Exp>;
};


/** query root */
export type Query_RootCourse_Access_Paths_By_PkArgs = {
  course_id: Scalars['String'];
  location_id: Scalars['String'];
};


/** query root */
export type Query_RootCourse_ClassesArgs = {
  distinct_on?: Maybe<Array<Course_Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Classes_Order_By>>;
  where?: Maybe<Course_Classes_Bool_Exp>;
};


/** query root */
export type Query_RootCourse_Classes_AggregateArgs = {
  distinct_on?: Maybe<Array<Course_Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Classes_Order_By>>;
  where?: Maybe<Course_Classes_Bool_Exp>;
};


/** query root */
export type Query_RootCourse_Classes_By_PkArgs = {
  class_id: Scalars['String'];
  course_id: Scalars['String'];
};


/** query root */
export type Query_RootCourse_StudentsArgs = {
  distinct_on?: Maybe<Array<Course_Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Students_Order_By>>;
  where?: Maybe<Course_Students_Bool_Exp>;
};


/** query root */
export type Query_RootCourse_Students_AggregateArgs = {
  distinct_on?: Maybe<Array<Course_Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Students_Order_By>>;
  where?: Maybe<Course_Students_Bool_Exp>;
};


/** query root */
export type Query_RootCourse_Students_By_PkArgs = {
  course_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** query root */
export type Query_RootCourse_Study_PlansArgs = {
  distinct_on?: Maybe<Array<Course_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Study_Plans_Order_By>>;
  where?: Maybe<Course_Study_Plans_Bool_Exp>;
};


/** query root */
export type Query_RootCourse_Study_Plans_AggregateArgs = {
  distinct_on?: Maybe<Array<Course_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Study_Plans_Order_By>>;
  where?: Maybe<Course_Study_Plans_Bool_Exp>;
};


/** query root */
export type Query_RootCourse_Study_Plans_By_PkArgs = {
  course_id: Scalars['String'];
  study_plan_id: Scalars['String'];
};


/** query root */
export type Query_RootCoursesArgs = {
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};


/** query root */
export type Query_RootCourses_Academic_YearsArgs = {
  distinct_on?: Maybe<Array<Courses_Academic_Years_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Academic_Years_Order_By>>;
  where?: Maybe<Courses_Academic_Years_Bool_Exp>;
};


/** query root */
export type Query_RootCourses_Academic_Years_AggregateArgs = {
  distinct_on?: Maybe<Array<Courses_Academic_Years_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Academic_Years_Order_By>>;
  where?: Maybe<Courses_Academic_Years_Bool_Exp>;
};


/** query root */
export type Query_RootCourses_Academic_Years_By_PkArgs = {
  academic_year_id: Scalars['String'];
  course_id: Scalars['String'];
};


/** query root */
export type Query_RootCourses_AggregateArgs = {
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};


/** query root */
export type Query_RootCourses_BooksArgs = {
  distinct_on?: Maybe<Array<Courses_Books_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Books_Order_By>>;
  where?: Maybe<Courses_Books_Bool_Exp>;
};


/** query root */
export type Query_RootCourses_Books_AggregateArgs = {
  distinct_on?: Maybe<Array<Courses_Books_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Books_Order_By>>;
  where?: Maybe<Courses_Books_Bool_Exp>;
};


/** query root */
export type Query_RootCourses_Books_By_PkArgs = {
  book_id: Scalars['String'];
  course_id: Scalars['String'];
};


/** query root */
export type Query_RootCourses_By_PkArgs = {
  course_id: Scalars['String'];
};


/** query root */
export type Query_RootCourses_ClassesArgs = {
  distinct_on?: Maybe<Array<Courses_Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Classes_Order_By>>;
  where?: Maybe<Courses_Classes_Bool_Exp>;
};


/** query root */
export type Query_RootCourses_Classes_AggregateArgs = {
  distinct_on?: Maybe<Array<Courses_Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Classes_Order_By>>;
  where?: Maybe<Courses_Classes_Bool_Exp>;
};


/** query root */
export type Query_RootCourses_Classes_By_PkArgs = {
  class_id: Scalars['Int'];
  course_id: Scalars['String'];
};


/** query root */
export type Query_RootDiscountArgs = {
  distinct_on?: Maybe<Array<Discount_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Discount_Order_By>>;
  where?: Maybe<Discount_Bool_Exp>;
};


/** query root */
export type Query_RootDiscount_AggregateArgs = {
  distinct_on?: Maybe<Array<Discount_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Discount_Order_By>>;
  where?: Maybe<Discount_Bool_Exp>;
};


/** query root */
export type Query_RootDiscount_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootDistrictsArgs = {
  distinct_on?: Maybe<Array<Districts_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Districts_Order_By>>;
  where?: Maybe<Districts_Bool_Exp>;
};


/** query root */
export type Query_RootDistricts_AggregateArgs = {
  distinct_on?: Maybe<Array<Districts_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Districts_Order_By>>;
  where?: Maybe<Districts_Bool_Exp>;
};


/** query root */
export type Query_RootDistricts_By_PkArgs = {
  district_id: Scalars['Int'];
};


/** query root */
export type Query_RootE2e_FeaturesArgs = {
  distinct_on?: Maybe<Array<E2e_Features_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<E2e_Features_Order_By>>;
  where?: Maybe<E2e_Features_Bool_Exp>;
};


/** query root */
export type Query_RootE2e_Features_AggregateArgs = {
  distinct_on?: Maybe<Array<E2e_Features_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<E2e_Features_Order_By>>;
  where?: Maybe<E2e_Features_Bool_Exp>;
};


/** query root */
export type Query_RootE2e_Features_By_PkArgs = {
  feature_id: Scalars['String'];
};


/** query root */
export type Query_RootE2e_InstancesArgs = {
  distinct_on?: Maybe<Array<E2e_Instances_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<E2e_Instances_Order_By>>;
  where?: Maybe<E2e_Instances_Bool_Exp>;
};


/** query root */
export type Query_RootE2e_Instances_AggregateArgs = {
  distinct_on?: Maybe<Array<E2e_Instances_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<E2e_Instances_Order_By>>;
  where?: Maybe<E2e_Instances_Bool_Exp>;
};


/** query root */
export type Query_RootE2e_Instances_By_PkArgs = {
  instance_id: Scalars['String'];
};


/** query root */
export type Query_RootE2e_ScenariosArgs = {
  distinct_on?: Maybe<Array<E2e_Scenarios_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<E2e_Scenarios_Order_By>>;
  where?: Maybe<E2e_Scenarios_Bool_Exp>;
};


/** query root */
export type Query_RootE2e_Scenarios_AggregateArgs = {
  distinct_on?: Maybe<Array<E2e_Scenarios_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<E2e_Scenarios_Order_By>>;
  where?: Maybe<E2e_Scenarios_Bool_Exp>;
};


/** query root */
export type Query_RootE2e_Scenarios_By_PkArgs = {
  scenario_id: Scalars['String'];
};


/** query root */
export type Query_RootE2e_StepsArgs = {
  distinct_on?: Maybe<Array<E2e_Steps_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<E2e_Steps_Order_By>>;
  where?: Maybe<E2e_Steps_Bool_Exp>;
};


/** query root */
export type Query_RootE2e_Steps_AggregateArgs = {
  distinct_on?: Maybe<Array<E2e_Steps_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<E2e_Steps_Order_By>>;
  where?: Maybe<E2e_Steps_Bool_Exp>;
};


/** query root */
export type Query_RootE2e_Steps_By_PkArgs = {
  step_id: Scalars['String'];
};


/** query root */
export type Query_RootFind_Assignment_By_Topic_IdArgs = {
  args: Find_Assignment_By_Topic_Id_Args;
  distinct_on?: Maybe<Array<Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assignments_Order_By>>;
  where?: Maybe<Assignments_Bool_Exp>;
};


/** query root */
export type Query_RootFind_Assignment_By_Topic_Id_AggregateArgs = {
  args: Find_Assignment_By_Topic_Id_Args;
  distinct_on?: Maybe<Array<Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assignments_Order_By>>;
  where?: Maybe<Assignments_Bool_Exp>;
};


/** query root */
export type Query_RootFind_Quiz_By_Lo_IdArgs = {
  args: Find_Quiz_By_Lo_Id_Args;
  distinct_on?: Maybe<Array<Quizzes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quizzes_Order_By>>;
  where?: Maybe<Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootFind_Quiz_By_Lo_Id_AggregateArgs = {
  args: Find_Quiz_By_Lo_Id_Args;
  distinct_on?: Maybe<Array<Quizzes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quizzes_Order_By>>;
  where?: Maybe<Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootFind_Teacher_By_School_IdArgs = {
  args: Find_Teacher_By_School_Id_Args;
  distinct_on?: Maybe<Array<Users_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Order_By>>;
  where?: Maybe<Users_Bool_Exp>;
};


/** query root */
export type Query_RootFind_Teacher_By_School_Id_AggregateArgs = {
  args: Find_Teacher_By_School_Id_Args;
  distinct_on?: Maybe<Array<Users_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Order_By>>;
  where?: Maybe<Users_Bool_Exp>;
};


/** query root */
export type Query_RootGet_List_Course_Student_Study_Plans_By_FilterArgs = {
  args: Get_List_Course_Student_Study_Plans_By_Filter_Args;
  distinct_on?: Maybe<Array<Course_Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Students_Order_By>>;
  where?: Maybe<Course_Students_Bool_Exp>;
};


/** query root */
export type Query_RootGet_List_Course_Student_Study_Plans_By_Filter_AggregateArgs = {
  args: Get_List_Course_Student_Study_Plans_By_Filter_Args;
  distinct_on?: Maybe<Array<Course_Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Students_Order_By>>;
  where?: Maybe<Course_Students_Bool_Exp>;
};


/** query root */
export type Query_RootGet_List_Course_Study_Plan_By_FilterArgs = {
  args: Get_List_Course_Study_Plan_By_Filter_Args;
  distinct_on?: Maybe<Array<Course_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Study_Plans_Order_By>>;
  where?: Maybe<Course_Study_Plans_Bool_Exp>;
};


/** query root */
export type Query_RootGet_List_Course_Study_Plan_By_Filter_AggregateArgs = {
  args: Get_List_Course_Study_Plan_By_Filter_Args;
  distinct_on?: Maybe<Array<Course_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Study_Plans_Order_By>>;
  where?: Maybe<Course_Study_Plans_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Locations_Active_By_Course_IdArgs = {
  args: Get_Locations_Active_By_Course_Id_Args;
  distinct_on?: Maybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Access_Paths_Order_By>>;
  where?: Maybe<Course_Access_Paths_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Locations_Active_By_Course_Id_AggregateArgs = {
  args: Get_Locations_Active_By_Course_Id_Args;
  distinct_on?: Maybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Access_Paths_Order_By>>;
  where?: Maybe<Course_Access_Paths_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Locations_Lowest_LevelArgs = {
  args: Get_Locations_Lowest_Level_Args;
  distinct_on?: Maybe<Array<Locations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Locations_Order_By>>;
  where?: Maybe<Locations_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Locations_Lowest_Level_AggregateArgs = {
  args: Get_Locations_Lowest_Level_Args;
  distinct_on?: Maybe<Array<Locations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Locations_Order_By>>;
  where?: Maybe<Locations_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Partner_Dynamic_Form_Field_Values_By_StudentArgs = {
  args: Get_Partner_Dynamic_Form_Field_Values_By_Student_Args;
  distinct_on?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: Maybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Partner_Dynamic_Form_Field_Values_By_Student_AggregateArgs = {
  args: Get_Partner_Dynamic_Form_Field_Values_By_Student_Args;
  distinct_on?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: Maybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Previous_Report_Of_StudentArgs = {
  args: Get_Previous_Report_Of_Student_Args;
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Previous_Report_Of_Student_AggregateArgs = {
  args: Get_Previous_Report_Of_Student_Args;
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Previous_Report_Of_Student_V2Args = {
  args: Get_Previous_Report_Of_Student_V2_Args;
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Previous_Report_Of_Student_V2_AggregateArgs = {
  args: Get_Previous_Report_Of_Student_V2_Args;
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Previous_Report_Of_Student_V3Args = {
  args: Get_Previous_Report_Of_Student_V3_Args;
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Previous_Report_Of_Student_V3_AggregateArgs = {
  args: Get_Previous_Report_Of_Student_V3_Args;
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Student_Study_Plans_By_FilterArgs = {
  args: Get_Student_Study_Plans_By_Filter_Args;
  distinct_on?: Maybe<Array<Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Study_Plans_Order_By>>;
  where?: Maybe<Study_Plans_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Student_Study_Plans_By_Filter_AggregateArgs = {
  args: Get_Student_Study_Plans_By_Filter_Args;
  distinct_on?: Maybe<Array<Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Study_Plans_Order_By>>;
  where?: Maybe<Study_Plans_Bool_Exp>;
};


/** query root */
export type Query_RootGradeArgs = {
  distinct_on?: Maybe<Array<Grade_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Grade_Order_By>>;
  where?: Maybe<Grade_Bool_Exp>;
};


/** query root */
export type Query_RootGrade_AggregateArgs = {
  distinct_on?: Maybe<Array<Grade_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Grade_Order_By>>;
  where?: Maybe<Grade_Bool_Exp>;
};


/** query root */
export type Query_RootGrade_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootGroupsArgs = {
  distinct_on?: Maybe<Array<Groups_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Groups_Order_By>>;
  where?: Maybe<Groups_Bool_Exp>;
};


/** query root */
export type Query_RootGroups_AggregateArgs = {
  distinct_on?: Maybe<Array<Groups_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Groups_Order_By>>;
  where?: Maybe<Groups_Bool_Exp>;
};


/** query root */
export type Query_RootGroups_By_PkArgs = {
  group_id: Scalars['String'];
};


/** query root */
export type Query_RootHub_ToursArgs = {
  distinct_on?: Maybe<Array<Hub_Tours_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Hub_Tours_Order_By>>;
  where?: Maybe<Hub_Tours_Bool_Exp>;
};


/** query root */
export type Query_RootHub_Tours_AggregateArgs = {
  distinct_on?: Maybe<Array<Hub_Tours_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Hub_Tours_Order_By>>;
  where?: Maybe<Hub_Tours_Bool_Exp>;
};


/** query root */
export type Query_RootHub_Tours_By_PkArgs = {
  hub_id: Scalars['Int'];
  student_id: Scalars['String'];
};


/** query root */
export type Query_RootHubsArgs = {
  distinct_on?: Maybe<Array<Hubs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Hubs_Order_By>>;
  where?: Maybe<Hubs_Bool_Exp>;
};


/** query root */
export type Query_RootHubs_AggregateArgs = {
  distinct_on?: Maybe<Array<Hubs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Hubs_Order_By>>;
  where?: Maybe<Hubs_Bool_Exp>;
};


/** query root */
export type Query_RootHubs_By_PkArgs = {
  hub_id: Scalars['Int'];
};


/** query root */
export type Query_RootInfo_Notification_MsgsArgs = {
  distinct_on?: Maybe<Array<Info_Notification_Msgs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Info_Notification_Msgs_Order_By>>;
  where?: Maybe<Info_Notification_Msgs_Bool_Exp>;
};


/** query root */
export type Query_RootInfo_Notification_Msgs_AggregateArgs = {
  distinct_on?: Maybe<Array<Info_Notification_Msgs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Info_Notification_Msgs_Order_By>>;
  where?: Maybe<Info_Notification_Msgs_Bool_Exp>;
};


/** query root */
export type Query_RootInfo_Notification_Msgs_By_PkArgs = {
  notification_msg_id: Scalars['String'];
};


/** query root */
export type Query_RootInfo_NotificationsArgs = {
  distinct_on?: Maybe<Array<Info_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Info_Notifications_Order_By>>;
  where?: Maybe<Info_Notifications_Bool_Exp>;
};


/** query root */
export type Query_RootInfo_Notifications_AggregateArgs = {
  distinct_on?: Maybe<Array<Info_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Info_Notifications_Order_By>>;
  where?: Maybe<Info_Notifications_Bool_Exp>;
};


/** query root */
export type Query_RootInfo_Notifications_By_PkArgs = {
  notification_id: Scalars['String'];
};


/** query root */
export type Query_RootIos_TransactionsArgs = {
  distinct_on?: Maybe<Array<Ios_Transactions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Ios_Transactions_Order_By>>;
  where?: Maybe<Ios_Transactions_Bool_Exp>;
};


/** query root */
export type Query_RootIos_Transactions_AggregateArgs = {
  distinct_on?: Maybe<Array<Ios_Transactions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Ios_Transactions_Order_By>>;
  where?: Maybe<Ios_Transactions_Bool_Exp>;
};


/** query root */
export type Query_RootIos_Transactions_By_PkArgs = {
  ios_transaction_id: Scalars['String'];
};


/** query root */
export type Query_RootJpref_Sync_Data_LogsArgs = {
  distinct_on?: Maybe<Array<Jpref_Sync_Data_Logs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Jpref_Sync_Data_Logs_Order_By>>;
  where?: Maybe<Jpref_Sync_Data_Logs_Bool_Exp>;
};


/** query root */
export type Query_RootJpref_Sync_Data_Logs_AggregateArgs = {
  distinct_on?: Maybe<Array<Jpref_Sync_Data_Logs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Jpref_Sync_Data_Logs_Order_By>>;
  where?: Maybe<Jpref_Sync_Data_Logs_Bool_Exp>;
};


/** query root */
export type Query_RootJpref_Sync_Data_Logs_By_PkArgs = {
  jpref_sync_data_log_id: Scalars['String'];
};


/** query root */
export type Query_RootLearning_ObjectivesArgs = {
  distinct_on?: Maybe<Array<Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Learning_Objectives_Order_By>>;
  where?: Maybe<Learning_Objectives_Bool_Exp>;
};


/** query root */
export type Query_RootLearning_Objectives_AggregateArgs = {
  distinct_on?: Maybe<Array<Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Learning_Objectives_Order_By>>;
  where?: Maybe<Learning_Objectives_Bool_Exp>;
};


/** query root */
export type Query_RootLearning_Objectives_By_PkArgs = {
  lo_id: Scalars['String'];
};


/** query root */
export type Query_RootLesson_GroupsArgs = {
  distinct_on?: Maybe<Array<Lesson_Groups_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Groups_Order_By>>;
  where?: Maybe<Lesson_Groups_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Groups_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Groups_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Groups_Order_By>>;
  where?: Maybe<Lesson_Groups_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Groups_By_PkArgs = {
  course_id: Scalars['String'];
  lesson_group_id: Scalars['String'];
};


/** query root */
export type Query_RootLesson_MembersArgs = {
  distinct_on?: Maybe<Array<Lesson_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Members_Order_By>>;
  where?: Maybe<Lesson_Members_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Members_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Members_Order_By>>;
  where?: Maybe<Lesson_Members_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Members_By_PkArgs = {
  lesson_id: Scalars['String'];
  user_id: Scalars['String'];
};


/** query root */
export type Query_RootLesson_Report_DetailsArgs = {
  distinct_on?: Maybe<Array<Lesson_Report_Details_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Report_Details_Order_By>>;
  where?: Maybe<Lesson_Report_Details_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Report_Details_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Report_Details_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Report_Details_Order_By>>;
  where?: Maybe<Lesson_Report_Details_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Report_Details_By_PkArgs = {
  lesson_report_detail_id: Scalars['String'];
};


/** query root */
export type Query_RootLesson_ReportsArgs = {
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Reports_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Reports_By_PkArgs = {
  lesson_report_id: Scalars['String'];
};


/** query root */
export type Query_RootLesson_SchedulesArgs = {
  distinct_on?: Maybe<Array<Lesson_Schedules_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Schedules_Order_By>>;
  where?: Maybe<Lesson_Schedules_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Schedules_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Schedules_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Schedules_Order_By>>;
  where?: Maybe<Lesson_Schedules_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Student_Subscription_Access_PathArgs = {
  distinct_on?: Maybe<Array<Lesson_Student_Subscription_Access_Path_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Student_Subscription_Access_Path_Order_By>>;
  where?: Maybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Student_Subscription_Access_Path_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Student_Subscription_Access_Path_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Student_Subscription_Access_Path_Order_By>>;
  where?: Maybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Student_Subscription_Access_Path_By_PkArgs = {
  location_id: Scalars['String'];
  student_subscription_id: Scalars['String'];
};


/** query root */
export type Query_RootLesson_Student_SubscriptionsArgs = {
  distinct_on?: Maybe<Array<Lesson_Student_Subscriptions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Student_Subscriptions_Order_By>>;
  where?: Maybe<Lesson_Student_Subscriptions_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Student_Subscriptions_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Student_Subscriptions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Student_Subscriptions_Order_By>>;
  where?: Maybe<Lesson_Student_Subscriptions_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Student_Subscriptions_By_PkArgs = {
  student_subscription_id: Scalars['String'];
};


/** query root */
export type Query_RootLesson_Study_Plan_ItemsArgs = {
  distinct_on?: Maybe<Array<Lesson_Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Study_Plan_Items_Order_By>>;
  where?: Maybe<Lesson_Study_Plan_Items_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Study_Plan_Items_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Study_Plan_Items_Order_By>>;
  where?: Maybe<Lesson_Study_Plan_Items_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Study_Plan_Items_By_PkArgs = {
  lesson_id: Scalars['String'];
  study_plan_item_id: Scalars['String'];
};


/** query root */
export type Query_RootLessonsArgs = {
  distinct_on?: Maybe<Array<Lessons_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Order_By>>;
  where?: Maybe<Lessons_Bool_Exp>;
};


/** query root */
export type Query_RootLessons_AggregateArgs = {
  distinct_on?: Maybe<Array<Lessons_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Order_By>>;
  where?: Maybe<Lessons_Bool_Exp>;
};


/** query root */
export type Query_RootLessons_By_PkArgs = {
  lesson_id: Scalars['String'];
};


/** query root */
export type Query_RootLessons_CoursesArgs = {
  distinct_on?: Maybe<Array<Lessons_Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Courses_Order_By>>;
  where?: Maybe<Lessons_Courses_Bool_Exp>;
};


/** query root */
export type Query_RootLessons_Courses_AggregateArgs = {
  distinct_on?: Maybe<Array<Lessons_Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Courses_Order_By>>;
  where?: Maybe<Lessons_Courses_Bool_Exp>;
};


/** query root */
export type Query_RootLessons_Courses_By_PkArgs = {
  course_id: Scalars['String'];
  lesson_id: Scalars['String'];
};


/** query root */
export type Query_RootLessons_TeachersArgs = {
  distinct_on?: Maybe<Array<Lessons_Teachers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Teachers_Order_By>>;
  where?: Maybe<Lessons_Teachers_Bool_Exp>;
};


/** query root */
export type Query_RootLessons_Teachers_AggregateArgs = {
  distinct_on?: Maybe<Array<Lessons_Teachers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Teachers_Order_By>>;
  where?: Maybe<Lessons_Teachers_Bool_Exp>;
};


/** query root */
export type Query_RootLessons_Teachers_By_PkArgs = {
  lesson_id: Scalars['String'];
  teacher_id: Scalars['String'];
};


/** query root */
export type Query_RootLo_Study_Plan_ItemsArgs = {
  distinct_on?: Maybe<Array<Lo_Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lo_Study_Plan_Items_Order_By>>;
  where?: Maybe<Lo_Study_Plan_Items_Bool_Exp>;
};


/** query root */
export type Query_RootLo_Study_Plan_Items_AggregateArgs = {
  distinct_on?: Maybe<Array<Lo_Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lo_Study_Plan_Items_Order_By>>;
  where?: Maybe<Lo_Study_Plan_Items_Bool_Exp>;
};


/** query root */
export type Query_RootLo_Study_Plan_Items_By_PkArgs = {
  lo_id: Scalars['String'];
  study_plan_item_id: Scalars['String'];
};


/** query root */
export type Query_RootLocationsArgs = {
  distinct_on?: Maybe<Array<Locations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Locations_Order_By>>;
  where?: Maybe<Locations_Bool_Exp>;
};


/** query root */
export type Query_RootLocations_AggregateArgs = {
  distinct_on?: Maybe<Array<Locations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Locations_Order_By>>;
  where?: Maybe<Locations_Bool_Exp>;
};


/** query root */
export type Query_RootLocations_By_PkArgs = {
  location_id: Scalars['String'];
};


/** query root */
export type Query_RootMediaArgs = {
  distinct_on?: Maybe<Array<Media_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Media_Order_By>>;
  where?: Maybe<Media_Bool_Exp>;
};


/** query root */
export type Query_RootMedia_AggregateArgs = {
  distinct_on?: Maybe<Array<Media_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Media_Order_By>>;
  where?: Maybe<Media_Bool_Exp>;
};


/** query root */
export type Query_RootMedia_By_PkArgs = {
  media_id: Scalars['String'];
};


/** query root */
export type Query_RootNotification_MessagesArgs = {
  distinct_on?: Maybe<Array<Notification_Messages_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notification_Messages_Order_By>>;
  where?: Maybe<Notification_Messages_Bool_Exp>;
};


/** query root */
export type Query_RootNotification_Messages_AggregateArgs = {
  distinct_on?: Maybe<Array<Notification_Messages_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notification_Messages_Order_By>>;
  where?: Maybe<Notification_Messages_Bool_Exp>;
};


/** query root */
export type Query_RootNotification_Messages_By_PkArgs = {
  notification_message_id: Scalars['Int'];
};


/** query root */
export type Query_RootNotification_TargetsArgs = {
  distinct_on?: Maybe<Array<Notification_Targets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notification_Targets_Order_By>>;
  where?: Maybe<Notification_Targets_Bool_Exp>;
};


/** query root */
export type Query_RootNotification_Targets_AggregateArgs = {
  distinct_on?: Maybe<Array<Notification_Targets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notification_Targets_Order_By>>;
  where?: Maybe<Notification_Targets_Bool_Exp>;
};


/** query root */
export type Query_RootNotification_Targets_By_PkArgs = {
  target_id: Scalars['String'];
};


/** query root */
export type Query_RootNotificationsArgs = {
  distinct_on?: Maybe<Array<Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notifications_Order_By>>;
  where?: Maybe<Notifications_Bool_Exp>;
};


/** query root */
export type Query_RootNotifications_AggregateArgs = {
  distinct_on?: Maybe<Array<Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notifications_Order_By>>;
  where?: Maybe<Notifications_Bool_Exp>;
};


/** query root */
export type Query_RootNotifications_By_PkArgs = {
  notification_id: Scalars['String'];
};


/** query root */
export type Query_RootOrderArgs = {
  distinct_on?: Maybe<Array<Order_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Order_By>>;
  where?: Maybe<Order_Bool_Exp>;
};


/** query root */
export type Query_RootOrder_Action_LogArgs = {
  distinct_on?: Maybe<Array<Order_Action_Log_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Action_Log_Order_By>>;
  where?: Maybe<Order_Action_Log_Bool_Exp>;
};


/** query root */
export type Query_RootOrder_Action_Log_AggregateArgs = {
  distinct_on?: Maybe<Array<Order_Action_Log_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Action_Log_Order_By>>;
  where?: Maybe<Order_Action_Log_Bool_Exp>;
};


/** query root */
export type Query_RootOrder_Action_Log_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootOrder_AggregateArgs = {
  distinct_on?: Maybe<Array<Order_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Order_By>>;
  where?: Maybe<Order_Bool_Exp>;
};


/** query root */
export type Query_RootOrder_By_PkArgs = {
  id: Scalars['String'];
};


/** query root */
export type Query_RootOrder_ItemArgs = {
  distinct_on?: Maybe<Array<Order_Item_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Item_Order_By>>;
  where?: Maybe<Order_Item_Bool_Exp>;
};


/** query root */
export type Query_RootOrder_Item_AggregateArgs = {
  distinct_on?: Maybe<Array<Order_Item_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Item_Order_By>>;
  where?: Maybe<Order_Item_Bool_Exp>;
};


/** query root */
export type Query_RootOrder_Item_By_PkArgs = {
  order_id: Scalars['String'];
  product_id: Scalars['Int'];
};


/** query root */
export type Query_RootOrganizationsArgs = {
  distinct_on?: Maybe<Array<Organizations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Organizations_Order_By>>;
  where?: Maybe<Organizations_Bool_Exp>;
};


/** query root */
export type Query_RootOrganizations_AggregateArgs = {
  distinct_on?: Maybe<Array<Organizations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Organizations_Order_By>>;
  where?: Maybe<Organizations_Bool_Exp>;
};


/** query root */
export type Query_RootOrganizations_By_PkArgs = {
  organization_id: Scalars['String'];
};


/** query root */
export type Query_RootOrgsArgs = {
  distinct_on?: Maybe<Array<Orgs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Orgs_Order_By>>;
  where?: Maybe<Orgs_Bool_Exp>;
};


/** query root */
export type Query_RootOrgs_AggregateArgs = {
  distinct_on?: Maybe<Array<Orgs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Orgs_Order_By>>;
  where?: Maybe<Orgs_Bool_Exp>;
};


/** query root */
export type Query_RootOrgs_By_PkArgs = {
  org_id: Scalars['String'];
};


/** query root */
export type Query_RootPackagesArgs = {
  distinct_on?: Maybe<Array<Packages_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Packages_Order_By>>;
  where?: Maybe<Packages_Bool_Exp>;
};


/** query root */
export type Query_RootPackages_AggregateArgs = {
  distinct_on?: Maybe<Array<Packages_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Packages_Order_By>>;
  where?: Maybe<Packages_Bool_Exp>;
};


/** query root */
export type Query_RootPackages_By_PkArgs = {
  package_id: Scalars['String'];
};


/** query root */
export type Query_RootParentsArgs = {
  distinct_on?: Maybe<Array<Parents_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Parents_Order_By>>;
  where?: Maybe<Parents_Bool_Exp>;
};


/** query root */
export type Query_RootParents_AggregateArgs = {
  distinct_on?: Maybe<Array<Parents_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Parents_Order_By>>;
  where?: Maybe<Parents_Bool_Exp>;
};


/** query root */
export type Query_RootParents_By_PkArgs = {
  parent_id: Scalars['String'];
};


/** query root */
export type Query_RootPartner_Dynamic_Form_Field_ValuesArgs = {
  distinct_on?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: Maybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};


/** query root */
export type Query_RootPartner_Dynamic_Form_Field_Values_AggregateArgs = {
  distinct_on?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: Maybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};


/** query root */
export type Query_RootPartner_Dynamic_Form_Field_Values_By_PkArgs = {
  dynamic_form_field_value_id: Scalars['String'];
};


/** query root */
export type Query_RootPartner_Form_ConfigsArgs = {
  distinct_on?: Maybe<Array<Partner_Form_Configs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Partner_Form_Configs_Order_By>>;
  where?: Maybe<Partner_Form_Configs_Bool_Exp>;
};


/** query root */
export type Query_RootPartner_Form_Configs_AggregateArgs = {
  distinct_on?: Maybe<Array<Partner_Form_Configs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Partner_Form_Configs_Order_By>>;
  where?: Maybe<Partner_Form_Configs_Bool_Exp>;
};


/** query root */
export type Query_RootPartner_Form_Configs_By_PkArgs = {
  form_config_id: Scalars['String'];
};


/** query root */
export type Query_RootPlansArgs = {
  distinct_on?: Maybe<Array<Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Plans_Order_By>>;
  where?: Maybe<Plans_Bool_Exp>;
};


/** query root */
export type Query_RootPlans_AggregateArgs = {
  distinct_on?: Maybe<Array<Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Plans_Order_By>>;
  where?: Maybe<Plans_Bool_Exp>;
};


/** query root */
export type Query_RootPlans_By_PkArgs = {
  country: Scalars['String'];
  plan_id: Scalars['String'];
};


/** query root */
export type Query_RootPreset_Study_PlansArgs = {
  distinct_on?: Maybe<Array<Preset_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Preset_Study_Plans_Order_By>>;
  where?: Maybe<Preset_Study_Plans_Bool_Exp>;
};


/** query root */
export type Query_RootPreset_Study_Plans_AggregateArgs = {
  distinct_on?: Maybe<Array<Preset_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Preset_Study_Plans_Order_By>>;
  where?: Maybe<Preset_Study_Plans_Bool_Exp>;
};


/** query root */
export type Query_RootPreset_Study_Plans_By_PkArgs = {
  preset_study_plan_id: Scalars['String'];
};


/** query root */
export type Query_RootPreset_Study_Plans_WeeklyArgs = {
  distinct_on?: Maybe<Array<Preset_Study_Plans_Weekly_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Preset_Study_Plans_Weekly_Order_By>>;
  where?: Maybe<Preset_Study_Plans_Weekly_Bool_Exp>;
};


/** query root */
export type Query_RootPreset_Study_Plans_Weekly_AggregateArgs = {
  distinct_on?: Maybe<Array<Preset_Study_Plans_Weekly_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Preset_Study_Plans_Weekly_Order_By>>;
  where?: Maybe<Preset_Study_Plans_Weekly_Bool_Exp>;
};


/** query root */
export type Query_RootPreset_Study_Plans_Weekly_By_PkArgs = {
  preset_study_plan_weekly_id: Scalars['String'];
};


/** query root */
export type Query_RootPreset_Study_Plans_Weekly_FormatArgs = {
  distinct_on?: Maybe<Array<Preset_Study_Plans_Weekly_Format_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Preset_Study_Plans_Weekly_Format_Order_By>>;
  where?: Maybe<Preset_Study_Plans_Weekly_Format_Bool_Exp>;
};


/** query root */
export type Query_RootPreset_Study_Plans_Weekly_Format_AggregateArgs = {
  distinct_on?: Maybe<Array<Preset_Study_Plans_Weekly_Format_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Preset_Study_Plans_Weekly_Format_Order_By>>;
  where?: Maybe<Preset_Study_Plans_Weekly_Format_Bool_Exp>;
};


/** query root */
export type Query_RootProductArgs = {
  distinct_on?: Maybe<Array<Product_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Order_By>>;
  where?: Maybe<Product_Bool_Exp>;
};


/** query root */
export type Query_RootProduct_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Order_By>>;
  where?: Maybe<Product_Bool_Exp>;
};


/** query root */
export type Query_RootProduct_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootProduct_FeeArgs = {
  distinct_on?: Maybe<Array<Product_Fee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Fee_Order_By>>;
  where?: Maybe<Product_Fee_Bool_Exp>;
};


/** query root */
export type Query_RootProduct_Fee_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Fee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Fee_Order_By>>;
  where?: Maybe<Product_Fee_Bool_Exp>;
};


/** query root */
export type Query_RootProduct_Fee_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootProduct_GradeArgs = {
  distinct_on?: Maybe<Array<Product_Grade_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Grade_Order_By>>;
  where?: Maybe<Product_Grade_Bool_Exp>;
};


/** query root */
export type Query_RootProduct_Grade_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Grade_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Grade_Order_By>>;
  where?: Maybe<Product_Grade_Bool_Exp>;
};


/** query root */
export type Query_RootProduct_Grade_By_PkArgs = {
  grade_id: Scalars['Int'];
  product_id: Scalars['Int'];
};


/** query root */
export type Query_RootProduct_LocationArgs = {
  distinct_on?: Maybe<Array<Product_Location_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Location_Order_By>>;
  where?: Maybe<Product_Location_Bool_Exp>;
};


/** query root */
export type Query_RootProduct_Location_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Location_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Location_Order_By>>;
  where?: Maybe<Product_Location_Bool_Exp>;
};


/** query root */
export type Query_RootProduct_Location_By_PkArgs = {
  location_id: Scalars['String'];
  product_id: Scalars['Int'];
};


/** query root */
export type Query_RootProduct_MaterialArgs = {
  distinct_on?: Maybe<Array<Product_Material_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Material_Order_By>>;
  where?: Maybe<Product_Material_Bool_Exp>;
};


/** query root */
export type Query_RootProduct_Material_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Material_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Material_Order_By>>;
  where?: Maybe<Product_Material_Bool_Exp>;
};


/** query root */
export type Query_RootProduct_Material_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootProduct_PackageArgs = {
  distinct_on?: Maybe<Array<Product_Package_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Package_Order_By>>;
  where?: Maybe<Product_Package_Bool_Exp>;
};


/** query root */
export type Query_RootProduct_Package_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Package_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Package_Order_By>>;
  where?: Maybe<Product_Package_Bool_Exp>;
};


/** query root */
export type Query_RootProduct_Package_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootProduct_PriceArgs = {
  distinct_on?: Maybe<Array<Product_Price_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Price_Order_By>>;
  where?: Maybe<Product_Price_Bool_Exp>;
};


/** query root */
export type Query_RootProduct_Price_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Price_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Price_Order_By>>;
  where?: Maybe<Product_Price_Bool_Exp>;
};


/** query root */
export type Query_RootProduct_Price_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootPromotion_RulesArgs = {
  distinct_on?: Maybe<Array<Promotion_Rules_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Promotion_Rules_Order_By>>;
  where?: Maybe<Promotion_Rules_Bool_Exp>;
};


/** query root */
export type Query_RootPromotion_Rules_AggregateArgs = {
  distinct_on?: Maybe<Array<Promotion_Rules_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Promotion_Rules_Order_By>>;
  where?: Maybe<Promotion_Rules_Bool_Exp>;
};


/** query root */
export type Query_RootPromotion_Rules_By_PkArgs = {
  promotion_rule_id: Scalars['Int'];
};


/** query root */
export type Query_RootPromotionsArgs = {
  distinct_on?: Maybe<Array<Promotions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Promotions_Order_By>>;
  where?: Maybe<Promotions_Bool_Exp>;
};


/** query root */
export type Query_RootPromotions_AggregateArgs = {
  distinct_on?: Maybe<Array<Promotions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Promotions_Order_By>>;
  where?: Maybe<Promotions_Bool_Exp>;
};


/** query root */
export type Query_RootPromotions_By_PkArgs = {
  promotion_id: Scalars['Int'];
};


/** query root */
export type Query_RootQuestionsArgs = {
  distinct_on?: Maybe<Array<Questions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Questions_Order_By>>;
  where?: Maybe<Questions_Bool_Exp>;
};


/** query root */
export type Query_RootQuestions_AggregateArgs = {
  distinct_on?: Maybe<Array<Questions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Questions_Order_By>>;
  where?: Maybe<Questions_Bool_Exp>;
};


/** query root */
export type Query_RootQuestions_By_PkArgs = {
  question_id: Scalars['String'];
};


/** query root */
export type Query_RootQuestions_Tagged_Learning_ObjectivesArgs = {
  distinct_on?: Maybe<Array<Questions_Tagged_Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Questions_Tagged_Learning_Objectives_Order_By>>;
  where?: Maybe<Questions_Tagged_Learning_Objectives_Bool_Exp>;
};


/** query root */
export type Query_RootQuestions_Tagged_Learning_Objectives_AggregateArgs = {
  distinct_on?: Maybe<Array<Questions_Tagged_Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Questions_Tagged_Learning_Objectives_Order_By>>;
  where?: Maybe<Questions_Tagged_Learning_Objectives_Bool_Exp>;
};


/** query root */
export type Query_RootQuestions_Tagged_Learning_Objectives_By_PkArgs = {
  lo_id: Scalars['String'];
  question_id: Scalars['String'];
};


/** query root */
export type Query_RootQuiz_SetsArgs = {
  distinct_on?: Maybe<Array<Quiz_Sets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quiz_Sets_Order_By>>;
  where?: Maybe<Quiz_Sets_Bool_Exp>;
};


/** query root */
export type Query_RootQuiz_Sets_AggregateArgs = {
  distinct_on?: Maybe<Array<Quiz_Sets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quiz_Sets_Order_By>>;
  where?: Maybe<Quiz_Sets_Bool_Exp>;
};


/** query root */
export type Query_RootQuiz_Sets_By_PkArgs = {
  quiz_set_id: Scalars['String'];
};


/** query root */
export type Query_RootQuizsetsArgs = {
  distinct_on?: Maybe<Array<Quizsets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quizsets_Order_By>>;
  where?: Maybe<Quizsets_Bool_Exp>;
};


/** query root */
export type Query_RootQuizsets_AggregateArgs = {
  distinct_on?: Maybe<Array<Quizsets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quizsets_Order_By>>;
  where?: Maybe<Quizsets_Bool_Exp>;
};


/** query root */
export type Query_RootQuizsets_By_PkArgs = {
  lo_id: Scalars['String'];
  question_id: Scalars['String'];
};


/** query root */
export type Query_RootQuizzesArgs = {
  distinct_on?: Maybe<Array<Quizzes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quizzes_Order_By>>;
  where?: Maybe<Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootQuizzes_AggregateArgs = {
  distinct_on?: Maybe<Array<Quizzes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quizzes_Order_By>>;
  where?: Maybe<Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootQuizzes_By_PkArgs = {
  quiz_id: Scalars['String'];
};


/** query root */
export type Query_RootScheduler_ItemsArgs = {
  distinct_on?: Maybe<Array<Scheduler_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Items_Order_By>>;
  where?: Maybe<Scheduler_Items_Bool_Exp>;
};


/** query root */
export type Query_RootScheduler_Items_AggregateArgs = {
  distinct_on?: Maybe<Array<Scheduler_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Items_Order_By>>;
  where?: Maybe<Scheduler_Items_Bool_Exp>;
};


/** query root */
export type Query_RootScheduler_Items_By_PkArgs = {
  scheduler_item_id: Scalars['String'];
};


/** query root */
export type Query_RootScheduler_PatternsArgs = {
  distinct_on?: Maybe<Array<Scheduler_Patterns_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Patterns_Order_By>>;
  where?: Maybe<Scheduler_Patterns_Bool_Exp>;
};


/** query root */
export type Query_RootScheduler_Patterns_AggregateArgs = {
  distinct_on?: Maybe<Array<Scheduler_Patterns_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Patterns_Order_By>>;
  where?: Maybe<Scheduler_Patterns_Bool_Exp>;
};


/** query root */
export type Query_RootScheduler_Patterns_By_PkArgs = {
  scheduler_pattern_id: Scalars['String'];
};


/** query root */
export type Query_RootSchema_MigrationsArgs = {
  distinct_on?: Maybe<Array<Schema_Migrations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Schema_Migrations_Order_By>>;
  where?: Maybe<Schema_Migrations_Bool_Exp>;
};


/** query root */
export type Query_RootSchema_Migrations_AggregateArgs = {
  distinct_on?: Maybe<Array<Schema_Migrations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Schema_Migrations_Order_By>>;
  where?: Maybe<Schema_Migrations_Bool_Exp>;
};


/** query root */
export type Query_RootSchema_Migrations_By_PkArgs = {
  version: Scalars['bigint'];
};


/** query root */
export type Query_RootSchool_AdminsArgs = {
  distinct_on?: Maybe<Array<School_Admins_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<School_Admins_Order_By>>;
  where?: Maybe<School_Admins_Bool_Exp>;
};


/** query root */
export type Query_RootSchool_Admins_AggregateArgs = {
  distinct_on?: Maybe<Array<School_Admins_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<School_Admins_Order_By>>;
  where?: Maybe<School_Admins_Bool_Exp>;
};


/** query root */
export type Query_RootSchool_Admins_By_PkArgs = {
  school_admin_id: Scalars['String'];
};


/** query root */
export type Query_RootSchool_ConfigsArgs = {
  distinct_on?: Maybe<Array<School_Configs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<School_Configs_Order_By>>;
  where?: Maybe<School_Configs_Bool_Exp>;
};


/** query root */
export type Query_RootSchool_Configs_AggregateArgs = {
  distinct_on?: Maybe<Array<School_Configs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<School_Configs_Order_By>>;
  where?: Maybe<School_Configs_Bool_Exp>;
};


/** query root */
export type Query_RootSchool_Configs_By_PkArgs = {
  school_id: Scalars['Int'];
};


/** query root */
export type Query_RootSchoolsArgs = {
  distinct_on?: Maybe<Array<Schools_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Schools_Order_By>>;
  where?: Maybe<Schools_Bool_Exp>;
};


/** query root */
export type Query_RootSchools_AggregateArgs = {
  distinct_on?: Maybe<Array<Schools_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Schools_Order_By>>;
  where?: Maybe<Schools_Bool_Exp>;
};


/** query root */
export type Query_RootSchools_By_PkArgs = {
  school_id: Scalars['Int'];
};


/** query root */
export type Query_RootSearch_Courses_By_NameArgs = {
  args: Search_Courses_By_Name_Args;
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};


/** query root */
export type Query_RootSearch_Courses_By_Name_AggregateArgs = {
  args: Search_Courses_By_Name_Args;
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};


/** query root */
export type Query_RootShuffled_Quiz_SetsArgs = {
  distinct_on?: Maybe<Array<Shuffled_Quiz_Sets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Shuffled_Quiz_Sets_Order_By>>;
  where?: Maybe<Shuffled_Quiz_Sets_Bool_Exp>;
};


/** query root */
export type Query_RootShuffled_Quiz_Sets_AggregateArgs = {
  distinct_on?: Maybe<Array<Shuffled_Quiz_Sets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Shuffled_Quiz_Sets_Order_By>>;
  where?: Maybe<Shuffled_Quiz_Sets_Bool_Exp>;
};


/** query root */
export type Query_RootShuffled_Quiz_Sets_By_PkArgs = {
  shuffled_quiz_set_id: Scalars['String'];
};


/** query root */
export type Query_RootStudent_AssignmentsArgs = {
  distinct_on?: Maybe<Array<Student_Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Assignments_Order_By>>;
  where?: Maybe<Student_Assignments_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Assignments_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Assignments_Order_By>>;
  where?: Maybe<Student_Assignments_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Assignments_By_PkArgs = {
  assignment_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** query root */
export type Query_RootStudent_CommentsArgs = {
  distinct_on?: Maybe<Array<Student_Comments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Comments_Order_By>>;
  where?: Maybe<Student_Comments_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Comments_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Comments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Comments_Order_By>>;
  where?: Maybe<Student_Comments_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Comments_By_PkArgs = {
  comment_id: Scalars['String'];
};


/** query root */
export type Query_RootStudent_Entryexit_RecordsArgs = {
  distinct_on?: Maybe<Array<Student_Entryexit_Records_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Entryexit_Records_Order_By>>;
  where?: Maybe<Student_Entryexit_Records_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Entryexit_Records_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Entryexit_Records_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Entryexit_Records_Order_By>>;
  where?: Maybe<Student_Entryexit_Records_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Entryexit_Records_By_PkArgs = {
  entryexit_id: Scalars['Int'];
};


/** query root */
export type Query_RootStudent_Event_LogsArgs = {
  distinct_on?: Maybe<Array<Student_Event_Logs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Event_Logs_Order_By>>;
  where?: Maybe<Student_Event_Logs_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Event_Logs_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Event_Logs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Event_Logs_Order_By>>;
  where?: Maybe<Student_Event_Logs_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Event_Logs_By_PkArgs = {
  student_event_log_id: Scalars['Int'];
};


/** query root */
export type Query_RootStudent_Learning_Time_By_DailyArgs = {
  distinct_on?: Maybe<Array<Student_Learning_Time_By_Daily_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Learning_Time_By_Daily_Order_By>>;
  where?: Maybe<Student_Learning_Time_By_Daily_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Learning_Time_By_Daily_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Learning_Time_By_Daily_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Learning_Time_By_Daily_Order_By>>;
  where?: Maybe<Student_Learning_Time_By_Daily_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Learning_Time_By_Daily_By_PkArgs = {
  learning_time_id: Scalars['Int'];
};


/** query root */
export type Query_RootStudent_PackagesArgs = {
  distinct_on?: Maybe<Array<Student_Packages_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Packages_Order_By>>;
  where?: Maybe<Student_Packages_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Packages_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Packages_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Packages_Order_By>>;
  where?: Maybe<Student_Packages_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Packages_By_PkArgs = {
  student_package_id: Scalars['String'];
};


/** query root */
export type Query_RootStudent_ParentsArgs = {
  distinct_on?: Maybe<Array<Student_Parents_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Parents_Order_By>>;
  where?: Maybe<Student_Parents_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Parents_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Parents_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Parents_Order_By>>;
  where?: Maybe<Student_Parents_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Parents_By_PkArgs = {
  parent_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** query root */
export type Query_RootStudent_QrArgs = {
  distinct_on?: Maybe<Array<Student_Qr_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Qr_Order_By>>;
  where?: Maybe<Student_Qr_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Qr_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Qr_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Qr_Order_By>>;
  where?: Maybe<Student_Qr_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Qr_By_PkArgs = {
  qr_id: Scalars['Int'];
};


/** query root */
export type Query_RootStudent_QuestionsArgs = {
  distinct_on?: Maybe<Array<Student_Questions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Questions_Order_By>>;
  where?: Maybe<Student_Questions_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Questions_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Questions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Questions_Order_By>>;
  where?: Maybe<Student_Questions_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Questions_By_PkArgs = {
  student_question_id: Scalars['String'];
};


/** query root */
export type Query_RootStudent_StatisticsArgs = {
  distinct_on?: Maybe<Array<Student_Statistics_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Statistics_Order_By>>;
  where?: Maybe<Student_Statistics_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Statistics_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Statistics_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Statistics_Order_By>>;
  where?: Maybe<Student_Statistics_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Study_PlansArgs = {
  distinct_on?: Maybe<Array<Student_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Study_Plans_Order_By>>;
  where?: Maybe<Student_Study_Plans_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Study_Plans_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Study_Plans_Order_By>>;
  where?: Maybe<Student_Study_Plans_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Study_Plans_By_PkArgs = {
  student_id: Scalars['String'];
  study_plan_id: Scalars['String'];
};


/** query root */
export type Query_RootStudent_Submission_GradesArgs = {
  distinct_on?: Maybe<Array<Student_Submission_Grades_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submission_Grades_Order_By>>;
  where?: Maybe<Student_Submission_Grades_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Submission_Grades_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Submission_Grades_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submission_Grades_Order_By>>;
  where?: Maybe<Student_Submission_Grades_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Submission_Grades_By_PkArgs = {
  student_submission_grade_id: Scalars['String'];
};


/** query root */
export type Query_RootStudent_Submission_ScoresArgs = {
  distinct_on?: Maybe<Array<Student_Submission_Scores_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submission_Scores_Order_By>>;
  where?: Maybe<Student_Submission_Scores_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Submission_Scores_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Submission_Scores_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submission_Scores_Order_By>>;
  where?: Maybe<Student_Submission_Scores_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Submission_Scores_By_PkArgs = {
  student_submission_score_id: Scalars['String'];
};


/** query root */
export type Query_RootStudent_SubmissionsArgs = {
  distinct_on?: Maybe<Array<Student_Submissions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submissions_Order_By>>;
  where?: Maybe<Student_Submissions_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Submissions_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Submissions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submissions_Order_By>>;
  where?: Maybe<Student_Submissions_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Submissions_By_PkArgs = {
  student_submission_id: Scalars['String'];
};


/** query root */
export type Query_RootStudent_SubscriptionsArgs = {
  distinct_on?: Maybe<Array<Student_Subscriptions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Subscriptions_Order_By>>;
  where?: Maybe<Student_Subscriptions_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Subscriptions_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Subscriptions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Subscriptions_Order_By>>;
  where?: Maybe<Student_Subscriptions_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Subscriptions_By_PkArgs = {
  student_subscription_id: Scalars['String'];
};


/** query root */
export type Query_RootStudentsArgs = {
  distinct_on?: Maybe<Array<Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Order_By>>;
  where?: Maybe<Students_Bool_Exp>;
};


/** query root */
export type Query_RootStudents_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Order_By>>;
  where?: Maybe<Students_Bool_Exp>;
};


/** query root */
export type Query_RootStudents_Assigned_CoachesArgs = {
  distinct_on?: Maybe<Array<Students_Assigned_Coaches_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Assigned_Coaches_Order_By>>;
  where?: Maybe<Students_Assigned_Coaches_Bool_Exp>;
};


/** query root */
export type Query_RootStudents_Assigned_Coaches_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Assigned_Coaches_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Assigned_Coaches_Order_By>>;
  where?: Maybe<Students_Assigned_Coaches_Bool_Exp>;
};


/** query root */
export type Query_RootStudents_By_PkArgs = {
  student_id: Scalars['String'];
};


/** query root */
export type Query_RootStudents_Learning_Objectives_CompletenessArgs = {
  distinct_on?: Maybe<Array<Students_Learning_Objectives_Completeness_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Learning_Objectives_Completeness_Order_By>>;
  where?: Maybe<Students_Learning_Objectives_Completeness_Bool_Exp>;
};


/** query root */
export type Query_RootStudents_Learning_Objectives_Completeness_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Learning_Objectives_Completeness_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Learning_Objectives_Completeness_Order_By>>;
  where?: Maybe<Students_Learning_Objectives_Completeness_Bool_Exp>;
};


/** query root */
export type Query_RootStudents_Learning_Objectives_Completeness_By_PkArgs = {
  lo_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** query root */
export type Query_RootStudents_Learning_Objectives_RecordsArgs = {
  distinct_on?: Maybe<Array<Students_Learning_Objectives_Records_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Learning_Objectives_Records_Order_By>>;
  where?: Maybe<Students_Learning_Objectives_Records_Bool_Exp>;
};


/** query root */
export type Query_RootStudents_Learning_Objectives_Records_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Learning_Objectives_Records_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Learning_Objectives_Records_Order_By>>;
  where?: Maybe<Students_Learning_Objectives_Records_Bool_Exp>;
};


/** query root */
export type Query_RootStudents_Learning_Objectives_Records_By_PkArgs = {
  record_id: Scalars['String'];
};


/** query root */
export type Query_RootStudents_Study_Plans_WeeklyArgs = {
  distinct_on?: Maybe<Array<Students_Study_Plans_Weekly_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Study_Plans_Weekly_Order_By>>;
  where?: Maybe<Students_Study_Plans_Weekly_Bool_Exp>;
};


/** query root */
export type Query_RootStudents_Study_Plans_Weekly_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Study_Plans_Weekly_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Study_Plans_Weekly_Order_By>>;
  where?: Maybe<Students_Study_Plans_Weekly_Bool_Exp>;
};


/** query root */
export type Query_RootStudents_Study_Plans_Weekly_By_PkArgs = {
  preset_study_plan_weekly_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** query root */
export type Query_RootStudents_Topics_CompletenessArgs = {
  distinct_on?: Maybe<Array<Students_Topics_Completeness_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Topics_Completeness_Order_By>>;
  where?: Maybe<Students_Topics_Completeness_Bool_Exp>;
};


/** query root */
export type Query_RootStudents_Topics_Completeness_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Topics_Completeness_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Topics_Completeness_Order_By>>;
  where?: Maybe<Students_Topics_Completeness_Bool_Exp>;
};


/** query root */
export type Query_RootStudents_Topics_OverdueArgs = {
  distinct_on?: Maybe<Array<Students_Topics_Overdue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Topics_Overdue_Order_By>>;
  where?: Maybe<Students_Topics_Overdue_Bool_Exp>;
};


/** query root */
export type Query_RootStudents_Topics_Overdue_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Topics_Overdue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Topics_Overdue_Order_By>>;
  where?: Maybe<Students_Topics_Overdue_Bool_Exp>;
};


/** query root */
export type Query_RootStudents_Topics_Overdue_By_PkArgs = {
  student_id: Scalars['String'];
  topic_id: Scalars['String'];
};


/** query root */
export type Query_RootStudy_Plan_ItemsArgs = {
  distinct_on?: Maybe<Array<Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Study_Plan_Items_Order_By>>;
  where?: Maybe<Study_Plan_Items_Bool_Exp>;
};


/** query root */
export type Query_RootStudy_Plan_Items_AggregateArgs = {
  distinct_on?: Maybe<Array<Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Study_Plan_Items_Order_By>>;
  where?: Maybe<Study_Plan_Items_Bool_Exp>;
};


/** query root */
export type Query_RootStudy_Plan_Items_By_PkArgs = {
  study_plan_item_id: Scalars['String'];
};


/** query root */
export type Query_RootStudy_PlansArgs = {
  distinct_on?: Maybe<Array<Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Study_Plans_Order_By>>;
  where?: Maybe<Study_Plans_Bool_Exp>;
};


/** query root */
export type Query_RootStudy_Plans_AggregateArgs = {
  distinct_on?: Maybe<Array<Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Study_Plans_Order_By>>;
  where?: Maybe<Study_Plans_Bool_Exp>;
};


/** query root */
export type Query_RootStudy_Plans_By_PkArgs = {
  study_plan_id: Scalars['String'];
};


/** query root */
export type Query_RootTaxArgs = {
  distinct_on?: Maybe<Array<Tax_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tax_Order_By>>;
  where?: Maybe<Tax_Bool_Exp>;
};


/** query root */
export type Query_RootTax_AggregateArgs = {
  distinct_on?: Maybe<Array<Tax_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tax_Order_By>>;
  where?: Maybe<Tax_Bool_Exp>;
};


/** query root */
export type Query_RootTax_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootTeacher_By_School_IdArgs = {
  distinct_on?: Maybe<Array<Teacher_By_School_Id_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Teacher_By_School_Id_Order_By>>;
  where?: Maybe<Teacher_By_School_Id_Bool_Exp>;
};


/** query root */
export type Query_RootTeacher_By_School_Id_AggregateArgs = {
  distinct_on?: Maybe<Array<Teacher_By_School_Id_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Teacher_By_School_Id_Order_By>>;
  where?: Maybe<Teacher_By_School_Id_Bool_Exp>;
};


/** query root */
export type Query_RootTeachersArgs = {
  distinct_on?: Maybe<Array<Teachers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Teachers_Order_By>>;
  where?: Maybe<Teachers_Bool_Exp>;
};


/** query root */
export type Query_RootTeachers_AggregateArgs = {
  distinct_on?: Maybe<Array<Teachers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Teachers_Order_By>>;
  where?: Maybe<Teachers_Bool_Exp>;
};


/** query root */
export type Query_RootTeachers_By_PkArgs = {
  teacher_id: Scalars['String'];
};


/** query root */
export type Query_RootTopicsArgs = {
  distinct_on?: Maybe<Array<Topics_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Topics_Order_By>>;
  where?: Maybe<Topics_Bool_Exp>;
};


/** query root */
export type Query_RootTopics_AggregateArgs = {
  distinct_on?: Maybe<Array<Topics_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Topics_Order_By>>;
  where?: Maybe<Topics_Bool_Exp>;
};


/** query root */
export type Query_RootTopics_AssignmentsArgs = {
  distinct_on?: Maybe<Array<Topics_Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Topics_Assignments_Order_By>>;
  where?: Maybe<Topics_Assignments_Bool_Exp>;
};


/** query root */
export type Query_RootTopics_Assignments_AggregateArgs = {
  distinct_on?: Maybe<Array<Topics_Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Topics_Assignments_Order_By>>;
  where?: Maybe<Topics_Assignments_Bool_Exp>;
};


/** query root */
export type Query_RootTopics_Assignments_By_PkArgs = {
  assignment_id: Scalars['String'];
  topic_id: Scalars['String'];
};


/** query root */
export type Query_RootTopics_By_PkArgs = {
  topic_id: Scalars['String'];
};


/** query root */
export type Query_RootTopics_Learning_ObjectivesArgs = {
  distinct_on?: Maybe<Array<Topics_Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Topics_Learning_Objectives_Order_By>>;
  where?: Maybe<Topics_Learning_Objectives_Bool_Exp>;
};


/** query root */
export type Query_RootTopics_Learning_Objectives_AggregateArgs = {
  distinct_on?: Maybe<Array<Topics_Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Topics_Learning_Objectives_Order_By>>;
  where?: Maybe<Topics_Learning_Objectives_Bool_Exp>;
};


/** query root */
export type Query_RootTopics_Learning_Objectives_By_PkArgs = {
  lo_id: Scalars['String'];
  topic_id: Scalars['String'];
};


/** query root */
export type Query_RootTutorsArgs = {
  distinct_on?: Maybe<Array<Tutors_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tutors_Order_By>>;
  where?: Maybe<Tutors_Bool_Exp>;
};


/** query root */
export type Query_RootTutors_AggregateArgs = {
  distinct_on?: Maybe<Array<Tutors_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tutors_Order_By>>;
  where?: Maybe<Tutors_Bool_Exp>;
};


/** query root */
export type Query_RootTutors_By_PkArgs = {
  tutor_id: Scalars['String'];
};


/** query root */
export type Query_RootUser_Access_PathsArgs = {
  distinct_on?: Maybe<Array<User_Access_Paths_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Access_Paths_Order_By>>;
  where?: Maybe<User_Access_Paths_Bool_Exp>;
};


/** query root */
export type Query_RootUser_Access_Paths_AggregateArgs = {
  distinct_on?: Maybe<Array<User_Access_Paths_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Access_Paths_Order_By>>;
  where?: Maybe<User_Access_Paths_Bool_Exp>;
};


/** query root */
export type Query_RootUser_Access_Paths_By_PkArgs = {
  location_id: Scalars['String'];
  user_id: Scalars['String'];
};


/** query root */
export type Query_RootUser_NotificationsArgs = {
  distinct_on?: Maybe<Array<User_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Notifications_Order_By>>;
  where?: Maybe<User_Notifications_Bool_Exp>;
};


/** query root */
export type Query_RootUser_Notifications_AggregateArgs = {
  distinct_on?: Maybe<Array<User_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Notifications_Order_By>>;
  where?: Maybe<User_Notifications_Bool_Exp>;
};


/** query root */
export type Query_RootUser_Notifications_By_PkArgs = {
  user_notification_id: Scalars['String'];
};


/** query root */
export type Query_RootUsersArgs = {
  distinct_on?: Maybe<Array<Users_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Order_By>>;
  where?: Maybe<Users_Bool_Exp>;
};


/** query root */
export type Query_RootUsers_AggregateArgs = {
  distinct_on?: Maybe<Array<Users_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Order_By>>;
  where?: Maybe<Users_Bool_Exp>;
};


/** query root */
export type Query_RootUsers_By_PkArgs = {
  user_id: Scalars['String'];
};


/** query root */
export type Query_RootUsers_GroupsArgs = {
  distinct_on?: Maybe<Array<Users_Groups_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Groups_Order_By>>;
  where?: Maybe<Users_Groups_Bool_Exp>;
};


/** query root */
export type Query_RootUsers_Groups_AggregateArgs = {
  distinct_on?: Maybe<Array<Users_Groups_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Groups_Order_By>>;
  where?: Maybe<Users_Groups_Bool_Exp>;
};


/** query root */
export type Query_RootUsers_Groups_By_PkArgs = {
  group_id: Scalars['String'];
  user_id: Scalars['String'];
};


/** query root */
export type Query_RootUsers_Info_NotificationsArgs = {
  distinct_on?: Maybe<Array<Users_Info_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Info_Notifications_Order_By>>;
  where?: Maybe<Users_Info_Notifications_Bool_Exp>;
};


/** query root */
export type Query_RootUsers_Info_Notifications_AggregateArgs = {
  distinct_on?: Maybe<Array<Users_Info_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Info_Notifications_Order_By>>;
  where?: Maybe<Users_Info_Notifications_Bool_Exp>;
};


/** query root */
export type Query_RootUsers_Info_Notifications_By_PkArgs = {
  user_notification_id: Scalars['String'];
};

/** columns and relationships of "questions" */
export type Questions = {
  answers?: Maybe<Scalars['_text']>;
  answers_rendered?: Maybe<Scalars['_text']>;
  answers_url?: Maybe<Scalars['_text']>;
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  difficulty_level: Scalars['smallint'];
  explanation?: Maybe<Scalars['String']>;
  explanation_rendered?: Maybe<Scalars['String']>;
  explanation_url?: Maybe<Scalars['String']>;
  explanation_wrong_answer?: Maybe<Scalars['_text']>;
  explanation_wrong_answer_rendered?: Maybe<Scalars['_text']>;
  explanation_wrong_answer_url?: Maybe<Scalars['_text']>;
  is_waiting_for_render?: Maybe<Scalars['Boolean']>;
  master_question_id?: Maybe<Scalars['String']>;
  question: Scalars['String'];
  /** An object relationship */
  questionByMasterQuestionId?: Maybe<Questions>;
  question_id: Scalars['String'];
  question_rendered?: Maybe<Scalars['String']>;
  question_url?: Maybe<Scalars['String']>;
  /** An array relationship */
  questions: Array<Questions>;
  /** An aggregated array relationship */
  questions_aggregate: Questions_Aggregate;
  /** An array relationship */
  questions_tagged_learning_objectives: Array<Questions_Tagged_Learning_Objectives>;
  /** An aggregated array relationship */
  questions_tagged_learning_objectives_aggregate: Questions_Tagged_Learning_Objectives_Aggregate;
  /** An array relationship */
  quizsets: Array<Quizsets>;
  /** An aggregated array relationship */
  quizsets_aggregate: Quizsets_Aggregate;
  rendering_question?: Maybe<Scalars['Boolean']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An array relationship */
  student_questions: Array<Student_Questions>;
  /** An aggregated array relationship */
  student_questions_aggregate: Student_Questions_Aggregate;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "questions" */
export type QuestionsQuestionsArgs = {
  distinct_on?: Maybe<Array<Questions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Questions_Order_By>>;
  where?: Maybe<Questions_Bool_Exp>;
};


/** columns and relationships of "questions" */
export type QuestionsQuestions_AggregateArgs = {
  distinct_on?: Maybe<Array<Questions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Questions_Order_By>>;
  where?: Maybe<Questions_Bool_Exp>;
};


/** columns and relationships of "questions" */
export type QuestionsQuestions_Tagged_Learning_ObjectivesArgs = {
  distinct_on?: Maybe<Array<Questions_Tagged_Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Questions_Tagged_Learning_Objectives_Order_By>>;
  where?: Maybe<Questions_Tagged_Learning_Objectives_Bool_Exp>;
};


/** columns and relationships of "questions" */
export type QuestionsQuestions_Tagged_Learning_Objectives_AggregateArgs = {
  distinct_on?: Maybe<Array<Questions_Tagged_Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Questions_Tagged_Learning_Objectives_Order_By>>;
  where?: Maybe<Questions_Tagged_Learning_Objectives_Bool_Exp>;
};


/** columns and relationships of "questions" */
export type QuestionsQuizsetsArgs = {
  distinct_on?: Maybe<Array<Quizsets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quizsets_Order_By>>;
  where?: Maybe<Quizsets_Bool_Exp>;
};


/** columns and relationships of "questions" */
export type QuestionsQuizsets_AggregateArgs = {
  distinct_on?: Maybe<Array<Quizsets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quizsets_Order_By>>;
  where?: Maybe<Quizsets_Bool_Exp>;
};


/** columns and relationships of "questions" */
export type QuestionsStudent_QuestionsArgs = {
  distinct_on?: Maybe<Array<Student_Questions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Questions_Order_By>>;
  where?: Maybe<Student_Questions_Bool_Exp>;
};


/** columns and relationships of "questions" */
export type QuestionsStudent_Questions_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Questions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Questions_Order_By>>;
  where?: Maybe<Student_Questions_Bool_Exp>;
};

/** aggregated selection of "questions" */
export type Questions_Aggregate = {
  aggregate?: Maybe<Questions_Aggregate_Fields>;
  nodes: Array<Questions>;
};

/** aggregate fields of "questions" */
export type Questions_Aggregate_Fields = {
  avg?: Maybe<Questions_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Questions_Max_Fields>;
  min?: Maybe<Questions_Min_Fields>;
  stddev?: Maybe<Questions_Stddev_Fields>;
  stddev_pop?: Maybe<Questions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Questions_Stddev_Samp_Fields>;
  sum?: Maybe<Questions_Sum_Fields>;
  var_pop?: Maybe<Questions_Var_Pop_Fields>;
  var_samp?: Maybe<Questions_Var_Samp_Fields>;
  variance?: Maybe<Questions_Variance_Fields>;
};


/** aggregate fields of "questions" */
export type Questions_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Questions_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "questions" */
export type Questions_Aggregate_Order_By = {
  avg?: Maybe<Questions_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Questions_Max_Order_By>;
  min?: Maybe<Questions_Min_Order_By>;
  stddev?: Maybe<Questions_Stddev_Order_By>;
  stddev_pop?: Maybe<Questions_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Questions_Stddev_Samp_Order_By>;
  sum?: Maybe<Questions_Sum_Order_By>;
  var_pop?: Maybe<Questions_Var_Pop_Order_By>;
  var_samp?: Maybe<Questions_Var_Samp_Order_By>;
  variance?: Maybe<Questions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "questions" */
export type Questions_Arr_Rel_Insert_Input = {
  data: Array<Questions_Insert_Input>;
  on_conflict?: Maybe<Questions_On_Conflict>;
};

/** aggregate avg on columns */
export type Questions_Avg_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "questions" */
export type Questions_Avg_Order_By = {
  difficulty_level?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "questions". All fields are combined with a logical 'AND'. */
export type Questions_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Questions_Bool_Exp>>>;
  _not?: Maybe<Questions_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Questions_Bool_Exp>>>;
  answers?: Maybe<_Text_Comparison_Exp>;
  answers_rendered?: Maybe<_Text_Comparison_Exp>;
  answers_url?: Maybe<_Text_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  difficulty_level?: Maybe<Smallint_Comparison_Exp>;
  explanation?: Maybe<String_Comparison_Exp>;
  explanation_rendered?: Maybe<String_Comparison_Exp>;
  explanation_url?: Maybe<String_Comparison_Exp>;
  explanation_wrong_answer?: Maybe<_Text_Comparison_Exp>;
  explanation_wrong_answer_rendered?: Maybe<_Text_Comparison_Exp>;
  explanation_wrong_answer_url?: Maybe<_Text_Comparison_Exp>;
  is_waiting_for_render?: Maybe<Boolean_Comparison_Exp>;
  master_question_id?: Maybe<String_Comparison_Exp>;
  question?: Maybe<String_Comparison_Exp>;
  questionByMasterQuestionId?: Maybe<Questions_Bool_Exp>;
  question_id?: Maybe<String_Comparison_Exp>;
  question_rendered?: Maybe<String_Comparison_Exp>;
  question_url?: Maybe<String_Comparison_Exp>;
  questions?: Maybe<Questions_Bool_Exp>;
  questions_tagged_learning_objectives?: Maybe<Questions_Tagged_Learning_Objectives_Bool_Exp>;
  quizsets?: Maybe<Quizsets_Bool_Exp>;
  rendering_question?: Maybe<Boolean_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student_questions?: Maybe<Student_Questions_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "questions" */
export enum Questions_Constraint {
  /** unique or primary key constraint */
  QuestionsPk = 'questions_pk'
}

/** input type for incrementing integer column in table "questions" */
export type Questions_Inc_Input = {
  difficulty_level?: Maybe<Scalars['smallint']>;
};

/** input type for inserting data into table "questions" */
export type Questions_Insert_Input = {
  answers?: Maybe<Scalars['_text']>;
  answers_rendered?: Maybe<Scalars['_text']>;
  answers_url?: Maybe<Scalars['_text']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  difficulty_level?: Maybe<Scalars['smallint']>;
  explanation?: Maybe<Scalars['String']>;
  explanation_rendered?: Maybe<Scalars['String']>;
  explanation_url?: Maybe<Scalars['String']>;
  explanation_wrong_answer?: Maybe<Scalars['_text']>;
  explanation_wrong_answer_rendered?: Maybe<Scalars['_text']>;
  explanation_wrong_answer_url?: Maybe<Scalars['_text']>;
  is_waiting_for_render?: Maybe<Scalars['Boolean']>;
  master_question_id?: Maybe<Scalars['String']>;
  question?: Maybe<Scalars['String']>;
  questionByMasterQuestionId?: Maybe<Questions_Obj_Rel_Insert_Input>;
  question_id?: Maybe<Scalars['String']>;
  question_rendered?: Maybe<Scalars['String']>;
  question_url?: Maybe<Scalars['String']>;
  questions?: Maybe<Questions_Arr_Rel_Insert_Input>;
  questions_tagged_learning_objectives?: Maybe<Questions_Tagged_Learning_Objectives_Arr_Rel_Insert_Input>;
  quizsets?: Maybe<Quizsets_Arr_Rel_Insert_Input>;
  rendering_question?: Maybe<Scalars['Boolean']>;
  resource_path?: Maybe<Scalars['String']>;
  student_questions?: Maybe<Student_Questions_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Questions_Max_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  difficulty_level?: Maybe<Scalars['smallint']>;
  explanation?: Maybe<Scalars['String']>;
  explanation_rendered?: Maybe<Scalars['String']>;
  explanation_url?: Maybe<Scalars['String']>;
  master_question_id?: Maybe<Scalars['String']>;
  question?: Maybe<Scalars['String']>;
  question_id?: Maybe<Scalars['String']>;
  question_rendered?: Maybe<Scalars['String']>;
  question_url?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "questions" */
export type Questions_Max_Order_By = {
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  difficulty_level?: Maybe<Order_By>;
  explanation?: Maybe<Order_By>;
  explanation_rendered?: Maybe<Order_By>;
  explanation_url?: Maybe<Order_By>;
  master_question_id?: Maybe<Order_By>;
  question?: Maybe<Order_By>;
  question_id?: Maybe<Order_By>;
  question_rendered?: Maybe<Order_By>;
  question_url?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Questions_Min_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  difficulty_level?: Maybe<Scalars['smallint']>;
  explanation?: Maybe<Scalars['String']>;
  explanation_rendered?: Maybe<Scalars['String']>;
  explanation_url?: Maybe<Scalars['String']>;
  master_question_id?: Maybe<Scalars['String']>;
  question?: Maybe<Scalars['String']>;
  question_id?: Maybe<Scalars['String']>;
  question_rendered?: Maybe<Scalars['String']>;
  question_url?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "questions" */
export type Questions_Min_Order_By = {
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  difficulty_level?: Maybe<Order_By>;
  explanation?: Maybe<Order_By>;
  explanation_rendered?: Maybe<Order_By>;
  explanation_url?: Maybe<Order_By>;
  master_question_id?: Maybe<Order_By>;
  question?: Maybe<Order_By>;
  question_id?: Maybe<Order_By>;
  question_rendered?: Maybe<Order_By>;
  question_url?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "questions" */
export type Questions_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Questions>;
};

/** input type for inserting object relation for remote table "questions" */
export type Questions_Obj_Rel_Insert_Input = {
  data: Questions_Insert_Input;
  on_conflict?: Maybe<Questions_On_Conflict>;
};

/** on conflict condition type for table "questions" */
export type Questions_On_Conflict = {
  constraint: Questions_Constraint;
  update_columns: Array<Questions_Update_Column>;
  where?: Maybe<Questions_Bool_Exp>;
};

/** ordering options when selecting data from "questions" */
export type Questions_Order_By = {
  answers?: Maybe<Order_By>;
  answers_rendered?: Maybe<Order_By>;
  answers_url?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  difficulty_level?: Maybe<Order_By>;
  explanation?: Maybe<Order_By>;
  explanation_rendered?: Maybe<Order_By>;
  explanation_url?: Maybe<Order_By>;
  explanation_wrong_answer?: Maybe<Order_By>;
  explanation_wrong_answer_rendered?: Maybe<Order_By>;
  explanation_wrong_answer_url?: Maybe<Order_By>;
  is_waiting_for_render?: Maybe<Order_By>;
  master_question_id?: Maybe<Order_By>;
  question?: Maybe<Order_By>;
  questionByMasterQuestionId?: Maybe<Questions_Order_By>;
  question_id?: Maybe<Order_By>;
  question_rendered?: Maybe<Order_By>;
  question_url?: Maybe<Order_By>;
  questions_aggregate?: Maybe<Questions_Aggregate_Order_By>;
  questions_tagged_learning_objectives_aggregate?: Maybe<Questions_Tagged_Learning_Objectives_Aggregate_Order_By>;
  quizsets_aggregate?: Maybe<Quizsets_Aggregate_Order_By>;
  rendering_question?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_questions_aggregate?: Maybe<Student_Questions_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "questions" */
export type Questions_Pk_Columns_Input = {
  question_id: Scalars['String'];
};

/** select columns of table "questions" */
export enum Questions_Select_Column {
  /** column name */
  Answers = 'answers',
  /** column name */
  AnswersRendered = 'answers_rendered',
  /** column name */
  AnswersUrl = 'answers_url',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DifficultyLevel = 'difficulty_level',
  /** column name */
  Explanation = 'explanation',
  /** column name */
  ExplanationRendered = 'explanation_rendered',
  /** column name */
  ExplanationUrl = 'explanation_url',
  /** column name */
  ExplanationWrongAnswer = 'explanation_wrong_answer',
  /** column name */
  ExplanationWrongAnswerRendered = 'explanation_wrong_answer_rendered',
  /** column name */
  ExplanationWrongAnswerUrl = 'explanation_wrong_answer_url',
  /** column name */
  IsWaitingForRender = 'is_waiting_for_render',
  /** column name */
  MasterQuestionId = 'master_question_id',
  /** column name */
  Question = 'question',
  /** column name */
  QuestionId = 'question_id',
  /** column name */
  QuestionRendered = 'question_rendered',
  /** column name */
  QuestionUrl = 'question_url',
  /** column name */
  RenderingQuestion = 'rendering_question',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "questions" */
export type Questions_Set_Input = {
  answers?: Maybe<Scalars['_text']>;
  answers_rendered?: Maybe<Scalars['_text']>;
  answers_url?: Maybe<Scalars['_text']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  difficulty_level?: Maybe<Scalars['smallint']>;
  explanation?: Maybe<Scalars['String']>;
  explanation_rendered?: Maybe<Scalars['String']>;
  explanation_url?: Maybe<Scalars['String']>;
  explanation_wrong_answer?: Maybe<Scalars['_text']>;
  explanation_wrong_answer_rendered?: Maybe<Scalars['_text']>;
  explanation_wrong_answer_url?: Maybe<Scalars['_text']>;
  is_waiting_for_render?: Maybe<Scalars['Boolean']>;
  master_question_id?: Maybe<Scalars['String']>;
  question?: Maybe<Scalars['String']>;
  question_id?: Maybe<Scalars['String']>;
  question_rendered?: Maybe<Scalars['String']>;
  question_url?: Maybe<Scalars['String']>;
  rendering_question?: Maybe<Scalars['Boolean']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Questions_Stddev_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "questions" */
export type Questions_Stddev_Order_By = {
  difficulty_level?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Questions_Stddev_Pop_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "questions" */
export type Questions_Stddev_Pop_Order_By = {
  difficulty_level?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Questions_Stddev_Samp_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "questions" */
export type Questions_Stddev_Samp_Order_By = {
  difficulty_level?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Questions_Sum_Fields = {
  difficulty_level?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "questions" */
export type Questions_Sum_Order_By = {
  difficulty_level?: Maybe<Order_By>;
};

/** columns and relationships of "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives = {
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order: Scalars['Int'];
  lo_id: Scalars['String'];
  /** An object relationship */
  question: Questions;
  question_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Aggregate = {
  aggregate?: Maybe<Questions_Tagged_Learning_Objectives_Aggregate_Fields>;
  nodes: Array<Questions_Tagged_Learning_Objectives>;
};

/** aggregate fields of "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Aggregate_Fields = {
  avg?: Maybe<Questions_Tagged_Learning_Objectives_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Questions_Tagged_Learning_Objectives_Max_Fields>;
  min?: Maybe<Questions_Tagged_Learning_Objectives_Min_Fields>;
  stddev?: Maybe<Questions_Tagged_Learning_Objectives_Stddev_Fields>;
  stddev_pop?: Maybe<Questions_Tagged_Learning_Objectives_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Questions_Tagged_Learning_Objectives_Stddev_Samp_Fields>;
  sum?: Maybe<Questions_Tagged_Learning_Objectives_Sum_Fields>;
  var_pop?: Maybe<Questions_Tagged_Learning_Objectives_Var_Pop_Fields>;
  var_samp?: Maybe<Questions_Tagged_Learning_Objectives_Var_Samp_Fields>;
  variance?: Maybe<Questions_Tagged_Learning_Objectives_Variance_Fields>;
};


/** aggregate fields of "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Questions_Tagged_Learning_Objectives_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Aggregate_Order_By = {
  avg?: Maybe<Questions_Tagged_Learning_Objectives_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Questions_Tagged_Learning_Objectives_Max_Order_By>;
  min?: Maybe<Questions_Tagged_Learning_Objectives_Min_Order_By>;
  stddev?: Maybe<Questions_Tagged_Learning_Objectives_Stddev_Order_By>;
  stddev_pop?: Maybe<Questions_Tagged_Learning_Objectives_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Questions_Tagged_Learning_Objectives_Stddev_Samp_Order_By>;
  sum?: Maybe<Questions_Tagged_Learning_Objectives_Sum_Order_By>;
  var_pop?: Maybe<Questions_Tagged_Learning_Objectives_Var_Pop_Order_By>;
  var_samp?: Maybe<Questions_Tagged_Learning_Objectives_Var_Samp_Order_By>;
  variance?: Maybe<Questions_Tagged_Learning_Objectives_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Arr_Rel_Insert_Input = {
  data: Array<Questions_Tagged_Learning_Objectives_Insert_Input>;
  on_conflict?: Maybe<Questions_Tagged_Learning_Objectives_On_Conflict>;
};

/** aggregate avg on columns */
export type Questions_Tagged_Learning_Objectives_Avg_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Avg_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "questions_tagged_learning_objectives". All fields are combined with a logical 'AND'. */
export type Questions_Tagged_Learning_Objectives_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Questions_Tagged_Learning_Objectives_Bool_Exp>>>;
  _not?: Maybe<Questions_Tagged_Learning_Objectives_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Questions_Tagged_Learning_Objectives_Bool_Exp>>>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  display_order?: Maybe<Int_Comparison_Exp>;
  lo_id?: Maybe<String_Comparison_Exp>;
  question?: Maybe<Questions_Bool_Exp>;
  question_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "questions_tagged_learning_objectives" */
export enum Questions_Tagged_Learning_Objectives_Constraint {
  /** unique or primary key constraint */
  QuestionsTaggedLearningObjectivesPk = 'questions_tagged_learning_objectives_pk'
}

/** input type for incrementing integer column in table "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Inc_Input = {
  display_order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Insert_Input = {
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  lo_id?: Maybe<Scalars['String']>;
  question?: Maybe<Questions_Obj_Rel_Insert_Input>;
  question_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Questions_Tagged_Learning_Objectives_Max_Fields = {
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  lo_id?: Maybe<Scalars['String']>;
  question_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Max_Order_By = {
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  lo_id?: Maybe<Order_By>;
  question_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Questions_Tagged_Learning_Objectives_Min_Fields = {
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  lo_id?: Maybe<Scalars['String']>;
  question_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Min_Order_By = {
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  lo_id?: Maybe<Order_By>;
  question_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** response of any mutation on the table "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Questions_Tagged_Learning_Objectives>;
};

/** input type for inserting object relation for remote table "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Obj_Rel_Insert_Input = {
  data: Questions_Tagged_Learning_Objectives_Insert_Input;
  on_conflict?: Maybe<Questions_Tagged_Learning_Objectives_On_Conflict>;
};

/** on conflict condition type for table "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_On_Conflict = {
  constraint: Questions_Tagged_Learning_Objectives_Constraint;
  update_columns: Array<Questions_Tagged_Learning_Objectives_Update_Column>;
  where?: Maybe<Questions_Tagged_Learning_Objectives_Bool_Exp>;
};

/** ordering options when selecting data from "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Order_By = {
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  lo_id?: Maybe<Order_By>;
  question?: Maybe<Questions_Order_By>;
  question_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
};

/** primary key columns input for table: "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Pk_Columns_Input = {
  lo_id: Scalars['String'];
  question_id: Scalars['String'];
};

/** select columns of table "questions_tagged_learning_objectives" */
export enum Questions_Tagged_Learning_Objectives_Select_Column {
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  QuestionId = 'question_id',
  /** column name */
  ResourcePath = 'resource_path'
}

/** input type for updating data in table "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Set_Input = {
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  lo_id?: Maybe<Scalars['String']>;
  question_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Questions_Tagged_Learning_Objectives_Stddev_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Stddev_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Questions_Tagged_Learning_Objectives_Stddev_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Stddev_Pop_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Questions_Tagged_Learning_Objectives_Stddev_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Stddev_Samp_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Questions_Tagged_Learning_Objectives_Sum_Fields = {
  display_order?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Sum_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** update columns of table "questions_tagged_learning_objectives" */
export enum Questions_Tagged_Learning_Objectives_Update_Column {
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  QuestionId = 'question_id',
  /** column name */
  ResourcePath = 'resource_path'
}

/** aggregate var_pop on columns */
export type Questions_Tagged_Learning_Objectives_Var_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Var_Pop_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Questions_Tagged_Learning_Objectives_Var_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Var_Samp_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Questions_Tagged_Learning_Objectives_Variance_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "questions_tagged_learning_objectives" */
export type Questions_Tagged_Learning_Objectives_Variance_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** update columns of table "questions" */
export enum Questions_Update_Column {
  /** column name */
  Answers = 'answers',
  /** column name */
  AnswersRendered = 'answers_rendered',
  /** column name */
  AnswersUrl = 'answers_url',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DifficultyLevel = 'difficulty_level',
  /** column name */
  Explanation = 'explanation',
  /** column name */
  ExplanationRendered = 'explanation_rendered',
  /** column name */
  ExplanationUrl = 'explanation_url',
  /** column name */
  ExplanationWrongAnswer = 'explanation_wrong_answer',
  /** column name */
  ExplanationWrongAnswerRendered = 'explanation_wrong_answer_rendered',
  /** column name */
  ExplanationWrongAnswerUrl = 'explanation_wrong_answer_url',
  /** column name */
  IsWaitingForRender = 'is_waiting_for_render',
  /** column name */
  MasterQuestionId = 'master_question_id',
  /** column name */
  Question = 'question',
  /** column name */
  QuestionId = 'question_id',
  /** column name */
  QuestionRendered = 'question_rendered',
  /** column name */
  QuestionUrl = 'question_url',
  /** column name */
  RenderingQuestion = 'rendering_question',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Questions_Var_Pop_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "questions" */
export type Questions_Var_Pop_Order_By = {
  difficulty_level?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Questions_Var_Samp_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "questions" */
export type Questions_Var_Samp_Order_By = {
  difficulty_level?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Questions_Variance_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "questions" */
export type Questions_Variance_Order_By = {
  difficulty_level?: Maybe<Order_By>;
};

/** columns and relationships of "quiz_sets" */
export type Quiz_Sets = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  learning_objective: Learning_Objectives;
  lo_id: Scalars['String'];
  quiz_external_ids: Scalars['_text'];
  quiz_set_id: Scalars['String'];
  /** An array relationship */
  quiz_sets_quizzes: Array<Quizzes>;
  /** An aggregated array relationship */
  quiz_sets_quizzes_aggregate: Quizzes_Aggregate;
  resource_path?: Maybe<Scalars['String']>;
  /** An array relationship */
  shuffled_quiz_sets: Array<Shuffled_Quiz_Sets>;
  /** An aggregated array relationship */
  shuffled_quiz_sets_aggregate: Shuffled_Quiz_Sets_Aggregate;
  status: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "quiz_sets" */
export type Quiz_SetsQuiz_Sets_QuizzesArgs = {
  distinct_on?: Maybe<Array<Quizzes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quizzes_Order_By>>;
  where?: Maybe<Quizzes_Bool_Exp>;
};


/** columns and relationships of "quiz_sets" */
export type Quiz_SetsQuiz_Sets_Quizzes_AggregateArgs = {
  distinct_on?: Maybe<Array<Quizzes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quizzes_Order_By>>;
  where?: Maybe<Quizzes_Bool_Exp>;
};


/** columns and relationships of "quiz_sets" */
export type Quiz_SetsShuffled_Quiz_SetsArgs = {
  distinct_on?: Maybe<Array<Shuffled_Quiz_Sets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Shuffled_Quiz_Sets_Order_By>>;
  where?: Maybe<Shuffled_Quiz_Sets_Bool_Exp>;
};


/** columns and relationships of "quiz_sets" */
export type Quiz_SetsShuffled_Quiz_Sets_AggregateArgs = {
  distinct_on?: Maybe<Array<Shuffled_Quiz_Sets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Shuffled_Quiz_Sets_Order_By>>;
  where?: Maybe<Shuffled_Quiz_Sets_Bool_Exp>;
};

/** aggregated selection of "quiz_sets" */
export type Quiz_Sets_Aggregate = {
  aggregate?: Maybe<Quiz_Sets_Aggregate_Fields>;
  nodes: Array<Quiz_Sets>;
};

/** aggregate fields of "quiz_sets" */
export type Quiz_Sets_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Quiz_Sets_Max_Fields>;
  min?: Maybe<Quiz_Sets_Min_Fields>;
};


/** aggregate fields of "quiz_sets" */
export type Quiz_Sets_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Quiz_Sets_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "quiz_sets" */
export type Quiz_Sets_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Quiz_Sets_Max_Order_By>;
  min?: Maybe<Quiz_Sets_Min_Order_By>;
};

/** input type for inserting array relation for remote table "quiz_sets" */
export type Quiz_Sets_Arr_Rel_Insert_Input = {
  data: Array<Quiz_Sets_Insert_Input>;
  on_conflict?: Maybe<Quiz_Sets_On_Conflict>;
};

/** Boolean expression to filter rows from the table "quiz_sets". All fields are combined with a logical 'AND'. */
export type Quiz_Sets_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Quiz_Sets_Bool_Exp>>>;
  _not?: Maybe<Quiz_Sets_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Quiz_Sets_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  learning_objective?: Maybe<Learning_Objectives_Bool_Exp>;
  lo_id?: Maybe<String_Comparison_Exp>;
  quiz_external_ids?: Maybe<_Text_Comparison_Exp>;
  quiz_set_id?: Maybe<String_Comparison_Exp>;
  quiz_sets_quizzes?: Maybe<Quizzes_Bool_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  shuffled_quiz_sets?: Maybe<Shuffled_Quiz_Sets_Bool_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "quiz_sets" */
export enum Quiz_Sets_Constraint {
  /** unique or primary key constraint */
  QuizSetsApprovedLoIdIdx = 'quiz_sets_approved_lo_id_idx',
  /** unique or primary key constraint */
  QuizSetsPk = 'quiz_sets_pk'
}

/** input type for inserting data into table "quiz_sets" */
export type Quiz_Sets_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  learning_objective?: Maybe<Learning_Objectives_Obj_Rel_Insert_Input>;
  lo_id?: Maybe<Scalars['String']>;
  quiz_external_ids?: Maybe<Scalars['_text']>;
  quiz_set_id?: Maybe<Scalars['String']>;
  quiz_sets_quizzes?: Maybe<Quizzes_Arr_Rel_Insert_Input>;
  resource_path?: Maybe<Scalars['String']>;
  shuffled_quiz_sets?: Maybe<Shuffled_Quiz_Sets_Arr_Rel_Insert_Input>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Quiz_Sets_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lo_id?: Maybe<Scalars['String']>;
  quiz_set_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "quiz_sets" */
export type Quiz_Sets_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lo_id?: Maybe<Order_By>;
  quiz_set_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Quiz_Sets_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lo_id?: Maybe<Scalars['String']>;
  quiz_set_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "quiz_sets" */
export type Quiz_Sets_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lo_id?: Maybe<Order_By>;
  quiz_set_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "quiz_sets" */
export type Quiz_Sets_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Quiz_Sets>;
};

/** input type for inserting object relation for remote table "quiz_sets" */
export type Quiz_Sets_Obj_Rel_Insert_Input = {
  data: Quiz_Sets_Insert_Input;
  on_conflict?: Maybe<Quiz_Sets_On_Conflict>;
};

/** on conflict condition type for table "quiz_sets" */
export type Quiz_Sets_On_Conflict = {
  constraint: Quiz_Sets_Constraint;
  update_columns: Array<Quiz_Sets_Update_Column>;
  where?: Maybe<Quiz_Sets_Bool_Exp>;
};

/** ordering options when selecting data from "quiz_sets" */
export type Quiz_Sets_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  learning_objective?: Maybe<Learning_Objectives_Order_By>;
  lo_id?: Maybe<Order_By>;
  quiz_external_ids?: Maybe<Order_By>;
  quiz_set_id?: Maybe<Order_By>;
  quiz_sets_quizzes_aggregate?: Maybe<Quizzes_Aggregate_Order_By>;
  resource_path?: Maybe<Order_By>;
  shuffled_quiz_sets_aggregate?: Maybe<Shuffled_Quiz_Sets_Aggregate_Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "quiz_sets" */
export type Quiz_Sets_Pk_Columns_Input = {
  quiz_set_id: Scalars['String'];
};

/** select columns of table "quiz_sets" */
export enum Quiz_Sets_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  QuizExternalIds = 'quiz_external_ids',
  /** column name */
  QuizSetId = 'quiz_set_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "quiz_sets" */
export type Quiz_Sets_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lo_id?: Maybe<Scalars['String']>;
  quiz_external_ids?: Maybe<Scalars['_text']>;
  quiz_set_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "quiz_sets" */
export enum Quiz_Sets_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  QuizExternalIds = 'quiz_external_ids',
  /** column name */
  QuizSetId = 'quiz_set_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "quizsets" */
export type Quizsets = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  /** An object relationship */
  learning_objective: Learning_Objectives;
  lo_id: Scalars['String'];
  /** An object relationship */
  question: Questions;
  question_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "quizsets" */
export type Quizsets_Aggregate = {
  aggregate?: Maybe<Quizsets_Aggregate_Fields>;
  nodes: Array<Quizsets>;
};

/** aggregate fields of "quizsets" */
export type Quizsets_Aggregate_Fields = {
  avg?: Maybe<Quizsets_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Quizsets_Max_Fields>;
  min?: Maybe<Quizsets_Min_Fields>;
  stddev?: Maybe<Quizsets_Stddev_Fields>;
  stddev_pop?: Maybe<Quizsets_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Quizsets_Stddev_Samp_Fields>;
  sum?: Maybe<Quizsets_Sum_Fields>;
  var_pop?: Maybe<Quizsets_Var_Pop_Fields>;
  var_samp?: Maybe<Quizsets_Var_Samp_Fields>;
  variance?: Maybe<Quizsets_Variance_Fields>;
};


/** aggregate fields of "quizsets" */
export type Quizsets_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Quizsets_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "quizsets" */
export type Quizsets_Aggregate_Order_By = {
  avg?: Maybe<Quizsets_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Quizsets_Max_Order_By>;
  min?: Maybe<Quizsets_Min_Order_By>;
  stddev?: Maybe<Quizsets_Stddev_Order_By>;
  stddev_pop?: Maybe<Quizsets_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Quizsets_Stddev_Samp_Order_By>;
  sum?: Maybe<Quizsets_Sum_Order_By>;
  var_pop?: Maybe<Quizsets_Var_Pop_Order_By>;
  var_samp?: Maybe<Quizsets_Var_Samp_Order_By>;
  variance?: Maybe<Quizsets_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "quizsets" */
export type Quizsets_Arr_Rel_Insert_Input = {
  data: Array<Quizsets_Insert_Input>;
  on_conflict?: Maybe<Quizsets_On_Conflict>;
};

/** aggregate avg on columns */
export type Quizsets_Avg_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "quizsets" */
export type Quizsets_Avg_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "quizsets". All fields are combined with a logical 'AND'. */
export type Quizsets_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Quizsets_Bool_Exp>>>;
  _not?: Maybe<Quizsets_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Quizsets_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  display_order?: Maybe<Int_Comparison_Exp>;
  learning_objective?: Maybe<Learning_Objectives_Bool_Exp>;
  lo_id?: Maybe<String_Comparison_Exp>;
  question?: Maybe<Questions_Bool_Exp>;
  question_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "quizsets" */
export enum Quizsets_Constraint {
  /** unique or primary key constraint */
  QuizsetsPk = 'quizsets_pk'
}

/** input type for incrementing integer column in table "quizsets" */
export type Quizsets_Inc_Input = {
  display_order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "quizsets" */
export type Quizsets_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  learning_objective?: Maybe<Learning_Objectives_Obj_Rel_Insert_Input>;
  lo_id?: Maybe<Scalars['String']>;
  question?: Maybe<Questions_Obj_Rel_Insert_Input>;
  question_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Quizsets_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  lo_id?: Maybe<Scalars['String']>;
  question_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "quizsets" */
export type Quizsets_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  lo_id?: Maybe<Order_By>;
  question_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Quizsets_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  lo_id?: Maybe<Scalars['String']>;
  question_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "quizsets" */
export type Quizsets_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  lo_id?: Maybe<Order_By>;
  question_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "quizsets" */
export type Quizsets_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Quizsets>;
};

/** input type for inserting object relation for remote table "quizsets" */
export type Quizsets_Obj_Rel_Insert_Input = {
  data: Quizsets_Insert_Input;
  on_conflict?: Maybe<Quizsets_On_Conflict>;
};

/** on conflict condition type for table "quizsets" */
export type Quizsets_On_Conflict = {
  constraint: Quizsets_Constraint;
  update_columns: Array<Quizsets_Update_Column>;
  where?: Maybe<Quizsets_Bool_Exp>;
};

/** ordering options when selecting data from "quizsets" */
export type Quizsets_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  learning_objective?: Maybe<Learning_Objectives_Order_By>;
  lo_id?: Maybe<Order_By>;
  question?: Maybe<Questions_Order_By>;
  question_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "quizsets" */
export type Quizsets_Pk_Columns_Input = {
  lo_id: Scalars['String'];
  question_id: Scalars['String'];
};

/** select columns of table "quizsets" */
export enum Quizsets_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  QuestionId = 'question_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "quizsets" */
export type Quizsets_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  lo_id?: Maybe<Scalars['String']>;
  question_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Quizsets_Stddev_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "quizsets" */
export type Quizsets_Stddev_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Quizsets_Stddev_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "quizsets" */
export type Quizsets_Stddev_Pop_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Quizsets_Stddev_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "quizsets" */
export type Quizsets_Stddev_Samp_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Quizsets_Sum_Fields = {
  display_order?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "quizsets" */
export type Quizsets_Sum_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** update columns of table "quizsets" */
export enum Quizsets_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  QuestionId = 'question_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Quizsets_Var_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "quizsets" */
export type Quizsets_Var_Pop_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Quizsets_Var_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "quizsets" */
export type Quizsets_Var_Samp_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Quizsets_Variance_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "quizsets" */
export type Quizsets_Variance_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** columns and relationships of "quizzes" */
export type Quizzes = {
  approved_by: Scalars['String'];
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  created_by: Scalars['String'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  difficulty_level?: Maybe<Scalars['Int']>;
  explanation: Scalars['jsonb'];
  external_id: Scalars['String'];
  kind: Scalars['String'];
  lo_ids?: Maybe<Scalars['_text']>;
  options: Scalars['jsonb'];
  question: Scalars['jsonb'];
  quiz_id: Scalars['String'];
  /** An array relationship */
  quiz_sets: Array<Quiz_Sets>;
  /** An aggregated array relationship */
  quiz_sets_aggregate: Quiz_Sets_Aggregate;
  resource_path?: Maybe<Scalars['String']>;
  school_id: Scalars['Int'];
  status: Scalars['String'];
  tagged_los?: Maybe<Scalars['_text']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "quizzes" */
export type QuizzesExplanationArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "quizzes" */
export type QuizzesOptionsArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "quizzes" */
export type QuizzesQuestionArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "quizzes" */
export type QuizzesQuiz_SetsArgs = {
  distinct_on?: Maybe<Array<Quiz_Sets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quiz_Sets_Order_By>>;
  where?: Maybe<Quiz_Sets_Bool_Exp>;
};


/** columns and relationships of "quizzes" */
export type QuizzesQuiz_Sets_AggregateArgs = {
  distinct_on?: Maybe<Array<Quiz_Sets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quiz_Sets_Order_By>>;
  where?: Maybe<Quiz_Sets_Bool_Exp>;
};

/** aggregated selection of "quizzes" */
export type Quizzes_Aggregate = {
  aggregate?: Maybe<Quizzes_Aggregate_Fields>;
  nodes: Array<Quizzes>;
};

/** aggregate fields of "quizzes" */
export type Quizzes_Aggregate_Fields = {
  avg?: Maybe<Quizzes_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Quizzes_Max_Fields>;
  min?: Maybe<Quizzes_Min_Fields>;
  stddev?: Maybe<Quizzes_Stddev_Fields>;
  stddev_pop?: Maybe<Quizzes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Quizzes_Stddev_Samp_Fields>;
  sum?: Maybe<Quizzes_Sum_Fields>;
  var_pop?: Maybe<Quizzes_Var_Pop_Fields>;
  var_samp?: Maybe<Quizzes_Var_Samp_Fields>;
  variance?: Maybe<Quizzes_Variance_Fields>;
};


/** aggregate fields of "quizzes" */
export type Quizzes_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Quizzes_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "quizzes" */
export type Quizzes_Aggregate_Order_By = {
  avg?: Maybe<Quizzes_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Quizzes_Max_Order_By>;
  min?: Maybe<Quizzes_Min_Order_By>;
  stddev?: Maybe<Quizzes_Stddev_Order_By>;
  stddev_pop?: Maybe<Quizzes_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Quizzes_Stddev_Samp_Order_By>;
  sum?: Maybe<Quizzes_Sum_Order_By>;
  var_pop?: Maybe<Quizzes_Var_Pop_Order_By>;
  var_samp?: Maybe<Quizzes_Var_Samp_Order_By>;
  variance?: Maybe<Quizzes_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Quizzes_Append_Input = {
  explanation?: Maybe<Scalars['jsonb']>;
  options?: Maybe<Scalars['jsonb']>;
  question?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "quizzes" */
export type Quizzes_Arr_Rel_Insert_Input = {
  data: Array<Quizzes_Insert_Input>;
  on_conflict?: Maybe<Quizzes_On_Conflict>;
};

/** aggregate avg on columns */
export type Quizzes_Avg_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "quizzes" */
export type Quizzes_Avg_Order_By = {
  difficulty_level?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "quizzes". All fields are combined with a logical 'AND'. */
export type Quizzes_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Quizzes_Bool_Exp>>>;
  _not?: Maybe<Quizzes_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Quizzes_Bool_Exp>>>;
  approved_by?: Maybe<String_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  created_by?: Maybe<String_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  difficulty_level?: Maybe<Int_Comparison_Exp>;
  explanation?: Maybe<Jsonb_Comparison_Exp>;
  external_id?: Maybe<String_Comparison_Exp>;
  kind?: Maybe<String_Comparison_Exp>;
  lo_ids?: Maybe<_Text_Comparison_Exp>;
  options?: Maybe<Jsonb_Comparison_Exp>;
  question?: Maybe<Jsonb_Comparison_Exp>;
  quiz_id?: Maybe<String_Comparison_Exp>;
  quiz_sets?: Maybe<Quiz_Sets_Bool_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  school_id?: Maybe<Int_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  tagged_los?: Maybe<_Text_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "quizzes" */
export enum Quizzes_Constraint {
  /** unique or primary key constraint */
  QuizsPk = 'quizs_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Quizzes_Delete_At_Path_Input = {
  explanation?: Maybe<Array<Maybe<Scalars['String']>>>;
  options?: Maybe<Array<Maybe<Scalars['String']>>>;
  question?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Quizzes_Delete_Elem_Input = {
  explanation?: Maybe<Scalars['Int']>;
  options?: Maybe<Scalars['Int']>;
  question?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Quizzes_Delete_Key_Input = {
  explanation?: Maybe<Scalars['String']>;
  options?: Maybe<Scalars['String']>;
  question?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "quizzes" */
export type Quizzes_Inc_Input = {
  difficulty_level?: Maybe<Scalars['Int']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "quizzes" */
export type Quizzes_Insert_Input = {
  approved_by?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  difficulty_level?: Maybe<Scalars['Int']>;
  explanation?: Maybe<Scalars['jsonb']>;
  external_id?: Maybe<Scalars['String']>;
  kind?: Maybe<Scalars['String']>;
  lo_ids?: Maybe<Scalars['_text']>;
  options?: Maybe<Scalars['jsonb']>;
  question?: Maybe<Scalars['jsonb']>;
  quiz_id?: Maybe<Scalars['String']>;
  quiz_sets?: Maybe<Quiz_Sets_Arr_Rel_Insert_Input>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  tagged_los?: Maybe<Scalars['_text']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Quizzes_Max_Fields = {
  approved_by?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  difficulty_level?: Maybe<Scalars['Int']>;
  external_id?: Maybe<Scalars['String']>;
  kind?: Maybe<Scalars['String']>;
  quiz_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "quizzes" */
export type Quizzes_Max_Order_By = {
  approved_by?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  created_by?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  difficulty_level?: Maybe<Order_By>;
  external_id?: Maybe<Order_By>;
  kind?: Maybe<Order_By>;
  quiz_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Quizzes_Min_Fields = {
  approved_by?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  difficulty_level?: Maybe<Scalars['Int']>;
  external_id?: Maybe<Scalars['String']>;
  kind?: Maybe<Scalars['String']>;
  quiz_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "quizzes" */
export type Quizzes_Min_Order_By = {
  approved_by?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  created_by?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  difficulty_level?: Maybe<Order_By>;
  external_id?: Maybe<Order_By>;
  kind?: Maybe<Order_By>;
  quiz_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "quizzes" */
export type Quizzes_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Quizzes>;
};

/** input type for inserting object relation for remote table "quizzes" */
export type Quizzes_Obj_Rel_Insert_Input = {
  data: Quizzes_Insert_Input;
  on_conflict?: Maybe<Quizzes_On_Conflict>;
};

/** on conflict condition type for table "quizzes" */
export type Quizzes_On_Conflict = {
  constraint: Quizzes_Constraint;
  update_columns: Array<Quizzes_Update_Column>;
  where?: Maybe<Quizzes_Bool_Exp>;
};

/** ordering options when selecting data from "quizzes" */
export type Quizzes_Order_By = {
  approved_by?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  created_by?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  difficulty_level?: Maybe<Order_By>;
  explanation?: Maybe<Order_By>;
  external_id?: Maybe<Order_By>;
  kind?: Maybe<Order_By>;
  lo_ids?: Maybe<Order_By>;
  options?: Maybe<Order_By>;
  question?: Maybe<Order_By>;
  quiz_id?: Maybe<Order_By>;
  quiz_sets_aggregate?: Maybe<Quiz_Sets_Aggregate_Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  tagged_los?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "quizzes" */
export type Quizzes_Pk_Columns_Input = {
  quiz_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Quizzes_Prepend_Input = {
  explanation?: Maybe<Scalars['jsonb']>;
  options?: Maybe<Scalars['jsonb']>;
  question?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "quizzes" */
export enum Quizzes_Select_Column {
  /** column name */
  ApprovedBy = 'approved_by',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreatedBy = 'created_by',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DifficultyLevel = 'difficulty_level',
  /** column name */
  Explanation = 'explanation',
  /** column name */
  ExternalId = 'external_id',
  /** column name */
  Kind = 'kind',
  /** column name */
  LoIds = 'lo_ids',
  /** column name */
  Options = 'options',
  /** column name */
  Question = 'question',
  /** column name */
  QuizId = 'quiz_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Status = 'status',
  /** column name */
  TaggedLos = 'tagged_los',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "quizzes" */
export type Quizzes_Set_Input = {
  approved_by?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  difficulty_level?: Maybe<Scalars['Int']>;
  explanation?: Maybe<Scalars['jsonb']>;
  external_id?: Maybe<Scalars['String']>;
  kind?: Maybe<Scalars['String']>;
  lo_ids?: Maybe<Scalars['_text']>;
  options?: Maybe<Scalars['jsonb']>;
  question?: Maybe<Scalars['jsonb']>;
  quiz_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  tagged_los?: Maybe<Scalars['_text']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Quizzes_Stddev_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "quizzes" */
export type Quizzes_Stddev_Order_By = {
  difficulty_level?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Quizzes_Stddev_Pop_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "quizzes" */
export type Quizzes_Stddev_Pop_Order_By = {
  difficulty_level?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Quizzes_Stddev_Samp_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "quizzes" */
export type Quizzes_Stddev_Samp_Order_By = {
  difficulty_level?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Quizzes_Sum_Fields = {
  difficulty_level?: Maybe<Scalars['Int']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "quizzes" */
export type Quizzes_Sum_Order_By = {
  difficulty_level?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** update columns of table "quizzes" */
export enum Quizzes_Update_Column {
  /** column name */
  ApprovedBy = 'approved_by',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreatedBy = 'created_by',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DifficultyLevel = 'difficulty_level',
  /** column name */
  Explanation = 'explanation',
  /** column name */
  ExternalId = 'external_id',
  /** column name */
  Kind = 'kind',
  /** column name */
  LoIds = 'lo_ids',
  /** column name */
  Options = 'options',
  /** column name */
  Question = 'question',
  /** column name */
  QuizId = 'quiz_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Status = 'status',
  /** column name */
  TaggedLos = 'tagged_los',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Quizzes_Var_Pop_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "quizzes" */
export type Quizzes_Var_Pop_Order_By = {
  difficulty_level?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Quizzes_Var_Samp_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "quizzes" */
export type Quizzes_Var_Samp_Order_By = {
  difficulty_level?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Quizzes_Variance_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "quizzes" */
export type Quizzes_Variance_Order_By = {
  difficulty_level?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** columns and relationships of "scheduler_items" */
export type Scheduler_Items = {
  all_day?: Maybe<Scalars['Boolean']>;
  /** An object relationship */
  brand?: Maybe<Brands>;
  brand_id?: Maybe<Scalars['String']>;
  /** An object relationship */
  center?: Maybe<Centers>;
  center_id?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  meta_data?: Maybe<Scalars['jsonb']>;
  owner?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduler_item_id: Scalars['String'];
  /** An object relationship */
  scheduler_pattern: Scheduler_Patterns;
  scheduler_pattern_id: Scalars['String'];
  start_time: Scalars['timestamptz'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "scheduler_items" */
export type Scheduler_ItemsMeta_DataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "scheduler_items" */
export type Scheduler_Items_Aggregate = {
  aggregate?: Maybe<Scheduler_Items_Aggregate_Fields>;
  nodes: Array<Scheduler_Items>;
};

/** aggregate fields of "scheduler_items" */
export type Scheduler_Items_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Scheduler_Items_Max_Fields>;
  min?: Maybe<Scheduler_Items_Min_Fields>;
};


/** aggregate fields of "scheduler_items" */
export type Scheduler_Items_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Scheduler_Items_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "scheduler_items" */
export type Scheduler_Items_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Scheduler_Items_Max_Order_By>;
  min?: Maybe<Scheduler_Items_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Scheduler_Items_Append_Input = {
  meta_data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "scheduler_items" */
export type Scheduler_Items_Arr_Rel_Insert_Input = {
  data: Array<Scheduler_Items_Insert_Input>;
  on_conflict?: Maybe<Scheduler_Items_On_Conflict>;
};

/** Boolean expression to filter rows from the table "scheduler_items". All fields are combined with a logical 'AND'. */
export type Scheduler_Items_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Scheduler_Items_Bool_Exp>>>;
  _not?: Maybe<Scheduler_Items_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Scheduler_Items_Bool_Exp>>>;
  all_day?: Maybe<Boolean_Comparison_Exp>;
  brand?: Maybe<Brands_Bool_Exp>;
  brand_id?: Maybe<String_Comparison_Exp>;
  center?: Maybe<Centers_Bool_Exp>;
  center_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  end_time?: Maybe<Timestamptz_Comparison_Exp>;
  meta_data?: Maybe<Jsonb_Comparison_Exp>;
  owner?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  scheduler_item_id?: Maybe<String_Comparison_Exp>;
  scheduler_pattern?: Maybe<Scheduler_Patterns_Bool_Exp>;
  scheduler_pattern_id?: Maybe<String_Comparison_Exp>;
  start_time?: Maybe<Timestamptz_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "scheduler_items" */
export enum Scheduler_Items_Constraint {
  /** unique or primary key constraint */
  SchedulerItemsPk = 'scheduler_items_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Scheduler_Items_Delete_At_Path_Input = {
  meta_data?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Scheduler_Items_Delete_Elem_Input = {
  meta_data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Scheduler_Items_Delete_Key_Input = {
  meta_data?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "scheduler_items" */
export type Scheduler_Items_Insert_Input = {
  all_day?: Maybe<Scalars['Boolean']>;
  brand?: Maybe<Brands_Obj_Rel_Insert_Input>;
  brand_id?: Maybe<Scalars['String']>;
  center?: Maybe<Centers_Obj_Rel_Insert_Input>;
  center_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  meta_data?: Maybe<Scalars['jsonb']>;
  owner?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduler_item_id?: Maybe<Scalars['String']>;
  scheduler_pattern?: Maybe<Scheduler_Patterns_Obj_Rel_Insert_Input>;
  scheduler_pattern_id?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Scheduler_Items_Max_Fields = {
  brand_id?: Maybe<Scalars['String']>;
  center_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  owner?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduler_item_id?: Maybe<Scalars['String']>;
  scheduler_pattern_id?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "scheduler_items" */
export type Scheduler_Items_Max_Order_By = {
  brand_id?: Maybe<Order_By>;
  center_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_time?: Maybe<Order_By>;
  owner?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  scheduler_item_id?: Maybe<Order_By>;
  scheduler_pattern_id?: Maybe<Order_By>;
  start_time?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Scheduler_Items_Min_Fields = {
  brand_id?: Maybe<Scalars['String']>;
  center_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  owner?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduler_item_id?: Maybe<Scalars['String']>;
  scheduler_pattern_id?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "scheduler_items" */
export type Scheduler_Items_Min_Order_By = {
  brand_id?: Maybe<Order_By>;
  center_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_time?: Maybe<Order_By>;
  owner?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  scheduler_item_id?: Maybe<Order_By>;
  scheduler_pattern_id?: Maybe<Order_By>;
  start_time?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "scheduler_items" */
export type Scheduler_Items_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Scheduler_Items>;
};

/** input type for inserting object relation for remote table "scheduler_items" */
export type Scheduler_Items_Obj_Rel_Insert_Input = {
  data: Scheduler_Items_Insert_Input;
  on_conflict?: Maybe<Scheduler_Items_On_Conflict>;
};

/** on conflict condition type for table "scheduler_items" */
export type Scheduler_Items_On_Conflict = {
  constraint: Scheduler_Items_Constraint;
  update_columns: Array<Scheduler_Items_Update_Column>;
  where?: Maybe<Scheduler_Items_Bool_Exp>;
};

/** ordering options when selecting data from "scheduler_items" */
export type Scheduler_Items_Order_By = {
  all_day?: Maybe<Order_By>;
  brand?: Maybe<Brands_Order_By>;
  brand_id?: Maybe<Order_By>;
  center?: Maybe<Centers_Order_By>;
  center_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_time?: Maybe<Order_By>;
  meta_data?: Maybe<Order_By>;
  owner?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  scheduler_item_id?: Maybe<Order_By>;
  scheduler_pattern?: Maybe<Scheduler_Patterns_Order_By>;
  scheduler_pattern_id?: Maybe<Order_By>;
  start_time?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "scheduler_items" */
export type Scheduler_Items_Pk_Columns_Input = {
  scheduler_item_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Scheduler_Items_Prepend_Input = {
  meta_data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "scheduler_items" */
export enum Scheduler_Items_Select_Column {
  /** column name */
  AllDay = 'all_day',
  /** column name */
  BrandId = 'brand_id',
  /** column name */
  CenterId = 'center_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndTime = 'end_time',
  /** column name */
  MetaData = 'meta_data',
  /** column name */
  Owner = 'owner',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchedulerItemId = 'scheduler_item_id',
  /** column name */
  SchedulerPatternId = 'scheduler_pattern_id',
  /** column name */
  StartTime = 'start_time',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "scheduler_items" */
export type Scheduler_Items_Set_Input = {
  all_day?: Maybe<Scalars['Boolean']>;
  brand_id?: Maybe<Scalars['String']>;
  center_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  meta_data?: Maybe<Scalars['jsonb']>;
  owner?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduler_item_id?: Maybe<Scalars['String']>;
  scheduler_pattern_id?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "scheduler_items" */
export enum Scheduler_Items_Update_Column {
  /** column name */
  AllDay = 'all_day',
  /** column name */
  BrandId = 'brand_id',
  /** column name */
  CenterId = 'center_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndTime = 'end_time',
  /** column name */
  MetaData = 'meta_data',
  /** column name */
  Owner = 'owner',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchedulerItemId = 'scheduler_item_id',
  /** column name */
  SchedulerPatternId = 'scheduler_pattern_id',
  /** column name */
  StartTime = 'start_time',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "scheduler_patterns" */
export type Scheduler_Patterns = {
  all_day?: Maybe<Scalars['Boolean']>;
  /** An object relationship */
  brand?: Maybe<Brands>;
  brand_id?: Maybe<Scalars['String']>;
  /** An object relationship */
  center?: Maybe<Centers>;
  center_id?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  latest_released_at?: Maybe<Scalars['timestamptz']>;
  meta_data?: Maybe<Scalars['jsonb']>;
  owner?: Maybe<Scalars['String']>;
  repeat_option_data?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An array relationship */
  scheduler_items: Array<Scheduler_Items>;
  /** An aggregated array relationship */
  scheduler_items_aggregate: Scheduler_Items_Aggregate;
  /** An object relationship */
  scheduler_pattern?: Maybe<Scheduler_Patterns>;
  scheduler_pattern_id: Scalars['String'];
  scheduler_pattern_parent_id?: Maybe<Scalars['String']>;
  /** An array relationship */
  scheduler_patterns: Array<Scheduler_Patterns>;
  /** An aggregated array relationship */
  scheduler_patterns_aggregate: Scheduler_Patterns_Aggregate;
  scheduler_type: Scalars['String'];
  start_time: Scalars['timestamptz'];
  time_zone: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "scheduler_patterns" */
export type Scheduler_PatternsMeta_DataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "scheduler_patterns" */
export type Scheduler_PatternsRepeat_Option_DataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "scheduler_patterns" */
export type Scheduler_PatternsScheduler_ItemsArgs = {
  distinct_on?: Maybe<Array<Scheduler_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Items_Order_By>>;
  where?: Maybe<Scheduler_Items_Bool_Exp>;
};


/** columns and relationships of "scheduler_patterns" */
export type Scheduler_PatternsScheduler_Items_AggregateArgs = {
  distinct_on?: Maybe<Array<Scheduler_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Items_Order_By>>;
  where?: Maybe<Scheduler_Items_Bool_Exp>;
};


/** columns and relationships of "scheduler_patterns" */
export type Scheduler_PatternsScheduler_PatternsArgs = {
  distinct_on?: Maybe<Array<Scheduler_Patterns_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Patterns_Order_By>>;
  where?: Maybe<Scheduler_Patterns_Bool_Exp>;
};


/** columns and relationships of "scheduler_patterns" */
export type Scheduler_PatternsScheduler_Patterns_AggregateArgs = {
  distinct_on?: Maybe<Array<Scheduler_Patterns_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Patterns_Order_By>>;
  where?: Maybe<Scheduler_Patterns_Bool_Exp>;
};

/** aggregated selection of "scheduler_patterns" */
export type Scheduler_Patterns_Aggregate = {
  aggregate?: Maybe<Scheduler_Patterns_Aggregate_Fields>;
  nodes: Array<Scheduler_Patterns>;
};

/** aggregate fields of "scheduler_patterns" */
export type Scheduler_Patterns_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Scheduler_Patterns_Max_Fields>;
  min?: Maybe<Scheduler_Patterns_Min_Fields>;
};


/** aggregate fields of "scheduler_patterns" */
export type Scheduler_Patterns_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Scheduler_Patterns_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "scheduler_patterns" */
export type Scheduler_Patterns_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Scheduler_Patterns_Max_Order_By>;
  min?: Maybe<Scheduler_Patterns_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Scheduler_Patterns_Append_Input = {
  meta_data?: Maybe<Scalars['jsonb']>;
  repeat_option_data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "scheduler_patterns" */
export type Scheduler_Patterns_Arr_Rel_Insert_Input = {
  data: Array<Scheduler_Patterns_Insert_Input>;
  on_conflict?: Maybe<Scheduler_Patterns_On_Conflict>;
};

/** Boolean expression to filter rows from the table "scheduler_patterns". All fields are combined with a logical 'AND'. */
export type Scheduler_Patterns_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Scheduler_Patterns_Bool_Exp>>>;
  _not?: Maybe<Scheduler_Patterns_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Scheduler_Patterns_Bool_Exp>>>;
  all_day?: Maybe<Boolean_Comparison_Exp>;
  brand?: Maybe<Brands_Bool_Exp>;
  brand_id?: Maybe<String_Comparison_Exp>;
  center?: Maybe<Centers_Bool_Exp>;
  center_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  end_time?: Maybe<Timestamptz_Comparison_Exp>;
  latest_released_at?: Maybe<Timestamptz_Comparison_Exp>;
  meta_data?: Maybe<Jsonb_Comparison_Exp>;
  owner?: Maybe<String_Comparison_Exp>;
  repeat_option_data?: Maybe<Jsonb_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  scheduler_items?: Maybe<Scheduler_Items_Bool_Exp>;
  scheduler_pattern?: Maybe<Scheduler_Patterns_Bool_Exp>;
  scheduler_pattern_id?: Maybe<String_Comparison_Exp>;
  scheduler_pattern_parent_id?: Maybe<String_Comparison_Exp>;
  scheduler_patterns?: Maybe<Scheduler_Patterns_Bool_Exp>;
  scheduler_type?: Maybe<String_Comparison_Exp>;
  start_time?: Maybe<Timestamptz_Comparison_Exp>;
  time_zone?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "scheduler_patterns" */
export enum Scheduler_Patterns_Constraint {
  /** unique or primary key constraint */
  SchedulerPatternsPk = 'scheduler_patterns_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Scheduler_Patterns_Delete_At_Path_Input = {
  meta_data?: Maybe<Array<Maybe<Scalars['String']>>>;
  repeat_option_data?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Scheduler_Patterns_Delete_Elem_Input = {
  meta_data?: Maybe<Scalars['Int']>;
  repeat_option_data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Scheduler_Patterns_Delete_Key_Input = {
  meta_data?: Maybe<Scalars['String']>;
  repeat_option_data?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "scheduler_patterns" */
export type Scheduler_Patterns_Insert_Input = {
  all_day?: Maybe<Scalars['Boolean']>;
  brand?: Maybe<Brands_Obj_Rel_Insert_Input>;
  brand_id?: Maybe<Scalars['String']>;
  center?: Maybe<Centers_Obj_Rel_Insert_Input>;
  center_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  latest_released_at?: Maybe<Scalars['timestamptz']>;
  meta_data?: Maybe<Scalars['jsonb']>;
  owner?: Maybe<Scalars['String']>;
  repeat_option_data?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduler_items?: Maybe<Scheduler_Items_Arr_Rel_Insert_Input>;
  scheduler_pattern?: Maybe<Scheduler_Patterns_Obj_Rel_Insert_Input>;
  scheduler_pattern_id?: Maybe<Scalars['String']>;
  scheduler_pattern_parent_id?: Maybe<Scalars['String']>;
  scheduler_patterns?: Maybe<Scheduler_Patterns_Arr_Rel_Insert_Input>;
  scheduler_type?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  time_zone?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Scheduler_Patterns_Max_Fields = {
  brand_id?: Maybe<Scalars['String']>;
  center_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  latest_released_at?: Maybe<Scalars['timestamptz']>;
  owner?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduler_pattern_id?: Maybe<Scalars['String']>;
  scheduler_pattern_parent_id?: Maybe<Scalars['String']>;
  scheduler_type?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  time_zone?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "scheduler_patterns" */
export type Scheduler_Patterns_Max_Order_By = {
  brand_id?: Maybe<Order_By>;
  center_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_time?: Maybe<Order_By>;
  latest_released_at?: Maybe<Order_By>;
  owner?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  scheduler_pattern_id?: Maybe<Order_By>;
  scheduler_pattern_parent_id?: Maybe<Order_By>;
  scheduler_type?: Maybe<Order_By>;
  start_time?: Maybe<Order_By>;
  time_zone?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Scheduler_Patterns_Min_Fields = {
  brand_id?: Maybe<Scalars['String']>;
  center_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  latest_released_at?: Maybe<Scalars['timestamptz']>;
  owner?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduler_pattern_id?: Maybe<Scalars['String']>;
  scheduler_pattern_parent_id?: Maybe<Scalars['String']>;
  scheduler_type?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  time_zone?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "scheduler_patterns" */
export type Scheduler_Patterns_Min_Order_By = {
  brand_id?: Maybe<Order_By>;
  center_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_time?: Maybe<Order_By>;
  latest_released_at?: Maybe<Order_By>;
  owner?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  scheduler_pattern_id?: Maybe<Order_By>;
  scheduler_pattern_parent_id?: Maybe<Order_By>;
  scheduler_type?: Maybe<Order_By>;
  start_time?: Maybe<Order_By>;
  time_zone?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "scheduler_patterns" */
export type Scheduler_Patterns_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Scheduler_Patterns>;
};

/** input type for inserting object relation for remote table "scheduler_patterns" */
export type Scheduler_Patterns_Obj_Rel_Insert_Input = {
  data: Scheduler_Patterns_Insert_Input;
  on_conflict?: Maybe<Scheduler_Patterns_On_Conflict>;
};

/** on conflict condition type for table "scheduler_patterns" */
export type Scheduler_Patterns_On_Conflict = {
  constraint: Scheduler_Patterns_Constraint;
  update_columns: Array<Scheduler_Patterns_Update_Column>;
  where?: Maybe<Scheduler_Patterns_Bool_Exp>;
};

/** ordering options when selecting data from "scheduler_patterns" */
export type Scheduler_Patterns_Order_By = {
  all_day?: Maybe<Order_By>;
  brand?: Maybe<Brands_Order_By>;
  brand_id?: Maybe<Order_By>;
  center?: Maybe<Centers_Order_By>;
  center_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_time?: Maybe<Order_By>;
  latest_released_at?: Maybe<Order_By>;
  meta_data?: Maybe<Order_By>;
  owner?: Maybe<Order_By>;
  repeat_option_data?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  scheduler_items_aggregate?: Maybe<Scheduler_Items_Aggregate_Order_By>;
  scheduler_pattern?: Maybe<Scheduler_Patterns_Order_By>;
  scheduler_pattern_id?: Maybe<Order_By>;
  scheduler_pattern_parent_id?: Maybe<Order_By>;
  scheduler_patterns_aggregate?: Maybe<Scheduler_Patterns_Aggregate_Order_By>;
  scheduler_type?: Maybe<Order_By>;
  start_time?: Maybe<Order_By>;
  time_zone?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "scheduler_patterns" */
export type Scheduler_Patterns_Pk_Columns_Input = {
  scheduler_pattern_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Scheduler_Patterns_Prepend_Input = {
  meta_data?: Maybe<Scalars['jsonb']>;
  repeat_option_data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "scheduler_patterns" */
export enum Scheduler_Patterns_Select_Column {
  /** column name */
  AllDay = 'all_day',
  /** column name */
  BrandId = 'brand_id',
  /** column name */
  CenterId = 'center_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndTime = 'end_time',
  /** column name */
  LatestReleasedAt = 'latest_released_at',
  /** column name */
  MetaData = 'meta_data',
  /** column name */
  Owner = 'owner',
  /** column name */
  RepeatOptionData = 'repeat_option_data',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchedulerPatternId = 'scheduler_pattern_id',
  /** column name */
  SchedulerPatternParentId = 'scheduler_pattern_parent_id',
  /** column name */
  SchedulerType = 'scheduler_type',
  /** column name */
  StartTime = 'start_time',
  /** column name */
  TimeZone = 'time_zone',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "scheduler_patterns" */
export type Scheduler_Patterns_Set_Input = {
  all_day?: Maybe<Scalars['Boolean']>;
  brand_id?: Maybe<Scalars['String']>;
  center_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  latest_released_at?: Maybe<Scalars['timestamptz']>;
  meta_data?: Maybe<Scalars['jsonb']>;
  owner?: Maybe<Scalars['String']>;
  repeat_option_data?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduler_pattern_id?: Maybe<Scalars['String']>;
  scheduler_pattern_parent_id?: Maybe<Scalars['String']>;
  scheduler_type?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  time_zone?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "scheduler_patterns" */
export enum Scheduler_Patterns_Update_Column {
  /** column name */
  AllDay = 'all_day',
  /** column name */
  BrandId = 'brand_id',
  /** column name */
  CenterId = 'center_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndTime = 'end_time',
  /** column name */
  LatestReleasedAt = 'latest_released_at',
  /** column name */
  MetaData = 'meta_data',
  /** column name */
  Owner = 'owner',
  /** column name */
  RepeatOptionData = 'repeat_option_data',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchedulerPatternId = 'scheduler_pattern_id',
  /** column name */
  SchedulerPatternParentId = 'scheduler_pattern_parent_id',
  /** column name */
  SchedulerType = 'scheduler_type',
  /** column name */
  StartTime = 'start_time',
  /** column name */
  TimeZone = 'time_zone',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "schema_migrations" */
export type Schema_Migrations = {
  deleted_at?: Maybe<Scalars['timestamptz']>;
  dirty: Scalars['Boolean'];
  resource_path?: Maybe<Scalars['String']>;
  version: Scalars['bigint'];
};

/** aggregated selection of "schema_migrations" */
export type Schema_Migrations_Aggregate = {
  aggregate?: Maybe<Schema_Migrations_Aggregate_Fields>;
  nodes: Array<Schema_Migrations>;
};

/** aggregate fields of "schema_migrations" */
export type Schema_Migrations_Aggregate_Fields = {
  avg?: Maybe<Schema_Migrations_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Schema_Migrations_Max_Fields>;
  min?: Maybe<Schema_Migrations_Min_Fields>;
  stddev?: Maybe<Schema_Migrations_Stddev_Fields>;
  stddev_pop?: Maybe<Schema_Migrations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Schema_Migrations_Stddev_Samp_Fields>;
  sum?: Maybe<Schema_Migrations_Sum_Fields>;
  var_pop?: Maybe<Schema_Migrations_Var_Pop_Fields>;
  var_samp?: Maybe<Schema_Migrations_Var_Samp_Fields>;
  variance?: Maybe<Schema_Migrations_Variance_Fields>;
};


/** aggregate fields of "schema_migrations" */
export type Schema_Migrations_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Schema_Migrations_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "schema_migrations" */
export type Schema_Migrations_Aggregate_Order_By = {
  avg?: Maybe<Schema_Migrations_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Schema_Migrations_Max_Order_By>;
  min?: Maybe<Schema_Migrations_Min_Order_By>;
  stddev?: Maybe<Schema_Migrations_Stddev_Order_By>;
  stddev_pop?: Maybe<Schema_Migrations_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Schema_Migrations_Stddev_Samp_Order_By>;
  sum?: Maybe<Schema_Migrations_Sum_Order_By>;
  var_pop?: Maybe<Schema_Migrations_Var_Pop_Order_By>;
  var_samp?: Maybe<Schema_Migrations_Var_Samp_Order_By>;
  variance?: Maybe<Schema_Migrations_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "schema_migrations" */
export type Schema_Migrations_Arr_Rel_Insert_Input = {
  data: Array<Schema_Migrations_Insert_Input>;
  on_conflict?: Maybe<Schema_Migrations_On_Conflict>;
};

/** aggregate avg on columns */
export type Schema_Migrations_Avg_Fields = {
  version?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "schema_migrations" */
export type Schema_Migrations_Avg_Order_By = {
  version?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "schema_migrations". All fields are combined with a logical 'AND'. */
export type Schema_Migrations_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Schema_Migrations_Bool_Exp>>>;
  _not?: Maybe<Schema_Migrations_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Schema_Migrations_Bool_Exp>>>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  dirty?: Maybe<Boolean_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  version?: Maybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "schema_migrations" */
export enum Schema_Migrations_Constraint {
  /** unique or primary key constraint */
  SchemaMigrationsPkey = 'schema_migrations_pkey'
}

/** input type for incrementing integer column in table "schema_migrations" */
export type Schema_Migrations_Inc_Input = {
  version?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "schema_migrations" */
export type Schema_Migrations_Insert_Input = {
  deleted_at?: Maybe<Scalars['timestamptz']>;
  dirty?: Maybe<Scalars['Boolean']>;
  resource_path?: Maybe<Scalars['String']>;
  version?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type Schema_Migrations_Max_Fields = {
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  version?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "schema_migrations" */
export type Schema_Migrations_Max_Order_By = {
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  version?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Schema_Migrations_Min_Fields = {
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  version?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "schema_migrations" */
export type Schema_Migrations_Min_Order_By = {
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  version?: Maybe<Order_By>;
};

/** response of any mutation on the table "schema_migrations" */
export type Schema_Migrations_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Schema_Migrations>;
};

/** input type for inserting object relation for remote table "schema_migrations" */
export type Schema_Migrations_Obj_Rel_Insert_Input = {
  data: Schema_Migrations_Insert_Input;
  on_conflict?: Maybe<Schema_Migrations_On_Conflict>;
};

/** on conflict condition type for table "schema_migrations" */
export type Schema_Migrations_On_Conflict = {
  constraint: Schema_Migrations_Constraint;
  update_columns: Array<Schema_Migrations_Update_Column>;
  where?: Maybe<Schema_Migrations_Bool_Exp>;
};

/** ordering options when selecting data from "schema_migrations" */
export type Schema_Migrations_Order_By = {
  deleted_at?: Maybe<Order_By>;
  dirty?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  version?: Maybe<Order_By>;
};

/** primary key columns input for table: "schema_migrations" */
export type Schema_Migrations_Pk_Columns_Input = {
  version: Scalars['bigint'];
};

/** select columns of table "schema_migrations" */
export enum Schema_Migrations_Select_Column {
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Dirty = 'dirty',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Version = 'version'
}

/** input type for updating data in table "schema_migrations" */
export type Schema_Migrations_Set_Input = {
  deleted_at?: Maybe<Scalars['timestamptz']>;
  dirty?: Maybe<Scalars['Boolean']>;
  resource_path?: Maybe<Scalars['String']>;
  version?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type Schema_Migrations_Stddev_Fields = {
  version?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "schema_migrations" */
export type Schema_Migrations_Stddev_Order_By = {
  version?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Schema_Migrations_Stddev_Pop_Fields = {
  version?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "schema_migrations" */
export type Schema_Migrations_Stddev_Pop_Order_By = {
  version?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Schema_Migrations_Stddev_Samp_Fields = {
  version?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "schema_migrations" */
export type Schema_Migrations_Stddev_Samp_Order_By = {
  version?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Schema_Migrations_Sum_Fields = {
  version?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "schema_migrations" */
export type Schema_Migrations_Sum_Order_By = {
  version?: Maybe<Order_By>;
};

/** update columns of table "schema_migrations" */
export enum Schema_Migrations_Update_Column {
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Dirty = 'dirty',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Version = 'version'
}

/** aggregate var_pop on columns */
export type Schema_Migrations_Var_Pop_Fields = {
  version?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "schema_migrations" */
export type Schema_Migrations_Var_Pop_Order_By = {
  version?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Schema_Migrations_Var_Samp_Fields = {
  version?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "schema_migrations" */
export type Schema_Migrations_Var_Samp_Order_By = {
  version?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Schema_Migrations_Variance_Fields = {
  version?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "schema_migrations" */
export type Schema_Migrations_Variance_Order_By = {
  version?: Maybe<Order_By>;
};

/** columns and relationships of "school_admins" */
export type School_Admins = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_admin_id: Scalars['String'];
  school_id: Scalars['Int'];
  /** An object relationship */
  schools?: Maybe<Schools>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  users?: Maybe<Users>;
};

/** aggregated selection of "school_admins" */
export type School_Admins_Aggregate = {
  aggregate?: Maybe<School_Admins_Aggregate_Fields>;
  nodes: Array<School_Admins>;
};

/** aggregate fields of "school_admins" */
export type School_Admins_Aggregate_Fields = {
  avg?: Maybe<School_Admins_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<School_Admins_Max_Fields>;
  min?: Maybe<School_Admins_Min_Fields>;
  stddev?: Maybe<School_Admins_Stddev_Fields>;
  stddev_pop?: Maybe<School_Admins_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<School_Admins_Stddev_Samp_Fields>;
  sum?: Maybe<School_Admins_Sum_Fields>;
  var_pop?: Maybe<School_Admins_Var_Pop_Fields>;
  var_samp?: Maybe<School_Admins_Var_Samp_Fields>;
  variance?: Maybe<School_Admins_Variance_Fields>;
};


/** aggregate fields of "school_admins" */
export type School_Admins_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<School_Admins_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "school_admins" */
export type School_Admins_Aggregate_Order_By = {
  avg?: Maybe<School_Admins_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<School_Admins_Max_Order_By>;
  min?: Maybe<School_Admins_Min_Order_By>;
  stddev?: Maybe<School_Admins_Stddev_Order_By>;
  stddev_pop?: Maybe<School_Admins_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<School_Admins_Stddev_Samp_Order_By>;
  sum?: Maybe<School_Admins_Sum_Order_By>;
  var_pop?: Maybe<School_Admins_Var_Pop_Order_By>;
  var_samp?: Maybe<School_Admins_Var_Samp_Order_By>;
  variance?: Maybe<School_Admins_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "school_admins" */
export type School_Admins_Arr_Rel_Insert_Input = {
  data: Array<School_Admins_Insert_Input>;
  on_conflict?: Maybe<School_Admins_On_Conflict>;
};

/** aggregate avg on columns */
export type School_Admins_Avg_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "school_admins" */
export type School_Admins_Avg_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "school_admins". All fields are combined with a logical 'AND'. */
export type School_Admins_Bool_Exp = {
  _and?: Maybe<Array<Maybe<School_Admins_Bool_Exp>>>;
  _not?: Maybe<School_Admins_Bool_Exp>;
  _or?: Maybe<Array<Maybe<School_Admins_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  school_admin_id?: Maybe<String_Comparison_Exp>;
  school_id?: Maybe<Int_Comparison_Exp>;
  schools?: Maybe<Schools_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  users?: Maybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "school_admins" */
export enum School_Admins_Constraint {
  /** unique or primary key constraint */
  SchoolAdminsPk = 'school_admins_pk'
}

/** input type for incrementing integer column in table "school_admins" */
export type School_Admins_Inc_Input = {
  school_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "school_admins" */
export type School_Admins_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_admin_id?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  schools?: Maybe<Schools_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  users?: Maybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type School_Admins_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_admin_id?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "school_admins" */
export type School_Admins_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_admin_id?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type School_Admins_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_admin_id?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "school_admins" */
export type School_Admins_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_admin_id?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "school_admins" */
export type School_Admins_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<School_Admins>;
};

/** input type for inserting object relation for remote table "school_admins" */
export type School_Admins_Obj_Rel_Insert_Input = {
  data: School_Admins_Insert_Input;
  on_conflict?: Maybe<School_Admins_On_Conflict>;
};

/** on conflict condition type for table "school_admins" */
export type School_Admins_On_Conflict = {
  constraint: School_Admins_Constraint;
  update_columns: Array<School_Admins_Update_Column>;
  where?: Maybe<School_Admins_Bool_Exp>;
};

/** ordering options when selecting data from "school_admins" */
export type School_Admins_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_admin_id?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  schools?: Maybe<Schools_Order_By>;
  updated_at?: Maybe<Order_By>;
  users?: Maybe<Users_Order_By>;
};

/** primary key columns input for table: "school_admins" */
export type School_Admins_Pk_Columns_Input = {
  school_admin_id: Scalars['String'];
};

/** select columns of table "school_admins" */
export enum School_Admins_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolAdminId = 'school_admin_id',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "school_admins" */
export type School_Admins_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_admin_id?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type School_Admins_Stddev_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "school_admins" */
export type School_Admins_Stddev_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type School_Admins_Stddev_Pop_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "school_admins" */
export type School_Admins_Stddev_Pop_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type School_Admins_Stddev_Samp_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "school_admins" */
export type School_Admins_Stddev_Samp_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type School_Admins_Sum_Fields = {
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "school_admins" */
export type School_Admins_Sum_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** update columns of table "school_admins" */
export enum School_Admins_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolAdminId = 'school_admin_id',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type School_Admins_Var_Pop_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "school_admins" */
export type School_Admins_Var_Pop_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type School_Admins_Var_Samp_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "school_admins" */
export type School_Admins_Var_Samp_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type School_Admins_Variance_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "school_admins" */
export type School_Admins_Variance_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** columns and relationships of "school_configs" */
export type School_Configs = {
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  plan_duration?: Maybe<Scalars['smallint']>;
  plan_expired_at?: Maybe<Scalars['timestamptz']>;
  plan_id: Scalars['String'];
  privileges?: Maybe<Scalars['_text']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  school: Schools;
  school_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "school_configs" */
export type School_Configs_Aggregate = {
  aggregate?: Maybe<School_Configs_Aggregate_Fields>;
  nodes: Array<School_Configs>;
};

/** aggregate fields of "school_configs" */
export type School_Configs_Aggregate_Fields = {
  avg?: Maybe<School_Configs_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<School_Configs_Max_Fields>;
  min?: Maybe<School_Configs_Min_Fields>;
  stddev?: Maybe<School_Configs_Stddev_Fields>;
  stddev_pop?: Maybe<School_Configs_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<School_Configs_Stddev_Samp_Fields>;
  sum?: Maybe<School_Configs_Sum_Fields>;
  var_pop?: Maybe<School_Configs_Var_Pop_Fields>;
  var_samp?: Maybe<School_Configs_Var_Samp_Fields>;
  variance?: Maybe<School_Configs_Variance_Fields>;
};


/** aggregate fields of "school_configs" */
export type School_Configs_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<School_Configs_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "school_configs" */
export type School_Configs_Aggregate_Order_By = {
  avg?: Maybe<School_Configs_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<School_Configs_Max_Order_By>;
  min?: Maybe<School_Configs_Min_Order_By>;
  stddev?: Maybe<School_Configs_Stddev_Order_By>;
  stddev_pop?: Maybe<School_Configs_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<School_Configs_Stddev_Samp_Order_By>;
  sum?: Maybe<School_Configs_Sum_Order_By>;
  var_pop?: Maybe<School_Configs_Var_Pop_Order_By>;
  var_samp?: Maybe<School_Configs_Var_Samp_Order_By>;
  variance?: Maybe<School_Configs_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "school_configs" */
export type School_Configs_Arr_Rel_Insert_Input = {
  data: Array<School_Configs_Insert_Input>;
  on_conflict?: Maybe<School_Configs_On_Conflict>;
};

/** aggregate avg on columns */
export type School_Configs_Avg_Fields = {
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "school_configs" */
export type School_Configs_Avg_Order_By = {
  plan_duration?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "school_configs". All fields are combined with a logical 'AND'. */
export type School_Configs_Bool_Exp = {
  _and?: Maybe<Array<Maybe<School_Configs_Bool_Exp>>>;
  _not?: Maybe<School_Configs_Bool_Exp>;
  _or?: Maybe<Array<Maybe<School_Configs_Bool_Exp>>>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  plan_duration?: Maybe<Smallint_Comparison_Exp>;
  plan_expired_at?: Maybe<Timestamptz_Comparison_Exp>;
  plan_id?: Maybe<String_Comparison_Exp>;
  privileges?: Maybe<_Text_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  school?: Maybe<Schools_Bool_Exp>;
  school_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "school_configs" */
export enum School_Configs_Constraint {
  /** unique or primary key constraint */
  SchoolConfigsPk = 'school_configs_pk'
}

/** input type for incrementing integer column in table "school_configs" */
export type School_Configs_Inc_Input = {
  plan_duration?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "school_configs" */
export type School_Configs_Insert_Input = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  plan_duration?: Maybe<Scalars['smallint']>;
  plan_expired_at?: Maybe<Scalars['timestamptz']>;
  plan_id?: Maybe<Scalars['String']>;
  privileges?: Maybe<Scalars['_text']>;
  resource_path?: Maybe<Scalars['String']>;
  school?: Maybe<Schools_Obj_Rel_Insert_Input>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type School_Configs_Max_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  plan_duration?: Maybe<Scalars['smallint']>;
  plan_expired_at?: Maybe<Scalars['timestamptz']>;
  plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "school_configs" */
export type School_Configs_Max_Order_By = {
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  plan_duration?: Maybe<Order_By>;
  plan_expired_at?: Maybe<Order_By>;
  plan_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type School_Configs_Min_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  plan_duration?: Maybe<Scalars['smallint']>;
  plan_expired_at?: Maybe<Scalars['timestamptz']>;
  plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "school_configs" */
export type School_Configs_Min_Order_By = {
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  plan_duration?: Maybe<Order_By>;
  plan_expired_at?: Maybe<Order_By>;
  plan_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "school_configs" */
export type School_Configs_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<School_Configs>;
};

/** input type for inserting object relation for remote table "school_configs" */
export type School_Configs_Obj_Rel_Insert_Input = {
  data: School_Configs_Insert_Input;
  on_conflict?: Maybe<School_Configs_On_Conflict>;
};

/** on conflict condition type for table "school_configs" */
export type School_Configs_On_Conflict = {
  constraint: School_Configs_Constraint;
  update_columns: Array<School_Configs_Update_Column>;
  where?: Maybe<School_Configs_Bool_Exp>;
};

/** ordering options when selecting data from "school_configs" */
export type School_Configs_Order_By = {
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  plan_duration?: Maybe<Order_By>;
  plan_expired_at?: Maybe<Order_By>;
  plan_id?: Maybe<Order_By>;
  privileges?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school?: Maybe<Schools_Order_By>;
  school_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "school_configs" */
export type School_Configs_Pk_Columns_Input = {
  school_id: Scalars['Int'];
};

/** select columns of table "school_configs" */
export enum School_Configs_Select_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  PlanDuration = 'plan_duration',
  /** column name */
  PlanExpiredAt = 'plan_expired_at',
  /** column name */
  PlanId = 'plan_id',
  /** column name */
  Privileges = 'privileges',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "school_configs" */
export type School_Configs_Set_Input = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  plan_duration?: Maybe<Scalars['smallint']>;
  plan_expired_at?: Maybe<Scalars['timestamptz']>;
  plan_id?: Maybe<Scalars['String']>;
  privileges?: Maybe<Scalars['_text']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type School_Configs_Stddev_Fields = {
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "school_configs" */
export type School_Configs_Stddev_Order_By = {
  plan_duration?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type School_Configs_Stddev_Pop_Fields = {
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "school_configs" */
export type School_Configs_Stddev_Pop_Order_By = {
  plan_duration?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type School_Configs_Stddev_Samp_Fields = {
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "school_configs" */
export type School_Configs_Stddev_Samp_Order_By = {
  plan_duration?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type School_Configs_Sum_Fields = {
  plan_duration?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "school_configs" */
export type School_Configs_Sum_Order_By = {
  plan_duration?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** update columns of table "school_configs" */
export enum School_Configs_Update_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  PlanDuration = 'plan_duration',
  /** column name */
  PlanExpiredAt = 'plan_expired_at',
  /** column name */
  PlanId = 'plan_id',
  /** column name */
  Privileges = 'privileges',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type School_Configs_Var_Pop_Fields = {
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "school_configs" */
export type School_Configs_Var_Pop_Order_By = {
  plan_duration?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type School_Configs_Var_Samp_Fields = {
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "school_configs" */
export type School_Configs_Var_Samp_Order_By = {
  plan_duration?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type School_Configs_Variance_Fields = {
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "school_configs" */
export type School_Configs_Variance_Order_By = {
  plan_duration?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** columns and relationships of "schools" */
export type Schools = {
  /** An array relationship */
  books: Array<Books>;
  /** An aggregated array relationship */
  books_aggregate: Books_Aggregate;
  /** An array relationship */
  chapters: Array<Chapters>;
  /** An aggregated array relationship */
  chapters_aggregate: Chapters_Aggregate;
  /** An object relationship */
  city: Cities;
  city_id: Scalars['Int'];
  /** An array relationship */
  classes: Array<Classes>;
  /** An aggregated array relationship */
  classes_aggregate: Classes_Aggregate;
  country: Scalars['String'];
  /** An array relationship */
  courses: Array<Courses>;
  /** An aggregated array relationship */
  courses_aggregate: Courses_Aggregate;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  district: Districts;
  district_id: Scalars['Int'];
  /** An array relationship */
  info_notifications: Array<Info_Notifications>;
  /** An aggregated array relationship */
  info_notifications_aggregate: Info_Notifications_Aggregate;
  is_merge?: Maybe<Scalars['Boolean']>;
  is_system_school: Scalars['Boolean'];
  /** An array relationship */
  learning_objectives: Array<Learning_Objectives>;
  /** An aggregated array relationship */
  learning_objectives_aggregate: Learning_Objectives_Aggregate;
  name: Scalars['String'];
  /** An array relationship */
  partner_form_configs: Array<Partner_Form_Configs>;
  /** An aggregated array relationship */
  partner_form_configs_aggregate: Partner_Form_Configs_Aggregate;
  phone_number?: Maybe<Scalars['String']>;
  point?: Maybe<Scalars['point']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An array relationship */
  school_configs: Array<School_Configs>;
  /** An aggregated array relationship */
  school_configs_aggregate: School_Configs_Aggregate;
  school_id: Scalars['Int'];
  /** An array relationship */
  students: Array<Students>;
  /** An aggregated array relationship */
  students_aggregate: Students_Aggregate;
  /** An array relationship */
  topics: Array<Topics>;
  /** An aggregated array relationship */
  topics_aggregate: Topics_Aggregate;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "schools" */
export type SchoolsBooksArgs = {
  distinct_on?: Maybe<Array<Books_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Books_Order_By>>;
  where?: Maybe<Books_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsBooks_AggregateArgs = {
  distinct_on?: Maybe<Array<Books_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Books_Order_By>>;
  where?: Maybe<Books_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsChaptersArgs = {
  distinct_on?: Maybe<Array<Chapters_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chapters_Order_By>>;
  where?: Maybe<Chapters_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsChapters_AggregateArgs = {
  distinct_on?: Maybe<Array<Chapters_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chapters_Order_By>>;
  where?: Maybe<Chapters_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsClassesArgs = {
  distinct_on?: Maybe<Array<Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Classes_Order_By>>;
  where?: Maybe<Classes_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsClasses_AggregateArgs = {
  distinct_on?: Maybe<Array<Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Classes_Order_By>>;
  where?: Maybe<Classes_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsCoursesArgs = {
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsCourses_AggregateArgs = {
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsInfo_NotificationsArgs = {
  distinct_on?: Maybe<Array<Info_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Info_Notifications_Order_By>>;
  where?: Maybe<Info_Notifications_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsInfo_Notifications_AggregateArgs = {
  distinct_on?: Maybe<Array<Info_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Info_Notifications_Order_By>>;
  where?: Maybe<Info_Notifications_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsLearning_ObjectivesArgs = {
  distinct_on?: Maybe<Array<Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Learning_Objectives_Order_By>>;
  where?: Maybe<Learning_Objectives_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsLearning_Objectives_AggregateArgs = {
  distinct_on?: Maybe<Array<Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Learning_Objectives_Order_By>>;
  where?: Maybe<Learning_Objectives_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsPartner_Form_ConfigsArgs = {
  distinct_on?: Maybe<Array<Partner_Form_Configs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Partner_Form_Configs_Order_By>>;
  where?: Maybe<Partner_Form_Configs_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsPartner_Form_Configs_AggregateArgs = {
  distinct_on?: Maybe<Array<Partner_Form_Configs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Partner_Form_Configs_Order_By>>;
  where?: Maybe<Partner_Form_Configs_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsSchool_ConfigsArgs = {
  distinct_on?: Maybe<Array<School_Configs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<School_Configs_Order_By>>;
  where?: Maybe<School_Configs_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsSchool_Configs_AggregateArgs = {
  distinct_on?: Maybe<Array<School_Configs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<School_Configs_Order_By>>;
  where?: Maybe<School_Configs_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsStudentsArgs = {
  distinct_on?: Maybe<Array<Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Order_By>>;
  where?: Maybe<Students_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsStudents_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Order_By>>;
  where?: Maybe<Students_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsTopicsArgs = {
  distinct_on?: Maybe<Array<Topics_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Topics_Order_By>>;
  where?: Maybe<Topics_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsTopics_AggregateArgs = {
  distinct_on?: Maybe<Array<Topics_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Topics_Order_By>>;
  where?: Maybe<Topics_Bool_Exp>;
};

/** aggregated selection of "schools" */
export type Schools_Aggregate = {
  aggregate?: Maybe<Schools_Aggregate_Fields>;
  nodes: Array<Schools>;
};

/** aggregate fields of "schools" */
export type Schools_Aggregate_Fields = {
  avg?: Maybe<Schools_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Schools_Max_Fields>;
  min?: Maybe<Schools_Min_Fields>;
  stddev?: Maybe<Schools_Stddev_Fields>;
  stddev_pop?: Maybe<Schools_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Schools_Stddev_Samp_Fields>;
  sum?: Maybe<Schools_Sum_Fields>;
  var_pop?: Maybe<Schools_Var_Pop_Fields>;
  var_samp?: Maybe<Schools_Var_Samp_Fields>;
  variance?: Maybe<Schools_Variance_Fields>;
};


/** aggregate fields of "schools" */
export type Schools_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Schools_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "schools" */
export type Schools_Aggregate_Order_By = {
  avg?: Maybe<Schools_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Schools_Max_Order_By>;
  min?: Maybe<Schools_Min_Order_By>;
  stddev?: Maybe<Schools_Stddev_Order_By>;
  stddev_pop?: Maybe<Schools_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Schools_Stddev_Samp_Order_By>;
  sum?: Maybe<Schools_Sum_Order_By>;
  var_pop?: Maybe<Schools_Var_Pop_Order_By>;
  var_samp?: Maybe<Schools_Var_Samp_Order_By>;
  variance?: Maybe<Schools_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "schools" */
export type Schools_Arr_Rel_Insert_Input = {
  data: Array<Schools_Insert_Input>;
  on_conflict?: Maybe<Schools_On_Conflict>;
};

/** aggregate avg on columns */
export type Schools_Avg_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "schools" */
export type Schools_Avg_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "schools". All fields are combined with a logical 'AND'. */
export type Schools_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Schools_Bool_Exp>>>;
  _not?: Maybe<Schools_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Schools_Bool_Exp>>>;
  books?: Maybe<Books_Bool_Exp>;
  chapters?: Maybe<Chapters_Bool_Exp>;
  city?: Maybe<Cities_Bool_Exp>;
  city_id?: Maybe<Int_Comparison_Exp>;
  classes?: Maybe<Classes_Bool_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  courses?: Maybe<Courses_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  district?: Maybe<Districts_Bool_Exp>;
  district_id?: Maybe<Int_Comparison_Exp>;
  info_notifications?: Maybe<Info_Notifications_Bool_Exp>;
  is_merge?: Maybe<Boolean_Comparison_Exp>;
  is_system_school?: Maybe<Boolean_Comparison_Exp>;
  learning_objectives?: Maybe<Learning_Objectives_Bool_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  partner_form_configs?: Maybe<Partner_Form_Configs_Bool_Exp>;
  phone_number?: Maybe<String_Comparison_Exp>;
  point?: Maybe<Point_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  school_configs?: Maybe<School_Configs_Bool_Exp>;
  school_id?: Maybe<Int_Comparison_Exp>;
  students?: Maybe<Students_Bool_Exp>;
  topics?: Maybe<Topics_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "schools" */
export enum Schools_Constraint {
  /** unique or primary key constraint */
  SchoolPk = 'school_pk',
  /** unique or primary key constraint */
  SchoolUn = 'school_un'
}

/** input type for incrementing integer column in table "schools" */
export type Schools_Inc_Input = {
  city_id?: Maybe<Scalars['Int']>;
  district_id?: Maybe<Scalars['Int']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "schools" */
export type Schools_Insert_Input = {
  books?: Maybe<Books_Arr_Rel_Insert_Input>;
  chapters?: Maybe<Chapters_Arr_Rel_Insert_Input>;
  city?: Maybe<Cities_Obj_Rel_Insert_Input>;
  city_id?: Maybe<Scalars['Int']>;
  classes?: Maybe<Classes_Arr_Rel_Insert_Input>;
  country?: Maybe<Scalars['String']>;
  courses?: Maybe<Courses_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  district?: Maybe<Districts_Obj_Rel_Insert_Input>;
  district_id?: Maybe<Scalars['Int']>;
  info_notifications?: Maybe<Info_Notifications_Arr_Rel_Insert_Input>;
  is_merge?: Maybe<Scalars['Boolean']>;
  is_system_school?: Maybe<Scalars['Boolean']>;
  learning_objectives?: Maybe<Learning_Objectives_Arr_Rel_Insert_Input>;
  name?: Maybe<Scalars['String']>;
  partner_form_configs?: Maybe<Partner_Form_Configs_Arr_Rel_Insert_Input>;
  phone_number?: Maybe<Scalars['String']>;
  point?: Maybe<Scalars['point']>;
  resource_path?: Maybe<Scalars['String']>;
  school_configs?: Maybe<School_Configs_Arr_Rel_Insert_Input>;
  school_id?: Maybe<Scalars['Int']>;
  students?: Maybe<Students_Arr_Rel_Insert_Input>;
  topics?: Maybe<Topics_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Schools_Max_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  district_id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "schools" */
export type Schools_Max_Order_By = {
  city_id?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  phone_number?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Schools_Min_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  district_id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "schools" */
export type Schools_Min_Order_By = {
  city_id?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  phone_number?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "schools" */
export type Schools_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Schools>;
};

/** input type for inserting object relation for remote table "schools" */
export type Schools_Obj_Rel_Insert_Input = {
  data: Schools_Insert_Input;
  on_conflict?: Maybe<Schools_On_Conflict>;
};

/** on conflict condition type for table "schools" */
export type Schools_On_Conflict = {
  constraint: Schools_Constraint;
  update_columns: Array<Schools_Update_Column>;
  where?: Maybe<Schools_Bool_Exp>;
};

/** ordering options when selecting data from "schools" */
export type Schools_Order_By = {
  books_aggregate?: Maybe<Books_Aggregate_Order_By>;
  chapters_aggregate?: Maybe<Chapters_Aggregate_Order_By>;
  city?: Maybe<Cities_Order_By>;
  city_id?: Maybe<Order_By>;
  classes_aggregate?: Maybe<Classes_Aggregate_Order_By>;
  country?: Maybe<Order_By>;
  courses_aggregate?: Maybe<Courses_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  district?: Maybe<Districts_Order_By>;
  district_id?: Maybe<Order_By>;
  info_notifications_aggregate?: Maybe<Info_Notifications_Aggregate_Order_By>;
  is_merge?: Maybe<Order_By>;
  is_system_school?: Maybe<Order_By>;
  learning_objectives_aggregate?: Maybe<Learning_Objectives_Aggregate_Order_By>;
  name?: Maybe<Order_By>;
  partner_form_configs_aggregate?: Maybe<Partner_Form_Configs_Aggregate_Order_By>;
  phone_number?: Maybe<Order_By>;
  point?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_configs_aggregate?: Maybe<School_Configs_Aggregate_Order_By>;
  school_id?: Maybe<Order_By>;
  students_aggregate?: Maybe<Students_Aggregate_Order_By>;
  topics_aggregate?: Maybe<Topics_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "schools" */
export type Schools_Pk_Columns_Input = {
  school_id: Scalars['Int'];
};

/** select columns of table "schools" */
export enum Schools_Select_Column {
  /** column name */
  CityId = 'city_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DistrictId = 'district_id',
  /** column name */
  IsMerge = 'is_merge',
  /** column name */
  IsSystemSchool = 'is_system_school',
  /** column name */
  Name = 'name',
  /** column name */
  PhoneNumber = 'phone_number',
  /** column name */
  Point = 'point',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "schools" */
export type Schools_Set_Input = {
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  district_id?: Maybe<Scalars['Int']>;
  is_merge?: Maybe<Scalars['Boolean']>;
  is_system_school?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  point?: Maybe<Scalars['point']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Schools_Stddev_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "schools" */
export type Schools_Stddev_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Schools_Stddev_Pop_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "schools" */
export type Schools_Stddev_Pop_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Schools_Stddev_Samp_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "schools" */
export type Schools_Stddev_Samp_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Schools_Sum_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  district_id?: Maybe<Scalars['Int']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "schools" */
export type Schools_Sum_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** update columns of table "schools" */
export enum Schools_Update_Column {
  /** column name */
  CityId = 'city_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DistrictId = 'district_id',
  /** column name */
  IsMerge = 'is_merge',
  /** column name */
  IsSystemSchool = 'is_system_school',
  /** column name */
  Name = 'name',
  /** column name */
  PhoneNumber = 'phone_number',
  /** column name */
  Point = 'point',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Schools_Var_Pop_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "schools" */
export type Schools_Var_Pop_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Schools_Var_Samp_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "schools" */
export type Schools_Var_Samp_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Schools_Variance_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "schools" */
export type Schools_Variance_Order_By = {
  city_id?: Maybe<Order_By>;
  district_id?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
};

export type Search_Courses_By_Name_Args = {
  search_limit?: Maybe<Scalars['Int']>;
  search_name?: Maybe<Scalars['String']>;
  search_offset?: Maybe<Scalars['Int']>;
};

/** columns and relationships of "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  original_quiz_set_id?: Maybe<Scalars['String']>;
  original_shuffle_quiz_set_id?: Maybe<Scalars['String']>;
  quiz_external_ids?: Maybe<Scalars['_text']>;
  /** An object relationship */
  quiz_set?: Maybe<Quiz_Sets>;
  random_seed?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  session_id?: Maybe<Scalars['String']>;
  shuffled_quiz_set_id: Scalars['String'];
  status?: Maybe<Scalars['String']>;
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  study_plan_item_id?: Maybe<Scalars['String']>;
  submission_history: Scalars['jsonb'];
  total_correctness: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "shuffled_quiz_sets" */
export type Shuffled_Quiz_SetsSubmission_HistoryArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Aggregate = {
  aggregate?: Maybe<Shuffled_Quiz_Sets_Aggregate_Fields>;
  nodes: Array<Shuffled_Quiz_Sets>;
};

/** aggregate fields of "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Aggregate_Fields = {
  avg?: Maybe<Shuffled_Quiz_Sets_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Shuffled_Quiz_Sets_Max_Fields>;
  min?: Maybe<Shuffled_Quiz_Sets_Min_Fields>;
  stddev?: Maybe<Shuffled_Quiz_Sets_Stddev_Fields>;
  stddev_pop?: Maybe<Shuffled_Quiz_Sets_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Shuffled_Quiz_Sets_Stddev_Samp_Fields>;
  sum?: Maybe<Shuffled_Quiz_Sets_Sum_Fields>;
  var_pop?: Maybe<Shuffled_Quiz_Sets_Var_Pop_Fields>;
  var_samp?: Maybe<Shuffled_Quiz_Sets_Var_Samp_Fields>;
  variance?: Maybe<Shuffled_Quiz_Sets_Variance_Fields>;
};


/** aggregate fields of "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Shuffled_Quiz_Sets_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Aggregate_Order_By = {
  avg?: Maybe<Shuffled_Quiz_Sets_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Shuffled_Quiz_Sets_Max_Order_By>;
  min?: Maybe<Shuffled_Quiz_Sets_Min_Order_By>;
  stddev?: Maybe<Shuffled_Quiz_Sets_Stddev_Order_By>;
  stddev_pop?: Maybe<Shuffled_Quiz_Sets_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Shuffled_Quiz_Sets_Stddev_Samp_Order_By>;
  sum?: Maybe<Shuffled_Quiz_Sets_Sum_Order_By>;
  var_pop?: Maybe<Shuffled_Quiz_Sets_Var_Pop_Order_By>;
  var_samp?: Maybe<Shuffled_Quiz_Sets_Var_Samp_Order_By>;
  variance?: Maybe<Shuffled_Quiz_Sets_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Shuffled_Quiz_Sets_Append_Input = {
  submission_history?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Arr_Rel_Insert_Input = {
  data: Array<Shuffled_Quiz_Sets_Insert_Input>;
  on_conflict?: Maybe<Shuffled_Quiz_Sets_On_Conflict>;
};

/** aggregate avg on columns */
export type Shuffled_Quiz_Sets_Avg_Fields = {
  total_correctness?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Avg_Order_By = {
  total_correctness?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "shuffled_quiz_sets". All fields are combined with a logical 'AND'. */
export type Shuffled_Quiz_Sets_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Shuffled_Quiz_Sets_Bool_Exp>>>;
  _not?: Maybe<Shuffled_Quiz_Sets_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Shuffled_Quiz_Sets_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  original_quiz_set_id?: Maybe<String_Comparison_Exp>;
  original_shuffle_quiz_set_id?: Maybe<String_Comparison_Exp>;
  quiz_external_ids?: Maybe<_Text_Comparison_Exp>;
  quiz_set?: Maybe<Quiz_Sets_Bool_Exp>;
  random_seed?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  session_id?: Maybe<String_Comparison_Exp>;
  shuffled_quiz_set_id?: Maybe<String_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  study_plan_item_id?: Maybe<String_Comparison_Exp>;
  submission_history?: Maybe<Jsonb_Comparison_Exp>;
  total_correctness?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "shuffled_quiz_sets" */
export enum Shuffled_Quiz_Sets_Constraint {
  /** unique or primary key constraint */
  ShuffledQuizSetsPkey = 'shuffled_quiz_sets_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Shuffled_Quiz_Sets_Delete_At_Path_Input = {
  submission_history?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Shuffled_Quiz_Sets_Delete_Elem_Input = {
  submission_history?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Shuffled_Quiz_Sets_Delete_Key_Input = {
  submission_history?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Inc_Input = {
  total_correctness?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  original_quiz_set_id?: Maybe<Scalars['String']>;
  original_shuffle_quiz_set_id?: Maybe<Scalars['String']>;
  quiz_external_ids?: Maybe<Scalars['_text']>;
  quiz_set?: Maybe<Quiz_Sets_Obj_Rel_Insert_Input>;
  random_seed?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  session_id?: Maybe<Scalars['String']>;
  shuffled_quiz_set_id?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  submission_history?: Maybe<Scalars['jsonb']>;
  total_correctness?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Shuffled_Quiz_Sets_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  original_quiz_set_id?: Maybe<Scalars['String']>;
  original_shuffle_quiz_set_id?: Maybe<Scalars['String']>;
  random_seed?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  session_id?: Maybe<Scalars['String']>;
  shuffled_quiz_set_id?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  total_correctness?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  original_quiz_set_id?: Maybe<Order_By>;
  original_shuffle_quiz_set_id?: Maybe<Order_By>;
  random_seed?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  session_id?: Maybe<Order_By>;
  shuffled_quiz_set_id?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  total_correctness?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Shuffled_Quiz_Sets_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  original_quiz_set_id?: Maybe<Scalars['String']>;
  original_shuffle_quiz_set_id?: Maybe<Scalars['String']>;
  random_seed?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  session_id?: Maybe<Scalars['String']>;
  shuffled_quiz_set_id?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  total_correctness?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  original_quiz_set_id?: Maybe<Order_By>;
  original_shuffle_quiz_set_id?: Maybe<Order_By>;
  random_seed?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  session_id?: Maybe<Order_By>;
  shuffled_quiz_set_id?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  total_correctness?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Shuffled_Quiz_Sets>;
};

/** input type for inserting object relation for remote table "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Obj_Rel_Insert_Input = {
  data: Shuffled_Quiz_Sets_Insert_Input;
  on_conflict?: Maybe<Shuffled_Quiz_Sets_On_Conflict>;
};

/** on conflict condition type for table "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_On_Conflict = {
  constraint: Shuffled_Quiz_Sets_Constraint;
  update_columns: Array<Shuffled_Quiz_Sets_Update_Column>;
  where?: Maybe<Shuffled_Quiz_Sets_Bool_Exp>;
};

/** ordering options when selecting data from "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  original_quiz_set_id?: Maybe<Order_By>;
  original_shuffle_quiz_set_id?: Maybe<Order_By>;
  quiz_external_ids?: Maybe<Order_By>;
  quiz_set?: Maybe<Quiz_Sets_Order_By>;
  random_seed?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  session_id?: Maybe<Order_By>;
  shuffled_quiz_set_id?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  submission_history?: Maybe<Order_By>;
  total_correctness?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Pk_Columns_Input = {
  shuffled_quiz_set_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Shuffled_Quiz_Sets_Prepend_Input = {
  submission_history?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "shuffled_quiz_sets" */
export enum Shuffled_Quiz_Sets_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  OriginalQuizSetId = 'original_quiz_set_id',
  /** column name */
  OriginalShuffleQuizSetId = 'original_shuffle_quiz_set_id',
  /** column name */
  QuizExternalIds = 'quiz_external_ids',
  /** column name */
  RandomSeed = 'random_seed',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SessionId = 'session_id',
  /** column name */
  ShuffledQuizSetId = 'shuffled_quiz_set_id',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudyPlanItemId = 'study_plan_item_id',
  /** column name */
  SubmissionHistory = 'submission_history',
  /** column name */
  TotalCorrectness = 'total_correctness',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  original_quiz_set_id?: Maybe<Scalars['String']>;
  original_shuffle_quiz_set_id?: Maybe<Scalars['String']>;
  quiz_external_ids?: Maybe<Scalars['_text']>;
  random_seed?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  session_id?: Maybe<Scalars['String']>;
  shuffled_quiz_set_id?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  submission_history?: Maybe<Scalars['jsonb']>;
  total_correctness?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Shuffled_Quiz_Sets_Stddev_Fields = {
  total_correctness?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Stddev_Order_By = {
  total_correctness?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Shuffled_Quiz_Sets_Stddev_Pop_Fields = {
  total_correctness?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Stddev_Pop_Order_By = {
  total_correctness?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Shuffled_Quiz_Sets_Stddev_Samp_Fields = {
  total_correctness?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Stddev_Samp_Order_By = {
  total_correctness?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Shuffled_Quiz_Sets_Sum_Fields = {
  total_correctness?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Sum_Order_By = {
  total_correctness?: Maybe<Order_By>;
};

/** update columns of table "shuffled_quiz_sets" */
export enum Shuffled_Quiz_Sets_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  OriginalQuizSetId = 'original_quiz_set_id',
  /** column name */
  OriginalShuffleQuizSetId = 'original_shuffle_quiz_set_id',
  /** column name */
  QuizExternalIds = 'quiz_external_ids',
  /** column name */
  RandomSeed = 'random_seed',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SessionId = 'session_id',
  /** column name */
  ShuffledQuizSetId = 'shuffled_quiz_set_id',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudyPlanItemId = 'study_plan_item_id',
  /** column name */
  SubmissionHistory = 'submission_history',
  /** column name */
  TotalCorrectness = 'total_correctness',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Shuffled_Quiz_Sets_Var_Pop_Fields = {
  total_correctness?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Var_Pop_Order_By = {
  total_correctness?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Shuffled_Quiz_Sets_Var_Samp_Fields = {
  total_correctness?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Var_Samp_Order_By = {
  total_correctness?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Shuffled_Quiz_Sets_Variance_Fields = {
  total_correctness?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "shuffled_quiz_sets" */
export type Shuffled_Quiz_Sets_Variance_Order_By = {
  total_correctness?: Maybe<Order_By>;
};


/** expression to compare columns of type smallint. All fields are combined with logical 'AND'. */
export type Smallint_Comparison_Exp = {
  _eq?: Maybe<Scalars['smallint']>;
  _gt?: Maybe<Scalars['smallint']>;
  _gte?: Maybe<Scalars['smallint']>;
  _in?: Maybe<Array<Scalars['smallint']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['smallint']>;
  _lte?: Maybe<Scalars['smallint']>;
  _neq?: Maybe<Scalars['smallint']>;
  _nin?: Maybe<Array<Scalars['smallint']>>;
};

/** columns and relationships of "student_assignments" */
export type Student_Assignments = {
  /** An object relationship */
  assignment: Assignments;
  assignment_id: Scalars['String'];
  assignment_status?: Maybe<Scalars['String']>;
  completed_at?: Maybe<Scalars['timestamptz']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "student_assignments" */
export type Student_Assignments_Aggregate = {
  aggregate?: Maybe<Student_Assignments_Aggregate_Fields>;
  nodes: Array<Student_Assignments>;
};

/** aggregate fields of "student_assignments" */
export type Student_Assignments_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Student_Assignments_Max_Fields>;
  min?: Maybe<Student_Assignments_Min_Fields>;
};


/** aggregate fields of "student_assignments" */
export type Student_Assignments_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Student_Assignments_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "student_assignments" */
export type Student_Assignments_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Student_Assignments_Max_Order_By>;
  min?: Maybe<Student_Assignments_Min_Order_By>;
};

/** input type for inserting array relation for remote table "student_assignments" */
export type Student_Assignments_Arr_Rel_Insert_Input = {
  data: Array<Student_Assignments_Insert_Input>;
  on_conflict?: Maybe<Student_Assignments_On_Conflict>;
};

/** Boolean expression to filter rows from the table "student_assignments". All fields are combined with a logical 'AND'. */
export type Student_Assignments_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Student_Assignments_Bool_Exp>>>;
  _not?: Maybe<Student_Assignments_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Student_Assignments_Bool_Exp>>>;
  assignment?: Maybe<Assignments_Bool_Exp>;
  assignment_id?: Maybe<String_Comparison_Exp>;
  assignment_status?: Maybe<String_Comparison_Exp>;
  completed_at?: Maybe<Timestamptz_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "student_assignments" */
export enum Student_Assignments_Constraint {
  /** unique or primary key constraint */
  StudentsAssignmentsPk = 'students_assignments_pk'
}

/** input type for inserting data into table "student_assignments" */
export type Student_Assignments_Insert_Input = {
  assignment?: Maybe<Assignments_Obj_Rel_Insert_Input>;
  assignment_id?: Maybe<Scalars['String']>;
  assignment_status?: Maybe<Scalars['String']>;
  completed_at?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Student_Assignments_Max_Fields = {
  assignment_id?: Maybe<Scalars['String']>;
  assignment_status?: Maybe<Scalars['String']>;
  completed_at?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "student_assignments" */
export type Student_Assignments_Max_Order_By = {
  assignment_id?: Maybe<Order_By>;
  assignment_status?: Maybe<Order_By>;
  completed_at?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Student_Assignments_Min_Fields = {
  assignment_id?: Maybe<Scalars['String']>;
  assignment_status?: Maybe<Scalars['String']>;
  completed_at?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "student_assignments" */
export type Student_Assignments_Min_Order_By = {
  assignment_id?: Maybe<Order_By>;
  assignment_status?: Maybe<Order_By>;
  completed_at?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "student_assignments" */
export type Student_Assignments_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Student_Assignments>;
};

/** input type for inserting object relation for remote table "student_assignments" */
export type Student_Assignments_Obj_Rel_Insert_Input = {
  data: Student_Assignments_Insert_Input;
  on_conflict?: Maybe<Student_Assignments_On_Conflict>;
};

/** on conflict condition type for table "student_assignments" */
export type Student_Assignments_On_Conflict = {
  constraint: Student_Assignments_Constraint;
  update_columns: Array<Student_Assignments_Update_Column>;
  where?: Maybe<Student_Assignments_Bool_Exp>;
};

/** ordering options when selecting data from "student_assignments" */
export type Student_Assignments_Order_By = {
  assignment?: Maybe<Assignments_Order_By>;
  assignment_id?: Maybe<Order_By>;
  assignment_status?: Maybe<Order_By>;
  completed_at?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "student_assignments" */
export type Student_Assignments_Pk_Columns_Input = {
  assignment_id: Scalars['String'];
  student_id: Scalars['String'];
};

/** select columns of table "student_assignments" */
export enum Student_Assignments_Select_Column {
  /** column name */
  AssignmentId = 'assignment_id',
  /** column name */
  AssignmentStatus = 'assignment_status',
  /** column name */
  CompletedAt = 'completed_at',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "student_assignments" */
export type Student_Assignments_Set_Input = {
  assignment_id?: Maybe<Scalars['String']>;
  assignment_status?: Maybe<Scalars['String']>;
  completed_at?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "student_assignments" */
export enum Student_Assignments_Update_Column {
  /** column name */
  AssignmentId = 'assignment_id',
  /** column name */
  AssignmentStatus = 'assignment_status',
  /** column name */
  CompletedAt = 'completed_at',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "student_comments" */
export type Student_Comments = {
  coach_id: Scalars['String'];
  comment_content: Scalars['String'];
  comment_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "student_comments" */
export type Student_Comments_Aggregate = {
  aggregate?: Maybe<Student_Comments_Aggregate_Fields>;
  nodes: Array<Student_Comments>;
};

/** aggregate fields of "student_comments" */
export type Student_Comments_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Student_Comments_Max_Fields>;
  min?: Maybe<Student_Comments_Min_Fields>;
};


/** aggregate fields of "student_comments" */
export type Student_Comments_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Student_Comments_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "student_comments" */
export type Student_Comments_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Student_Comments_Max_Order_By>;
  min?: Maybe<Student_Comments_Min_Order_By>;
};

/** input type for inserting array relation for remote table "student_comments" */
export type Student_Comments_Arr_Rel_Insert_Input = {
  data: Array<Student_Comments_Insert_Input>;
  on_conflict?: Maybe<Student_Comments_On_Conflict>;
};

/** Boolean expression to filter rows from the table "student_comments". All fields are combined with a logical 'AND'. */
export type Student_Comments_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Student_Comments_Bool_Exp>>>;
  _not?: Maybe<Student_Comments_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Student_Comments_Bool_Exp>>>;
  coach_id?: Maybe<String_Comparison_Exp>;
  comment_content?: Maybe<String_Comparison_Exp>;
  comment_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "student_comments" */
export enum Student_Comments_Constraint {
  /** unique or primary key constraint */
  StudentCommentsPk = 'student_comments_pk'
}

/** input type for inserting data into table "student_comments" */
export type Student_Comments_Insert_Input = {
  coach_id?: Maybe<Scalars['String']>;
  comment_content?: Maybe<Scalars['String']>;
  comment_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Student_Comments_Max_Fields = {
  coach_id?: Maybe<Scalars['String']>;
  comment_content?: Maybe<Scalars['String']>;
  comment_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "student_comments" */
export type Student_Comments_Max_Order_By = {
  coach_id?: Maybe<Order_By>;
  comment_content?: Maybe<Order_By>;
  comment_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Student_Comments_Min_Fields = {
  coach_id?: Maybe<Scalars['String']>;
  comment_content?: Maybe<Scalars['String']>;
  comment_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "student_comments" */
export type Student_Comments_Min_Order_By = {
  coach_id?: Maybe<Order_By>;
  comment_content?: Maybe<Order_By>;
  comment_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "student_comments" */
export type Student_Comments_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Student_Comments>;
};

/** input type for inserting object relation for remote table "student_comments" */
export type Student_Comments_Obj_Rel_Insert_Input = {
  data: Student_Comments_Insert_Input;
  on_conflict?: Maybe<Student_Comments_On_Conflict>;
};

/** on conflict condition type for table "student_comments" */
export type Student_Comments_On_Conflict = {
  constraint: Student_Comments_Constraint;
  update_columns: Array<Student_Comments_Update_Column>;
  where?: Maybe<Student_Comments_Bool_Exp>;
};

/** ordering options when selecting data from "student_comments" */
export type Student_Comments_Order_By = {
  coach_id?: Maybe<Order_By>;
  comment_content?: Maybe<Order_By>;
  comment_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "student_comments" */
export type Student_Comments_Pk_Columns_Input = {
  comment_id: Scalars['String'];
};

/** select columns of table "student_comments" */
export enum Student_Comments_Select_Column {
  /** column name */
  CoachId = 'coach_id',
  /** column name */
  CommentContent = 'comment_content',
  /** column name */
  CommentId = 'comment_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "student_comments" */
export type Student_Comments_Set_Input = {
  coach_id?: Maybe<Scalars['String']>;
  comment_content?: Maybe<Scalars['String']>;
  comment_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "student_comments" */
export enum Student_Comments_Update_Column {
  /** column name */
  CoachId = 'coach_id',
  /** column name */
  CommentContent = 'comment_content',
  /** column name */
  CommentId = 'comment_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "student_entryexit_records" */
export type Student_Entryexit_Records = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  entry_at: Scalars['timestamptz'];
  entryexit_id: Scalars['Int'];
  exit_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id: Scalars['String'];
  /** An object relationship */
  students: Students;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "student_entryexit_records" */
export type Student_Entryexit_Records_Aggregate = {
  aggregate?: Maybe<Student_Entryexit_Records_Aggregate_Fields>;
  nodes: Array<Student_Entryexit_Records>;
};

/** aggregate fields of "student_entryexit_records" */
export type Student_Entryexit_Records_Aggregate_Fields = {
  avg?: Maybe<Student_Entryexit_Records_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Student_Entryexit_Records_Max_Fields>;
  min?: Maybe<Student_Entryexit_Records_Min_Fields>;
  stddev?: Maybe<Student_Entryexit_Records_Stddev_Fields>;
  stddev_pop?: Maybe<Student_Entryexit_Records_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Student_Entryexit_Records_Stddev_Samp_Fields>;
  sum?: Maybe<Student_Entryexit_Records_Sum_Fields>;
  var_pop?: Maybe<Student_Entryexit_Records_Var_Pop_Fields>;
  var_samp?: Maybe<Student_Entryexit_Records_Var_Samp_Fields>;
  variance?: Maybe<Student_Entryexit_Records_Variance_Fields>;
};


/** aggregate fields of "student_entryexit_records" */
export type Student_Entryexit_Records_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Student_Entryexit_Records_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "student_entryexit_records" */
export type Student_Entryexit_Records_Aggregate_Order_By = {
  avg?: Maybe<Student_Entryexit_Records_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Student_Entryexit_Records_Max_Order_By>;
  min?: Maybe<Student_Entryexit_Records_Min_Order_By>;
  stddev?: Maybe<Student_Entryexit_Records_Stddev_Order_By>;
  stddev_pop?: Maybe<Student_Entryexit_Records_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Student_Entryexit_Records_Stddev_Samp_Order_By>;
  sum?: Maybe<Student_Entryexit_Records_Sum_Order_By>;
  var_pop?: Maybe<Student_Entryexit_Records_Var_Pop_Order_By>;
  var_samp?: Maybe<Student_Entryexit_Records_Var_Samp_Order_By>;
  variance?: Maybe<Student_Entryexit_Records_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "student_entryexit_records" */
export type Student_Entryexit_Records_Arr_Rel_Insert_Input = {
  data: Array<Student_Entryexit_Records_Insert_Input>;
  on_conflict?: Maybe<Student_Entryexit_Records_On_Conflict>;
};

/** aggregate avg on columns */
export type Student_Entryexit_Records_Avg_Fields = {
  entryexit_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Avg_Order_By = {
  entryexit_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "student_entryexit_records". All fields are combined with a logical 'AND'. */
export type Student_Entryexit_Records_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Student_Entryexit_Records_Bool_Exp>>>;
  _not?: Maybe<Student_Entryexit_Records_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Student_Entryexit_Records_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  entry_at?: Maybe<Timestamptz_Comparison_Exp>;
  entryexit_id?: Maybe<Int_Comparison_Exp>;
  exit_at?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  students?: Maybe<Students_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "student_entryexit_records" */
export enum Student_Entryexit_Records_Constraint {
  /** unique or primary key constraint */
  StudentEntryexitRecordsPk = 'student_entryexit_records_pk'
}

/** input type for incrementing integer column in table "student_entryexit_records" */
export type Student_Entryexit_Records_Inc_Input = {
  entryexit_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "student_entryexit_records" */
export type Student_Entryexit_Records_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  entry_at?: Maybe<Scalars['timestamptz']>;
  entryexit_id?: Maybe<Scalars['Int']>;
  exit_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  students?: Maybe<Students_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Student_Entryexit_Records_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  entry_at?: Maybe<Scalars['timestamptz']>;
  entryexit_id?: Maybe<Scalars['Int']>;
  exit_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  entry_at?: Maybe<Order_By>;
  entryexit_id?: Maybe<Order_By>;
  exit_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Student_Entryexit_Records_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  entry_at?: Maybe<Scalars['timestamptz']>;
  entryexit_id?: Maybe<Scalars['Int']>;
  exit_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  entry_at?: Maybe<Order_By>;
  entryexit_id?: Maybe<Order_By>;
  exit_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "student_entryexit_records" */
export type Student_Entryexit_Records_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Student_Entryexit_Records>;
};

/** input type for inserting object relation for remote table "student_entryexit_records" */
export type Student_Entryexit_Records_Obj_Rel_Insert_Input = {
  data: Student_Entryexit_Records_Insert_Input;
  on_conflict?: Maybe<Student_Entryexit_Records_On_Conflict>;
};

/** on conflict condition type for table "student_entryexit_records" */
export type Student_Entryexit_Records_On_Conflict = {
  constraint: Student_Entryexit_Records_Constraint;
  update_columns: Array<Student_Entryexit_Records_Update_Column>;
  where?: Maybe<Student_Entryexit_Records_Bool_Exp>;
};

/** ordering options when selecting data from "student_entryexit_records" */
export type Student_Entryexit_Records_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  entry_at?: Maybe<Order_By>;
  entryexit_id?: Maybe<Order_By>;
  exit_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  students?: Maybe<Students_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "student_entryexit_records" */
export type Student_Entryexit_Records_Pk_Columns_Input = {
  entryexit_id: Scalars['Int'];
};

/** select columns of table "student_entryexit_records" */
export enum Student_Entryexit_Records_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EntryAt = 'entry_at',
  /** column name */
  EntryexitId = 'entryexit_id',
  /** column name */
  ExitAt = 'exit_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "student_entryexit_records" */
export type Student_Entryexit_Records_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  entry_at?: Maybe<Scalars['timestamptz']>;
  entryexit_id?: Maybe<Scalars['Int']>;
  exit_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Student_Entryexit_Records_Stddev_Fields = {
  entryexit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Stddev_Order_By = {
  entryexit_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Student_Entryexit_Records_Stddev_Pop_Fields = {
  entryexit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Stddev_Pop_Order_By = {
  entryexit_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Student_Entryexit_Records_Stddev_Samp_Fields = {
  entryexit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Stddev_Samp_Order_By = {
  entryexit_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Student_Entryexit_Records_Sum_Fields = {
  entryexit_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Sum_Order_By = {
  entryexit_id?: Maybe<Order_By>;
};

/** update columns of table "student_entryexit_records" */
export enum Student_Entryexit_Records_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EntryAt = 'entry_at',
  /** column name */
  EntryexitId = 'entryexit_id',
  /** column name */
  ExitAt = 'exit_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Student_Entryexit_Records_Var_Pop_Fields = {
  entryexit_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Var_Pop_Order_By = {
  entryexit_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Student_Entryexit_Records_Var_Samp_Fields = {
  entryexit_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Var_Samp_Order_By = {
  entryexit_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Student_Entryexit_Records_Variance_Fields = {
  entryexit_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Variance_Order_By = {
  entryexit_id?: Maybe<Order_By>;
};

/** columns and relationships of "student_event_logs" */
export type Student_Event_Logs = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  event_id?: Maybe<Scalars['String']>;
  event_type: Scalars['String'];
  payload?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  student: Students;
  student_event_log_id: Scalars['Int'];
  student_id: Scalars['String'];
};


/** columns and relationships of "student_event_logs" */
export type Student_Event_LogsPayloadArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "student_event_logs" */
export type Student_Event_Logs_Aggregate = {
  aggregate?: Maybe<Student_Event_Logs_Aggregate_Fields>;
  nodes: Array<Student_Event_Logs>;
};

/** aggregate fields of "student_event_logs" */
export type Student_Event_Logs_Aggregate_Fields = {
  avg?: Maybe<Student_Event_Logs_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Student_Event_Logs_Max_Fields>;
  min?: Maybe<Student_Event_Logs_Min_Fields>;
  stddev?: Maybe<Student_Event_Logs_Stddev_Fields>;
  stddev_pop?: Maybe<Student_Event_Logs_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Student_Event_Logs_Stddev_Samp_Fields>;
  sum?: Maybe<Student_Event_Logs_Sum_Fields>;
  var_pop?: Maybe<Student_Event_Logs_Var_Pop_Fields>;
  var_samp?: Maybe<Student_Event_Logs_Var_Samp_Fields>;
  variance?: Maybe<Student_Event_Logs_Variance_Fields>;
};


/** aggregate fields of "student_event_logs" */
export type Student_Event_Logs_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Student_Event_Logs_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "student_event_logs" */
export type Student_Event_Logs_Aggregate_Order_By = {
  avg?: Maybe<Student_Event_Logs_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Student_Event_Logs_Max_Order_By>;
  min?: Maybe<Student_Event_Logs_Min_Order_By>;
  stddev?: Maybe<Student_Event_Logs_Stddev_Order_By>;
  stddev_pop?: Maybe<Student_Event_Logs_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Student_Event_Logs_Stddev_Samp_Order_By>;
  sum?: Maybe<Student_Event_Logs_Sum_Order_By>;
  var_pop?: Maybe<Student_Event_Logs_Var_Pop_Order_By>;
  var_samp?: Maybe<Student_Event_Logs_Var_Samp_Order_By>;
  variance?: Maybe<Student_Event_Logs_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Student_Event_Logs_Append_Input = {
  payload?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "student_event_logs" */
export type Student_Event_Logs_Arr_Rel_Insert_Input = {
  data: Array<Student_Event_Logs_Insert_Input>;
  on_conflict?: Maybe<Student_Event_Logs_On_Conflict>;
};

/** aggregate avg on columns */
export type Student_Event_Logs_Avg_Fields = {
  student_event_log_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "student_event_logs" */
export type Student_Event_Logs_Avg_Order_By = {
  student_event_log_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "student_event_logs". All fields are combined with a logical 'AND'. */
export type Student_Event_Logs_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Student_Event_Logs_Bool_Exp>>>;
  _not?: Maybe<Student_Event_Logs_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Student_Event_Logs_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  event_id?: Maybe<String_Comparison_Exp>;
  event_type?: Maybe<String_Comparison_Exp>;
  payload?: Maybe<Jsonb_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_event_log_id?: Maybe<Int_Comparison_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "student_event_logs" */
export enum Student_Event_Logs_Constraint {
  /** unique or primary key constraint */
  EventIdUn = 'event_id_un',
  /** unique or primary key constraint */
  EventLogPk = 'event_log_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Student_Event_Logs_Delete_At_Path_Input = {
  payload?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Student_Event_Logs_Delete_Elem_Input = {
  payload?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Student_Event_Logs_Delete_Key_Input = {
  payload?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "student_event_logs" */
export type Student_Event_Logs_Inc_Input = {
  student_event_log_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "student_event_logs" */
export type Student_Event_Logs_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  event_id?: Maybe<Scalars['String']>;
  event_type?: Maybe<Scalars['String']>;
  payload?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_event_log_id?: Maybe<Scalars['Int']>;
  student_id?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Student_Event_Logs_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  event_id?: Maybe<Scalars['String']>;
  event_type?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_event_log_id?: Maybe<Scalars['Int']>;
  student_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "student_event_logs" */
export type Student_Event_Logs_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  event_id?: Maybe<Order_By>;
  event_type?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_event_log_id?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Student_Event_Logs_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  event_id?: Maybe<Scalars['String']>;
  event_type?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_event_log_id?: Maybe<Scalars['Int']>;
  student_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "student_event_logs" */
export type Student_Event_Logs_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  event_id?: Maybe<Order_By>;
  event_type?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_event_log_id?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "student_event_logs" */
export type Student_Event_Logs_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Student_Event_Logs>;
};

/** input type for inserting object relation for remote table "student_event_logs" */
export type Student_Event_Logs_Obj_Rel_Insert_Input = {
  data: Student_Event_Logs_Insert_Input;
  on_conflict?: Maybe<Student_Event_Logs_On_Conflict>;
};

/** on conflict condition type for table "student_event_logs" */
export type Student_Event_Logs_On_Conflict = {
  constraint: Student_Event_Logs_Constraint;
  update_columns: Array<Student_Event_Logs_Update_Column>;
  where?: Maybe<Student_Event_Logs_Bool_Exp>;
};

/** ordering options when selecting data from "student_event_logs" */
export type Student_Event_Logs_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  event_id?: Maybe<Order_By>;
  event_type?: Maybe<Order_By>;
  payload?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_event_log_id?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
};

/** primary key columns input for table: "student_event_logs" */
export type Student_Event_Logs_Pk_Columns_Input = {
  student_event_log_id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Student_Event_Logs_Prepend_Input = {
  payload?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "student_event_logs" */
export enum Student_Event_Logs_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EventId = 'event_id',
  /** column name */
  EventType = 'event_type',
  /** column name */
  Payload = 'payload',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentEventLogId = 'student_event_log_id',
  /** column name */
  StudentId = 'student_id'
}

/** input type for updating data in table "student_event_logs" */
export type Student_Event_Logs_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  event_id?: Maybe<Scalars['String']>;
  event_type?: Maybe<Scalars['String']>;
  payload?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  student_event_log_id?: Maybe<Scalars['Int']>;
  student_id?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Student_Event_Logs_Stddev_Fields = {
  student_event_log_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "student_event_logs" */
export type Student_Event_Logs_Stddev_Order_By = {
  student_event_log_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Student_Event_Logs_Stddev_Pop_Fields = {
  student_event_log_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "student_event_logs" */
export type Student_Event_Logs_Stddev_Pop_Order_By = {
  student_event_log_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Student_Event_Logs_Stddev_Samp_Fields = {
  student_event_log_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "student_event_logs" */
export type Student_Event_Logs_Stddev_Samp_Order_By = {
  student_event_log_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Student_Event_Logs_Sum_Fields = {
  student_event_log_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "student_event_logs" */
export type Student_Event_Logs_Sum_Order_By = {
  student_event_log_id?: Maybe<Order_By>;
};

/** update columns of table "student_event_logs" */
export enum Student_Event_Logs_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EventId = 'event_id',
  /** column name */
  EventType = 'event_type',
  /** column name */
  Payload = 'payload',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentEventLogId = 'student_event_log_id',
  /** column name */
  StudentId = 'student_id'
}

/** aggregate var_pop on columns */
export type Student_Event_Logs_Var_Pop_Fields = {
  student_event_log_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "student_event_logs" */
export type Student_Event_Logs_Var_Pop_Order_By = {
  student_event_log_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Student_Event_Logs_Var_Samp_Fields = {
  student_event_log_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "student_event_logs" */
export type Student_Event_Logs_Var_Samp_Order_By = {
  student_event_log_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Student_Event_Logs_Variance_Fields = {
  student_event_log_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "student_event_logs" */
export type Student_Event_Logs_Variance_Order_By = {
  student_event_log_id?: Maybe<Order_By>;
};

/** columns and relationships of "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily = {
  created_at: Scalars['timestamptz'];
  day: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** learning time in seconds unit */
  learning_time: Scalars['Int'];
  learning_time_id: Scalars['Int'];
  resource_path?: Maybe<Scalars['String']>;
  sessions: Scalars['String'];
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Aggregate = {
  aggregate?: Maybe<Student_Learning_Time_By_Daily_Aggregate_Fields>;
  nodes: Array<Student_Learning_Time_By_Daily>;
};

/** aggregate fields of "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Aggregate_Fields = {
  avg?: Maybe<Student_Learning_Time_By_Daily_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Student_Learning_Time_By_Daily_Max_Fields>;
  min?: Maybe<Student_Learning_Time_By_Daily_Min_Fields>;
  stddev?: Maybe<Student_Learning_Time_By_Daily_Stddev_Fields>;
  stddev_pop?: Maybe<Student_Learning_Time_By_Daily_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Student_Learning_Time_By_Daily_Stddev_Samp_Fields>;
  sum?: Maybe<Student_Learning_Time_By_Daily_Sum_Fields>;
  var_pop?: Maybe<Student_Learning_Time_By_Daily_Var_Pop_Fields>;
  var_samp?: Maybe<Student_Learning_Time_By_Daily_Var_Samp_Fields>;
  variance?: Maybe<Student_Learning_Time_By_Daily_Variance_Fields>;
};


/** aggregate fields of "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Student_Learning_Time_By_Daily_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Aggregate_Order_By = {
  avg?: Maybe<Student_Learning_Time_By_Daily_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Student_Learning_Time_By_Daily_Max_Order_By>;
  min?: Maybe<Student_Learning_Time_By_Daily_Min_Order_By>;
  stddev?: Maybe<Student_Learning_Time_By_Daily_Stddev_Order_By>;
  stddev_pop?: Maybe<Student_Learning_Time_By_Daily_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Student_Learning_Time_By_Daily_Stddev_Samp_Order_By>;
  sum?: Maybe<Student_Learning_Time_By_Daily_Sum_Order_By>;
  var_pop?: Maybe<Student_Learning_Time_By_Daily_Var_Pop_Order_By>;
  var_samp?: Maybe<Student_Learning_Time_By_Daily_Var_Samp_Order_By>;
  variance?: Maybe<Student_Learning_Time_By_Daily_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Arr_Rel_Insert_Input = {
  data: Array<Student_Learning_Time_By_Daily_Insert_Input>;
  on_conflict?: Maybe<Student_Learning_Time_By_Daily_On_Conflict>;
};

/** aggregate avg on columns */
export type Student_Learning_Time_By_Daily_Avg_Fields = {
  learning_time?: Maybe<Scalars['Float']>;
  learning_time_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Avg_Order_By = {
  learning_time?: Maybe<Order_By>;
  learning_time_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "student_learning_time_by_daily". All fields are combined with a logical 'AND'. */
export type Student_Learning_Time_By_Daily_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Student_Learning_Time_By_Daily_Bool_Exp>>>;
  _not?: Maybe<Student_Learning_Time_By_Daily_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Student_Learning_Time_By_Daily_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  day?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  learning_time?: Maybe<Int_Comparison_Exp>;
  learning_time_id?: Maybe<Int_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  sessions?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "student_learning_time_by_daily" */
export enum Student_Learning_Time_By_Daily_Constraint {
  /** unique or primary key constraint */
  StudentLearningTimeByDailyPk = 'student_learning_time_by_daily_pk',
  /** unique or primary key constraint */
  StudentLearningTimeByDailyUn = 'student_learning_time_by_daily_un'
}

/** input type for incrementing integer column in table "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Inc_Input = {
  learning_time?: Maybe<Scalars['Int']>;
  learning_time_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  day?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  learning_time?: Maybe<Scalars['Int']>;
  learning_time_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  sessions?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Student_Learning_Time_By_Daily_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  day?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  learning_time?: Maybe<Scalars['Int']>;
  learning_time_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  sessions?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  day?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  learning_time?: Maybe<Order_By>;
  learning_time_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  sessions?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Student_Learning_Time_By_Daily_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  day?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  learning_time?: Maybe<Scalars['Int']>;
  learning_time_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  sessions?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  day?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  learning_time?: Maybe<Order_By>;
  learning_time_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  sessions?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Student_Learning_Time_By_Daily>;
};

/** input type for inserting object relation for remote table "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Obj_Rel_Insert_Input = {
  data: Student_Learning_Time_By_Daily_Insert_Input;
  on_conflict?: Maybe<Student_Learning_Time_By_Daily_On_Conflict>;
};

/** on conflict condition type for table "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_On_Conflict = {
  constraint: Student_Learning_Time_By_Daily_Constraint;
  update_columns: Array<Student_Learning_Time_By_Daily_Update_Column>;
  where?: Maybe<Student_Learning_Time_By_Daily_Bool_Exp>;
};

/** ordering options when selecting data from "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Order_By = {
  created_at?: Maybe<Order_By>;
  day?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  learning_time?: Maybe<Order_By>;
  learning_time_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  sessions?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Pk_Columns_Input = {
  learning_time_id: Scalars['Int'];
};

/** select columns of table "student_learning_time_by_daily" */
export enum Student_Learning_Time_By_Daily_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Day = 'day',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LearningTime = 'learning_time',
  /** column name */
  LearningTimeId = 'learning_time_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Sessions = 'sessions',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  day?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  learning_time?: Maybe<Scalars['Int']>;
  learning_time_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  sessions?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Student_Learning_Time_By_Daily_Stddev_Fields = {
  learning_time?: Maybe<Scalars['Float']>;
  learning_time_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Stddev_Order_By = {
  learning_time?: Maybe<Order_By>;
  learning_time_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Student_Learning_Time_By_Daily_Stddev_Pop_Fields = {
  learning_time?: Maybe<Scalars['Float']>;
  learning_time_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Stddev_Pop_Order_By = {
  learning_time?: Maybe<Order_By>;
  learning_time_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Student_Learning_Time_By_Daily_Stddev_Samp_Fields = {
  learning_time?: Maybe<Scalars['Float']>;
  learning_time_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Stddev_Samp_Order_By = {
  learning_time?: Maybe<Order_By>;
  learning_time_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Student_Learning_Time_By_Daily_Sum_Fields = {
  learning_time?: Maybe<Scalars['Int']>;
  learning_time_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Sum_Order_By = {
  learning_time?: Maybe<Order_By>;
  learning_time_id?: Maybe<Order_By>;
};

/** update columns of table "student_learning_time_by_daily" */
export enum Student_Learning_Time_By_Daily_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Day = 'day',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LearningTime = 'learning_time',
  /** column name */
  LearningTimeId = 'learning_time_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Sessions = 'sessions',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Student_Learning_Time_By_Daily_Var_Pop_Fields = {
  learning_time?: Maybe<Scalars['Float']>;
  learning_time_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Var_Pop_Order_By = {
  learning_time?: Maybe<Order_By>;
  learning_time_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Student_Learning_Time_By_Daily_Var_Samp_Fields = {
  learning_time?: Maybe<Scalars['Float']>;
  learning_time_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Var_Samp_Order_By = {
  learning_time?: Maybe<Order_By>;
  learning_time_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Student_Learning_Time_By_Daily_Variance_Fields = {
  learning_time?: Maybe<Scalars['Float']>;
  learning_time_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "student_learning_time_by_daily" */
export type Student_Learning_Time_By_Daily_Variance_Order_By = {
  learning_time?: Maybe<Order_By>;
  learning_time_id?: Maybe<Order_By>;
};

/** columns and relationships of "student_packages" */
export type Student_Packages = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at: Scalars['timestamptz'];
  is_active: Scalars['Boolean'];
  location_ids?: Maybe<Scalars['_text']>;
  /** An object relationship */
  package?: Maybe<Packages>;
  package_id?: Maybe<Scalars['String']>;
  properties: Scalars['jsonb'];
  resource_path?: Maybe<Scalars['String']>;
  start_at: Scalars['timestamptz'];
  student_id: Scalars['String'];
  student_package_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "student_packages" */
export type Student_PackagesPropertiesArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "student_packages" */
export type Student_Packages_Aggregate = {
  aggregate?: Maybe<Student_Packages_Aggregate_Fields>;
  nodes: Array<Student_Packages>;
};

/** aggregate fields of "student_packages" */
export type Student_Packages_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Student_Packages_Max_Fields>;
  min?: Maybe<Student_Packages_Min_Fields>;
};


/** aggregate fields of "student_packages" */
export type Student_Packages_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Student_Packages_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "student_packages" */
export type Student_Packages_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Student_Packages_Max_Order_By>;
  min?: Maybe<Student_Packages_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Student_Packages_Append_Input = {
  properties?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "student_packages" */
export type Student_Packages_Arr_Rel_Insert_Input = {
  data: Array<Student_Packages_Insert_Input>;
  on_conflict?: Maybe<Student_Packages_On_Conflict>;
};

/** Boolean expression to filter rows from the table "student_packages". All fields are combined with a logical 'AND'. */
export type Student_Packages_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Student_Packages_Bool_Exp>>>;
  _not?: Maybe<Student_Packages_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Student_Packages_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  end_at?: Maybe<Timestamptz_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  location_ids?: Maybe<_Text_Comparison_Exp>;
  package?: Maybe<Packages_Bool_Exp>;
  package_id?: Maybe<String_Comparison_Exp>;
  properties?: Maybe<Jsonb_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  start_at?: Maybe<Timestamptz_Comparison_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  student_package_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "student_packages" */
export enum Student_Packages_Constraint {
  /** unique or primary key constraint */
  PkStudentPackages = 'pk__student_packages'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Student_Packages_Delete_At_Path_Input = {
  properties?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Student_Packages_Delete_Elem_Input = {
  properties?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Student_Packages_Delete_Key_Input = {
  properties?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "student_packages" */
export type Student_Packages_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  is_active?: Maybe<Scalars['Boolean']>;
  location_ids?: Maybe<Scalars['_text']>;
  package?: Maybe<Packages_Obj_Rel_Insert_Input>;
  package_id?: Maybe<Scalars['String']>;
  properties?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  student_id?: Maybe<Scalars['String']>;
  student_package_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Student_Packages_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  package_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  student_id?: Maybe<Scalars['String']>;
  student_package_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "student_packages" */
export type Student_Packages_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_at?: Maybe<Order_By>;
  package_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_at?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  student_package_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Student_Packages_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  package_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  student_id?: Maybe<Scalars['String']>;
  student_package_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "student_packages" */
export type Student_Packages_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_at?: Maybe<Order_By>;
  package_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_at?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  student_package_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "student_packages" */
export type Student_Packages_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Student_Packages>;
};

/** input type for inserting object relation for remote table "student_packages" */
export type Student_Packages_Obj_Rel_Insert_Input = {
  data: Student_Packages_Insert_Input;
  on_conflict?: Maybe<Student_Packages_On_Conflict>;
};

/** on conflict condition type for table "student_packages" */
export type Student_Packages_On_Conflict = {
  constraint: Student_Packages_Constraint;
  update_columns: Array<Student_Packages_Update_Column>;
  where?: Maybe<Student_Packages_Bool_Exp>;
};

/** ordering options when selecting data from "student_packages" */
export type Student_Packages_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_at?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  location_ids?: Maybe<Order_By>;
  package?: Maybe<Packages_Order_By>;
  package_id?: Maybe<Order_By>;
  properties?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_at?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  student_package_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "student_packages" */
export type Student_Packages_Pk_Columns_Input = {
  student_package_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Student_Packages_Prepend_Input = {
  properties?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "student_packages" */
export enum Student_Packages_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndAt = 'end_at',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  LocationIds = 'location_ids',
  /** column name */
  PackageId = 'package_id',
  /** column name */
  Properties = 'properties',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartAt = 'start_at',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudentPackageId = 'student_package_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "student_packages" */
export type Student_Packages_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  is_active?: Maybe<Scalars['Boolean']>;
  location_ids?: Maybe<Scalars['_text']>;
  package_id?: Maybe<Scalars['String']>;
  properties?: Maybe<Scalars['jsonb']>;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  student_id?: Maybe<Scalars['String']>;
  student_package_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "student_packages" */
export enum Student_Packages_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndAt = 'end_at',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  LocationIds = 'location_ids',
  /** column name */
  PackageId = 'package_id',
  /** column name */
  Properties = 'properties',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartAt = 'start_at',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudentPackageId = 'student_package_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "student_parents" */
export type Student_Parents = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  parent?: Maybe<Parents>;
  parent_id: Scalars['String'];
  /** An object relationship */
  parent_user?: Maybe<Users>;
  relationship: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  student?: Maybe<Students>;
  student_id: Scalars['String'];
  /** An object relationship */
  student_user?: Maybe<Users>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "student_parents" */
export type Student_Parents_Aggregate = {
  aggregate?: Maybe<Student_Parents_Aggregate_Fields>;
  nodes: Array<Student_Parents>;
};

/** aggregate fields of "student_parents" */
export type Student_Parents_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Student_Parents_Max_Fields>;
  min?: Maybe<Student_Parents_Min_Fields>;
};


/** aggregate fields of "student_parents" */
export type Student_Parents_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Student_Parents_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "student_parents" */
export type Student_Parents_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Student_Parents_Max_Order_By>;
  min?: Maybe<Student_Parents_Min_Order_By>;
};

/** input type for inserting array relation for remote table "student_parents" */
export type Student_Parents_Arr_Rel_Insert_Input = {
  data: Array<Student_Parents_Insert_Input>;
  on_conflict?: Maybe<Student_Parents_On_Conflict>;
};

/** Boolean expression to filter rows from the table "student_parents". All fields are combined with a logical 'AND'. */
export type Student_Parents_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Student_Parents_Bool_Exp>>>;
  _not?: Maybe<Student_Parents_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Student_Parents_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  parent?: Maybe<Parents_Bool_Exp>;
  parent_id?: Maybe<String_Comparison_Exp>;
  parent_user?: Maybe<Users_Bool_Exp>;
  relationship?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  student_user?: Maybe<Users_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "student_parents" */
export enum Student_Parents_Constraint {
  /** unique or primary key constraint */
  StudentParentsPk = 'student_parents_pk'
}

/** input type for inserting data into table "student_parents" */
export type Student_Parents_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  parent?: Maybe<Parents_Obj_Rel_Insert_Input>;
  parent_id?: Maybe<Scalars['String']>;
  parent_user?: Maybe<Users_Obj_Rel_Insert_Input>;
  relationship?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  student_user?: Maybe<Users_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Student_Parents_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  parent_id?: Maybe<Scalars['String']>;
  relationship?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "student_parents" */
export type Student_Parents_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  parent_id?: Maybe<Order_By>;
  relationship?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Student_Parents_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  parent_id?: Maybe<Scalars['String']>;
  relationship?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "student_parents" */
export type Student_Parents_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  parent_id?: Maybe<Order_By>;
  relationship?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "student_parents" */
export type Student_Parents_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Student_Parents>;
};

/** input type for inserting object relation for remote table "student_parents" */
export type Student_Parents_Obj_Rel_Insert_Input = {
  data: Student_Parents_Insert_Input;
  on_conflict?: Maybe<Student_Parents_On_Conflict>;
};

/** on conflict condition type for table "student_parents" */
export type Student_Parents_On_Conflict = {
  constraint: Student_Parents_Constraint;
  update_columns: Array<Student_Parents_Update_Column>;
  where?: Maybe<Student_Parents_Bool_Exp>;
};

/** ordering options when selecting data from "student_parents" */
export type Student_Parents_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  parent?: Maybe<Parents_Order_By>;
  parent_id?: Maybe<Order_By>;
  parent_user?: Maybe<Users_Order_By>;
  relationship?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  student_user?: Maybe<Users_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "student_parents" */
export type Student_Parents_Pk_Columns_Input = {
  parent_id: Scalars['String'];
  student_id: Scalars['String'];
};

/** select columns of table "student_parents" */
export enum Student_Parents_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ParentId = 'parent_id',
  /** column name */
  Relationship = 'relationship',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "student_parents" */
export type Student_Parents_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  parent_id?: Maybe<Scalars['String']>;
  relationship?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "student_parents" */
export enum Student_Parents_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ParentId = 'parent_id',
  /** column name */
  Relationship = 'relationship',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "student_qr" */
export type Student_Qr = {
  created_at: Scalars['timestamptz'];
  qr_id: Scalars['Int'];
  qr_url: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  student_id: Scalars['String'];
  /** An object relationship */
  students: Students;
};

/** aggregated selection of "student_qr" */
export type Student_Qr_Aggregate = {
  aggregate?: Maybe<Student_Qr_Aggregate_Fields>;
  nodes: Array<Student_Qr>;
};

/** aggregate fields of "student_qr" */
export type Student_Qr_Aggregate_Fields = {
  avg?: Maybe<Student_Qr_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Student_Qr_Max_Fields>;
  min?: Maybe<Student_Qr_Min_Fields>;
  stddev?: Maybe<Student_Qr_Stddev_Fields>;
  stddev_pop?: Maybe<Student_Qr_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Student_Qr_Stddev_Samp_Fields>;
  sum?: Maybe<Student_Qr_Sum_Fields>;
  var_pop?: Maybe<Student_Qr_Var_Pop_Fields>;
  var_samp?: Maybe<Student_Qr_Var_Samp_Fields>;
  variance?: Maybe<Student_Qr_Variance_Fields>;
};


/** aggregate fields of "student_qr" */
export type Student_Qr_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Student_Qr_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "student_qr" */
export type Student_Qr_Aggregate_Order_By = {
  avg?: Maybe<Student_Qr_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Student_Qr_Max_Order_By>;
  min?: Maybe<Student_Qr_Min_Order_By>;
  stddev?: Maybe<Student_Qr_Stddev_Order_By>;
  stddev_pop?: Maybe<Student_Qr_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Student_Qr_Stddev_Samp_Order_By>;
  sum?: Maybe<Student_Qr_Sum_Order_By>;
  var_pop?: Maybe<Student_Qr_Var_Pop_Order_By>;
  var_samp?: Maybe<Student_Qr_Var_Samp_Order_By>;
  variance?: Maybe<Student_Qr_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "student_qr" */
export type Student_Qr_Arr_Rel_Insert_Input = {
  data: Array<Student_Qr_Insert_Input>;
  on_conflict?: Maybe<Student_Qr_On_Conflict>;
};

/** aggregate avg on columns */
export type Student_Qr_Avg_Fields = {
  qr_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "student_qr" */
export type Student_Qr_Avg_Order_By = {
  qr_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "student_qr". All fields are combined with a logical 'AND'. */
export type Student_Qr_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Student_Qr_Bool_Exp>>>;
  _not?: Maybe<Student_Qr_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Student_Qr_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  qr_id?: Maybe<Int_Comparison_Exp>;
  qr_url?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  students?: Maybe<Students_Bool_Exp>;
};

/** unique or primary key constraints on table "student_qr" */
export enum Student_Qr_Constraint {
  /** unique or primary key constraint */
  StudentQrPk = 'student_qr_pk',
  /** unique or primary key constraint */
  StudentQrQrUrlKey = 'student_qr_qr_url_key',
  /** unique or primary key constraint */
  StudentQrStudentIdKey = 'student_qr_student_id_key'
}

/** input type for incrementing integer column in table "student_qr" */
export type Student_Qr_Inc_Input = {
  qr_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "student_qr" */
export type Student_Qr_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  qr_id?: Maybe<Scalars['Int']>;
  qr_url?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  students?: Maybe<Students_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Student_Qr_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  qr_id?: Maybe<Scalars['Int']>;
  qr_url?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "student_qr" */
export type Student_Qr_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  qr_id?: Maybe<Order_By>;
  qr_url?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Student_Qr_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  qr_id?: Maybe<Scalars['Int']>;
  qr_url?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "student_qr" */
export type Student_Qr_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  qr_id?: Maybe<Order_By>;
  qr_url?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "student_qr" */
export type Student_Qr_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Student_Qr>;
};

/** input type for inserting object relation for remote table "student_qr" */
export type Student_Qr_Obj_Rel_Insert_Input = {
  data: Student_Qr_Insert_Input;
  on_conflict?: Maybe<Student_Qr_On_Conflict>;
};

/** on conflict condition type for table "student_qr" */
export type Student_Qr_On_Conflict = {
  constraint: Student_Qr_Constraint;
  update_columns: Array<Student_Qr_Update_Column>;
  where?: Maybe<Student_Qr_Bool_Exp>;
};

/** ordering options when selecting data from "student_qr" */
export type Student_Qr_Order_By = {
  created_at?: Maybe<Order_By>;
  qr_id?: Maybe<Order_By>;
  qr_url?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  students?: Maybe<Students_Order_By>;
};

/** primary key columns input for table: "student_qr" */
export type Student_Qr_Pk_Columns_Input = {
  qr_id: Scalars['Int'];
};

/** select columns of table "student_qr" */
export enum Student_Qr_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  QrId = 'qr_id',
  /** column name */
  QrUrl = 'qr_url',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id'
}

/** input type for updating data in table "student_qr" */
export type Student_Qr_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  qr_id?: Maybe<Scalars['Int']>;
  qr_url?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Student_Qr_Stddev_Fields = {
  qr_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "student_qr" */
export type Student_Qr_Stddev_Order_By = {
  qr_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Student_Qr_Stddev_Pop_Fields = {
  qr_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "student_qr" */
export type Student_Qr_Stddev_Pop_Order_By = {
  qr_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Student_Qr_Stddev_Samp_Fields = {
  qr_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "student_qr" */
export type Student_Qr_Stddev_Samp_Order_By = {
  qr_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Student_Qr_Sum_Fields = {
  qr_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "student_qr" */
export type Student_Qr_Sum_Order_By = {
  qr_id?: Maybe<Order_By>;
};

/** update columns of table "student_qr" */
export enum Student_Qr_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  QrId = 'qr_id',
  /** column name */
  QrUrl = 'qr_url',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id'
}

/** aggregate var_pop on columns */
export type Student_Qr_Var_Pop_Fields = {
  qr_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "student_qr" */
export type Student_Qr_Var_Pop_Order_By = {
  qr_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Student_Qr_Var_Samp_Fields = {
  qr_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "student_qr" */
export type Student_Qr_Var_Samp_Order_By = {
  qr_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Student_Qr_Variance_Fields = {
  qr_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "student_qr" */
export type Student_Qr_Variance_Order_By = {
  qr_id?: Maybe<Order_By>;
};

/** columns and relationships of "student_questions" */
export type Student_Questions = {
  content: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  history_assigned_tutor_ids?: Maybe<Scalars['_text']>;
  history_changed_status?: Maybe<Scalars['_text']>;
  is_processing?: Maybe<Scalars['Boolean']>;
  /** An object relationship */
  question?: Maybe<Questions>;
  quiz_id?: Maybe<Scalars['String']>;
  rate?: Maybe<Scalars['String']>;
  rate_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  student_question_id: Scalars['String'];
  subject?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  /** An object relationship */
  tutor?: Maybe<Tutors>;
  tutor_id?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  url_medias?: Maybe<Scalars['_text']>;
};

/** aggregated selection of "student_questions" */
export type Student_Questions_Aggregate = {
  aggregate?: Maybe<Student_Questions_Aggregate_Fields>;
  nodes: Array<Student_Questions>;
};

/** aggregate fields of "student_questions" */
export type Student_Questions_Aggregate_Fields = {
  avg?: Maybe<Student_Questions_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Student_Questions_Max_Fields>;
  min?: Maybe<Student_Questions_Min_Fields>;
  stddev?: Maybe<Student_Questions_Stddev_Fields>;
  stddev_pop?: Maybe<Student_Questions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Student_Questions_Stddev_Samp_Fields>;
  sum?: Maybe<Student_Questions_Sum_Fields>;
  var_pop?: Maybe<Student_Questions_Var_Pop_Fields>;
  var_samp?: Maybe<Student_Questions_Var_Samp_Fields>;
  variance?: Maybe<Student_Questions_Variance_Fields>;
};


/** aggregate fields of "student_questions" */
export type Student_Questions_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Student_Questions_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "student_questions" */
export type Student_Questions_Aggregate_Order_By = {
  avg?: Maybe<Student_Questions_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Student_Questions_Max_Order_By>;
  min?: Maybe<Student_Questions_Min_Order_By>;
  stddev?: Maybe<Student_Questions_Stddev_Order_By>;
  stddev_pop?: Maybe<Student_Questions_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Student_Questions_Stddev_Samp_Order_By>;
  sum?: Maybe<Student_Questions_Sum_Order_By>;
  var_pop?: Maybe<Student_Questions_Var_Pop_Order_By>;
  var_samp?: Maybe<Student_Questions_Var_Samp_Order_By>;
  variance?: Maybe<Student_Questions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "student_questions" */
export type Student_Questions_Arr_Rel_Insert_Input = {
  data: Array<Student_Questions_Insert_Input>;
  on_conflict?: Maybe<Student_Questions_On_Conflict>;
};

/** aggregate avg on columns */
export type Student_Questions_Avg_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "student_questions" */
export type Student_Questions_Avg_Order_By = {
  grade?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "student_questions". All fields are combined with a logical 'AND'. */
export type Student_Questions_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Student_Questions_Bool_Exp>>>;
  _not?: Maybe<Student_Questions_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Student_Questions_Bool_Exp>>>;
  content?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  grade?: Maybe<Smallint_Comparison_Exp>;
  history_assigned_tutor_ids?: Maybe<_Text_Comparison_Exp>;
  history_changed_status?: Maybe<_Text_Comparison_Exp>;
  is_processing?: Maybe<Boolean_Comparison_Exp>;
  question?: Maybe<Questions_Bool_Exp>;
  quiz_id?: Maybe<String_Comparison_Exp>;
  rate?: Maybe<String_Comparison_Exp>;
  rate_at?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  student_question_id?: Maybe<String_Comparison_Exp>;
  subject?: Maybe<String_Comparison_Exp>;
  title?: Maybe<String_Comparison_Exp>;
  tutor?: Maybe<Tutors_Bool_Exp>;
  tutor_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  url_medias?: Maybe<_Text_Comparison_Exp>;
};

/** unique or primary key constraints on table "student_questions" */
export enum Student_Questions_Constraint {
  /** unique or primary key constraint */
  StudentQuestionsPk = 'student_questions_pk'
}

/** input type for incrementing integer column in table "student_questions" */
export type Student_Questions_Inc_Input = {
  grade?: Maybe<Scalars['smallint']>;
};

/** input type for inserting data into table "student_questions" */
export type Student_Questions_Insert_Input = {
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  history_assigned_tutor_ids?: Maybe<Scalars['_text']>;
  history_changed_status?: Maybe<Scalars['_text']>;
  is_processing?: Maybe<Scalars['Boolean']>;
  question?: Maybe<Questions_Obj_Rel_Insert_Input>;
  quiz_id?: Maybe<Scalars['String']>;
  rate?: Maybe<Scalars['String']>;
  rate_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  student_question_id?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  tutor?: Maybe<Tutors_Obj_Rel_Insert_Input>;
  tutor_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  url_medias?: Maybe<Scalars['_text']>;
};

/** aggregate max on columns */
export type Student_Questions_Max_Fields = {
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  quiz_id?: Maybe<Scalars['String']>;
  rate?: Maybe<Scalars['String']>;
  rate_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  student_question_id?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  tutor_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "student_questions" */
export type Student_Questions_Max_Order_By = {
  content?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  quiz_id?: Maybe<Order_By>;
  rate?: Maybe<Order_By>;
  rate_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  student_question_id?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  tutor_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Student_Questions_Min_Fields = {
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  quiz_id?: Maybe<Scalars['String']>;
  rate?: Maybe<Scalars['String']>;
  rate_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  student_question_id?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  tutor_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "student_questions" */
export type Student_Questions_Min_Order_By = {
  content?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  quiz_id?: Maybe<Order_By>;
  rate?: Maybe<Order_By>;
  rate_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  student_question_id?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  tutor_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "student_questions" */
export type Student_Questions_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Student_Questions>;
};

/** input type for inserting object relation for remote table "student_questions" */
export type Student_Questions_Obj_Rel_Insert_Input = {
  data: Student_Questions_Insert_Input;
  on_conflict?: Maybe<Student_Questions_On_Conflict>;
};

/** on conflict condition type for table "student_questions" */
export type Student_Questions_On_Conflict = {
  constraint: Student_Questions_Constraint;
  update_columns: Array<Student_Questions_Update_Column>;
  where?: Maybe<Student_Questions_Bool_Exp>;
};

/** ordering options when selecting data from "student_questions" */
export type Student_Questions_Order_By = {
  content?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  history_assigned_tutor_ids?: Maybe<Order_By>;
  history_changed_status?: Maybe<Order_By>;
  is_processing?: Maybe<Order_By>;
  question?: Maybe<Questions_Order_By>;
  quiz_id?: Maybe<Order_By>;
  rate?: Maybe<Order_By>;
  rate_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  student_question_id?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  tutor?: Maybe<Tutors_Order_By>;
  tutor_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  url_medias?: Maybe<Order_By>;
};

/** primary key columns input for table: "student_questions" */
export type Student_Questions_Pk_Columns_Input = {
  student_question_id: Scalars['String'];
};

/** select columns of table "student_questions" */
export enum Student_Questions_Select_Column {
  /** column name */
  Content = 'content',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Grade = 'grade',
  /** column name */
  HistoryAssignedTutorIds = 'history_assigned_tutor_ids',
  /** column name */
  HistoryChangedStatus = 'history_changed_status',
  /** column name */
  IsProcessing = 'is_processing',
  /** column name */
  QuizId = 'quiz_id',
  /** column name */
  Rate = 'rate',
  /** column name */
  RateAt = 'rate_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudentQuestionId = 'student_question_id',
  /** column name */
  Subject = 'subject',
  /** column name */
  Title = 'title',
  /** column name */
  TutorId = 'tutor_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UrlMedias = 'url_medias'
}

/** input type for updating data in table "student_questions" */
export type Student_Questions_Set_Input = {
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  history_assigned_tutor_ids?: Maybe<Scalars['_text']>;
  history_changed_status?: Maybe<Scalars['_text']>;
  is_processing?: Maybe<Scalars['Boolean']>;
  quiz_id?: Maybe<Scalars['String']>;
  rate?: Maybe<Scalars['String']>;
  rate_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  student_question_id?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  tutor_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  url_medias?: Maybe<Scalars['_text']>;
};

/** aggregate stddev on columns */
export type Student_Questions_Stddev_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "student_questions" */
export type Student_Questions_Stddev_Order_By = {
  grade?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Student_Questions_Stddev_Pop_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "student_questions" */
export type Student_Questions_Stddev_Pop_Order_By = {
  grade?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Student_Questions_Stddev_Samp_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "student_questions" */
export type Student_Questions_Stddev_Samp_Order_By = {
  grade?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Student_Questions_Sum_Fields = {
  grade?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "student_questions" */
export type Student_Questions_Sum_Order_By = {
  grade?: Maybe<Order_By>;
};

/** update columns of table "student_questions" */
export enum Student_Questions_Update_Column {
  /** column name */
  Content = 'content',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Grade = 'grade',
  /** column name */
  HistoryAssignedTutorIds = 'history_assigned_tutor_ids',
  /** column name */
  HistoryChangedStatus = 'history_changed_status',
  /** column name */
  IsProcessing = 'is_processing',
  /** column name */
  QuizId = 'quiz_id',
  /** column name */
  Rate = 'rate',
  /** column name */
  RateAt = 'rate_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudentQuestionId = 'student_question_id',
  /** column name */
  Subject = 'subject',
  /** column name */
  Title = 'title',
  /** column name */
  TutorId = 'tutor_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UrlMedias = 'url_medias'
}

/** aggregate var_pop on columns */
export type Student_Questions_Var_Pop_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "student_questions" */
export type Student_Questions_Var_Pop_Order_By = {
  grade?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Student_Questions_Var_Samp_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "student_questions" */
export type Student_Questions_Var_Samp_Order_By = {
  grade?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Student_Questions_Variance_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "student_questions" */
export type Student_Questions_Variance_Order_By = {
  grade?: Maybe<Order_By>;
};

/** columns and relationships of "student_statistics" */
export type Student_Statistics = {
  additional_data?: Maybe<Scalars['jsonb']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  last_time_completed_lo?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  total_learning_time?: Maybe<Scalars['Int']>;
  total_lo_finished?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "student_statistics" */
export type Student_StatisticsAdditional_DataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "student_statistics" */
export type Student_Statistics_Aggregate = {
  aggregate?: Maybe<Student_Statistics_Aggregate_Fields>;
  nodes: Array<Student_Statistics>;
};

/** aggregate fields of "student_statistics" */
export type Student_Statistics_Aggregate_Fields = {
  avg?: Maybe<Student_Statistics_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Student_Statistics_Max_Fields>;
  min?: Maybe<Student_Statistics_Min_Fields>;
  stddev?: Maybe<Student_Statistics_Stddev_Fields>;
  stddev_pop?: Maybe<Student_Statistics_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Student_Statistics_Stddev_Samp_Fields>;
  sum?: Maybe<Student_Statistics_Sum_Fields>;
  var_pop?: Maybe<Student_Statistics_Var_Pop_Fields>;
  var_samp?: Maybe<Student_Statistics_Var_Samp_Fields>;
  variance?: Maybe<Student_Statistics_Variance_Fields>;
};


/** aggregate fields of "student_statistics" */
export type Student_Statistics_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Student_Statistics_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "student_statistics" */
export type Student_Statistics_Aggregate_Order_By = {
  avg?: Maybe<Student_Statistics_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Student_Statistics_Max_Order_By>;
  min?: Maybe<Student_Statistics_Min_Order_By>;
  stddev?: Maybe<Student_Statistics_Stddev_Order_By>;
  stddev_pop?: Maybe<Student_Statistics_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Student_Statistics_Stddev_Samp_Order_By>;
  sum?: Maybe<Student_Statistics_Sum_Order_By>;
  var_pop?: Maybe<Student_Statistics_Var_Pop_Order_By>;
  var_samp?: Maybe<Student_Statistics_Var_Samp_Order_By>;
  variance?: Maybe<Student_Statistics_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Student_Statistics_Append_Input = {
  additional_data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "student_statistics" */
export type Student_Statistics_Arr_Rel_Insert_Input = {
  data: Array<Student_Statistics_Insert_Input>;
  on_conflict?: Maybe<Student_Statistics_On_Conflict>;
};

/** aggregate avg on columns */
export type Student_Statistics_Avg_Fields = {
  total_learning_time?: Maybe<Scalars['Float']>;
  total_lo_finished?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "student_statistics" */
export type Student_Statistics_Avg_Order_By = {
  total_learning_time?: Maybe<Order_By>;
  total_lo_finished?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "student_statistics". All fields are combined with a logical 'AND'. */
export type Student_Statistics_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Student_Statistics_Bool_Exp>>>;
  _not?: Maybe<Student_Statistics_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Student_Statistics_Bool_Exp>>>;
  additional_data?: Maybe<Jsonb_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  last_time_completed_lo?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  total_learning_time?: Maybe<Int_Comparison_Exp>;
  total_lo_finished?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "student_statistics" */
export enum Student_Statistics_Constraint {
  /** unique or primary key constraint */
  StatisticsStudentUn = 'statistics_student_un'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Student_Statistics_Delete_At_Path_Input = {
  additional_data?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Student_Statistics_Delete_Elem_Input = {
  additional_data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Student_Statistics_Delete_Key_Input = {
  additional_data?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "student_statistics" */
export type Student_Statistics_Inc_Input = {
  total_learning_time?: Maybe<Scalars['Int']>;
  total_lo_finished?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "student_statistics" */
export type Student_Statistics_Insert_Input = {
  additional_data?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  last_time_completed_lo?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  total_learning_time?: Maybe<Scalars['Int']>;
  total_lo_finished?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Student_Statistics_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  last_time_completed_lo?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  total_learning_time?: Maybe<Scalars['Int']>;
  total_lo_finished?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "student_statistics" */
export type Student_Statistics_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  last_time_completed_lo?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  total_learning_time?: Maybe<Order_By>;
  total_lo_finished?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Student_Statistics_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  last_time_completed_lo?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  total_learning_time?: Maybe<Scalars['Int']>;
  total_lo_finished?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "student_statistics" */
export type Student_Statistics_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  last_time_completed_lo?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  total_learning_time?: Maybe<Order_By>;
  total_lo_finished?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "student_statistics" */
export type Student_Statistics_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Student_Statistics>;
};

/** input type for inserting object relation for remote table "student_statistics" */
export type Student_Statistics_Obj_Rel_Insert_Input = {
  data: Student_Statistics_Insert_Input;
  on_conflict?: Maybe<Student_Statistics_On_Conflict>;
};

/** on conflict condition type for table "student_statistics" */
export type Student_Statistics_On_Conflict = {
  constraint: Student_Statistics_Constraint;
  update_columns: Array<Student_Statistics_Update_Column>;
  where?: Maybe<Student_Statistics_Bool_Exp>;
};

/** ordering options when selecting data from "student_statistics" */
export type Student_Statistics_Order_By = {
  additional_data?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  last_time_completed_lo?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  total_learning_time?: Maybe<Order_By>;
  total_lo_finished?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Student_Statistics_Prepend_Input = {
  additional_data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "student_statistics" */
export enum Student_Statistics_Select_Column {
  /** column name */
  AdditionalData = 'additional_data',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LastTimeCompletedLo = 'last_time_completed_lo',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  TotalLearningTime = 'total_learning_time',
  /** column name */
  TotalLoFinished = 'total_lo_finished',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "student_statistics" */
export type Student_Statistics_Set_Input = {
  additional_data?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  last_time_completed_lo?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  total_learning_time?: Maybe<Scalars['Int']>;
  total_lo_finished?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Student_Statistics_Stddev_Fields = {
  total_learning_time?: Maybe<Scalars['Float']>;
  total_lo_finished?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "student_statistics" */
export type Student_Statistics_Stddev_Order_By = {
  total_learning_time?: Maybe<Order_By>;
  total_lo_finished?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Student_Statistics_Stddev_Pop_Fields = {
  total_learning_time?: Maybe<Scalars['Float']>;
  total_lo_finished?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "student_statistics" */
export type Student_Statistics_Stddev_Pop_Order_By = {
  total_learning_time?: Maybe<Order_By>;
  total_lo_finished?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Student_Statistics_Stddev_Samp_Fields = {
  total_learning_time?: Maybe<Scalars['Float']>;
  total_lo_finished?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "student_statistics" */
export type Student_Statistics_Stddev_Samp_Order_By = {
  total_learning_time?: Maybe<Order_By>;
  total_lo_finished?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Student_Statistics_Sum_Fields = {
  total_learning_time?: Maybe<Scalars['Int']>;
  total_lo_finished?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "student_statistics" */
export type Student_Statistics_Sum_Order_By = {
  total_learning_time?: Maybe<Order_By>;
  total_lo_finished?: Maybe<Order_By>;
};

/** update columns of table "student_statistics" */
export enum Student_Statistics_Update_Column {
  /** column name */
  AdditionalData = 'additional_data',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LastTimeCompletedLo = 'last_time_completed_lo',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  TotalLearningTime = 'total_learning_time',
  /** column name */
  TotalLoFinished = 'total_lo_finished',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Student_Statistics_Var_Pop_Fields = {
  total_learning_time?: Maybe<Scalars['Float']>;
  total_lo_finished?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "student_statistics" */
export type Student_Statistics_Var_Pop_Order_By = {
  total_learning_time?: Maybe<Order_By>;
  total_lo_finished?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Student_Statistics_Var_Samp_Fields = {
  total_learning_time?: Maybe<Scalars['Float']>;
  total_lo_finished?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "student_statistics" */
export type Student_Statistics_Var_Samp_Order_By = {
  total_learning_time?: Maybe<Order_By>;
  total_lo_finished?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Student_Statistics_Variance_Fields = {
  total_learning_time?: Maybe<Scalars['Float']>;
  total_lo_finished?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "student_statistics" */
export type Student_Statistics_Variance_Order_By = {
  total_learning_time?: Maybe<Order_By>;
  total_lo_finished?: Maybe<Order_By>;
};

/** columns and relationships of "student_study_plans" */
export type Student_Study_Plans = {
  /** An array relationship */
  course_students: Array<Course_Students>;
  /** An aggregated array relationship */
  course_students_aggregate: Course_Students_Aggregate;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  master_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id: Scalars['String'];
  /** An object relationship */
  study_plan: Study_Plans;
  study_plan_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "student_study_plans" */
export type Student_Study_PlansCourse_StudentsArgs = {
  distinct_on?: Maybe<Array<Course_Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Students_Order_By>>;
  where?: Maybe<Course_Students_Bool_Exp>;
};


/** columns and relationships of "student_study_plans" */
export type Student_Study_PlansCourse_Students_AggregateArgs = {
  distinct_on?: Maybe<Array<Course_Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Students_Order_By>>;
  where?: Maybe<Course_Students_Bool_Exp>;
};

/** aggregated selection of "student_study_plans" */
export type Student_Study_Plans_Aggregate = {
  aggregate?: Maybe<Student_Study_Plans_Aggregate_Fields>;
  nodes: Array<Student_Study_Plans>;
};

/** aggregate fields of "student_study_plans" */
export type Student_Study_Plans_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Student_Study_Plans_Max_Fields>;
  min?: Maybe<Student_Study_Plans_Min_Fields>;
};


/** aggregate fields of "student_study_plans" */
export type Student_Study_Plans_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Student_Study_Plans_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "student_study_plans" */
export type Student_Study_Plans_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Student_Study_Plans_Max_Order_By>;
  min?: Maybe<Student_Study_Plans_Min_Order_By>;
};

/** input type for inserting array relation for remote table "student_study_plans" */
export type Student_Study_Plans_Arr_Rel_Insert_Input = {
  data: Array<Student_Study_Plans_Insert_Input>;
  on_conflict?: Maybe<Student_Study_Plans_On_Conflict>;
};

/** Boolean expression to filter rows from the table "student_study_plans". All fields are combined with a logical 'AND'. */
export type Student_Study_Plans_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Student_Study_Plans_Bool_Exp>>>;
  _not?: Maybe<Student_Study_Plans_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Student_Study_Plans_Bool_Exp>>>;
  course_students?: Maybe<Course_Students_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  master_study_plan_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  study_plan?: Maybe<Study_Plans_Bool_Exp>;
  study_plan_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "student_study_plans" */
export enum Student_Study_Plans_Constraint {
  /** unique or primary key constraint */
  StudentMasterStudyPlan = 'student_master_study_plan',
  /** unique or primary key constraint */
  StudentStudyPlansPk = 'student_study_plans_pk'
}

/** input type for inserting data into table "student_study_plans" */
export type Student_Study_Plans_Insert_Input = {
  course_students?: Maybe<Course_Students_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  master_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  study_plan?: Maybe<Study_Plans_Obj_Rel_Insert_Input>;
  study_plan_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Student_Study_Plans_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  master_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  study_plan_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "student_study_plans" */
export type Student_Study_Plans_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  master_study_plan_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  study_plan_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Student_Study_Plans_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  master_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  study_plan_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "student_study_plans" */
export type Student_Study_Plans_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  master_study_plan_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  study_plan_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "student_study_plans" */
export type Student_Study_Plans_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Student_Study_Plans>;
};

/** input type for inserting object relation for remote table "student_study_plans" */
export type Student_Study_Plans_Obj_Rel_Insert_Input = {
  data: Student_Study_Plans_Insert_Input;
  on_conflict?: Maybe<Student_Study_Plans_On_Conflict>;
};

/** on conflict condition type for table "student_study_plans" */
export type Student_Study_Plans_On_Conflict = {
  constraint: Student_Study_Plans_Constraint;
  update_columns: Array<Student_Study_Plans_Update_Column>;
  where?: Maybe<Student_Study_Plans_Bool_Exp>;
};

/** ordering options when selecting data from "student_study_plans" */
export type Student_Study_Plans_Order_By = {
  course_students_aggregate?: Maybe<Course_Students_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  master_study_plan_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  study_plan?: Maybe<Study_Plans_Order_By>;
  study_plan_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "student_study_plans" */
export type Student_Study_Plans_Pk_Columns_Input = {
  student_id: Scalars['String'];
  study_plan_id: Scalars['String'];
};

/** select columns of table "student_study_plans" */
export enum Student_Study_Plans_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  MasterStudyPlanId = 'master_study_plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudyPlanId = 'study_plan_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "student_study_plans" */
export type Student_Study_Plans_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  master_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  study_plan_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "student_study_plans" */
export enum Student_Study_Plans_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  MasterStudyPlanId = 'master_study_plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudyPlanId = 'study_plan_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "student_submission_grades" */
export type Student_Submission_Grades = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  editor_id?: Maybe<Scalars['String']>;
  grade?: Maybe<Scalars['numeric']>;
  grade_content?: Maybe<Scalars['jsonb']>;
  grader_comment?: Maybe<Scalars['String']>;
  grader_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_submission_grade_id: Scalars['String'];
  student_submission_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "student_submission_grades" */
export type Student_Submission_GradesGrade_ContentArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "student_submission_grades" */
export type Student_Submission_Grades_Aggregate = {
  aggregate?: Maybe<Student_Submission_Grades_Aggregate_Fields>;
  nodes: Array<Student_Submission_Grades>;
};

/** aggregate fields of "student_submission_grades" */
export type Student_Submission_Grades_Aggregate_Fields = {
  avg?: Maybe<Student_Submission_Grades_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Student_Submission_Grades_Max_Fields>;
  min?: Maybe<Student_Submission_Grades_Min_Fields>;
  stddev?: Maybe<Student_Submission_Grades_Stddev_Fields>;
  stddev_pop?: Maybe<Student_Submission_Grades_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Student_Submission_Grades_Stddev_Samp_Fields>;
  sum?: Maybe<Student_Submission_Grades_Sum_Fields>;
  var_pop?: Maybe<Student_Submission_Grades_Var_Pop_Fields>;
  var_samp?: Maybe<Student_Submission_Grades_Var_Samp_Fields>;
  variance?: Maybe<Student_Submission_Grades_Variance_Fields>;
};


/** aggregate fields of "student_submission_grades" */
export type Student_Submission_Grades_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Student_Submission_Grades_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "student_submission_grades" */
export type Student_Submission_Grades_Aggregate_Order_By = {
  avg?: Maybe<Student_Submission_Grades_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Student_Submission_Grades_Max_Order_By>;
  min?: Maybe<Student_Submission_Grades_Min_Order_By>;
  stddev?: Maybe<Student_Submission_Grades_Stddev_Order_By>;
  stddev_pop?: Maybe<Student_Submission_Grades_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Student_Submission_Grades_Stddev_Samp_Order_By>;
  sum?: Maybe<Student_Submission_Grades_Sum_Order_By>;
  var_pop?: Maybe<Student_Submission_Grades_Var_Pop_Order_By>;
  var_samp?: Maybe<Student_Submission_Grades_Var_Samp_Order_By>;
  variance?: Maybe<Student_Submission_Grades_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Student_Submission_Grades_Append_Input = {
  grade_content?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "student_submission_grades" */
export type Student_Submission_Grades_Arr_Rel_Insert_Input = {
  data: Array<Student_Submission_Grades_Insert_Input>;
  on_conflict?: Maybe<Student_Submission_Grades_On_Conflict>;
};

/** aggregate avg on columns */
export type Student_Submission_Grades_Avg_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "student_submission_grades" */
export type Student_Submission_Grades_Avg_Order_By = {
  grade?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "student_submission_grades". All fields are combined with a logical 'AND'. */
export type Student_Submission_Grades_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Student_Submission_Grades_Bool_Exp>>>;
  _not?: Maybe<Student_Submission_Grades_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Student_Submission_Grades_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  editor_id?: Maybe<String_Comparison_Exp>;
  grade?: Maybe<Numeric_Comparison_Exp>;
  grade_content?: Maybe<Jsonb_Comparison_Exp>;
  grader_comment?: Maybe<String_Comparison_Exp>;
  grader_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  student_submission_grade_id?: Maybe<String_Comparison_Exp>;
  student_submission_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "student_submission_grades" */
export enum Student_Submission_Grades_Constraint {
  /** unique or primary key constraint */
  StudentSubmissionGradesPk = 'student_submission_grades_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Student_Submission_Grades_Delete_At_Path_Input = {
  grade_content?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Student_Submission_Grades_Delete_Elem_Input = {
  grade_content?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Student_Submission_Grades_Delete_Key_Input = {
  grade_content?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "student_submission_grades" */
export type Student_Submission_Grades_Inc_Input = {
  grade?: Maybe<Scalars['numeric']>;
};

/** input type for inserting data into table "student_submission_grades" */
export type Student_Submission_Grades_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  editor_id?: Maybe<Scalars['String']>;
  grade?: Maybe<Scalars['numeric']>;
  grade_content?: Maybe<Scalars['jsonb']>;
  grader_comment?: Maybe<Scalars['String']>;
  grader_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_submission_grade_id?: Maybe<Scalars['String']>;
  student_submission_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Student_Submission_Grades_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  editor_id?: Maybe<Scalars['String']>;
  grade?: Maybe<Scalars['numeric']>;
  grader_comment?: Maybe<Scalars['String']>;
  grader_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_submission_grade_id?: Maybe<Scalars['String']>;
  student_submission_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "student_submission_grades" */
export type Student_Submission_Grades_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  editor_id?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  grader_comment?: Maybe<Order_By>;
  grader_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_submission_grade_id?: Maybe<Order_By>;
  student_submission_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Student_Submission_Grades_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  editor_id?: Maybe<Scalars['String']>;
  grade?: Maybe<Scalars['numeric']>;
  grader_comment?: Maybe<Scalars['String']>;
  grader_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_submission_grade_id?: Maybe<Scalars['String']>;
  student_submission_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "student_submission_grades" */
export type Student_Submission_Grades_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  editor_id?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  grader_comment?: Maybe<Order_By>;
  grader_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_submission_grade_id?: Maybe<Order_By>;
  student_submission_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "student_submission_grades" */
export type Student_Submission_Grades_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Student_Submission_Grades>;
};

/** input type for inserting object relation for remote table "student_submission_grades" */
export type Student_Submission_Grades_Obj_Rel_Insert_Input = {
  data: Student_Submission_Grades_Insert_Input;
  on_conflict?: Maybe<Student_Submission_Grades_On_Conflict>;
};

/** on conflict condition type for table "student_submission_grades" */
export type Student_Submission_Grades_On_Conflict = {
  constraint: Student_Submission_Grades_Constraint;
  update_columns: Array<Student_Submission_Grades_Update_Column>;
  where?: Maybe<Student_Submission_Grades_Bool_Exp>;
};

/** ordering options when selecting data from "student_submission_grades" */
export type Student_Submission_Grades_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  editor_id?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  grade_content?: Maybe<Order_By>;
  grader_comment?: Maybe<Order_By>;
  grader_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_submission_grade_id?: Maybe<Order_By>;
  student_submission_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "student_submission_grades" */
export type Student_Submission_Grades_Pk_Columns_Input = {
  student_submission_grade_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Student_Submission_Grades_Prepend_Input = {
  grade_content?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "student_submission_grades" */
export enum Student_Submission_Grades_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EditorId = 'editor_id',
  /** column name */
  Grade = 'grade',
  /** column name */
  GradeContent = 'grade_content',
  /** column name */
  GraderComment = 'grader_comment',
  /** column name */
  GraderId = 'grader_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentSubmissionGradeId = 'student_submission_grade_id',
  /** column name */
  StudentSubmissionId = 'student_submission_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "student_submission_grades" */
export type Student_Submission_Grades_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  editor_id?: Maybe<Scalars['String']>;
  grade?: Maybe<Scalars['numeric']>;
  grade_content?: Maybe<Scalars['jsonb']>;
  grader_comment?: Maybe<Scalars['String']>;
  grader_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_submission_grade_id?: Maybe<Scalars['String']>;
  student_submission_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Student_Submission_Grades_Stddev_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "student_submission_grades" */
export type Student_Submission_Grades_Stddev_Order_By = {
  grade?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Student_Submission_Grades_Stddev_Pop_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "student_submission_grades" */
export type Student_Submission_Grades_Stddev_Pop_Order_By = {
  grade?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Student_Submission_Grades_Stddev_Samp_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "student_submission_grades" */
export type Student_Submission_Grades_Stddev_Samp_Order_By = {
  grade?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Student_Submission_Grades_Sum_Fields = {
  grade?: Maybe<Scalars['numeric']>;
};

/** order by sum() on columns of table "student_submission_grades" */
export type Student_Submission_Grades_Sum_Order_By = {
  grade?: Maybe<Order_By>;
};

/** update columns of table "student_submission_grades" */
export enum Student_Submission_Grades_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EditorId = 'editor_id',
  /** column name */
  Grade = 'grade',
  /** column name */
  GradeContent = 'grade_content',
  /** column name */
  GraderComment = 'grader_comment',
  /** column name */
  GraderId = 'grader_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentSubmissionGradeId = 'student_submission_grade_id',
  /** column name */
  StudentSubmissionId = 'student_submission_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Student_Submission_Grades_Var_Pop_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "student_submission_grades" */
export type Student_Submission_Grades_Var_Pop_Order_By = {
  grade?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Student_Submission_Grades_Var_Samp_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "student_submission_grades" */
export type Student_Submission_Grades_Var_Samp_Order_By = {
  grade?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Student_Submission_Grades_Variance_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "student_submission_grades" */
export type Student_Submission_Grades_Variance_Order_By = {
  grade?: Maybe<Order_By>;
};

/** columns and relationships of "student_submission_scores" */
export type Student_Submission_Scores = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  given_score: Scalars['numeric'];
  notes?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  student_submission: Student_Submissions;
  student_submission_id: Scalars['String'];
  student_submission_score_id: Scalars['String'];
  /** An object relationship */
  teacher: Teachers;
  teacher_id: Scalars['String'];
  total_score: Scalars['numeric'];
};

/** aggregated selection of "student_submission_scores" */
export type Student_Submission_Scores_Aggregate = {
  aggregate?: Maybe<Student_Submission_Scores_Aggregate_Fields>;
  nodes: Array<Student_Submission_Scores>;
};

/** aggregate fields of "student_submission_scores" */
export type Student_Submission_Scores_Aggregate_Fields = {
  avg?: Maybe<Student_Submission_Scores_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Student_Submission_Scores_Max_Fields>;
  min?: Maybe<Student_Submission_Scores_Min_Fields>;
  stddev?: Maybe<Student_Submission_Scores_Stddev_Fields>;
  stddev_pop?: Maybe<Student_Submission_Scores_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Student_Submission_Scores_Stddev_Samp_Fields>;
  sum?: Maybe<Student_Submission_Scores_Sum_Fields>;
  var_pop?: Maybe<Student_Submission_Scores_Var_Pop_Fields>;
  var_samp?: Maybe<Student_Submission_Scores_Var_Samp_Fields>;
  variance?: Maybe<Student_Submission_Scores_Variance_Fields>;
};


/** aggregate fields of "student_submission_scores" */
export type Student_Submission_Scores_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Student_Submission_Scores_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "student_submission_scores" */
export type Student_Submission_Scores_Aggregate_Order_By = {
  avg?: Maybe<Student_Submission_Scores_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Student_Submission_Scores_Max_Order_By>;
  min?: Maybe<Student_Submission_Scores_Min_Order_By>;
  stddev?: Maybe<Student_Submission_Scores_Stddev_Order_By>;
  stddev_pop?: Maybe<Student_Submission_Scores_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Student_Submission_Scores_Stddev_Samp_Order_By>;
  sum?: Maybe<Student_Submission_Scores_Sum_Order_By>;
  var_pop?: Maybe<Student_Submission_Scores_Var_Pop_Order_By>;
  var_samp?: Maybe<Student_Submission_Scores_Var_Samp_Order_By>;
  variance?: Maybe<Student_Submission_Scores_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "student_submission_scores" */
export type Student_Submission_Scores_Arr_Rel_Insert_Input = {
  data: Array<Student_Submission_Scores_Insert_Input>;
  on_conflict?: Maybe<Student_Submission_Scores_On_Conflict>;
};

/** aggregate avg on columns */
export type Student_Submission_Scores_Avg_Fields = {
  given_score?: Maybe<Scalars['Float']>;
  total_score?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "student_submission_scores" */
export type Student_Submission_Scores_Avg_Order_By = {
  given_score?: Maybe<Order_By>;
  total_score?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "student_submission_scores". All fields are combined with a logical 'AND'. */
export type Student_Submission_Scores_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Student_Submission_Scores_Bool_Exp>>>;
  _not?: Maybe<Student_Submission_Scores_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Student_Submission_Scores_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  given_score?: Maybe<Numeric_Comparison_Exp>;
  notes?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student_submission?: Maybe<Student_Submissions_Bool_Exp>;
  student_submission_id?: Maybe<String_Comparison_Exp>;
  student_submission_score_id?: Maybe<String_Comparison_Exp>;
  teacher?: Maybe<Teachers_Bool_Exp>;
  teacher_id?: Maybe<String_Comparison_Exp>;
  total_score?: Maybe<Numeric_Comparison_Exp>;
};

/** unique or primary key constraints on table "student_submission_scores" */
export enum Student_Submission_Scores_Constraint {
  /** unique or primary key constraint */
  StudentSubmissionScoresPk = 'student_submission_scores_pk'
}

/** input type for incrementing integer column in table "student_submission_scores" */
export type Student_Submission_Scores_Inc_Input = {
  given_score?: Maybe<Scalars['numeric']>;
  total_score?: Maybe<Scalars['numeric']>;
};

/** input type for inserting data into table "student_submission_scores" */
export type Student_Submission_Scores_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  given_score?: Maybe<Scalars['numeric']>;
  notes?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_submission?: Maybe<Student_Submissions_Obj_Rel_Insert_Input>;
  student_submission_id?: Maybe<Scalars['String']>;
  student_submission_score_id?: Maybe<Scalars['String']>;
  teacher?: Maybe<Teachers_Obj_Rel_Insert_Input>;
  teacher_id?: Maybe<Scalars['String']>;
  total_score?: Maybe<Scalars['numeric']>;
};

/** aggregate max on columns */
export type Student_Submission_Scores_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  given_score?: Maybe<Scalars['numeric']>;
  notes?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_submission_id?: Maybe<Scalars['String']>;
  student_submission_score_id?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['String']>;
  total_score?: Maybe<Scalars['numeric']>;
};

/** order by max() on columns of table "student_submission_scores" */
export type Student_Submission_Scores_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  given_score?: Maybe<Order_By>;
  notes?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_submission_id?: Maybe<Order_By>;
  student_submission_score_id?: Maybe<Order_By>;
  teacher_id?: Maybe<Order_By>;
  total_score?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Student_Submission_Scores_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  given_score?: Maybe<Scalars['numeric']>;
  notes?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_submission_id?: Maybe<Scalars['String']>;
  student_submission_score_id?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['String']>;
  total_score?: Maybe<Scalars['numeric']>;
};

/** order by min() on columns of table "student_submission_scores" */
export type Student_Submission_Scores_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  given_score?: Maybe<Order_By>;
  notes?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_submission_id?: Maybe<Order_By>;
  student_submission_score_id?: Maybe<Order_By>;
  teacher_id?: Maybe<Order_By>;
  total_score?: Maybe<Order_By>;
};

/** response of any mutation on the table "student_submission_scores" */
export type Student_Submission_Scores_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Student_Submission_Scores>;
};

/** input type for inserting object relation for remote table "student_submission_scores" */
export type Student_Submission_Scores_Obj_Rel_Insert_Input = {
  data: Student_Submission_Scores_Insert_Input;
  on_conflict?: Maybe<Student_Submission_Scores_On_Conflict>;
};

/** on conflict condition type for table "student_submission_scores" */
export type Student_Submission_Scores_On_Conflict = {
  constraint: Student_Submission_Scores_Constraint;
  update_columns: Array<Student_Submission_Scores_Update_Column>;
  where?: Maybe<Student_Submission_Scores_Bool_Exp>;
};

/** ordering options when selecting data from "student_submission_scores" */
export type Student_Submission_Scores_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  given_score?: Maybe<Order_By>;
  notes?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_submission?: Maybe<Student_Submissions_Order_By>;
  student_submission_id?: Maybe<Order_By>;
  student_submission_score_id?: Maybe<Order_By>;
  teacher?: Maybe<Teachers_Order_By>;
  teacher_id?: Maybe<Order_By>;
  total_score?: Maybe<Order_By>;
};

/** primary key columns input for table: "student_submission_scores" */
export type Student_Submission_Scores_Pk_Columns_Input = {
  student_submission_score_id: Scalars['String'];
};

/** select columns of table "student_submission_scores" */
export enum Student_Submission_Scores_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  GivenScore = 'given_score',
  /** column name */
  Notes = 'notes',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentSubmissionId = 'student_submission_id',
  /** column name */
  StudentSubmissionScoreId = 'student_submission_score_id',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  TotalScore = 'total_score'
}

/** input type for updating data in table "student_submission_scores" */
export type Student_Submission_Scores_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  given_score?: Maybe<Scalars['numeric']>;
  notes?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_submission_id?: Maybe<Scalars['String']>;
  student_submission_score_id?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['String']>;
  total_score?: Maybe<Scalars['numeric']>;
};

/** aggregate stddev on columns */
export type Student_Submission_Scores_Stddev_Fields = {
  given_score?: Maybe<Scalars['Float']>;
  total_score?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "student_submission_scores" */
export type Student_Submission_Scores_Stddev_Order_By = {
  given_score?: Maybe<Order_By>;
  total_score?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Student_Submission_Scores_Stddev_Pop_Fields = {
  given_score?: Maybe<Scalars['Float']>;
  total_score?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "student_submission_scores" */
export type Student_Submission_Scores_Stddev_Pop_Order_By = {
  given_score?: Maybe<Order_By>;
  total_score?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Student_Submission_Scores_Stddev_Samp_Fields = {
  given_score?: Maybe<Scalars['Float']>;
  total_score?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "student_submission_scores" */
export type Student_Submission_Scores_Stddev_Samp_Order_By = {
  given_score?: Maybe<Order_By>;
  total_score?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Student_Submission_Scores_Sum_Fields = {
  given_score?: Maybe<Scalars['numeric']>;
  total_score?: Maybe<Scalars['numeric']>;
};

/** order by sum() on columns of table "student_submission_scores" */
export type Student_Submission_Scores_Sum_Order_By = {
  given_score?: Maybe<Order_By>;
  total_score?: Maybe<Order_By>;
};

/** update columns of table "student_submission_scores" */
export enum Student_Submission_Scores_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  GivenScore = 'given_score',
  /** column name */
  Notes = 'notes',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentSubmissionId = 'student_submission_id',
  /** column name */
  StudentSubmissionScoreId = 'student_submission_score_id',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  TotalScore = 'total_score'
}

/** aggregate var_pop on columns */
export type Student_Submission_Scores_Var_Pop_Fields = {
  given_score?: Maybe<Scalars['Float']>;
  total_score?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "student_submission_scores" */
export type Student_Submission_Scores_Var_Pop_Order_By = {
  given_score?: Maybe<Order_By>;
  total_score?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Student_Submission_Scores_Var_Samp_Fields = {
  given_score?: Maybe<Scalars['Float']>;
  total_score?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "student_submission_scores" */
export type Student_Submission_Scores_Var_Samp_Order_By = {
  given_score?: Maybe<Order_By>;
  total_score?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Student_Submission_Scores_Variance_Fields = {
  given_score?: Maybe<Scalars['Float']>;
  total_score?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "student_submission_scores" */
export type Student_Submission_Scores_Variance_Order_By = {
  given_score?: Maybe<Order_By>;
  total_score?: Maybe<Order_By>;
};

/** columns and relationships of "student_submissions" */
export type Student_Submissions = {
  assignment_id: Scalars['String'];
  attachment_names?: Maybe<Scalars['_text']>;
  attachment_urls?: Maybe<Scalars['_text']>;
  check_list?: Maybe<Scalars['jsonb']>;
  content?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  deleted_by?: Maybe<Scalars['String']>;
  editor_id?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  student_submission_grade_id?: Maybe<Scalars['String']>;
  student_submission_id: Scalars['String'];
  /** An array relationship */
  student_submission_scores: Array<Student_Submission_Scores>;
  /** An aggregated array relationship */
  student_submission_scores_aggregate: Student_Submission_Scores_Aggregate;
  study_plan_item_id: Scalars['String'];
  submission_content?: Maybe<Scalars['jsonb']>;
  /** An object relationship */
  topic: Topics;
  topic_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "student_submissions" */
export type Student_SubmissionsCheck_ListArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "student_submissions" */
export type Student_SubmissionsStudent_Submission_ScoresArgs = {
  distinct_on?: Maybe<Array<Student_Submission_Scores_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submission_Scores_Order_By>>;
  where?: Maybe<Student_Submission_Scores_Bool_Exp>;
};


/** columns and relationships of "student_submissions" */
export type Student_SubmissionsStudent_Submission_Scores_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Submission_Scores_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submission_Scores_Order_By>>;
  where?: Maybe<Student_Submission_Scores_Bool_Exp>;
};


/** columns and relationships of "student_submissions" */
export type Student_SubmissionsSubmission_ContentArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "student_submissions" */
export type Student_Submissions_Aggregate = {
  aggregate?: Maybe<Student_Submissions_Aggregate_Fields>;
  nodes: Array<Student_Submissions>;
};

/** aggregate fields of "student_submissions" */
export type Student_Submissions_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Student_Submissions_Max_Fields>;
  min?: Maybe<Student_Submissions_Min_Fields>;
};


/** aggregate fields of "student_submissions" */
export type Student_Submissions_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Student_Submissions_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "student_submissions" */
export type Student_Submissions_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Student_Submissions_Max_Order_By>;
  min?: Maybe<Student_Submissions_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Student_Submissions_Append_Input = {
  check_list?: Maybe<Scalars['jsonb']>;
  submission_content?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "student_submissions" */
export type Student_Submissions_Arr_Rel_Insert_Input = {
  data: Array<Student_Submissions_Insert_Input>;
  on_conflict?: Maybe<Student_Submissions_On_Conflict>;
};

/** Boolean expression to filter rows from the table "student_submissions". All fields are combined with a logical 'AND'. */
export type Student_Submissions_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Student_Submissions_Bool_Exp>>>;
  _not?: Maybe<Student_Submissions_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Student_Submissions_Bool_Exp>>>;
  assignment_id?: Maybe<String_Comparison_Exp>;
  attachment_names?: Maybe<_Text_Comparison_Exp>;
  attachment_urls?: Maybe<_Text_Comparison_Exp>;
  check_list?: Maybe<Jsonb_Comparison_Exp>;
  content?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_by?: Maybe<String_Comparison_Exp>;
  editor_id?: Maybe<String_Comparison_Exp>;
  note?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  student_submission_grade_id?: Maybe<String_Comparison_Exp>;
  student_submission_id?: Maybe<String_Comparison_Exp>;
  student_submission_scores?: Maybe<Student_Submission_Scores_Bool_Exp>;
  study_plan_item_id?: Maybe<String_Comparison_Exp>;
  submission_content?: Maybe<Jsonb_Comparison_Exp>;
  topic?: Maybe<Topics_Bool_Exp>;
  topic_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "student_submissions" */
export enum Student_Submissions_Constraint {
  /** unique or primary key constraint */
  StudentSubmissionsPk = 'student_submissions_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Student_Submissions_Delete_At_Path_Input = {
  check_list?: Maybe<Array<Maybe<Scalars['String']>>>;
  submission_content?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Student_Submissions_Delete_Elem_Input = {
  check_list?: Maybe<Scalars['Int']>;
  submission_content?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Student_Submissions_Delete_Key_Input = {
  check_list?: Maybe<Scalars['String']>;
  submission_content?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "student_submissions" */
export type Student_Submissions_Insert_Input = {
  assignment_id?: Maybe<Scalars['String']>;
  attachment_names?: Maybe<Scalars['_text']>;
  attachment_urls?: Maybe<Scalars['_text']>;
  check_list?: Maybe<Scalars['jsonb']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  deleted_by?: Maybe<Scalars['String']>;
  editor_id?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  student_submission_grade_id?: Maybe<Scalars['String']>;
  student_submission_id?: Maybe<Scalars['String']>;
  student_submission_scores?: Maybe<Student_Submission_Scores_Arr_Rel_Insert_Input>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  submission_content?: Maybe<Scalars['jsonb']>;
  topic?: Maybe<Topics_Obj_Rel_Insert_Input>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Student_Submissions_Max_Fields = {
  assignment_id?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  deleted_by?: Maybe<Scalars['String']>;
  editor_id?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  student_submission_grade_id?: Maybe<Scalars['String']>;
  student_submission_id?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "student_submissions" */
export type Student_Submissions_Max_Order_By = {
  assignment_id?: Maybe<Order_By>;
  content?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  deleted_by?: Maybe<Order_By>;
  editor_id?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  student_submission_grade_id?: Maybe<Order_By>;
  student_submission_id?: Maybe<Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Student_Submissions_Min_Fields = {
  assignment_id?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  deleted_by?: Maybe<Scalars['String']>;
  editor_id?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  student_submission_grade_id?: Maybe<Scalars['String']>;
  student_submission_id?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "student_submissions" */
export type Student_Submissions_Min_Order_By = {
  assignment_id?: Maybe<Order_By>;
  content?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  deleted_by?: Maybe<Order_By>;
  editor_id?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  student_submission_grade_id?: Maybe<Order_By>;
  student_submission_id?: Maybe<Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "student_submissions" */
export type Student_Submissions_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Student_Submissions>;
};

/** input type for inserting object relation for remote table "student_submissions" */
export type Student_Submissions_Obj_Rel_Insert_Input = {
  data: Student_Submissions_Insert_Input;
  on_conflict?: Maybe<Student_Submissions_On_Conflict>;
};

/** on conflict condition type for table "student_submissions" */
export type Student_Submissions_On_Conflict = {
  constraint: Student_Submissions_Constraint;
  update_columns: Array<Student_Submissions_Update_Column>;
  where?: Maybe<Student_Submissions_Bool_Exp>;
};

/** ordering options when selecting data from "student_submissions" */
export type Student_Submissions_Order_By = {
  assignment_id?: Maybe<Order_By>;
  attachment_names?: Maybe<Order_By>;
  attachment_urls?: Maybe<Order_By>;
  check_list?: Maybe<Order_By>;
  content?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  deleted_by?: Maybe<Order_By>;
  editor_id?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  student_submission_grade_id?: Maybe<Order_By>;
  student_submission_id?: Maybe<Order_By>;
  student_submission_scores_aggregate?: Maybe<Student_Submission_Scores_Aggregate_Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  submission_content?: Maybe<Order_By>;
  topic?: Maybe<Topics_Order_By>;
  topic_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "student_submissions" */
export type Student_Submissions_Pk_Columns_Input = {
  student_submission_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Student_Submissions_Prepend_Input = {
  check_list?: Maybe<Scalars['jsonb']>;
  submission_content?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "student_submissions" */
export enum Student_Submissions_Select_Column {
  /** column name */
  AssignmentId = 'assignment_id',
  /** column name */
  AttachmentNames = 'attachment_names',
  /** column name */
  AttachmentUrls = 'attachment_urls',
  /** column name */
  CheckList = 'check_list',
  /** column name */
  Content = 'content',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DeletedBy = 'deleted_by',
  /** column name */
  EditorId = 'editor_id',
  /** column name */
  Note = 'note',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudentSubmissionGradeId = 'student_submission_grade_id',
  /** column name */
  StudentSubmissionId = 'student_submission_id',
  /** column name */
  StudyPlanItemId = 'study_plan_item_id',
  /** column name */
  SubmissionContent = 'submission_content',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "student_submissions" */
export type Student_Submissions_Set_Input = {
  assignment_id?: Maybe<Scalars['String']>;
  attachment_names?: Maybe<Scalars['_text']>;
  attachment_urls?: Maybe<Scalars['_text']>;
  check_list?: Maybe<Scalars['jsonb']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  deleted_by?: Maybe<Scalars['String']>;
  editor_id?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  student_submission_grade_id?: Maybe<Scalars['String']>;
  student_submission_id?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  submission_content?: Maybe<Scalars['jsonb']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "student_submissions" */
export enum Student_Submissions_Update_Column {
  /** column name */
  AssignmentId = 'assignment_id',
  /** column name */
  AttachmentNames = 'attachment_names',
  /** column name */
  AttachmentUrls = 'attachment_urls',
  /** column name */
  CheckList = 'check_list',
  /** column name */
  Content = 'content',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DeletedBy = 'deleted_by',
  /** column name */
  EditorId = 'editor_id',
  /** column name */
  Note = 'note',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudentSubmissionGradeId = 'student_submission_grade_id',
  /** column name */
  StudentSubmissionId = 'student_submission_id',
  /** column name */
  StudyPlanItemId = 'study_plan_item_id',
  /** column name */
  SubmissionContent = 'submission_content',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "student_subscriptions" */
export type Student_Subscriptions = {
  amount?: Maybe<Scalars['numeric']>;
  /** An array relationship */
  class_members: Array<Class_Members>;
  /** An aggregated array relationship */
  class_members_aggregate: Class_Members_Aggregate;
  country?: Maybe<Scalars['String']>;
  coupon_amount?: Maybe<Scalars['numeric']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_time: Scalars['timestamptz'];
  extend_from?: Maybe<Scalars['String']>;
  grades?: Maybe<Scalars['_int4']>;
  /** An object relationship */
  plan?: Maybe<Plans>;
  plan_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  start_time: Scalars['timestamptz'];
  status: Scalars['String'];
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  student_order_id?: Maybe<Scalars['Int']>;
  student_subscription_id: Scalars['String'];
  subject?: Maybe<Scalars['_text']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user?: Maybe<Users>;
};


/** columns and relationships of "student_subscriptions" */
export type Student_SubscriptionsClass_MembersArgs = {
  distinct_on?: Maybe<Array<Class_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Members_Order_By>>;
  where?: Maybe<Class_Members_Bool_Exp>;
};


/** columns and relationships of "student_subscriptions" */
export type Student_SubscriptionsClass_Members_AggregateArgs = {
  distinct_on?: Maybe<Array<Class_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Members_Order_By>>;
  where?: Maybe<Class_Members_Bool_Exp>;
};

/** aggregated selection of "student_subscriptions" */
export type Student_Subscriptions_Aggregate = {
  aggregate?: Maybe<Student_Subscriptions_Aggregate_Fields>;
  nodes: Array<Student_Subscriptions>;
};

/** aggregate fields of "student_subscriptions" */
export type Student_Subscriptions_Aggregate_Fields = {
  avg?: Maybe<Student_Subscriptions_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Student_Subscriptions_Max_Fields>;
  min?: Maybe<Student_Subscriptions_Min_Fields>;
  stddev?: Maybe<Student_Subscriptions_Stddev_Fields>;
  stddev_pop?: Maybe<Student_Subscriptions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Student_Subscriptions_Stddev_Samp_Fields>;
  sum?: Maybe<Student_Subscriptions_Sum_Fields>;
  var_pop?: Maybe<Student_Subscriptions_Var_Pop_Fields>;
  var_samp?: Maybe<Student_Subscriptions_Var_Samp_Fields>;
  variance?: Maybe<Student_Subscriptions_Variance_Fields>;
};


/** aggregate fields of "student_subscriptions" */
export type Student_Subscriptions_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Student_Subscriptions_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "student_subscriptions" */
export type Student_Subscriptions_Aggregate_Order_By = {
  avg?: Maybe<Student_Subscriptions_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Student_Subscriptions_Max_Order_By>;
  min?: Maybe<Student_Subscriptions_Min_Order_By>;
  stddev?: Maybe<Student_Subscriptions_Stddev_Order_By>;
  stddev_pop?: Maybe<Student_Subscriptions_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Student_Subscriptions_Stddev_Samp_Order_By>;
  sum?: Maybe<Student_Subscriptions_Sum_Order_By>;
  var_pop?: Maybe<Student_Subscriptions_Var_Pop_Order_By>;
  var_samp?: Maybe<Student_Subscriptions_Var_Samp_Order_By>;
  variance?: Maybe<Student_Subscriptions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "student_subscriptions" */
export type Student_Subscriptions_Arr_Rel_Insert_Input = {
  data: Array<Student_Subscriptions_Insert_Input>;
  on_conflict?: Maybe<Student_Subscriptions_On_Conflict>;
};

/** aggregate avg on columns */
export type Student_Subscriptions_Avg_Fields = {
  amount?: Maybe<Scalars['Float']>;
  coupon_amount?: Maybe<Scalars['Float']>;
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Avg_Order_By = {
  amount?: Maybe<Order_By>;
  coupon_amount?: Maybe<Order_By>;
  student_order_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "student_subscriptions". All fields are combined with a logical 'AND'. */
export type Student_Subscriptions_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Student_Subscriptions_Bool_Exp>>>;
  _not?: Maybe<Student_Subscriptions_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Student_Subscriptions_Bool_Exp>>>;
  amount?: Maybe<Numeric_Comparison_Exp>;
  class_members?: Maybe<Class_Members_Bool_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  coupon_amount?: Maybe<Numeric_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  end_time?: Maybe<Timestamptz_Comparison_Exp>;
  extend_from?: Maybe<String_Comparison_Exp>;
  grades?: Maybe<_Int4_Comparison_Exp>;
  plan?: Maybe<Plans_Bool_Exp>;
  plan_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  start_time?: Maybe<Timestamptz_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  student_order_id?: Maybe<Int_Comparison_Exp>;
  student_subscription_id?: Maybe<String_Comparison_Exp>;
  subject?: Maybe<_Text_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "student_subscriptions" */
export enum Student_Subscriptions_Constraint {
  /** unique or primary key constraint */
  StudentSubscriptionsPk = 'student_subscriptions_pk'
}

/** input type for incrementing integer column in table "student_subscriptions" */
export type Student_Subscriptions_Inc_Input = {
  amount?: Maybe<Scalars['numeric']>;
  coupon_amount?: Maybe<Scalars['numeric']>;
  student_order_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "student_subscriptions" */
export type Student_Subscriptions_Insert_Input = {
  amount?: Maybe<Scalars['numeric']>;
  class_members?: Maybe<Class_Members_Arr_Rel_Insert_Input>;
  country?: Maybe<Scalars['String']>;
  coupon_amount?: Maybe<Scalars['numeric']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  extend_from?: Maybe<Scalars['String']>;
  grades?: Maybe<Scalars['_int4']>;
  plan?: Maybe<Plans_Obj_Rel_Insert_Input>;
  plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  student_order_id?: Maybe<Scalars['Int']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['_text']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Student_Subscriptions_Max_Fields = {
  amount?: Maybe<Scalars['numeric']>;
  country?: Maybe<Scalars['String']>;
  coupon_amount?: Maybe<Scalars['numeric']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  extend_from?: Maybe<Scalars['String']>;
  plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  student_order_id?: Maybe<Scalars['Int']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Max_Order_By = {
  amount?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  coupon_amount?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_time?: Maybe<Order_By>;
  extend_from?: Maybe<Order_By>;
  plan_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_time?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  student_order_id?: Maybe<Order_By>;
  student_subscription_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Student_Subscriptions_Min_Fields = {
  amount?: Maybe<Scalars['numeric']>;
  country?: Maybe<Scalars['String']>;
  coupon_amount?: Maybe<Scalars['numeric']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  extend_from?: Maybe<Scalars['String']>;
  plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  student_order_id?: Maybe<Scalars['Int']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Min_Order_By = {
  amount?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  coupon_amount?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_time?: Maybe<Order_By>;
  extend_from?: Maybe<Order_By>;
  plan_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_time?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  student_order_id?: Maybe<Order_By>;
  student_subscription_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "student_subscriptions" */
export type Student_Subscriptions_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Student_Subscriptions>;
};

/** input type for inserting object relation for remote table "student_subscriptions" */
export type Student_Subscriptions_Obj_Rel_Insert_Input = {
  data: Student_Subscriptions_Insert_Input;
  on_conflict?: Maybe<Student_Subscriptions_On_Conflict>;
};

/** on conflict condition type for table "student_subscriptions" */
export type Student_Subscriptions_On_Conflict = {
  constraint: Student_Subscriptions_Constraint;
  update_columns: Array<Student_Subscriptions_Update_Column>;
  where?: Maybe<Student_Subscriptions_Bool_Exp>;
};

/** ordering options when selecting data from "student_subscriptions" */
export type Student_Subscriptions_Order_By = {
  amount?: Maybe<Order_By>;
  class_members_aggregate?: Maybe<Class_Members_Aggregate_Order_By>;
  country?: Maybe<Order_By>;
  coupon_amount?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  end_time?: Maybe<Order_By>;
  extend_from?: Maybe<Order_By>;
  grades?: Maybe<Order_By>;
  plan?: Maybe<Plans_Order_By>;
  plan_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_time?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  student_order_id?: Maybe<Order_By>;
  student_subscription_id?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
};

/** primary key columns input for table: "student_subscriptions" */
export type Student_Subscriptions_Pk_Columns_Input = {
  student_subscription_id: Scalars['String'];
};

/** select columns of table "student_subscriptions" */
export enum Student_Subscriptions_Select_Column {
  /** column name */
  Amount = 'amount',
  /** column name */
  Country = 'country',
  /** column name */
  CouponAmount = 'coupon_amount',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndTime = 'end_time',
  /** column name */
  ExtendFrom = 'extend_from',
  /** column name */
  Grades = 'grades',
  /** column name */
  PlanId = 'plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartTime = 'start_time',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudentOrderId = 'student_order_id',
  /** column name */
  StudentSubscriptionId = 'student_subscription_id',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "student_subscriptions" */
export type Student_Subscriptions_Set_Input = {
  amount?: Maybe<Scalars['numeric']>;
  country?: Maybe<Scalars['String']>;
  coupon_amount?: Maybe<Scalars['numeric']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  extend_from?: Maybe<Scalars['String']>;
  grades?: Maybe<Scalars['_int4']>;
  plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  student_order_id?: Maybe<Scalars['Int']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['_text']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Student_Subscriptions_Stddev_Fields = {
  amount?: Maybe<Scalars['Float']>;
  coupon_amount?: Maybe<Scalars['Float']>;
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Stddev_Order_By = {
  amount?: Maybe<Order_By>;
  coupon_amount?: Maybe<Order_By>;
  student_order_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Student_Subscriptions_Stddev_Pop_Fields = {
  amount?: Maybe<Scalars['Float']>;
  coupon_amount?: Maybe<Scalars['Float']>;
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Stddev_Pop_Order_By = {
  amount?: Maybe<Order_By>;
  coupon_amount?: Maybe<Order_By>;
  student_order_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Student_Subscriptions_Stddev_Samp_Fields = {
  amount?: Maybe<Scalars['Float']>;
  coupon_amount?: Maybe<Scalars['Float']>;
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Stddev_Samp_Order_By = {
  amount?: Maybe<Order_By>;
  coupon_amount?: Maybe<Order_By>;
  student_order_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Student_Subscriptions_Sum_Fields = {
  amount?: Maybe<Scalars['numeric']>;
  coupon_amount?: Maybe<Scalars['numeric']>;
  student_order_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Sum_Order_By = {
  amount?: Maybe<Order_By>;
  coupon_amount?: Maybe<Order_By>;
  student_order_id?: Maybe<Order_By>;
};

/** update columns of table "student_subscriptions" */
export enum Student_Subscriptions_Update_Column {
  /** column name */
  Amount = 'amount',
  /** column name */
  Country = 'country',
  /** column name */
  CouponAmount = 'coupon_amount',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndTime = 'end_time',
  /** column name */
  ExtendFrom = 'extend_from',
  /** column name */
  Grades = 'grades',
  /** column name */
  PlanId = 'plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartTime = 'start_time',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudentOrderId = 'student_order_id',
  /** column name */
  StudentSubscriptionId = 'student_subscription_id',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Student_Subscriptions_Var_Pop_Fields = {
  amount?: Maybe<Scalars['Float']>;
  coupon_amount?: Maybe<Scalars['Float']>;
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Var_Pop_Order_By = {
  amount?: Maybe<Order_By>;
  coupon_amount?: Maybe<Order_By>;
  student_order_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Student_Subscriptions_Var_Samp_Fields = {
  amount?: Maybe<Scalars['Float']>;
  coupon_amount?: Maybe<Scalars['Float']>;
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Var_Samp_Order_By = {
  amount?: Maybe<Order_By>;
  coupon_amount?: Maybe<Order_By>;
  student_order_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Student_Subscriptions_Variance_Fields = {
  amount?: Maybe<Scalars['Float']>;
  coupon_amount?: Maybe<Scalars['Float']>;
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Variance_Order_By = {
  amount?: Maybe<Order_By>;
  coupon_amount?: Maybe<Order_By>;
  student_order_id?: Maybe<Order_By>;
};

/** columns and relationships of "students" */
export type Students = {
  additional_data?: Maybe<Scalars['jsonb']>;
  /** students need to pay before this day */
  billing_date: Scalars['timestamptz'];
  /** An array relationship */
  billing_histories: Array<Billing_Histories>;
  /** An aggregated array relationship */
  billing_histories_aggregate: Billing_Histories_Aggregate;
  biography?: Maybe<Scalars['String']>;
  birthday?: Maybe<Scalars['date']>;
  /** An array relationship */
  class_members: Array<Class_Members>;
  /** An aggregated array relationship */
  class_members_aggregate: Class_Members_Aggregate;
  created_at: Scalars['timestamptz'];
  current_grade?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  enrollment_status: Scalars['String'];
  /** An array relationship */
  hub_tours: Array<Hub_Tours>;
  /** An aggregated array relationship */
  hub_tours_aggregate: Hub_Tours_Aggregate;
  /** An array relationship */
  ios_transactions: Array<Ios_Transactions>;
  /** An aggregated array relationship */
  ios_transactions_aggregate: Ios_Transactions_Aggregate;
  /** An array relationship */
  lesson_report_details: Array<Lesson_Report_Details>;
  /** An aggregated array relationship */
  lesson_report_details_aggregate: Lesson_Report_Details_Aggregate;
  on_trial: Scalars['Boolean'];
  previous_grade?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  school?: Maybe<Schools>;
  school_id?: Maybe<Scalars['Int']>;
  /** An array relationship */
  shuffled_quiz_sets: Array<Shuffled_Quiz_Sets>;
  /** An aggregated array relationship */
  shuffled_quiz_sets_aggregate: Shuffled_Quiz_Sets_Aggregate;
  /** An array relationship */
  student_assignments: Array<Student_Assignments>;
  /** An aggregated array relationship */
  student_assignments_aggregate: Student_Assignments_Aggregate;
  /** An array relationship */
  student_comments: Array<Student_Comments>;
  /** An aggregated array relationship */
  student_comments_aggregate: Student_Comments_Aggregate;
  /** An array relationship */
  student_event_logs: Array<Student_Event_Logs>;
  /** An aggregated array relationship */
  student_event_logs_aggregate: Student_Event_Logs_Aggregate;
  student_external_id?: Maybe<Scalars['String']>;
  student_id: Scalars['String'];
  /** An array relationship */
  student_learning_time_by_dailies: Array<Student_Learning_Time_By_Daily>;
  /** An aggregated array relationship */
  student_learning_time_by_dailies_aggregate: Student_Learning_Time_By_Daily_Aggregate;
  student_note: Scalars['String'];
  /** An array relationship */
  student_questions: Array<Student_Questions>;
  /** An aggregated array relationship */
  student_questions_aggregate: Student_Questions_Aggregate;
  /** An object relationship */
  student_statistic?: Maybe<Student_Statistics>;
  /** An array relationship */
  student_submissions: Array<Student_Submissions>;
  /** An aggregated array relationship */
  student_submissions_aggregate: Student_Submissions_Aggregate;
  /** An array relationship */
  student_subscriptions: Array<Student_Subscriptions>;
  /** An aggregated array relationship */
  student_subscriptions_aggregate: Student_Subscriptions_Aggregate;
  /** An array relationship */
  students_assigned_coaches: Array<Students_Assigned_Coaches>;
  /** An aggregated array relationship */
  students_assigned_coaches_aggregate: Students_Assigned_Coaches_Aggregate;
  /** An array relationship */
  students_learning_objectives_completenesses: Array<Students_Learning_Objectives_Completeness>;
  /** An aggregated array relationship */
  students_learning_objectives_completenesses_aggregate: Students_Learning_Objectives_Completeness_Aggregate;
  /** An array relationship */
  students_learning_objectives_records: Array<Students_Learning_Objectives_Records>;
  /** An aggregated array relationship */
  students_learning_objectives_records_aggregate: Students_Learning_Objectives_Records_Aggregate;
  /** An array relationship */
  students_study_plans_weeklies: Array<Students_Study_Plans_Weekly>;
  /** An aggregated array relationship */
  students_study_plans_weeklies_aggregate: Students_Study_Plans_Weekly_Aggregate;
  /** An array relationship */
  students_topics_overdues: Array<Students_Topics_Overdue>;
  /** An aggregated array relationship */
  students_topics_overdues_aggregate: Students_Topics_Overdue_Aggregate;
  target_university?: Maybe<Scalars['String']>;
  total_question_limit?: Maybe<Scalars['smallint']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user?: Maybe<Users>;
};


/** columns and relationships of "students" */
export type StudentsAdditional_DataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "students" */
export type StudentsBilling_HistoriesArgs = {
  distinct_on?: Maybe<Array<Billing_Histories_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Billing_Histories_Order_By>>;
  where?: Maybe<Billing_Histories_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsBilling_Histories_AggregateArgs = {
  distinct_on?: Maybe<Array<Billing_Histories_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Billing_Histories_Order_By>>;
  where?: Maybe<Billing_Histories_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsClass_MembersArgs = {
  distinct_on?: Maybe<Array<Class_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Members_Order_By>>;
  where?: Maybe<Class_Members_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsClass_Members_AggregateArgs = {
  distinct_on?: Maybe<Array<Class_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Members_Order_By>>;
  where?: Maybe<Class_Members_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsHub_ToursArgs = {
  distinct_on?: Maybe<Array<Hub_Tours_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Hub_Tours_Order_By>>;
  where?: Maybe<Hub_Tours_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsHub_Tours_AggregateArgs = {
  distinct_on?: Maybe<Array<Hub_Tours_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Hub_Tours_Order_By>>;
  where?: Maybe<Hub_Tours_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsIos_TransactionsArgs = {
  distinct_on?: Maybe<Array<Ios_Transactions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Ios_Transactions_Order_By>>;
  where?: Maybe<Ios_Transactions_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsIos_Transactions_AggregateArgs = {
  distinct_on?: Maybe<Array<Ios_Transactions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Ios_Transactions_Order_By>>;
  where?: Maybe<Ios_Transactions_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsLesson_Report_DetailsArgs = {
  distinct_on?: Maybe<Array<Lesson_Report_Details_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Report_Details_Order_By>>;
  where?: Maybe<Lesson_Report_Details_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsLesson_Report_Details_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Report_Details_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Report_Details_Order_By>>;
  where?: Maybe<Lesson_Report_Details_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsShuffled_Quiz_SetsArgs = {
  distinct_on?: Maybe<Array<Shuffled_Quiz_Sets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Shuffled_Quiz_Sets_Order_By>>;
  where?: Maybe<Shuffled_Quiz_Sets_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsShuffled_Quiz_Sets_AggregateArgs = {
  distinct_on?: Maybe<Array<Shuffled_Quiz_Sets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Shuffled_Quiz_Sets_Order_By>>;
  where?: Maybe<Shuffled_Quiz_Sets_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudent_AssignmentsArgs = {
  distinct_on?: Maybe<Array<Student_Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Assignments_Order_By>>;
  where?: Maybe<Student_Assignments_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudent_Assignments_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Assignments_Order_By>>;
  where?: Maybe<Student_Assignments_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudent_CommentsArgs = {
  distinct_on?: Maybe<Array<Student_Comments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Comments_Order_By>>;
  where?: Maybe<Student_Comments_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudent_Comments_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Comments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Comments_Order_By>>;
  where?: Maybe<Student_Comments_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudent_Event_LogsArgs = {
  distinct_on?: Maybe<Array<Student_Event_Logs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Event_Logs_Order_By>>;
  where?: Maybe<Student_Event_Logs_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudent_Event_Logs_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Event_Logs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Event_Logs_Order_By>>;
  where?: Maybe<Student_Event_Logs_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudent_Learning_Time_By_DailiesArgs = {
  distinct_on?: Maybe<Array<Student_Learning_Time_By_Daily_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Learning_Time_By_Daily_Order_By>>;
  where?: Maybe<Student_Learning_Time_By_Daily_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudent_Learning_Time_By_Dailies_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Learning_Time_By_Daily_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Learning_Time_By_Daily_Order_By>>;
  where?: Maybe<Student_Learning_Time_By_Daily_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudent_QuestionsArgs = {
  distinct_on?: Maybe<Array<Student_Questions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Questions_Order_By>>;
  where?: Maybe<Student_Questions_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudent_Questions_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Questions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Questions_Order_By>>;
  where?: Maybe<Student_Questions_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudent_SubmissionsArgs = {
  distinct_on?: Maybe<Array<Student_Submissions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submissions_Order_By>>;
  where?: Maybe<Student_Submissions_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudent_Submissions_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Submissions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submissions_Order_By>>;
  where?: Maybe<Student_Submissions_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudent_SubscriptionsArgs = {
  distinct_on?: Maybe<Array<Student_Subscriptions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Subscriptions_Order_By>>;
  where?: Maybe<Student_Subscriptions_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudent_Subscriptions_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Subscriptions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Subscriptions_Order_By>>;
  where?: Maybe<Student_Subscriptions_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudents_Assigned_CoachesArgs = {
  distinct_on?: Maybe<Array<Students_Assigned_Coaches_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Assigned_Coaches_Order_By>>;
  where?: Maybe<Students_Assigned_Coaches_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudents_Assigned_Coaches_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Assigned_Coaches_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Assigned_Coaches_Order_By>>;
  where?: Maybe<Students_Assigned_Coaches_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudents_Learning_Objectives_CompletenessesArgs = {
  distinct_on?: Maybe<Array<Students_Learning_Objectives_Completeness_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Learning_Objectives_Completeness_Order_By>>;
  where?: Maybe<Students_Learning_Objectives_Completeness_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudents_Learning_Objectives_Completenesses_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Learning_Objectives_Completeness_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Learning_Objectives_Completeness_Order_By>>;
  where?: Maybe<Students_Learning_Objectives_Completeness_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudents_Learning_Objectives_RecordsArgs = {
  distinct_on?: Maybe<Array<Students_Learning_Objectives_Records_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Learning_Objectives_Records_Order_By>>;
  where?: Maybe<Students_Learning_Objectives_Records_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudents_Learning_Objectives_Records_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Learning_Objectives_Records_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Learning_Objectives_Records_Order_By>>;
  where?: Maybe<Students_Learning_Objectives_Records_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudents_Study_Plans_WeekliesArgs = {
  distinct_on?: Maybe<Array<Students_Study_Plans_Weekly_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Study_Plans_Weekly_Order_By>>;
  where?: Maybe<Students_Study_Plans_Weekly_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudents_Study_Plans_Weeklies_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Study_Plans_Weekly_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Study_Plans_Weekly_Order_By>>;
  where?: Maybe<Students_Study_Plans_Weekly_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudents_Topics_OverduesArgs = {
  distinct_on?: Maybe<Array<Students_Topics_Overdue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Topics_Overdue_Order_By>>;
  where?: Maybe<Students_Topics_Overdue_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudents_Topics_Overdues_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Topics_Overdue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Topics_Overdue_Order_By>>;
  where?: Maybe<Students_Topics_Overdue_Bool_Exp>;
};

/** aggregated selection of "students" */
export type Students_Aggregate = {
  aggregate?: Maybe<Students_Aggregate_Fields>;
  nodes: Array<Students>;
};

/** aggregate fields of "students" */
export type Students_Aggregate_Fields = {
  avg?: Maybe<Students_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Students_Max_Fields>;
  min?: Maybe<Students_Min_Fields>;
  stddev?: Maybe<Students_Stddev_Fields>;
  stddev_pop?: Maybe<Students_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Students_Stddev_Samp_Fields>;
  sum?: Maybe<Students_Sum_Fields>;
  var_pop?: Maybe<Students_Var_Pop_Fields>;
  var_samp?: Maybe<Students_Var_Samp_Fields>;
  variance?: Maybe<Students_Variance_Fields>;
};


/** aggregate fields of "students" */
export type Students_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Students_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "students" */
export type Students_Aggregate_Order_By = {
  avg?: Maybe<Students_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Students_Max_Order_By>;
  min?: Maybe<Students_Min_Order_By>;
  stddev?: Maybe<Students_Stddev_Order_By>;
  stddev_pop?: Maybe<Students_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Students_Stddev_Samp_Order_By>;
  sum?: Maybe<Students_Sum_Order_By>;
  var_pop?: Maybe<Students_Var_Pop_Order_By>;
  var_samp?: Maybe<Students_Var_Samp_Order_By>;
  variance?: Maybe<Students_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Students_Append_Input = {
  additional_data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "students" */
export type Students_Arr_Rel_Insert_Input = {
  data: Array<Students_Insert_Input>;
  on_conflict?: Maybe<Students_On_Conflict>;
};

/** columns and relationships of "students_assigned_coaches" */
export type Students_Assigned_Coaches = {
  /** An object relationship */
  coach: Coaches;
  coach_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_active: Scalars['Boolean'];
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "students_assigned_coaches" */
export type Students_Assigned_Coaches_Aggregate = {
  aggregate?: Maybe<Students_Assigned_Coaches_Aggregate_Fields>;
  nodes: Array<Students_Assigned_Coaches>;
};

/** aggregate fields of "students_assigned_coaches" */
export type Students_Assigned_Coaches_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Students_Assigned_Coaches_Max_Fields>;
  min?: Maybe<Students_Assigned_Coaches_Min_Fields>;
};


/** aggregate fields of "students_assigned_coaches" */
export type Students_Assigned_Coaches_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Students_Assigned_Coaches_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "students_assigned_coaches" */
export type Students_Assigned_Coaches_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Students_Assigned_Coaches_Max_Order_By>;
  min?: Maybe<Students_Assigned_Coaches_Min_Order_By>;
};

/** input type for inserting array relation for remote table "students_assigned_coaches" */
export type Students_Assigned_Coaches_Arr_Rel_Insert_Input = {
  data: Array<Students_Assigned_Coaches_Insert_Input>;
};

/** Boolean expression to filter rows from the table "students_assigned_coaches". All fields are combined with a logical 'AND'. */
export type Students_Assigned_Coaches_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Students_Assigned_Coaches_Bool_Exp>>>;
  _not?: Maybe<Students_Assigned_Coaches_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Students_Assigned_Coaches_Bool_Exp>>>;
  coach?: Maybe<Coaches_Bool_Exp>;
  coach_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** input type for inserting data into table "students_assigned_coaches" */
export type Students_Assigned_Coaches_Insert_Input = {
  coach?: Maybe<Coaches_Obj_Rel_Insert_Input>;
  coach_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_active?: Maybe<Scalars['Boolean']>;
  resource_path?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Students_Assigned_Coaches_Max_Fields = {
  coach_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "students_assigned_coaches" */
export type Students_Assigned_Coaches_Max_Order_By = {
  coach_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Students_Assigned_Coaches_Min_Fields = {
  coach_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "students_assigned_coaches" */
export type Students_Assigned_Coaches_Min_Order_By = {
  coach_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "students_assigned_coaches" */
export type Students_Assigned_Coaches_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Students_Assigned_Coaches>;
};

/** input type for inserting object relation for remote table "students_assigned_coaches" */
export type Students_Assigned_Coaches_Obj_Rel_Insert_Input = {
  data: Students_Assigned_Coaches_Insert_Input;
};

/** ordering options when selecting data from "students_assigned_coaches" */
export type Students_Assigned_Coaches_Order_By = {
  coach?: Maybe<Coaches_Order_By>;
  coach_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** select columns of table "students_assigned_coaches" */
export enum Students_Assigned_Coaches_Select_Column {
  /** column name */
  CoachId = 'coach_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "students_assigned_coaches" */
export type Students_Assigned_Coaches_Set_Input = {
  coach_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_active?: Maybe<Scalars['Boolean']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate avg on columns */
export type Students_Avg_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
  previous_grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_question_limit?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "students" */
export type Students_Avg_Order_By = {
  current_grade?: Maybe<Order_By>;
  previous_grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  total_question_limit?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "students". All fields are combined with a logical 'AND'. */
export type Students_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Students_Bool_Exp>>>;
  _not?: Maybe<Students_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Students_Bool_Exp>>>;
  additional_data?: Maybe<Jsonb_Comparison_Exp>;
  billing_date?: Maybe<Timestamptz_Comparison_Exp>;
  billing_histories?: Maybe<Billing_Histories_Bool_Exp>;
  biography?: Maybe<String_Comparison_Exp>;
  birthday?: Maybe<Date_Comparison_Exp>;
  class_members?: Maybe<Class_Members_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  current_grade?: Maybe<Smallint_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  enrollment_status?: Maybe<String_Comparison_Exp>;
  hub_tours?: Maybe<Hub_Tours_Bool_Exp>;
  ios_transactions?: Maybe<Ios_Transactions_Bool_Exp>;
  lesson_report_details?: Maybe<Lesson_Report_Details_Bool_Exp>;
  on_trial?: Maybe<Boolean_Comparison_Exp>;
  previous_grade?: Maybe<Smallint_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  school?: Maybe<Schools_Bool_Exp>;
  school_id?: Maybe<Int_Comparison_Exp>;
  shuffled_quiz_sets?: Maybe<Shuffled_Quiz_Sets_Bool_Exp>;
  student_assignments?: Maybe<Student_Assignments_Bool_Exp>;
  student_comments?: Maybe<Student_Comments_Bool_Exp>;
  student_event_logs?: Maybe<Student_Event_Logs_Bool_Exp>;
  student_external_id?: Maybe<String_Comparison_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  student_learning_time_by_dailies?: Maybe<Student_Learning_Time_By_Daily_Bool_Exp>;
  student_note?: Maybe<String_Comparison_Exp>;
  student_questions?: Maybe<Student_Questions_Bool_Exp>;
  student_statistic?: Maybe<Student_Statistics_Bool_Exp>;
  student_submissions?: Maybe<Student_Submissions_Bool_Exp>;
  student_subscriptions?: Maybe<Student_Subscriptions_Bool_Exp>;
  students_assigned_coaches?: Maybe<Students_Assigned_Coaches_Bool_Exp>;
  students_learning_objectives_completenesses?: Maybe<Students_Learning_Objectives_Completeness_Bool_Exp>;
  students_learning_objectives_records?: Maybe<Students_Learning_Objectives_Records_Bool_Exp>;
  students_study_plans_weeklies?: Maybe<Students_Study_Plans_Weekly_Bool_Exp>;
  students_topics_overdues?: Maybe<Students_Topics_Overdue_Bool_Exp>;
  target_university?: Maybe<String_Comparison_Exp>;
  total_question_limit?: Maybe<Smallint_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "students" */
export enum Students_Constraint {
  /** unique or primary key constraint */
  StudentsPk = 'students_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Students_Delete_At_Path_Input = {
  additional_data?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Students_Delete_Elem_Input = {
  additional_data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Students_Delete_Key_Input = {
  additional_data?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "students" */
export type Students_Inc_Input = {
  current_grade?: Maybe<Scalars['smallint']>;
  previous_grade?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
  total_question_limit?: Maybe<Scalars['smallint']>;
};

/** input type for inserting data into table "students" */
export type Students_Insert_Input = {
  additional_data?: Maybe<Scalars['jsonb']>;
  billing_date?: Maybe<Scalars['timestamptz']>;
  billing_histories?: Maybe<Billing_Histories_Arr_Rel_Insert_Input>;
  biography?: Maybe<Scalars['String']>;
  birthday?: Maybe<Scalars['date']>;
  class_members?: Maybe<Class_Members_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_grade?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  enrollment_status?: Maybe<Scalars['String']>;
  hub_tours?: Maybe<Hub_Tours_Arr_Rel_Insert_Input>;
  ios_transactions?: Maybe<Ios_Transactions_Arr_Rel_Insert_Input>;
  lesson_report_details?: Maybe<Lesson_Report_Details_Arr_Rel_Insert_Input>;
  on_trial?: Maybe<Scalars['Boolean']>;
  previous_grade?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  school?: Maybe<Schools_Obj_Rel_Insert_Input>;
  school_id?: Maybe<Scalars['Int']>;
  shuffled_quiz_sets?: Maybe<Shuffled_Quiz_Sets_Arr_Rel_Insert_Input>;
  student_assignments?: Maybe<Student_Assignments_Arr_Rel_Insert_Input>;
  student_comments?: Maybe<Student_Comments_Arr_Rel_Insert_Input>;
  student_event_logs?: Maybe<Student_Event_Logs_Arr_Rel_Insert_Input>;
  student_external_id?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  student_learning_time_by_dailies?: Maybe<Student_Learning_Time_By_Daily_Arr_Rel_Insert_Input>;
  student_note?: Maybe<Scalars['String']>;
  student_questions?: Maybe<Student_Questions_Arr_Rel_Insert_Input>;
  student_statistic?: Maybe<Student_Statistics_Obj_Rel_Insert_Input>;
  student_submissions?: Maybe<Student_Submissions_Arr_Rel_Insert_Input>;
  student_subscriptions?: Maybe<Student_Subscriptions_Arr_Rel_Insert_Input>;
  students_assigned_coaches?: Maybe<Students_Assigned_Coaches_Arr_Rel_Insert_Input>;
  students_learning_objectives_completenesses?: Maybe<Students_Learning_Objectives_Completeness_Arr_Rel_Insert_Input>;
  students_learning_objectives_records?: Maybe<Students_Learning_Objectives_Records_Arr_Rel_Insert_Input>;
  students_study_plans_weeklies?: Maybe<Students_Study_Plans_Weekly_Arr_Rel_Insert_Input>;
  students_topics_overdues?: Maybe<Students_Topics_Overdue_Arr_Rel_Insert_Input>;
  target_university?: Maybe<Scalars['String']>;
  total_question_limit?: Maybe<Scalars['smallint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
};

/** columns and relationships of "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  finished_quiz_at?: Maybe<Scalars['timestamptz']>;
  first_attempt_score: Scalars['smallint'];
  first_quiz_correctness?: Maybe<Scalars['Float']>;
  highest_quiz_score?: Maybe<Scalars['Float']>;
  is_finished_quiz: Scalars['Boolean'];
  is_finished_study_guide: Scalars['Boolean'];
  is_finished_video: Scalars['Boolean'];
  /** An object relationship */
  learning_objective: Learning_Objectives;
  lo_id: Scalars['String'];
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  /** An object relationship */
  students_study_plans_weekly?: Maybe<Students_Study_Plans_Weekly>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Aggregate = {
  aggregate?: Maybe<Students_Learning_Objectives_Completeness_Aggregate_Fields>;
  nodes: Array<Students_Learning_Objectives_Completeness>;
};

/** aggregate fields of "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Aggregate_Fields = {
  avg?: Maybe<Students_Learning_Objectives_Completeness_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Students_Learning_Objectives_Completeness_Max_Fields>;
  min?: Maybe<Students_Learning_Objectives_Completeness_Min_Fields>;
  stddev?: Maybe<Students_Learning_Objectives_Completeness_Stddev_Fields>;
  stddev_pop?: Maybe<Students_Learning_Objectives_Completeness_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Students_Learning_Objectives_Completeness_Stddev_Samp_Fields>;
  sum?: Maybe<Students_Learning_Objectives_Completeness_Sum_Fields>;
  var_pop?: Maybe<Students_Learning_Objectives_Completeness_Var_Pop_Fields>;
  var_samp?: Maybe<Students_Learning_Objectives_Completeness_Var_Samp_Fields>;
  variance?: Maybe<Students_Learning_Objectives_Completeness_Variance_Fields>;
};


/** aggregate fields of "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Students_Learning_Objectives_Completeness_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Aggregate_Order_By = {
  avg?: Maybe<Students_Learning_Objectives_Completeness_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Students_Learning_Objectives_Completeness_Max_Order_By>;
  min?: Maybe<Students_Learning_Objectives_Completeness_Min_Order_By>;
  stddev?: Maybe<Students_Learning_Objectives_Completeness_Stddev_Order_By>;
  stddev_pop?: Maybe<Students_Learning_Objectives_Completeness_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Students_Learning_Objectives_Completeness_Stddev_Samp_Order_By>;
  sum?: Maybe<Students_Learning_Objectives_Completeness_Sum_Order_By>;
  var_pop?: Maybe<Students_Learning_Objectives_Completeness_Var_Pop_Order_By>;
  var_samp?: Maybe<Students_Learning_Objectives_Completeness_Var_Samp_Order_By>;
  variance?: Maybe<Students_Learning_Objectives_Completeness_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Arr_Rel_Insert_Input = {
  data: Array<Students_Learning_Objectives_Completeness_Insert_Input>;
  on_conflict?: Maybe<Students_Learning_Objectives_Completeness_On_Conflict>;
};

/** aggregate avg on columns */
export type Students_Learning_Objectives_Completeness_Avg_Fields = {
  first_attempt_score?: Maybe<Scalars['Float']>;
  first_quiz_correctness?: Maybe<Scalars['Float']>;
  highest_quiz_score?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Avg_Order_By = {
  first_attempt_score?: Maybe<Order_By>;
  first_quiz_correctness?: Maybe<Order_By>;
  highest_quiz_score?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "students_learning_objectives_completeness". All fields are combined with a logical 'AND'. */
export type Students_Learning_Objectives_Completeness_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Students_Learning_Objectives_Completeness_Bool_Exp>>>;
  _not?: Maybe<Students_Learning_Objectives_Completeness_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Students_Learning_Objectives_Completeness_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  finished_quiz_at?: Maybe<Timestamptz_Comparison_Exp>;
  first_attempt_score?: Maybe<Smallint_Comparison_Exp>;
  first_quiz_correctness?: Maybe<Float_Comparison_Exp>;
  highest_quiz_score?: Maybe<Float_Comparison_Exp>;
  is_finished_quiz?: Maybe<Boolean_Comparison_Exp>;
  is_finished_study_guide?: Maybe<Boolean_Comparison_Exp>;
  is_finished_video?: Maybe<Boolean_Comparison_Exp>;
  learning_objective?: Maybe<Learning_Objectives_Bool_Exp>;
  lo_id?: Maybe<String_Comparison_Exp>;
  preset_study_plan_weekly_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  students_study_plans_weekly?: Maybe<Students_Study_Plans_Weekly_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "students_learning_objectives_completeness" */
export enum Students_Learning_Objectives_Completeness_Constraint {
  /** unique or primary key constraint */
  StudentsLearningObjectivesCompletenessPk = 'students_learning_objectives_completeness_pk'
}

/** input type for incrementing integer column in table "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Inc_Input = {
  first_attempt_score?: Maybe<Scalars['smallint']>;
  first_quiz_correctness?: Maybe<Scalars['Float']>;
  highest_quiz_score?: Maybe<Scalars['Float']>;
};

/** input type for inserting data into table "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  finished_quiz_at?: Maybe<Scalars['timestamptz']>;
  first_attempt_score?: Maybe<Scalars['smallint']>;
  first_quiz_correctness?: Maybe<Scalars['Float']>;
  highest_quiz_score?: Maybe<Scalars['Float']>;
  is_finished_quiz?: Maybe<Scalars['Boolean']>;
  is_finished_study_guide?: Maybe<Scalars['Boolean']>;
  is_finished_video?: Maybe<Scalars['Boolean']>;
  learning_objective?: Maybe<Learning_Objectives_Obj_Rel_Insert_Input>;
  lo_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  students_study_plans_weekly?: Maybe<Students_Study_Plans_Weekly_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Students_Learning_Objectives_Completeness_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  finished_quiz_at?: Maybe<Scalars['timestamptz']>;
  first_attempt_score?: Maybe<Scalars['smallint']>;
  first_quiz_correctness?: Maybe<Scalars['Float']>;
  highest_quiz_score?: Maybe<Scalars['Float']>;
  lo_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  finished_quiz_at?: Maybe<Order_By>;
  first_attempt_score?: Maybe<Order_By>;
  first_quiz_correctness?: Maybe<Order_By>;
  highest_quiz_score?: Maybe<Order_By>;
  lo_id?: Maybe<Order_By>;
  preset_study_plan_weekly_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Students_Learning_Objectives_Completeness_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  finished_quiz_at?: Maybe<Scalars['timestamptz']>;
  first_attempt_score?: Maybe<Scalars['smallint']>;
  first_quiz_correctness?: Maybe<Scalars['Float']>;
  highest_quiz_score?: Maybe<Scalars['Float']>;
  lo_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  finished_quiz_at?: Maybe<Order_By>;
  first_attempt_score?: Maybe<Order_By>;
  first_quiz_correctness?: Maybe<Order_By>;
  highest_quiz_score?: Maybe<Order_By>;
  lo_id?: Maybe<Order_By>;
  preset_study_plan_weekly_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Students_Learning_Objectives_Completeness>;
};

/** input type for inserting object relation for remote table "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Obj_Rel_Insert_Input = {
  data: Students_Learning_Objectives_Completeness_Insert_Input;
  on_conflict?: Maybe<Students_Learning_Objectives_Completeness_On_Conflict>;
};

/** on conflict condition type for table "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_On_Conflict = {
  constraint: Students_Learning_Objectives_Completeness_Constraint;
  update_columns: Array<Students_Learning_Objectives_Completeness_Update_Column>;
  where?: Maybe<Students_Learning_Objectives_Completeness_Bool_Exp>;
};

/** ordering options when selecting data from "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  finished_quiz_at?: Maybe<Order_By>;
  first_attempt_score?: Maybe<Order_By>;
  first_quiz_correctness?: Maybe<Order_By>;
  highest_quiz_score?: Maybe<Order_By>;
  is_finished_quiz?: Maybe<Order_By>;
  is_finished_study_guide?: Maybe<Order_By>;
  is_finished_video?: Maybe<Order_By>;
  learning_objective?: Maybe<Learning_Objectives_Order_By>;
  lo_id?: Maybe<Order_By>;
  preset_study_plan_weekly_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  students_study_plans_weekly?: Maybe<Students_Study_Plans_Weekly_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Pk_Columns_Input = {
  lo_id: Scalars['String'];
  student_id: Scalars['String'];
};

/** select columns of table "students_learning_objectives_completeness" */
export enum Students_Learning_Objectives_Completeness_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  FinishedQuizAt = 'finished_quiz_at',
  /** column name */
  FirstAttemptScore = 'first_attempt_score',
  /** column name */
  FirstQuizCorrectness = 'first_quiz_correctness',
  /** column name */
  HighestQuizScore = 'highest_quiz_score',
  /** column name */
  IsFinishedQuiz = 'is_finished_quiz',
  /** column name */
  IsFinishedStudyGuide = 'is_finished_study_guide',
  /** column name */
  IsFinishedVideo = 'is_finished_video',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  PresetStudyPlanWeeklyId = 'preset_study_plan_weekly_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  finished_quiz_at?: Maybe<Scalars['timestamptz']>;
  first_attempt_score?: Maybe<Scalars['smallint']>;
  first_quiz_correctness?: Maybe<Scalars['Float']>;
  highest_quiz_score?: Maybe<Scalars['Float']>;
  is_finished_quiz?: Maybe<Scalars['Boolean']>;
  is_finished_study_guide?: Maybe<Scalars['Boolean']>;
  is_finished_video?: Maybe<Scalars['Boolean']>;
  lo_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Students_Learning_Objectives_Completeness_Stddev_Fields = {
  first_attempt_score?: Maybe<Scalars['Float']>;
  first_quiz_correctness?: Maybe<Scalars['Float']>;
  highest_quiz_score?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Stddev_Order_By = {
  first_attempt_score?: Maybe<Order_By>;
  first_quiz_correctness?: Maybe<Order_By>;
  highest_quiz_score?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Students_Learning_Objectives_Completeness_Stddev_Pop_Fields = {
  first_attempt_score?: Maybe<Scalars['Float']>;
  first_quiz_correctness?: Maybe<Scalars['Float']>;
  highest_quiz_score?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Stddev_Pop_Order_By = {
  first_attempt_score?: Maybe<Order_By>;
  first_quiz_correctness?: Maybe<Order_By>;
  highest_quiz_score?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Students_Learning_Objectives_Completeness_Stddev_Samp_Fields = {
  first_attempt_score?: Maybe<Scalars['Float']>;
  first_quiz_correctness?: Maybe<Scalars['Float']>;
  highest_quiz_score?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Stddev_Samp_Order_By = {
  first_attempt_score?: Maybe<Order_By>;
  first_quiz_correctness?: Maybe<Order_By>;
  highest_quiz_score?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Students_Learning_Objectives_Completeness_Sum_Fields = {
  first_attempt_score?: Maybe<Scalars['smallint']>;
  first_quiz_correctness?: Maybe<Scalars['Float']>;
  highest_quiz_score?: Maybe<Scalars['Float']>;
};

/** order by sum() on columns of table "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Sum_Order_By = {
  first_attempt_score?: Maybe<Order_By>;
  first_quiz_correctness?: Maybe<Order_By>;
  highest_quiz_score?: Maybe<Order_By>;
};

/** update columns of table "students_learning_objectives_completeness" */
export enum Students_Learning_Objectives_Completeness_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  FinishedQuizAt = 'finished_quiz_at',
  /** column name */
  FirstAttemptScore = 'first_attempt_score',
  /** column name */
  FirstQuizCorrectness = 'first_quiz_correctness',
  /** column name */
  HighestQuizScore = 'highest_quiz_score',
  /** column name */
  IsFinishedQuiz = 'is_finished_quiz',
  /** column name */
  IsFinishedStudyGuide = 'is_finished_study_guide',
  /** column name */
  IsFinishedVideo = 'is_finished_video',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  PresetStudyPlanWeeklyId = 'preset_study_plan_weekly_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Students_Learning_Objectives_Completeness_Var_Pop_Fields = {
  first_attempt_score?: Maybe<Scalars['Float']>;
  first_quiz_correctness?: Maybe<Scalars['Float']>;
  highest_quiz_score?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Var_Pop_Order_By = {
  first_attempt_score?: Maybe<Order_By>;
  first_quiz_correctness?: Maybe<Order_By>;
  highest_quiz_score?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Students_Learning_Objectives_Completeness_Var_Samp_Fields = {
  first_attempt_score?: Maybe<Scalars['Float']>;
  first_quiz_correctness?: Maybe<Scalars['Float']>;
  highest_quiz_score?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Var_Samp_Order_By = {
  first_attempt_score?: Maybe<Order_By>;
  first_quiz_correctness?: Maybe<Order_By>;
  highest_quiz_score?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Students_Learning_Objectives_Completeness_Variance_Fields = {
  first_attempt_score?: Maybe<Scalars['Float']>;
  first_quiz_correctness?: Maybe<Scalars['Float']>;
  highest_quiz_score?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "students_learning_objectives_completeness" */
export type Students_Learning_Objectives_Completeness_Variance_Order_By = {
  first_attempt_score?: Maybe<Order_By>;
  first_quiz_correctness?: Maybe<Order_By>;
  highest_quiz_score?: Maybe<Order_By>;
};

/** columns and relationships of "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records = {
  accuracy?: Maybe<Scalars['numeric']>;
  completed_at: Scalars['timestamptz'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_offline?: Maybe<Scalars['Boolean']>;
  /** An object relationship */
  learning_objective: Learning_Objectives;
  learning_time?: Maybe<Scalars['Int']>;
  lo_id: Scalars['String'];
  record_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  study_plan_item_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Aggregate = {
  aggregate?: Maybe<Students_Learning_Objectives_Records_Aggregate_Fields>;
  nodes: Array<Students_Learning_Objectives_Records>;
};

/** aggregate fields of "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Aggregate_Fields = {
  avg?: Maybe<Students_Learning_Objectives_Records_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Students_Learning_Objectives_Records_Max_Fields>;
  min?: Maybe<Students_Learning_Objectives_Records_Min_Fields>;
  stddev?: Maybe<Students_Learning_Objectives_Records_Stddev_Fields>;
  stddev_pop?: Maybe<Students_Learning_Objectives_Records_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Students_Learning_Objectives_Records_Stddev_Samp_Fields>;
  sum?: Maybe<Students_Learning_Objectives_Records_Sum_Fields>;
  var_pop?: Maybe<Students_Learning_Objectives_Records_Var_Pop_Fields>;
  var_samp?: Maybe<Students_Learning_Objectives_Records_Var_Samp_Fields>;
  variance?: Maybe<Students_Learning_Objectives_Records_Variance_Fields>;
};


/** aggregate fields of "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Students_Learning_Objectives_Records_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Aggregate_Order_By = {
  avg?: Maybe<Students_Learning_Objectives_Records_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Students_Learning_Objectives_Records_Max_Order_By>;
  min?: Maybe<Students_Learning_Objectives_Records_Min_Order_By>;
  stddev?: Maybe<Students_Learning_Objectives_Records_Stddev_Order_By>;
  stddev_pop?: Maybe<Students_Learning_Objectives_Records_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Students_Learning_Objectives_Records_Stddev_Samp_Order_By>;
  sum?: Maybe<Students_Learning_Objectives_Records_Sum_Order_By>;
  var_pop?: Maybe<Students_Learning_Objectives_Records_Var_Pop_Order_By>;
  var_samp?: Maybe<Students_Learning_Objectives_Records_Var_Samp_Order_By>;
  variance?: Maybe<Students_Learning_Objectives_Records_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Arr_Rel_Insert_Input = {
  data: Array<Students_Learning_Objectives_Records_Insert_Input>;
  on_conflict?: Maybe<Students_Learning_Objectives_Records_On_Conflict>;
};

/** aggregate avg on columns */
export type Students_Learning_Objectives_Records_Avg_Fields = {
  accuracy?: Maybe<Scalars['Float']>;
  learning_time?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Avg_Order_By = {
  accuracy?: Maybe<Order_By>;
  learning_time?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "students_learning_objectives_records". All fields are combined with a logical 'AND'. */
export type Students_Learning_Objectives_Records_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Students_Learning_Objectives_Records_Bool_Exp>>>;
  _not?: Maybe<Students_Learning_Objectives_Records_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Students_Learning_Objectives_Records_Bool_Exp>>>;
  accuracy?: Maybe<Numeric_Comparison_Exp>;
  completed_at?: Maybe<Timestamptz_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  is_offline?: Maybe<Boolean_Comparison_Exp>;
  learning_objective?: Maybe<Learning_Objectives_Bool_Exp>;
  learning_time?: Maybe<Int_Comparison_Exp>;
  lo_id?: Maybe<String_Comparison_Exp>;
  record_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  study_plan_item_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "students_learning_objectives_records" */
export enum Students_Learning_Objectives_Records_Constraint {
  /** unique or primary key constraint */
  StudentsLearningObjectivesRecordsPk = 'students_learning_objectives_records_pk'
}

/** input type for incrementing integer column in table "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Inc_Input = {
  accuracy?: Maybe<Scalars['numeric']>;
  learning_time?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Insert_Input = {
  accuracy?: Maybe<Scalars['numeric']>;
  completed_at?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_offline?: Maybe<Scalars['Boolean']>;
  learning_objective?: Maybe<Learning_Objectives_Obj_Rel_Insert_Input>;
  learning_time?: Maybe<Scalars['Int']>;
  lo_id?: Maybe<Scalars['String']>;
  record_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Students_Learning_Objectives_Records_Max_Fields = {
  accuracy?: Maybe<Scalars['numeric']>;
  completed_at?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  learning_time?: Maybe<Scalars['Int']>;
  lo_id?: Maybe<Scalars['String']>;
  record_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Max_Order_By = {
  accuracy?: Maybe<Order_By>;
  completed_at?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  learning_time?: Maybe<Order_By>;
  lo_id?: Maybe<Order_By>;
  record_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Students_Learning_Objectives_Records_Min_Fields = {
  accuracy?: Maybe<Scalars['numeric']>;
  completed_at?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  learning_time?: Maybe<Scalars['Int']>;
  lo_id?: Maybe<Scalars['String']>;
  record_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Min_Order_By = {
  accuracy?: Maybe<Order_By>;
  completed_at?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  learning_time?: Maybe<Order_By>;
  lo_id?: Maybe<Order_By>;
  record_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Students_Learning_Objectives_Records>;
};

/** input type for inserting object relation for remote table "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Obj_Rel_Insert_Input = {
  data: Students_Learning_Objectives_Records_Insert_Input;
  on_conflict?: Maybe<Students_Learning_Objectives_Records_On_Conflict>;
};

/** on conflict condition type for table "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_On_Conflict = {
  constraint: Students_Learning_Objectives_Records_Constraint;
  update_columns: Array<Students_Learning_Objectives_Records_Update_Column>;
  where?: Maybe<Students_Learning_Objectives_Records_Bool_Exp>;
};

/** ordering options when selecting data from "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Order_By = {
  accuracy?: Maybe<Order_By>;
  completed_at?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  is_offline?: Maybe<Order_By>;
  learning_objective?: Maybe<Learning_Objectives_Order_By>;
  learning_time?: Maybe<Order_By>;
  lo_id?: Maybe<Order_By>;
  record_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Pk_Columns_Input = {
  record_id: Scalars['String'];
};

/** select columns of table "students_learning_objectives_records" */
export enum Students_Learning_Objectives_Records_Select_Column {
  /** column name */
  Accuracy = 'accuracy',
  /** column name */
  CompletedAt = 'completed_at',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsOffline = 'is_offline',
  /** column name */
  LearningTime = 'learning_time',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  RecordId = 'record_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudyPlanItemId = 'study_plan_item_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Set_Input = {
  accuracy?: Maybe<Scalars['numeric']>;
  completed_at?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_offline?: Maybe<Scalars['Boolean']>;
  learning_time?: Maybe<Scalars['Int']>;
  lo_id?: Maybe<Scalars['String']>;
  record_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Students_Learning_Objectives_Records_Stddev_Fields = {
  accuracy?: Maybe<Scalars['Float']>;
  learning_time?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Stddev_Order_By = {
  accuracy?: Maybe<Order_By>;
  learning_time?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Students_Learning_Objectives_Records_Stddev_Pop_Fields = {
  accuracy?: Maybe<Scalars['Float']>;
  learning_time?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Stddev_Pop_Order_By = {
  accuracy?: Maybe<Order_By>;
  learning_time?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Students_Learning_Objectives_Records_Stddev_Samp_Fields = {
  accuracy?: Maybe<Scalars['Float']>;
  learning_time?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Stddev_Samp_Order_By = {
  accuracy?: Maybe<Order_By>;
  learning_time?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Students_Learning_Objectives_Records_Sum_Fields = {
  accuracy?: Maybe<Scalars['numeric']>;
  learning_time?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Sum_Order_By = {
  accuracy?: Maybe<Order_By>;
  learning_time?: Maybe<Order_By>;
};

/** update columns of table "students_learning_objectives_records" */
export enum Students_Learning_Objectives_Records_Update_Column {
  /** column name */
  Accuracy = 'accuracy',
  /** column name */
  CompletedAt = 'completed_at',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsOffline = 'is_offline',
  /** column name */
  LearningTime = 'learning_time',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  RecordId = 'record_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudyPlanItemId = 'study_plan_item_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Students_Learning_Objectives_Records_Var_Pop_Fields = {
  accuracy?: Maybe<Scalars['Float']>;
  learning_time?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Var_Pop_Order_By = {
  accuracy?: Maybe<Order_By>;
  learning_time?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Students_Learning_Objectives_Records_Var_Samp_Fields = {
  accuracy?: Maybe<Scalars['Float']>;
  learning_time?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Var_Samp_Order_By = {
  accuracy?: Maybe<Order_By>;
  learning_time?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Students_Learning_Objectives_Records_Variance_Fields = {
  accuracy?: Maybe<Scalars['Float']>;
  learning_time?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "students_learning_objectives_records" */
export type Students_Learning_Objectives_Records_Variance_Order_By = {
  accuracy?: Maybe<Order_By>;
  learning_time?: Maybe<Order_By>;
};

/** aggregate max on columns */
export type Students_Max_Fields = {
  billing_date?: Maybe<Scalars['timestamptz']>;
  biography?: Maybe<Scalars['String']>;
  birthday?: Maybe<Scalars['date']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_grade?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  enrollment_status?: Maybe<Scalars['String']>;
  previous_grade?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  student_external_id?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  student_note?: Maybe<Scalars['String']>;
  target_university?: Maybe<Scalars['String']>;
  total_question_limit?: Maybe<Scalars['smallint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "students" */
export type Students_Max_Order_By = {
  billing_date?: Maybe<Order_By>;
  biography?: Maybe<Order_By>;
  birthday?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  current_grade?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  enrollment_status?: Maybe<Order_By>;
  previous_grade?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  student_external_id?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  student_note?: Maybe<Order_By>;
  target_university?: Maybe<Order_By>;
  total_question_limit?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Students_Min_Fields = {
  billing_date?: Maybe<Scalars['timestamptz']>;
  biography?: Maybe<Scalars['String']>;
  birthday?: Maybe<Scalars['date']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_grade?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  enrollment_status?: Maybe<Scalars['String']>;
  previous_grade?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  student_external_id?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  student_note?: Maybe<Scalars['String']>;
  target_university?: Maybe<Scalars['String']>;
  total_question_limit?: Maybe<Scalars['smallint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "students" */
export type Students_Min_Order_By = {
  billing_date?: Maybe<Order_By>;
  biography?: Maybe<Order_By>;
  birthday?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  current_grade?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  enrollment_status?: Maybe<Order_By>;
  previous_grade?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  student_external_id?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  student_note?: Maybe<Order_By>;
  target_university?: Maybe<Order_By>;
  total_question_limit?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "students" */
export type Students_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Students>;
};

/** input type for inserting object relation for remote table "students" */
export type Students_Obj_Rel_Insert_Input = {
  data: Students_Insert_Input;
  on_conflict?: Maybe<Students_On_Conflict>;
};

/** on conflict condition type for table "students" */
export type Students_On_Conflict = {
  constraint: Students_Constraint;
  update_columns: Array<Students_Update_Column>;
  where?: Maybe<Students_Bool_Exp>;
};

/** ordering options when selecting data from "students" */
export type Students_Order_By = {
  additional_data?: Maybe<Order_By>;
  billing_date?: Maybe<Order_By>;
  billing_histories_aggregate?: Maybe<Billing_Histories_Aggregate_Order_By>;
  biography?: Maybe<Order_By>;
  birthday?: Maybe<Order_By>;
  class_members_aggregate?: Maybe<Class_Members_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  current_grade?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  enrollment_status?: Maybe<Order_By>;
  hub_tours_aggregate?: Maybe<Hub_Tours_Aggregate_Order_By>;
  ios_transactions_aggregate?: Maybe<Ios_Transactions_Aggregate_Order_By>;
  lesson_report_details_aggregate?: Maybe<Lesson_Report_Details_Aggregate_Order_By>;
  on_trial?: Maybe<Order_By>;
  previous_grade?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school?: Maybe<Schools_Order_By>;
  school_id?: Maybe<Order_By>;
  shuffled_quiz_sets_aggregate?: Maybe<Shuffled_Quiz_Sets_Aggregate_Order_By>;
  student_assignments_aggregate?: Maybe<Student_Assignments_Aggregate_Order_By>;
  student_comments_aggregate?: Maybe<Student_Comments_Aggregate_Order_By>;
  student_event_logs_aggregate?: Maybe<Student_Event_Logs_Aggregate_Order_By>;
  student_external_id?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  student_learning_time_by_dailies_aggregate?: Maybe<Student_Learning_Time_By_Daily_Aggregate_Order_By>;
  student_note?: Maybe<Order_By>;
  student_questions_aggregate?: Maybe<Student_Questions_Aggregate_Order_By>;
  student_statistic?: Maybe<Student_Statistics_Order_By>;
  student_submissions_aggregate?: Maybe<Student_Submissions_Aggregate_Order_By>;
  student_subscriptions_aggregate?: Maybe<Student_Subscriptions_Aggregate_Order_By>;
  students_assigned_coaches_aggregate?: Maybe<Students_Assigned_Coaches_Aggregate_Order_By>;
  students_learning_objectives_completenesses_aggregate?: Maybe<Students_Learning_Objectives_Completeness_Aggregate_Order_By>;
  students_learning_objectives_records_aggregate?: Maybe<Students_Learning_Objectives_Records_Aggregate_Order_By>;
  students_study_plans_weeklies_aggregate?: Maybe<Students_Study_Plans_Weekly_Aggregate_Order_By>;
  students_topics_overdues_aggregate?: Maybe<Students_Topics_Overdue_Aggregate_Order_By>;
  target_university?: Maybe<Order_By>;
  total_question_limit?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
};

/** primary key columns input for table: "students" */
export type Students_Pk_Columns_Input = {
  student_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Students_Prepend_Input = {
  additional_data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "students" */
export enum Students_Select_Column {
  /** column name */
  AdditionalData = 'additional_data',
  /** column name */
  BillingDate = 'billing_date',
  /** column name */
  Biography = 'biography',
  /** column name */
  Birthday = 'birthday',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentGrade = 'current_grade',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EnrollmentStatus = 'enrollment_status',
  /** column name */
  OnTrial = 'on_trial',
  /** column name */
  PreviousGrade = 'previous_grade',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  StudentExternalId = 'student_external_id',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudentNote = 'student_note',
  /** column name */
  TargetUniversity = 'target_university',
  /** column name */
  TotalQuestionLimit = 'total_question_limit',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "students" */
export type Students_Set_Input = {
  additional_data?: Maybe<Scalars['jsonb']>;
  billing_date?: Maybe<Scalars['timestamptz']>;
  biography?: Maybe<Scalars['String']>;
  birthday?: Maybe<Scalars['date']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_grade?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  enrollment_status?: Maybe<Scalars['String']>;
  on_trial?: Maybe<Scalars['Boolean']>;
  previous_grade?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  student_external_id?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  student_note?: Maybe<Scalars['String']>;
  target_university?: Maybe<Scalars['String']>;
  total_question_limit?: Maybe<Scalars['smallint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Students_Stddev_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
  previous_grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_question_limit?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "students" */
export type Students_Stddev_Order_By = {
  current_grade?: Maybe<Order_By>;
  previous_grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  total_question_limit?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Students_Stddev_Pop_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
  previous_grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_question_limit?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "students" */
export type Students_Stddev_Pop_Order_By = {
  current_grade?: Maybe<Order_By>;
  previous_grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  total_question_limit?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Students_Stddev_Samp_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
  previous_grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_question_limit?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "students" */
export type Students_Stddev_Samp_Order_By = {
  current_grade?: Maybe<Order_By>;
  previous_grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  total_question_limit?: Maybe<Order_By>;
};

/** columns and relationships of "students_study_plans_weekly" */
export type Students_Study_Plans_Weekly = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  preset_study_plan_weekly_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  /** An array relationship */
  students_learning_objectives_completenesses: Array<Students_Learning_Objectives_Completeness>;
  /** An aggregated array relationship */
  students_learning_objectives_completenesses_aggregate: Students_Learning_Objectives_Completeness_Aggregate;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "students_study_plans_weekly" */
export type Students_Study_Plans_WeeklyStudents_Learning_Objectives_CompletenessesArgs = {
  distinct_on?: Maybe<Array<Students_Learning_Objectives_Completeness_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Learning_Objectives_Completeness_Order_By>>;
  where?: Maybe<Students_Learning_Objectives_Completeness_Bool_Exp>;
};


/** columns and relationships of "students_study_plans_weekly" */
export type Students_Study_Plans_WeeklyStudents_Learning_Objectives_Completenesses_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Learning_Objectives_Completeness_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Learning_Objectives_Completeness_Order_By>>;
  where?: Maybe<Students_Learning_Objectives_Completeness_Bool_Exp>;
};

/** aggregated selection of "students_study_plans_weekly" */
export type Students_Study_Plans_Weekly_Aggregate = {
  aggregate?: Maybe<Students_Study_Plans_Weekly_Aggregate_Fields>;
  nodes: Array<Students_Study_Plans_Weekly>;
};

/** aggregate fields of "students_study_plans_weekly" */
export type Students_Study_Plans_Weekly_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Students_Study_Plans_Weekly_Max_Fields>;
  min?: Maybe<Students_Study_Plans_Weekly_Min_Fields>;
};


/** aggregate fields of "students_study_plans_weekly" */
export type Students_Study_Plans_Weekly_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Students_Study_Plans_Weekly_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "students_study_plans_weekly" */
export type Students_Study_Plans_Weekly_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Students_Study_Plans_Weekly_Max_Order_By>;
  min?: Maybe<Students_Study_Plans_Weekly_Min_Order_By>;
};

/** input type for inserting array relation for remote table "students_study_plans_weekly" */
export type Students_Study_Plans_Weekly_Arr_Rel_Insert_Input = {
  data: Array<Students_Study_Plans_Weekly_Insert_Input>;
  on_conflict?: Maybe<Students_Study_Plans_Weekly_On_Conflict>;
};

/** Boolean expression to filter rows from the table "students_study_plans_weekly". All fields are combined with a logical 'AND'. */
export type Students_Study_Plans_Weekly_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Students_Study_Plans_Weekly_Bool_Exp>>>;
  _not?: Maybe<Students_Study_Plans_Weekly_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Students_Study_Plans_Weekly_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  preset_study_plan_weekly_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  start_date?: Maybe<Timestamptz_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  students_learning_objectives_completenesses?: Maybe<Students_Learning_Objectives_Completeness_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "students_study_plans_weekly" */
export enum Students_Study_Plans_Weekly_Constraint {
  /** unique or primary key constraint */
  WeeklyStudyPlansPk = 'weekly_study_plans_pk'
}

/** input type for inserting data into table "students_study_plans_weekly" */
export type Students_Study_Plans_Weekly_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  students_learning_objectives_completenesses?: Maybe<Students_Learning_Objectives_Completeness_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Students_Study_Plans_Weekly_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "students_study_plans_weekly" */
export type Students_Study_Plans_Weekly_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  preset_study_plan_weekly_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Students_Study_Plans_Weekly_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "students_study_plans_weekly" */
export type Students_Study_Plans_Weekly_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  preset_study_plan_weekly_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "students_study_plans_weekly" */
export type Students_Study_Plans_Weekly_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Students_Study_Plans_Weekly>;
};

/** input type for inserting object relation for remote table "students_study_plans_weekly" */
export type Students_Study_Plans_Weekly_Obj_Rel_Insert_Input = {
  data: Students_Study_Plans_Weekly_Insert_Input;
  on_conflict?: Maybe<Students_Study_Plans_Weekly_On_Conflict>;
};

/** on conflict condition type for table "students_study_plans_weekly" */
export type Students_Study_Plans_Weekly_On_Conflict = {
  constraint: Students_Study_Plans_Weekly_Constraint;
  update_columns: Array<Students_Study_Plans_Weekly_Update_Column>;
  where?: Maybe<Students_Study_Plans_Weekly_Bool_Exp>;
};

/** ordering options when selecting data from "students_study_plans_weekly" */
export type Students_Study_Plans_Weekly_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  preset_study_plan_weekly_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  students_learning_objectives_completenesses_aggregate?: Maybe<Students_Learning_Objectives_Completeness_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "students_study_plans_weekly" */
export type Students_Study_Plans_Weekly_Pk_Columns_Input = {
  preset_study_plan_weekly_id: Scalars['String'];
  student_id: Scalars['String'];
};

/** select columns of table "students_study_plans_weekly" */
export enum Students_Study_Plans_Weekly_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  PresetStudyPlanWeeklyId = 'preset_study_plan_weekly_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "students_study_plans_weekly" */
export type Students_Study_Plans_Weekly_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "students_study_plans_weekly" */
export enum Students_Study_Plans_Weekly_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  PresetStudyPlanWeeklyId = 'preset_study_plan_weekly_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate sum on columns */
export type Students_Sum_Fields = {
  current_grade?: Maybe<Scalars['smallint']>;
  previous_grade?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
  total_question_limit?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "students" */
export type Students_Sum_Order_By = {
  current_grade?: Maybe<Order_By>;
  previous_grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  total_question_limit?: Maybe<Order_By>;
};

/** columns and relationships of "students_topics_completeness" */
export type Students_Topics_Completeness = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_completed?: Maybe<Scalars['Boolean']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id: Scalars['String'];
  topic_id: Scalars['String'];
  total_finished_los: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "students_topics_completeness" */
export type Students_Topics_Completeness_Aggregate = {
  aggregate?: Maybe<Students_Topics_Completeness_Aggregate_Fields>;
  nodes: Array<Students_Topics_Completeness>;
};

/** aggregate fields of "students_topics_completeness" */
export type Students_Topics_Completeness_Aggregate_Fields = {
  avg?: Maybe<Students_Topics_Completeness_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Students_Topics_Completeness_Max_Fields>;
  min?: Maybe<Students_Topics_Completeness_Min_Fields>;
  stddev?: Maybe<Students_Topics_Completeness_Stddev_Fields>;
  stddev_pop?: Maybe<Students_Topics_Completeness_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Students_Topics_Completeness_Stddev_Samp_Fields>;
  sum?: Maybe<Students_Topics_Completeness_Sum_Fields>;
  var_pop?: Maybe<Students_Topics_Completeness_Var_Pop_Fields>;
  var_samp?: Maybe<Students_Topics_Completeness_Var_Samp_Fields>;
  variance?: Maybe<Students_Topics_Completeness_Variance_Fields>;
};


/** aggregate fields of "students_topics_completeness" */
export type Students_Topics_Completeness_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Students_Topics_Completeness_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "students_topics_completeness" */
export type Students_Topics_Completeness_Aggregate_Order_By = {
  avg?: Maybe<Students_Topics_Completeness_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Students_Topics_Completeness_Max_Order_By>;
  min?: Maybe<Students_Topics_Completeness_Min_Order_By>;
  stddev?: Maybe<Students_Topics_Completeness_Stddev_Order_By>;
  stddev_pop?: Maybe<Students_Topics_Completeness_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Students_Topics_Completeness_Stddev_Samp_Order_By>;
  sum?: Maybe<Students_Topics_Completeness_Sum_Order_By>;
  var_pop?: Maybe<Students_Topics_Completeness_Var_Pop_Order_By>;
  var_samp?: Maybe<Students_Topics_Completeness_Var_Samp_Order_By>;
  variance?: Maybe<Students_Topics_Completeness_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "students_topics_completeness" */
export type Students_Topics_Completeness_Arr_Rel_Insert_Input = {
  data: Array<Students_Topics_Completeness_Insert_Input>;
  on_conflict?: Maybe<Students_Topics_Completeness_On_Conflict>;
};

/** aggregate avg on columns */
export type Students_Topics_Completeness_Avg_Fields = {
  total_finished_los?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "students_topics_completeness" */
export type Students_Topics_Completeness_Avg_Order_By = {
  total_finished_los?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "students_topics_completeness". All fields are combined with a logical 'AND'. */
export type Students_Topics_Completeness_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Students_Topics_Completeness_Bool_Exp>>>;
  _not?: Maybe<Students_Topics_Completeness_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Students_Topics_Completeness_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  is_completed?: Maybe<Boolean_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  topic_id?: Maybe<String_Comparison_Exp>;
  total_finished_los?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "students_topics_completeness" */
export enum Students_Topics_Completeness_Constraint {
  /** unique or primary key constraint */
  StudentsTopicsCompletenessPk = 'students_topics_completeness_pk'
}

/** input type for incrementing integer column in table "students_topics_completeness" */
export type Students_Topics_Completeness_Inc_Input = {
  total_finished_los?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "students_topics_completeness" */
export type Students_Topics_Completeness_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_completed?: Maybe<Scalars['Boolean']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  total_finished_los?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Students_Topics_Completeness_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  total_finished_los?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "students_topics_completeness" */
export type Students_Topics_Completeness_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  total_finished_los?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Students_Topics_Completeness_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  total_finished_los?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "students_topics_completeness" */
export type Students_Topics_Completeness_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  total_finished_los?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "students_topics_completeness" */
export type Students_Topics_Completeness_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Students_Topics_Completeness>;
};

/** input type for inserting object relation for remote table "students_topics_completeness" */
export type Students_Topics_Completeness_Obj_Rel_Insert_Input = {
  data: Students_Topics_Completeness_Insert_Input;
  on_conflict?: Maybe<Students_Topics_Completeness_On_Conflict>;
};

/** on conflict condition type for table "students_topics_completeness" */
export type Students_Topics_Completeness_On_Conflict = {
  constraint: Students_Topics_Completeness_Constraint;
  update_columns: Array<Students_Topics_Completeness_Update_Column>;
  where?: Maybe<Students_Topics_Completeness_Bool_Exp>;
};

/** ordering options when selecting data from "students_topics_completeness" */
export type Students_Topics_Completeness_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  is_completed?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  total_finished_los?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** select columns of table "students_topics_completeness" */
export enum Students_Topics_Completeness_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsCompleted = 'is_completed',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  TotalFinishedLos = 'total_finished_los',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "students_topics_completeness" */
export type Students_Topics_Completeness_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_completed?: Maybe<Scalars['Boolean']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  total_finished_los?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Students_Topics_Completeness_Stddev_Fields = {
  total_finished_los?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "students_topics_completeness" */
export type Students_Topics_Completeness_Stddev_Order_By = {
  total_finished_los?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Students_Topics_Completeness_Stddev_Pop_Fields = {
  total_finished_los?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "students_topics_completeness" */
export type Students_Topics_Completeness_Stddev_Pop_Order_By = {
  total_finished_los?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Students_Topics_Completeness_Stddev_Samp_Fields = {
  total_finished_los?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "students_topics_completeness" */
export type Students_Topics_Completeness_Stddev_Samp_Order_By = {
  total_finished_los?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Students_Topics_Completeness_Sum_Fields = {
  total_finished_los?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "students_topics_completeness" */
export type Students_Topics_Completeness_Sum_Order_By = {
  total_finished_los?: Maybe<Order_By>;
};

/** update columns of table "students_topics_completeness" */
export enum Students_Topics_Completeness_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsCompleted = 'is_completed',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  TotalFinishedLos = 'total_finished_los',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Students_Topics_Completeness_Var_Pop_Fields = {
  total_finished_los?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "students_topics_completeness" */
export type Students_Topics_Completeness_Var_Pop_Order_By = {
  total_finished_los?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Students_Topics_Completeness_Var_Samp_Fields = {
  total_finished_los?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "students_topics_completeness" */
export type Students_Topics_Completeness_Var_Samp_Order_By = {
  total_finished_los?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Students_Topics_Completeness_Variance_Fields = {
  total_finished_los?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "students_topics_completeness" */
export type Students_Topics_Completeness_Variance_Order_By = {
  total_finished_los?: Maybe<Order_By>;
};

/** columns and relationships of "students_topics_overdue" */
export type Students_Topics_Overdue = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  due_date: Scalars['timestamptz'];
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  /** An object relationship */
  topic: Topics;
  topic_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "students_topics_overdue" */
export type Students_Topics_Overdue_Aggregate = {
  aggregate?: Maybe<Students_Topics_Overdue_Aggregate_Fields>;
  nodes: Array<Students_Topics_Overdue>;
};

/** aggregate fields of "students_topics_overdue" */
export type Students_Topics_Overdue_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Students_Topics_Overdue_Max_Fields>;
  min?: Maybe<Students_Topics_Overdue_Min_Fields>;
};


/** aggregate fields of "students_topics_overdue" */
export type Students_Topics_Overdue_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Students_Topics_Overdue_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "students_topics_overdue" */
export type Students_Topics_Overdue_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Students_Topics_Overdue_Max_Order_By>;
  min?: Maybe<Students_Topics_Overdue_Min_Order_By>;
};

/** input type for inserting array relation for remote table "students_topics_overdue" */
export type Students_Topics_Overdue_Arr_Rel_Insert_Input = {
  data: Array<Students_Topics_Overdue_Insert_Input>;
  on_conflict?: Maybe<Students_Topics_Overdue_On_Conflict>;
};

/** Boolean expression to filter rows from the table "students_topics_overdue". All fields are combined with a logical 'AND'. */
export type Students_Topics_Overdue_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Students_Topics_Overdue_Bool_Exp>>>;
  _not?: Maybe<Students_Topics_Overdue_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Students_Topics_Overdue_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  due_date?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  topic?: Maybe<Topics_Bool_Exp>;
  topic_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "students_topics_overdue" */
export enum Students_Topics_Overdue_Constraint {
  /** unique or primary key constraint */
  StudentsTopicOverduePk = 'students_topic_overdue_pk'
}

/** input type for inserting data into table "students_topics_overdue" */
export type Students_Topics_Overdue_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  due_date?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  topic?: Maybe<Topics_Obj_Rel_Insert_Input>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Students_Topics_Overdue_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  due_date?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "students_topics_overdue" */
export type Students_Topics_Overdue_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  due_date?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Students_Topics_Overdue_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  due_date?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "students_topics_overdue" */
export type Students_Topics_Overdue_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  due_date?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "students_topics_overdue" */
export type Students_Topics_Overdue_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Students_Topics_Overdue>;
};

/** input type for inserting object relation for remote table "students_topics_overdue" */
export type Students_Topics_Overdue_Obj_Rel_Insert_Input = {
  data: Students_Topics_Overdue_Insert_Input;
  on_conflict?: Maybe<Students_Topics_Overdue_On_Conflict>;
};

/** on conflict condition type for table "students_topics_overdue" */
export type Students_Topics_Overdue_On_Conflict = {
  constraint: Students_Topics_Overdue_Constraint;
  update_columns: Array<Students_Topics_Overdue_Update_Column>;
  where?: Maybe<Students_Topics_Overdue_Bool_Exp>;
};

/** ordering options when selecting data from "students_topics_overdue" */
export type Students_Topics_Overdue_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  due_date?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  topic?: Maybe<Topics_Order_By>;
  topic_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "students_topics_overdue" */
export type Students_Topics_Overdue_Pk_Columns_Input = {
  student_id: Scalars['String'];
  topic_id: Scalars['String'];
};

/** select columns of table "students_topics_overdue" */
export enum Students_Topics_Overdue_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DueDate = 'due_date',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "students_topics_overdue" */
export type Students_Topics_Overdue_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  due_date?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "students_topics_overdue" */
export enum Students_Topics_Overdue_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DueDate = 'due_date',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** update columns of table "students" */
export enum Students_Update_Column {
  /** column name */
  AdditionalData = 'additional_data',
  /** column name */
  BillingDate = 'billing_date',
  /** column name */
  Biography = 'biography',
  /** column name */
  Birthday = 'birthday',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentGrade = 'current_grade',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EnrollmentStatus = 'enrollment_status',
  /** column name */
  OnTrial = 'on_trial',
  /** column name */
  PreviousGrade = 'previous_grade',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  StudentExternalId = 'student_external_id',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudentNote = 'student_note',
  /** column name */
  TargetUniversity = 'target_university',
  /** column name */
  TotalQuestionLimit = 'total_question_limit',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Students_Var_Pop_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
  previous_grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_question_limit?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "students" */
export type Students_Var_Pop_Order_By = {
  current_grade?: Maybe<Order_By>;
  previous_grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  total_question_limit?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Students_Var_Samp_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
  previous_grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_question_limit?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "students" */
export type Students_Var_Samp_Order_By = {
  current_grade?: Maybe<Order_By>;
  previous_grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  total_question_limit?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Students_Variance_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
  previous_grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_question_limit?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "students" */
export type Students_Variance_Order_By = {
  current_grade?: Maybe<Order_By>;
  previous_grade?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  total_question_limit?: Maybe<Order_By>;
};

/** columns and relationships of "study_plan_items" */
export type Study_Plan_Items = {
  /** An object relationship */
  assignment_study_plan_item?: Maybe<Assignment_Study_Plan_Items>;
  /** An array relationship */
  assignment_study_plan_items: Array<Assignment_Study_Plan_Items>;
  /** An aggregated array relationship */
  assignment_study_plan_items_aggregate: Assignment_Study_Plan_Items_Aggregate;
  available_from?: Maybe<Scalars['timestamptz']>;
  available_to?: Maybe<Scalars['timestamptz']>;
  completed_at?: Maybe<Scalars['timestamptz']>;
  content_structure?: Maybe<Scalars['jsonb']>;
  content_structure_flatten?: Maybe<Scalars['String']>;
  copy_study_plan_item_id?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order: Scalars['Int'];
  end_date?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  lo_study_plan_item?: Maybe<Lo_Study_Plan_Items>;
  /** An array relationship */
  lo_study_plan_items: Array<Lo_Study_Plan_Items>;
  /** An aggregated array relationship */
  lo_study_plan_items_aggregate: Lo_Study_Plan_Items_Aggregate;
  resource_path?: Maybe<Scalars['String']>;
  school_date?: Maybe<Scalars['timestamptz']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  /** An object relationship */
  study_plan?: Maybe<Study_Plans>;
  study_plan_id?: Maybe<Scalars['String']>;
  study_plan_item_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "study_plan_items" */
export type Study_Plan_ItemsAssignment_Study_Plan_ItemsArgs = {
  distinct_on?: Maybe<Array<Assignment_Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assignment_Study_Plan_Items_Order_By>>;
  where?: Maybe<Assignment_Study_Plan_Items_Bool_Exp>;
};


/** columns and relationships of "study_plan_items" */
export type Study_Plan_ItemsAssignment_Study_Plan_Items_AggregateArgs = {
  distinct_on?: Maybe<Array<Assignment_Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assignment_Study_Plan_Items_Order_By>>;
  where?: Maybe<Assignment_Study_Plan_Items_Bool_Exp>;
};


/** columns and relationships of "study_plan_items" */
export type Study_Plan_ItemsContent_StructureArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "study_plan_items" */
export type Study_Plan_ItemsLo_Study_Plan_ItemsArgs = {
  distinct_on?: Maybe<Array<Lo_Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lo_Study_Plan_Items_Order_By>>;
  where?: Maybe<Lo_Study_Plan_Items_Bool_Exp>;
};


/** columns and relationships of "study_plan_items" */
export type Study_Plan_ItemsLo_Study_Plan_Items_AggregateArgs = {
  distinct_on?: Maybe<Array<Lo_Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lo_Study_Plan_Items_Order_By>>;
  where?: Maybe<Lo_Study_Plan_Items_Bool_Exp>;
};

/** aggregated selection of "study_plan_items" */
export type Study_Plan_Items_Aggregate = {
  aggregate?: Maybe<Study_Plan_Items_Aggregate_Fields>;
  nodes: Array<Study_Plan_Items>;
};

/** aggregate fields of "study_plan_items" */
export type Study_Plan_Items_Aggregate_Fields = {
  avg?: Maybe<Study_Plan_Items_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Study_Plan_Items_Max_Fields>;
  min?: Maybe<Study_Plan_Items_Min_Fields>;
  stddev?: Maybe<Study_Plan_Items_Stddev_Fields>;
  stddev_pop?: Maybe<Study_Plan_Items_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Study_Plan_Items_Stddev_Samp_Fields>;
  sum?: Maybe<Study_Plan_Items_Sum_Fields>;
  var_pop?: Maybe<Study_Plan_Items_Var_Pop_Fields>;
  var_samp?: Maybe<Study_Plan_Items_Var_Samp_Fields>;
  variance?: Maybe<Study_Plan_Items_Variance_Fields>;
};


/** aggregate fields of "study_plan_items" */
export type Study_Plan_Items_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Study_Plan_Items_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "study_plan_items" */
export type Study_Plan_Items_Aggregate_Order_By = {
  avg?: Maybe<Study_Plan_Items_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Study_Plan_Items_Max_Order_By>;
  min?: Maybe<Study_Plan_Items_Min_Order_By>;
  stddev?: Maybe<Study_Plan_Items_Stddev_Order_By>;
  stddev_pop?: Maybe<Study_Plan_Items_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Study_Plan_Items_Stddev_Samp_Order_By>;
  sum?: Maybe<Study_Plan_Items_Sum_Order_By>;
  var_pop?: Maybe<Study_Plan_Items_Var_Pop_Order_By>;
  var_samp?: Maybe<Study_Plan_Items_Var_Samp_Order_By>;
  variance?: Maybe<Study_Plan_Items_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Study_Plan_Items_Append_Input = {
  content_structure?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "study_plan_items" */
export type Study_Plan_Items_Arr_Rel_Insert_Input = {
  data: Array<Study_Plan_Items_Insert_Input>;
  on_conflict?: Maybe<Study_Plan_Items_On_Conflict>;
};

/** aggregate avg on columns */
export type Study_Plan_Items_Avg_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "study_plan_items" */
export type Study_Plan_Items_Avg_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "study_plan_items". All fields are combined with a logical 'AND'. */
export type Study_Plan_Items_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Study_Plan_Items_Bool_Exp>>>;
  _not?: Maybe<Study_Plan_Items_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Study_Plan_Items_Bool_Exp>>>;
  assignment_study_plan_item?: Maybe<Assignment_Study_Plan_Items_Bool_Exp>;
  assignment_study_plan_items?: Maybe<Assignment_Study_Plan_Items_Bool_Exp>;
  available_from?: Maybe<Timestamptz_Comparison_Exp>;
  available_to?: Maybe<Timestamptz_Comparison_Exp>;
  completed_at?: Maybe<Timestamptz_Comparison_Exp>;
  content_structure?: Maybe<Jsonb_Comparison_Exp>;
  content_structure_flatten?: Maybe<String_Comparison_Exp>;
  copy_study_plan_item_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  display_order?: Maybe<Int_Comparison_Exp>;
  end_date?: Maybe<Timestamptz_Comparison_Exp>;
  lo_study_plan_item?: Maybe<Lo_Study_Plan_Items_Bool_Exp>;
  lo_study_plan_items?: Maybe<Lo_Study_Plan_Items_Bool_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  school_date?: Maybe<Timestamptz_Comparison_Exp>;
  start_date?: Maybe<Timestamptz_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  study_plan?: Maybe<Study_Plans_Bool_Exp>;
  study_plan_id?: Maybe<String_Comparison_Exp>;
  study_plan_item_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "study_plan_items" */
export enum Study_Plan_Items_Constraint {
  /** unique or primary key constraint */
  StudyPlanContentStructureIdx = 'study_plan_content_structure_idx',
  /** unique or primary key constraint */
  StudyPlanItemsPk = 'study_plan_items_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Study_Plan_Items_Delete_At_Path_Input = {
  content_structure?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Study_Plan_Items_Delete_Elem_Input = {
  content_structure?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Study_Plan_Items_Delete_Key_Input = {
  content_structure?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "study_plan_items" */
export type Study_Plan_Items_Inc_Input = {
  display_order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "study_plan_items" */
export type Study_Plan_Items_Insert_Input = {
  assignment_study_plan_item?: Maybe<Assignment_Study_Plan_Items_Obj_Rel_Insert_Input>;
  assignment_study_plan_items?: Maybe<Assignment_Study_Plan_Items_Arr_Rel_Insert_Input>;
  available_from?: Maybe<Scalars['timestamptz']>;
  available_to?: Maybe<Scalars['timestamptz']>;
  completed_at?: Maybe<Scalars['timestamptz']>;
  content_structure?: Maybe<Scalars['jsonb']>;
  content_structure_flatten?: Maybe<Scalars['String']>;
  copy_study_plan_item_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  lo_study_plan_item?: Maybe<Lo_Study_Plan_Items_Obj_Rel_Insert_Input>;
  lo_study_plan_items?: Maybe<Lo_Study_Plan_Items_Arr_Rel_Insert_Input>;
  resource_path?: Maybe<Scalars['String']>;
  school_date?: Maybe<Scalars['timestamptz']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  study_plan?: Maybe<Study_Plans_Obj_Rel_Insert_Input>;
  study_plan_id?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Study_Plan_Items_Max_Fields = {
  available_from?: Maybe<Scalars['timestamptz']>;
  available_to?: Maybe<Scalars['timestamptz']>;
  completed_at?: Maybe<Scalars['timestamptz']>;
  content_structure_flatten?: Maybe<Scalars['String']>;
  copy_study_plan_item_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_date?: Maybe<Scalars['timestamptz']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  study_plan_id?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "study_plan_items" */
export type Study_Plan_Items_Max_Order_By = {
  available_from?: Maybe<Order_By>;
  available_to?: Maybe<Order_By>;
  completed_at?: Maybe<Order_By>;
  content_structure_flatten?: Maybe<Order_By>;
  copy_study_plan_item_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  end_date?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_date?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  study_plan_id?: Maybe<Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Study_Plan_Items_Min_Fields = {
  available_from?: Maybe<Scalars['timestamptz']>;
  available_to?: Maybe<Scalars['timestamptz']>;
  completed_at?: Maybe<Scalars['timestamptz']>;
  content_structure_flatten?: Maybe<Scalars['String']>;
  copy_study_plan_item_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_date?: Maybe<Scalars['timestamptz']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  study_plan_id?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "study_plan_items" */
export type Study_Plan_Items_Min_Order_By = {
  available_from?: Maybe<Order_By>;
  available_to?: Maybe<Order_By>;
  completed_at?: Maybe<Order_By>;
  content_structure_flatten?: Maybe<Order_By>;
  copy_study_plan_item_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  end_date?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_date?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  study_plan_id?: Maybe<Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "study_plan_items" */
export type Study_Plan_Items_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Study_Plan_Items>;
};

/** input type for inserting object relation for remote table "study_plan_items" */
export type Study_Plan_Items_Obj_Rel_Insert_Input = {
  data: Study_Plan_Items_Insert_Input;
  on_conflict?: Maybe<Study_Plan_Items_On_Conflict>;
};

/** on conflict condition type for table "study_plan_items" */
export type Study_Plan_Items_On_Conflict = {
  constraint: Study_Plan_Items_Constraint;
  update_columns: Array<Study_Plan_Items_Update_Column>;
  where?: Maybe<Study_Plan_Items_Bool_Exp>;
};

/** ordering options when selecting data from "study_plan_items" */
export type Study_Plan_Items_Order_By = {
  assignment_study_plan_item?: Maybe<Assignment_Study_Plan_Items_Order_By>;
  assignment_study_plan_items_aggregate?: Maybe<Assignment_Study_Plan_Items_Aggregate_Order_By>;
  available_from?: Maybe<Order_By>;
  available_to?: Maybe<Order_By>;
  completed_at?: Maybe<Order_By>;
  content_structure?: Maybe<Order_By>;
  content_structure_flatten?: Maybe<Order_By>;
  copy_study_plan_item_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  end_date?: Maybe<Order_By>;
  lo_study_plan_item?: Maybe<Lo_Study_Plan_Items_Order_By>;
  lo_study_plan_items_aggregate?: Maybe<Lo_Study_Plan_Items_Aggregate_Order_By>;
  resource_path?: Maybe<Order_By>;
  school_date?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  study_plan?: Maybe<Study_Plans_Order_By>;
  study_plan_id?: Maybe<Order_By>;
  study_plan_item_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "study_plan_items" */
export type Study_Plan_Items_Pk_Columns_Input = {
  study_plan_item_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Study_Plan_Items_Prepend_Input = {
  content_structure?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "study_plan_items" */
export enum Study_Plan_Items_Select_Column {
  /** column name */
  AvailableFrom = 'available_from',
  /** column name */
  AvailableTo = 'available_to',
  /** column name */
  CompletedAt = 'completed_at',
  /** column name */
  ContentStructure = 'content_structure',
  /** column name */
  ContentStructureFlatten = 'content_structure_flatten',
  /** column name */
  CopyStudyPlanItemId = 'copy_study_plan_item_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolDate = 'school_date',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Status = 'status',
  /** column name */
  StudyPlanId = 'study_plan_id',
  /** column name */
  StudyPlanItemId = 'study_plan_item_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "study_plan_items" */
export type Study_Plan_Items_Set_Input = {
  available_from?: Maybe<Scalars['timestamptz']>;
  available_to?: Maybe<Scalars['timestamptz']>;
  completed_at?: Maybe<Scalars['timestamptz']>;
  content_structure?: Maybe<Scalars['jsonb']>;
  content_structure_flatten?: Maybe<Scalars['String']>;
  copy_study_plan_item_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_date?: Maybe<Scalars['timestamptz']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  study_plan_id?: Maybe<Scalars['String']>;
  study_plan_item_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Study_Plan_Items_Stddev_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "study_plan_items" */
export type Study_Plan_Items_Stddev_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Study_Plan_Items_Stddev_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "study_plan_items" */
export type Study_Plan_Items_Stddev_Pop_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Study_Plan_Items_Stddev_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "study_plan_items" */
export type Study_Plan_Items_Stddev_Samp_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Study_Plan_Items_Sum_Fields = {
  display_order?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "study_plan_items" */
export type Study_Plan_Items_Sum_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** update columns of table "study_plan_items" */
export enum Study_Plan_Items_Update_Column {
  /** column name */
  AvailableFrom = 'available_from',
  /** column name */
  AvailableTo = 'available_to',
  /** column name */
  CompletedAt = 'completed_at',
  /** column name */
  ContentStructure = 'content_structure',
  /** column name */
  ContentStructureFlatten = 'content_structure_flatten',
  /** column name */
  CopyStudyPlanItemId = 'copy_study_plan_item_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolDate = 'school_date',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Status = 'status',
  /** column name */
  StudyPlanId = 'study_plan_id',
  /** column name */
  StudyPlanItemId = 'study_plan_item_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Study_Plan_Items_Var_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "study_plan_items" */
export type Study_Plan_Items_Var_Pop_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Study_Plan_Items_Var_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "study_plan_items" */
export type Study_Plan_Items_Var_Samp_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Study_Plan_Items_Variance_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "study_plan_items" */
export type Study_Plan_Items_Variance_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** columns and relationships of "study_plans" */
export type Study_Plans = {
  book_id?: Maybe<Scalars['String']>;
  /** An array relationship */
  class_study_plans: Array<Class_Study_Plans>;
  /** An aggregated array relationship */
  class_study_plans_aggregate: Class_Study_Plans_Aggregate;
  course_id?: Maybe<Scalars['String']>;
  /** An array relationship */
  course_study_plans: Array<Course_Study_Plans>;
  /** An aggregated array relationship */
  course_study_plans_aggregate: Course_Study_Plans_Aggregate;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grades?: Maybe<Scalars['_int4']>;
  master_study_plan_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  /** An array relationship */
  student_study_plans: Array<Student_Study_Plans>;
  /** An aggregated array relationship */
  student_study_plans_aggregate: Student_Study_Plans_Aggregate;
  /** An object relationship */
  study_plan?: Maybe<Study_Plans>;
  study_plan_id: Scalars['String'];
  /** An array relationship */
  study_plan_items: Array<Study_Plan_Items>;
  /** An aggregated array relationship */
  study_plan_items_aggregate: Study_Plan_Items_Aggregate;
  study_plan_type?: Maybe<Scalars['String']>;
  /** An array relationship */
  study_plans: Array<Study_Plans>;
  /** An aggregated array relationship */
  study_plans_aggregate: Study_Plans_Aggregate;
  track_school_progress?: Maybe<Scalars['Boolean']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "study_plans" */
export type Study_PlansClass_Study_PlansArgs = {
  distinct_on?: Maybe<Array<Class_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Study_Plans_Order_By>>;
  where?: Maybe<Class_Study_Plans_Bool_Exp>;
};


/** columns and relationships of "study_plans" */
export type Study_PlansClass_Study_Plans_AggregateArgs = {
  distinct_on?: Maybe<Array<Class_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Study_Plans_Order_By>>;
  where?: Maybe<Class_Study_Plans_Bool_Exp>;
};


/** columns and relationships of "study_plans" */
export type Study_PlansCourse_Study_PlansArgs = {
  distinct_on?: Maybe<Array<Course_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Study_Plans_Order_By>>;
  where?: Maybe<Course_Study_Plans_Bool_Exp>;
};


/** columns and relationships of "study_plans" */
export type Study_PlansCourse_Study_Plans_AggregateArgs = {
  distinct_on?: Maybe<Array<Course_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Study_Plans_Order_By>>;
  where?: Maybe<Course_Study_Plans_Bool_Exp>;
};


/** columns and relationships of "study_plans" */
export type Study_PlansStudent_Study_PlansArgs = {
  distinct_on?: Maybe<Array<Student_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Study_Plans_Order_By>>;
  where?: Maybe<Student_Study_Plans_Bool_Exp>;
};


/** columns and relationships of "study_plans" */
export type Study_PlansStudent_Study_Plans_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Study_Plans_Order_By>>;
  where?: Maybe<Student_Study_Plans_Bool_Exp>;
};


/** columns and relationships of "study_plans" */
export type Study_PlansStudy_Plan_ItemsArgs = {
  distinct_on?: Maybe<Array<Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Study_Plan_Items_Order_By>>;
  where?: Maybe<Study_Plan_Items_Bool_Exp>;
};


/** columns and relationships of "study_plans" */
export type Study_PlansStudy_Plan_Items_AggregateArgs = {
  distinct_on?: Maybe<Array<Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Study_Plan_Items_Order_By>>;
  where?: Maybe<Study_Plan_Items_Bool_Exp>;
};


/** columns and relationships of "study_plans" */
export type Study_PlansStudy_PlansArgs = {
  distinct_on?: Maybe<Array<Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Study_Plans_Order_By>>;
  where?: Maybe<Study_Plans_Bool_Exp>;
};


/** columns and relationships of "study_plans" */
export type Study_PlansStudy_Plans_AggregateArgs = {
  distinct_on?: Maybe<Array<Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Study_Plans_Order_By>>;
  where?: Maybe<Study_Plans_Bool_Exp>;
};

/** aggregated selection of "study_plans" */
export type Study_Plans_Aggregate = {
  aggregate?: Maybe<Study_Plans_Aggregate_Fields>;
  nodes: Array<Study_Plans>;
};

/** aggregate fields of "study_plans" */
export type Study_Plans_Aggregate_Fields = {
  avg?: Maybe<Study_Plans_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Study_Plans_Max_Fields>;
  min?: Maybe<Study_Plans_Min_Fields>;
  stddev?: Maybe<Study_Plans_Stddev_Fields>;
  stddev_pop?: Maybe<Study_Plans_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Study_Plans_Stddev_Samp_Fields>;
  sum?: Maybe<Study_Plans_Sum_Fields>;
  var_pop?: Maybe<Study_Plans_Var_Pop_Fields>;
  var_samp?: Maybe<Study_Plans_Var_Samp_Fields>;
  variance?: Maybe<Study_Plans_Variance_Fields>;
};


/** aggregate fields of "study_plans" */
export type Study_Plans_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Study_Plans_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "study_plans" */
export type Study_Plans_Aggregate_Order_By = {
  avg?: Maybe<Study_Plans_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Study_Plans_Max_Order_By>;
  min?: Maybe<Study_Plans_Min_Order_By>;
  stddev?: Maybe<Study_Plans_Stddev_Order_By>;
  stddev_pop?: Maybe<Study_Plans_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Study_Plans_Stddev_Samp_Order_By>;
  sum?: Maybe<Study_Plans_Sum_Order_By>;
  var_pop?: Maybe<Study_Plans_Var_Pop_Order_By>;
  var_samp?: Maybe<Study_Plans_Var_Samp_Order_By>;
  variance?: Maybe<Study_Plans_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "study_plans" */
export type Study_Plans_Arr_Rel_Insert_Input = {
  data: Array<Study_Plans_Insert_Input>;
  on_conflict?: Maybe<Study_Plans_On_Conflict>;
};

/** aggregate avg on columns */
export type Study_Plans_Avg_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "study_plans" */
export type Study_Plans_Avg_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "study_plans". All fields are combined with a logical 'AND'. */
export type Study_Plans_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Study_Plans_Bool_Exp>>>;
  _not?: Maybe<Study_Plans_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Study_Plans_Bool_Exp>>>;
  book_id?: Maybe<String_Comparison_Exp>;
  class_study_plans?: Maybe<Class_Study_Plans_Bool_Exp>;
  course_id?: Maybe<String_Comparison_Exp>;
  course_study_plans?: Maybe<Course_Study_Plans_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  grades?: Maybe<_Int4_Comparison_Exp>;
  master_study_plan_id?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  school_id?: Maybe<Int_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  student_study_plans?: Maybe<Student_Study_Plans_Bool_Exp>;
  study_plan?: Maybe<Study_Plans_Bool_Exp>;
  study_plan_id?: Maybe<String_Comparison_Exp>;
  study_plan_items?: Maybe<Study_Plan_Items_Bool_Exp>;
  study_plan_type?: Maybe<String_Comparison_Exp>;
  study_plans?: Maybe<Study_Plans_Bool_Exp>;
  track_school_progress?: Maybe<Boolean_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "study_plans" */
export enum Study_Plans_Constraint {
  /** unique or primary key constraint */
  StudyPlansPk = 'study_plans_pk'
}

/** input type for incrementing integer column in table "study_plans" */
export type Study_Plans_Inc_Input = {
  school_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "study_plans" */
export type Study_Plans_Insert_Input = {
  book_id?: Maybe<Scalars['String']>;
  class_study_plans?: Maybe<Class_Study_Plans_Arr_Rel_Insert_Input>;
  course_id?: Maybe<Scalars['String']>;
  course_study_plans?: Maybe<Course_Study_Plans_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grades?: Maybe<Scalars['_int4']>;
  master_study_plan_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  student_study_plans?: Maybe<Student_Study_Plans_Arr_Rel_Insert_Input>;
  study_plan?: Maybe<Study_Plans_Obj_Rel_Insert_Input>;
  study_plan_id?: Maybe<Scalars['String']>;
  study_plan_items?: Maybe<Study_Plan_Items_Arr_Rel_Insert_Input>;
  study_plan_type?: Maybe<Scalars['String']>;
  study_plans?: Maybe<Study_Plans_Arr_Rel_Insert_Input>;
  track_school_progress?: Maybe<Scalars['Boolean']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Study_Plans_Max_Fields = {
  book_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  master_study_plan_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  study_plan_id?: Maybe<Scalars['String']>;
  study_plan_type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "study_plans" */
export type Study_Plans_Max_Order_By = {
  book_id?: Maybe<Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  master_study_plan_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  study_plan_id?: Maybe<Order_By>;
  study_plan_type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Study_Plans_Min_Fields = {
  book_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  master_study_plan_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  study_plan_id?: Maybe<Scalars['String']>;
  study_plan_type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "study_plans" */
export type Study_Plans_Min_Order_By = {
  book_id?: Maybe<Order_By>;
  course_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  master_study_plan_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  study_plan_id?: Maybe<Order_By>;
  study_plan_type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "study_plans" */
export type Study_Plans_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Study_Plans>;
};

/** input type for inserting object relation for remote table "study_plans" */
export type Study_Plans_Obj_Rel_Insert_Input = {
  data: Study_Plans_Insert_Input;
  on_conflict?: Maybe<Study_Plans_On_Conflict>;
};

/** on conflict condition type for table "study_plans" */
export type Study_Plans_On_Conflict = {
  constraint: Study_Plans_Constraint;
  update_columns: Array<Study_Plans_Update_Column>;
  where?: Maybe<Study_Plans_Bool_Exp>;
};

/** ordering options when selecting data from "study_plans" */
export type Study_Plans_Order_By = {
  book_id?: Maybe<Order_By>;
  class_study_plans_aggregate?: Maybe<Class_Study_Plans_Aggregate_Order_By>;
  course_id?: Maybe<Order_By>;
  course_study_plans_aggregate?: Maybe<Course_Study_Plans_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  grades?: Maybe<Order_By>;
  master_study_plan_id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_study_plans_aggregate?: Maybe<Student_Study_Plans_Aggregate_Order_By>;
  study_plan?: Maybe<Study_Plans_Order_By>;
  study_plan_id?: Maybe<Order_By>;
  study_plan_items_aggregate?: Maybe<Study_Plan_Items_Aggregate_Order_By>;
  study_plan_type?: Maybe<Order_By>;
  study_plans_aggregate?: Maybe<Study_Plans_Aggregate_Order_By>;
  track_school_progress?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "study_plans" */
export type Study_Plans_Pk_Columns_Input = {
  study_plan_id: Scalars['String'];
};

/** select columns of table "study_plans" */
export enum Study_Plans_Select_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Grades = 'grades',
  /** column name */
  MasterStudyPlanId = 'master_study_plan_id',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Status = 'status',
  /** column name */
  StudyPlanId = 'study_plan_id',
  /** column name */
  StudyPlanType = 'study_plan_type',
  /** column name */
  TrackSchoolProgress = 'track_school_progress',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "study_plans" */
export type Study_Plans_Set_Input = {
  book_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grades?: Maybe<Scalars['_int4']>;
  master_study_plan_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  study_plan_id?: Maybe<Scalars['String']>;
  study_plan_type?: Maybe<Scalars['String']>;
  track_school_progress?: Maybe<Scalars['Boolean']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Study_Plans_Stddev_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "study_plans" */
export type Study_Plans_Stddev_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Study_Plans_Stddev_Pop_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "study_plans" */
export type Study_Plans_Stddev_Pop_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Study_Plans_Stddev_Samp_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "study_plans" */
export type Study_Plans_Stddev_Samp_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Study_Plans_Sum_Fields = {
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "study_plans" */
export type Study_Plans_Sum_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** update columns of table "study_plans" */
export enum Study_Plans_Update_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Grades = 'grades',
  /** column name */
  MasterStudyPlanId = 'master_study_plan_id',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Status = 'status',
  /** column name */
  StudyPlanId = 'study_plan_id',
  /** column name */
  StudyPlanType = 'study_plan_type',
  /** column name */
  TrackSchoolProgress = 'track_school_progress',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Study_Plans_Var_Pop_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "study_plans" */
export type Study_Plans_Var_Pop_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Study_Plans_Var_Samp_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "study_plans" */
export type Study_Plans_Var_Samp_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Study_Plans_Variance_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "study_plans" */
export type Study_Plans_Variance_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** subscription root */
export type Subscription_Root = {
  /** fetch data from the table: "academic_years" */
  academic_years: Array<Academic_Years>;
  /** fetch aggregated fields from the table: "academic_years" */
  academic_years_aggregate: Academic_Years_Aggregate;
  /** fetch data from the table: "academic_years" using primary key columns */
  academic_years_by_pk?: Maybe<Academic_Years>;
  /** fetch data from the table: "activity_logs" */
  activity_logs: Array<Activity_Logs>;
  /** fetch aggregated fields from the table: "activity_logs" */
  activity_logs_aggregate: Activity_Logs_Aggregate;
  /** fetch data from the table: "activity_logs" using primary key columns */
  activity_logs_by_pk?: Maybe<Activity_Logs>;
  /** fetch data from the table: "apple_users" */
  apple_users: Array<Apple_Users>;
  /** fetch aggregated fields from the table: "apple_users" */
  apple_users_aggregate: Apple_Users_Aggregate;
  /** fetch data from the table: "apple_users" using primary key columns */
  apple_users_by_pk?: Maybe<Apple_Users>;
  /** fetch data from the table: "assign_study_plan_tasks" */
  assign_study_plan_tasks: Array<Assign_Study_Plan_Tasks>;
  /** fetch aggregated fields from the table: "assign_study_plan_tasks" */
  assign_study_plan_tasks_aggregate: Assign_Study_Plan_Tasks_Aggregate;
  /** fetch data from the table: "assign_study_plan_tasks" using primary key columns */
  assign_study_plan_tasks_by_pk?: Maybe<Assign_Study_Plan_Tasks>;
  /** fetch data from the table: "assignment_study_plan_items" */
  assignment_study_plan_items: Array<Assignment_Study_Plan_Items>;
  /** fetch aggregated fields from the table: "assignment_study_plan_items" */
  assignment_study_plan_items_aggregate: Assignment_Study_Plan_Items_Aggregate;
  /** fetch data from the table: "assignment_study_plan_items" using primary key columns */
  assignment_study_plan_items_by_pk?: Maybe<Assignment_Study_Plan_Items>;
  /** fetch data from the table: "assignments" */
  assignments: Array<Assignments>;
  /** fetch aggregated fields from the table: "assignments" */
  assignments_aggregate: Assignments_Aggregate;
  /** fetch data from the table: "assignments" using primary key columns */
  assignments_by_pk?: Maybe<Assignments>;
  /** fetch data from the table: "bill_item" */
  bill_item: Array<Bill_Item>;
  /** fetch aggregated fields from the table: "bill_item" */
  bill_item_aggregate: Bill_Item_Aggregate;
  /** fetch data from the table: "bill_item" using primary key columns */
  bill_item_by_pk?: Maybe<Bill_Item>;
  /** fetch data from the table: "billing_histories" */
  billing_histories: Array<Billing_Histories>;
  /** fetch aggregated fields from the table: "billing_histories" */
  billing_histories_aggregate: Billing_Histories_Aggregate;
  /** fetch data from the table: "billing_histories" using primary key columns */
  billing_histories_by_pk?: Maybe<Billing_Histories>;
  /** fetch data from the table: "billing_schedule" */
  billing_schedule: Array<Billing_Schedule>;
  /** fetch aggregated fields from the table: "billing_schedule" */
  billing_schedule_aggregate: Billing_Schedule_Aggregate;
  /** fetch data from the table: "billing_schedule" using primary key columns */
  billing_schedule_by_pk?: Maybe<Billing_Schedule>;
  /** fetch data from the table: "billing_schedule_period" */
  billing_schedule_period: Array<Billing_Schedule_Period>;
  /** fetch aggregated fields from the table: "billing_schedule_period" */
  billing_schedule_period_aggregate: Billing_Schedule_Period_Aggregate;
  /** fetch data from the table: "billing_schedule_period" using primary key columns */
  billing_schedule_period_by_pk?: Maybe<Billing_Schedule_Period>;
  /** fetch data from the table: "books" */
  books: Array<Books>;
  /** fetch aggregated fields from the table: "books" */
  books_aggregate: Books_Aggregate;
  /** fetch data from the table: "books" using primary key columns */
  books_by_pk?: Maybe<Books>;
  /** fetch data from the table: "books_chapters" */
  books_chapters: Array<Books_Chapters>;
  /** fetch aggregated fields from the table: "books_chapters" */
  books_chapters_aggregate: Books_Chapters_Aggregate;
  /** fetch data from the table: "books_chapters" using primary key columns */
  books_chapters_by_pk?: Maybe<Books_Chapters>;
  /** fetch data from the table: "brands" */
  brands: Array<Brands>;
  /** fetch aggregated fields from the table: "brands" */
  brands_aggregate: Brands_Aggregate;
  /** fetch data from the table: "brands" using primary key columns */
  brands_by_pk?: Maybe<Brands>;
  /** fetch data from the table: "centers" */
  centers: Array<Centers>;
  /** fetch aggregated fields from the table: "centers" */
  centers_aggregate: Centers_Aggregate;
  /** fetch data from the table: "centers" using primary key columns */
  centers_by_pk?: Maybe<Centers>;
  /** fetch data from the table: "chapters" */
  chapters: Array<Chapters>;
  /** fetch aggregated fields from the table: "chapters" */
  chapters_aggregate: Chapters_Aggregate;
  /** fetch data from the table: "chapters" using primary key columns */
  chapters_by_pk?: Maybe<Chapters>;
  /** fetch data from the table: "cities" */
  cities: Array<Cities>;
  /** fetch aggregated fields from the table: "cities" */
  cities_aggregate: Cities_Aggregate;
  /** fetch data from the table: "cities" using primary key columns */
  cities_by_pk?: Maybe<Cities>;
  /** fetch data from the table: "class_members" */
  class_members: Array<Class_Members>;
  /** fetch aggregated fields from the table: "class_members" */
  class_members_aggregate: Class_Members_Aggregate;
  /** fetch data from the table: "class_members" using primary key columns */
  class_members_by_pk?: Maybe<Class_Members>;
  /** fetch data from the table: "class_preset_study_plans" */
  class_preset_study_plans: Array<Class_Preset_Study_Plans>;
  /** fetch aggregated fields from the table: "class_preset_study_plans" */
  class_preset_study_plans_aggregate: Class_Preset_Study_Plans_Aggregate;
  /** fetch data from the table: "class_preset_study_plans" using primary key columns */
  class_preset_study_plans_by_pk?: Maybe<Class_Preset_Study_Plans>;
  /** fetch data from the table: "class_students" */
  class_students: Array<Class_Students>;
  /** fetch aggregated fields from the table: "class_students" */
  class_students_aggregate: Class_Students_Aggregate;
  /** fetch data from the table: "class_students" using primary key columns */
  class_students_by_pk?: Maybe<Class_Students>;
  /** fetch data from the table: "class_study_plans" */
  class_study_plans: Array<Class_Study_Plans>;
  /** fetch aggregated fields from the table: "class_study_plans" */
  class_study_plans_aggregate: Class_Study_Plans_Aggregate;
  /** fetch data from the table: "class_study_plans" using primary key columns */
  class_study_plans_by_pk?: Maybe<Class_Study_Plans>;
  /** fetch data from the table: "classes" */
  classes: Array<Classes>;
  /** fetch aggregated fields from the table: "classes" */
  classes_aggregate: Classes_Aggregate;
  /** fetch data from the table: "classes" using primary key columns */
  classes_by_pk?: Maybe<Classes>;
  /** fetch data from the table: "coaches" */
  coaches: Array<Coaches>;
  /** fetch aggregated fields from the table: "coaches" */
  coaches_aggregate: Coaches_Aggregate;
  /** fetch data from the table: "coaches" using primary key columns */
  coaches_by_pk?: Maybe<Coaches>;
  /** fetch data from the table: "cod_orders" */
  cod_orders: Array<Cod_Orders>;
  /** fetch aggregated fields from the table: "cod_orders" */
  cod_orders_aggregate: Cod_Orders_Aggregate;
  /** fetch data from the table: "cod_orders" using primary key columns */
  cod_orders_by_pk?: Maybe<Cod_Orders>;
  /** fetch data from the table: "configs" */
  configs: Array<Configs>;
  /** fetch aggregated fields from the table: "configs" */
  configs_aggregate: Configs_Aggregate;
  /** fetch data from the table: "configs" using primary key columns */
  configs_by_pk?: Maybe<Configs>;
  /** fetch data from the table: "conversion_tasks" */
  conversion_tasks: Array<Conversion_Tasks>;
  /** fetch aggregated fields from the table: "conversion_tasks" */
  conversion_tasks_aggregate: Conversion_Tasks_Aggregate;
  /** fetch data from the table: "conversion_tasks" using primary key columns */
  conversion_tasks_by_pk?: Maybe<Conversion_Tasks>;
  /** fetch data from the table: "course_access_paths" */
  course_access_paths: Array<Course_Access_Paths>;
  /** fetch aggregated fields from the table: "course_access_paths" */
  course_access_paths_aggregate: Course_Access_Paths_Aggregate;
  /** fetch data from the table: "course_access_paths" using primary key columns */
  course_access_paths_by_pk?: Maybe<Course_Access_Paths>;
  /** fetch data from the table: "course_classes" */
  course_classes: Array<Course_Classes>;
  /** fetch aggregated fields from the table: "course_classes" */
  course_classes_aggregate: Course_Classes_Aggregate;
  /** fetch data from the table: "course_classes" using primary key columns */
  course_classes_by_pk?: Maybe<Course_Classes>;
  /** fetch data from the table: "course_students" */
  course_students: Array<Course_Students>;
  /** fetch aggregated fields from the table: "course_students" */
  course_students_aggregate: Course_Students_Aggregate;
  /** fetch data from the table: "course_students" using primary key columns */
  course_students_by_pk?: Maybe<Course_Students>;
  /** fetch data from the table: "course_study_plans" */
  course_study_plans: Array<Course_Study_Plans>;
  /** fetch aggregated fields from the table: "course_study_plans" */
  course_study_plans_aggregate: Course_Study_Plans_Aggregate;
  /** fetch data from the table: "course_study_plans" using primary key columns */
  course_study_plans_by_pk?: Maybe<Course_Study_Plans>;
  /** fetch data from the table: "courses" */
  courses: Array<Courses>;
  /** fetch data from the table: "courses_academic_years" */
  courses_academic_years: Array<Courses_Academic_Years>;
  /** fetch aggregated fields from the table: "courses_academic_years" */
  courses_academic_years_aggregate: Courses_Academic_Years_Aggregate;
  /** fetch data from the table: "courses_academic_years" using primary key columns */
  courses_academic_years_by_pk?: Maybe<Courses_Academic_Years>;
  /** fetch aggregated fields from the table: "courses" */
  courses_aggregate: Courses_Aggregate;
  /** fetch data from the table: "courses_books" */
  courses_books: Array<Courses_Books>;
  /** fetch aggregated fields from the table: "courses_books" */
  courses_books_aggregate: Courses_Books_Aggregate;
  /** fetch data from the table: "courses_books" using primary key columns */
  courses_books_by_pk?: Maybe<Courses_Books>;
  /** fetch data from the table: "courses" using primary key columns */
  courses_by_pk?: Maybe<Courses>;
  /** fetch data from the table: "courses_classes" */
  courses_classes: Array<Courses_Classes>;
  /** fetch aggregated fields from the table: "courses_classes" */
  courses_classes_aggregate: Courses_Classes_Aggregate;
  /** fetch data from the table: "courses_classes" using primary key columns */
  courses_classes_by_pk?: Maybe<Courses_Classes>;
  /** fetch data from the table: "discount" */
  discount: Array<Discount>;
  /** fetch aggregated fields from the table: "discount" */
  discount_aggregate: Discount_Aggregate;
  /** fetch data from the table: "discount" using primary key columns */
  discount_by_pk?: Maybe<Discount>;
  /** fetch data from the table: "districts" */
  districts: Array<Districts>;
  /** fetch aggregated fields from the table: "districts" */
  districts_aggregate: Districts_Aggregate;
  /** fetch data from the table: "districts" using primary key columns */
  districts_by_pk?: Maybe<Districts>;
  /** fetch data from the table: "e2e_features" */
  e2e_features: Array<E2e_Features>;
  /** fetch aggregated fields from the table: "e2e_features" */
  e2e_features_aggregate: E2e_Features_Aggregate;
  /** fetch data from the table: "e2e_features" using primary key columns */
  e2e_features_by_pk?: Maybe<E2e_Features>;
  /** fetch data from the table: "e2e_instances" */
  e2e_instances: Array<E2e_Instances>;
  /** fetch aggregated fields from the table: "e2e_instances" */
  e2e_instances_aggregate: E2e_Instances_Aggregate;
  /** fetch data from the table: "e2e_instances" using primary key columns */
  e2e_instances_by_pk?: Maybe<E2e_Instances>;
  /** fetch data from the table: "e2e_scenarios" */
  e2e_scenarios: Array<E2e_Scenarios>;
  /** fetch aggregated fields from the table: "e2e_scenarios" */
  e2e_scenarios_aggregate: E2e_Scenarios_Aggregate;
  /** fetch data from the table: "e2e_scenarios" using primary key columns */
  e2e_scenarios_by_pk?: Maybe<E2e_Scenarios>;
  /** fetch data from the table: "e2e_steps" */
  e2e_steps: Array<E2e_Steps>;
  /** fetch aggregated fields from the table: "e2e_steps" */
  e2e_steps_aggregate: E2e_Steps_Aggregate;
  /** fetch data from the table: "e2e_steps" using primary key columns */
  e2e_steps_by_pk?: Maybe<E2e_Steps>;
  /** execute function "find_assignment_by_topic_id" which returns "assignments" */
  find_assignment_by_topic_id: Array<Assignments>;
  /** execute function "find_assignment_by_topic_id" and query aggregates on result of table type "assignments" */
  find_assignment_by_topic_id_aggregate: Assignments_Aggregate;
  /** execute function "find_quiz_by_lo_id" which returns "quizzes" */
  find_quiz_by_lo_id: Array<Quizzes>;
  /** execute function "find_quiz_by_lo_id" and query aggregates on result of table type "quizzes" */
  find_quiz_by_lo_id_aggregate: Quizzes_Aggregate;
  /** execute function "find_teacher_by_school_id" which returns "users" */
  find_teacher_by_school_id: Array<Users>;
  /** execute function "find_teacher_by_school_id" and query aggregates on result of table type "users" */
  find_teacher_by_school_id_aggregate: Users_Aggregate;
  /** execute function "get_list_course_student_study_plans_by_filter" which returns "course_students" */
  get_list_course_student_study_plans_by_filter: Array<Course_Students>;
  /** execute function "get_list_course_student_study_plans_by_filter" and query aggregates on result of table type "course_students" */
  get_list_course_student_study_plans_by_filter_aggregate: Course_Students_Aggregate;
  /** execute function "get_list_course_study_plan_by_filter" which returns "course_study_plans" */
  get_list_course_study_plan_by_filter: Array<Course_Study_Plans>;
  /** execute function "get_list_course_study_plan_by_filter" and query aggregates on result of table type "course_study_plans" */
  get_list_course_study_plan_by_filter_aggregate: Course_Study_Plans_Aggregate;
  /** execute function "get_locations_active_by_course_id" which returns "course_access_paths" */
  get_locations_active_by_course_id: Array<Course_Access_Paths>;
  /** execute function "get_locations_active_by_course_id" and query aggregates on result of table type "course_access_paths" */
  get_locations_active_by_course_id_aggregate: Course_Access_Paths_Aggregate;
  /** execute function "get_locations_lowest_level" which returns "locations" */
  get_locations_lowest_level: Array<Locations>;
  /** execute function "get_locations_lowest_level" and query aggregates on result of table type "locations" */
  get_locations_lowest_level_aggregate: Locations_Aggregate;
  /** execute function "get_partner_dynamic_form_field_values_by_student" which returns "partner_dynamic_form_field_values" */
  get_partner_dynamic_form_field_values_by_student: Array<Partner_Dynamic_Form_Field_Values>;
  /** execute function "get_partner_dynamic_form_field_values_by_student" and query aggregates on result of table type "partner_dynamic_form_field_values" */
  get_partner_dynamic_form_field_values_by_student_aggregate: Partner_Dynamic_Form_Field_Values_Aggregate;
  /** execute function "get_previous_report_of_student" which returns "lesson_reports" */
  get_previous_report_of_student: Array<Lesson_Reports>;
  /** execute function "get_previous_report_of_student" and query aggregates on result of table type "lesson_reports" */
  get_previous_report_of_student_aggregate: Lesson_Reports_Aggregate;
  /** execute function "get_previous_report_of_student_v2" which returns "lesson_reports" */
  get_previous_report_of_student_v2: Array<Lesson_Reports>;
  /** execute function "get_previous_report_of_student_v2" and query aggregates on result of table type "lesson_reports" */
  get_previous_report_of_student_v2_aggregate: Lesson_Reports_Aggregate;
  /** execute function "get_previous_report_of_student_v3" which returns "lesson_reports" */
  get_previous_report_of_student_v3: Array<Lesson_Reports>;
  /** execute function "get_previous_report_of_student_v3" and query aggregates on result of table type "lesson_reports" */
  get_previous_report_of_student_v3_aggregate: Lesson_Reports_Aggregate;
  /** execute function "get_student_study_plans_by_filter" which returns "study_plans" */
  get_student_study_plans_by_filter: Array<Study_Plans>;
  /** execute function "get_student_study_plans_by_filter" and query aggregates on result of table type "study_plans" */
  get_student_study_plans_by_filter_aggregate: Study_Plans_Aggregate;
  /** fetch data from the table: "grade" */
  grade: Array<Grade>;
  /** fetch aggregated fields from the table: "grade" */
  grade_aggregate: Grade_Aggregate;
  /** fetch data from the table: "grade" using primary key columns */
  grade_by_pk?: Maybe<Grade>;
  /** fetch data from the table: "groups" */
  groups: Array<Groups>;
  /** fetch aggregated fields from the table: "groups" */
  groups_aggregate: Groups_Aggregate;
  /** fetch data from the table: "groups" using primary key columns */
  groups_by_pk?: Maybe<Groups>;
  /** fetch data from the table: "hub_tours" */
  hub_tours: Array<Hub_Tours>;
  /** fetch aggregated fields from the table: "hub_tours" */
  hub_tours_aggregate: Hub_Tours_Aggregate;
  /** fetch data from the table: "hub_tours" using primary key columns */
  hub_tours_by_pk?: Maybe<Hub_Tours>;
  /** fetch data from the table: "hubs" */
  hubs: Array<Hubs>;
  /** fetch aggregated fields from the table: "hubs" */
  hubs_aggregate: Hubs_Aggregate;
  /** fetch data from the table: "hubs" using primary key columns */
  hubs_by_pk?: Maybe<Hubs>;
  /** fetch data from the table: "info_notification_msgs" */
  info_notification_msgs: Array<Info_Notification_Msgs>;
  /** fetch aggregated fields from the table: "info_notification_msgs" */
  info_notification_msgs_aggregate: Info_Notification_Msgs_Aggregate;
  /** fetch data from the table: "info_notification_msgs" using primary key columns */
  info_notification_msgs_by_pk?: Maybe<Info_Notification_Msgs>;
  /** fetch data from the table: "info_notifications" */
  info_notifications: Array<Info_Notifications>;
  /** fetch aggregated fields from the table: "info_notifications" */
  info_notifications_aggregate: Info_Notifications_Aggregate;
  /** fetch data from the table: "info_notifications" using primary key columns */
  info_notifications_by_pk?: Maybe<Info_Notifications>;
  /** fetch data from the table: "ios_transactions" */
  ios_transactions: Array<Ios_Transactions>;
  /** fetch aggregated fields from the table: "ios_transactions" */
  ios_transactions_aggregate: Ios_Transactions_Aggregate;
  /** fetch data from the table: "ios_transactions" using primary key columns */
  ios_transactions_by_pk?: Maybe<Ios_Transactions>;
  /** fetch data from the table: "jpref_sync_data_logs" */
  jpref_sync_data_logs: Array<Jpref_Sync_Data_Logs>;
  /** fetch aggregated fields from the table: "jpref_sync_data_logs" */
  jpref_sync_data_logs_aggregate: Jpref_Sync_Data_Logs_Aggregate;
  /** fetch data from the table: "jpref_sync_data_logs" using primary key columns */
  jpref_sync_data_logs_by_pk?: Maybe<Jpref_Sync_Data_Logs>;
  /** fetch data from the table: "learning_objectives" */
  learning_objectives: Array<Learning_Objectives>;
  /** fetch aggregated fields from the table: "learning_objectives" */
  learning_objectives_aggregate: Learning_Objectives_Aggregate;
  /** fetch data from the table: "learning_objectives" using primary key columns */
  learning_objectives_by_pk?: Maybe<Learning_Objectives>;
  /** fetch data from the table: "lesson_groups" */
  lesson_groups: Array<Lesson_Groups>;
  /** fetch aggregated fields from the table: "lesson_groups" */
  lesson_groups_aggregate: Lesson_Groups_Aggregate;
  /** fetch data from the table: "lesson_groups" using primary key columns */
  lesson_groups_by_pk?: Maybe<Lesson_Groups>;
  /** fetch data from the table: "lesson_members" */
  lesson_members: Array<Lesson_Members>;
  /** fetch aggregated fields from the table: "lesson_members" */
  lesson_members_aggregate: Lesson_Members_Aggregate;
  /** fetch data from the table: "lesson_members" using primary key columns */
  lesson_members_by_pk?: Maybe<Lesson_Members>;
  /** fetch data from the table: "lesson_report_details" */
  lesson_report_details: Array<Lesson_Report_Details>;
  /** fetch aggregated fields from the table: "lesson_report_details" */
  lesson_report_details_aggregate: Lesson_Report_Details_Aggregate;
  /** fetch data from the table: "lesson_report_details" using primary key columns */
  lesson_report_details_by_pk?: Maybe<Lesson_Report_Details>;
  /** fetch data from the table: "lesson_reports" */
  lesson_reports: Array<Lesson_Reports>;
  /** fetch aggregated fields from the table: "lesson_reports" */
  lesson_reports_aggregate: Lesson_Reports_Aggregate;
  /** fetch data from the table: "lesson_reports" using primary key columns */
  lesson_reports_by_pk?: Maybe<Lesson_Reports>;
  /** fetch data from the table: "lesson_schedules" */
  lesson_schedules: Array<Lesson_Schedules>;
  /** fetch aggregated fields from the table: "lesson_schedules" */
  lesson_schedules_aggregate: Lesson_Schedules_Aggregate;
  /** fetch data from the table: "lesson_student_subscription_access_path" */
  lesson_student_subscription_access_path: Array<Lesson_Student_Subscription_Access_Path>;
  /** fetch aggregated fields from the table: "lesson_student_subscription_access_path" */
  lesson_student_subscription_access_path_aggregate: Lesson_Student_Subscription_Access_Path_Aggregate;
  /** fetch data from the table: "lesson_student_subscription_access_path" using primary key columns */
  lesson_student_subscription_access_path_by_pk?: Maybe<Lesson_Student_Subscription_Access_Path>;
  /** fetch data from the table: "lesson_student_subscriptions" */
  lesson_student_subscriptions: Array<Lesson_Student_Subscriptions>;
  /** fetch aggregated fields from the table: "lesson_student_subscriptions" */
  lesson_student_subscriptions_aggregate: Lesson_Student_Subscriptions_Aggregate;
  /** fetch data from the table: "lesson_student_subscriptions" using primary key columns */
  lesson_student_subscriptions_by_pk?: Maybe<Lesson_Student_Subscriptions>;
  /** fetch data from the table: "lesson_study_plan_items" */
  lesson_study_plan_items: Array<Lesson_Study_Plan_Items>;
  /** fetch aggregated fields from the table: "lesson_study_plan_items" */
  lesson_study_plan_items_aggregate: Lesson_Study_Plan_Items_Aggregate;
  /** fetch data from the table: "lesson_study_plan_items" using primary key columns */
  lesson_study_plan_items_by_pk?: Maybe<Lesson_Study_Plan_Items>;
  /** fetch data from the table: "lessons" */
  lessons: Array<Lessons>;
  /** fetch aggregated fields from the table: "lessons" */
  lessons_aggregate: Lessons_Aggregate;
  /** fetch data from the table: "lessons" using primary key columns */
  lessons_by_pk?: Maybe<Lessons>;
  /** fetch data from the table: "lessons_courses" */
  lessons_courses: Array<Lessons_Courses>;
  /** fetch aggregated fields from the table: "lessons_courses" */
  lessons_courses_aggregate: Lessons_Courses_Aggregate;
  /** fetch data from the table: "lessons_courses" using primary key columns */
  lessons_courses_by_pk?: Maybe<Lessons_Courses>;
  /** fetch data from the table: "lessons_teachers" */
  lessons_teachers: Array<Lessons_Teachers>;
  /** fetch aggregated fields from the table: "lessons_teachers" */
  lessons_teachers_aggregate: Lessons_Teachers_Aggregate;
  /** fetch data from the table: "lessons_teachers" using primary key columns */
  lessons_teachers_by_pk?: Maybe<Lessons_Teachers>;
  /** fetch data from the table: "lo_study_plan_items" */
  lo_study_plan_items: Array<Lo_Study_Plan_Items>;
  /** fetch aggregated fields from the table: "lo_study_plan_items" */
  lo_study_plan_items_aggregate: Lo_Study_Plan_Items_Aggregate;
  /** fetch data from the table: "lo_study_plan_items" using primary key columns */
  lo_study_plan_items_by_pk?: Maybe<Lo_Study_Plan_Items>;
  /** fetch data from the table: "locations" */
  locations: Array<Locations>;
  /** fetch aggregated fields from the table: "locations" */
  locations_aggregate: Locations_Aggregate;
  /** fetch data from the table: "locations" using primary key columns */
  locations_by_pk?: Maybe<Locations>;
  /** fetch data from the table: "media" */
  media: Array<Media>;
  /** fetch aggregated fields from the table: "media" */
  media_aggregate: Media_Aggregate;
  /** fetch data from the table: "media" using primary key columns */
  media_by_pk?: Maybe<Media>;
  /** fetch data from the table: "notification_messages" */
  notification_messages: Array<Notification_Messages>;
  /** fetch aggregated fields from the table: "notification_messages" */
  notification_messages_aggregate: Notification_Messages_Aggregate;
  /** fetch data from the table: "notification_messages" using primary key columns */
  notification_messages_by_pk?: Maybe<Notification_Messages>;
  /** fetch data from the table: "notification_targets" */
  notification_targets: Array<Notification_Targets>;
  /** fetch aggregated fields from the table: "notification_targets" */
  notification_targets_aggregate: Notification_Targets_Aggregate;
  /** fetch data from the table: "notification_targets" using primary key columns */
  notification_targets_by_pk?: Maybe<Notification_Targets>;
  /** fetch data from the table: "notifications" */
  notifications: Array<Notifications>;
  /** fetch aggregated fields from the table: "notifications" */
  notifications_aggregate: Notifications_Aggregate;
  /** fetch data from the table: "notifications" using primary key columns */
  notifications_by_pk?: Maybe<Notifications>;
  /** fetch data from the table: "order" */
  order: Array<Order>;
  /** fetch data from the table: "order_action_log" */
  order_action_log: Array<Order_Action_Log>;
  /** fetch aggregated fields from the table: "order_action_log" */
  order_action_log_aggregate: Order_Action_Log_Aggregate;
  /** fetch data from the table: "order_action_log" using primary key columns */
  order_action_log_by_pk?: Maybe<Order_Action_Log>;
  /** fetch aggregated fields from the table: "order" */
  order_aggregate: Order_Aggregate;
  /** fetch data from the table: "order" using primary key columns */
  order_by_pk?: Maybe<Order>;
  /** fetch data from the table: "order_item" */
  order_item: Array<Order_Item>;
  /** fetch aggregated fields from the table: "order_item" */
  order_item_aggregate: Order_Item_Aggregate;
  /** fetch data from the table: "order_item" using primary key columns */
  order_item_by_pk?: Maybe<Order_Item>;
  /** fetch data from the table: "organizations" */
  organizations: Array<Organizations>;
  /** fetch aggregated fields from the table: "organizations" */
  organizations_aggregate: Organizations_Aggregate;
  /** fetch data from the table: "organizations" using primary key columns */
  organizations_by_pk?: Maybe<Organizations>;
  /** fetch data from the table: "orgs" */
  orgs: Array<Orgs>;
  /** fetch aggregated fields from the table: "orgs" */
  orgs_aggregate: Orgs_Aggregate;
  /** fetch data from the table: "orgs" using primary key columns */
  orgs_by_pk?: Maybe<Orgs>;
  /** fetch data from the table: "packages" */
  packages: Array<Packages>;
  /** fetch aggregated fields from the table: "packages" */
  packages_aggregate: Packages_Aggregate;
  /** fetch data from the table: "packages" using primary key columns */
  packages_by_pk?: Maybe<Packages>;
  /** fetch data from the table: "parents" */
  parents: Array<Parents>;
  /** fetch aggregated fields from the table: "parents" */
  parents_aggregate: Parents_Aggregate;
  /** fetch data from the table: "parents" using primary key columns */
  parents_by_pk?: Maybe<Parents>;
  /** fetch data from the table: "partner_dynamic_form_field_values" */
  partner_dynamic_form_field_values: Array<Partner_Dynamic_Form_Field_Values>;
  /** fetch aggregated fields from the table: "partner_dynamic_form_field_values" */
  partner_dynamic_form_field_values_aggregate: Partner_Dynamic_Form_Field_Values_Aggregate;
  /** fetch data from the table: "partner_dynamic_form_field_values" using primary key columns */
  partner_dynamic_form_field_values_by_pk?: Maybe<Partner_Dynamic_Form_Field_Values>;
  /** fetch data from the table: "partner_form_configs" */
  partner_form_configs: Array<Partner_Form_Configs>;
  /** fetch aggregated fields from the table: "partner_form_configs" */
  partner_form_configs_aggregate: Partner_Form_Configs_Aggregate;
  /** fetch data from the table: "partner_form_configs" using primary key columns */
  partner_form_configs_by_pk?: Maybe<Partner_Form_Configs>;
  /** fetch data from the table: "plans" */
  plans: Array<Plans>;
  /** fetch aggregated fields from the table: "plans" */
  plans_aggregate: Plans_Aggregate;
  /** fetch data from the table: "plans" using primary key columns */
  plans_by_pk?: Maybe<Plans>;
  /** fetch data from the table: "preset_study_plans" */
  preset_study_plans: Array<Preset_Study_Plans>;
  /** fetch aggregated fields from the table: "preset_study_plans" */
  preset_study_plans_aggregate: Preset_Study_Plans_Aggregate;
  /** fetch data from the table: "preset_study_plans" using primary key columns */
  preset_study_plans_by_pk?: Maybe<Preset_Study_Plans>;
  /** fetch data from the table: "preset_study_plans_weekly" */
  preset_study_plans_weekly: Array<Preset_Study_Plans_Weekly>;
  /** fetch aggregated fields from the table: "preset_study_plans_weekly" */
  preset_study_plans_weekly_aggregate: Preset_Study_Plans_Weekly_Aggregate;
  /** fetch data from the table: "preset_study_plans_weekly" using primary key columns */
  preset_study_plans_weekly_by_pk?: Maybe<Preset_Study_Plans_Weekly>;
  /** fetch data from the table: "preset_study_plans_weekly_format" */
  preset_study_plans_weekly_format: Array<Preset_Study_Plans_Weekly_Format>;
  /** fetch aggregated fields from the table: "preset_study_plans_weekly_format" */
  preset_study_plans_weekly_format_aggregate: Preset_Study_Plans_Weekly_Format_Aggregate;
  /** fetch data from the table: "product" */
  product: Array<Product>;
  /** fetch aggregated fields from the table: "product" */
  product_aggregate: Product_Aggregate;
  /** fetch data from the table: "product" using primary key columns */
  product_by_pk?: Maybe<Product>;
  /** fetch data from the table: "product_fee" */
  product_fee: Array<Product_Fee>;
  /** fetch aggregated fields from the table: "product_fee" */
  product_fee_aggregate: Product_Fee_Aggregate;
  /** fetch data from the table: "product_fee" using primary key columns */
  product_fee_by_pk?: Maybe<Product_Fee>;
  /** fetch data from the table: "product_grade" */
  product_grade: Array<Product_Grade>;
  /** fetch aggregated fields from the table: "product_grade" */
  product_grade_aggregate: Product_Grade_Aggregate;
  /** fetch data from the table: "product_grade" using primary key columns */
  product_grade_by_pk?: Maybe<Product_Grade>;
  /** fetch data from the table: "product_location" */
  product_location: Array<Product_Location>;
  /** fetch aggregated fields from the table: "product_location" */
  product_location_aggregate: Product_Location_Aggregate;
  /** fetch data from the table: "product_location" using primary key columns */
  product_location_by_pk?: Maybe<Product_Location>;
  /** fetch data from the table: "product_material" */
  product_material: Array<Product_Material>;
  /** fetch aggregated fields from the table: "product_material" */
  product_material_aggregate: Product_Material_Aggregate;
  /** fetch data from the table: "product_material" using primary key columns */
  product_material_by_pk?: Maybe<Product_Material>;
  /** fetch data from the table: "product_package" */
  product_package: Array<Product_Package>;
  /** fetch aggregated fields from the table: "product_package" */
  product_package_aggregate: Product_Package_Aggregate;
  /** fetch data from the table: "product_package" using primary key columns */
  product_package_by_pk?: Maybe<Product_Package>;
  /** fetch data from the table: "product_price" */
  product_price: Array<Product_Price>;
  /** fetch aggregated fields from the table: "product_price" */
  product_price_aggregate: Product_Price_Aggregate;
  /** fetch data from the table: "product_price" using primary key columns */
  product_price_by_pk?: Maybe<Product_Price>;
  /** fetch data from the table: "promotion_rules" */
  promotion_rules: Array<Promotion_Rules>;
  /** fetch aggregated fields from the table: "promotion_rules" */
  promotion_rules_aggregate: Promotion_Rules_Aggregate;
  /** fetch data from the table: "promotion_rules" using primary key columns */
  promotion_rules_by_pk?: Maybe<Promotion_Rules>;
  /** fetch data from the table: "promotions" */
  promotions: Array<Promotions>;
  /** fetch aggregated fields from the table: "promotions" */
  promotions_aggregate: Promotions_Aggregate;
  /** fetch data from the table: "promotions" using primary key columns */
  promotions_by_pk?: Maybe<Promotions>;
  /** fetch data from the table: "questions" */
  questions: Array<Questions>;
  /** fetch aggregated fields from the table: "questions" */
  questions_aggregate: Questions_Aggregate;
  /** fetch data from the table: "questions" using primary key columns */
  questions_by_pk?: Maybe<Questions>;
  /** fetch data from the table: "questions_tagged_learning_objectives" */
  questions_tagged_learning_objectives: Array<Questions_Tagged_Learning_Objectives>;
  /** fetch aggregated fields from the table: "questions_tagged_learning_objectives" */
  questions_tagged_learning_objectives_aggregate: Questions_Tagged_Learning_Objectives_Aggregate;
  /** fetch data from the table: "questions_tagged_learning_objectives" using primary key columns */
  questions_tagged_learning_objectives_by_pk?: Maybe<Questions_Tagged_Learning_Objectives>;
  /** fetch data from the table: "quiz_sets" */
  quiz_sets: Array<Quiz_Sets>;
  /** fetch aggregated fields from the table: "quiz_sets" */
  quiz_sets_aggregate: Quiz_Sets_Aggregate;
  /** fetch data from the table: "quiz_sets" using primary key columns */
  quiz_sets_by_pk?: Maybe<Quiz_Sets>;
  /** fetch data from the table: "quizsets" */
  quizsets: Array<Quizsets>;
  /** fetch aggregated fields from the table: "quizsets" */
  quizsets_aggregate: Quizsets_Aggregate;
  /** fetch data from the table: "quizsets" using primary key columns */
  quizsets_by_pk?: Maybe<Quizsets>;
  /** fetch data from the table: "quizzes" */
  quizzes: Array<Quizzes>;
  /** fetch aggregated fields from the table: "quizzes" */
  quizzes_aggregate: Quizzes_Aggregate;
  /** fetch data from the table: "quizzes" using primary key columns */
  quizzes_by_pk?: Maybe<Quizzes>;
  /** fetch data from the table: "scheduler_items" */
  scheduler_items: Array<Scheduler_Items>;
  /** fetch aggregated fields from the table: "scheduler_items" */
  scheduler_items_aggregate: Scheduler_Items_Aggregate;
  /** fetch data from the table: "scheduler_items" using primary key columns */
  scheduler_items_by_pk?: Maybe<Scheduler_Items>;
  /** fetch data from the table: "scheduler_patterns" */
  scheduler_patterns: Array<Scheduler_Patterns>;
  /** fetch aggregated fields from the table: "scheduler_patterns" */
  scheduler_patterns_aggregate: Scheduler_Patterns_Aggregate;
  /** fetch data from the table: "scheduler_patterns" using primary key columns */
  scheduler_patterns_by_pk?: Maybe<Scheduler_Patterns>;
  /** fetch data from the table: "schema_migrations" */
  schema_migrations: Array<Schema_Migrations>;
  /** fetch aggregated fields from the table: "schema_migrations" */
  schema_migrations_aggregate: Schema_Migrations_Aggregate;
  /** fetch data from the table: "schema_migrations" using primary key columns */
  schema_migrations_by_pk?: Maybe<Schema_Migrations>;
  /** fetch data from the table: "school_admins" */
  school_admins: Array<School_Admins>;
  /** fetch aggregated fields from the table: "school_admins" */
  school_admins_aggregate: School_Admins_Aggregate;
  /** fetch data from the table: "school_admins" using primary key columns */
  school_admins_by_pk?: Maybe<School_Admins>;
  /** fetch data from the table: "school_configs" */
  school_configs: Array<School_Configs>;
  /** fetch aggregated fields from the table: "school_configs" */
  school_configs_aggregate: School_Configs_Aggregate;
  /** fetch data from the table: "school_configs" using primary key columns */
  school_configs_by_pk?: Maybe<School_Configs>;
  /** fetch data from the table: "schools" */
  schools: Array<Schools>;
  /** fetch aggregated fields from the table: "schools" */
  schools_aggregate: Schools_Aggregate;
  /** fetch data from the table: "schools" using primary key columns */
  schools_by_pk?: Maybe<Schools>;
  /** execute function "search_courses_by_name" which returns "courses" */
  search_courses_by_name: Array<Courses>;
  /** execute function "search_courses_by_name" and query aggregates on result of table type "courses" */
  search_courses_by_name_aggregate: Courses_Aggregate;
  /** fetch data from the table: "shuffled_quiz_sets" */
  shuffled_quiz_sets: Array<Shuffled_Quiz_Sets>;
  /** fetch aggregated fields from the table: "shuffled_quiz_sets" */
  shuffled_quiz_sets_aggregate: Shuffled_Quiz_Sets_Aggregate;
  /** fetch data from the table: "shuffled_quiz_sets" using primary key columns */
  shuffled_quiz_sets_by_pk?: Maybe<Shuffled_Quiz_Sets>;
  /** fetch data from the table: "student_assignments" */
  student_assignments: Array<Student_Assignments>;
  /** fetch aggregated fields from the table: "student_assignments" */
  student_assignments_aggregate: Student_Assignments_Aggregate;
  /** fetch data from the table: "student_assignments" using primary key columns */
  student_assignments_by_pk?: Maybe<Student_Assignments>;
  /** fetch data from the table: "student_comments" */
  student_comments: Array<Student_Comments>;
  /** fetch aggregated fields from the table: "student_comments" */
  student_comments_aggregate: Student_Comments_Aggregate;
  /** fetch data from the table: "student_comments" using primary key columns */
  student_comments_by_pk?: Maybe<Student_Comments>;
  /** fetch data from the table: "student_entryexit_records" */
  student_entryexit_records: Array<Student_Entryexit_Records>;
  /** fetch aggregated fields from the table: "student_entryexit_records" */
  student_entryexit_records_aggregate: Student_Entryexit_Records_Aggregate;
  /** fetch data from the table: "student_entryexit_records" using primary key columns */
  student_entryexit_records_by_pk?: Maybe<Student_Entryexit_Records>;
  /** fetch data from the table: "student_event_logs" */
  student_event_logs: Array<Student_Event_Logs>;
  /** fetch aggregated fields from the table: "student_event_logs" */
  student_event_logs_aggregate: Student_Event_Logs_Aggregate;
  /** fetch data from the table: "student_event_logs" using primary key columns */
  student_event_logs_by_pk?: Maybe<Student_Event_Logs>;
  /** fetch data from the table: "student_learning_time_by_daily" */
  student_learning_time_by_daily: Array<Student_Learning_Time_By_Daily>;
  /** fetch aggregated fields from the table: "student_learning_time_by_daily" */
  student_learning_time_by_daily_aggregate: Student_Learning_Time_By_Daily_Aggregate;
  /** fetch data from the table: "student_learning_time_by_daily" using primary key columns */
  student_learning_time_by_daily_by_pk?: Maybe<Student_Learning_Time_By_Daily>;
  /** fetch data from the table: "student_packages" */
  student_packages: Array<Student_Packages>;
  /** fetch aggregated fields from the table: "student_packages" */
  student_packages_aggregate: Student_Packages_Aggregate;
  /** fetch data from the table: "student_packages" using primary key columns */
  student_packages_by_pk?: Maybe<Student_Packages>;
  /** fetch data from the table: "student_parents" */
  student_parents: Array<Student_Parents>;
  /** fetch aggregated fields from the table: "student_parents" */
  student_parents_aggregate: Student_Parents_Aggregate;
  /** fetch data from the table: "student_parents" using primary key columns */
  student_parents_by_pk?: Maybe<Student_Parents>;
  /** fetch data from the table: "student_qr" */
  student_qr: Array<Student_Qr>;
  /** fetch aggregated fields from the table: "student_qr" */
  student_qr_aggregate: Student_Qr_Aggregate;
  /** fetch data from the table: "student_qr" using primary key columns */
  student_qr_by_pk?: Maybe<Student_Qr>;
  /** fetch data from the table: "student_questions" */
  student_questions: Array<Student_Questions>;
  /** fetch aggregated fields from the table: "student_questions" */
  student_questions_aggregate: Student_Questions_Aggregate;
  /** fetch data from the table: "student_questions" using primary key columns */
  student_questions_by_pk?: Maybe<Student_Questions>;
  /** fetch data from the table: "student_statistics" */
  student_statistics: Array<Student_Statistics>;
  /** fetch aggregated fields from the table: "student_statistics" */
  student_statistics_aggregate: Student_Statistics_Aggregate;
  /** fetch data from the table: "student_study_plans" */
  student_study_plans: Array<Student_Study_Plans>;
  /** fetch aggregated fields from the table: "student_study_plans" */
  student_study_plans_aggregate: Student_Study_Plans_Aggregate;
  /** fetch data from the table: "student_study_plans" using primary key columns */
  student_study_plans_by_pk?: Maybe<Student_Study_Plans>;
  /** fetch data from the table: "student_submission_grades" */
  student_submission_grades: Array<Student_Submission_Grades>;
  /** fetch aggregated fields from the table: "student_submission_grades" */
  student_submission_grades_aggregate: Student_Submission_Grades_Aggregate;
  /** fetch data from the table: "student_submission_grades" using primary key columns */
  student_submission_grades_by_pk?: Maybe<Student_Submission_Grades>;
  /** fetch data from the table: "student_submission_scores" */
  student_submission_scores: Array<Student_Submission_Scores>;
  /** fetch aggregated fields from the table: "student_submission_scores" */
  student_submission_scores_aggregate: Student_Submission_Scores_Aggregate;
  /** fetch data from the table: "student_submission_scores" using primary key columns */
  student_submission_scores_by_pk?: Maybe<Student_Submission_Scores>;
  /** fetch data from the table: "student_submissions" */
  student_submissions: Array<Student_Submissions>;
  /** fetch aggregated fields from the table: "student_submissions" */
  student_submissions_aggregate: Student_Submissions_Aggregate;
  /** fetch data from the table: "student_submissions" using primary key columns */
  student_submissions_by_pk?: Maybe<Student_Submissions>;
  /** fetch data from the table: "student_subscriptions" */
  student_subscriptions: Array<Student_Subscriptions>;
  /** fetch aggregated fields from the table: "student_subscriptions" */
  student_subscriptions_aggregate: Student_Subscriptions_Aggregate;
  /** fetch data from the table: "student_subscriptions" using primary key columns */
  student_subscriptions_by_pk?: Maybe<Student_Subscriptions>;
  /** fetch data from the table: "students" */
  students: Array<Students>;
  /** fetch aggregated fields from the table: "students" */
  students_aggregate: Students_Aggregate;
  /** fetch data from the table: "students_assigned_coaches" */
  students_assigned_coaches: Array<Students_Assigned_Coaches>;
  /** fetch aggregated fields from the table: "students_assigned_coaches" */
  students_assigned_coaches_aggregate: Students_Assigned_Coaches_Aggregate;
  /** fetch data from the table: "students" using primary key columns */
  students_by_pk?: Maybe<Students>;
  /** fetch data from the table: "students_learning_objectives_completeness" */
  students_learning_objectives_completeness: Array<Students_Learning_Objectives_Completeness>;
  /** fetch aggregated fields from the table: "students_learning_objectives_completeness" */
  students_learning_objectives_completeness_aggregate: Students_Learning_Objectives_Completeness_Aggregate;
  /** fetch data from the table: "students_learning_objectives_completeness" using primary key columns */
  students_learning_objectives_completeness_by_pk?: Maybe<Students_Learning_Objectives_Completeness>;
  /** fetch data from the table: "students_learning_objectives_records" */
  students_learning_objectives_records: Array<Students_Learning_Objectives_Records>;
  /** fetch aggregated fields from the table: "students_learning_objectives_records" */
  students_learning_objectives_records_aggregate: Students_Learning_Objectives_Records_Aggregate;
  /** fetch data from the table: "students_learning_objectives_records" using primary key columns */
  students_learning_objectives_records_by_pk?: Maybe<Students_Learning_Objectives_Records>;
  /** fetch data from the table: "students_study_plans_weekly" */
  students_study_plans_weekly: Array<Students_Study_Plans_Weekly>;
  /** fetch aggregated fields from the table: "students_study_plans_weekly" */
  students_study_plans_weekly_aggregate: Students_Study_Plans_Weekly_Aggregate;
  /** fetch data from the table: "students_study_plans_weekly" using primary key columns */
  students_study_plans_weekly_by_pk?: Maybe<Students_Study_Plans_Weekly>;
  /** fetch data from the table: "students_topics_completeness" */
  students_topics_completeness: Array<Students_Topics_Completeness>;
  /** fetch aggregated fields from the table: "students_topics_completeness" */
  students_topics_completeness_aggregate: Students_Topics_Completeness_Aggregate;
  /** fetch data from the table: "students_topics_overdue" */
  students_topics_overdue: Array<Students_Topics_Overdue>;
  /** fetch aggregated fields from the table: "students_topics_overdue" */
  students_topics_overdue_aggregate: Students_Topics_Overdue_Aggregate;
  /** fetch data from the table: "students_topics_overdue" using primary key columns */
  students_topics_overdue_by_pk?: Maybe<Students_Topics_Overdue>;
  /** fetch data from the table: "study_plan_items" */
  study_plan_items: Array<Study_Plan_Items>;
  /** fetch aggregated fields from the table: "study_plan_items" */
  study_plan_items_aggregate: Study_Plan_Items_Aggregate;
  /** fetch data from the table: "study_plan_items" using primary key columns */
  study_plan_items_by_pk?: Maybe<Study_Plan_Items>;
  /** fetch data from the table: "study_plans" */
  study_plans: Array<Study_Plans>;
  /** fetch aggregated fields from the table: "study_plans" */
  study_plans_aggregate: Study_Plans_Aggregate;
  /** fetch data from the table: "study_plans" using primary key columns */
  study_plans_by_pk?: Maybe<Study_Plans>;
  /** fetch data from the table: "tax" */
  tax: Array<Tax>;
  /** fetch aggregated fields from the table: "tax" */
  tax_aggregate: Tax_Aggregate;
  /** fetch data from the table: "tax" using primary key columns */
  tax_by_pk?: Maybe<Tax>;
  /** fetch data from the table: "teacher_by_school_id" */
  teacher_by_school_id: Array<Teacher_By_School_Id>;
  /** fetch aggregated fields from the table: "teacher_by_school_id" */
  teacher_by_school_id_aggregate: Teacher_By_School_Id_Aggregate;
  /** fetch data from the table: "teachers" */
  teachers: Array<Teachers>;
  /** fetch aggregated fields from the table: "teachers" */
  teachers_aggregate: Teachers_Aggregate;
  /** fetch data from the table: "teachers" using primary key columns */
  teachers_by_pk?: Maybe<Teachers>;
  /** fetch data from the table: "topics" */
  topics: Array<Topics>;
  /** fetch aggregated fields from the table: "topics" */
  topics_aggregate: Topics_Aggregate;
  /** fetch data from the table: "topics_assignments" */
  topics_assignments: Array<Topics_Assignments>;
  /** fetch aggregated fields from the table: "topics_assignments" */
  topics_assignments_aggregate: Topics_Assignments_Aggregate;
  /** fetch data from the table: "topics_assignments" using primary key columns */
  topics_assignments_by_pk?: Maybe<Topics_Assignments>;
  /** fetch data from the table: "topics" using primary key columns */
  topics_by_pk?: Maybe<Topics>;
  /** fetch data from the table: "topics_learning_objectives" */
  topics_learning_objectives: Array<Topics_Learning_Objectives>;
  /** fetch aggregated fields from the table: "topics_learning_objectives" */
  topics_learning_objectives_aggregate: Topics_Learning_Objectives_Aggregate;
  /** fetch data from the table: "topics_learning_objectives" using primary key columns */
  topics_learning_objectives_by_pk?: Maybe<Topics_Learning_Objectives>;
  /** fetch data from the table: "tutors" */
  tutors: Array<Tutors>;
  /** fetch aggregated fields from the table: "tutors" */
  tutors_aggregate: Tutors_Aggregate;
  /** fetch data from the table: "tutors" using primary key columns */
  tutors_by_pk?: Maybe<Tutors>;
  /** fetch data from the table: "user_access_paths" */
  user_access_paths: Array<User_Access_Paths>;
  /** fetch aggregated fields from the table: "user_access_paths" */
  user_access_paths_aggregate: User_Access_Paths_Aggregate;
  /** fetch data from the table: "user_access_paths" using primary key columns */
  user_access_paths_by_pk?: Maybe<User_Access_Paths>;
  /** fetch data from the table: "user_notifications" */
  user_notifications: Array<User_Notifications>;
  /** fetch aggregated fields from the table: "user_notifications" */
  user_notifications_aggregate: User_Notifications_Aggregate;
  /** fetch data from the table: "user_notifications" using primary key columns */
  user_notifications_by_pk?: Maybe<User_Notifications>;
  /** fetch data from the table: "users" */
  users: Array<Users>;
  /** fetch aggregated fields from the table: "users" */
  users_aggregate: Users_Aggregate;
  /** fetch data from the table: "users" using primary key columns */
  users_by_pk?: Maybe<Users>;
  /** fetch data from the table: "users_groups" */
  users_groups: Array<Users_Groups>;
  /** fetch aggregated fields from the table: "users_groups" */
  users_groups_aggregate: Users_Groups_Aggregate;
  /** fetch data from the table: "users_groups" using primary key columns */
  users_groups_by_pk?: Maybe<Users_Groups>;
  /** fetch data from the table: "users_info_notifications" */
  users_info_notifications: Array<Users_Info_Notifications>;
  /** fetch aggregated fields from the table: "users_info_notifications" */
  users_info_notifications_aggregate: Users_Info_Notifications_Aggregate;
  /** fetch data from the table: "users_info_notifications" using primary key columns */
  users_info_notifications_by_pk?: Maybe<Users_Info_Notifications>;
};


/** subscription root */
export type Subscription_RootAcademic_YearsArgs = {
  distinct_on?: Maybe<Array<Academic_Years_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Academic_Years_Order_By>>;
  where?: Maybe<Academic_Years_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAcademic_Years_AggregateArgs = {
  distinct_on?: Maybe<Array<Academic_Years_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Academic_Years_Order_By>>;
  where?: Maybe<Academic_Years_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAcademic_Years_By_PkArgs = {
  academic_year_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootActivity_LogsArgs = {
  distinct_on?: Maybe<Array<Activity_Logs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Activity_Logs_Order_By>>;
  where?: Maybe<Activity_Logs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootActivity_Logs_AggregateArgs = {
  distinct_on?: Maybe<Array<Activity_Logs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Activity_Logs_Order_By>>;
  where?: Maybe<Activity_Logs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootActivity_Logs_By_PkArgs = {
  activity_log_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootApple_UsersArgs = {
  distinct_on?: Maybe<Array<Apple_Users_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Apple_Users_Order_By>>;
  where?: Maybe<Apple_Users_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootApple_Users_AggregateArgs = {
  distinct_on?: Maybe<Array<Apple_Users_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Apple_Users_Order_By>>;
  where?: Maybe<Apple_Users_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootApple_Users_By_PkArgs = {
  apple_user_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootAssign_Study_Plan_TasksArgs = {
  distinct_on?: Maybe<Array<Assign_Study_Plan_Tasks_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assign_Study_Plan_Tasks_Order_By>>;
  where?: Maybe<Assign_Study_Plan_Tasks_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAssign_Study_Plan_Tasks_AggregateArgs = {
  distinct_on?: Maybe<Array<Assign_Study_Plan_Tasks_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assign_Study_Plan_Tasks_Order_By>>;
  where?: Maybe<Assign_Study_Plan_Tasks_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAssign_Study_Plan_Tasks_By_PkArgs = {
  id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootAssignment_Study_Plan_ItemsArgs = {
  distinct_on?: Maybe<Array<Assignment_Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assignment_Study_Plan_Items_Order_By>>;
  where?: Maybe<Assignment_Study_Plan_Items_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAssignment_Study_Plan_Items_AggregateArgs = {
  distinct_on?: Maybe<Array<Assignment_Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assignment_Study_Plan_Items_Order_By>>;
  where?: Maybe<Assignment_Study_Plan_Items_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAssignment_Study_Plan_Items_By_PkArgs = {
  assignment_id: Scalars['String'];
  study_plan_item_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootAssignmentsArgs = {
  distinct_on?: Maybe<Array<Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assignments_Order_By>>;
  where?: Maybe<Assignments_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAssignments_AggregateArgs = {
  distinct_on?: Maybe<Array<Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assignments_Order_By>>;
  where?: Maybe<Assignments_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAssignments_By_PkArgs = {
  assignment_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootBill_ItemArgs = {
  distinct_on?: Maybe<Array<Bill_Item_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Bill_Item_Order_By>>;
  where?: Maybe<Bill_Item_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBill_Item_AggregateArgs = {
  distinct_on?: Maybe<Array<Bill_Item_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Bill_Item_Order_By>>;
  where?: Maybe<Bill_Item_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBill_Item_By_PkArgs = {
  bill_item_sequence_number: Scalars['Int'];
  order_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootBilling_HistoriesArgs = {
  distinct_on?: Maybe<Array<Billing_Histories_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Billing_Histories_Order_By>>;
  where?: Maybe<Billing_Histories_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBilling_Histories_AggregateArgs = {
  distinct_on?: Maybe<Array<Billing_Histories_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Billing_Histories_Order_By>>;
  where?: Maybe<Billing_Histories_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBilling_Histories_By_PkArgs = {
  billing_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootBilling_ScheduleArgs = {
  distinct_on?: Maybe<Array<Billing_Schedule_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Billing_Schedule_Order_By>>;
  where?: Maybe<Billing_Schedule_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBilling_Schedule_AggregateArgs = {
  distinct_on?: Maybe<Array<Billing_Schedule_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Billing_Schedule_Order_By>>;
  where?: Maybe<Billing_Schedule_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBilling_Schedule_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootBilling_Schedule_PeriodArgs = {
  distinct_on?: Maybe<Array<Billing_Schedule_Period_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Billing_Schedule_Period_Order_By>>;
  where?: Maybe<Billing_Schedule_Period_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBilling_Schedule_Period_AggregateArgs = {
  distinct_on?: Maybe<Array<Billing_Schedule_Period_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Billing_Schedule_Period_Order_By>>;
  where?: Maybe<Billing_Schedule_Period_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBilling_Schedule_Period_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootBooksArgs = {
  distinct_on?: Maybe<Array<Books_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Books_Order_By>>;
  where?: Maybe<Books_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBooks_AggregateArgs = {
  distinct_on?: Maybe<Array<Books_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Books_Order_By>>;
  where?: Maybe<Books_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBooks_By_PkArgs = {
  book_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootBooks_ChaptersArgs = {
  distinct_on?: Maybe<Array<Books_Chapters_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Books_Chapters_Order_By>>;
  where?: Maybe<Books_Chapters_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBooks_Chapters_AggregateArgs = {
  distinct_on?: Maybe<Array<Books_Chapters_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Books_Chapters_Order_By>>;
  where?: Maybe<Books_Chapters_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBooks_Chapters_By_PkArgs = {
  book_id: Scalars['String'];
  chapter_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootBrandsArgs = {
  distinct_on?: Maybe<Array<Brands_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Brands_Order_By>>;
  where?: Maybe<Brands_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBrands_AggregateArgs = {
  distinct_on?: Maybe<Array<Brands_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Brands_Order_By>>;
  where?: Maybe<Brands_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBrands_By_PkArgs = {
  brand_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootCentersArgs = {
  distinct_on?: Maybe<Array<Centers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Centers_Order_By>>;
  where?: Maybe<Centers_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCenters_AggregateArgs = {
  distinct_on?: Maybe<Array<Centers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Centers_Order_By>>;
  where?: Maybe<Centers_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCenters_By_PkArgs = {
  center_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootChaptersArgs = {
  distinct_on?: Maybe<Array<Chapters_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chapters_Order_By>>;
  where?: Maybe<Chapters_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChapters_AggregateArgs = {
  distinct_on?: Maybe<Array<Chapters_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chapters_Order_By>>;
  where?: Maybe<Chapters_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChapters_By_PkArgs = {
  chapter_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootCitiesArgs = {
  distinct_on?: Maybe<Array<Cities_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Cities_Order_By>>;
  where?: Maybe<Cities_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCities_AggregateArgs = {
  distinct_on?: Maybe<Array<Cities_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Cities_Order_By>>;
  where?: Maybe<Cities_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCities_By_PkArgs = {
  city_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootClass_MembersArgs = {
  distinct_on?: Maybe<Array<Class_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Members_Order_By>>;
  where?: Maybe<Class_Members_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootClass_Members_AggregateArgs = {
  distinct_on?: Maybe<Array<Class_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Members_Order_By>>;
  where?: Maybe<Class_Members_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootClass_Members_By_PkArgs = {
  class_member_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootClass_Preset_Study_PlansArgs = {
  distinct_on?: Maybe<Array<Class_Preset_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Preset_Study_Plans_Order_By>>;
  where?: Maybe<Class_Preset_Study_Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootClass_Preset_Study_Plans_AggregateArgs = {
  distinct_on?: Maybe<Array<Class_Preset_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Preset_Study_Plans_Order_By>>;
  where?: Maybe<Class_Preset_Study_Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootClass_Preset_Study_Plans_By_PkArgs = {
  class_preset_study_plan_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootClass_StudentsArgs = {
  distinct_on?: Maybe<Array<Class_Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Students_Order_By>>;
  where?: Maybe<Class_Students_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootClass_Students_AggregateArgs = {
  distinct_on?: Maybe<Array<Class_Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Students_Order_By>>;
  where?: Maybe<Class_Students_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootClass_Students_By_PkArgs = {
  class_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootClass_Study_PlansArgs = {
  distinct_on?: Maybe<Array<Class_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Study_Plans_Order_By>>;
  where?: Maybe<Class_Study_Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootClass_Study_Plans_AggregateArgs = {
  distinct_on?: Maybe<Array<Class_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Study_Plans_Order_By>>;
  where?: Maybe<Class_Study_Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootClass_Study_Plans_By_PkArgs = {
  class_id: Scalars['Int'];
  study_plan_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootClassesArgs = {
  distinct_on?: Maybe<Array<Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Classes_Order_By>>;
  where?: Maybe<Classes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootClasses_AggregateArgs = {
  distinct_on?: Maybe<Array<Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Classes_Order_By>>;
  where?: Maybe<Classes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootClasses_By_PkArgs = {
  class_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootCoachesArgs = {
  distinct_on?: Maybe<Array<Coaches_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Coaches_Order_By>>;
  where?: Maybe<Coaches_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCoaches_AggregateArgs = {
  distinct_on?: Maybe<Array<Coaches_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Coaches_Order_By>>;
  where?: Maybe<Coaches_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCoaches_By_PkArgs = {
  coach_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootCod_OrdersArgs = {
  distinct_on?: Maybe<Array<Cod_Orders_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Cod_Orders_Order_By>>;
  where?: Maybe<Cod_Orders_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCod_Orders_AggregateArgs = {
  distinct_on?: Maybe<Array<Cod_Orders_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Cod_Orders_Order_By>>;
  where?: Maybe<Cod_Orders_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCod_Orders_By_PkArgs = {
  cod_order_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootConfigsArgs = {
  distinct_on?: Maybe<Array<Configs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Configs_Order_By>>;
  where?: Maybe<Configs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootConfigs_AggregateArgs = {
  distinct_on?: Maybe<Array<Configs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Configs_Order_By>>;
  where?: Maybe<Configs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootConfigs_By_PkArgs = {
  config_group: Scalars['String'];
  config_key: Scalars['String'];
  country: Scalars['String'];
};


/** subscription root */
export type Subscription_RootConversion_TasksArgs = {
  distinct_on?: Maybe<Array<Conversion_Tasks_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Conversion_Tasks_Order_By>>;
  where?: Maybe<Conversion_Tasks_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootConversion_Tasks_AggregateArgs = {
  distinct_on?: Maybe<Array<Conversion_Tasks_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Conversion_Tasks_Order_By>>;
  where?: Maybe<Conversion_Tasks_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootConversion_Tasks_By_PkArgs = {
  task_uuid: Scalars['String'];
};


/** subscription root */
export type Subscription_RootCourse_Access_PathsArgs = {
  distinct_on?: Maybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Access_Paths_Order_By>>;
  where?: Maybe<Course_Access_Paths_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourse_Access_Paths_AggregateArgs = {
  distinct_on?: Maybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Access_Paths_Order_By>>;
  where?: Maybe<Course_Access_Paths_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourse_Access_Paths_By_PkArgs = {
  course_id: Scalars['String'];
  location_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootCourse_ClassesArgs = {
  distinct_on?: Maybe<Array<Course_Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Classes_Order_By>>;
  where?: Maybe<Course_Classes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourse_Classes_AggregateArgs = {
  distinct_on?: Maybe<Array<Course_Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Classes_Order_By>>;
  where?: Maybe<Course_Classes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourse_Classes_By_PkArgs = {
  class_id: Scalars['String'];
  course_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootCourse_StudentsArgs = {
  distinct_on?: Maybe<Array<Course_Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Students_Order_By>>;
  where?: Maybe<Course_Students_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourse_Students_AggregateArgs = {
  distinct_on?: Maybe<Array<Course_Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Students_Order_By>>;
  where?: Maybe<Course_Students_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourse_Students_By_PkArgs = {
  course_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootCourse_Study_PlansArgs = {
  distinct_on?: Maybe<Array<Course_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Study_Plans_Order_By>>;
  where?: Maybe<Course_Study_Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourse_Study_Plans_AggregateArgs = {
  distinct_on?: Maybe<Array<Course_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Study_Plans_Order_By>>;
  where?: Maybe<Course_Study_Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourse_Study_Plans_By_PkArgs = {
  course_id: Scalars['String'];
  study_plan_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootCoursesArgs = {
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourses_Academic_YearsArgs = {
  distinct_on?: Maybe<Array<Courses_Academic_Years_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Academic_Years_Order_By>>;
  where?: Maybe<Courses_Academic_Years_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourses_Academic_Years_AggregateArgs = {
  distinct_on?: Maybe<Array<Courses_Academic_Years_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Academic_Years_Order_By>>;
  where?: Maybe<Courses_Academic_Years_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourses_Academic_Years_By_PkArgs = {
  academic_year_id: Scalars['String'];
  course_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootCourses_AggregateArgs = {
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourses_BooksArgs = {
  distinct_on?: Maybe<Array<Courses_Books_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Books_Order_By>>;
  where?: Maybe<Courses_Books_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourses_Books_AggregateArgs = {
  distinct_on?: Maybe<Array<Courses_Books_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Books_Order_By>>;
  where?: Maybe<Courses_Books_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourses_Books_By_PkArgs = {
  book_id: Scalars['String'];
  course_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootCourses_By_PkArgs = {
  course_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootCourses_ClassesArgs = {
  distinct_on?: Maybe<Array<Courses_Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Classes_Order_By>>;
  where?: Maybe<Courses_Classes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourses_Classes_AggregateArgs = {
  distinct_on?: Maybe<Array<Courses_Classes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Classes_Order_By>>;
  where?: Maybe<Courses_Classes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourses_Classes_By_PkArgs = {
  class_id: Scalars['Int'];
  course_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootDiscountArgs = {
  distinct_on?: Maybe<Array<Discount_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Discount_Order_By>>;
  where?: Maybe<Discount_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootDiscount_AggregateArgs = {
  distinct_on?: Maybe<Array<Discount_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Discount_Order_By>>;
  where?: Maybe<Discount_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootDiscount_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootDistrictsArgs = {
  distinct_on?: Maybe<Array<Districts_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Districts_Order_By>>;
  where?: Maybe<Districts_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootDistricts_AggregateArgs = {
  distinct_on?: Maybe<Array<Districts_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Districts_Order_By>>;
  where?: Maybe<Districts_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootDistricts_By_PkArgs = {
  district_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootE2e_FeaturesArgs = {
  distinct_on?: Maybe<Array<E2e_Features_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<E2e_Features_Order_By>>;
  where?: Maybe<E2e_Features_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootE2e_Features_AggregateArgs = {
  distinct_on?: Maybe<Array<E2e_Features_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<E2e_Features_Order_By>>;
  where?: Maybe<E2e_Features_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootE2e_Features_By_PkArgs = {
  feature_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootE2e_InstancesArgs = {
  distinct_on?: Maybe<Array<E2e_Instances_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<E2e_Instances_Order_By>>;
  where?: Maybe<E2e_Instances_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootE2e_Instances_AggregateArgs = {
  distinct_on?: Maybe<Array<E2e_Instances_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<E2e_Instances_Order_By>>;
  where?: Maybe<E2e_Instances_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootE2e_Instances_By_PkArgs = {
  instance_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootE2e_ScenariosArgs = {
  distinct_on?: Maybe<Array<E2e_Scenarios_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<E2e_Scenarios_Order_By>>;
  where?: Maybe<E2e_Scenarios_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootE2e_Scenarios_AggregateArgs = {
  distinct_on?: Maybe<Array<E2e_Scenarios_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<E2e_Scenarios_Order_By>>;
  where?: Maybe<E2e_Scenarios_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootE2e_Scenarios_By_PkArgs = {
  scenario_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootE2e_StepsArgs = {
  distinct_on?: Maybe<Array<E2e_Steps_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<E2e_Steps_Order_By>>;
  where?: Maybe<E2e_Steps_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootE2e_Steps_AggregateArgs = {
  distinct_on?: Maybe<Array<E2e_Steps_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<E2e_Steps_Order_By>>;
  where?: Maybe<E2e_Steps_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootE2e_Steps_By_PkArgs = {
  step_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootFind_Assignment_By_Topic_IdArgs = {
  args: Find_Assignment_By_Topic_Id_Args;
  distinct_on?: Maybe<Array<Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assignments_Order_By>>;
  where?: Maybe<Assignments_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootFind_Assignment_By_Topic_Id_AggregateArgs = {
  args: Find_Assignment_By_Topic_Id_Args;
  distinct_on?: Maybe<Array<Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assignments_Order_By>>;
  where?: Maybe<Assignments_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootFind_Quiz_By_Lo_IdArgs = {
  args: Find_Quiz_By_Lo_Id_Args;
  distinct_on?: Maybe<Array<Quizzes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quizzes_Order_By>>;
  where?: Maybe<Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootFind_Quiz_By_Lo_Id_AggregateArgs = {
  args: Find_Quiz_By_Lo_Id_Args;
  distinct_on?: Maybe<Array<Quizzes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quizzes_Order_By>>;
  where?: Maybe<Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootFind_Teacher_By_School_IdArgs = {
  args: Find_Teacher_By_School_Id_Args;
  distinct_on?: Maybe<Array<Users_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Order_By>>;
  where?: Maybe<Users_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootFind_Teacher_By_School_Id_AggregateArgs = {
  args: Find_Teacher_By_School_Id_Args;
  distinct_on?: Maybe<Array<Users_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Order_By>>;
  where?: Maybe<Users_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_List_Course_Student_Study_Plans_By_FilterArgs = {
  args: Get_List_Course_Student_Study_Plans_By_Filter_Args;
  distinct_on?: Maybe<Array<Course_Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Students_Order_By>>;
  where?: Maybe<Course_Students_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_List_Course_Student_Study_Plans_By_Filter_AggregateArgs = {
  args: Get_List_Course_Student_Study_Plans_By_Filter_Args;
  distinct_on?: Maybe<Array<Course_Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Students_Order_By>>;
  where?: Maybe<Course_Students_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_List_Course_Study_Plan_By_FilterArgs = {
  args: Get_List_Course_Study_Plan_By_Filter_Args;
  distinct_on?: Maybe<Array<Course_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Study_Plans_Order_By>>;
  where?: Maybe<Course_Study_Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_List_Course_Study_Plan_By_Filter_AggregateArgs = {
  args: Get_List_Course_Study_Plan_By_Filter_Args;
  distinct_on?: Maybe<Array<Course_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Study_Plans_Order_By>>;
  where?: Maybe<Course_Study_Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Locations_Active_By_Course_IdArgs = {
  args: Get_Locations_Active_By_Course_Id_Args;
  distinct_on?: Maybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Access_Paths_Order_By>>;
  where?: Maybe<Course_Access_Paths_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Locations_Active_By_Course_Id_AggregateArgs = {
  args: Get_Locations_Active_By_Course_Id_Args;
  distinct_on?: Maybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Course_Access_Paths_Order_By>>;
  where?: Maybe<Course_Access_Paths_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Locations_Lowest_LevelArgs = {
  args: Get_Locations_Lowest_Level_Args;
  distinct_on?: Maybe<Array<Locations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Locations_Order_By>>;
  where?: Maybe<Locations_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Locations_Lowest_Level_AggregateArgs = {
  args: Get_Locations_Lowest_Level_Args;
  distinct_on?: Maybe<Array<Locations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Locations_Order_By>>;
  where?: Maybe<Locations_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Partner_Dynamic_Form_Field_Values_By_StudentArgs = {
  args: Get_Partner_Dynamic_Form_Field_Values_By_Student_Args;
  distinct_on?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: Maybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Partner_Dynamic_Form_Field_Values_By_Student_AggregateArgs = {
  args: Get_Partner_Dynamic_Form_Field_Values_By_Student_Args;
  distinct_on?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: Maybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Previous_Report_Of_StudentArgs = {
  args: Get_Previous_Report_Of_Student_Args;
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Previous_Report_Of_Student_AggregateArgs = {
  args: Get_Previous_Report_Of_Student_Args;
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Previous_Report_Of_Student_V2Args = {
  args: Get_Previous_Report_Of_Student_V2_Args;
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Previous_Report_Of_Student_V2_AggregateArgs = {
  args: Get_Previous_Report_Of_Student_V2_Args;
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Previous_Report_Of_Student_V3Args = {
  args: Get_Previous_Report_Of_Student_V3_Args;
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Previous_Report_Of_Student_V3_AggregateArgs = {
  args: Get_Previous_Report_Of_Student_V3_Args;
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Student_Study_Plans_By_FilterArgs = {
  args: Get_Student_Study_Plans_By_Filter_Args;
  distinct_on?: Maybe<Array<Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Study_Plans_Order_By>>;
  where?: Maybe<Study_Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Student_Study_Plans_By_Filter_AggregateArgs = {
  args: Get_Student_Study_Plans_By_Filter_Args;
  distinct_on?: Maybe<Array<Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Study_Plans_Order_By>>;
  where?: Maybe<Study_Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGradeArgs = {
  distinct_on?: Maybe<Array<Grade_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Grade_Order_By>>;
  where?: Maybe<Grade_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGrade_AggregateArgs = {
  distinct_on?: Maybe<Array<Grade_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Grade_Order_By>>;
  where?: Maybe<Grade_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGrade_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootGroupsArgs = {
  distinct_on?: Maybe<Array<Groups_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Groups_Order_By>>;
  where?: Maybe<Groups_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGroups_AggregateArgs = {
  distinct_on?: Maybe<Array<Groups_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Groups_Order_By>>;
  where?: Maybe<Groups_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGroups_By_PkArgs = {
  group_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootHub_ToursArgs = {
  distinct_on?: Maybe<Array<Hub_Tours_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Hub_Tours_Order_By>>;
  where?: Maybe<Hub_Tours_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootHub_Tours_AggregateArgs = {
  distinct_on?: Maybe<Array<Hub_Tours_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Hub_Tours_Order_By>>;
  where?: Maybe<Hub_Tours_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootHub_Tours_By_PkArgs = {
  hub_id: Scalars['Int'];
  student_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootHubsArgs = {
  distinct_on?: Maybe<Array<Hubs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Hubs_Order_By>>;
  where?: Maybe<Hubs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootHubs_AggregateArgs = {
  distinct_on?: Maybe<Array<Hubs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Hubs_Order_By>>;
  where?: Maybe<Hubs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootHubs_By_PkArgs = {
  hub_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootInfo_Notification_MsgsArgs = {
  distinct_on?: Maybe<Array<Info_Notification_Msgs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Info_Notification_Msgs_Order_By>>;
  where?: Maybe<Info_Notification_Msgs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootInfo_Notification_Msgs_AggregateArgs = {
  distinct_on?: Maybe<Array<Info_Notification_Msgs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Info_Notification_Msgs_Order_By>>;
  where?: Maybe<Info_Notification_Msgs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootInfo_Notification_Msgs_By_PkArgs = {
  notification_msg_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootInfo_NotificationsArgs = {
  distinct_on?: Maybe<Array<Info_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Info_Notifications_Order_By>>;
  where?: Maybe<Info_Notifications_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootInfo_Notifications_AggregateArgs = {
  distinct_on?: Maybe<Array<Info_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Info_Notifications_Order_By>>;
  where?: Maybe<Info_Notifications_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootInfo_Notifications_By_PkArgs = {
  notification_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootIos_TransactionsArgs = {
  distinct_on?: Maybe<Array<Ios_Transactions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Ios_Transactions_Order_By>>;
  where?: Maybe<Ios_Transactions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootIos_Transactions_AggregateArgs = {
  distinct_on?: Maybe<Array<Ios_Transactions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Ios_Transactions_Order_By>>;
  where?: Maybe<Ios_Transactions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootIos_Transactions_By_PkArgs = {
  ios_transaction_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootJpref_Sync_Data_LogsArgs = {
  distinct_on?: Maybe<Array<Jpref_Sync_Data_Logs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Jpref_Sync_Data_Logs_Order_By>>;
  where?: Maybe<Jpref_Sync_Data_Logs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJpref_Sync_Data_Logs_AggregateArgs = {
  distinct_on?: Maybe<Array<Jpref_Sync_Data_Logs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Jpref_Sync_Data_Logs_Order_By>>;
  where?: Maybe<Jpref_Sync_Data_Logs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJpref_Sync_Data_Logs_By_PkArgs = {
  jpref_sync_data_log_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLearning_ObjectivesArgs = {
  distinct_on?: Maybe<Array<Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Learning_Objectives_Order_By>>;
  where?: Maybe<Learning_Objectives_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLearning_Objectives_AggregateArgs = {
  distinct_on?: Maybe<Array<Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Learning_Objectives_Order_By>>;
  where?: Maybe<Learning_Objectives_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLearning_Objectives_By_PkArgs = {
  lo_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLesson_GroupsArgs = {
  distinct_on?: Maybe<Array<Lesson_Groups_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Groups_Order_By>>;
  where?: Maybe<Lesson_Groups_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Groups_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Groups_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Groups_Order_By>>;
  where?: Maybe<Lesson_Groups_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Groups_By_PkArgs = {
  course_id: Scalars['String'];
  lesson_group_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLesson_MembersArgs = {
  distinct_on?: Maybe<Array<Lesson_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Members_Order_By>>;
  where?: Maybe<Lesson_Members_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Members_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Members_Order_By>>;
  where?: Maybe<Lesson_Members_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Members_By_PkArgs = {
  lesson_id: Scalars['String'];
  user_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLesson_Report_DetailsArgs = {
  distinct_on?: Maybe<Array<Lesson_Report_Details_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Report_Details_Order_By>>;
  where?: Maybe<Lesson_Report_Details_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Report_Details_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Report_Details_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Report_Details_Order_By>>;
  where?: Maybe<Lesson_Report_Details_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Report_Details_By_PkArgs = {
  lesson_report_detail_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLesson_ReportsArgs = {
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Reports_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Reports_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Reports_Order_By>>;
  where?: Maybe<Lesson_Reports_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Reports_By_PkArgs = {
  lesson_report_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLesson_SchedulesArgs = {
  distinct_on?: Maybe<Array<Lesson_Schedules_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Schedules_Order_By>>;
  where?: Maybe<Lesson_Schedules_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Schedules_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Schedules_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Schedules_Order_By>>;
  where?: Maybe<Lesson_Schedules_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Student_Subscription_Access_PathArgs = {
  distinct_on?: Maybe<Array<Lesson_Student_Subscription_Access_Path_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Student_Subscription_Access_Path_Order_By>>;
  where?: Maybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Student_Subscription_Access_Path_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Student_Subscription_Access_Path_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Student_Subscription_Access_Path_Order_By>>;
  where?: Maybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Student_Subscription_Access_Path_By_PkArgs = {
  location_id: Scalars['String'];
  student_subscription_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLesson_Student_SubscriptionsArgs = {
  distinct_on?: Maybe<Array<Lesson_Student_Subscriptions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Student_Subscriptions_Order_By>>;
  where?: Maybe<Lesson_Student_Subscriptions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Student_Subscriptions_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Student_Subscriptions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Student_Subscriptions_Order_By>>;
  where?: Maybe<Lesson_Student_Subscriptions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Student_Subscriptions_By_PkArgs = {
  student_subscription_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLesson_Study_Plan_ItemsArgs = {
  distinct_on?: Maybe<Array<Lesson_Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Study_Plan_Items_Order_By>>;
  where?: Maybe<Lesson_Study_Plan_Items_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Study_Plan_Items_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Study_Plan_Items_Order_By>>;
  where?: Maybe<Lesson_Study_Plan_Items_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Study_Plan_Items_By_PkArgs = {
  lesson_id: Scalars['String'];
  study_plan_item_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLessonsArgs = {
  distinct_on?: Maybe<Array<Lessons_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Order_By>>;
  where?: Maybe<Lessons_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLessons_AggregateArgs = {
  distinct_on?: Maybe<Array<Lessons_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Order_By>>;
  where?: Maybe<Lessons_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLessons_By_PkArgs = {
  lesson_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLessons_CoursesArgs = {
  distinct_on?: Maybe<Array<Lessons_Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Courses_Order_By>>;
  where?: Maybe<Lessons_Courses_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLessons_Courses_AggregateArgs = {
  distinct_on?: Maybe<Array<Lessons_Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Courses_Order_By>>;
  where?: Maybe<Lessons_Courses_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLessons_Courses_By_PkArgs = {
  course_id: Scalars['String'];
  lesson_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLessons_TeachersArgs = {
  distinct_on?: Maybe<Array<Lessons_Teachers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Teachers_Order_By>>;
  where?: Maybe<Lessons_Teachers_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLessons_Teachers_AggregateArgs = {
  distinct_on?: Maybe<Array<Lessons_Teachers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Teachers_Order_By>>;
  where?: Maybe<Lessons_Teachers_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLessons_Teachers_By_PkArgs = {
  lesson_id: Scalars['String'];
  teacher_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLo_Study_Plan_ItemsArgs = {
  distinct_on?: Maybe<Array<Lo_Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lo_Study_Plan_Items_Order_By>>;
  where?: Maybe<Lo_Study_Plan_Items_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLo_Study_Plan_Items_AggregateArgs = {
  distinct_on?: Maybe<Array<Lo_Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lo_Study_Plan_Items_Order_By>>;
  where?: Maybe<Lo_Study_Plan_Items_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLo_Study_Plan_Items_By_PkArgs = {
  lo_id: Scalars['String'];
  study_plan_item_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLocationsArgs = {
  distinct_on?: Maybe<Array<Locations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Locations_Order_By>>;
  where?: Maybe<Locations_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLocations_AggregateArgs = {
  distinct_on?: Maybe<Array<Locations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Locations_Order_By>>;
  where?: Maybe<Locations_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLocations_By_PkArgs = {
  location_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootMediaArgs = {
  distinct_on?: Maybe<Array<Media_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Media_Order_By>>;
  where?: Maybe<Media_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMedia_AggregateArgs = {
  distinct_on?: Maybe<Array<Media_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Media_Order_By>>;
  where?: Maybe<Media_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMedia_By_PkArgs = {
  media_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootNotification_MessagesArgs = {
  distinct_on?: Maybe<Array<Notification_Messages_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notification_Messages_Order_By>>;
  where?: Maybe<Notification_Messages_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootNotification_Messages_AggregateArgs = {
  distinct_on?: Maybe<Array<Notification_Messages_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notification_Messages_Order_By>>;
  where?: Maybe<Notification_Messages_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootNotification_Messages_By_PkArgs = {
  notification_message_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootNotification_TargetsArgs = {
  distinct_on?: Maybe<Array<Notification_Targets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notification_Targets_Order_By>>;
  where?: Maybe<Notification_Targets_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootNotification_Targets_AggregateArgs = {
  distinct_on?: Maybe<Array<Notification_Targets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notification_Targets_Order_By>>;
  where?: Maybe<Notification_Targets_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootNotification_Targets_By_PkArgs = {
  target_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootNotificationsArgs = {
  distinct_on?: Maybe<Array<Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notifications_Order_By>>;
  where?: Maybe<Notifications_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootNotifications_AggregateArgs = {
  distinct_on?: Maybe<Array<Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notifications_Order_By>>;
  where?: Maybe<Notifications_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootNotifications_By_PkArgs = {
  notification_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootOrderArgs = {
  distinct_on?: Maybe<Array<Order_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Order_By>>;
  where?: Maybe<Order_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootOrder_Action_LogArgs = {
  distinct_on?: Maybe<Array<Order_Action_Log_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Action_Log_Order_By>>;
  where?: Maybe<Order_Action_Log_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootOrder_Action_Log_AggregateArgs = {
  distinct_on?: Maybe<Array<Order_Action_Log_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Action_Log_Order_By>>;
  where?: Maybe<Order_Action_Log_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootOrder_Action_Log_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootOrder_AggregateArgs = {
  distinct_on?: Maybe<Array<Order_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Order_By>>;
  where?: Maybe<Order_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootOrder_By_PkArgs = {
  id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootOrder_ItemArgs = {
  distinct_on?: Maybe<Array<Order_Item_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Item_Order_By>>;
  where?: Maybe<Order_Item_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootOrder_Item_AggregateArgs = {
  distinct_on?: Maybe<Array<Order_Item_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Item_Order_By>>;
  where?: Maybe<Order_Item_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootOrder_Item_By_PkArgs = {
  order_id: Scalars['String'];
  product_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootOrganizationsArgs = {
  distinct_on?: Maybe<Array<Organizations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Organizations_Order_By>>;
  where?: Maybe<Organizations_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootOrganizations_AggregateArgs = {
  distinct_on?: Maybe<Array<Organizations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Organizations_Order_By>>;
  where?: Maybe<Organizations_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootOrganizations_By_PkArgs = {
  organization_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootOrgsArgs = {
  distinct_on?: Maybe<Array<Orgs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Orgs_Order_By>>;
  where?: Maybe<Orgs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootOrgs_AggregateArgs = {
  distinct_on?: Maybe<Array<Orgs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Orgs_Order_By>>;
  where?: Maybe<Orgs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootOrgs_By_PkArgs = {
  org_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootPackagesArgs = {
  distinct_on?: Maybe<Array<Packages_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Packages_Order_By>>;
  where?: Maybe<Packages_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPackages_AggregateArgs = {
  distinct_on?: Maybe<Array<Packages_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Packages_Order_By>>;
  where?: Maybe<Packages_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPackages_By_PkArgs = {
  package_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootParentsArgs = {
  distinct_on?: Maybe<Array<Parents_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Parents_Order_By>>;
  where?: Maybe<Parents_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootParents_AggregateArgs = {
  distinct_on?: Maybe<Array<Parents_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Parents_Order_By>>;
  where?: Maybe<Parents_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootParents_By_PkArgs = {
  parent_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootPartner_Dynamic_Form_Field_ValuesArgs = {
  distinct_on?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: Maybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPartner_Dynamic_Form_Field_Values_AggregateArgs = {
  distinct_on?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: Maybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPartner_Dynamic_Form_Field_Values_By_PkArgs = {
  dynamic_form_field_value_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootPartner_Form_ConfigsArgs = {
  distinct_on?: Maybe<Array<Partner_Form_Configs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Partner_Form_Configs_Order_By>>;
  where?: Maybe<Partner_Form_Configs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPartner_Form_Configs_AggregateArgs = {
  distinct_on?: Maybe<Array<Partner_Form_Configs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Partner_Form_Configs_Order_By>>;
  where?: Maybe<Partner_Form_Configs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPartner_Form_Configs_By_PkArgs = {
  form_config_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootPlansArgs = {
  distinct_on?: Maybe<Array<Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Plans_Order_By>>;
  where?: Maybe<Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPlans_AggregateArgs = {
  distinct_on?: Maybe<Array<Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Plans_Order_By>>;
  where?: Maybe<Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPlans_By_PkArgs = {
  country: Scalars['String'];
  plan_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootPreset_Study_PlansArgs = {
  distinct_on?: Maybe<Array<Preset_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Preset_Study_Plans_Order_By>>;
  where?: Maybe<Preset_Study_Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPreset_Study_Plans_AggregateArgs = {
  distinct_on?: Maybe<Array<Preset_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Preset_Study_Plans_Order_By>>;
  where?: Maybe<Preset_Study_Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPreset_Study_Plans_By_PkArgs = {
  preset_study_plan_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootPreset_Study_Plans_WeeklyArgs = {
  distinct_on?: Maybe<Array<Preset_Study_Plans_Weekly_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Preset_Study_Plans_Weekly_Order_By>>;
  where?: Maybe<Preset_Study_Plans_Weekly_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPreset_Study_Plans_Weekly_AggregateArgs = {
  distinct_on?: Maybe<Array<Preset_Study_Plans_Weekly_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Preset_Study_Plans_Weekly_Order_By>>;
  where?: Maybe<Preset_Study_Plans_Weekly_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPreset_Study_Plans_Weekly_By_PkArgs = {
  preset_study_plan_weekly_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootPreset_Study_Plans_Weekly_FormatArgs = {
  distinct_on?: Maybe<Array<Preset_Study_Plans_Weekly_Format_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Preset_Study_Plans_Weekly_Format_Order_By>>;
  where?: Maybe<Preset_Study_Plans_Weekly_Format_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPreset_Study_Plans_Weekly_Format_AggregateArgs = {
  distinct_on?: Maybe<Array<Preset_Study_Plans_Weekly_Format_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Preset_Study_Plans_Weekly_Format_Order_By>>;
  where?: Maybe<Preset_Study_Plans_Weekly_Format_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootProductArgs = {
  distinct_on?: Maybe<Array<Product_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Order_By>>;
  where?: Maybe<Product_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootProduct_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Order_By>>;
  where?: Maybe<Product_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootProduct_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootProduct_FeeArgs = {
  distinct_on?: Maybe<Array<Product_Fee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Fee_Order_By>>;
  where?: Maybe<Product_Fee_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootProduct_Fee_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Fee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Fee_Order_By>>;
  where?: Maybe<Product_Fee_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootProduct_Fee_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootProduct_GradeArgs = {
  distinct_on?: Maybe<Array<Product_Grade_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Grade_Order_By>>;
  where?: Maybe<Product_Grade_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootProduct_Grade_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Grade_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Grade_Order_By>>;
  where?: Maybe<Product_Grade_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootProduct_Grade_By_PkArgs = {
  grade_id: Scalars['Int'];
  product_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootProduct_LocationArgs = {
  distinct_on?: Maybe<Array<Product_Location_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Location_Order_By>>;
  where?: Maybe<Product_Location_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootProduct_Location_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Location_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Location_Order_By>>;
  where?: Maybe<Product_Location_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootProduct_Location_By_PkArgs = {
  location_id: Scalars['String'];
  product_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootProduct_MaterialArgs = {
  distinct_on?: Maybe<Array<Product_Material_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Material_Order_By>>;
  where?: Maybe<Product_Material_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootProduct_Material_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Material_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Material_Order_By>>;
  where?: Maybe<Product_Material_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootProduct_Material_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootProduct_PackageArgs = {
  distinct_on?: Maybe<Array<Product_Package_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Package_Order_By>>;
  where?: Maybe<Product_Package_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootProduct_Package_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Package_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Package_Order_By>>;
  where?: Maybe<Product_Package_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootProduct_Package_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootProduct_PriceArgs = {
  distinct_on?: Maybe<Array<Product_Price_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Price_Order_By>>;
  where?: Maybe<Product_Price_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootProduct_Price_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Price_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Price_Order_By>>;
  where?: Maybe<Product_Price_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootProduct_Price_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootPromotion_RulesArgs = {
  distinct_on?: Maybe<Array<Promotion_Rules_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Promotion_Rules_Order_By>>;
  where?: Maybe<Promotion_Rules_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPromotion_Rules_AggregateArgs = {
  distinct_on?: Maybe<Array<Promotion_Rules_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Promotion_Rules_Order_By>>;
  where?: Maybe<Promotion_Rules_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPromotion_Rules_By_PkArgs = {
  promotion_rule_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootPromotionsArgs = {
  distinct_on?: Maybe<Array<Promotions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Promotions_Order_By>>;
  where?: Maybe<Promotions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPromotions_AggregateArgs = {
  distinct_on?: Maybe<Array<Promotions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Promotions_Order_By>>;
  where?: Maybe<Promotions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPromotions_By_PkArgs = {
  promotion_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootQuestionsArgs = {
  distinct_on?: Maybe<Array<Questions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Questions_Order_By>>;
  where?: Maybe<Questions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuestions_AggregateArgs = {
  distinct_on?: Maybe<Array<Questions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Questions_Order_By>>;
  where?: Maybe<Questions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuestions_By_PkArgs = {
  question_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootQuestions_Tagged_Learning_ObjectivesArgs = {
  distinct_on?: Maybe<Array<Questions_Tagged_Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Questions_Tagged_Learning_Objectives_Order_By>>;
  where?: Maybe<Questions_Tagged_Learning_Objectives_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuestions_Tagged_Learning_Objectives_AggregateArgs = {
  distinct_on?: Maybe<Array<Questions_Tagged_Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Questions_Tagged_Learning_Objectives_Order_By>>;
  where?: Maybe<Questions_Tagged_Learning_Objectives_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuestions_Tagged_Learning_Objectives_By_PkArgs = {
  lo_id: Scalars['String'];
  question_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootQuiz_SetsArgs = {
  distinct_on?: Maybe<Array<Quiz_Sets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quiz_Sets_Order_By>>;
  where?: Maybe<Quiz_Sets_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuiz_Sets_AggregateArgs = {
  distinct_on?: Maybe<Array<Quiz_Sets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quiz_Sets_Order_By>>;
  where?: Maybe<Quiz_Sets_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuiz_Sets_By_PkArgs = {
  quiz_set_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootQuizsetsArgs = {
  distinct_on?: Maybe<Array<Quizsets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quizsets_Order_By>>;
  where?: Maybe<Quizsets_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuizsets_AggregateArgs = {
  distinct_on?: Maybe<Array<Quizsets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quizsets_Order_By>>;
  where?: Maybe<Quizsets_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuizsets_By_PkArgs = {
  lo_id: Scalars['String'];
  question_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootQuizzesArgs = {
  distinct_on?: Maybe<Array<Quizzes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quizzes_Order_By>>;
  where?: Maybe<Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuizzes_AggregateArgs = {
  distinct_on?: Maybe<Array<Quizzes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Quizzes_Order_By>>;
  where?: Maybe<Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuizzes_By_PkArgs = {
  quiz_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootScheduler_ItemsArgs = {
  distinct_on?: Maybe<Array<Scheduler_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Items_Order_By>>;
  where?: Maybe<Scheduler_Items_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootScheduler_Items_AggregateArgs = {
  distinct_on?: Maybe<Array<Scheduler_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Items_Order_By>>;
  where?: Maybe<Scheduler_Items_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootScheduler_Items_By_PkArgs = {
  scheduler_item_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootScheduler_PatternsArgs = {
  distinct_on?: Maybe<Array<Scheduler_Patterns_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Patterns_Order_By>>;
  where?: Maybe<Scheduler_Patterns_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootScheduler_Patterns_AggregateArgs = {
  distinct_on?: Maybe<Array<Scheduler_Patterns_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Scheduler_Patterns_Order_By>>;
  where?: Maybe<Scheduler_Patterns_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootScheduler_Patterns_By_PkArgs = {
  scheduler_pattern_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootSchema_MigrationsArgs = {
  distinct_on?: Maybe<Array<Schema_Migrations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Schema_Migrations_Order_By>>;
  where?: Maybe<Schema_Migrations_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchema_Migrations_AggregateArgs = {
  distinct_on?: Maybe<Array<Schema_Migrations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Schema_Migrations_Order_By>>;
  where?: Maybe<Schema_Migrations_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchema_Migrations_By_PkArgs = {
  version: Scalars['bigint'];
};


/** subscription root */
export type Subscription_RootSchool_AdminsArgs = {
  distinct_on?: Maybe<Array<School_Admins_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<School_Admins_Order_By>>;
  where?: Maybe<School_Admins_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchool_Admins_AggregateArgs = {
  distinct_on?: Maybe<Array<School_Admins_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<School_Admins_Order_By>>;
  where?: Maybe<School_Admins_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchool_Admins_By_PkArgs = {
  school_admin_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootSchool_ConfigsArgs = {
  distinct_on?: Maybe<Array<School_Configs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<School_Configs_Order_By>>;
  where?: Maybe<School_Configs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchool_Configs_AggregateArgs = {
  distinct_on?: Maybe<Array<School_Configs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<School_Configs_Order_By>>;
  where?: Maybe<School_Configs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchool_Configs_By_PkArgs = {
  school_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootSchoolsArgs = {
  distinct_on?: Maybe<Array<Schools_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Schools_Order_By>>;
  where?: Maybe<Schools_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchools_AggregateArgs = {
  distinct_on?: Maybe<Array<Schools_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Schools_Order_By>>;
  where?: Maybe<Schools_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchools_By_PkArgs = {
  school_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootSearch_Courses_By_NameArgs = {
  args: Search_Courses_By_Name_Args;
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSearch_Courses_By_Name_AggregateArgs = {
  args: Search_Courses_By_Name_Args;
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootShuffled_Quiz_SetsArgs = {
  distinct_on?: Maybe<Array<Shuffled_Quiz_Sets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Shuffled_Quiz_Sets_Order_By>>;
  where?: Maybe<Shuffled_Quiz_Sets_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootShuffled_Quiz_Sets_AggregateArgs = {
  distinct_on?: Maybe<Array<Shuffled_Quiz_Sets_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Shuffled_Quiz_Sets_Order_By>>;
  where?: Maybe<Shuffled_Quiz_Sets_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootShuffled_Quiz_Sets_By_PkArgs = {
  shuffled_quiz_set_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudent_AssignmentsArgs = {
  distinct_on?: Maybe<Array<Student_Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Assignments_Order_By>>;
  where?: Maybe<Student_Assignments_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Assignments_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Assignments_Order_By>>;
  where?: Maybe<Student_Assignments_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Assignments_By_PkArgs = {
  assignment_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudent_CommentsArgs = {
  distinct_on?: Maybe<Array<Student_Comments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Comments_Order_By>>;
  where?: Maybe<Student_Comments_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Comments_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Comments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Comments_Order_By>>;
  where?: Maybe<Student_Comments_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Comments_By_PkArgs = {
  comment_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudent_Entryexit_RecordsArgs = {
  distinct_on?: Maybe<Array<Student_Entryexit_Records_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Entryexit_Records_Order_By>>;
  where?: Maybe<Student_Entryexit_Records_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Entryexit_Records_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Entryexit_Records_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Entryexit_Records_Order_By>>;
  where?: Maybe<Student_Entryexit_Records_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Entryexit_Records_By_PkArgs = {
  entryexit_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootStudent_Event_LogsArgs = {
  distinct_on?: Maybe<Array<Student_Event_Logs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Event_Logs_Order_By>>;
  where?: Maybe<Student_Event_Logs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Event_Logs_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Event_Logs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Event_Logs_Order_By>>;
  where?: Maybe<Student_Event_Logs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Event_Logs_By_PkArgs = {
  student_event_log_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootStudent_Learning_Time_By_DailyArgs = {
  distinct_on?: Maybe<Array<Student_Learning_Time_By_Daily_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Learning_Time_By_Daily_Order_By>>;
  where?: Maybe<Student_Learning_Time_By_Daily_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Learning_Time_By_Daily_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Learning_Time_By_Daily_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Learning_Time_By_Daily_Order_By>>;
  where?: Maybe<Student_Learning_Time_By_Daily_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Learning_Time_By_Daily_By_PkArgs = {
  learning_time_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootStudent_PackagesArgs = {
  distinct_on?: Maybe<Array<Student_Packages_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Packages_Order_By>>;
  where?: Maybe<Student_Packages_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Packages_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Packages_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Packages_Order_By>>;
  where?: Maybe<Student_Packages_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Packages_By_PkArgs = {
  student_package_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudent_ParentsArgs = {
  distinct_on?: Maybe<Array<Student_Parents_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Parents_Order_By>>;
  where?: Maybe<Student_Parents_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Parents_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Parents_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Parents_Order_By>>;
  where?: Maybe<Student_Parents_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Parents_By_PkArgs = {
  parent_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudent_QrArgs = {
  distinct_on?: Maybe<Array<Student_Qr_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Qr_Order_By>>;
  where?: Maybe<Student_Qr_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Qr_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Qr_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Qr_Order_By>>;
  where?: Maybe<Student_Qr_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Qr_By_PkArgs = {
  qr_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootStudent_QuestionsArgs = {
  distinct_on?: Maybe<Array<Student_Questions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Questions_Order_By>>;
  where?: Maybe<Student_Questions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Questions_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Questions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Questions_Order_By>>;
  where?: Maybe<Student_Questions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Questions_By_PkArgs = {
  student_question_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudent_StatisticsArgs = {
  distinct_on?: Maybe<Array<Student_Statistics_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Statistics_Order_By>>;
  where?: Maybe<Student_Statistics_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Statistics_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Statistics_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Statistics_Order_By>>;
  where?: Maybe<Student_Statistics_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Study_PlansArgs = {
  distinct_on?: Maybe<Array<Student_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Study_Plans_Order_By>>;
  where?: Maybe<Student_Study_Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Study_Plans_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Study_Plans_Order_By>>;
  where?: Maybe<Student_Study_Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Study_Plans_By_PkArgs = {
  student_id: Scalars['String'];
  study_plan_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudent_Submission_GradesArgs = {
  distinct_on?: Maybe<Array<Student_Submission_Grades_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submission_Grades_Order_By>>;
  where?: Maybe<Student_Submission_Grades_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Submission_Grades_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Submission_Grades_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submission_Grades_Order_By>>;
  where?: Maybe<Student_Submission_Grades_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Submission_Grades_By_PkArgs = {
  student_submission_grade_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudent_Submission_ScoresArgs = {
  distinct_on?: Maybe<Array<Student_Submission_Scores_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submission_Scores_Order_By>>;
  where?: Maybe<Student_Submission_Scores_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Submission_Scores_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Submission_Scores_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submission_Scores_Order_By>>;
  where?: Maybe<Student_Submission_Scores_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Submission_Scores_By_PkArgs = {
  student_submission_score_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudent_SubmissionsArgs = {
  distinct_on?: Maybe<Array<Student_Submissions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submissions_Order_By>>;
  where?: Maybe<Student_Submissions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Submissions_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Submissions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submissions_Order_By>>;
  where?: Maybe<Student_Submissions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Submissions_By_PkArgs = {
  student_submission_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudent_SubscriptionsArgs = {
  distinct_on?: Maybe<Array<Student_Subscriptions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Subscriptions_Order_By>>;
  where?: Maybe<Student_Subscriptions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Subscriptions_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Subscriptions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Subscriptions_Order_By>>;
  where?: Maybe<Student_Subscriptions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Subscriptions_By_PkArgs = {
  student_subscription_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudentsArgs = {
  distinct_on?: Maybe<Array<Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Order_By>>;
  where?: Maybe<Students_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudents_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Order_By>>;
  where?: Maybe<Students_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudents_Assigned_CoachesArgs = {
  distinct_on?: Maybe<Array<Students_Assigned_Coaches_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Assigned_Coaches_Order_By>>;
  where?: Maybe<Students_Assigned_Coaches_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudents_Assigned_Coaches_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Assigned_Coaches_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Assigned_Coaches_Order_By>>;
  where?: Maybe<Students_Assigned_Coaches_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudents_By_PkArgs = {
  student_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudents_Learning_Objectives_CompletenessArgs = {
  distinct_on?: Maybe<Array<Students_Learning_Objectives_Completeness_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Learning_Objectives_Completeness_Order_By>>;
  where?: Maybe<Students_Learning_Objectives_Completeness_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudents_Learning_Objectives_Completeness_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Learning_Objectives_Completeness_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Learning_Objectives_Completeness_Order_By>>;
  where?: Maybe<Students_Learning_Objectives_Completeness_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudents_Learning_Objectives_Completeness_By_PkArgs = {
  lo_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudents_Learning_Objectives_RecordsArgs = {
  distinct_on?: Maybe<Array<Students_Learning_Objectives_Records_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Learning_Objectives_Records_Order_By>>;
  where?: Maybe<Students_Learning_Objectives_Records_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudents_Learning_Objectives_Records_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Learning_Objectives_Records_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Learning_Objectives_Records_Order_By>>;
  where?: Maybe<Students_Learning_Objectives_Records_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudents_Learning_Objectives_Records_By_PkArgs = {
  record_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudents_Study_Plans_WeeklyArgs = {
  distinct_on?: Maybe<Array<Students_Study_Plans_Weekly_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Study_Plans_Weekly_Order_By>>;
  where?: Maybe<Students_Study_Plans_Weekly_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudents_Study_Plans_Weekly_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Study_Plans_Weekly_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Study_Plans_Weekly_Order_By>>;
  where?: Maybe<Students_Study_Plans_Weekly_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudents_Study_Plans_Weekly_By_PkArgs = {
  preset_study_plan_weekly_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudents_Topics_CompletenessArgs = {
  distinct_on?: Maybe<Array<Students_Topics_Completeness_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Topics_Completeness_Order_By>>;
  where?: Maybe<Students_Topics_Completeness_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudents_Topics_Completeness_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Topics_Completeness_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Topics_Completeness_Order_By>>;
  where?: Maybe<Students_Topics_Completeness_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudents_Topics_OverdueArgs = {
  distinct_on?: Maybe<Array<Students_Topics_Overdue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Topics_Overdue_Order_By>>;
  where?: Maybe<Students_Topics_Overdue_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudents_Topics_Overdue_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Topics_Overdue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Topics_Overdue_Order_By>>;
  where?: Maybe<Students_Topics_Overdue_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudents_Topics_Overdue_By_PkArgs = {
  student_id: Scalars['String'];
  topic_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudy_Plan_ItemsArgs = {
  distinct_on?: Maybe<Array<Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Study_Plan_Items_Order_By>>;
  where?: Maybe<Study_Plan_Items_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudy_Plan_Items_AggregateArgs = {
  distinct_on?: Maybe<Array<Study_Plan_Items_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Study_Plan_Items_Order_By>>;
  where?: Maybe<Study_Plan_Items_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudy_Plan_Items_By_PkArgs = {
  study_plan_item_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudy_PlansArgs = {
  distinct_on?: Maybe<Array<Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Study_Plans_Order_By>>;
  where?: Maybe<Study_Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudy_Plans_AggregateArgs = {
  distinct_on?: Maybe<Array<Study_Plans_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Study_Plans_Order_By>>;
  where?: Maybe<Study_Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudy_Plans_By_PkArgs = {
  study_plan_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootTaxArgs = {
  distinct_on?: Maybe<Array<Tax_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tax_Order_By>>;
  where?: Maybe<Tax_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTax_AggregateArgs = {
  distinct_on?: Maybe<Array<Tax_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tax_Order_By>>;
  where?: Maybe<Tax_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTax_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootTeacher_By_School_IdArgs = {
  distinct_on?: Maybe<Array<Teacher_By_School_Id_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Teacher_By_School_Id_Order_By>>;
  where?: Maybe<Teacher_By_School_Id_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTeacher_By_School_Id_AggregateArgs = {
  distinct_on?: Maybe<Array<Teacher_By_School_Id_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Teacher_By_School_Id_Order_By>>;
  where?: Maybe<Teacher_By_School_Id_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTeachersArgs = {
  distinct_on?: Maybe<Array<Teachers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Teachers_Order_By>>;
  where?: Maybe<Teachers_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTeachers_AggregateArgs = {
  distinct_on?: Maybe<Array<Teachers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Teachers_Order_By>>;
  where?: Maybe<Teachers_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTeachers_By_PkArgs = {
  teacher_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootTopicsArgs = {
  distinct_on?: Maybe<Array<Topics_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Topics_Order_By>>;
  where?: Maybe<Topics_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTopics_AggregateArgs = {
  distinct_on?: Maybe<Array<Topics_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Topics_Order_By>>;
  where?: Maybe<Topics_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTopics_AssignmentsArgs = {
  distinct_on?: Maybe<Array<Topics_Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Topics_Assignments_Order_By>>;
  where?: Maybe<Topics_Assignments_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTopics_Assignments_AggregateArgs = {
  distinct_on?: Maybe<Array<Topics_Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Topics_Assignments_Order_By>>;
  where?: Maybe<Topics_Assignments_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTopics_Assignments_By_PkArgs = {
  assignment_id: Scalars['String'];
  topic_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootTopics_By_PkArgs = {
  topic_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootTopics_Learning_ObjectivesArgs = {
  distinct_on?: Maybe<Array<Topics_Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Topics_Learning_Objectives_Order_By>>;
  where?: Maybe<Topics_Learning_Objectives_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTopics_Learning_Objectives_AggregateArgs = {
  distinct_on?: Maybe<Array<Topics_Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Topics_Learning_Objectives_Order_By>>;
  where?: Maybe<Topics_Learning_Objectives_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTopics_Learning_Objectives_By_PkArgs = {
  lo_id: Scalars['String'];
  topic_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootTutorsArgs = {
  distinct_on?: Maybe<Array<Tutors_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tutors_Order_By>>;
  where?: Maybe<Tutors_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTutors_AggregateArgs = {
  distinct_on?: Maybe<Array<Tutors_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tutors_Order_By>>;
  where?: Maybe<Tutors_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTutors_By_PkArgs = {
  tutor_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootUser_Access_PathsArgs = {
  distinct_on?: Maybe<Array<User_Access_Paths_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Access_Paths_Order_By>>;
  where?: Maybe<User_Access_Paths_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUser_Access_Paths_AggregateArgs = {
  distinct_on?: Maybe<Array<User_Access_Paths_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Access_Paths_Order_By>>;
  where?: Maybe<User_Access_Paths_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUser_Access_Paths_By_PkArgs = {
  location_id: Scalars['String'];
  user_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootUser_NotificationsArgs = {
  distinct_on?: Maybe<Array<User_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Notifications_Order_By>>;
  where?: Maybe<User_Notifications_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUser_Notifications_AggregateArgs = {
  distinct_on?: Maybe<Array<User_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Notifications_Order_By>>;
  where?: Maybe<User_Notifications_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUser_Notifications_By_PkArgs = {
  user_notification_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootUsersArgs = {
  distinct_on?: Maybe<Array<Users_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Order_By>>;
  where?: Maybe<Users_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUsers_AggregateArgs = {
  distinct_on?: Maybe<Array<Users_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Order_By>>;
  where?: Maybe<Users_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUsers_By_PkArgs = {
  user_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootUsers_GroupsArgs = {
  distinct_on?: Maybe<Array<Users_Groups_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Groups_Order_By>>;
  where?: Maybe<Users_Groups_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUsers_Groups_AggregateArgs = {
  distinct_on?: Maybe<Array<Users_Groups_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Groups_Order_By>>;
  where?: Maybe<Users_Groups_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUsers_Groups_By_PkArgs = {
  group_id: Scalars['String'];
  user_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootUsers_Info_NotificationsArgs = {
  distinct_on?: Maybe<Array<Users_Info_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Info_Notifications_Order_By>>;
  where?: Maybe<Users_Info_Notifications_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUsers_Info_Notifications_AggregateArgs = {
  distinct_on?: Maybe<Array<Users_Info_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Info_Notifications_Order_By>>;
  where?: Maybe<Users_Info_Notifications_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUsers_Info_Notifications_By_PkArgs = {
  user_notification_id: Scalars['String'];
};

/** columns and relationships of "tax" */
export type Tax = {
  created_at: Scalars['timestamptz'];
  default_flag: Scalars['Boolean'];
  id: Scalars['Int'];
  is_archived: Scalars['Boolean'];
  name: Scalars['String'];
  /** An array relationship */
  products: Array<Product>;
  /** An aggregated array relationship */
  products_aggregate: Product_Aggregate;
  resource_path?: Maybe<Scalars['String']>;
  tax_category: Scalars['String'];
  tax_percentage: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "tax" */
export type TaxProductsArgs = {
  distinct_on?: Maybe<Array<Product_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Order_By>>;
  where?: Maybe<Product_Bool_Exp>;
};


/** columns and relationships of "tax" */
export type TaxProducts_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Order_By>>;
  where?: Maybe<Product_Bool_Exp>;
};

/** aggregated selection of "tax" */
export type Tax_Aggregate = {
  aggregate?: Maybe<Tax_Aggregate_Fields>;
  nodes: Array<Tax>;
};

/** aggregate fields of "tax" */
export type Tax_Aggregate_Fields = {
  avg?: Maybe<Tax_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Tax_Max_Fields>;
  min?: Maybe<Tax_Min_Fields>;
  stddev?: Maybe<Tax_Stddev_Fields>;
  stddev_pop?: Maybe<Tax_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Tax_Stddev_Samp_Fields>;
  sum?: Maybe<Tax_Sum_Fields>;
  var_pop?: Maybe<Tax_Var_Pop_Fields>;
  var_samp?: Maybe<Tax_Var_Samp_Fields>;
  variance?: Maybe<Tax_Variance_Fields>;
};


/** aggregate fields of "tax" */
export type Tax_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Tax_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tax" */
export type Tax_Aggregate_Order_By = {
  avg?: Maybe<Tax_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Tax_Max_Order_By>;
  min?: Maybe<Tax_Min_Order_By>;
  stddev?: Maybe<Tax_Stddev_Order_By>;
  stddev_pop?: Maybe<Tax_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Tax_Stddev_Samp_Order_By>;
  sum?: Maybe<Tax_Sum_Order_By>;
  var_pop?: Maybe<Tax_Var_Pop_Order_By>;
  var_samp?: Maybe<Tax_Var_Samp_Order_By>;
  variance?: Maybe<Tax_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "tax" */
export type Tax_Arr_Rel_Insert_Input = {
  data: Array<Tax_Insert_Input>;
  on_conflict?: Maybe<Tax_On_Conflict>;
};

/** aggregate avg on columns */
export type Tax_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
  tax_percentage?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tax" */
export type Tax_Avg_Order_By = {
  id?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tax". All fields are combined with a logical 'AND'. */
export type Tax_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Tax_Bool_Exp>>>;
  _not?: Maybe<Tax_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Tax_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  default_flag?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  is_archived?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  products?: Maybe<Product_Bool_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  tax_category?: Maybe<String_Comparison_Exp>;
  tax_percentage?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "tax" */
export enum Tax_Constraint {
  /** unique or primary key constraint */
  TaxDefaultFlagIdx = 'tax_default_flag_idx',
  /** unique or primary key constraint */
  TaxPk = 'tax_pk'
}

/** input type for incrementing integer column in table "tax" */
export type Tax_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  tax_percentage?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "tax" */
export type Tax_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  default_flag?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  is_archived?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Product_Arr_Rel_Insert_Input>;
  resource_path?: Maybe<Scalars['String']>;
  tax_category?: Maybe<Scalars['String']>;
  tax_percentage?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Tax_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  tax_category?: Maybe<Scalars['String']>;
  tax_percentage?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "tax" */
export type Tax_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  tax_category?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Tax_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  tax_category?: Maybe<Scalars['String']>;
  tax_percentage?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "tax" */
export type Tax_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  tax_category?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "tax" */
export type Tax_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Tax>;
};

/** input type for inserting object relation for remote table "tax" */
export type Tax_Obj_Rel_Insert_Input = {
  data: Tax_Insert_Input;
  on_conflict?: Maybe<Tax_On_Conflict>;
};

/** on conflict condition type for table "tax" */
export type Tax_On_Conflict = {
  constraint: Tax_Constraint;
  update_columns: Array<Tax_Update_Column>;
  where?: Maybe<Tax_Bool_Exp>;
};

/** ordering options when selecting data from "tax" */
export type Tax_Order_By = {
  created_at?: Maybe<Order_By>;
  default_flag?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_archived?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  products_aggregate?: Maybe<Product_Aggregate_Order_By>;
  resource_path?: Maybe<Order_By>;
  tax_category?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "tax" */
export type Tax_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "tax" */
export enum Tax_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DefaultFlag = 'default_flag',
  /** column name */
  Id = 'id',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TaxCategory = 'tax_category',
  /** column name */
  TaxPercentage = 'tax_percentage',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "tax" */
export type Tax_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  default_flag?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  is_archived?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  tax_category?: Maybe<Scalars['String']>;
  tax_percentage?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Tax_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
  tax_percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tax" */
export type Tax_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Tax_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
  tax_percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tax" */
export type Tax_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Tax_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
  tax_percentage?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tax" */
export type Tax_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Tax_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
  tax_percentage?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "tax" */
export type Tax_Sum_Order_By = {
  id?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
};

/** update columns of table "tax" */
export enum Tax_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DefaultFlag = 'default_flag',
  /** column name */
  Id = 'id',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TaxCategory = 'tax_category',
  /** column name */
  TaxPercentage = 'tax_percentage',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Tax_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
  tax_percentage?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tax" */
export type Tax_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Tax_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
  tax_percentage?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tax" */
export type Tax_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Tax_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
  tax_percentage?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tax" */
export type Tax_Variance_Order_By = {
  id?: Maybe<Order_By>;
  tax_percentage?: Maybe<Order_By>;
};

/** columns and relationships of "teacher_by_school_id" */
export type Teacher_By_School_Id = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  school_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  schools?: Maybe<Schools>;
  /** An object relationship */
  teacher_by_school_id?: Maybe<Teachers>;
  teacher_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  users?: Maybe<Users>;
};

/** aggregated selection of "teacher_by_school_id" */
export type Teacher_By_School_Id_Aggregate = {
  aggregate?: Maybe<Teacher_By_School_Id_Aggregate_Fields>;
  nodes: Array<Teacher_By_School_Id>;
};

/** aggregate fields of "teacher_by_school_id" */
export type Teacher_By_School_Id_Aggregate_Fields = {
  avg?: Maybe<Teacher_By_School_Id_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Teacher_By_School_Id_Max_Fields>;
  min?: Maybe<Teacher_By_School_Id_Min_Fields>;
  stddev?: Maybe<Teacher_By_School_Id_Stddev_Fields>;
  stddev_pop?: Maybe<Teacher_By_School_Id_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Teacher_By_School_Id_Stddev_Samp_Fields>;
  sum?: Maybe<Teacher_By_School_Id_Sum_Fields>;
  var_pop?: Maybe<Teacher_By_School_Id_Var_Pop_Fields>;
  var_samp?: Maybe<Teacher_By_School_Id_Var_Samp_Fields>;
  variance?: Maybe<Teacher_By_School_Id_Variance_Fields>;
};


/** aggregate fields of "teacher_by_school_id" */
export type Teacher_By_School_Id_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Teacher_By_School_Id_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Aggregate_Order_By = {
  avg?: Maybe<Teacher_By_School_Id_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Teacher_By_School_Id_Max_Order_By>;
  min?: Maybe<Teacher_By_School_Id_Min_Order_By>;
  stddev?: Maybe<Teacher_By_School_Id_Stddev_Order_By>;
  stddev_pop?: Maybe<Teacher_By_School_Id_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Teacher_By_School_Id_Stddev_Samp_Order_By>;
  sum?: Maybe<Teacher_By_School_Id_Sum_Order_By>;
  var_pop?: Maybe<Teacher_By_School_Id_Var_Pop_Order_By>;
  var_samp?: Maybe<Teacher_By_School_Id_Var_Samp_Order_By>;
  variance?: Maybe<Teacher_By_School_Id_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Teacher_By_School_Id_Avg_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Avg_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "teacher_by_school_id". All fields are combined with a logical 'AND'. */
export type Teacher_By_School_Id_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Teacher_By_School_Id_Bool_Exp>>>;
  _not?: Maybe<Teacher_By_School_Id_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Teacher_By_School_Id_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  school_id?: Maybe<Int_Comparison_Exp>;
  schools?: Maybe<Schools_Bool_Exp>;
  teacher_by_school_id?: Maybe<Teachers_Bool_Exp>;
  teacher_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  users?: Maybe<Users_Bool_Exp>;
};

/** aggregate max on columns */
export type Teacher_By_School_Id_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  school_id?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  teacher_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Teacher_By_School_Id_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  school_id?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  teacher_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** ordering options when selecting data from "teacher_by_school_id" */
export type Teacher_By_School_Id_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  schools?: Maybe<Schools_Order_By>;
  teacher_by_school_id?: Maybe<Teachers_Order_By>;
  teacher_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  users?: Maybe<Users_Order_By>;
};

/** select columns of table "teacher_by_school_id" */
export enum Teacher_By_School_Id_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate stddev on columns */
export type Teacher_By_School_Id_Stddev_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Stddev_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Teacher_By_School_Id_Stddev_Pop_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Stddev_Pop_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Teacher_By_School_Id_Stddev_Samp_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Stddev_Samp_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Teacher_By_School_Id_Sum_Fields = {
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Sum_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Teacher_By_School_Id_Var_Pop_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Var_Pop_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Teacher_By_School_Id_Var_Samp_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Var_Samp_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Teacher_By_School_Id_Variance_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Variance_Order_By = {
  school_id?: Maybe<Order_By>;
};

/** columns and relationships of "teachers" */
export type Teachers = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  lessons_teachers: Array<Lessons_Teachers>;
  /** An aggregated array relationship */
  lessons_teachers_aggregate: Lessons_Teachers_Aggregate;
  resource_path?: Maybe<Scalars['String']>;
  school_ids?: Maybe<Scalars['_int4']>;
  school_name?: Maybe<Scalars['String']>;
  /** An array relationship */
  student_submission_scores: Array<Student_Submission_Scores>;
  /** An aggregated array relationship */
  student_submission_scores_aggregate: Student_Submission_Scores_Aggregate;
  /** An array relationship */
  teacher_by_school_ids: Array<Teacher_By_School_Id>;
  /** An aggregated array relationship */
  teacher_by_school_ids_aggregate: Teacher_By_School_Id_Aggregate;
  teacher_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  users?: Maybe<Users>;
};


/** columns and relationships of "teachers" */
export type TeachersLessons_TeachersArgs = {
  distinct_on?: Maybe<Array<Lessons_Teachers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Teachers_Order_By>>;
  where?: Maybe<Lessons_Teachers_Bool_Exp>;
};


/** columns and relationships of "teachers" */
export type TeachersLessons_Teachers_AggregateArgs = {
  distinct_on?: Maybe<Array<Lessons_Teachers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lessons_Teachers_Order_By>>;
  where?: Maybe<Lessons_Teachers_Bool_Exp>;
};


/** columns and relationships of "teachers" */
export type TeachersStudent_Submission_ScoresArgs = {
  distinct_on?: Maybe<Array<Student_Submission_Scores_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submission_Scores_Order_By>>;
  where?: Maybe<Student_Submission_Scores_Bool_Exp>;
};


/** columns and relationships of "teachers" */
export type TeachersStudent_Submission_Scores_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Submission_Scores_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submission_Scores_Order_By>>;
  where?: Maybe<Student_Submission_Scores_Bool_Exp>;
};


/** columns and relationships of "teachers" */
export type TeachersTeacher_By_School_IdsArgs = {
  distinct_on?: Maybe<Array<Teacher_By_School_Id_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Teacher_By_School_Id_Order_By>>;
  where?: Maybe<Teacher_By_School_Id_Bool_Exp>;
};


/** columns and relationships of "teachers" */
export type TeachersTeacher_By_School_Ids_AggregateArgs = {
  distinct_on?: Maybe<Array<Teacher_By_School_Id_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Teacher_By_School_Id_Order_By>>;
  where?: Maybe<Teacher_By_School_Id_Bool_Exp>;
};

/** aggregated selection of "teachers" */
export type Teachers_Aggregate = {
  aggregate?: Maybe<Teachers_Aggregate_Fields>;
  nodes: Array<Teachers>;
};

/** aggregate fields of "teachers" */
export type Teachers_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Teachers_Max_Fields>;
  min?: Maybe<Teachers_Min_Fields>;
};


/** aggregate fields of "teachers" */
export type Teachers_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Teachers_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "teachers" */
export type Teachers_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Teachers_Max_Order_By>;
  min?: Maybe<Teachers_Min_Order_By>;
};

/** input type for inserting array relation for remote table "teachers" */
export type Teachers_Arr_Rel_Insert_Input = {
  data: Array<Teachers_Insert_Input>;
  on_conflict?: Maybe<Teachers_On_Conflict>;
};

/** Boolean expression to filter rows from the table "teachers". All fields are combined with a logical 'AND'. */
export type Teachers_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Teachers_Bool_Exp>>>;
  _not?: Maybe<Teachers_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Teachers_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  lessons_teachers?: Maybe<Lessons_Teachers_Bool_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  school_ids?: Maybe<_Int4_Comparison_Exp>;
  school_name?: Maybe<String_Comparison_Exp>;
  student_submission_scores?: Maybe<Student_Submission_Scores_Bool_Exp>;
  teacher_by_school_ids?: Maybe<Teacher_By_School_Id_Bool_Exp>;
  teacher_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  users?: Maybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "teachers" */
export enum Teachers_Constraint {
  /** unique or primary key constraint */
  TeachersPk = 'teachers_pk'
}

/** input type for inserting data into table "teachers" */
export type Teachers_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lessons_teachers?: Maybe<Lessons_Teachers_Arr_Rel_Insert_Input>;
  resource_path?: Maybe<Scalars['String']>;
  school_ids?: Maybe<Scalars['_int4']>;
  school_name?: Maybe<Scalars['String']>;
  student_submission_scores?: Maybe<Student_Submission_Scores_Arr_Rel_Insert_Input>;
  teacher_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  users?: Maybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Teachers_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_name?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "teachers" */
export type Teachers_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_name?: Maybe<Order_By>;
  teacher_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Teachers_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_name?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "teachers" */
export type Teachers_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_name?: Maybe<Order_By>;
  teacher_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "teachers" */
export type Teachers_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Teachers>;
};

/** input type for inserting object relation for remote table "teachers" */
export type Teachers_Obj_Rel_Insert_Input = {
  data: Teachers_Insert_Input;
  on_conflict?: Maybe<Teachers_On_Conflict>;
};

/** on conflict condition type for table "teachers" */
export type Teachers_On_Conflict = {
  constraint: Teachers_Constraint;
  update_columns: Array<Teachers_Update_Column>;
  where?: Maybe<Teachers_Bool_Exp>;
};

/** ordering options when selecting data from "teachers" */
export type Teachers_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  lessons_teachers_aggregate?: Maybe<Lessons_Teachers_Aggregate_Order_By>;
  resource_path?: Maybe<Order_By>;
  school_ids?: Maybe<Order_By>;
  school_name?: Maybe<Order_By>;
  student_submission_scores_aggregate?: Maybe<Student_Submission_Scores_Aggregate_Order_By>;
  teacher_by_school_ids_aggregate?: Maybe<Teacher_By_School_Id_Aggregate_Order_By>;
  teacher_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  users?: Maybe<Users_Order_By>;
};

/** primary key columns input for table: "teachers" */
export type Teachers_Pk_Columns_Input = {
  teacher_id: Scalars['String'];
};

/** select columns of table "teachers" */
export enum Teachers_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolIds = 'school_ids',
  /** column name */
  SchoolName = 'school_name',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "teachers" */
export type Teachers_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_ids?: Maybe<Scalars['_int4']>;
  school_name?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "teachers" */
export enum Teachers_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolIds = 'school_ids',
  /** column name */
  SchoolName = 'school_name',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  UpdatedAt = 'updated_at'
}


/** expression to compare columns of type timestamptz. All fields are combined with logical 'AND'. */
export type Timestamptz_Comparison_Exp = {
  _eq?: Maybe<Scalars['timestamptz']>;
  _gt?: Maybe<Scalars['timestamptz']>;
  _gte?: Maybe<Scalars['timestamptz']>;
  _in?: Maybe<Array<Scalars['timestamptz']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['timestamptz']>;
  _lte?: Maybe<Scalars['timestamptz']>;
  _neq?: Maybe<Scalars['timestamptz']>;
  _nin?: Maybe<Array<Scalars['timestamptz']>>;
};

/** columns and relationships of "topics" */
export type Topics = {
  /** An array relationship */
  assignments: Array<Assignments>;
  /** An aggregated array relationship */
  assignments_aggregate: Assignments_Aggregate;
  attachment_names?: Maybe<Scalars['_text']>;
  attachment_urls?: Maybe<Scalars['_text']>;
  /** An object relationship */
  chapter?: Maybe<Chapters>;
  chapter_id?: Maybe<Scalars['String']>;
  copied_topic_id?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  essay_required: Scalars['Boolean'];
  grade: Scalars['smallint'];
  icon_url?: Maybe<Scalars['String']>;
  instruction?: Maybe<Scalars['String']>;
  /** An array relationship */
  learning_objectives: Array<Learning_Objectives>;
  /** An aggregated array relationship */
  learning_objectives_aggregate: Learning_Objectives_Aggregate;
  lo_display_order_counter?: Maybe<Scalars['Int']>;
  name: Scalars['String'];
  /** An array relationship */
  preset_study_plans_weeklies: Array<Preset_Study_Plans_Weekly>;
  /** An aggregated array relationship */
  preset_study_plans_weeklies_aggregate: Preset_Study_Plans_Weekly_Aggregate;
  published_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  school: Schools;
  school_id: Scalars['Int'];
  status?: Maybe<Scalars['String']>;
  /** An array relationship */
  student_submissions: Array<Student_Submissions>;
  /** An aggregated array relationship */
  student_submissions_aggregate: Student_Submissions_Aggregate;
  /** An array relationship */
  students_topics_overdues: Array<Students_Topics_Overdue>;
  /** An aggregated array relationship */
  students_topics_overdues_aggregate: Students_Topics_Overdue_Aggregate;
  subject: Scalars['String'];
  topic_id: Scalars['String'];
  topic_type: Scalars['String'];
  total_los: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "topics" */
export type TopicsAssignmentsArgs = {
  distinct_on?: Maybe<Array<Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assignments_Order_By>>;
  where?: Maybe<Assignments_Bool_Exp>;
};


/** columns and relationships of "topics" */
export type TopicsAssignments_AggregateArgs = {
  distinct_on?: Maybe<Array<Assignments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Assignments_Order_By>>;
  where?: Maybe<Assignments_Bool_Exp>;
};


/** columns and relationships of "topics" */
export type TopicsLearning_ObjectivesArgs = {
  distinct_on?: Maybe<Array<Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Learning_Objectives_Order_By>>;
  where?: Maybe<Learning_Objectives_Bool_Exp>;
};


/** columns and relationships of "topics" */
export type TopicsLearning_Objectives_AggregateArgs = {
  distinct_on?: Maybe<Array<Learning_Objectives_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Learning_Objectives_Order_By>>;
  where?: Maybe<Learning_Objectives_Bool_Exp>;
};


/** columns and relationships of "topics" */
export type TopicsPreset_Study_Plans_WeekliesArgs = {
  distinct_on?: Maybe<Array<Preset_Study_Plans_Weekly_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Preset_Study_Plans_Weekly_Order_By>>;
  where?: Maybe<Preset_Study_Plans_Weekly_Bool_Exp>;
};


/** columns and relationships of "topics" */
export type TopicsPreset_Study_Plans_Weeklies_AggregateArgs = {
  distinct_on?: Maybe<Array<Preset_Study_Plans_Weekly_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Preset_Study_Plans_Weekly_Order_By>>;
  where?: Maybe<Preset_Study_Plans_Weekly_Bool_Exp>;
};


/** columns and relationships of "topics" */
export type TopicsStudent_SubmissionsArgs = {
  distinct_on?: Maybe<Array<Student_Submissions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submissions_Order_By>>;
  where?: Maybe<Student_Submissions_Bool_Exp>;
};


/** columns and relationships of "topics" */
export type TopicsStudent_Submissions_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Submissions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Submissions_Order_By>>;
  where?: Maybe<Student_Submissions_Bool_Exp>;
};


/** columns and relationships of "topics" */
export type TopicsStudents_Topics_OverduesArgs = {
  distinct_on?: Maybe<Array<Students_Topics_Overdue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Topics_Overdue_Order_By>>;
  where?: Maybe<Students_Topics_Overdue_Bool_Exp>;
};


/** columns and relationships of "topics" */
export type TopicsStudents_Topics_Overdues_AggregateArgs = {
  distinct_on?: Maybe<Array<Students_Topics_Overdue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Students_Topics_Overdue_Order_By>>;
  where?: Maybe<Students_Topics_Overdue_Bool_Exp>;
};

/** aggregated selection of "topics" */
export type Topics_Aggregate = {
  aggregate?: Maybe<Topics_Aggregate_Fields>;
  nodes: Array<Topics>;
};

/** aggregate fields of "topics" */
export type Topics_Aggregate_Fields = {
  avg?: Maybe<Topics_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Topics_Max_Fields>;
  min?: Maybe<Topics_Min_Fields>;
  stddev?: Maybe<Topics_Stddev_Fields>;
  stddev_pop?: Maybe<Topics_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Topics_Stddev_Samp_Fields>;
  sum?: Maybe<Topics_Sum_Fields>;
  var_pop?: Maybe<Topics_Var_Pop_Fields>;
  var_samp?: Maybe<Topics_Var_Samp_Fields>;
  variance?: Maybe<Topics_Variance_Fields>;
};


/** aggregate fields of "topics" */
export type Topics_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Topics_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "topics" */
export type Topics_Aggregate_Order_By = {
  avg?: Maybe<Topics_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Topics_Max_Order_By>;
  min?: Maybe<Topics_Min_Order_By>;
  stddev?: Maybe<Topics_Stddev_Order_By>;
  stddev_pop?: Maybe<Topics_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Topics_Stddev_Samp_Order_By>;
  sum?: Maybe<Topics_Sum_Order_By>;
  var_pop?: Maybe<Topics_Var_Pop_Order_By>;
  var_samp?: Maybe<Topics_Var_Samp_Order_By>;
  variance?: Maybe<Topics_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "topics" */
export type Topics_Arr_Rel_Insert_Input = {
  data: Array<Topics_Insert_Input>;
  on_conflict?: Maybe<Topics_On_Conflict>;
};

/** columns and relationships of "topics_assignments" */
export type Topics_Assignments = {
  /** An object relationship */
  assignment: Assignments;
  assignment_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  topic_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "topics_assignments" */
export type Topics_Assignments_Aggregate = {
  aggregate?: Maybe<Topics_Assignments_Aggregate_Fields>;
  nodes: Array<Topics_Assignments>;
};

/** aggregate fields of "topics_assignments" */
export type Topics_Assignments_Aggregate_Fields = {
  avg?: Maybe<Topics_Assignments_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Topics_Assignments_Max_Fields>;
  min?: Maybe<Topics_Assignments_Min_Fields>;
  stddev?: Maybe<Topics_Assignments_Stddev_Fields>;
  stddev_pop?: Maybe<Topics_Assignments_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Topics_Assignments_Stddev_Samp_Fields>;
  sum?: Maybe<Topics_Assignments_Sum_Fields>;
  var_pop?: Maybe<Topics_Assignments_Var_Pop_Fields>;
  var_samp?: Maybe<Topics_Assignments_Var_Samp_Fields>;
  variance?: Maybe<Topics_Assignments_Variance_Fields>;
};


/** aggregate fields of "topics_assignments" */
export type Topics_Assignments_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Topics_Assignments_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "topics_assignments" */
export type Topics_Assignments_Aggregate_Order_By = {
  avg?: Maybe<Topics_Assignments_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Topics_Assignments_Max_Order_By>;
  min?: Maybe<Topics_Assignments_Min_Order_By>;
  stddev?: Maybe<Topics_Assignments_Stddev_Order_By>;
  stddev_pop?: Maybe<Topics_Assignments_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Topics_Assignments_Stddev_Samp_Order_By>;
  sum?: Maybe<Topics_Assignments_Sum_Order_By>;
  var_pop?: Maybe<Topics_Assignments_Var_Pop_Order_By>;
  var_samp?: Maybe<Topics_Assignments_Var_Samp_Order_By>;
  variance?: Maybe<Topics_Assignments_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "topics_assignments" */
export type Topics_Assignments_Arr_Rel_Insert_Input = {
  data: Array<Topics_Assignments_Insert_Input>;
  on_conflict?: Maybe<Topics_Assignments_On_Conflict>;
};

/** aggregate avg on columns */
export type Topics_Assignments_Avg_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "topics_assignments" */
export type Topics_Assignments_Avg_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "topics_assignments". All fields are combined with a logical 'AND'. */
export type Topics_Assignments_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Topics_Assignments_Bool_Exp>>>;
  _not?: Maybe<Topics_Assignments_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Topics_Assignments_Bool_Exp>>>;
  assignment?: Maybe<Assignments_Bool_Exp>;
  assignment_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  display_order?: Maybe<Smallint_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  topic_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "topics_assignments" */
export enum Topics_Assignments_Constraint {
  /** unique or primary key constraint */
  TopicsAssignmentsPk = 'topics_assignments_pk'
}

/** input type for incrementing integer column in table "topics_assignments" */
export type Topics_Assignments_Inc_Input = {
  display_order?: Maybe<Scalars['smallint']>;
};

/** input type for inserting data into table "topics_assignments" */
export type Topics_Assignments_Insert_Input = {
  assignment?: Maybe<Assignments_Obj_Rel_Insert_Input>;
  assignment_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Topics_Assignments_Max_Fields = {
  assignment_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "topics_assignments" */
export type Topics_Assignments_Max_Order_By = {
  assignment_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Topics_Assignments_Min_Fields = {
  assignment_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "topics_assignments" */
export type Topics_Assignments_Min_Order_By = {
  assignment_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "topics_assignments" */
export type Topics_Assignments_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Topics_Assignments>;
};

/** input type for inserting object relation for remote table "topics_assignments" */
export type Topics_Assignments_Obj_Rel_Insert_Input = {
  data: Topics_Assignments_Insert_Input;
  on_conflict?: Maybe<Topics_Assignments_On_Conflict>;
};

/** on conflict condition type for table "topics_assignments" */
export type Topics_Assignments_On_Conflict = {
  constraint: Topics_Assignments_Constraint;
  update_columns: Array<Topics_Assignments_Update_Column>;
  where?: Maybe<Topics_Assignments_Bool_Exp>;
};

/** ordering options when selecting data from "topics_assignments" */
export type Topics_Assignments_Order_By = {
  assignment?: Maybe<Assignments_Order_By>;
  assignment_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "topics_assignments" */
export type Topics_Assignments_Pk_Columns_Input = {
  assignment_id: Scalars['String'];
  topic_id: Scalars['String'];
};

/** select columns of table "topics_assignments" */
export enum Topics_Assignments_Select_Column {
  /** column name */
  AssignmentId = 'assignment_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "topics_assignments" */
export type Topics_Assignments_Set_Input = {
  assignment_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Topics_Assignments_Stddev_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "topics_assignments" */
export type Topics_Assignments_Stddev_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Topics_Assignments_Stddev_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "topics_assignments" */
export type Topics_Assignments_Stddev_Pop_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Topics_Assignments_Stddev_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "topics_assignments" */
export type Topics_Assignments_Stddev_Samp_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Topics_Assignments_Sum_Fields = {
  display_order?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "topics_assignments" */
export type Topics_Assignments_Sum_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** update columns of table "topics_assignments" */
export enum Topics_Assignments_Update_Column {
  /** column name */
  AssignmentId = 'assignment_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Topics_Assignments_Var_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "topics_assignments" */
export type Topics_Assignments_Var_Pop_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Topics_Assignments_Var_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "topics_assignments" */
export type Topics_Assignments_Var_Samp_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Topics_Assignments_Variance_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "topics_assignments" */
export type Topics_Assignments_Variance_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate avg on columns */
export type Topics_Avg_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  lo_display_order_counter?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_los?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "topics" */
export type Topics_Avg_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  lo_display_order_counter?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  total_los?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "topics". All fields are combined with a logical 'AND'. */
export type Topics_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Topics_Bool_Exp>>>;
  _not?: Maybe<Topics_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Topics_Bool_Exp>>>;
  assignments?: Maybe<Assignments_Bool_Exp>;
  attachment_names?: Maybe<_Text_Comparison_Exp>;
  attachment_urls?: Maybe<_Text_Comparison_Exp>;
  chapter?: Maybe<Chapters_Bool_Exp>;
  chapter_id?: Maybe<String_Comparison_Exp>;
  copied_topic_id?: Maybe<String_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  display_order?: Maybe<Smallint_Comparison_Exp>;
  essay_required?: Maybe<Boolean_Comparison_Exp>;
  grade?: Maybe<Smallint_Comparison_Exp>;
  icon_url?: Maybe<String_Comparison_Exp>;
  instruction?: Maybe<String_Comparison_Exp>;
  learning_objectives?: Maybe<Learning_Objectives_Bool_Exp>;
  lo_display_order_counter?: Maybe<Int_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  preset_study_plans_weeklies?: Maybe<Preset_Study_Plans_Weekly_Bool_Exp>;
  published_at?: Maybe<Timestamptz_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  school?: Maybe<Schools_Bool_Exp>;
  school_id?: Maybe<Int_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  student_submissions?: Maybe<Student_Submissions_Bool_Exp>;
  students_topics_overdues?: Maybe<Students_Topics_Overdue_Bool_Exp>;
  subject?: Maybe<String_Comparison_Exp>;
  topic_id?: Maybe<String_Comparison_Exp>;
  topic_type?: Maybe<String_Comparison_Exp>;
  total_los?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "topics" */
export enum Topics_Constraint {
  /** unique or primary key constraint */
  TopicsPk = 'topics_pk'
}

/** input type for incrementing integer column in table "topics" */
export type Topics_Inc_Input = {
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  lo_display_order_counter?: Maybe<Scalars['Int']>;
  school_id?: Maybe<Scalars['Int']>;
  total_los?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "topics" */
export type Topics_Insert_Input = {
  assignments?: Maybe<Assignments_Arr_Rel_Insert_Input>;
  attachment_names?: Maybe<Scalars['_text']>;
  attachment_urls?: Maybe<Scalars['_text']>;
  chapter?: Maybe<Chapters_Obj_Rel_Insert_Input>;
  chapter_id?: Maybe<Scalars['String']>;
  copied_topic_id?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  essay_required?: Maybe<Scalars['Boolean']>;
  grade?: Maybe<Scalars['smallint']>;
  icon_url?: Maybe<Scalars['String']>;
  instruction?: Maybe<Scalars['String']>;
  learning_objectives?: Maybe<Learning_Objectives_Arr_Rel_Insert_Input>;
  lo_display_order_counter?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  preset_study_plans_weeklies?: Maybe<Preset_Study_Plans_Weekly_Arr_Rel_Insert_Input>;
  published_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school?: Maybe<Schools_Obj_Rel_Insert_Input>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  student_submissions?: Maybe<Student_Submissions_Arr_Rel_Insert_Input>;
  students_topics_overdues?: Maybe<Students_Topics_Overdue_Arr_Rel_Insert_Input>;
  subject?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  topic_type?: Maybe<Scalars['String']>;
  total_los?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** columns and relationships of "topics_learning_objectives" */
export type Topics_Learning_Objectives = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  /** An object relationship */
  learning_objective: Learning_Objectives;
  lo_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  topic: Topics;
  topic_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "topics_learning_objectives" */
export type Topics_Learning_Objectives_Aggregate = {
  aggregate?: Maybe<Topics_Learning_Objectives_Aggregate_Fields>;
  nodes: Array<Topics_Learning_Objectives>;
};

/** aggregate fields of "topics_learning_objectives" */
export type Topics_Learning_Objectives_Aggregate_Fields = {
  avg?: Maybe<Topics_Learning_Objectives_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Topics_Learning_Objectives_Max_Fields>;
  min?: Maybe<Topics_Learning_Objectives_Min_Fields>;
  stddev?: Maybe<Topics_Learning_Objectives_Stddev_Fields>;
  stddev_pop?: Maybe<Topics_Learning_Objectives_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Topics_Learning_Objectives_Stddev_Samp_Fields>;
  sum?: Maybe<Topics_Learning_Objectives_Sum_Fields>;
  var_pop?: Maybe<Topics_Learning_Objectives_Var_Pop_Fields>;
  var_samp?: Maybe<Topics_Learning_Objectives_Var_Samp_Fields>;
  variance?: Maybe<Topics_Learning_Objectives_Variance_Fields>;
};


/** aggregate fields of "topics_learning_objectives" */
export type Topics_Learning_Objectives_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Topics_Learning_Objectives_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Aggregate_Order_By = {
  avg?: Maybe<Topics_Learning_Objectives_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Topics_Learning_Objectives_Max_Order_By>;
  min?: Maybe<Topics_Learning_Objectives_Min_Order_By>;
  stddev?: Maybe<Topics_Learning_Objectives_Stddev_Order_By>;
  stddev_pop?: Maybe<Topics_Learning_Objectives_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Topics_Learning_Objectives_Stddev_Samp_Order_By>;
  sum?: Maybe<Topics_Learning_Objectives_Sum_Order_By>;
  var_pop?: Maybe<Topics_Learning_Objectives_Var_Pop_Order_By>;
  var_samp?: Maybe<Topics_Learning_Objectives_Var_Samp_Order_By>;
  variance?: Maybe<Topics_Learning_Objectives_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Arr_Rel_Insert_Input = {
  data: Array<Topics_Learning_Objectives_Insert_Input>;
  on_conflict?: Maybe<Topics_Learning_Objectives_On_Conflict>;
};

/** aggregate avg on columns */
export type Topics_Learning_Objectives_Avg_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Avg_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "topics_learning_objectives". All fields are combined with a logical 'AND'. */
export type Topics_Learning_Objectives_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Topics_Learning_Objectives_Bool_Exp>>>;
  _not?: Maybe<Topics_Learning_Objectives_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Topics_Learning_Objectives_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  display_order?: Maybe<Smallint_Comparison_Exp>;
  learning_objective?: Maybe<Learning_Objectives_Bool_Exp>;
  lo_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  topic?: Maybe<Topics_Bool_Exp>;
  topic_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "topics_learning_objectives" */
export enum Topics_Learning_Objectives_Constraint {
  /** unique or primary key constraint */
  TopicsLearningObjectivesPk = 'topics_learning_objectives_pk'
}

/** input type for incrementing integer column in table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Inc_Input = {
  display_order?: Maybe<Scalars['smallint']>;
};

/** input type for inserting data into table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  learning_objective?: Maybe<Learning_Objectives_Obj_Rel_Insert_Input>;
  lo_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  topic?: Maybe<Topics_Obj_Rel_Insert_Input>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Topics_Learning_Objectives_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  lo_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  lo_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Topics_Learning_Objectives_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  lo_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  lo_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Topics_Learning_Objectives>;
};

/** input type for inserting object relation for remote table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Obj_Rel_Insert_Input = {
  data: Topics_Learning_Objectives_Insert_Input;
  on_conflict?: Maybe<Topics_Learning_Objectives_On_Conflict>;
};

/** on conflict condition type for table "topics_learning_objectives" */
export type Topics_Learning_Objectives_On_Conflict = {
  constraint: Topics_Learning_Objectives_Constraint;
  update_columns: Array<Topics_Learning_Objectives_Update_Column>;
  where?: Maybe<Topics_Learning_Objectives_Bool_Exp>;
};

/** ordering options when selecting data from "topics_learning_objectives" */
export type Topics_Learning_Objectives_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  learning_objective?: Maybe<Learning_Objectives_Order_By>;
  lo_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  topic?: Maybe<Topics_Order_By>;
  topic_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "topics_learning_objectives" */
export type Topics_Learning_Objectives_Pk_Columns_Input = {
  lo_id: Scalars['String'];
  topic_id: Scalars['String'];
};

/** select columns of table "topics_learning_objectives" */
export enum Topics_Learning_Objectives_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  lo_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Topics_Learning_Objectives_Stddev_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Stddev_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Topics_Learning_Objectives_Stddev_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Stddev_Pop_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Topics_Learning_Objectives_Stddev_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Stddev_Samp_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Topics_Learning_Objectives_Sum_Fields = {
  display_order?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Sum_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** update columns of table "topics_learning_objectives" */
export enum Topics_Learning_Objectives_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Topics_Learning_Objectives_Var_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Var_Pop_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Topics_Learning_Objectives_Var_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Var_Samp_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Topics_Learning_Objectives_Variance_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Variance_Order_By = {
  display_order?: Maybe<Order_By>;
};

/** aggregate max on columns */
export type Topics_Max_Fields = {
  chapter_id?: Maybe<Scalars['String']>;
  copied_topic_id?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  icon_url?: Maybe<Scalars['String']>;
  instruction?: Maybe<Scalars['String']>;
  lo_display_order_counter?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  published_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  topic_type?: Maybe<Scalars['String']>;
  total_los?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "topics" */
export type Topics_Max_Order_By = {
  chapter_id?: Maybe<Order_By>;
  copied_topic_id?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  icon_url?: Maybe<Order_By>;
  instruction?: Maybe<Order_By>;
  lo_display_order_counter?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  published_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  topic_type?: Maybe<Order_By>;
  total_los?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Topics_Min_Fields = {
  chapter_id?: Maybe<Scalars['String']>;
  copied_topic_id?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  icon_url?: Maybe<Scalars['String']>;
  instruction?: Maybe<Scalars['String']>;
  lo_display_order_counter?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  published_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  topic_type?: Maybe<Scalars['String']>;
  total_los?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "topics" */
export type Topics_Min_Order_By = {
  chapter_id?: Maybe<Order_By>;
  copied_topic_id?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  icon_url?: Maybe<Order_By>;
  instruction?: Maybe<Order_By>;
  lo_display_order_counter?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  published_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  topic_type?: Maybe<Order_By>;
  total_los?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "topics" */
export type Topics_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Topics>;
};

/** input type for inserting object relation for remote table "topics" */
export type Topics_Obj_Rel_Insert_Input = {
  data: Topics_Insert_Input;
  on_conflict?: Maybe<Topics_On_Conflict>;
};

/** on conflict condition type for table "topics" */
export type Topics_On_Conflict = {
  constraint: Topics_Constraint;
  update_columns: Array<Topics_Update_Column>;
  where?: Maybe<Topics_Bool_Exp>;
};

/** ordering options when selecting data from "topics" */
export type Topics_Order_By = {
  assignments_aggregate?: Maybe<Assignments_Aggregate_Order_By>;
  attachment_names?: Maybe<Order_By>;
  attachment_urls?: Maybe<Order_By>;
  chapter?: Maybe<Chapters_Order_By>;
  chapter_id?: Maybe<Order_By>;
  copied_topic_id?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  display_order?: Maybe<Order_By>;
  essay_required?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  icon_url?: Maybe<Order_By>;
  instruction?: Maybe<Order_By>;
  learning_objectives_aggregate?: Maybe<Learning_Objectives_Aggregate_Order_By>;
  lo_display_order_counter?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  preset_study_plans_weeklies_aggregate?: Maybe<Preset_Study_Plans_Weekly_Aggregate_Order_By>;
  published_at?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  school?: Maybe<Schools_Order_By>;
  school_id?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_submissions_aggregate?: Maybe<Student_Submissions_Aggregate_Order_By>;
  students_topics_overdues_aggregate?: Maybe<Students_Topics_Overdue_Aggregate_Order_By>;
  subject?: Maybe<Order_By>;
  topic_id?: Maybe<Order_By>;
  topic_type?: Maybe<Order_By>;
  total_los?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "topics" */
export type Topics_Pk_Columns_Input = {
  topic_id: Scalars['String'];
};

/** select columns of table "topics" */
export enum Topics_Select_Column {
  /** column name */
  AttachmentNames = 'attachment_names',
  /** column name */
  AttachmentUrls = 'attachment_urls',
  /** column name */
  ChapterId = 'chapter_id',
  /** column name */
  CopiedTopicId = 'copied_topic_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  EssayRequired = 'essay_required',
  /** column name */
  Grade = 'grade',
  /** column name */
  IconUrl = 'icon_url',
  /** column name */
  Instruction = 'instruction',
  /** column name */
  LoDisplayOrderCounter = 'lo_display_order_counter',
  /** column name */
  Name = 'name',
  /** column name */
  PublishedAt = 'published_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Status = 'status',
  /** column name */
  Subject = 'subject',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  TopicType = 'topic_type',
  /** column name */
  TotalLos = 'total_los',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "topics" */
export type Topics_Set_Input = {
  attachment_names?: Maybe<Scalars['_text']>;
  attachment_urls?: Maybe<Scalars['_text']>;
  chapter_id?: Maybe<Scalars['String']>;
  copied_topic_id?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  essay_required?: Maybe<Scalars['Boolean']>;
  grade?: Maybe<Scalars['smallint']>;
  icon_url?: Maybe<Scalars['String']>;
  instruction?: Maybe<Scalars['String']>;
  lo_display_order_counter?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  published_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  topic_type?: Maybe<Scalars['String']>;
  total_los?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Topics_Stddev_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  lo_display_order_counter?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_los?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "topics" */
export type Topics_Stddev_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  lo_display_order_counter?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  total_los?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Topics_Stddev_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  lo_display_order_counter?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_los?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "topics" */
export type Topics_Stddev_Pop_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  lo_display_order_counter?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  total_los?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Topics_Stddev_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  lo_display_order_counter?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_los?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "topics" */
export type Topics_Stddev_Samp_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  lo_display_order_counter?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  total_los?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Topics_Sum_Fields = {
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  lo_display_order_counter?: Maybe<Scalars['Int']>;
  school_id?: Maybe<Scalars['Int']>;
  total_los?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "topics" */
export type Topics_Sum_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  lo_display_order_counter?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  total_los?: Maybe<Order_By>;
};

/** update columns of table "topics" */
export enum Topics_Update_Column {
  /** column name */
  AttachmentNames = 'attachment_names',
  /** column name */
  AttachmentUrls = 'attachment_urls',
  /** column name */
  ChapterId = 'chapter_id',
  /** column name */
  CopiedTopicId = 'copied_topic_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  EssayRequired = 'essay_required',
  /** column name */
  Grade = 'grade',
  /** column name */
  IconUrl = 'icon_url',
  /** column name */
  Instruction = 'instruction',
  /** column name */
  LoDisplayOrderCounter = 'lo_display_order_counter',
  /** column name */
  Name = 'name',
  /** column name */
  PublishedAt = 'published_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Status = 'status',
  /** column name */
  Subject = 'subject',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  TopicType = 'topic_type',
  /** column name */
  TotalLos = 'total_los',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Topics_Var_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  lo_display_order_counter?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_los?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "topics" */
export type Topics_Var_Pop_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  lo_display_order_counter?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  total_los?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Topics_Var_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  lo_display_order_counter?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_los?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "topics" */
export type Topics_Var_Samp_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  lo_display_order_counter?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  total_los?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Topics_Variance_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  lo_display_order_counter?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_los?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "topics" */
export type Topics_Variance_Order_By = {
  display_order?: Maybe<Order_By>;
  grade?: Maybe<Order_By>;
  lo_display_order_counter?: Maybe<Order_By>;
  school_id?: Maybe<Order_By>;
  total_los?: Maybe<Order_By>;
};

/** columns and relationships of "tutors" */
export type Tutors = {
  created_at: Scalars['timestamptz'];
  current_active_questions?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grades?: Maybe<Scalars['_int2']>;
  open_questions?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  skill_set: Scalars['_text'];
  status?: Maybe<Scalars['String']>;
  /** An array relationship */
  student_questions: Array<Student_Questions>;
  /** An aggregated array relationship */
  student_questions_aggregate: Student_Questions_Aggregate;
  total_resolved_questions?: Maybe<Scalars['Int']>;
  tutor_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "tutors" */
export type TutorsStudent_QuestionsArgs = {
  distinct_on?: Maybe<Array<Student_Questions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Questions_Order_By>>;
  where?: Maybe<Student_Questions_Bool_Exp>;
};


/** columns and relationships of "tutors" */
export type TutorsStudent_Questions_AggregateArgs = {
  distinct_on?: Maybe<Array<Student_Questions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Student_Questions_Order_By>>;
  where?: Maybe<Student_Questions_Bool_Exp>;
};

/** aggregated selection of "tutors" */
export type Tutors_Aggregate = {
  aggregate?: Maybe<Tutors_Aggregate_Fields>;
  nodes: Array<Tutors>;
};

/** aggregate fields of "tutors" */
export type Tutors_Aggregate_Fields = {
  avg?: Maybe<Tutors_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Tutors_Max_Fields>;
  min?: Maybe<Tutors_Min_Fields>;
  stddev?: Maybe<Tutors_Stddev_Fields>;
  stddev_pop?: Maybe<Tutors_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Tutors_Stddev_Samp_Fields>;
  sum?: Maybe<Tutors_Sum_Fields>;
  var_pop?: Maybe<Tutors_Var_Pop_Fields>;
  var_samp?: Maybe<Tutors_Var_Samp_Fields>;
  variance?: Maybe<Tutors_Variance_Fields>;
};


/** aggregate fields of "tutors" */
export type Tutors_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Tutors_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tutors" */
export type Tutors_Aggregate_Order_By = {
  avg?: Maybe<Tutors_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Tutors_Max_Order_By>;
  min?: Maybe<Tutors_Min_Order_By>;
  stddev?: Maybe<Tutors_Stddev_Order_By>;
  stddev_pop?: Maybe<Tutors_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Tutors_Stddev_Samp_Order_By>;
  sum?: Maybe<Tutors_Sum_Order_By>;
  var_pop?: Maybe<Tutors_Var_Pop_Order_By>;
  var_samp?: Maybe<Tutors_Var_Samp_Order_By>;
  variance?: Maybe<Tutors_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "tutors" */
export type Tutors_Arr_Rel_Insert_Input = {
  data: Array<Tutors_Insert_Input>;
  on_conflict?: Maybe<Tutors_On_Conflict>;
};

/** aggregate avg on columns */
export type Tutors_Avg_Fields = {
  current_active_questions?: Maybe<Scalars['Float']>;
  open_questions?: Maybe<Scalars['Float']>;
  total_resolved_questions?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tutors" */
export type Tutors_Avg_Order_By = {
  current_active_questions?: Maybe<Order_By>;
  open_questions?: Maybe<Order_By>;
  total_resolved_questions?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tutors". All fields are combined with a logical 'AND'. */
export type Tutors_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Tutors_Bool_Exp>>>;
  _not?: Maybe<Tutors_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Tutors_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  current_active_questions?: Maybe<Smallint_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  grades?: Maybe<_Int2_Comparison_Exp>;
  open_questions?: Maybe<Smallint_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  skill_set?: Maybe<_Text_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  student_questions?: Maybe<Student_Questions_Bool_Exp>;
  total_resolved_questions?: Maybe<Int_Comparison_Exp>;
  tutor_id?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "tutors" */
export enum Tutors_Constraint {
  /** unique or primary key constraint */
  TutorsPk = 'tutors_pk'
}

/** input type for incrementing integer column in table "tutors" */
export type Tutors_Inc_Input = {
  current_active_questions?: Maybe<Scalars['smallint']>;
  open_questions?: Maybe<Scalars['smallint']>;
  total_resolved_questions?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "tutors" */
export type Tutors_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  current_active_questions?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grades?: Maybe<Scalars['_int2']>;
  open_questions?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  skill_set?: Maybe<Scalars['_text']>;
  status?: Maybe<Scalars['String']>;
  student_questions?: Maybe<Student_Questions_Arr_Rel_Insert_Input>;
  total_resolved_questions?: Maybe<Scalars['Int']>;
  tutor_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Tutors_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  current_active_questions?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  open_questions?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  total_resolved_questions?: Maybe<Scalars['Int']>;
  tutor_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "tutors" */
export type Tutors_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  current_active_questions?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  open_questions?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  total_resolved_questions?: Maybe<Order_By>;
  tutor_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Tutors_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  current_active_questions?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  open_questions?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  total_resolved_questions?: Maybe<Scalars['Int']>;
  tutor_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "tutors" */
export type Tutors_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  current_active_questions?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  open_questions?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  total_resolved_questions?: Maybe<Order_By>;
  tutor_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "tutors" */
export type Tutors_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Tutors>;
};

/** input type for inserting object relation for remote table "tutors" */
export type Tutors_Obj_Rel_Insert_Input = {
  data: Tutors_Insert_Input;
  on_conflict?: Maybe<Tutors_On_Conflict>;
};

/** on conflict condition type for table "tutors" */
export type Tutors_On_Conflict = {
  constraint: Tutors_Constraint;
  update_columns: Array<Tutors_Update_Column>;
  where?: Maybe<Tutors_Bool_Exp>;
};

/** ordering options when selecting data from "tutors" */
export type Tutors_Order_By = {
  created_at?: Maybe<Order_By>;
  current_active_questions?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  grades?: Maybe<Order_By>;
  open_questions?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  skill_set?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_questions_aggregate?: Maybe<Student_Questions_Aggregate_Order_By>;
  total_resolved_questions?: Maybe<Order_By>;
  tutor_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "tutors" */
export type Tutors_Pk_Columns_Input = {
  tutor_id: Scalars['String'];
};

/** select columns of table "tutors" */
export enum Tutors_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentActiveQuestions = 'current_active_questions',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Grades = 'grades',
  /** column name */
  OpenQuestions = 'open_questions',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SkillSet = 'skill_set',
  /** column name */
  Status = 'status',
  /** column name */
  TotalResolvedQuestions = 'total_resolved_questions',
  /** column name */
  TutorId = 'tutor_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "tutors" */
export type Tutors_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  current_active_questions?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grades?: Maybe<Scalars['_int2']>;
  open_questions?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  skill_set?: Maybe<Scalars['_text']>;
  status?: Maybe<Scalars['String']>;
  total_resolved_questions?: Maybe<Scalars['Int']>;
  tutor_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Tutors_Stddev_Fields = {
  current_active_questions?: Maybe<Scalars['Float']>;
  open_questions?: Maybe<Scalars['Float']>;
  total_resolved_questions?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tutors" */
export type Tutors_Stddev_Order_By = {
  current_active_questions?: Maybe<Order_By>;
  open_questions?: Maybe<Order_By>;
  total_resolved_questions?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Tutors_Stddev_Pop_Fields = {
  current_active_questions?: Maybe<Scalars['Float']>;
  open_questions?: Maybe<Scalars['Float']>;
  total_resolved_questions?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tutors" */
export type Tutors_Stddev_Pop_Order_By = {
  current_active_questions?: Maybe<Order_By>;
  open_questions?: Maybe<Order_By>;
  total_resolved_questions?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Tutors_Stddev_Samp_Fields = {
  current_active_questions?: Maybe<Scalars['Float']>;
  open_questions?: Maybe<Scalars['Float']>;
  total_resolved_questions?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tutors" */
export type Tutors_Stddev_Samp_Order_By = {
  current_active_questions?: Maybe<Order_By>;
  open_questions?: Maybe<Order_By>;
  total_resolved_questions?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Tutors_Sum_Fields = {
  current_active_questions?: Maybe<Scalars['smallint']>;
  open_questions?: Maybe<Scalars['smallint']>;
  total_resolved_questions?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "tutors" */
export type Tutors_Sum_Order_By = {
  current_active_questions?: Maybe<Order_By>;
  open_questions?: Maybe<Order_By>;
  total_resolved_questions?: Maybe<Order_By>;
};

/** update columns of table "tutors" */
export enum Tutors_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentActiveQuestions = 'current_active_questions',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Grades = 'grades',
  /** column name */
  OpenQuestions = 'open_questions',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SkillSet = 'skill_set',
  /** column name */
  Status = 'status',
  /** column name */
  TotalResolvedQuestions = 'total_resolved_questions',
  /** column name */
  TutorId = 'tutor_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Tutors_Var_Pop_Fields = {
  current_active_questions?: Maybe<Scalars['Float']>;
  open_questions?: Maybe<Scalars['Float']>;
  total_resolved_questions?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tutors" */
export type Tutors_Var_Pop_Order_By = {
  current_active_questions?: Maybe<Order_By>;
  open_questions?: Maybe<Order_By>;
  total_resolved_questions?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Tutors_Var_Samp_Fields = {
  current_active_questions?: Maybe<Scalars['Float']>;
  open_questions?: Maybe<Scalars['Float']>;
  total_resolved_questions?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tutors" */
export type Tutors_Var_Samp_Order_By = {
  current_active_questions?: Maybe<Order_By>;
  open_questions?: Maybe<Order_By>;
  total_resolved_questions?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Tutors_Variance_Fields = {
  current_active_questions?: Maybe<Scalars['Float']>;
  open_questions?: Maybe<Scalars['Float']>;
  total_resolved_questions?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tutors" */
export type Tutors_Variance_Order_By = {
  current_active_questions?: Maybe<Order_By>;
  open_questions?: Maybe<Order_By>;
  total_resolved_questions?: Maybe<Order_By>;
};

/** columns and relationships of "user_access_paths" */
export type User_Access_Paths = {
  access_path?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  location: Locations;
  location_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['String'];
};

/** aggregated selection of "user_access_paths" */
export type User_Access_Paths_Aggregate = {
  aggregate?: Maybe<User_Access_Paths_Aggregate_Fields>;
  nodes: Array<User_Access_Paths>;
};

/** aggregate fields of "user_access_paths" */
export type User_Access_Paths_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<User_Access_Paths_Max_Fields>;
  min?: Maybe<User_Access_Paths_Min_Fields>;
};


/** aggregate fields of "user_access_paths" */
export type User_Access_Paths_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<User_Access_Paths_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_access_paths" */
export type User_Access_Paths_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<User_Access_Paths_Max_Order_By>;
  min?: Maybe<User_Access_Paths_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_access_paths" */
export type User_Access_Paths_Arr_Rel_Insert_Input = {
  data: Array<User_Access_Paths_Insert_Input>;
  on_conflict?: Maybe<User_Access_Paths_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_access_paths". All fields are combined with a logical 'AND'. */
export type User_Access_Paths_Bool_Exp = {
  _and?: Maybe<Array<Maybe<User_Access_Paths_Bool_Exp>>>;
  _not?: Maybe<User_Access_Paths_Bool_Exp>;
  _or?: Maybe<Array<Maybe<User_Access_Paths_Bool_Exp>>>;
  access_path?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  location?: Maybe<Locations_Bool_Exp>;
  location_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
  user_id?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "user_access_paths" */
export enum User_Access_Paths_Constraint {
  /** unique or primary key constraint */
  UserAccessPathsPk = 'user_access_paths_pk'
}

/** input type for inserting data into table "user_access_paths" */
export type User_Access_Paths_Insert_Input = {
  access_path?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location?: Maybe<Locations_Obj_Rel_Insert_Input>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type User_Access_Paths_Max_Fields = {
  access_path?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "user_access_paths" */
export type User_Access_Paths_Max_Order_By = {
  access_path?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  location_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type User_Access_Paths_Min_Fields = {
  access_path?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "user_access_paths" */
export type User_Access_Paths_Min_Order_By = {
  access_path?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  location_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "user_access_paths" */
export type User_Access_Paths_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<User_Access_Paths>;
};

/** input type for inserting object relation for remote table "user_access_paths" */
export type User_Access_Paths_Obj_Rel_Insert_Input = {
  data: User_Access_Paths_Insert_Input;
  on_conflict?: Maybe<User_Access_Paths_On_Conflict>;
};

/** on conflict condition type for table "user_access_paths" */
export type User_Access_Paths_On_Conflict = {
  constraint: User_Access_Paths_Constraint;
  update_columns: Array<User_Access_Paths_Update_Column>;
  where?: Maybe<User_Access_Paths_Bool_Exp>;
};

/** ordering options when selecting data from "user_access_paths" */
export type User_Access_Paths_Order_By = {
  access_path?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  location?: Maybe<Locations_Order_By>;
  location_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: "user_access_paths" */
export type User_Access_Paths_Pk_Columns_Input = {
  location_id: Scalars['String'];
  user_id: Scalars['String'];
};

/** select columns of table "user_access_paths" */
export enum User_Access_Paths_Select_Column {
  /** column name */
  AccessPath = 'access_path',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "user_access_paths" */
export type User_Access_Paths_Set_Input = {
  access_path?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** update columns of table "user_access_paths" */
export enum User_Access_Paths_Update_Column {
  /** column name */
  AccessPath = 'access_path',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** columns and relationships of "user_notifications" */
export type User_Notifications = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  notification: Notifications;
  notification_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  status: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['String'];
  user_notification_id: Scalars['String'];
};

/** aggregated selection of "user_notifications" */
export type User_Notifications_Aggregate = {
  aggregate?: Maybe<User_Notifications_Aggregate_Fields>;
  nodes: Array<User_Notifications>;
};

/** aggregate fields of "user_notifications" */
export type User_Notifications_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<User_Notifications_Max_Fields>;
  min?: Maybe<User_Notifications_Min_Fields>;
};


/** aggregate fields of "user_notifications" */
export type User_Notifications_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<User_Notifications_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_notifications" */
export type User_Notifications_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<User_Notifications_Max_Order_By>;
  min?: Maybe<User_Notifications_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_notifications" */
export type User_Notifications_Arr_Rel_Insert_Input = {
  data: Array<User_Notifications_Insert_Input>;
  on_conflict?: Maybe<User_Notifications_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_notifications". All fields are combined with a logical 'AND'. */
export type User_Notifications_Bool_Exp = {
  _and?: Maybe<Array<Maybe<User_Notifications_Bool_Exp>>>;
  _not?: Maybe<User_Notifications_Bool_Exp>;
  _or?: Maybe<Array<Maybe<User_Notifications_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  notification?: Maybe<Notifications_Bool_Exp>;
  notification_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
  user_id?: Maybe<String_Comparison_Exp>;
  user_notification_id?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "user_notifications" */
export enum User_Notifications_Constraint {
  /** unique or primary key constraint */
  UserNotificationsPk = 'user_notifications_pk',
  /** unique or primary key constraint */
  UserNotificationsUn = 'user_notifications_un'
}

/** input type for inserting data into table "user_notifications" */
export type User_Notifications_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  notification?: Maybe<Notifications_Obj_Rel_Insert_Input>;
  notification_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['String']>;
  user_notification_id?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type User_Notifications_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  notification_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
  user_notification_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "user_notifications" */
export type User_Notifications_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  notification_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
  user_notification_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type User_Notifications_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  notification_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
  user_notification_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "user_notifications" */
export type User_Notifications_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  notification_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
  user_notification_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "user_notifications" */
export type User_Notifications_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<User_Notifications>;
};

/** input type for inserting object relation for remote table "user_notifications" */
export type User_Notifications_Obj_Rel_Insert_Input = {
  data: User_Notifications_Insert_Input;
  on_conflict?: Maybe<User_Notifications_On_Conflict>;
};

/** on conflict condition type for table "user_notifications" */
export type User_Notifications_On_Conflict = {
  constraint: User_Notifications_Constraint;
  update_columns: Array<User_Notifications_Update_Column>;
  where?: Maybe<User_Notifications_Bool_Exp>;
};

/** ordering options when selecting data from "user_notifications" */
export type User_Notifications_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  notification?: Maybe<Notifications_Order_By>;
  notification_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
  user_id?: Maybe<Order_By>;
  user_notification_id?: Maybe<Order_By>;
};

/** primary key columns input for table: "user_notifications" */
export type User_Notifications_Pk_Columns_Input = {
  user_notification_id: Scalars['String'];
};

/** select columns of table "user_notifications" */
export enum User_Notifications_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  NotificationId = 'notification_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id',
  /** column name */
  UserNotificationId = 'user_notification_id'
}

/** input type for updating data in table "user_notifications" */
export type User_Notifications_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  notification_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
  user_notification_id?: Maybe<Scalars['String']>;
};

/** update columns of table "user_notifications" */
export enum User_Notifications_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  NotificationId = 'notification_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id',
  /** column name */
  UserNotificationId = 'user_notification_id'
}

/** columns and relationships of "users" */
export type Users = {
  allow_notification?: Maybe<Scalars['Boolean']>;
  /** An array relationship */
  apple_users: Array<Apple_Users>;
  /** An aggregated array relationship */
  apple_users_aggregate: Apple_Users_Aggregate;
  avatar?: Maybe<Scalars['String']>;
  /** An array relationship */
  billing_histories: Array<Billing_Histories>;
  /** An aggregated array relationship */
  billing_histories_aggregate: Billing_Histories_Aggregate;
  birthday?: Maybe<Scalars['date']>;
  /** An array relationship */
  class_members: Array<Class_Members>;
  /** An aggregated array relationship */
  class_members_aggregate: Class_Members_Aggregate;
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  device_token?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  email_verified?: Maybe<Scalars['Boolean']>;
  facebook_id?: Maybe<Scalars['String']>;
  gender?: Maybe<Scalars['String']>;
  given_name?: Maybe<Scalars['String']>;
  /** An array relationship */
  info_notifications: Array<Info_Notifications>;
  /** An aggregated array relationship */
  info_notifications_aggregate: Info_Notifications_Aggregate;
  /** to distinguish our staff using app as a student or tester testing app as coach, tutor */
  is_tester?: Maybe<Scalars['Boolean']>;
  last_login_date?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  lesson_members: Array<Lesson_Members>;
  /** An aggregated array relationship */
  lesson_members_aggregate: Lesson_Members_Aggregate;
  name: Scalars['String'];
  /** An object relationship */
  parent?: Maybe<Parents>;
  phone_number?: Maybe<Scalars['String']>;
  phone_verified?: Maybe<Scalars['Boolean']>;
  platform?: Maybe<Scalars['String']>;
  /** An array relationship */
  promotions: Array<Promotions>;
  /** An aggregated array relationship */
  promotions_aggregate: Promotions_Aggregate;
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  school_admin?: Maybe<School_Admins>;
  /** An object relationship */
  student?: Maybe<Students>;
  /** An object relationship */
  student_parent?: Maybe<Student_Parents>;
  /** An object relationship */
  teacher_by_school_id?: Maybe<Teacher_By_School_Id>;
  /** An array relationship */
  teachers: Array<Teachers>;
  /** An aggregated array relationship */
  teachers_aggregate: Teachers_Aggregate;
  updated_at: Scalars['timestamptz'];
  /** An array relationship */
  user_access_paths: Array<User_Access_Paths>;
  /** An aggregated array relationship */
  user_access_paths_aggregate: User_Access_Paths_Aggregate;
  user_group: Scalars['String'];
  user_id: Scalars['String'];
  /** An array relationship */
  user_notifications: Array<User_Notifications>;
  /** An aggregated array relationship */
  user_notifications_aggregate: User_Notifications_Aggregate;
  /** An array relationship */
  users_groups: Array<Users_Groups>;
  /** An aggregated array relationship */
  users_groups_aggregate: Users_Groups_Aggregate;
  /** An array relationship */
  users_info_notifications: Array<Users_Info_Notifications>;
  /** An aggregated array relationship */
  users_info_notifications_aggregate: Users_Info_Notifications_Aggregate;
};


/** columns and relationships of "users" */
export type UsersApple_UsersArgs = {
  distinct_on?: Maybe<Array<Apple_Users_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Apple_Users_Order_By>>;
  where?: Maybe<Apple_Users_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersApple_Users_AggregateArgs = {
  distinct_on?: Maybe<Array<Apple_Users_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Apple_Users_Order_By>>;
  where?: Maybe<Apple_Users_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersBilling_HistoriesArgs = {
  distinct_on?: Maybe<Array<Billing_Histories_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Billing_Histories_Order_By>>;
  where?: Maybe<Billing_Histories_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersBilling_Histories_AggregateArgs = {
  distinct_on?: Maybe<Array<Billing_Histories_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Billing_Histories_Order_By>>;
  where?: Maybe<Billing_Histories_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersClass_MembersArgs = {
  distinct_on?: Maybe<Array<Class_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Members_Order_By>>;
  where?: Maybe<Class_Members_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersClass_Members_AggregateArgs = {
  distinct_on?: Maybe<Array<Class_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Class_Members_Order_By>>;
  where?: Maybe<Class_Members_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersInfo_NotificationsArgs = {
  distinct_on?: Maybe<Array<Info_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Info_Notifications_Order_By>>;
  where?: Maybe<Info_Notifications_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersInfo_Notifications_AggregateArgs = {
  distinct_on?: Maybe<Array<Info_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Info_Notifications_Order_By>>;
  where?: Maybe<Info_Notifications_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersLesson_MembersArgs = {
  distinct_on?: Maybe<Array<Lesson_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Members_Order_By>>;
  where?: Maybe<Lesson_Members_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersLesson_Members_AggregateArgs = {
  distinct_on?: Maybe<Array<Lesson_Members_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lesson_Members_Order_By>>;
  where?: Maybe<Lesson_Members_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersPromotionsArgs = {
  distinct_on?: Maybe<Array<Promotions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Promotions_Order_By>>;
  where?: Maybe<Promotions_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersPromotions_AggregateArgs = {
  distinct_on?: Maybe<Array<Promotions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Promotions_Order_By>>;
  where?: Maybe<Promotions_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersTeachersArgs = {
  distinct_on?: Maybe<Array<Teachers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Teachers_Order_By>>;
  where?: Maybe<Teachers_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersTeachers_AggregateArgs = {
  distinct_on?: Maybe<Array<Teachers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Teachers_Order_By>>;
  where?: Maybe<Teachers_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersUser_Access_PathsArgs = {
  distinct_on?: Maybe<Array<User_Access_Paths_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Access_Paths_Order_By>>;
  where?: Maybe<User_Access_Paths_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersUser_Access_Paths_AggregateArgs = {
  distinct_on?: Maybe<Array<User_Access_Paths_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Access_Paths_Order_By>>;
  where?: Maybe<User_Access_Paths_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersUser_NotificationsArgs = {
  distinct_on?: Maybe<Array<User_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Notifications_Order_By>>;
  where?: Maybe<User_Notifications_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersUser_Notifications_AggregateArgs = {
  distinct_on?: Maybe<Array<User_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Notifications_Order_By>>;
  where?: Maybe<User_Notifications_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersUsers_GroupsArgs = {
  distinct_on?: Maybe<Array<Users_Groups_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Groups_Order_By>>;
  where?: Maybe<Users_Groups_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersUsers_Groups_AggregateArgs = {
  distinct_on?: Maybe<Array<Users_Groups_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Groups_Order_By>>;
  where?: Maybe<Users_Groups_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersUsers_Info_NotificationsArgs = {
  distinct_on?: Maybe<Array<Users_Info_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Info_Notifications_Order_By>>;
  where?: Maybe<Users_Info_Notifications_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersUsers_Info_Notifications_AggregateArgs = {
  distinct_on?: Maybe<Array<Users_Info_Notifications_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Users_Info_Notifications_Order_By>>;
  where?: Maybe<Users_Info_Notifications_Bool_Exp>;
};

/** aggregated selection of "users" */
export type Users_Aggregate = {
  aggregate?: Maybe<Users_Aggregate_Fields>;
  nodes: Array<Users>;
};

/** aggregate fields of "users" */
export type Users_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Users_Max_Fields>;
  min?: Maybe<Users_Min_Fields>;
};


/** aggregate fields of "users" */
export type Users_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Users_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "users" */
export type Users_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Users_Max_Order_By>;
  min?: Maybe<Users_Min_Order_By>;
};

/** input type for inserting array relation for remote table "users" */
export type Users_Arr_Rel_Insert_Input = {
  data: Array<Users_Insert_Input>;
  on_conflict?: Maybe<Users_On_Conflict>;
};

/** Boolean expression to filter rows from the table "users". All fields are combined with a logical 'AND'. */
export type Users_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Users_Bool_Exp>>>;
  _not?: Maybe<Users_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Users_Bool_Exp>>>;
  allow_notification?: Maybe<Boolean_Comparison_Exp>;
  apple_users?: Maybe<Apple_Users_Bool_Exp>;
  avatar?: Maybe<String_Comparison_Exp>;
  billing_histories?: Maybe<Billing_Histories_Bool_Exp>;
  birthday?: Maybe<Date_Comparison_Exp>;
  class_members?: Maybe<Class_Members_Bool_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  device_token?: Maybe<String_Comparison_Exp>;
  email?: Maybe<String_Comparison_Exp>;
  email_verified?: Maybe<Boolean_Comparison_Exp>;
  facebook_id?: Maybe<String_Comparison_Exp>;
  gender?: Maybe<String_Comparison_Exp>;
  given_name?: Maybe<String_Comparison_Exp>;
  info_notifications?: Maybe<Info_Notifications_Bool_Exp>;
  is_tester?: Maybe<Boolean_Comparison_Exp>;
  last_login_date?: Maybe<Timestamptz_Comparison_Exp>;
  lesson_members?: Maybe<Lesson_Members_Bool_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  parent?: Maybe<Parents_Bool_Exp>;
  phone_number?: Maybe<String_Comparison_Exp>;
  phone_verified?: Maybe<Boolean_Comparison_Exp>;
  platform?: Maybe<String_Comparison_Exp>;
  promotions?: Maybe<Promotions_Bool_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  school_admin?: Maybe<School_Admins_Bool_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_parent?: Maybe<Student_Parents_Bool_Exp>;
  teacher_by_school_id?: Maybe<Teacher_By_School_Id_Bool_Exp>;
  teachers?: Maybe<Teachers_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user_access_paths?: Maybe<User_Access_Paths_Bool_Exp>;
  user_group?: Maybe<String_Comparison_Exp>;
  user_id?: Maybe<String_Comparison_Exp>;
  user_notifications?: Maybe<User_Notifications_Bool_Exp>;
  users_groups?: Maybe<Users_Groups_Bool_Exp>;
  users_info_notifications?: Maybe<Users_Info_Notifications_Bool_Exp>;
};

/** unique or primary key constraints on table "users" */
export enum Users_Constraint {
  /** unique or primary key constraint */
  UsersEmailUn = 'users_email_un',
  /** unique or primary key constraint */
  UsersFbIdUn = 'users_fb_id_un',
  /** unique or primary key constraint */
  UsersPhoneUn = 'users_phone_un',
  /** unique or primary key constraint */
  UsersPk = 'users_pk'
}

/** columns and relationships of "users_groups" */
export type Users_Groups = {
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  group: Groups;
  group_id: Scalars['String'];
  is_origin: Scalars['Boolean'];
  resource_path?: Maybe<Scalars['String']>;
  status: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['String'];
};

/** aggregated selection of "users_groups" */
export type Users_Groups_Aggregate = {
  aggregate?: Maybe<Users_Groups_Aggregate_Fields>;
  nodes: Array<Users_Groups>;
};

/** aggregate fields of "users_groups" */
export type Users_Groups_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Users_Groups_Max_Fields>;
  min?: Maybe<Users_Groups_Min_Fields>;
};


/** aggregate fields of "users_groups" */
export type Users_Groups_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Users_Groups_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "users_groups" */
export type Users_Groups_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Users_Groups_Max_Order_By>;
  min?: Maybe<Users_Groups_Min_Order_By>;
};

/** input type for inserting array relation for remote table "users_groups" */
export type Users_Groups_Arr_Rel_Insert_Input = {
  data: Array<Users_Groups_Insert_Input>;
  on_conflict?: Maybe<Users_Groups_On_Conflict>;
};

/** Boolean expression to filter rows from the table "users_groups". All fields are combined with a logical 'AND'. */
export type Users_Groups_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Users_Groups_Bool_Exp>>>;
  _not?: Maybe<Users_Groups_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Users_Groups_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  group?: Maybe<Groups_Bool_Exp>;
  group_id?: Maybe<String_Comparison_Exp>;
  is_origin?: Maybe<Boolean_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
  user_id?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "users_groups" */
export enum Users_Groups_Constraint {
  /** unique or primary key constraint */
  PkUsersGroups = 'pk__users_groups'
}

/** input type for inserting data into table "users_groups" */
export type Users_Groups_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  group?: Maybe<Groups_Obj_Rel_Insert_Input>;
  group_id?: Maybe<Scalars['String']>;
  is_origin?: Maybe<Scalars['Boolean']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Users_Groups_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "users_groups" */
export type Users_Groups_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  group_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Users_Groups_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "users_groups" */
export type Users_Groups_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  group_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "users_groups" */
export type Users_Groups_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Users_Groups>;
};

/** input type for inserting object relation for remote table "users_groups" */
export type Users_Groups_Obj_Rel_Insert_Input = {
  data: Users_Groups_Insert_Input;
  on_conflict?: Maybe<Users_Groups_On_Conflict>;
};

/** on conflict condition type for table "users_groups" */
export type Users_Groups_On_Conflict = {
  constraint: Users_Groups_Constraint;
  update_columns: Array<Users_Groups_Update_Column>;
  where?: Maybe<Users_Groups_Bool_Exp>;
};

/** ordering options when selecting data from "users_groups" */
export type Users_Groups_Order_By = {
  created_at?: Maybe<Order_By>;
  group?: Maybe<Groups_Order_By>;
  group_id?: Maybe<Order_By>;
  is_origin?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: "users_groups" */
export type Users_Groups_Pk_Columns_Input = {
  group_id: Scalars['String'];
  user_id: Scalars['String'];
};

/** select columns of table "users_groups" */
export enum Users_Groups_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  GroupId = 'group_id',
  /** column name */
  IsOrigin = 'is_origin',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "users_groups" */
export type Users_Groups_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['String']>;
  is_origin?: Maybe<Scalars['Boolean']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** update columns of table "users_groups" */
export enum Users_Groups_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  GroupId = 'group_id',
  /** column name */
  IsOrigin = 'is_origin',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** columns and relationships of "users_info_notifications" */
export type Users_Info_Notifications = {
  course_ids?: Maybe<Scalars['_text']>;
  created_at: Scalars['timestamptz'];
  current_grade?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  info_notification: Info_Notifications;
  is_individual?: Maybe<Scalars['Boolean']>;
  notification_id: Scalars['String'];
  parent_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status: Scalars['String'];
  /** An object relationship */
  student?: Maybe<Students>;
  student_id?: Maybe<Scalars['String']>;
  /** An object relationship */
  student_parent?: Maybe<Student_Parents>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: Users;
  user_group?: Maybe<Scalars['String']>;
  user_id: Scalars['String'];
  user_notification_id: Scalars['String'];
};

/** aggregated selection of "users_info_notifications" */
export type Users_Info_Notifications_Aggregate = {
  aggregate?: Maybe<Users_Info_Notifications_Aggregate_Fields>;
  nodes: Array<Users_Info_Notifications>;
};

/** aggregate fields of "users_info_notifications" */
export type Users_Info_Notifications_Aggregate_Fields = {
  avg?: Maybe<Users_Info_Notifications_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Users_Info_Notifications_Max_Fields>;
  min?: Maybe<Users_Info_Notifications_Min_Fields>;
  stddev?: Maybe<Users_Info_Notifications_Stddev_Fields>;
  stddev_pop?: Maybe<Users_Info_Notifications_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Users_Info_Notifications_Stddev_Samp_Fields>;
  sum?: Maybe<Users_Info_Notifications_Sum_Fields>;
  var_pop?: Maybe<Users_Info_Notifications_Var_Pop_Fields>;
  var_samp?: Maybe<Users_Info_Notifications_Var_Samp_Fields>;
  variance?: Maybe<Users_Info_Notifications_Variance_Fields>;
};


/** aggregate fields of "users_info_notifications" */
export type Users_Info_Notifications_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Users_Info_Notifications_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "users_info_notifications" */
export type Users_Info_Notifications_Aggregate_Order_By = {
  avg?: Maybe<Users_Info_Notifications_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Users_Info_Notifications_Max_Order_By>;
  min?: Maybe<Users_Info_Notifications_Min_Order_By>;
  stddev?: Maybe<Users_Info_Notifications_Stddev_Order_By>;
  stddev_pop?: Maybe<Users_Info_Notifications_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Users_Info_Notifications_Stddev_Samp_Order_By>;
  sum?: Maybe<Users_Info_Notifications_Sum_Order_By>;
  var_pop?: Maybe<Users_Info_Notifications_Var_Pop_Order_By>;
  var_samp?: Maybe<Users_Info_Notifications_Var_Samp_Order_By>;
  variance?: Maybe<Users_Info_Notifications_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "users_info_notifications" */
export type Users_Info_Notifications_Arr_Rel_Insert_Input = {
  data: Array<Users_Info_Notifications_Insert_Input>;
  on_conflict?: Maybe<Users_Info_Notifications_On_Conflict>;
};

/** aggregate avg on columns */
export type Users_Info_Notifications_Avg_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Avg_Order_By = {
  current_grade?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "users_info_notifications". All fields are combined with a logical 'AND'. */
export type Users_Info_Notifications_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Users_Info_Notifications_Bool_Exp>>>;
  _not?: Maybe<Users_Info_Notifications_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Users_Info_Notifications_Bool_Exp>>>;
  course_ids?: Maybe<_Text_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  current_grade?: Maybe<Smallint_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  info_notification?: Maybe<Info_Notifications_Bool_Exp>;
  is_individual?: Maybe<Boolean_Comparison_Exp>;
  notification_id?: Maybe<String_Comparison_Exp>;
  parent_id?: Maybe<String_Comparison_Exp>;
  resource_path?: Maybe<String_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  student?: Maybe<Students_Bool_Exp>;
  student_id?: Maybe<String_Comparison_Exp>;
  student_parent?: Maybe<Student_Parents_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
  user_group?: Maybe<String_Comparison_Exp>;
  user_id?: Maybe<String_Comparison_Exp>;
  user_notification_id?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "users_info_notifications" */
export enum Users_Info_Notifications_Constraint {
  /** unique or primary key constraint */
  PkUsersInfoNotifications = 'pk__users_info_notifications',
  /** unique or primary key constraint */
  UniqueUserIdNotificationId = 'unique__user_id__notification_id'
}

/** input type for incrementing integer column in table "users_info_notifications" */
export type Users_Info_Notifications_Inc_Input = {
  current_grade?: Maybe<Scalars['smallint']>;
};

/** input type for inserting data into table "users_info_notifications" */
export type Users_Info_Notifications_Insert_Input = {
  course_ids?: Maybe<Scalars['_text']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_grade?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  info_notification?: Maybe<Info_Notifications_Obj_Rel_Insert_Input>;
  is_individual?: Maybe<Scalars['Boolean']>;
  notification_id?: Maybe<Scalars['String']>;
  parent_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_id?: Maybe<Scalars['String']>;
  student_parent?: Maybe<Student_Parents_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
  user_group?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
  user_notification_id?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Users_Info_Notifications_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  current_grade?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  notification_id?: Maybe<Scalars['String']>;
  parent_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
  user_notification_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  current_grade?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  notification_id?: Maybe<Order_By>;
  parent_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_group?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
  user_notification_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Users_Info_Notifications_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  current_grade?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  notification_id?: Maybe<Scalars['String']>;
  parent_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
  user_notification_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  current_grade?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  notification_id?: Maybe<Order_By>;
  parent_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_group?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
  user_notification_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "users_info_notifications" */
export type Users_Info_Notifications_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Users_Info_Notifications>;
};

/** input type for inserting object relation for remote table "users_info_notifications" */
export type Users_Info_Notifications_Obj_Rel_Insert_Input = {
  data: Users_Info_Notifications_Insert_Input;
  on_conflict?: Maybe<Users_Info_Notifications_On_Conflict>;
};

/** on conflict condition type for table "users_info_notifications" */
export type Users_Info_Notifications_On_Conflict = {
  constraint: Users_Info_Notifications_Constraint;
  update_columns: Array<Users_Info_Notifications_Update_Column>;
  where?: Maybe<Users_Info_Notifications_Bool_Exp>;
};

/** ordering options when selecting data from "users_info_notifications" */
export type Users_Info_Notifications_Order_By = {
  course_ids?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  current_grade?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  info_notification?: Maybe<Info_Notifications_Order_By>;
  is_individual?: Maybe<Order_By>;
  notification_id?: Maybe<Order_By>;
  parent_id?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  student?: Maybe<Students_Order_By>;
  student_id?: Maybe<Order_By>;
  student_parent?: Maybe<Student_Parents_Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
  user_group?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
  user_notification_id?: Maybe<Order_By>;
};

/** primary key columns input for table: "users_info_notifications" */
export type Users_Info_Notifications_Pk_Columns_Input = {
  user_notification_id: Scalars['String'];
};

/** select columns of table "users_info_notifications" */
export enum Users_Info_Notifications_Select_Column {
  /** column name */
  CourseIds = 'course_ids',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentGrade = 'current_grade',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsIndividual = 'is_individual',
  /** column name */
  NotificationId = 'notification_id',
  /** column name */
  ParentId = 'parent_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserGroup = 'user_group',
  /** column name */
  UserId = 'user_id',
  /** column name */
  UserNotificationId = 'user_notification_id'
}

/** input type for updating data in table "users_info_notifications" */
export type Users_Info_Notifications_Set_Input = {
  course_ids?: Maybe<Scalars['_text']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_grade?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_individual?: Maybe<Scalars['Boolean']>;
  notification_id?: Maybe<Scalars['String']>;
  parent_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
  user_notification_id?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Users_Info_Notifications_Stddev_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Stddev_Order_By = {
  current_grade?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Users_Info_Notifications_Stddev_Pop_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Stddev_Pop_Order_By = {
  current_grade?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Users_Info_Notifications_Stddev_Samp_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Stddev_Samp_Order_By = {
  current_grade?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Users_Info_Notifications_Sum_Fields = {
  current_grade?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Sum_Order_By = {
  current_grade?: Maybe<Order_By>;
};

/** update columns of table "users_info_notifications" */
export enum Users_Info_Notifications_Update_Column {
  /** column name */
  CourseIds = 'course_ids',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentGrade = 'current_grade',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsIndividual = 'is_individual',
  /** column name */
  NotificationId = 'notification_id',
  /** column name */
  ParentId = 'parent_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserGroup = 'user_group',
  /** column name */
  UserId = 'user_id',
  /** column name */
  UserNotificationId = 'user_notification_id'
}

/** aggregate var_pop on columns */
export type Users_Info_Notifications_Var_Pop_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Var_Pop_Order_By = {
  current_grade?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Users_Info_Notifications_Var_Samp_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Var_Samp_Order_By = {
  current_grade?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Users_Info_Notifications_Variance_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Variance_Order_By = {
  current_grade?: Maybe<Order_By>;
};

/** input type for inserting data into table "users" */
export type Users_Insert_Input = {
  allow_notification?: Maybe<Scalars['Boolean']>;
  apple_users?: Maybe<Apple_Users_Arr_Rel_Insert_Input>;
  avatar?: Maybe<Scalars['String']>;
  billing_histories?: Maybe<Billing_Histories_Arr_Rel_Insert_Input>;
  birthday?: Maybe<Scalars['date']>;
  class_members?: Maybe<Class_Members_Arr_Rel_Insert_Input>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  device_token?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  email_verified?: Maybe<Scalars['Boolean']>;
  facebook_id?: Maybe<Scalars['String']>;
  gender?: Maybe<Scalars['String']>;
  given_name?: Maybe<Scalars['String']>;
  info_notifications?: Maybe<Info_Notifications_Arr_Rel_Insert_Input>;
  is_tester?: Maybe<Scalars['Boolean']>;
  last_login_date?: Maybe<Scalars['timestamptz']>;
  lesson_members?: Maybe<Lesson_Members_Arr_Rel_Insert_Input>;
  name?: Maybe<Scalars['String']>;
  parent?: Maybe<Parents_Obj_Rel_Insert_Input>;
  phone_number?: Maybe<Scalars['String']>;
  phone_verified?: Maybe<Scalars['Boolean']>;
  platform?: Maybe<Scalars['String']>;
  promotions?: Maybe<Promotions_Arr_Rel_Insert_Input>;
  resource_path?: Maybe<Scalars['String']>;
  school_admin?: Maybe<School_Admins_Obj_Rel_Insert_Input>;
  student?: Maybe<Students_Obj_Rel_Insert_Input>;
  student_parent?: Maybe<Student_Parents_Obj_Rel_Insert_Input>;
  teachers?: Maybe<Teachers_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_access_paths?: Maybe<User_Access_Paths_Arr_Rel_Insert_Input>;
  user_group?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
  user_notifications?: Maybe<User_Notifications_Arr_Rel_Insert_Input>;
  users_groups?: Maybe<Users_Groups_Arr_Rel_Insert_Input>;
  users_info_notifications?: Maybe<Users_Info_Notifications_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Users_Max_Fields = {
  avatar?: Maybe<Scalars['String']>;
  birthday?: Maybe<Scalars['date']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  device_token?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  facebook_id?: Maybe<Scalars['String']>;
  gender?: Maybe<Scalars['String']>;
  given_name?: Maybe<Scalars['String']>;
  last_login_date?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  platform?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "users" */
export type Users_Max_Order_By = {
  avatar?: Maybe<Order_By>;
  birthday?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  device_token?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  facebook_id?: Maybe<Order_By>;
  gender?: Maybe<Order_By>;
  given_name?: Maybe<Order_By>;
  last_login_date?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  phone_number?: Maybe<Order_By>;
  platform?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_group?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Users_Min_Fields = {
  avatar?: Maybe<Scalars['String']>;
  birthday?: Maybe<Scalars['date']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  device_token?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  facebook_id?: Maybe<Scalars['String']>;
  gender?: Maybe<Scalars['String']>;
  given_name?: Maybe<Scalars['String']>;
  last_login_date?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  platform?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "users" */
export type Users_Min_Order_By = {
  avatar?: Maybe<Order_By>;
  birthday?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  device_token?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  facebook_id?: Maybe<Order_By>;
  gender?: Maybe<Order_By>;
  given_name?: Maybe<Order_By>;
  last_login_date?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  phone_number?: Maybe<Order_By>;
  platform?: Maybe<Order_By>;
  resource_path?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_group?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "users" */
export type Users_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Users>;
};

/** input type for inserting object relation for remote table "users" */
export type Users_Obj_Rel_Insert_Input = {
  data: Users_Insert_Input;
  on_conflict?: Maybe<Users_On_Conflict>;
};

/** on conflict condition type for table "users" */
export type Users_On_Conflict = {
  constraint: Users_Constraint;
  update_columns: Array<Users_Update_Column>;
  where?: Maybe<Users_Bool_Exp>;
};

/** ordering options when selecting data from "users" */
export type Users_Order_By = {
  allow_notification?: Maybe<Order_By>;
  apple_users_aggregate?: Maybe<Apple_Users_Aggregate_Order_By>;
  avatar?: Maybe<Order_By>;
  billing_histories_aggregate?: Maybe<Billing_Histories_Aggregate_Order_By>;
  birthday?: Maybe<Order_By>;
  class_members_aggregate?: Maybe<Class_Members_Aggregate_Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  device_token?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  email_verified?: Maybe<Order_By>;
  facebook_id?: Maybe<Order_By>;
  gender?: Maybe<Order_By>;
  given_name?: Maybe<Order_By>;
  info_notifications_aggregate?: Maybe<Info_Notifications_Aggregate_Order_By>;
  is_tester?: Maybe<Order_By>;
  last_login_date?: Maybe<Order_By>;
  lesson_members_aggregate?: Maybe<Lesson_Members_Aggregate_Order_By>;
  name?: Maybe<Order_By>;
  parent?: Maybe<Parents_Order_By>;
  phone_number?: Maybe<Order_By>;
  phone_verified?: Maybe<Order_By>;
  platform?: Maybe<Order_By>;
  promotions_aggregate?: Maybe<Promotions_Aggregate_Order_By>;
  resource_path?: Maybe<Order_By>;
  school_admin?: Maybe<School_Admins_Order_By>;
  student?: Maybe<Students_Order_By>;
  student_parent?: Maybe<Student_Parents_Order_By>;
  teacher_by_school_id?: Maybe<Teacher_By_School_Id_Order_By>;
  teachers_aggregate?: Maybe<Teachers_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
  user_access_paths_aggregate?: Maybe<User_Access_Paths_Aggregate_Order_By>;
  user_group?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
  user_notifications_aggregate?: Maybe<User_Notifications_Aggregate_Order_By>;
  users_groups_aggregate?: Maybe<Users_Groups_Aggregate_Order_By>;
  users_info_notifications_aggregate?: Maybe<Users_Info_Notifications_Aggregate_Order_By>;
};

/** primary key columns input for table: "users" */
export type Users_Pk_Columns_Input = {
  user_id: Scalars['String'];
};

/** select columns of table "users" */
export enum Users_Select_Column {
  /** column name */
  AllowNotification = 'allow_notification',
  /** column name */
  Avatar = 'avatar',
  /** column name */
  Birthday = 'birthday',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DeviceToken = 'device_token',
  /** column name */
  Email = 'email',
  /** column name */
  EmailVerified = 'email_verified',
  /** column name */
  FacebookId = 'facebook_id',
  /** column name */
  Gender = 'gender',
  /** column name */
  GivenName = 'given_name',
  /** column name */
  IsTester = 'is_tester',
  /** column name */
  LastLoginDate = 'last_login_date',
  /** column name */
  Name = 'name',
  /** column name */
  PhoneNumber = 'phone_number',
  /** column name */
  PhoneVerified = 'phone_verified',
  /** column name */
  Platform = 'platform',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserGroup = 'user_group',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "users" */
export type Users_Set_Input = {
  allow_notification?: Maybe<Scalars['Boolean']>;
  avatar?: Maybe<Scalars['String']>;
  birthday?: Maybe<Scalars['date']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  device_token?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  email_verified?: Maybe<Scalars['Boolean']>;
  facebook_id?: Maybe<Scalars['String']>;
  gender?: Maybe<Scalars['String']>;
  given_name?: Maybe<Scalars['String']>;
  is_tester?: Maybe<Scalars['Boolean']>;
  last_login_date?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  phone_verified?: Maybe<Scalars['Boolean']>;
  platform?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

/** update columns of table "users" */
export enum Users_Update_Column {
  /** column name */
  AllowNotification = 'allow_notification',
  /** column name */
  Avatar = 'avatar',
  /** column name */
  Birthday = 'birthday',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DeviceToken = 'device_token',
  /** column name */
  Email = 'email',
  /** column name */
  EmailVerified = 'email_verified',
  /** column name */
  FacebookId = 'facebook_id',
  /** column name */
  Gender = 'gender',
  /** column name */
  GivenName = 'given_name',
  /** column name */
  IsTester = 'is_tester',
  /** column name */
  LastLoginDate = 'last_login_date',
  /** column name */
  Name = 'name',
  /** column name */
  PhoneNumber = 'phone_number',
  /** column name */
  PhoneVerified = 'phone_verified',
  /** column name */
  Platform = 'platform',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserGroup = 'user_group',
  /** column name */
  UserId = 'user_id'
}
