schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""
expression to compare columns of type Boolean. All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

"""
expression to compare columns of type Int. All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""
expression to compare columns of type String. All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String
  _ilike: String
  _in: [String!]
  _is_null: Boolean
  _like: String
  _lt: String
  _lte: String
  _neq: String
  _nilike: String
  _nin: [String!]
  _nlike: String
  _nsimilar: String
  _similar: String
}

scalar _int4

"""
expression to compare columns of type _int4. All fields are combined with logical 'AND'.
"""
input _int4_comparison_exp {
  _eq: _int4
  _gt: _int4
  _gte: _int4
  _in: [_int4!]
  _is_null: Boolean
  _lt: _int4
  _lte: _int4
  _neq: _int4
  _nin: [_int4!]
}

scalar _text

"""
expression to compare columns of type _text. All fields are combined with logical 'AND'.
"""
input _text_comparison_exp {
  _eq: _text
  _gt: _text
  _gte: _text
  _in: [_text!]
  _is_null: Boolean
  _lt: _text
  _lte: _text
  _neq: _text
  _nin: [_text!]
}

"""
columns and relationships of "assignments"
"""
type assignments {
  assigned_by: String!
  assignment_id: String!
  assignment_type: String
  class_id: Int
  created_at: timestamptz!
  deleted_at: timestamptz
  end_date: timestamptz!
  preset_study_plan_id: String
  preset_study_plan_weekly_id: String
  resource_path: String
  start_date: timestamptz!

  """An object relationship"""
  topic: topics!
  topic_id: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "assignments"
"""
type assignments_aggregate {
  aggregate: assignments_aggregate_fields
  nodes: [assignments!]!
}

"""
aggregate fields of "assignments"
"""
type assignments_aggregate_fields {
  avg: assignments_avg_fields
  count(columns: [assignments_select_column!], distinct: Boolean): Int
  max: assignments_max_fields
  min: assignments_min_fields
  stddev: assignments_stddev_fields
  stddev_pop: assignments_stddev_pop_fields
  stddev_samp: assignments_stddev_samp_fields
  sum: assignments_sum_fields
  var_pop: assignments_var_pop_fields
  var_samp: assignments_var_samp_fields
  variance: assignments_variance_fields
}

"""
order by aggregate values of table "assignments"
"""
input assignments_aggregate_order_by {
  avg: assignments_avg_order_by
  count: order_by
  max: assignments_max_order_by
  min: assignments_min_order_by
  stddev: assignments_stddev_order_by
  stddev_pop: assignments_stddev_pop_order_by
  stddev_samp: assignments_stddev_samp_order_by
  sum: assignments_sum_order_by
  var_pop: assignments_var_pop_order_by
  var_samp: assignments_var_samp_order_by
  variance: assignments_variance_order_by
}

"""
input type for inserting array relation for remote table "assignments"
"""
input assignments_arr_rel_insert_input {
  data: [assignments_insert_input!]!
  on_conflict: assignments_on_conflict
}

"""aggregate avg on columns"""
type assignments_avg_fields {
  class_id: Float
}

"""
order by avg() on columns of table "assignments"
"""
input assignments_avg_order_by {
  class_id: order_by
}

"""
Boolean expression to filter rows from the table "assignments". All fields are combined with a logical 'AND'.
"""
input assignments_bool_exp {
  _and: [assignments_bool_exp]
  _not: assignments_bool_exp
  _or: [assignments_bool_exp]
  assigned_by: String_comparison_exp
  assignment_id: String_comparison_exp
  assignment_type: String_comparison_exp
  class_id: Int_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  end_date: timestamptz_comparison_exp
  preset_study_plan_id: String_comparison_exp
  preset_study_plan_weekly_id: String_comparison_exp
  resource_path: String_comparison_exp
  start_date: timestamptz_comparison_exp
  topic: topics_bool_exp
  topic_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "assignments"
"""
enum assignments_constraint {
  """unique or primary key constraint"""
  assignments_pk
}

"""
input type for incrementing integer column in table "assignments"
"""
input assignments_inc_input {
  class_id: Int
}

"""
input type for inserting data into table "assignments"
"""
input assignments_insert_input {
  assigned_by: String
  assignment_id: String
  assignment_type: String
  class_id: Int
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  preset_study_plan_id: String
  preset_study_plan_weekly_id: String
  resource_path: String
  start_date: timestamptz
  topic: topics_obj_rel_insert_input
  topic_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type assignments_max_fields {
  assigned_by: String
  assignment_id: String
  assignment_type: String
  class_id: Int
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  preset_study_plan_id: String
  preset_study_plan_weekly_id: String
  resource_path: String
  start_date: timestamptz
  topic_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "assignments"
"""
input assignments_max_order_by {
  assigned_by: order_by
  assignment_id: order_by
  assignment_type: order_by
  class_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_date: order_by
  preset_study_plan_id: order_by
  preset_study_plan_weekly_id: order_by
  resource_path: order_by
  start_date: order_by
  topic_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type assignments_min_fields {
  assigned_by: String
  assignment_id: String
  assignment_type: String
  class_id: Int
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  preset_study_plan_id: String
  preset_study_plan_weekly_id: String
  resource_path: String
  start_date: timestamptz
  topic_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "assignments"
"""
input assignments_min_order_by {
  assigned_by: order_by
  assignment_id: order_by
  assignment_type: order_by
  class_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_date: order_by
  preset_study_plan_id: order_by
  preset_study_plan_weekly_id: order_by
  resource_path: order_by
  start_date: order_by
  topic_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "assignments"
"""
type assignments_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [assignments!]!
}

"""
input type for inserting object relation for remote table "assignments"
"""
input assignments_obj_rel_insert_input {
  data: assignments_insert_input!
  on_conflict: assignments_on_conflict
}

"""
on conflict condition type for table "assignments"
"""
input assignments_on_conflict {
  constraint: assignments_constraint!
  update_columns: [assignments_update_column!]!
  where: assignments_bool_exp
}

"""
ordering options when selecting data from "assignments"
"""
input assignments_order_by {
  assigned_by: order_by
  assignment_id: order_by
  assignment_type: order_by
  class_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_date: order_by
  preset_study_plan_id: order_by
  preset_study_plan_weekly_id: order_by
  resource_path: order_by
  start_date: order_by
  topic: topics_order_by
  topic_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "assignments"
"""
input assignments_pk_columns_input {
  assignment_id: String!
}

"""
select columns of table "assignments"
"""
enum assignments_select_column {
  """column name"""
  assigned_by

  """column name"""
  assignment_id

  """column name"""
  assignment_type

  """column name"""
  class_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_date

  """column name"""
  preset_study_plan_id

  """column name"""
  preset_study_plan_weekly_id

  """column name"""
  resource_path

  """column name"""
  start_date

  """column name"""
  topic_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "assignments"
"""
input assignments_set_input {
  assigned_by: String
  assignment_id: String
  assignment_type: String
  class_id: Int
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  preset_study_plan_id: String
  preset_study_plan_weekly_id: String
  resource_path: String
  start_date: timestamptz
  topic_id: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type assignments_stddev_fields {
  class_id: Float
}

"""
order by stddev() on columns of table "assignments"
"""
input assignments_stddev_order_by {
  class_id: order_by
}

"""aggregate stddev_pop on columns"""
type assignments_stddev_pop_fields {
  class_id: Float
}

"""
order by stddev_pop() on columns of table "assignments"
"""
input assignments_stddev_pop_order_by {
  class_id: order_by
}

"""aggregate stddev_samp on columns"""
type assignments_stddev_samp_fields {
  class_id: Float
}

"""
order by stddev_samp() on columns of table "assignments"
"""
input assignments_stddev_samp_order_by {
  class_id: order_by
}

"""aggregate sum on columns"""
type assignments_sum_fields {
  class_id: Int
}

"""
order by sum() on columns of table "assignments"
"""
input assignments_sum_order_by {
  class_id: order_by
}

"""
update columns of table "assignments"
"""
enum assignments_update_column {
  """column name"""
  assigned_by

  """column name"""
  assignment_id

  """column name"""
  assignment_type

  """column name"""
  class_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_date

  """column name"""
  preset_study_plan_id

  """column name"""
  preset_study_plan_weekly_id

  """column name"""
  resource_path

  """column name"""
  start_date

  """column name"""
  topic_id

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type assignments_var_pop_fields {
  class_id: Float
}

"""
order by var_pop() on columns of table "assignments"
"""
input assignments_var_pop_order_by {
  class_id: order_by
}

"""aggregate var_samp on columns"""
type assignments_var_samp_fields {
  class_id: Float
}

"""
order by var_samp() on columns of table "assignments"
"""
input assignments_var_samp_order_by {
  class_id: order_by
}

"""aggregate variance on columns"""
type assignments_variance_fields {
  class_id: Float
}

"""
order by variance() on columns of table "assignments"
"""
input assignments_variance_order_by {
  class_id: order_by
}

"""
columns and relationships of "books"
"""
type books {
  """An array relationship"""
  book_chapters(
    """distinct select on columns"""
    distinct_on: [books_chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_chapters_order_by!]

    """filter the rows returned"""
    where: books_chapters_bool_exp
  ): [books_chapters!]!

  """An aggregated array relationship"""
  book_chapters_aggregate(
    """distinct select on columns"""
    distinct_on: [books_chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_chapters_order_by!]

    """filter the rows returned"""
    where: books_chapters_bool_exp
  ): books_chapters_aggregate!
  book_id: String!
  copied_from: String
  country: String

  """An array relationship"""
  course_books(
    """distinct select on columns"""
    distinct_on: [courses_books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_books_order_by!]

    """filter the rows returned"""
    where: courses_books_bool_exp
  ): [courses_books!]!

  """An aggregated array relationship"""
  course_books_aggregate(
    """distinct select on columns"""
    distinct_on: [courses_books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_books_order_by!]

    """filter the rows returned"""
    where: courses_books_bool_exp
  ): courses_books_aggregate!
  created_at: timestamptz!
  current_chapter_display_order: Int!
  deleted_at: timestamptz
  grade: smallint
  name: String!
  resource_path: String!

  """An object relationship"""
  school: schools!
  school_id: Int!
  subject: String
  updated_at: timestamptz!
}

"""
aggregated selection of "books"
"""
type books_aggregate {
  aggregate: books_aggregate_fields
  nodes: [books!]!
}

"""
aggregate fields of "books"
"""
type books_aggregate_fields {
  avg: books_avg_fields
  count(columns: [books_select_column!], distinct: Boolean): Int
  max: books_max_fields
  min: books_min_fields
  stddev: books_stddev_fields
  stddev_pop: books_stddev_pop_fields
  stddev_samp: books_stddev_samp_fields
  sum: books_sum_fields
  var_pop: books_var_pop_fields
  var_samp: books_var_samp_fields
  variance: books_variance_fields
}

"""
order by aggregate values of table "books"
"""
input books_aggregate_order_by {
  avg: books_avg_order_by
  count: order_by
  max: books_max_order_by
  min: books_min_order_by
  stddev: books_stddev_order_by
  stddev_pop: books_stddev_pop_order_by
  stddev_samp: books_stddev_samp_order_by
  sum: books_sum_order_by
  var_pop: books_var_pop_order_by
  var_samp: books_var_samp_order_by
  variance: books_variance_order_by
}

"""
input type for inserting array relation for remote table "books"
"""
input books_arr_rel_insert_input {
  data: [books_insert_input!]!
  on_conflict: books_on_conflict
}

"""aggregate avg on columns"""
type books_avg_fields {
  current_chapter_display_order: Float
  grade: Float
  school_id: Float
}

"""
order by avg() on columns of table "books"
"""
input books_avg_order_by {
  current_chapter_display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "books". All fields are combined with a logical 'AND'.
"""
input books_bool_exp {
  _and: [books_bool_exp]
  _not: books_bool_exp
  _or: [books_bool_exp]
  book_chapters: books_chapters_bool_exp
  book_id: String_comparison_exp
  copied_from: String_comparison_exp
  country: String_comparison_exp
  course_books: courses_books_bool_exp
  created_at: timestamptz_comparison_exp
  current_chapter_display_order: Int_comparison_exp
  deleted_at: timestamptz_comparison_exp
  grade: smallint_comparison_exp
  name: String_comparison_exp
  resource_path: String_comparison_exp
  school: schools_bool_exp
  school_id: Int_comparison_exp
  subject: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
columns and relationships of "books_chapters"
"""
type books_chapters {
  """An object relationship"""
  book: books
  book_id: String!

  """An object relationship"""
  chapter: chapters
  chapter_id: String!

  """An object relationship"""
  course_book: courses_books
  created_at: timestamptz!
  deleted_at: timestamptz
  resource_path: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "books_chapters"
"""
type books_chapters_aggregate {
  aggregate: books_chapters_aggregate_fields
  nodes: [books_chapters!]!
}

"""
aggregate fields of "books_chapters"
"""
type books_chapters_aggregate_fields {
  count(columns: [books_chapters_select_column!], distinct: Boolean): Int
  max: books_chapters_max_fields
  min: books_chapters_min_fields
}

"""
order by aggregate values of table "books_chapters"
"""
input books_chapters_aggregate_order_by {
  count: order_by
  max: books_chapters_max_order_by
  min: books_chapters_min_order_by
}

"""
input type for inserting array relation for remote table "books_chapters"
"""
input books_chapters_arr_rel_insert_input {
  data: [books_chapters_insert_input!]!
  on_conflict: books_chapters_on_conflict
}

"""
Boolean expression to filter rows from the table "books_chapters". All fields are combined with a logical 'AND'.
"""
input books_chapters_bool_exp {
  _and: [books_chapters_bool_exp]
  _not: books_chapters_bool_exp
  _or: [books_chapters_bool_exp]
  book: books_bool_exp
  book_id: String_comparison_exp
  chapter: chapters_bool_exp
  chapter_id: String_comparison_exp
  course_book: courses_books_bool_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "books_chapters"
"""
enum books_chapters_constraint {
  """unique or primary key constraint"""
  books_chapters_pk
}

"""
input type for inserting data into table "books_chapters"
"""
input books_chapters_insert_input {
  book: books_obj_rel_insert_input
  book_id: String
  chapter: chapters_obj_rel_insert_input
  chapter_id: String
  course_book: courses_books_obj_rel_insert_input
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type books_chapters_max_fields {
  book_id: String
  chapter_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "books_chapters"
"""
input books_chapters_max_order_by {
  book_id: order_by
  chapter_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type books_chapters_min_fields {
  book_id: String
  chapter_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "books_chapters"
"""
input books_chapters_min_order_by {
  book_id: order_by
  chapter_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "books_chapters"
"""
type books_chapters_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [books_chapters!]!
}

"""
input type for inserting object relation for remote table "books_chapters"
"""
input books_chapters_obj_rel_insert_input {
  data: books_chapters_insert_input!
  on_conflict: books_chapters_on_conflict
}

"""
on conflict condition type for table "books_chapters"
"""
input books_chapters_on_conflict {
  constraint: books_chapters_constraint!
  update_columns: [books_chapters_update_column!]!
  where: books_chapters_bool_exp
}

"""
ordering options when selecting data from "books_chapters"
"""
input books_chapters_order_by {
  book: books_order_by
  book_id: order_by
  chapter: chapters_order_by
  chapter_id: order_by
  course_book: courses_books_order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "books_chapters"
"""
input books_chapters_pk_columns_input {
  book_id: String!
  chapter_id: String!
}

"""
select columns of table "books_chapters"
"""
enum books_chapters_select_column {
  """column name"""
  book_id

  """column name"""
  chapter_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "books_chapters"
"""
input books_chapters_set_input {
  book_id: String
  chapter_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
}

"""
update columns of table "books_chapters"
"""
enum books_chapters_update_column {
  """column name"""
  book_id

  """column name"""
  chapter_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
unique or primary key constraints on table "books"
"""
enum books_constraint {
  """unique or primary key constraint"""
  books_pk
}

"""
input type for incrementing integer column in table "books"
"""
input books_inc_input {
  current_chapter_display_order: Int
  grade: smallint
  school_id: Int
}

"""
input type for inserting data into table "books"
"""
input books_insert_input {
  book_chapters: books_chapters_arr_rel_insert_input
  book_id: String
  copied_from: String
  country: String
  course_books: courses_books_arr_rel_insert_input
  created_at: timestamptz
  current_chapter_display_order: Int
  deleted_at: timestamptz
  grade: smallint
  name: String
  resource_path: String
  school: schools_obj_rel_insert_input
  school_id: Int
  subject: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type books_max_fields {
  book_id: String
  copied_from: String
  country: String
  created_at: timestamptz
  current_chapter_display_order: Int
  deleted_at: timestamptz
  grade: smallint
  name: String
  resource_path: String
  school_id: Int
  subject: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "books"
"""
input books_max_order_by {
  book_id: order_by
  copied_from: order_by
  country: order_by
  created_at: order_by
  current_chapter_display_order: order_by
  deleted_at: order_by
  grade: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  subject: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type books_min_fields {
  book_id: String
  copied_from: String
  country: String
  created_at: timestamptz
  current_chapter_display_order: Int
  deleted_at: timestamptz
  grade: smallint
  name: String
  resource_path: String
  school_id: Int
  subject: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "books"
"""
input books_min_order_by {
  book_id: order_by
  copied_from: order_by
  country: order_by
  created_at: order_by
  current_chapter_display_order: order_by
  deleted_at: order_by
  grade: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  subject: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "books"
"""
type books_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [books!]!
}

"""
input type for inserting object relation for remote table "books"
"""
input books_obj_rel_insert_input {
  data: books_insert_input!
  on_conflict: books_on_conflict
}

"""
on conflict condition type for table "books"
"""
input books_on_conflict {
  constraint: books_constraint!
  update_columns: [books_update_column!]!
  where: books_bool_exp
}

"""
ordering options when selecting data from "books"
"""
input books_order_by {
  book_chapters_aggregate: books_chapters_aggregate_order_by
  book_id: order_by
  copied_from: order_by
  country: order_by
  course_books_aggregate: courses_books_aggregate_order_by
  created_at: order_by
  current_chapter_display_order: order_by
  deleted_at: order_by
  grade: order_by
  name: order_by
  resource_path: order_by
  school: schools_order_by
  school_id: order_by
  subject: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "books"
"""
input books_pk_columns_input {
  book_id: String!
}

"""
select columns of table "books"
"""
enum books_select_column {
  """column name"""
  book_id

  """column name"""
  copied_from

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  current_chapter_display_order

  """column name"""
  deleted_at

  """column name"""
  grade

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  subject

  """column name"""
  updated_at
}

"""
input type for updating data in table "books"
"""
input books_set_input {
  book_id: String
  copied_from: String
  country: String
  created_at: timestamptz
  current_chapter_display_order: Int
  deleted_at: timestamptz
  grade: smallint
  name: String
  resource_path: String
  school_id: Int
  subject: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type books_stddev_fields {
  current_chapter_display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev() on columns of table "books"
"""
input books_stddev_order_by {
  current_chapter_display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type books_stddev_pop_fields {
  current_chapter_display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev_pop() on columns of table "books"
"""
input books_stddev_pop_order_by {
  current_chapter_display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type books_stddev_samp_fields {
  current_chapter_display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev_samp() on columns of table "books"
"""
input books_stddev_samp_order_by {
  current_chapter_display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate sum on columns"""
type books_sum_fields {
  current_chapter_display_order: Int
  grade: smallint
  school_id: Int
}

"""
order by sum() on columns of table "books"
"""
input books_sum_order_by {
  current_chapter_display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
update columns of table "books"
"""
enum books_update_column {
  """column name"""
  book_id

  """column name"""
  copied_from

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  current_chapter_display_order

  """column name"""
  deleted_at

  """column name"""
  grade

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  subject

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type books_var_pop_fields {
  current_chapter_display_order: Float
  grade: Float
  school_id: Float
}

"""
order by var_pop() on columns of table "books"
"""
input books_var_pop_order_by {
  current_chapter_display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate var_samp on columns"""
type books_var_samp_fields {
  current_chapter_display_order: Float
  grade: Float
  school_id: Float
}

"""
order by var_samp() on columns of table "books"
"""
input books_var_samp_order_by {
  current_chapter_display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate variance on columns"""
type books_variance_fields {
  current_chapter_display_order: Float
  grade: Float
  school_id: Float
}

"""
order by variance() on columns of table "books"
"""
input books_variance_order_by {
  current_chapter_display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
columns and relationships of "chapters"
"""
type chapters {
  """An array relationship"""
  book_chapters(
    """distinct select on columns"""
    distinct_on: [books_chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_chapters_order_by!]

    """filter the rows returned"""
    where: books_chapters_bool_exp
  ): [books_chapters!]!

  """An aggregated array relationship"""
  book_chapters_aggregate(
    """distinct select on columns"""
    distinct_on: [books_chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_chapters_order_by!]

    """filter the rows returned"""
    where: books_chapters_bool_exp
  ): books_chapters_aggregate!
  chapter_id: String!
  copied_from: String
  country: String
  created_at: timestamptz!
  current_topic_display_order: Int
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  name: String!
  resource_path: String!

  """An object relationship"""
  school: schools!
  school_id: Int!
  subject: String

  """An array relationship"""
  topics(
    """distinct select on columns"""
    distinct_on: [topics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_order_by!]

    """filter the rows returned"""
    where: topics_bool_exp
  ): [topics!]!

  """An aggregated array relationship"""
  topics_aggregate(
    """distinct select on columns"""
    distinct_on: [topics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_order_by!]

    """filter the rows returned"""
    where: topics_bool_exp
  ): topics_aggregate!
  updated_at: timestamptz!
}

"""
aggregated selection of "chapters"
"""
type chapters_aggregate {
  aggregate: chapters_aggregate_fields
  nodes: [chapters!]!
}

"""
aggregate fields of "chapters"
"""
type chapters_aggregate_fields {
  avg: chapters_avg_fields
  count(columns: [chapters_select_column!], distinct: Boolean): Int
  max: chapters_max_fields
  min: chapters_min_fields
  stddev: chapters_stddev_fields
  stddev_pop: chapters_stddev_pop_fields
  stddev_samp: chapters_stddev_samp_fields
  sum: chapters_sum_fields
  var_pop: chapters_var_pop_fields
  var_samp: chapters_var_samp_fields
  variance: chapters_variance_fields
}

"""
order by aggregate values of table "chapters"
"""
input chapters_aggregate_order_by {
  avg: chapters_avg_order_by
  count: order_by
  max: chapters_max_order_by
  min: chapters_min_order_by
  stddev: chapters_stddev_order_by
  stddev_pop: chapters_stddev_pop_order_by
  stddev_samp: chapters_stddev_samp_order_by
  sum: chapters_sum_order_by
  var_pop: chapters_var_pop_order_by
  var_samp: chapters_var_samp_order_by
  variance: chapters_variance_order_by
}

"""
input type for inserting array relation for remote table "chapters"
"""
input chapters_arr_rel_insert_input {
  data: [chapters_insert_input!]!
  on_conflict: chapters_on_conflict
}

"""aggregate avg on columns"""
type chapters_avg_fields {
  current_topic_display_order: Float
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by avg() on columns of table "chapters"
"""
input chapters_avg_order_by {
  current_topic_display_order: order_by
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "chapters". All fields are combined with a logical 'AND'.
"""
input chapters_bool_exp {
  _and: [chapters_bool_exp]
  _not: chapters_bool_exp
  _or: [chapters_bool_exp]
  book_chapters: books_chapters_bool_exp
  chapter_id: String_comparison_exp
  copied_from: String_comparison_exp
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  current_topic_display_order: Int_comparison_exp
  deleted_at: timestamptz_comparison_exp
  display_order: smallint_comparison_exp
  grade: smallint_comparison_exp
  name: String_comparison_exp
  resource_path: String_comparison_exp
  school: schools_bool_exp
  school_id: Int_comparison_exp
  subject: String_comparison_exp
  topics: topics_bool_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "chapters"
"""
enum chapters_constraint {
  """unique or primary key constraint"""
  chapters_pk
}

"""
input type for incrementing integer column in table "chapters"
"""
input chapters_inc_input {
  current_topic_display_order: Int
  display_order: smallint
  grade: smallint
  school_id: Int
}

"""
input type for inserting data into table "chapters"
"""
input chapters_insert_input {
  book_chapters: books_chapters_arr_rel_insert_input
  chapter_id: String
  copied_from: String
  country: String
  created_at: timestamptz
  current_topic_display_order: Int
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  name: String
  resource_path: String
  school: schools_obj_rel_insert_input
  school_id: Int
  subject: String
  topics: topics_arr_rel_insert_input
  updated_at: timestamptz
}

"""aggregate max on columns"""
type chapters_max_fields {
  chapter_id: String
  copied_from: String
  country: String
  created_at: timestamptz
  current_topic_display_order: Int
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  name: String
  resource_path: String
  school_id: Int
  subject: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "chapters"
"""
input chapters_max_order_by {
  chapter_id: order_by
  copied_from: order_by
  country: order_by
  created_at: order_by
  current_topic_display_order: order_by
  deleted_at: order_by
  display_order: order_by
  grade: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  subject: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type chapters_min_fields {
  chapter_id: String
  copied_from: String
  country: String
  created_at: timestamptz
  current_topic_display_order: Int
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  name: String
  resource_path: String
  school_id: Int
  subject: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "chapters"
"""
input chapters_min_order_by {
  chapter_id: order_by
  copied_from: order_by
  country: order_by
  created_at: order_by
  current_topic_display_order: order_by
  deleted_at: order_by
  display_order: order_by
  grade: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  subject: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "chapters"
"""
type chapters_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [chapters!]!
}

"""
input type for inserting object relation for remote table "chapters"
"""
input chapters_obj_rel_insert_input {
  data: chapters_insert_input!
  on_conflict: chapters_on_conflict
}

"""
on conflict condition type for table "chapters"
"""
input chapters_on_conflict {
  constraint: chapters_constraint!
  update_columns: [chapters_update_column!]!
  where: chapters_bool_exp
}

"""
ordering options when selecting data from "chapters"
"""
input chapters_order_by {
  book_chapters_aggregate: books_chapters_aggregate_order_by
  chapter_id: order_by
  copied_from: order_by
  country: order_by
  created_at: order_by
  current_topic_display_order: order_by
  deleted_at: order_by
  display_order: order_by
  grade: order_by
  name: order_by
  resource_path: order_by
  school: schools_order_by
  school_id: order_by
  subject: order_by
  topics_aggregate: topics_aggregate_order_by
  updated_at: order_by
}

"""
primary key columns input for table: "chapters"
"""
input chapters_pk_columns_input {
  chapter_id: String!
}

"""
select columns of table "chapters"
"""
enum chapters_select_column {
  """column name"""
  chapter_id

  """column name"""
  copied_from

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  current_topic_display_order

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  grade

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  subject

  """column name"""
  updated_at
}

"""
input type for updating data in table "chapters"
"""
input chapters_set_input {
  chapter_id: String
  copied_from: String
  country: String
  created_at: timestamptz
  current_topic_display_order: Int
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  name: String
  resource_path: String
  school_id: Int
  subject: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type chapters_stddev_fields {
  current_topic_display_order: Float
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev() on columns of table "chapters"
"""
input chapters_stddev_order_by {
  current_topic_display_order: order_by
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type chapters_stddev_pop_fields {
  current_topic_display_order: Float
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev_pop() on columns of table "chapters"
"""
input chapters_stddev_pop_order_by {
  current_topic_display_order: order_by
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type chapters_stddev_samp_fields {
  current_topic_display_order: Float
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev_samp() on columns of table "chapters"
"""
input chapters_stddev_samp_order_by {
  current_topic_display_order: order_by
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate sum on columns"""
type chapters_sum_fields {
  current_topic_display_order: Int
  display_order: smallint
  grade: smallint
  school_id: Int
}

"""
order by sum() on columns of table "chapters"
"""
input chapters_sum_order_by {
  current_topic_display_order: order_by
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
update columns of table "chapters"
"""
enum chapters_update_column {
  """column name"""
  chapter_id

  """column name"""
  copied_from

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  current_topic_display_order

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  grade

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  subject

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type chapters_var_pop_fields {
  current_topic_display_order: Float
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by var_pop() on columns of table "chapters"
"""
input chapters_var_pop_order_by {
  current_topic_display_order: order_by
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate var_samp on columns"""
type chapters_var_samp_fields {
  current_topic_display_order: Float
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by var_samp() on columns of table "chapters"
"""
input chapters_var_samp_order_by {
  current_topic_display_order: order_by
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate variance on columns"""
type chapters_variance_fields {
  current_topic_display_order: Float
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by variance() on columns of table "chapters"
"""
input chapters_variance_order_by {
  current_topic_display_order: order_by
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
columns and relationships of "cities"
"""
type cities {
  city_id: Int!
  country: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  display_order: smallint!

  """An array relationship"""
  districts(
    """distinct select on columns"""
    distinct_on: [districts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [districts_order_by!]

    """filter the rows returned"""
    where: districts_bool_exp
  ): [districts!]!

  """An aggregated array relationship"""
  districts_aggregate(
    """distinct select on columns"""
    distinct_on: [districts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [districts_order_by!]

    """filter the rows returned"""
    where: districts_bool_exp
  ): districts_aggregate!
  name: String!
  resource_path: String

  """An array relationship"""
  schools(
    """distinct select on columns"""
    distinct_on: [schools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schools_order_by!]

    """filter the rows returned"""
    where: schools_bool_exp
  ): [schools!]!

  """An aggregated array relationship"""
  schools_aggregate(
    """distinct select on columns"""
    distinct_on: [schools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schools_order_by!]

    """filter the rows returned"""
    where: schools_bool_exp
  ): schools_aggregate!
  updated_at: timestamptz!
}

"""
aggregated selection of "cities"
"""
type cities_aggregate {
  aggregate: cities_aggregate_fields
  nodes: [cities!]!
}

"""
aggregate fields of "cities"
"""
type cities_aggregate_fields {
  avg: cities_avg_fields
  count(columns: [cities_select_column!], distinct: Boolean): Int
  max: cities_max_fields
  min: cities_min_fields
  stddev: cities_stddev_fields
  stddev_pop: cities_stddev_pop_fields
  stddev_samp: cities_stddev_samp_fields
  sum: cities_sum_fields
  var_pop: cities_var_pop_fields
  var_samp: cities_var_samp_fields
  variance: cities_variance_fields
}

"""
order by aggregate values of table "cities"
"""
input cities_aggregate_order_by {
  avg: cities_avg_order_by
  count: order_by
  max: cities_max_order_by
  min: cities_min_order_by
  stddev: cities_stddev_order_by
  stddev_pop: cities_stddev_pop_order_by
  stddev_samp: cities_stddev_samp_order_by
  sum: cities_sum_order_by
  var_pop: cities_var_pop_order_by
  var_samp: cities_var_samp_order_by
  variance: cities_variance_order_by
}

"""
input type for inserting array relation for remote table "cities"
"""
input cities_arr_rel_insert_input {
  data: [cities_insert_input!]!
  on_conflict: cities_on_conflict
}

"""aggregate avg on columns"""
type cities_avg_fields {
  city_id: Float
  display_order: Float
}

"""
order by avg() on columns of table "cities"
"""
input cities_avg_order_by {
  city_id: order_by
  display_order: order_by
}

"""
Boolean expression to filter rows from the table "cities". All fields are combined with a logical 'AND'.
"""
input cities_bool_exp {
  _and: [cities_bool_exp]
  _not: cities_bool_exp
  _or: [cities_bool_exp]
  city_id: Int_comparison_exp
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  display_order: smallint_comparison_exp
  districts: districts_bool_exp
  name: String_comparison_exp
  resource_path: String_comparison_exp
  schools: schools_bool_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "cities"
"""
enum cities_constraint {
  """unique or primary key constraint"""
  city_pk

  """unique or primary key constraint"""
  city_un
}

"""
input type for incrementing integer column in table "cities"
"""
input cities_inc_input {
  city_id: Int
  display_order: smallint
}

"""
input type for inserting data into table "cities"
"""
input cities_insert_input {
  city_id: Int
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  districts: districts_arr_rel_insert_input
  name: String
  resource_path: String
  schools: schools_arr_rel_insert_input
  updated_at: timestamptz
}

"""aggregate max on columns"""
type cities_max_fields {
  city_id: Int
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  name: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "cities"
"""
input cities_max_order_by {
  city_id: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  name: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type cities_min_fields {
  city_id: Int
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  name: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "cities"
"""
input cities_min_order_by {
  city_id: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  name: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "cities"
"""
type cities_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [cities!]!
}

"""
input type for inserting object relation for remote table "cities"
"""
input cities_obj_rel_insert_input {
  data: cities_insert_input!
  on_conflict: cities_on_conflict
}

"""
on conflict condition type for table "cities"
"""
input cities_on_conflict {
  constraint: cities_constraint!
  update_columns: [cities_update_column!]!
  where: cities_bool_exp
}

"""
ordering options when selecting data from "cities"
"""
input cities_order_by {
  city_id: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  districts_aggregate: districts_aggregate_order_by
  name: order_by
  resource_path: order_by
  schools_aggregate: schools_aggregate_order_by
  updated_at: order_by
}

"""
primary key columns input for table: "cities"
"""
input cities_pk_columns_input {
  city_id: Int!
}

"""
select columns of table "cities"
"""
enum cities_select_column {
  """column name"""
  city_id

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "cities"
"""
input cities_set_input {
  city_id: Int
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  name: String
  resource_path: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type cities_stddev_fields {
  city_id: Float
  display_order: Float
}

"""
order by stddev() on columns of table "cities"
"""
input cities_stddev_order_by {
  city_id: order_by
  display_order: order_by
}

"""aggregate stddev_pop on columns"""
type cities_stddev_pop_fields {
  city_id: Float
  display_order: Float
}

"""
order by stddev_pop() on columns of table "cities"
"""
input cities_stddev_pop_order_by {
  city_id: order_by
  display_order: order_by
}

"""aggregate stddev_samp on columns"""
type cities_stddev_samp_fields {
  city_id: Float
  display_order: Float
}

"""
order by stddev_samp() on columns of table "cities"
"""
input cities_stddev_samp_order_by {
  city_id: order_by
  display_order: order_by
}

"""aggregate sum on columns"""
type cities_sum_fields {
  city_id: Int
  display_order: smallint
}

"""
order by sum() on columns of table "cities"
"""
input cities_sum_order_by {
  city_id: order_by
  display_order: order_by
}

"""
update columns of table "cities"
"""
enum cities_update_column {
  """column name"""
  city_id

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type cities_var_pop_fields {
  city_id: Float
  display_order: Float
}

"""
order by var_pop() on columns of table "cities"
"""
input cities_var_pop_order_by {
  city_id: order_by
  display_order: order_by
}

"""aggregate var_samp on columns"""
type cities_var_samp_fields {
  city_id: Float
  display_order: Float
}

"""
order by var_samp() on columns of table "cities"
"""
input cities_var_samp_order_by {
  city_id: order_by
  display_order: order_by
}

"""aggregate variance on columns"""
type cities_variance_fields {
  city_id: Float
  display_order: Float
}

"""
order by variance() on columns of table "cities"
"""
input cities_variance_order_by {
  city_id: order_by
  display_order: order_by
}

"""
columns and relationships of "class"
"""
type class {
  class_id: String!

  """An object relationship"""
  course: courses!
  course_id: String!
  created_at: timestamptz!
  deleted_at: timestamptz

  """An object relationship"""
  location: locations!
  location_id: String!
  name: String!
  resource_path: String!
  school_id: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "class"
"""
type class_aggregate {
  aggregate: class_aggregate_fields
  nodes: [class!]!
}

"""
aggregate fields of "class"
"""
type class_aggregate_fields {
  count(columns: [class_select_column!], distinct: Boolean): Int
  max: class_max_fields
  min: class_min_fields
}

"""
order by aggregate values of table "class"
"""
input class_aggregate_order_by {
  count: order_by
  max: class_max_order_by
  min: class_min_order_by
}

"""
input type for inserting array relation for remote table "class"
"""
input class_arr_rel_insert_input {
  data: [class_insert_input!]!
  on_conflict: class_on_conflict
}

"""
Boolean expression to filter rows from the table "class". All fields are combined with a logical 'AND'.
"""
input class_bool_exp {
  _and: [class_bool_exp]
  _not: class_bool_exp
  _or: [class_bool_exp]
  class_id: String_comparison_exp
  course: courses_bool_exp
  course_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  location: locations_bool_exp
  location_id: String_comparison_exp
  name: String_comparison_exp
  resource_path: String_comparison_exp
  school_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "class"
"""
enum class_constraint {
  """unique or primary key constraint"""
  pk__class
}

"""
input type for inserting data into table "class"
"""
input class_insert_input {
  class_id: String
  course: courses_obj_rel_insert_input
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  location: locations_obj_rel_insert_input
  location_id: String
  name: String
  resource_path: String
  school_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type class_max_fields {
  class_id: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  name: String
  resource_path: String
  school_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "class"
"""
input class_max_order_by {
  class_id: order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  location_id: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  updated_at: order_by
}

"""
columns and relationships of "class_member"
"""
type class_member {
  class_id: String!
  class_member_id: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  end_date: timestamptz
  resource_path: String!
  start_date: timestamptz
  updated_at: timestamptz!
  user_id: String!
}

"""
aggregated selection of "class_member"
"""
type class_member_aggregate {
  aggregate: class_member_aggregate_fields
  nodes: [class_member!]!
}

"""
aggregate fields of "class_member"
"""
type class_member_aggregate_fields {
  count(columns: [class_member_select_column!], distinct: Boolean): Int
  max: class_member_max_fields
  min: class_member_min_fields
}

"""
order by aggregate values of table "class_member"
"""
input class_member_aggregate_order_by {
  count: order_by
  max: class_member_max_order_by
  min: class_member_min_order_by
}

"""
input type for inserting array relation for remote table "class_member"
"""
input class_member_arr_rel_insert_input {
  data: [class_member_insert_input!]!
  on_conflict: class_member_on_conflict
}

"""
Boolean expression to filter rows from the table "class_member". All fields are combined with a logical 'AND'.
"""
input class_member_bool_exp {
  _and: [class_member_bool_exp]
  _not: class_member_bool_exp
  _or: [class_member_bool_exp]
  class_id: String_comparison_exp
  class_member_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  end_date: timestamptz_comparison_exp
  resource_path: String_comparison_exp
  start_date: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_id: String_comparison_exp
}

"""
unique or primary key constraints on table "class_member"
"""
enum class_member_constraint {
  """unique or primary key constraint"""
  pk__class_member
}

"""
input type for inserting data into table "class_member"
"""
input class_member_insert_input {
  class_id: String
  class_member_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  resource_path: String
  start_date: timestamptz
  updated_at: timestamptz
  user_id: String
}

"""aggregate max on columns"""
type class_member_max_fields {
  class_id: String
  class_member_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  resource_path: String
  start_date: timestamptz
  updated_at: timestamptz
  user_id: String
}

"""
order by max() on columns of table "class_member"
"""
input class_member_max_order_by {
  class_id: order_by
  class_member_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_date: order_by
  resource_path: order_by
  start_date: order_by
  updated_at: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type class_member_min_fields {
  class_id: String
  class_member_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  resource_path: String
  start_date: timestamptz
  updated_at: timestamptz
  user_id: String
}

"""
order by min() on columns of table "class_member"
"""
input class_member_min_order_by {
  class_id: order_by
  class_member_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_date: order_by
  resource_path: order_by
  start_date: order_by
  updated_at: order_by
  user_id: order_by
}

"""
response of any mutation on the table "class_member"
"""
type class_member_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [class_member!]!
}

"""
input type for inserting object relation for remote table "class_member"
"""
input class_member_obj_rel_insert_input {
  data: class_member_insert_input!
  on_conflict: class_member_on_conflict
}

"""
on conflict condition type for table "class_member"
"""
input class_member_on_conflict {
  constraint: class_member_constraint!
  update_columns: [class_member_update_column!]!
  where: class_member_bool_exp
}

"""
ordering options when selecting data from "class_member"
"""
input class_member_order_by {
  class_id: order_by
  class_member_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_date: order_by
  resource_path: order_by
  start_date: order_by
  updated_at: order_by
  user_id: order_by
}

"""
primary key columns input for table: "class_member"
"""
input class_member_pk_columns_input {
  class_member_id: String!
}

"""
select columns of table "class_member"
"""
enum class_member_select_column {
  """column name"""
  class_id

  """column name"""
  class_member_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_date

  """column name"""
  resource_path

  """column name"""
  start_date

  """column name"""
  updated_at

  """column name"""
  user_id
}

"""
input type for updating data in table "class_member"
"""
input class_member_set_input {
  class_id: String
  class_member_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  resource_path: String
  start_date: timestamptz
  updated_at: timestamptz
  user_id: String
}

"""
update columns of table "class_member"
"""
enum class_member_update_column {
  """column name"""
  class_id

  """column name"""
  class_member_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_date

  """column name"""
  resource_path

  """column name"""
  start_date

  """column name"""
  updated_at

  """column name"""
  user_id
}

"""
columns and relationships of "class_members"
"""
type class_members {
  """An object relationship"""
  class: classes!
  class_id: Int!
  class_member_id: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  is_owner: Boolean!
  resource_path: String!
  status: String!

  """An object relationship"""
  student: students

  """An object relationship"""
  student_subscription: student_subscriptions
  student_subscription_id: String

  """An object relationship"""
  teacher_by_school_id: teacher_by_school_id

  """An object relationship"""
  teachers: teachers
  updated_at: timestamptz!

  """An object relationship"""
  user: users!
  user_group: String!
  user_id: String!
}

"""
aggregated selection of "class_members"
"""
type class_members_aggregate {
  aggregate: class_members_aggregate_fields
  nodes: [class_members!]!
}

"""
aggregate fields of "class_members"
"""
type class_members_aggregate_fields {
  avg: class_members_avg_fields
  count(columns: [class_members_select_column!], distinct: Boolean): Int
  max: class_members_max_fields
  min: class_members_min_fields
  stddev: class_members_stddev_fields
  stddev_pop: class_members_stddev_pop_fields
  stddev_samp: class_members_stddev_samp_fields
  sum: class_members_sum_fields
  var_pop: class_members_var_pop_fields
  var_samp: class_members_var_samp_fields
  variance: class_members_variance_fields
}

"""
order by aggregate values of table "class_members"
"""
input class_members_aggregate_order_by {
  avg: class_members_avg_order_by
  count: order_by
  max: class_members_max_order_by
  min: class_members_min_order_by
  stddev: class_members_stddev_order_by
  stddev_pop: class_members_stddev_pop_order_by
  stddev_samp: class_members_stddev_samp_order_by
  sum: class_members_sum_order_by
  var_pop: class_members_var_pop_order_by
  var_samp: class_members_var_samp_order_by
  variance: class_members_variance_order_by
}

"""
input type for inserting array relation for remote table "class_members"
"""
input class_members_arr_rel_insert_input {
  data: [class_members_insert_input!]!
  on_conflict: class_members_on_conflict
}

"""aggregate avg on columns"""
type class_members_avg_fields {
  class_id: Float
}

"""
order by avg() on columns of table "class_members"
"""
input class_members_avg_order_by {
  class_id: order_by
}

"""
Boolean expression to filter rows from the table "class_members". All fields are combined with a logical 'AND'.
"""
input class_members_bool_exp {
  _and: [class_members_bool_exp]
  _not: class_members_bool_exp
  _or: [class_members_bool_exp]
  class: classes_bool_exp
  class_id: Int_comparison_exp
  class_member_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  is_owner: Boolean_comparison_exp
  resource_path: String_comparison_exp
  status: String_comparison_exp
  student: students_bool_exp
  student_subscription: student_subscriptions_bool_exp
  student_subscription_id: String_comparison_exp
  teacher_by_school_id: teacher_by_school_id_bool_exp
  teachers: teachers_bool_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
  user_group: String_comparison_exp
  user_id: String_comparison_exp
}

"""
unique or primary key constraints on table "class_members"
"""
enum class_members_constraint {
  """unique or primary key constraint"""
  class_members_pk
}

"""
input type for incrementing integer column in table "class_members"
"""
input class_members_inc_input {
  class_id: Int
}

"""
input type for inserting data into table "class_members"
"""
input class_members_insert_input {
  class: classes_obj_rel_insert_input
  class_id: Int
  class_member_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  is_owner: Boolean
  resource_path: String
  status: String
  student: students_obj_rel_insert_input
  student_subscription: student_subscriptions_obj_rel_insert_input
  student_subscription_id: String
  teachers: teachers_obj_rel_insert_input
  updated_at: timestamptz
  user: users_obj_rel_insert_input
  user_group: String
  user_id: String
}

"""aggregate max on columns"""
type class_members_max_fields {
  class_id: Int
  class_member_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  status: String
  student_subscription_id: String
  updated_at: timestamptz
  user_group: String
  user_id: String
}

"""
order by max() on columns of table "class_members"
"""
input class_members_max_order_by {
  class_id: order_by
  class_member_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  status: order_by
  student_subscription_id: order_by
  updated_at: order_by
  user_group: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type class_members_min_fields {
  class_id: Int
  class_member_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  status: String
  student_subscription_id: String
  updated_at: timestamptz
  user_group: String
  user_id: String
}

"""
order by min() on columns of table "class_members"
"""
input class_members_min_order_by {
  class_id: order_by
  class_member_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  status: order_by
  student_subscription_id: order_by
  updated_at: order_by
  user_group: order_by
  user_id: order_by
}

"""
response of any mutation on the table "class_members"
"""
type class_members_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [class_members!]!
}

"""
input type for inserting object relation for remote table "class_members"
"""
input class_members_obj_rel_insert_input {
  data: class_members_insert_input!
  on_conflict: class_members_on_conflict
}

"""
on conflict condition type for table "class_members"
"""
input class_members_on_conflict {
  constraint: class_members_constraint!
  update_columns: [class_members_update_column!]!
  where: class_members_bool_exp
}

"""
ordering options when selecting data from "class_members"
"""
input class_members_order_by {
  class: classes_order_by
  class_id: order_by
  class_member_id: order_by
  created_at: order_by
  deleted_at: order_by
  is_owner: order_by
  resource_path: order_by
  status: order_by
  student: students_order_by
  student_subscription: student_subscriptions_order_by
  student_subscription_id: order_by
  teacher_by_school_id: teacher_by_school_id_order_by
  teachers: teachers_order_by
  updated_at: order_by
  user: users_order_by
  user_group: order_by
  user_id: order_by
}

"""
primary key columns input for table: "class_members"
"""
input class_members_pk_columns_input {
  class_member_id: String!
}

"""
select columns of table "class_members"
"""
enum class_members_select_column {
  """column name"""
  class_id

  """column name"""
  class_member_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  is_owner

  """column name"""
  resource_path

  """column name"""
  status

  """column name"""
  student_subscription_id

  """column name"""
  updated_at

  """column name"""
  user_group

  """column name"""
  user_id
}

"""
input type for updating data in table "class_members"
"""
input class_members_set_input {
  class_id: Int
  class_member_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  is_owner: Boolean
  resource_path: String
  status: String
  student_subscription_id: String
  updated_at: timestamptz
  user_group: String
  user_id: String
}

"""aggregate stddev on columns"""
type class_members_stddev_fields {
  class_id: Float
}

"""
order by stddev() on columns of table "class_members"
"""
input class_members_stddev_order_by {
  class_id: order_by
}

"""aggregate stddev_pop on columns"""
type class_members_stddev_pop_fields {
  class_id: Float
}

"""
order by stddev_pop() on columns of table "class_members"
"""
input class_members_stddev_pop_order_by {
  class_id: order_by
}

"""aggregate stddev_samp on columns"""
type class_members_stddev_samp_fields {
  class_id: Float
}

"""
order by stddev_samp() on columns of table "class_members"
"""
input class_members_stddev_samp_order_by {
  class_id: order_by
}

"""aggregate sum on columns"""
type class_members_sum_fields {
  class_id: Int
}

"""
order by sum() on columns of table "class_members"
"""
input class_members_sum_order_by {
  class_id: order_by
}

"""
update columns of table "class_members"
"""
enum class_members_update_column {
  """column name"""
  class_id

  """column name"""
  class_member_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  is_owner

  """column name"""
  resource_path

  """column name"""
  status

  """column name"""
  student_subscription_id

  """column name"""
  updated_at

  """column name"""
  user_group

  """column name"""
  user_id
}

"""aggregate var_pop on columns"""
type class_members_var_pop_fields {
  class_id: Float
}

"""
order by var_pop() on columns of table "class_members"
"""
input class_members_var_pop_order_by {
  class_id: order_by
}

"""aggregate var_samp on columns"""
type class_members_var_samp_fields {
  class_id: Float
}

"""
order by var_samp() on columns of table "class_members"
"""
input class_members_var_samp_order_by {
  class_id: order_by
}

"""aggregate variance on columns"""
type class_members_variance_fields {
  class_id: Float
}

"""
order by variance() on columns of table "class_members"
"""
input class_members_variance_order_by {
  class_id: order_by
}

"""aggregate min on columns"""
type class_min_fields {
  class_id: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  name: String
  resource_path: String
  school_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "class"
"""
input class_min_order_by {
  class_id: order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  location_id: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "class"
"""
type class_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [class!]!
}

"""
input type for inserting object relation for remote table "class"
"""
input class_obj_rel_insert_input {
  data: class_insert_input!
  on_conflict: class_on_conflict
}

"""
on conflict condition type for table "class"
"""
input class_on_conflict {
  constraint: class_constraint!
  update_columns: [class_update_column!]!
  where: class_bool_exp
}

"""
ordering options when selecting data from "class"
"""
input class_order_by {
  class_id: order_by
  course: courses_order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  location: locations_order_by
  location_id: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "class"
"""
input class_pk_columns_input {
  class_id: String!
}

"""
select columns of table "class"
"""
enum class_select_column {
  """column name"""
  class_id

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  location_id

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "class"
"""
input class_set_input {
  class_id: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  name: String
  resource_path: String
  school_id: String
  updated_at: timestamptz
}

"""
update columns of table "class"
"""
enum class_update_column {
  """column name"""
  class_id

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  location_id

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  updated_at
}

"""
columns and relationships of "classes"
"""
type classes {
  avatar: String!
  class_code: String
  class_id: Int!

  """An array relationship"""
  class_members(
    """distinct select on columns"""
    distinct_on: [class_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_members_order_by!]

    """filter the rows returned"""
    where: class_members_bool_exp
  ): [class_members!]!

  """An aggregated array relationship"""
  class_members_aggregate(
    """distinct select on columns"""
    distinct_on: [class_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_members_order_by!]

    """filter the rows returned"""
    where: class_members_bool_exp
  ): class_members_aggregate!
  country: String
  created_at: timestamptz!
  deleted_at: timestamptz
  grades: _int4
  name: String!

  """An object relationship"""
  plan: plans
  plan_duration: smallint
  plan_expired_at: timestamptz
  plan_id: String
  resource_path: String!

  """An object relationship"""
  school: schools!
  school_id: Int!
  status: String!
  subjects: _text
  updated_at: timestamptz!
}

"""
aggregated selection of "classes"
"""
type classes_aggregate {
  aggregate: classes_aggregate_fields
  nodes: [classes!]!
}

"""
aggregate fields of "classes"
"""
type classes_aggregate_fields {
  avg: classes_avg_fields
  count(columns: [classes_select_column!], distinct: Boolean): Int
  max: classes_max_fields
  min: classes_min_fields
  stddev: classes_stddev_fields
  stddev_pop: classes_stddev_pop_fields
  stddev_samp: classes_stddev_samp_fields
  sum: classes_sum_fields
  var_pop: classes_var_pop_fields
  var_samp: classes_var_samp_fields
  variance: classes_variance_fields
}

"""
order by aggregate values of table "classes"
"""
input classes_aggregate_order_by {
  avg: classes_avg_order_by
  count: order_by
  max: classes_max_order_by
  min: classes_min_order_by
  stddev: classes_stddev_order_by
  stddev_pop: classes_stddev_pop_order_by
  stddev_samp: classes_stddev_samp_order_by
  sum: classes_sum_order_by
  var_pop: classes_var_pop_order_by
  var_samp: classes_var_samp_order_by
  variance: classes_variance_order_by
}

"""
input type for inserting array relation for remote table "classes"
"""
input classes_arr_rel_insert_input {
  data: [classes_insert_input!]!
  on_conflict: classes_on_conflict
}

"""aggregate avg on columns"""
type classes_avg_fields {
  class_id: Float
  plan_duration: Float
  school_id: Float
}

"""
order by avg() on columns of table "classes"
"""
input classes_avg_order_by {
  class_id: order_by
  plan_duration: order_by
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "classes". All fields are combined with a logical 'AND'.
"""
input classes_bool_exp {
  _and: [classes_bool_exp]
  _not: classes_bool_exp
  _or: [classes_bool_exp]
  avatar: String_comparison_exp
  class_code: String_comparison_exp
  class_id: Int_comparison_exp
  class_members: class_members_bool_exp
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  grades: _int4_comparison_exp
  name: String_comparison_exp
  plan: plans_bool_exp
  plan_duration: smallint_comparison_exp
  plan_expired_at: timestamptz_comparison_exp
  plan_id: String_comparison_exp
  resource_path: String_comparison_exp
  school: schools_bool_exp
  school_id: Int_comparison_exp
  status: String_comparison_exp
  subjects: _text_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "classes"
"""
enum classes_constraint {
  """unique or primary key constraint"""
  classes_pk

  """unique or primary key constraint"""
  classes_un
}

"""
input type for incrementing integer column in table "classes"
"""
input classes_inc_input {
  class_id: Int
  plan_duration: smallint
  school_id: Int
}

"""
input type for inserting data into table "classes"
"""
input classes_insert_input {
  avatar: String
  class_code: String
  class_id: Int
  class_members: class_members_arr_rel_insert_input
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  grades: _int4
  name: String
  plan: plans_obj_rel_insert_input
  plan_duration: smallint
  plan_expired_at: timestamptz
  plan_id: String
  resource_path: String
  school: schools_obj_rel_insert_input
  school_id: Int
  status: String
  subjects: _text
  updated_at: timestamptz
}

"""aggregate max on columns"""
type classes_max_fields {
  avatar: String
  class_code: String
  class_id: Int
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  name: String
  plan_duration: smallint
  plan_expired_at: timestamptz
  plan_id: String
  resource_path: String
  school_id: Int
  status: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "classes"
"""
input classes_max_order_by {
  avatar: order_by
  class_code: order_by
  class_id: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  name: order_by
  plan_duration: order_by
  plan_expired_at: order_by
  plan_id: order_by
  resource_path: order_by
  school_id: order_by
  status: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type classes_min_fields {
  avatar: String
  class_code: String
  class_id: Int
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  name: String
  plan_duration: smallint
  plan_expired_at: timestamptz
  plan_id: String
  resource_path: String
  school_id: Int
  status: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "classes"
"""
input classes_min_order_by {
  avatar: order_by
  class_code: order_by
  class_id: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  name: order_by
  plan_duration: order_by
  plan_expired_at: order_by
  plan_id: order_by
  resource_path: order_by
  school_id: order_by
  status: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "classes"
"""
type classes_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [classes!]!
}

"""
input type for inserting object relation for remote table "classes"
"""
input classes_obj_rel_insert_input {
  data: classes_insert_input!
  on_conflict: classes_on_conflict
}

"""
on conflict condition type for table "classes"
"""
input classes_on_conflict {
  constraint: classes_constraint!
  update_columns: [classes_update_column!]!
  where: classes_bool_exp
}

"""
ordering options when selecting data from "classes"
"""
input classes_order_by {
  avatar: order_by
  class_code: order_by
  class_id: order_by
  class_members_aggregate: class_members_aggregate_order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  grades: order_by
  name: order_by
  plan: plans_order_by
  plan_duration: order_by
  plan_expired_at: order_by
  plan_id: order_by
  resource_path: order_by
  school: schools_order_by
  school_id: order_by
  status: order_by
  subjects: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "classes"
"""
input classes_pk_columns_input {
  class_id: Int!
}

"""
select columns of table "classes"
"""
enum classes_select_column {
  """column name"""
  avatar

  """column name"""
  class_code

  """column name"""
  class_id

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  grades

  """column name"""
  name

  """column name"""
  plan_duration

  """column name"""
  plan_expired_at

  """column name"""
  plan_id

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  status

  """column name"""
  subjects

  """column name"""
  updated_at
}

"""
input type for updating data in table "classes"
"""
input classes_set_input {
  avatar: String
  class_code: String
  class_id: Int
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  grades: _int4
  name: String
  plan_duration: smallint
  plan_expired_at: timestamptz
  plan_id: String
  resource_path: String
  school_id: Int
  status: String
  subjects: _text
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type classes_stddev_fields {
  class_id: Float
  plan_duration: Float
  school_id: Float
}

"""
order by stddev() on columns of table "classes"
"""
input classes_stddev_order_by {
  class_id: order_by
  plan_duration: order_by
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type classes_stddev_pop_fields {
  class_id: Float
  plan_duration: Float
  school_id: Float
}

"""
order by stddev_pop() on columns of table "classes"
"""
input classes_stddev_pop_order_by {
  class_id: order_by
  plan_duration: order_by
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type classes_stddev_samp_fields {
  class_id: Float
  plan_duration: Float
  school_id: Float
}

"""
order by stddev_samp() on columns of table "classes"
"""
input classes_stddev_samp_order_by {
  class_id: order_by
  plan_duration: order_by
  school_id: order_by
}

"""aggregate sum on columns"""
type classes_sum_fields {
  class_id: Int
  plan_duration: smallint
  school_id: Int
}

"""
order by sum() on columns of table "classes"
"""
input classes_sum_order_by {
  class_id: order_by
  plan_duration: order_by
  school_id: order_by
}

"""
update columns of table "classes"
"""
enum classes_update_column {
  """column name"""
  avatar

  """column name"""
  class_code

  """column name"""
  class_id

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  grades

  """column name"""
  name

  """column name"""
  plan_duration

  """column name"""
  plan_expired_at

  """column name"""
  plan_id

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  status

  """column name"""
  subjects

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type classes_var_pop_fields {
  class_id: Float
  plan_duration: Float
  school_id: Float
}

"""
order by var_pop() on columns of table "classes"
"""
input classes_var_pop_order_by {
  class_id: order_by
  plan_duration: order_by
  school_id: order_by
}

"""aggregate var_samp on columns"""
type classes_var_samp_fields {
  class_id: Float
  plan_duration: Float
  school_id: Float
}

"""
order by var_samp() on columns of table "classes"
"""
input classes_var_samp_order_by {
  class_id: order_by
  plan_duration: order_by
  school_id: order_by
}

"""aggregate variance on columns"""
type classes_variance_fields {
  class_id: Float
  plan_duration: Float
  school_id: Float
}

"""
order by variance() on columns of table "classes"
"""
input classes_variance_order_by {
  class_id: order_by
  plan_duration: order_by
  school_id: order_by
}

"""
columns and relationships of "coaches"
"""
type coaches {
  coach_id: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  resource_path: String

  """An array relationship"""
  students_assigned_coaches(
    """distinct select on columns"""
    distinct_on: [students_assigned_coaches_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [students_assigned_coaches_order_by!]

    """filter the rows returned"""
    where: students_assigned_coaches_bool_exp
  ): [students_assigned_coaches!]!

  """An aggregated array relationship"""
  students_assigned_coaches_aggregate(
    """distinct select on columns"""
    distinct_on: [students_assigned_coaches_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [students_assigned_coaches_order_by!]

    """filter the rows returned"""
    where: students_assigned_coaches_bool_exp
  ): students_assigned_coaches_aggregate!
  updated_at: timestamptz!

  """An object relationship"""
  user: users
}

"""
aggregated selection of "coaches"
"""
type coaches_aggregate {
  aggregate: coaches_aggregate_fields
  nodes: [coaches!]!
}

"""
aggregate fields of "coaches"
"""
type coaches_aggregate_fields {
  count(columns: [coaches_select_column!], distinct: Boolean): Int
  max: coaches_max_fields
  min: coaches_min_fields
}

"""
order by aggregate values of table "coaches"
"""
input coaches_aggregate_order_by {
  count: order_by
  max: coaches_max_order_by
  min: coaches_min_order_by
}

"""
input type for inserting array relation for remote table "coaches"
"""
input coaches_arr_rel_insert_input {
  data: [coaches_insert_input!]!
  on_conflict: coaches_on_conflict
}

"""
Boolean expression to filter rows from the table "coaches". All fields are combined with a logical 'AND'.
"""
input coaches_bool_exp {
  _and: [coaches_bool_exp]
  _not: coaches_bool_exp
  _or: [coaches_bool_exp]
  coach_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  resource_path: String_comparison_exp
  students_assigned_coaches: students_assigned_coaches_bool_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
}

"""
unique or primary key constraints on table "coaches"
"""
enum coaches_constraint {
  """unique or primary key constraint"""
  coaches_pk
}

"""
input type for inserting data into table "coaches"
"""
input coaches_insert_input {
  coach_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  students_assigned_coaches: students_assigned_coaches_arr_rel_insert_input
  updated_at: timestamptz
  user: users_obj_rel_insert_input
}

"""aggregate max on columns"""
type coaches_max_fields {
  coach_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "coaches"
"""
input coaches_max_order_by {
  coach_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type coaches_min_fields {
  coach_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "coaches"
"""
input coaches_min_order_by {
  coach_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "coaches"
"""
type coaches_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [coaches!]!
}

"""
input type for inserting object relation for remote table "coaches"
"""
input coaches_obj_rel_insert_input {
  data: coaches_insert_input!
  on_conflict: coaches_on_conflict
}

"""
on conflict condition type for table "coaches"
"""
input coaches_on_conflict {
  constraint: coaches_constraint!
  update_columns: [coaches_update_column!]!
  where: coaches_bool_exp
}

"""
ordering options when selecting data from "coaches"
"""
input coaches_order_by {
  coach_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  students_assigned_coaches_aggregate: students_assigned_coaches_aggregate_order_by
  updated_at: order_by
  user: users_order_by
}

"""
primary key columns input for table: "coaches"
"""
input coaches_pk_columns_input {
  coach_id: String!
}

"""
select columns of table "coaches"
"""
enum coaches_select_column {
  """column name"""
  coach_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "coaches"
"""
input coaches_set_input {
  coach_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
}

"""
update columns of table "coaches"
"""
enum coaches_update_column {
  """column name"""
  coach_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
columns and relationships of "cod_orders"
"""
type cod_orders {
  address_tree: _text!
  cod_order_id: String!
  cod_secret_code: String!
  created_at: timestamptz!
  customer_address: String!
  customer_name: String!
  customer_phone_number: String!
  deleted_at: timestamptz
  expected_delivery_time: timestamptz!
  resource_path: String
  status: String!
  student_order_id: Int!
  updated_at: timestamptz!
}

"""
aggregated selection of "cod_orders"
"""
type cod_orders_aggregate {
  aggregate: cod_orders_aggregate_fields
  nodes: [cod_orders!]!
}

"""
aggregate fields of "cod_orders"
"""
type cod_orders_aggregate_fields {
  avg: cod_orders_avg_fields
  count(columns: [cod_orders_select_column!], distinct: Boolean): Int
  max: cod_orders_max_fields
  min: cod_orders_min_fields
  stddev: cod_orders_stddev_fields
  stddev_pop: cod_orders_stddev_pop_fields
  stddev_samp: cod_orders_stddev_samp_fields
  sum: cod_orders_sum_fields
  var_pop: cod_orders_var_pop_fields
  var_samp: cod_orders_var_samp_fields
  variance: cod_orders_variance_fields
}

"""
order by aggregate values of table "cod_orders"
"""
input cod_orders_aggregate_order_by {
  avg: cod_orders_avg_order_by
  count: order_by
  max: cod_orders_max_order_by
  min: cod_orders_min_order_by
  stddev: cod_orders_stddev_order_by
  stddev_pop: cod_orders_stddev_pop_order_by
  stddev_samp: cod_orders_stddev_samp_order_by
  sum: cod_orders_sum_order_by
  var_pop: cod_orders_var_pop_order_by
  var_samp: cod_orders_var_samp_order_by
  variance: cod_orders_variance_order_by
}

"""
input type for inserting array relation for remote table "cod_orders"
"""
input cod_orders_arr_rel_insert_input {
  data: [cod_orders_insert_input!]!
  on_conflict: cod_orders_on_conflict
}

"""aggregate avg on columns"""
type cod_orders_avg_fields {
  student_order_id: Float
}

"""
order by avg() on columns of table "cod_orders"
"""
input cod_orders_avg_order_by {
  student_order_id: order_by
}

"""
Boolean expression to filter rows from the table "cod_orders". All fields are combined with a logical 'AND'.
"""
input cod_orders_bool_exp {
  _and: [cod_orders_bool_exp]
  _not: cod_orders_bool_exp
  _or: [cod_orders_bool_exp]
  address_tree: _text_comparison_exp
  cod_order_id: String_comparison_exp
  cod_secret_code: String_comparison_exp
  created_at: timestamptz_comparison_exp
  customer_address: String_comparison_exp
  customer_name: String_comparison_exp
  customer_phone_number: String_comparison_exp
  deleted_at: timestamptz_comparison_exp
  expected_delivery_time: timestamptz_comparison_exp
  resource_path: String_comparison_exp
  status: String_comparison_exp
  student_order_id: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "cod_orders"
"""
enum cod_orders_constraint {
  """unique or primary key constraint"""
  cod_orders_pk1
}

"""
input type for incrementing integer column in table "cod_orders"
"""
input cod_orders_inc_input {
  student_order_id: Int
}

"""
input type for inserting data into table "cod_orders"
"""
input cod_orders_insert_input {
  address_tree: _text
  cod_order_id: String
  cod_secret_code: String
  created_at: timestamptz
  customer_address: String
  customer_name: String
  customer_phone_number: String
  deleted_at: timestamptz
  expected_delivery_time: timestamptz
  resource_path: String
  status: String
  student_order_id: Int
  updated_at: timestamptz
}

"""aggregate max on columns"""
type cod_orders_max_fields {
  cod_order_id: String
  cod_secret_code: String
  created_at: timestamptz
  customer_address: String
  customer_name: String
  customer_phone_number: String
  deleted_at: timestamptz
  expected_delivery_time: timestamptz
  resource_path: String
  status: String
  student_order_id: Int
  updated_at: timestamptz
}

"""
order by max() on columns of table "cod_orders"
"""
input cod_orders_max_order_by {
  cod_order_id: order_by
  cod_secret_code: order_by
  created_at: order_by
  customer_address: order_by
  customer_name: order_by
  customer_phone_number: order_by
  deleted_at: order_by
  expected_delivery_time: order_by
  resource_path: order_by
  status: order_by
  student_order_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type cod_orders_min_fields {
  cod_order_id: String
  cod_secret_code: String
  created_at: timestamptz
  customer_address: String
  customer_name: String
  customer_phone_number: String
  deleted_at: timestamptz
  expected_delivery_time: timestamptz
  resource_path: String
  status: String
  student_order_id: Int
  updated_at: timestamptz
}

"""
order by min() on columns of table "cod_orders"
"""
input cod_orders_min_order_by {
  cod_order_id: order_by
  cod_secret_code: order_by
  created_at: order_by
  customer_address: order_by
  customer_name: order_by
  customer_phone_number: order_by
  deleted_at: order_by
  expected_delivery_time: order_by
  resource_path: order_by
  status: order_by
  student_order_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "cod_orders"
"""
type cod_orders_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [cod_orders!]!
}

"""
input type for inserting object relation for remote table "cod_orders"
"""
input cod_orders_obj_rel_insert_input {
  data: cod_orders_insert_input!
  on_conflict: cod_orders_on_conflict
}

"""
on conflict condition type for table "cod_orders"
"""
input cod_orders_on_conflict {
  constraint: cod_orders_constraint!
  update_columns: [cod_orders_update_column!]!
  where: cod_orders_bool_exp
}

"""
ordering options when selecting data from "cod_orders"
"""
input cod_orders_order_by {
  address_tree: order_by
  cod_order_id: order_by
  cod_secret_code: order_by
  created_at: order_by
  customer_address: order_by
  customer_name: order_by
  customer_phone_number: order_by
  deleted_at: order_by
  expected_delivery_time: order_by
  resource_path: order_by
  status: order_by
  student_order_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "cod_orders"
"""
input cod_orders_pk_columns_input {
  cod_order_id: String!
}

"""
select columns of table "cod_orders"
"""
enum cod_orders_select_column {
  """column name"""
  address_tree

  """column name"""
  cod_order_id

  """column name"""
  cod_secret_code

  """column name"""
  created_at

  """column name"""
  customer_address

  """column name"""
  customer_name

  """column name"""
  customer_phone_number

  """column name"""
  deleted_at

  """column name"""
  expected_delivery_time

  """column name"""
  resource_path

  """column name"""
  status

  """column name"""
  student_order_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "cod_orders"
"""
input cod_orders_set_input {
  address_tree: _text
  cod_order_id: String
  cod_secret_code: String
  created_at: timestamptz
  customer_address: String
  customer_name: String
  customer_phone_number: String
  deleted_at: timestamptz
  expected_delivery_time: timestamptz
  resource_path: String
  status: String
  student_order_id: Int
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type cod_orders_stddev_fields {
  student_order_id: Float
}

"""
order by stddev() on columns of table "cod_orders"
"""
input cod_orders_stddev_order_by {
  student_order_id: order_by
}

"""aggregate stddev_pop on columns"""
type cod_orders_stddev_pop_fields {
  student_order_id: Float
}

"""
order by stddev_pop() on columns of table "cod_orders"
"""
input cod_orders_stddev_pop_order_by {
  student_order_id: order_by
}

"""aggregate stddev_samp on columns"""
type cod_orders_stddev_samp_fields {
  student_order_id: Float
}

"""
order by stddev_samp() on columns of table "cod_orders"
"""
input cod_orders_stddev_samp_order_by {
  student_order_id: order_by
}

"""aggregate sum on columns"""
type cod_orders_sum_fields {
  student_order_id: Int
}

"""
order by sum() on columns of table "cod_orders"
"""
input cod_orders_sum_order_by {
  student_order_id: order_by
}

"""
update columns of table "cod_orders"
"""
enum cod_orders_update_column {
  """column name"""
  address_tree

  """column name"""
  cod_order_id

  """column name"""
  cod_secret_code

  """column name"""
  created_at

  """column name"""
  customer_address

  """column name"""
  customer_name

  """column name"""
  customer_phone_number

  """column name"""
  deleted_at

  """column name"""
  expected_delivery_time

  """column name"""
  resource_path

  """column name"""
  status

  """column name"""
  student_order_id

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type cod_orders_var_pop_fields {
  student_order_id: Float
}

"""
order by var_pop() on columns of table "cod_orders"
"""
input cod_orders_var_pop_order_by {
  student_order_id: order_by
}

"""aggregate var_samp on columns"""
type cod_orders_var_samp_fields {
  student_order_id: Float
}

"""
order by var_samp() on columns of table "cod_orders"
"""
input cod_orders_var_samp_order_by {
  student_order_id: order_by
}

"""aggregate variance on columns"""
type cod_orders_variance_fields {
  student_order_id: Float
}

"""
order by variance() on columns of table "cod_orders"
"""
input cod_orders_variance_order_by {
  student_order_id: order_by
}

"""
columns and relationships of "conversion_tasks"
"""
type conversion_tasks {
  conversion_response(
    """JSON select path"""
    path: String
  ): jsonb
  created_at: timestamptz!
  resource_path: String
  resource_url: String!
  status: String!
  task_uuid: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "conversion_tasks"
"""
type conversion_tasks_aggregate {
  aggregate: conversion_tasks_aggregate_fields
  nodes: [conversion_tasks!]!
}

"""
aggregate fields of "conversion_tasks"
"""
type conversion_tasks_aggregate_fields {
  count(columns: [conversion_tasks_select_column!], distinct: Boolean): Int
  max: conversion_tasks_max_fields
  min: conversion_tasks_min_fields
}

"""
order by aggregate values of table "conversion_tasks"
"""
input conversion_tasks_aggregate_order_by {
  count: order_by
  max: conversion_tasks_max_order_by
  min: conversion_tasks_min_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input conversion_tasks_append_input {
  conversion_response: jsonb
}

"""
input type for inserting array relation for remote table "conversion_tasks"
"""
input conversion_tasks_arr_rel_insert_input {
  data: [conversion_tasks_insert_input!]!
  on_conflict: conversion_tasks_on_conflict
}

"""
Boolean expression to filter rows from the table "conversion_tasks". All fields are combined with a logical 'AND'.
"""
input conversion_tasks_bool_exp {
  _and: [conversion_tasks_bool_exp]
  _not: conversion_tasks_bool_exp
  _or: [conversion_tasks_bool_exp]
  conversion_response: jsonb_comparison_exp
  created_at: timestamptz_comparison_exp
  resource_path: String_comparison_exp
  resource_url: String_comparison_exp
  status: String_comparison_exp
  task_uuid: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "conversion_tasks"
"""
enum conversion_tasks_constraint {
  """unique or primary key constraint"""
  conversion_tasks_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input conversion_tasks_delete_at_path_input {
  conversion_response: [String]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input conversion_tasks_delete_elem_input {
  conversion_response: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input conversion_tasks_delete_key_input {
  conversion_response: String
}

"""
input type for inserting data into table "conversion_tasks"
"""
input conversion_tasks_insert_input {
  conversion_response: jsonb
  created_at: timestamptz
  resource_path: String
  resource_url: String
  status: String
  task_uuid: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type conversion_tasks_max_fields {
  created_at: timestamptz
  resource_path: String
  resource_url: String
  status: String
  task_uuid: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "conversion_tasks"
"""
input conversion_tasks_max_order_by {
  created_at: order_by
  resource_path: order_by
  resource_url: order_by
  status: order_by
  task_uuid: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type conversion_tasks_min_fields {
  created_at: timestamptz
  resource_path: String
  resource_url: String
  status: String
  task_uuid: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "conversion_tasks"
"""
input conversion_tasks_min_order_by {
  created_at: order_by
  resource_path: order_by
  resource_url: order_by
  status: order_by
  task_uuid: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "conversion_tasks"
"""
type conversion_tasks_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [conversion_tasks!]!
}

"""
input type for inserting object relation for remote table "conversion_tasks"
"""
input conversion_tasks_obj_rel_insert_input {
  data: conversion_tasks_insert_input!
  on_conflict: conversion_tasks_on_conflict
}

"""
on conflict condition type for table "conversion_tasks"
"""
input conversion_tasks_on_conflict {
  constraint: conversion_tasks_constraint!
  update_columns: [conversion_tasks_update_column!]!
  where: conversion_tasks_bool_exp
}

"""
ordering options when selecting data from "conversion_tasks"
"""
input conversion_tasks_order_by {
  conversion_response: order_by
  created_at: order_by
  resource_path: order_by
  resource_url: order_by
  status: order_by
  task_uuid: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "conversion_tasks"
"""
input conversion_tasks_pk_columns_input {
  task_uuid: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input conversion_tasks_prepend_input {
  conversion_response: jsonb
}

"""
select columns of table "conversion_tasks"
"""
enum conversion_tasks_select_column {
  """column name"""
  conversion_response

  """column name"""
  created_at

  """column name"""
  resource_path

  """column name"""
  resource_url

  """column name"""
  status

  """column name"""
  task_uuid

  """column name"""
  updated_at
}

"""
input type for updating data in table "conversion_tasks"
"""
input conversion_tasks_set_input {
  conversion_response: jsonb
  created_at: timestamptz
  resource_path: String
  resource_url: String
  status: String
  task_uuid: String
  updated_at: timestamptz
}

"""
update columns of table "conversion_tasks"
"""
enum conversion_tasks_update_column {
  """column name"""
  conversion_response

  """column name"""
  created_at

  """column name"""
  resource_path

  """column name"""
  resource_url

  """column name"""
  status

  """column name"""
  task_uuid

  """column name"""
  updated_at
}

"""
columns and relationships of "course_access_paths"
"""
type course_access_paths {
  """An object relationship"""
  course: courses!
  course_id: String!
  created_at: timestamptz!
  deleted_at: timestamptz

  """An object relationship"""
  location: locations!
  location_id: String!
  resource_path: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "course_access_paths"
"""
type course_access_paths_aggregate {
  aggregate: course_access_paths_aggregate_fields
  nodes: [course_access_paths!]!
}

"""
aggregate fields of "course_access_paths"
"""
type course_access_paths_aggregate_fields {
  count(columns: [course_access_paths_select_column!], distinct: Boolean): Int
  max: course_access_paths_max_fields
  min: course_access_paths_min_fields
}

"""
order by aggregate values of table "course_access_paths"
"""
input course_access_paths_aggregate_order_by {
  count: order_by
  max: course_access_paths_max_order_by
  min: course_access_paths_min_order_by
}

"""
input type for inserting array relation for remote table "course_access_paths"
"""
input course_access_paths_arr_rel_insert_input {
  data: [course_access_paths_insert_input!]!
  on_conflict: course_access_paths_on_conflict
}

"""
Boolean expression to filter rows from the table "course_access_paths". All fields are combined with a logical 'AND'.
"""
input course_access_paths_bool_exp {
  _and: [course_access_paths_bool_exp]
  _not: course_access_paths_bool_exp
  _or: [course_access_paths_bool_exp]
  course: courses_bool_exp
  course_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  location: locations_bool_exp
  location_id: String_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "course_access_paths"
"""
enum course_access_paths_constraint {
  """unique or primary key constraint"""
  course_access_paths_pk
}

"""
input type for inserting data into table "course_access_paths"
"""
input course_access_paths_insert_input {
  course: courses_obj_rel_insert_input
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  location: locations_obj_rel_insert_input
  location_id: String
  resource_path: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type course_access_paths_max_fields {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "course_access_paths"
"""
input course_access_paths_max_order_by {
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  location_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type course_access_paths_min_fields {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "course_access_paths"
"""
input course_access_paths_min_order_by {
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  location_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "course_access_paths"
"""
type course_access_paths_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [course_access_paths!]!
}

"""
input type for inserting object relation for remote table "course_access_paths"
"""
input course_access_paths_obj_rel_insert_input {
  data: course_access_paths_insert_input!
  on_conflict: course_access_paths_on_conflict
}

"""
on conflict condition type for table "course_access_paths"
"""
input course_access_paths_on_conflict {
  constraint: course_access_paths_constraint!
  update_columns: [course_access_paths_update_column!]!
  where: course_access_paths_bool_exp
}

"""
ordering options when selecting data from "course_access_paths"
"""
input course_access_paths_order_by {
  course: courses_order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  location: locations_order_by
  location_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "course_access_paths"
"""
input course_access_paths_pk_columns_input {
  course_id: String!
  location_id: String!
}

"""
select columns of table "course_access_paths"
"""
enum course_access_paths_select_column {
  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  location_id

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "course_access_paths"
"""
input course_access_paths_set_input {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
update columns of table "course_access_paths"
"""
enum course_access_paths_update_column {
  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  location_id

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
columns and relationships of "courses"
"""
type courses {
  country: String

  """An array relationship"""
  course_access_paths(
    """distinct select on columns"""
    distinct_on: [course_access_paths_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_access_paths_order_by!]

    """filter the rows returned"""
    where: course_access_paths_bool_exp
  ): [course_access_paths!]!

  """An aggregated array relationship"""
  course_access_paths_aggregate(
    """distinct select on columns"""
    distinct_on: [course_access_paths_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_access_paths_order_by!]

    """filter the rows returned"""
    where: course_access_paths_bool_exp
  ): course_access_paths_aggregate!

  """An array relationship"""
  course_books(
    """distinct select on columns"""
    distinct_on: [courses_books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_books_order_by!]

    """filter the rows returned"""
    where: courses_books_bool_exp
  ): [courses_books!]!

  """An aggregated array relationship"""
  course_books_aggregate(
    """distinct select on columns"""
    distinct_on: [courses_books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_books_order_by!]

    """filter the rows returned"""
    where: courses_books_bool_exp
  ): courses_books_aggregate!

  """An array relationship"""
  course_classes(
    """distinct select on columns"""
    distinct_on: [courses_classes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_classes_order_by!]

    """filter the rows returned"""
    where: courses_classes_bool_exp
  ): [courses_classes!]!

  """An aggregated array relationship"""
  course_classes_aggregate(
    """distinct select on columns"""
    distinct_on: [courses_classes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_classes_order_by!]

    """filter the rows returned"""
    where: courses_classes_bool_exp
  ): courses_classes_aggregate!
  course_id: String!

  """An array relationship"""
  course_lessons(
    """distinct select on columns"""
    distinct_on: [lessons_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_order_by!]

    """filter the rows returned"""
    where: lessons_bool_exp
  ): [lessons!]!

  """An aggregated array relationship"""
  course_lessons_aggregate(
    """distinct select on columns"""
    distinct_on: [lessons_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_order_by!]

    """filter the rows returned"""
    where: lessons_bool_exp
  ): lessons_aggregate!
  course_type: String
  created_at: timestamptz!
  deleted_at: timestamptz
  display_order: smallint
  end_date: timestamptz
  grade: smallint
  icon: String

  """An array relationship"""
  lesson_groups(
    """distinct select on columns"""
    distinct_on: [lesson_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_groups_order_by!]

    """filter the rows returned"""
    where: lesson_groups_bool_exp
  ): [lesson_groups!]!

  """An aggregated array relationship"""
  lesson_groups_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_groups_order_by!]

    """filter the rows returned"""
    where: lesson_groups_bool_exp
  ): lesson_groups_aggregate!

  """An array relationship"""
  lesson_members(
    """distinct select on columns"""
    distinct_on: [lesson_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_members_order_by!]

    """filter the rows returned"""
    where: lesson_members_bool_exp
  ): [lesson_members!]!

  """An aggregated array relationship"""
  lesson_members_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_members_order_by!]

    """filter the rows returned"""
    where: lesson_members_bool_exp
  ): lesson_members_aggregate!

  """An array relationship"""
  lessons_courses(
    """distinct select on columns"""
    distinct_on: [lessons_courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_courses_order_by!]

    """filter the rows returned"""
    where: lessons_courses_bool_exp
  ): [lessons_courses!]!

  """An aggregated array relationship"""
  lessons_courses_aggregate(
    """distinct select on columns"""
    distinct_on: [lessons_courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_courses_order_by!]

    """filter the rows returned"""
    where: lessons_courses_bool_exp
  ): lessons_courses_aggregate!
  name: String!
  preset_study_plan_id: String
  resource_path: String!

  """An object relationship"""
  school: schools!
  school_id: Int!
  start_date: timestamptz
  status: String
  subject: String

  """An array relationship"""
  teacher(
    """distinct select on columns"""
    distinct_on: [teacher_by_school_id_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_by_school_id_order_by!]

    """filter the rows returned"""
    where: teacher_by_school_id_bool_exp
  ): [teacher_by_school_id!]!

  """An aggregated array relationship"""
  teacher_aggregate(
    """distinct select on columns"""
    distinct_on: [teacher_by_school_id_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_by_school_id_order_by!]

    """filter the rows returned"""
    where: teacher_by_school_id_bool_exp
  ): teacher_by_school_id_aggregate!
  teacher_ids: _text
  teaching_method: String
  updated_at: timestamptz!
}

"""
aggregated selection of "courses"
"""
type courses_aggregate {
  aggregate: courses_aggregate_fields
  nodes: [courses!]!
}

"""
aggregate fields of "courses"
"""
type courses_aggregate_fields {
  avg: courses_avg_fields
  count(columns: [courses_select_column!], distinct: Boolean): Int
  max: courses_max_fields
  min: courses_min_fields
  stddev: courses_stddev_fields
  stddev_pop: courses_stddev_pop_fields
  stddev_samp: courses_stddev_samp_fields
  sum: courses_sum_fields
  var_pop: courses_var_pop_fields
  var_samp: courses_var_samp_fields
  variance: courses_variance_fields
}

"""
order by aggregate values of table "courses"
"""
input courses_aggregate_order_by {
  avg: courses_avg_order_by
  count: order_by
  max: courses_max_order_by
  min: courses_min_order_by
  stddev: courses_stddev_order_by
  stddev_pop: courses_stddev_pop_order_by
  stddev_samp: courses_stddev_samp_order_by
  sum: courses_sum_order_by
  var_pop: courses_var_pop_order_by
  var_samp: courses_var_samp_order_by
  variance: courses_variance_order_by
}

"""
input type for inserting array relation for remote table "courses"
"""
input courses_arr_rel_insert_input {
  data: [courses_insert_input!]!
  on_conflict: courses_on_conflict
}

"""aggregate avg on columns"""
type courses_avg_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by avg() on columns of table "courses"
"""
input courses_avg_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
columns and relationships of "courses_books"
"""
type courses_books {
  book_id: String!

  """An array relationship"""
  books(
    """distinct select on columns"""
    distinct_on: [books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_order_by!]

    """filter the rows returned"""
    where: books_bool_exp
  ): [books!]!

  """An aggregated array relationship"""
  books_aggregate(
    """distinct select on columns"""
    distinct_on: [books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_order_by!]

    """filter the rows returned"""
    where: books_bool_exp
  ): books_aggregate!

  """An object relationship"""
  course: courses
  course_id: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  resource_path: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "courses_books"
"""
type courses_books_aggregate {
  aggregate: courses_books_aggregate_fields
  nodes: [courses_books!]!
}

"""
aggregate fields of "courses_books"
"""
type courses_books_aggregate_fields {
  count(columns: [courses_books_select_column!], distinct: Boolean): Int
  max: courses_books_max_fields
  min: courses_books_min_fields
}

"""
order by aggregate values of table "courses_books"
"""
input courses_books_aggregate_order_by {
  count: order_by
  max: courses_books_max_order_by
  min: courses_books_min_order_by
}

"""
input type for inserting array relation for remote table "courses_books"
"""
input courses_books_arr_rel_insert_input {
  data: [courses_books_insert_input!]!
  on_conflict: courses_books_on_conflict
}

"""
Boolean expression to filter rows from the table "courses_books". All fields are combined with a logical 'AND'.
"""
input courses_books_bool_exp {
  _and: [courses_books_bool_exp]
  _not: courses_books_bool_exp
  _or: [courses_books_bool_exp]
  book_id: String_comparison_exp
  books: books_bool_exp
  course: courses_bool_exp
  course_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "courses_books"
"""
enum courses_books_constraint {
  """unique or primary key constraint"""
  courses_books_pk
}

"""
input type for inserting data into table "courses_books"
"""
input courses_books_insert_input {
  book_id: String
  books: books_arr_rel_insert_input
  course: courses_obj_rel_insert_input
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type courses_books_max_fields {
  book_id: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "courses_books"
"""
input courses_books_max_order_by {
  book_id: order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type courses_books_min_fields {
  book_id: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "courses_books"
"""
input courses_books_min_order_by {
  book_id: order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "courses_books"
"""
type courses_books_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [courses_books!]!
}

"""
input type for inserting object relation for remote table "courses_books"
"""
input courses_books_obj_rel_insert_input {
  data: courses_books_insert_input!
  on_conflict: courses_books_on_conflict
}

"""
on conflict condition type for table "courses_books"
"""
input courses_books_on_conflict {
  constraint: courses_books_constraint!
  update_columns: [courses_books_update_column!]!
  where: courses_books_bool_exp
}

"""
ordering options when selecting data from "courses_books"
"""
input courses_books_order_by {
  book_id: order_by
  books_aggregate: books_aggregate_order_by
  course: courses_order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "courses_books"
"""
input courses_books_pk_columns_input {
  book_id: String!
  course_id: String!
}

"""
select columns of table "courses_books"
"""
enum courses_books_select_column {
  """column name"""
  book_id

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "courses_books"
"""
input courses_books_set_input {
  book_id: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
}

"""
update columns of table "courses_books"
"""
enum courses_books_update_column {
  """column name"""
  book_id

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
Boolean expression to filter rows from the table "courses". All fields are combined with a logical 'AND'.
"""
input courses_bool_exp {
  _and: [courses_bool_exp]
  _not: courses_bool_exp
  _or: [courses_bool_exp]
  country: String_comparison_exp
  course_access_paths: course_access_paths_bool_exp
  course_books: courses_books_bool_exp
  course_classes: courses_classes_bool_exp
  course_id: String_comparison_exp
  course_lessons: lessons_bool_exp
  course_type: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  display_order: smallint_comparison_exp
  end_date: timestamptz_comparison_exp
  grade: smallint_comparison_exp
  icon: String_comparison_exp
  lesson_groups: lesson_groups_bool_exp
  lesson_members: lesson_members_bool_exp
  lessons_courses: lessons_courses_bool_exp
  name: String_comparison_exp
  preset_study_plan_id: String_comparison_exp
  resource_path: String_comparison_exp
  school: schools_bool_exp
  school_id: Int_comparison_exp
  start_date: timestamptz_comparison_exp
  status: String_comparison_exp
  subject: String_comparison_exp
  teacher: teacher_by_school_id_bool_exp
  teacher_ids: _text_comparison_exp
  teaching_method: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
columns and relationships of "courses_classes"
"""
type courses_classes {
  """An object relationship"""
  class: classes
  class_id: Int!

  """An object relationship"""
  course: courses
  course_id: String!
  created_at: timestamptz!
  deleted_at: timestamptz

  """An array relationship"""
  members(
    """distinct select on columns"""
    distinct_on: [class_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_members_order_by!]

    """filter the rows returned"""
    where: class_members_bool_exp
  ): [class_members!]!

  """An aggregated array relationship"""
  members_aggregate(
    """distinct select on columns"""
    distinct_on: [class_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_members_order_by!]

    """filter the rows returned"""
    where: class_members_bool_exp
  ): class_members_aggregate!
  resource_path: String!
  status: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "courses_classes"
"""
type courses_classes_aggregate {
  aggregate: courses_classes_aggregate_fields
  nodes: [courses_classes!]!
}

"""
aggregate fields of "courses_classes"
"""
type courses_classes_aggregate_fields {
  avg: courses_classes_avg_fields
  count(columns: [courses_classes_select_column!], distinct: Boolean): Int
  max: courses_classes_max_fields
  min: courses_classes_min_fields
  stddev: courses_classes_stddev_fields
  stddev_pop: courses_classes_stddev_pop_fields
  stddev_samp: courses_classes_stddev_samp_fields
  sum: courses_classes_sum_fields
  var_pop: courses_classes_var_pop_fields
  var_samp: courses_classes_var_samp_fields
  variance: courses_classes_variance_fields
}

"""
order by aggregate values of table "courses_classes"
"""
input courses_classes_aggregate_order_by {
  avg: courses_classes_avg_order_by
  count: order_by
  max: courses_classes_max_order_by
  min: courses_classes_min_order_by
  stddev: courses_classes_stddev_order_by
  stddev_pop: courses_classes_stddev_pop_order_by
  stddev_samp: courses_classes_stddev_samp_order_by
  sum: courses_classes_sum_order_by
  var_pop: courses_classes_var_pop_order_by
  var_samp: courses_classes_var_samp_order_by
  variance: courses_classes_variance_order_by
}

"""
input type for inserting array relation for remote table "courses_classes"
"""
input courses_classes_arr_rel_insert_input {
  data: [courses_classes_insert_input!]!
  on_conflict: courses_classes_on_conflict
}

"""aggregate avg on columns"""
type courses_classes_avg_fields {
  class_id: Float
}

"""
order by avg() on columns of table "courses_classes"
"""
input courses_classes_avg_order_by {
  class_id: order_by
}

"""
Boolean expression to filter rows from the table "courses_classes". All fields are combined with a logical 'AND'.
"""
input courses_classes_bool_exp {
  _and: [courses_classes_bool_exp]
  _not: courses_classes_bool_exp
  _or: [courses_classes_bool_exp]
  class: classes_bool_exp
  class_id: Int_comparison_exp
  course: courses_bool_exp
  course_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  members: class_members_bool_exp
  resource_path: String_comparison_exp
  status: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "courses_classes"
"""
enum courses_classes_constraint {
  """unique or primary key constraint"""
  courses_classes_pk
}

"""
input type for incrementing integer column in table "courses_classes"
"""
input courses_classes_inc_input {
  class_id: Int
}

"""
input type for inserting data into table "courses_classes"
"""
input courses_classes_insert_input {
  class: classes_obj_rel_insert_input
  class_id: Int
  course: courses_obj_rel_insert_input
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  members: class_members_arr_rel_insert_input
  resource_path: String
  status: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type courses_classes_max_fields {
  class_id: Int
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  status: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "courses_classes"
"""
input courses_classes_max_order_by {
  class_id: order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  status: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type courses_classes_min_fields {
  class_id: Int
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  status: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "courses_classes"
"""
input courses_classes_min_order_by {
  class_id: order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  status: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "courses_classes"
"""
type courses_classes_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [courses_classes!]!
}

"""
input type for inserting object relation for remote table "courses_classes"
"""
input courses_classes_obj_rel_insert_input {
  data: courses_classes_insert_input!
  on_conflict: courses_classes_on_conflict
}

"""
on conflict condition type for table "courses_classes"
"""
input courses_classes_on_conflict {
  constraint: courses_classes_constraint!
  update_columns: [courses_classes_update_column!]!
  where: courses_classes_bool_exp
}

"""
ordering options when selecting data from "courses_classes"
"""
input courses_classes_order_by {
  class: classes_order_by
  class_id: order_by
  course: courses_order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  members_aggregate: class_members_aggregate_order_by
  resource_path: order_by
  status: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "courses_classes"
"""
input courses_classes_pk_columns_input {
  class_id: Int!
  course_id: String!
}

"""
select columns of table "courses_classes"
"""
enum courses_classes_select_column {
  """column name"""
  class_id

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  status

  """column name"""
  updated_at
}

"""
input type for updating data in table "courses_classes"
"""
input courses_classes_set_input {
  class_id: Int
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  status: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type courses_classes_stddev_fields {
  class_id: Float
}

"""
order by stddev() on columns of table "courses_classes"
"""
input courses_classes_stddev_order_by {
  class_id: order_by
}

"""aggregate stddev_pop on columns"""
type courses_classes_stddev_pop_fields {
  class_id: Float
}

"""
order by stddev_pop() on columns of table "courses_classes"
"""
input courses_classes_stddev_pop_order_by {
  class_id: order_by
}

"""aggregate stddev_samp on columns"""
type courses_classes_stddev_samp_fields {
  class_id: Float
}

"""
order by stddev_samp() on columns of table "courses_classes"
"""
input courses_classes_stddev_samp_order_by {
  class_id: order_by
}

"""aggregate sum on columns"""
type courses_classes_sum_fields {
  class_id: Int
}

"""
order by sum() on columns of table "courses_classes"
"""
input courses_classes_sum_order_by {
  class_id: order_by
}

"""
update columns of table "courses_classes"
"""
enum courses_classes_update_column {
  """column name"""
  class_id

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  status

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type courses_classes_var_pop_fields {
  class_id: Float
}

"""
order by var_pop() on columns of table "courses_classes"
"""
input courses_classes_var_pop_order_by {
  class_id: order_by
}

"""aggregate var_samp on columns"""
type courses_classes_var_samp_fields {
  class_id: Float
}

"""
order by var_samp() on columns of table "courses_classes"
"""
input courses_classes_var_samp_order_by {
  class_id: order_by
}

"""aggregate variance on columns"""
type courses_classes_variance_fields {
  class_id: Float
}

"""
order by variance() on columns of table "courses_classes"
"""
input courses_classes_variance_order_by {
  class_id: order_by
}

"""
unique or primary key constraints on table "courses"
"""
enum courses_constraint {
  """unique or primary key constraint"""
  courses_pk
}

"""
input type for incrementing integer column in table "courses"
"""
input courses_inc_input {
  display_order: smallint
  grade: smallint
  school_id: Int
}

"""
input type for inserting data into table "courses"
"""
input courses_insert_input {
  country: String
  course_access_paths: course_access_paths_arr_rel_insert_input
  course_books: courses_books_arr_rel_insert_input
  course_classes: courses_classes_arr_rel_insert_input
  course_id: String
  course_lessons: lessons_arr_rel_insert_input
  course_type: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  end_date: timestamptz
  grade: smallint
  icon: String
  lesson_groups: lesson_groups_arr_rel_insert_input
  lesson_members: lesson_members_arr_rel_insert_input
  lessons_courses: lessons_courses_arr_rel_insert_input
  name: String
  preset_study_plan_id: String
  resource_path: String
  school: schools_obj_rel_insert_input
  school_id: Int
  start_date: timestamptz
  status: String
  subject: String
  teacher_ids: _text
  teaching_method: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type courses_max_fields {
  country: String
  course_id: String
  course_type: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  end_date: timestamptz
  grade: smallint
  icon: String
  name: String
  preset_study_plan_id: String
  resource_path: String
  school_id: Int
  start_date: timestamptz
  status: String
  subject: String
  teaching_method: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "courses"
"""
input courses_max_order_by {
  country: order_by
  course_id: order_by
  course_type: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  end_date: order_by
  grade: order_by
  icon: order_by
  name: order_by
  preset_study_plan_id: order_by
  resource_path: order_by
  school_id: order_by
  start_date: order_by
  status: order_by
  subject: order_by
  teaching_method: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type courses_min_fields {
  country: String
  course_id: String
  course_type: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  end_date: timestamptz
  grade: smallint
  icon: String
  name: String
  preset_study_plan_id: String
  resource_path: String
  school_id: Int
  start_date: timestamptz
  status: String
  subject: String
  teaching_method: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "courses"
"""
input courses_min_order_by {
  country: order_by
  course_id: order_by
  course_type: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  end_date: order_by
  grade: order_by
  icon: order_by
  name: order_by
  preset_study_plan_id: order_by
  resource_path: order_by
  school_id: order_by
  start_date: order_by
  status: order_by
  subject: order_by
  teaching_method: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "courses"
"""
type courses_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [courses!]!
}

"""
input type for inserting object relation for remote table "courses"
"""
input courses_obj_rel_insert_input {
  data: courses_insert_input!
  on_conflict: courses_on_conflict
}

"""
on conflict condition type for table "courses"
"""
input courses_on_conflict {
  constraint: courses_constraint!
  update_columns: [courses_update_column!]!
  where: courses_bool_exp
}

"""
ordering options when selecting data from "courses"
"""
input courses_order_by {
  country: order_by
  course_access_paths_aggregate: course_access_paths_aggregate_order_by
  course_books_aggregate: courses_books_aggregate_order_by
  course_classes_aggregate: courses_classes_aggregate_order_by
  course_id: order_by
  course_lessons_aggregate: lessons_aggregate_order_by
  course_type: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  end_date: order_by
  grade: order_by
  icon: order_by
  lesson_groups_aggregate: lesson_groups_aggregate_order_by
  lesson_members_aggregate: lesson_members_aggregate_order_by
  lessons_courses_aggregate: lessons_courses_aggregate_order_by
  name: order_by
  preset_study_plan_id: order_by
  resource_path: order_by
  school: schools_order_by
  school_id: order_by
  start_date: order_by
  status: order_by
  subject: order_by
  teacher_aggregate: teacher_by_school_id_aggregate_order_by
  teacher_ids: order_by
  teaching_method: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "courses"
"""
input courses_pk_columns_input {
  course_id: String!
}

"""
select columns of table "courses"
"""
enum courses_select_column {
  """column name"""
  country

  """column name"""
  course_id

  """column name"""
  course_type

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  end_date

  """column name"""
  grade

  """column name"""
  icon

  """column name"""
  name

  """column name"""
  preset_study_plan_id

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  start_date

  """column name"""
  status

  """column name"""
  subject

  """column name"""
  teacher_ids

  """column name"""
  teaching_method

  """column name"""
  updated_at
}

"""
input type for updating data in table "courses"
"""
input courses_set_input {
  country: String
  course_id: String
  course_type: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  end_date: timestamptz
  grade: smallint
  icon: String
  name: String
  preset_study_plan_id: String
  resource_path: String
  school_id: Int
  start_date: timestamptz
  status: String
  subject: String
  teacher_ids: _text
  teaching_method: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type courses_stddev_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev() on columns of table "courses"
"""
input courses_stddev_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type courses_stddev_pop_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev_pop() on columns of table "courses"
"""
input courses_stddev_pop_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type courses_stddev_samp_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev_samp() on columns of table "courses"
"""
input courses_stddev_samp_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate sum on columns"""
type courses_sum_fields {
  display_order: smallint
  grade: smallint
  school_id: Int
}

"""
order by sum() on columns of table "courses"
"""
input courses_sum_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
update columns of table "courses"
"""
enum courses_update_column {
  """column name"""
  country

  """column name"""
  course_id

  """column name"""
  course_type

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  end_date

  """column name"""
  grade

  """column name"""
  icon

  """column name"""
  name

  """column name"""
  preset_study_plan_id

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  start_date

  """column name"""
  status

  """column name"""
  subject

  """column name"""
  teacher_ids

  """column name"""
  teaching_method

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type courses_var_pop_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by var_pop() on columns of table "courses"
"""
input courses_var_pop_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate var_samp on columns"""
type courses_var_samp_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by var_samp() on columns of table "courses"
"""
input courses_var_samp_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate variance on columns"""
type courses_variance_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by variance() on columns of table "courses"
"""
input courses_variance_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

scalar date

"""
expression to compare columns of type date. All fields are combined with logical 'AND'.
"""
input date_comparison_exp {
  _eq: date
  _gt: date
  _gte: date
  _in: [date!]
  _is_null: Boolean
  _lt: date
  _lte: date
  _neq: date
  _nin: [date!]
}

"""
columns and relationships of "districts"
"""
type districts {
  """An object relationship"""
  city: cities!
  city_id: Int!
  country: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  district_id: Int!
  name: String!
  resource_path: String

  """An array relationship"""
  schools(
    """distinct select on columns"""
    distinct_on: [schools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schools_order_by!]

    """filter the rows returned"""
    where: schools_bool_exp
  ): [schools!]!

  """An aggregated array relationship"""
  schools_aggregate(
    """distinct select on columns"""
    distinct_on: [schools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schools_order_by!]

    """filter the rows returned"""
    where: schools_bool_exp
  ): schools_aggregate!
  updated_at: timestamptz!
}

"""
aggregated selection of "districts"
"""
type districts_aggregate {
  aggregate: districts_aggregate_fields
  nodes: [districts!]!
}

"""
aggregate fields of "districts"
"""
type districts_aggregate_fields {
  avg: districts_avg_fields
  count(columns: [districts_select_column!], distinct: Boolean): Int
  max: districts_max_fields
  min: districts_min_fields
  stddev: districts_stddev_fields
  stddev_pop: districts_stddev_pop_fields
  stddev_samp: districts_stddev_samp_fields
  sum: districts_sum_fields
  var_pop: districts_var_pop_fields
  var_samp: districts_var_samp_fields
  variance: districts_variance_fields
}

"""
order by aggregate values of table "districts"
"""
input districts_aggregate_order_by {
  avg: districts_avg_order_by
  count: order_by
  max: districts_max_order_by
  min: districts_min_order_by
  stddev: districts_stddev_order_by
  stddev_pop: districts_stddev_pop_order_by
  stddev_samp: districts_stddev_samp_order_by
  sum: districts_sum_order_by
  var_pop: districts_var_pop_order_by
  var_samp: districts_var_samp_order_by
  variance: districts_variance_order_by
}

"""
input type for inserting array relation for remote table "districts"
"""
input districts_arr_rel_insert_input {
  data: [districts_insert_input!]!
  on_conflict: districts_on_conflict
}

"""aggregate avg on columns"""
type districts_avg_fields {
  city_id: Float
  district_id: Float
}

"""
order by avg() on columns of table "districts"
"""
input districts_avg_order_by {
  city_id: order_by
  district_id: order_by
}

"""
Boolean expression to filter rows from the table "districts". All fields are combined with a logical 'AND'.
"""
input districts_bool_exp {
  _and: [districts_bool_exp]
  _not: districts_bool_exp
  _or: [districts_bool_exp]
  city: cities_bool_exp
  city_id: Int_comparison_exp
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  district_id: Int_comparison_exp
  name: String_comparison_exp
  resource_path: String_comparison_exp
  schools: schools_bool_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "districts"
"""
enum districts_constraint {
  """unique or primary key constraint"""
  district_pk

  """unique or primary key constraint"""
  district_un
}

"""
input type for incrementing integer column in table "districts"
"""
input districts_inc_input {
  city_id: Int
  district_id: Int
}

"""
input type for inserting data into table "districts"
"""
input districts_insert_input {
  city: cities_obj_rel_insert_input
  city_id: Int
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  district_id: Int
  name: String
  resource_path: String
  schools: schools_arr_rel_insert_input
  updated_at: timestamptz
}

"""aggregate max on columns"""
type districts_max_fields {
  city_id: Int
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  district_id: Int
  name: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "districts"
"""
input districts_max_order_by {
  city_id: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  district_id: order_by
  name: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type districts_min_fields {
  city_id: Int
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  district_id: Int
  name: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "districts"
"""
input districts_min_order_by {
  city_id: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  district_id: order_by
  name: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "districts"
"""
type districts_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [districts!]!
}

"""
input type for inserting object relation for remote table "districts"
"""
input districts_obj_rel_insert_input {
  data: districts_insert_input!
  on_conflict: districts_on_conflict
}

"""
on conflict condition type for table "districts"
"""
input districts_on_conflict {
  constraint: districts_constraint!
  update_columns: [districts_update_column!]!
  where: districts_bool_exp
}

"""
ordering options when selecting data from "districts"
"""
input districts_order_by {
  city: cities_order_by
  city_id: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  district_id: order_by
  name: order_by
  resource_path: order_by
  schools_aggregate: schools_aggregate_order_by
  updated_at: order_by
}

"""
primary key columns input for table: "districts"
"""
input districts_pk_columns_input {
  district_id: Int!
}

"""
select columns of table "districts"
"""
enum districts_select_column {
  """column name"""
  city_id

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  district_id

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "districts"
"""
input districts_set_input {
  city_id: Int
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  district_id: Int
  name: String
  resource_path: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type districts_stddev_fields {
  city_id: Float
  district_id: Float
}

"""
order by stddev() on columns of table "districts"
"""
input districts_stddev_order_by {
  city_id: order_by
  district_id: order_by
}

"""aggregate stddev_pop on columns"""
type districts_stddev_pop_fields {
  city_id: Float
  district_id: Float
}

"""
order by stddev_pop() on columns of table "districts"
"""
input districts_stddev_pop_order_by {
  city_id: order_by
  district_id: order_by
}

"""aggregate stddev_samp on columns"""
type districts_stddev_samp_fields {
  city_id: Float
  district_id: Float
}

"""
order by stddev_samp() on columns of table "districts"
"""
input districts_stddev_samp_order_by {
  city_id: order_by
  district_id: order_by
}

"""aggregate sum on columns"""
type districts_sum_fields {
  city_id: Int
  district_id: Int
}

"""
order by sum() on columns of table "districts"
"""
input districts_sum_order_by {
  city_id: order_by
  district_id: order_by
}

"""
update columns of table "districts"
"""
enum districts_update_column {
  """column name"""
  city_id

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  district_id

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type districts_var_pop_fields {
  city_id: Float
  district_id: Float
}

"""
order by var_pop() on columns of table "districts"
"""
input districts_var_pop_order_by {
  city_id: order_by
  district_id: order_by
}

"""aggregate var_samp on columns"""
type districts_var_samp_fields {
  city_id: Float
  district_id: Float
}

"""
order by var_samp() on columns of table "districts"
"""
input districts_var_samp_order_by {
  city_id: order_by
  district_id: order_by
}

"""aggregate variance on columns"""
type districts_variance_fields {
  city_id: Float
  district_id: Float
}

"""
order by variance() on columns of table "districts"
"""
input districts_variance_order_by {
  city_id: order_by
  district_id: order_by
}

input find_quiz_by_lo_id_args {
  id: String
}

input find_teacher_by_school_id_args {
  school_id: Int
}

scalar frequency

"""
expression to compare columns of type frequency. All fields are combined with logical 'AND'.
"""
input frequency_comparison_exp {
  _eq: frequency
  _gt: frequency
  _gte: frequency
  _in: [frequency!]
  _is_null: Boolean
  _lt: frequency
  _lte: frequency
  _neq: frequency
  _nin: [frequency!]
}

input get_locations_active_by_course_id_args {
  course: String
}

input get_locations_lowest_level_args {
  location_limit: Int
  location_offset: Int
  location_search_name: String
}

input get_partner_dynamic_form_field_values_by_student_args {
  report_id: String
  user_id: String
}

input get_previous_report_of_student_args {
  report_course_id: String
  report_id: String
  user_id: String
}

input get_previous_report_of_student_v2_args {
  report_course_id: String
  report_id: String
  report_lesson_id: String
  user_id: String
}

input get_previous_report_of_student_v3_args {
  report_course_id: String
  report_id: String
  report_lesson_id: String
  report_user_id: String
}

"""
columns and relationships of "granted_role"
"""
type granted_role {
  created_at: timestamptz!
  deleted_at: timestamptz

  """An array relationship"""
  granted_role_access_paths(
    """distinct select on columns"""
    distinct_on: [granted_role_access_path_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [granted_role_access_path_order_by!]

    """filter the rows returned"""
    where: granted_role_access_path_bool_exp
  ): [granted_role_access_path!]!

  """An aggregated array relationship"""
  granted_role_access_paths_aggregate(
    """distinct select on columns"""
    distinct_on: [granted_role_access_path_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [granted_role_access_path_order_by!]

    """filter the rows returned"""
    where: granted_role_access_path_bool_exp
  ): granted_role_access_path_aggregate!
  granted_role_id: String!
  resource_path: String!

  """An object relationship"""
  role: role!
  role_id: String!
  updated_at: timestamptz!

  """An object relationship"""
  user_group: user_group!
  user_group_id: String!
}

"""
columns and relationships of "granted_role_access_path"
"""
type granted_role_access_path {
  created_at: timestamptz!
  deleted_at: timestamptz

  """An object relationship"""
  granted_role: granted_role!
  granted_role_id: String!

  """An object relationship"""
  location: locations!
  location_id: String!
  resource_path: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "granted_role_access_path"
"""
type granted_role_access_path_aggregate {
  aggregate: granted_role_access_path_aggregate_fields
  nodes: [granted_role_access_path!]!
}

"""
aggregate fields of "granted_role_access_path"
"""
type granted_role_access_path_aggregate_fields {
  count(columns: [granted_role_access_path_select_column!], distinct: Boolean): Int
  max: granted_role_access_path_max_fields
  min: granted_role_access_path_min_fields
}

"""
order by aggregate values of table "granted_role_access_path"
"""
input granted_role_access_path_aggregate_order_by {
  count: order_by
  max: granted_role_access_path_max_order_by
  min: granted_role_access_path_min_order_by
}

"""
input type for inserting array relation for remote table "granted_role_access_path"
"""
input granted_role_access_path_arr_rel_insert_input {
  data: [granted_role_access_path_insert_input!]!
  on_conflict: granted_role_access_path_on_conflict
}

"""
Boolean expression to filter rows from the table "granted_role_access_path". All fields are combined with a logical 'AND'.
"""
input granted_role_access_path_bool_exp {
  _and: [granted_role_access_path_bool_exp]
  _not: granted_role_access_path_bool_exp
  _or: [granted_role_access_path_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  granted_role: granted_role_bool_exp
  granted_role_id: String_comparison_exp
  location: locations_bool_exp
  location_id: String_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "granted_role_access_path"
"""
enum granted_role_access_path_constraint {
  """unique or primary key constraint"""
  pk__granted_role_access_path
}

"""
input type for inserting data into table "granted_role_access_path"
"""
input granted_role_access_path_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  granted_role: granted_role_obj_rel_insert_input
  granted_role_id: String
  location: locations_obj_rel_insert_input
  location_id: String
  resource_path: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type granted_role_access_path_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  granted_role_id: String
  location_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "granted_role_access_path"
"""
input granted_role_access_path_max_order_by {
  created_at: order_by
  deleted_at: order_by
  granted_role_id: order_by
  location_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type granted_role_access_path_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  granted_role_id: String
  location_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "granted_role_access_path"
"""
input granted_role_access_path_min_order_by {
  created_at: order_by
  deleted_at: order_by
  granted_role_id: order_by
  location_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "granted_role_access_path"
"""
type granted_role_access_path_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [granted_role_access_path!]!
}

"""
input type for inserting object relation for remote table "granted_role_access_path"
"""
input granted_role_access_path_obj_rel_insert_input {
  data: granted_role_access_path_insert_input!
  on_conflict: granted_role_access_path_on_conflict
}

"""
on conflict condition type for table "granted_role_access_path"
"""
input granted_role_access_path_on_conflict {
  constraint: granted_role_access_path_constraint!
  update_columns: [granted_role_access_path_update_column!]!
  where: granted_role_access_path_bool_exp
}

"""
ordering options when selecting data from "granted_role_access_path"
"""
input granted_role_access_path_order_by {
  created_at: order_by
  deleted_at: order_by
  granted_role: granted_role_order_by
  granted_role_id: order_by
  location: locations_order_by
  location_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "granted_role_access_path"
"""
input granted_role_access_path_pk_columns_input {
  granted_role_id: String!
  location_id: String!
}

"""
select columns of table "granted_role_access_path"
"""
enum granted_role_access_path_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  granted_role_id

  """column name"""
  location_id

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "granted_role_access_path"
"""
input granted_role_access_path_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  granted_role_id: String
  location_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
update columns of table "granted_role_access_path"
"""
enum granted_role_access_path_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  granted_role_id

  """column name"""
  location_id

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
aggregated selection of "granted_role"
"""
type granted_role_aggregate {
  aggregate: granted_role_aggregate_fields
  nodes: [granted_role!]!
}

"""
aggregate fields of "granted_role"
"""
type granted_role_aggregate_fields {
  count(columns: [granted_role_select_column!], distinct: Boolean): Int
  max: granted_role_max_fields
  min: granted_role_min_fields
}

"""
order by aggregate values of table "granted_role"
"""
input granted_role_aggregate_order_by {
  count: order_by
  max: granted_role_max_order_by
  min: granted_role_min_order_by
}

"""
input type for inserting array relation for remote table "granted_role"
"""
input granted_role_arr_rel_insert_input {
  data: [granted_role_insert_input!]!
  on_conflict: granted_role_on_conflict
}

"""
Boolean expression to filter rows from the table "granted_role". All fields are combined with a logical 'AND'.
"""
input granted_role_bool_exp {
  _and: [granted_role_bool_exp]
  _not: granted_role_bool_exp
  _or: [granted_role_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  granted_role_access_paths: granted_role_access_path_bool_exp
  granted_role_id: String_comparison_exp
  resource_path: String_comparison_exp
  role: role_bool_exp
  role_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_group: user_group_bool_exp
  user_group_id: String_comparison_exp
}

"""
unique or primary key constraints on table "granted_role"
"""
enum granted_role_constraint {
  """unique or primary key constraint"""
  granted_role_granted_role_id_key

  """unique or primary key constraint"""
  pk__granted_role
}

"""
input type for inserting data into table "granted_role"
"""
input granted_role_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  granted_role_access_paths: granted_role_access_path_arr_rel_insert_input
  granted_role_id: String
  resource_path: String
  role: role_obj_rel_insert_input
  role_id: String
  updated_at: timestamptz
  user_group: user_group_obj_rel_insert_input
  user_group_id: String
}

"""aggregate max on columns"""
type granted_role_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  granted_role_id: String
  resource_path: String
  role_id: String
  updated_at: timestamptz
  user_group_id: String
}

"""
order by max() on columns of table "granted_role"
"""
input granted_role_max_order_by {
  created_at: order_by
  deleted_at: order_by
  granted_role_id: order_by
  resource_path: order_by
  role_id: order_by
  updated_at: order_by
  user_group_id: order_by
}

"""aggregate min on columns"""
type granted_role_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  granted_role_id: String
  resource_path: String
  role_id: String
  updated_at: timestamptz
  user_group_id: String
}

"""
order by min() on columns of table "granted_role"
"""
input granted_role_min_order_by {
  created_at: order_by
  deleted_at: order_by
  granted_role_id: order_by
  resource_path: order_by
  role_id: order_by
  updated_at: order_by
  user_group_id: order_by
}

"""
response of any mutation on the table "granted_role"
"""
type granted_role_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [granted_role!]!
}

"""
input type for inserting object relation for remote table "granted_role"
"""
input granted_role_obj_rel_insert_input {
  data: granted_role_insert_input!
  on_conflict: granted_role_on_conflict
}

"""
on conflict condition type for table "granted_role"
"""
input granted_role_on_conflict {
  constraint: granted_role_constraint!
  update_columns: [granted_role_update_column!]!
  where: granted_role_bool_exp
}

"""
ordering options when selecting data from "granted_role"
"""
input granted_role_order_by {
  created_at: order_by
  deleted_at: order_by
  granted_role_access_paths_aggregate: granted_role_access_path_aggregate_order_by
  granted_role_id: order_by
  resource_path: order_by
  role: role_order_by
  role_id: order_by
  updated_at: order_by
  user_group: user_group_order_by
  user_group_id: order_by
}

"""
primary key columns input for table: "granted_role"
"""
input granted_role_pk_columns_input {
  granted_role_id: String!
}

"""
select columns of table "granted_role"
"""
enum granted_role_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  granted_role_id

  """column name"""
  resource_path

  """column name"""
  role_id

  """column name"""
  updated_at

  """column name"""
  user_group_id
}

"""
input type for updating data in table "granted_role"
"""
input granted_role_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  granted_role_id: String
  resource_path: String
  role_id: String
  updated_at: timestamptz
  user_group_id: String
}

"""
update columns of table "granted_role"
"""
enum granted_role_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  granted_role_id

  """column name"""
  resource_path

  """column name"""
  role_id

  """column name"""
  updated_at

  """column name"""
  user_group_id
}

"""
columns and relationships of "hub_tours"
"""
type hub_tours {
  created_at: timestamptz!
  deleted_at: timestamptz

  """An object relationship"""
  hub: hubs!
  hub_id: Int!
  parent_phone_number: String
  resource_path: String
  status: String!

  """An object relationship"""
  student: students!
  student_id: String!
  updated_at: timestamptz!

  """An object relationship"""
  user: users
}

"""
aggregated selection of "hub_tours"
"""
type hub_tours_aggregate {
  aggregate: hub_tours_aggregate_fields
  nodes: [hub_tours!]!
}

"""
aggregate fields of "hub_tours"
"""
type hub_tours_aggregate_fields {
  avg: hub_tours_avg_fields
  count(columns: [hub_tours_select_column!], distinct: Boolean): Int
  max: hub_tours_max_fields
  min: hub_tours_min_fields
  stddev: hub_tours_stddev_fields
  stddev_pop: hub_tours_stddev_pop_fields
  stddev_samp: hub_tours_stddev_samp_fields
  sum: hub_tours_sum_fields
  var_pop: hub_tours_var_pop_fields
  var_samp: hub_tours_var_samp_fields
  variance: hub_tours_variance_fields
}

"""
order by aggregate values of table "hub_tours"
"""
input hub_tours_aggregate_order_by {
  avg: hub_tours_avg_order_by
  count: order_by
  max: hub_tours_max_order_by
  min: hub_tours_min_order_by
  stddev: hub_tours_stddev_order_by
  stddev_pop: hub_tours_stddev_pop_order_by
  stddev_samp: hub_tours_stddev_samp_order_by
  sum: hub_tours_sum_order_by
  var_pop: hub_tours_var_pop_order_by
  var_samp: hub_tours_var_samp_order_by
  variance: hub_tours_variance_order_by
}

"""
input type for inserting array relation for remote table "hub_tours"
"""
input hub_tours_arr_rel_insert_input {
  data: [hub_tours_insert_input!]!
  on_conflict: hub_tours_on_conflict
}

"""aggregate avg on columns"""
type hub_tours_avg_fields {
  hub_id: Float
}

"""
order by avg() on columns of table "hub_tours"
"""
input hub_tours_avg_order_by {
  hub_id: order_by
}

"""
Boolean expression to filter rows from the table "hub_tours". All fields are combined with a logical 'AND'.
"""
input hub_tours_bool_exp {
  _and: [hub_tours_bool_exp]
  _not: hub_tours_bool_exp
  _or: [hub_tours_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  hub: hubs_bool_exp
  hub_id: Int_comparison_exp
  parent_phone_number: String_comparison_exp
  resource_path: String_comparison_exp
  status: String_comparison_exp
  student: students_bool_exp
  student_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
}

"""
unique or primary key constraints on table "hub_tours"
"""
enum hub_tours_constraint {
  """unique or primary key constraint"""
  hub_tour_pk
}

"""
input type for incrementing integer column in table "hub_tours"
"""
input hub_tours_inc_input {
  hub_id: Int
}

"""
input type for inserting data into table "hub_tours"
"""
input hub_tours_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  hub: hubs_obj_rel_insert_input
  hub_id: Int
  parent_phone_number: String
  resource_path: String
  status: String
  student: students_obj_rel_insert_input
  student_id: String
  updated_at: timestamptz
  user: users_obj_rel_insert_input
}

"""aggregate max on columns"""
type hub_tours_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  hub_id: Int
  parent_phone_number: String
  resource_path: String
  status: String
  student_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "hub_tours"
"""
input hub_tours_max_order_by {
  created_at: order_by
  deleted_at: order_by
  hub_id: order_by
  parent_phone_number: order_by
  resource_path: order_by
  status: order_by
  student_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type hub_tours_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  hub_id: Int
  parent_phone_number: String
  resource_path: String
  status: String
  student_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "hub_tours"
"""
input hub_tours_min_order_by {
  created_at: order_by
  deleted_at: order_by
  hub_id: order_by
  parent_phone_number: order_by
  resource_path: order_by
  status: order_by
  student_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "hub_tours"
"""
type hub_tours_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [hub_tours!]!
}

"""
input type for inserting object relation for remote table "hub_tours"
"""
input hub_tours_obj_rel_insert_input {
  data: hub_tours_insert_input!
  on_conflict: hub_tours_on_conflict
}

"""
on conflict condition type for table "hub_tours"
"""
input hub_tours_on_conflict {
  constraint: hub_tours_constraint!
  update_columns: [hub_tours_update_column!]!
  where: hub_tours_bool_exp
}

"""
ordering options when selecting data from "hub_tours"
"""
input hub_tours_order_by {
  created_at: order_by
  deleted_at: order_by
  hub: hubs_order_by
  hub_id: order_by
  parent_phone_number: order_by
  resource_path: order_by
  status: order_by
  student: students_order_by
  student_id: order_by
  updated_at: order_by
  user: users_order_by
}

"""
primary key columns input for table: "hub_tours"
"""
input hub_tours_pk_columns_input {
  hub_id: Int!
  student_id: String!
}

"""
select columns of table "hub_tours"
"""
enum hub_tours_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  hub_id

  """column name"""
  parent_phone_number

  """column name"""
  resource_path

  """column name"""
  status

  """column name"""
  student_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "hub_tours"
"""
input hub_tours_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  hub_id: Int
  parent_phone_number: String
  resource_path: String
  status: String
  student_id: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type hub_tours_stddev_fields {
  hub_id: Float
}

"""
order by stddev() on columns of table "hub_tours"
"""
input hub_tours_stddev_order_by {
  hub_id: order_by
}

"""aggregate stddev_pop on columns"""
type hub_tours_stddev_pop_fields {
  hub_id: Float
}

"""
order by stddev_pop() on columns of table "hub_tours"
"""
input hub_tours_stddev_pop_order_by {
  hub_id: order_by
}

"""aggregate stddev_samp on columns"""
type hub_tours_stddev_samp_fields {
  hub_id: Float
}

"""
order by stddev_samp() on columns of table "hub_tours"
"""
input hub_tours_stddev_samp_order_by {
  hub_id: order_by
}

"""aggregate sum on columns"""
type hub_tours_sum_fields {
  hub_id: Int
}

"""
order by sum() on columns of table "hub_tours"
"""
input hub_tours_sum_order_by {
  hub_id: order_by
}

"""
update columns of table "hub_tours"
"""
enum hub_tours_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  hub_id

  """column name"""
  parent_phone_number

  """column name"""
  resource_path

  """column name"""
  status

  """column name"""
  student_id

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type hub_tours_var_pop_fields {
  hub_id: Float
}

"""
order by var_pop() on columns of table "hub_tours"
"""
input hub_tours_var_pop_order_by {
  hub_id: order_by
}

"""aggregate var_samp on columns"""
type hub_tours_var_samp_fields {
  hub_id: Float
}

"""
order by var_samp() on columns of table "hub_tours"
"""
input hub_tours_var_samp_order_by {
  hub_id: order_by
}

"""aggregate variance on columns"""
type hub_tours_variance_fields {
  hub_id: Float
}

"""
order by variance() on columns of table "hub_tours"
"""
input hub_tours_variance_order_by {
  hub_id: order_by
}

"""
columns and relationships of "hubs"
"""
type hubs {
  address: String

  """An object relationship"""
  city: cities
  city_id: Int
  country: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  description: String

  """An object relationship"""
  district: districts
  district_id: Int
  events(
    """JSON select path"""
    path: String
  ): jsonb
  hub_id: Int!

  """An array relationship"""
  hub_tours(
    """distinct select on columns"""
    distinct_on: [hub_tours_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [hub_tours_order_by!]

    """filter the rows returned"""
    where: hub_tours_bool_exp
  ): [hub_tours!]!

  """An aggregated array relationship"""
  hub_tours_aggregate(
    """distinct select on columns"""
    distinct_on: [hub_tours_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [hub_tours_order_by!]

    """filter the rows returned"""
    where: hub_tours_bool_exp
  ): hub_tours_aggregate!
  images: _text
  name: String!
  opening_hours: _text
  phone_number: String
  point: point
  resource_path: String
  updated_at: timestamptz!
}

"""
aggregated selection of "hubs"
"""
type hubs_aggregate {
  aggregate: hubs_aggregate_fields
  nodes: [hubs!]!
}

"""
aggregate fields of "hubs"
"""
type hubs_aggregate_fields {
  avg: hubs_avg_fields
  count(columns: [hubs_select_column!], distinct: Boolean): Int
  max: hubs_max_fields
  min: hubs_min_fields
  stddev: hubs_stddev_fields
  stddev_pop: hubs_stddev_pop_fields
  stddev_samp: hubs_stddev_samp_fields
  sum: hubs_sum_fields
  var_pop: hubs_var_pop_fields
  var_samp: hubs_var_samp_fields
  variance: hubs_variance_fields
}

"""
order by aggregate values of table "hubs"
"""
input hubs_aggregate_order_by {
  avg: hubs_avg_order_by
  count: order_by
  max: hubs_max_order_by
  min: hubs_min_order_by
  stddev: hubs_stddev_order_by
  stddev_pop: hubs_stddev_pop_order_by
  stddev_samp: hubs_stddev_samp_order_by
  sum: hubs_sum_order_by
  var_pop: hubs_var_pop_order_by
  var_samp: hubs_var_samp_order_by
  variance: hubs_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input hubs_append_input {
  events: jsonb
}

"""
input type for inserting array relation for remote table "hubs"
"""
input hubs_arr_rel_insert_input {
  data: [hubs_insert_input!]!
  on_conflict: hubs_on_conflict
}

"""aggregate avg on columns"""
type hubs_avg_fields {
  city_id: Float
  district_id: Float
  hub_id: Float
}

"""
order by avg() on columns of table "hubs"
"""
input hubs_avg_order_by {
  city_id: order_by
  district_id: order_by
  hub_id: order_by
}

"""
Boolean expression to filter rows from the table "hubs". All fields are combined with a logical 'AND'.
"""
input hubs_bool_exp {
  _and: [hubs_bool_exp]
  _not: hubs_bool_exp
  _or: [hubs_bool_exp]
  address: String_comparison_exp
  city: cities_bool_exp
  city_id: Int_comparison_exp
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  description: String_comparison_exp
  district: districts_bool_exp
  district_id: Int_comparison_exp
  events: jsonb_comparison_exp
  hub_id: Int_comparison_exp
  hub_tours: hub_tours_bool_exp
  images: _text_comparison_exp
  name: String_comparison_exp
  opening_hours: _text_comparison_exp
  phone_number: String_comparison_exp
  point: point_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "hubs"
"""
enum hubs_constraint {
  """unique or primary key constraint"""
  hub_pk
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input hubs_delete_at_path_input {
  events: [String]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input hubs_delete_elem_input {
  events: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input hubs_delete_key_input {
  events: String
}

"""
input type for incrementing integer column in table "hubs"
"""
input hubs_inc_input {
  city_id: Int
  district_id: Int
  hub_id: Int
}

"""
input type for inserting data into table "hubs"
"""
input hubs_insert_input {
  address: String
  city: cities_obj_rel_insert_input
  city_id: Int
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  description: String
  district: districts_obj_rel_insert_input
  district_id: Int
  events: jsonb
  hub_id: Int
  hub_tours: hub_tours_arr_rel_insert_input
  images: _text
  name: String
  opening_hours: _text
  phone_number: String
  point: point
  resource_path: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type hubs_max_fields {
  address: String
  city_id: Int
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  description: String
  district_id: Int
  hub_id: Int
  name: String
  phone_number: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "hubs"
"""
input hubs_max_order_by {
  address: order_by
  city_id: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  description: order_by
  district_id: order_by
  hub_id: order_by
  name: order_by
  phone_number: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type hubs_min_fields {
  address: String
  city_id: Int
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  description: String
  district_id: Int
  hub_id: Int
  name: String
  phone_number: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "hubs"
"""
input hubs_min_order_by {
  address: order_by
  city_id: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  description: order_by
  district_id: order_by
  hub_id: order_by
  name: order_by
  phone_number: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "hubs"
"""
type hubs_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [hubs!]!
}

"""
input type for inserting object relation for remote table "hubs"
"""
input hubs_obj_rel_insert_input {
  data: hubs_insert_input!
  on_conflict: hubs_on_conflict
}

"""
on conflict condition type for table "hubs"
"""
input hubs_on_conflict {
  constraint: hubs_constraint!
  update_columns: [hubs_update_column!]!
  where: hubs_bool_exp
}

"""
ordering options when selecting data from "hubs"
"""
input hubs_order_by {
  address: order_by
  city: cities_order_by
  city_id: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  description: order_by
  district: districts_order_by
  district_id: order_by
  events: order_by
  hub_id: order_by
  hub_tours_aggregate: hub_tours_aggregate_order_by
  images: order_by
  name: order_by
  opening_hours: order_by
  phone_number: order_by
  point: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "hubs"
"""
input hubs_pk_columns_input {
  hub_id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input hubs_prepend_input {
  events: jsonb
}

"""
select columns of table "hubs"
"""
enum hubs_select_column {
  """column name"""
  address

  """column name"""
  city_id

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  description

  """column name"""
  district_id

  """column name"""
  events

  """column name"""
  hub_id

  """column name"""
  images

  """column name"""
  name

  """column name"""
  opening_hours

  """column name"""
  phone_number

  """column name"""
  point

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "hubs"
"""
input hubs_set_input {
  address: String
  city_id: Int
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  description: String
  district_id: Int
  events: jsonb
  hub_id: Int
  images: _text
  name: String
  opening_hours: _text
  phone_number: String
  point: point
  resource_path: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type hubs_stddev_fields {
  city_id: Float
  district_id: Float
  hub_id: Float
}

"""
order by stddev() on columns of table "hubs"
"""
input hubs_stddev_order_by {
  city_id: order_by
  district_id: order_by
  hub_id: order_by
}

"""aggregate stddev_pop on columns"""
type hubs_stddev_pop_fields {
  city_id: Float
  district_id: Float
  hub_id: Float
}

"""
order by stddev_pop() on columns of table "hubs"
"""
input hubs_stddev_pop_order_by {
  city_id: order_by
  district_id: order_by
  hub_id: order_by
}

"""aggregate stddev_samp on columns"""
type hubs_stddev_samp_fields {
  city_id: Float
  district_id: Float
  hub_id: Float
}

"""
order by stddev_samp() on columns of table "hubs"
"""
input hubs_stddev_samp_order_by {
  city_id: order_by
  district_id: order_by
  hub_id: order_by
}

"""aggregate sum on columns"""
type hubs_sum_fields {
  city_id: Int
  district_id: Int
  hub_id: Int
}

"""
order by sum() on columns of table "hubs"
"""
input hubs_sum_order_by {
  city_id: order_by
  district_id: order_by
  hub_id: order_by
}

"""
update columns of table "hubs"
"""
enum hubs_update_column {
  """column name"""
  address

  """column name"""
  city_id

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  description

  """column name"""
  district_id

  """column name"""
  events

  """column name"""
  hub_id

  """column name"""
  images

  """column name"""
  name

  """column name"""
  opening_hours

  """column name"""
  phone_number

  """column name"""
  point

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type hubs_var_pop_fields {
  city_id: Float
  district_id: Float
  hub_id: Float
}

"""
order by var_pop() on columns of table "hubs"
"""
input hubs_var_pop_order_by {
  city_id: order_by
  district_id: order_by
  hub_id: order_by
}

"""aggregate var_samp on columns"""
type hubs_var_samp_fields {
  city_id: Float
  district_id: Float
  hub_id: Float
}

"""
order by var_samp() on columns of table "hubs"
"""
input hubs_var_samp_order_by {
  city_id: order_by
  district_id: order_by
  hub_id: order_by
}

"""aggregate variance on columns"""
type hubs_variance_fields {
  city_id: Float
  district_id: Float
  hub_id: Float
}

"""
order by variance() on columns of table "hubs"
"""
input hubs_variance_order_by {
  city_id: order_by
  district_id: order_by
  hub_id: order_by
}

"""
columns and relationships of "info_notification_msgs"
"""
type info_notification_msgs {
  content(
    """JSON select path"""
    path: String
  ): jsonb
  created_at: timestamptz!
  deleted_at: timestamptz

  """An array relationship"""
  info_notifications(
    """distinct select on columns"""
    distinct_on: [info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notifications_order_by!]

    """filter the rows returned"""
    where: info_notifications_bool_exp
  ): [info_notifications!]!

  """An aggregated array relationship"""
  info_notifications_aggregate(
    """distinct select on columns"""
    distinct_on: [info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notifications_order_by!]

    """filter the rows returned"""
    where: info_notifications_bool_exp
  ): info_notifications_aggregate!
  media_ids: _text
  notification_msg_id: String!
  resource_path: String!
  title: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "info_notification_msgs"
"""
type info_notification_msgs_aggregate {
  aggregate: info_notification_msgs_aggregate_fields
  nodes: [info_notification_msgs!]!
}

"""
aggregate fields of "info_notification_msgs"
"""
type info_notification_msgs_aggregate_fields {
  count(columns: [info_notification_msgs_select_column!], distinct: Boolean): Int
  max: info_notification_msgs_max_fields
  min: info_notification_msgs_min_fields
}

"""
order by aggregate values of table "info_notification_msgs"
"""
input info_notification_msgs_aggregate_order_by {
  count: order_by
  max: info_notification_msgs_max_order_by
  min: info_notification_msgs_min_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input info_notification_msgs_append_input {
  content: jsonb
}

"""
input type for inserting array relation for remote table "info_notification_msgs"
"""
input info_notification_msgs_arr_rel_insert_input {
  data: [info_notification_msgs_insert_input!]!
  on_conflict: info_notification_msgs_on_conflict
}

"""
Boolean expression to filter rows from the table "info_notification_msgs". All fields are combined with a logical 'AND'.
"""
input info_notification_msgs_bool_exp {
  _and: [info_notification_msgs_bool_exp]
  _not: info_notification_msgs_bool_exp
  _or: [info_notification_msgs_bool_exp]
  content: jsonb_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  info_notifications: info_notifications_bool_exp
  media_ids: _text_comparison_exp
  notification_msg_id: String_comparison_exp
  resource_path: String_comparison_exp
  title: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "info_notification_msgs"
"""
enum info_notification_msgs_constraint {
  """unique or primary key constraint"""
  pk__info_notification_msgs
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input info_notification_msgs_delete_at_path_input {
  content: [String]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input info_notification_msgs_delete_elem_input {
  content: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input info_notification_msgs_delete_key_input {
  content: String
}

"""
input type for inserting data into table "info_notification_msgs"
"""
input info_notification_msgs_insert_input {
  content: jsonb
  created_at: timestamptz
  deleted_at: timestamptz
  info_notifications: info_notifications_arr_rel_insert_input
  media_ids: _text
  notification_msg_id: String
  resource_path: String
  title: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type info_notification_msgs_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  notification_msg_id: String
  resource_path: String
  title: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "info_notification_msgs"
"""
input info_notification_msgs_max_order_by {
  created_at: order_by
  deleted_at: order_by
  notification_msg_id: order_by
  resource_path: order_by
  title: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type info_notification_msgs_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  notification_msg_id: String
  resource_path: String
  title: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "info_notification_msgs"
"""
input info_notification_msgs_min_order_by {
  created_at: order_by
  deleted_at: order_by
  notification_msg_id: order_by
  resource_path: order_by
  title: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "info_notification_msgs"
"""
type info_notification_msgs_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [info_notification_msgs!]!
}

"""
input type for inserting object relation for remote table "info_notification_msgs"
"""
input info_notification_msgs_obj_rel_insert_input {
  data: info_notification_msgs_insert_input!
  on_conflict: info_notification_msgs_on_conflict
}

"""
on conflict condition type for table "info_notification_msgs"
"""
input info_notification_msgs_on_conflict {
  constraint: info_notification_msgs_constraint!
  update_columns: [info_notification_msgs_update_column!]!
  where: info_notification_msgs_bool_exp
}

"""
ordering options when selecting data from "info_notification_msgs"
"""
input info_notification_msgs_order_by {
  content: order_by
  created_at: order_by
  deleted_at: order_by
  info_notifications_aggregate: info_notifications_aggregate_order_by
  media_ids: order_by
  notification_msg_id: order_by
  resource_path: order_by
  title: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "info_notification_msgs"
"""
input info_notification_msgs_pk_columns_input {
  notification_msg_id: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input info_notification_msgs_prepend_input {
  content: jsonb
}

"""
select columns of table "info_notification_msgs"
"""
enum info_notification_msgs_select_column {
  """column name"""
  content

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  media_ids

  """column name"""
  notification_msg_id

  """column name"""
  resource_path

  """column name"""
  title

  """column name"""
  updated_at
}

"""
input type for updating data in table "info_notification_msgs"
"""
input info_notification_msgs_set_input {
  content: jsonb
  created_at: timestamptz
  deleted_at: timestamptz
  media_ids: _text
  notification_msg_id: String
  resource_path: String
  title: String
  updated_at: timestamptz
}

"""
update columns of table "info_notification_msgs"
"""
enum info_notification_msgs_update_column {
  """column name"""
  content

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  media_ids

  """column name"""
  notification_msg_id

  """column name"""
  resource_path

  """column name"""
  title

  """column name"""
  updated_at
}

"""
columns and relationships of "info_notifications"
"""
type info_notifications {
  created_at: timestamptz!
  created_user_id: String
  data(
    """JSON select path"""
    path: String
  ): jsonb
  deleted_at: timestamptz
  editor_id: String
  event: String

  """An object relationship"""
  info_notification_msg: info_notification_msgs
  is_important: Boolean
  notification_id: String!
  notification_msg_id: String
  owner: Int!

  """An object relationship"""
  questionnaire: questionnaires
  questionnaire_id: String
  receiver_ids: _text
  resource_path: String!
  scheduled_at: timestamptz

  """An object relationship"""
  school: schools!

  """An object relationship"""
  school_admin: school_admins
  sent_at: timestamptz
  status: String
  target_groups(
    """JSON select path"""
    path: String
  ): jsonb
  type: String!
  updated_at: timestamptz!

  """An array relationship"""
  users_info_notifications(
    """distinct select on columns"""
    distinct_on: [users_info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_info_notifications_order_by!]

    """filter the rows returned"""
    where: users_info_notifications_bool_exp
  ): [users_info_notifications!]!

  """An aggregated array relationship"""
  users_info_notifications_aggregate(
    """distinct select on columns"""
    distinct_on: [users_info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_info_notifications_order_by!]

    """filter the rows returned"""
    where: users_info_notifications_bool_exp
  ): users_info_notifications_aggregate!
}

"""
aggregated selection of "info_notifications"
"""
type info_notifications_aggregate {
  aggregate: info_notifications_aggregate_fields
  nodes: [info_notifications!]!
}

"""
aggregate fields of "info_notifications"
"""
type info_notifications_aggregate_fields {
  avg: info_notifications_avg_fields
  count(columns: [info_notifications_select_column!], distinct: Boolean): Int
  max: info_notifications_max_fields
  min: info_notifications_min_fields
  stddev: info_notifications_stddev_fields
  stddev_pop: info_notifications_stddev_pop_fields
  stddev_samp: info_notifications_stddev_samp_fields
  sum: info_notifications_sum_fields
  var_pop: info_notifications_var_pop_fields
  var_samp: info_notifications_var_samp_fields
  variance: info_notifications_variance_fields
}

"""
order by aggregate values of table "info_notifications"
"""
input info_notifications_aggregate_order_by {
  avg: info_notifications_avg_order_by
  count: order_by
  max: info_notifications_max_order_by
  min: info_notifications_min_order_by
  stddev: info_notifications_stddev_order_by
  stddev_pop: info_notifications_stddev_pop_order_by
  stddev_samp: info_notifications_stddev_samp_order_by
  sum: info_notifications_sum_order_by
  var_pop: info_notifications_var_pop_order_by
  var_samp: info_notifications_var_samp_order_by
  variance: info_notifications_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input info_notifications_append_input {
  data: jsonb
  target_groups: jsonb
}

"""
input type for inserting array relation for remote table "info_notifications"
"""
input info_notifications_arr_rel_insert_input {
  data: [info_notifications_insert_input!]!
  on_conflict: info_notifications_on_conflict
}

"""aggregate avg on columns"""
type info_notifications_avg_fields {
  owner: Float
}

"""
order by avg() on columns of table "info_notifications"
"""
input info_notifications_avg_order_by {
  owner: order_by
}

"""
Boolean expression to filter rows from the table "info_notifications". All fields are combined with a logical 'AND'.
"""
input info_notifications_bool_exp {
  _and: [info_notifications_bool_exp]
  _not: info_notifications_bool_exp
  _or: [info_notifications_bool_exp]
  created_at: timestamptz_comparison_exp
  created_user_id: String_comparison_exp
  data: jsonb_comparison_exp
  deleted_at: timestamptz_comparison_exp
  editor_id: String_comparison_exp
  event: String_comparison_exp
  info_notification_msg: info_notification_msgs_bool_exp
  is_important: Boolean_comparison_exp
  notification_id: String_comparison_exp
  notification_msg_id: String_comparison_exp
  owner: Int_comparison_exp
  questionnaire: questionnaires_bool_exp
  questionnaire_id: String_comparison_exp
  receiver_ids: _text_comparison_exp
  resource_path: String_comparison_exp
  scheduled_at: timestamptz_comparison_exp
  school: schools_bool_exp
  school_admin: school_admins_bool_exp
  sent_at: timestamptz_comparison_exp
  status: String_comparison_exp
  target_groups: jsonb_comparison_exp
  type: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  users_info_notifications: users_info_notifications_bool_exp
}

"""
unique or primary key constraints on table "info_notifications"
"""
enum info_notifications_constraint {
  """unique or primary key constraint"""
  pk__info_notifications
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input info_notifications_delete_at_path_input {
  data: [String]
  target_groups: [String]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input info_notifications_delete_elem_input {
  data: Int
  target_groups: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input info_notifications_delete_key_input {
  data: String
  target_groups: String
}

"""
input type for incrementing integer column in table "info_notifications"
"""
input info_notifications_inc_input {
  owner: Int
}

"""
input type for inserting data into table "info_notifications"
"""
input info_notifications_insert_input {
  created_at: timestamptz
  created_user_id: String
  data: jsonb
  deleted_at: timestamptz
  editor_id: String
  event: String
  info_notification_msg: info_notification_msgs_obj_rel_insert_input
  is_important: Boolean
  notification_id: String
  notification_msg_id: String
  owner: Int
  questionnaire: questionnaires_obj_rel_insert_input
  questionnaire_id: String
  receiver_ids: _text
  resource_path: String
  scheduled_at: timestamptz
  school: schools_obj_rel_insert_input
  school_admin: school_admins_obj_rel_insert_input
  sent_at: timestamptz
  status: String
  target_groups: jsonb
  type: String
  updated_at: timestamptz
  users_info_notifications: users_info_notifications_arr_rel_insert_input
}

"""aggregate max on columns"""
type info_notifications_max_fields {
  created_at: timestamptz
  created_user_id: String
  deleted_at: timestamptz
  editor_id: String
  event: String
  notification_id: String
  notification_msg_id: String
  owner: Int
  questionnaire_id: String
  resource_path: String
  scheduled_at: timestamptz
  sent_at: timestamptz
  status: String
  type: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "info_notifications"
"""
input info_notifications_max_order_by {
  created_at: order_by
  created_user_id: order_by
  deleted_at: order_by
  editor_id: order_by
  event: order_by
  notification_id: order_by
  notification_msg_id: order_by
  owner: order_by
  questionnaire_id: order_by
  resource_path: order_by
  scheduled_at: order_by
  sent_at: order_by
  status: order_by
  type: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type info_notifications_min_fields {
  created_at: timestamptz
  created_user_id: String
  deleted_at: timestamptz
  editor_id: String
  event: String
  notification_id: String
  notification_msg_id: String
  owner: Int
  questionnaire_id: String
  resource_path: String
  scheduled_at: timestamptz
  sent_at: timestamptz
  status: String
  type: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "info_notifications"
"""
input info_notifications_min_order_by {
  created_at: order_by
  created_user_id: order_by
  deleted_at: order_by
  editor_id: order_by
  event: order_by
  notification_id: order_by
  notification_msg_id: order_by
  owner: order_by
  questionnaire_id: order_by
  resource_path: order_by
  scheduled_at: order_by
  sent_at: order_by
  status: order_by
  type: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "info_notifications"
"""
type info_notifications_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [info_notifications!]!
}

"""
input type for inserting object relation for remote table "info_notifications"
"""
input info_notifications_obj_rel_insert_input {
  data: info_notifications_insert_input!
  on_conflict: info_notifications_on_conflict
}

"""
on conflict condition type for table "info_notifications"
"""
input info_notifications_on_conflict {
  constraint: info_notifications_constraint!
  update_columns: [info_notifications_update_column!]!
  where: info_notifications_bool_exp
}

"""
ordering options when selecting data from "info_notifications"
"""
input info_notifications_order_by {
  created_at: order_by
  created_user_id: order_by
  data: order_by
  deleted_at: order_by
  editor_id: order_by
  event: order_by
  info_notification_msg: info_notification_msgs_order_by
  is_important: order_by
  notification_id: order_by
  notification_msg_id: order_by
  owner: order_by
  questionnaire: questionnaires_order_by
  questionnaire_id: order_by
  receiver_ids: order_by
  resource_path: order_by
  scheduled_at: order_by
  school: schools_order_by
  school_admin: school_admins_order_by
  sent_at: order_by
  status: order_by
  target_groups: order_by
  type: order_by
  updated_at: order_by
  users_info_notifications_aggregate: users_info_notifications_aggregate_order_by
}

"""
primary key columns input for table: "info_notifications"
"""
input info_notifications_pk_columns_input {
  notification_id: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input info_notifications_prepend_input {
  data: jsonb
  target_groups: jsonb
}

"""
select columns of table "info_notifications"
"""
enum info_notifications_select_column {
  """column name"""
  created_at

  """column name"""
  created_user_id

  """column name"""
  data

  """column name"""
  deleted_at

  """column name"""
  editor_id

  """column name"""
  event

  """column name"""
  is_important

  """column name"""
  notification_id

  """column name"""
  notification_msg_id

  """column name"""
  owner

  """column name"""
  questionnaire_id

  """column name"""
  receiver_ids

  """column name"""
  resource_path

  """column name"""
  scheduled_at

  """column name"""
  sent_at

  """column name"""
  status

  """column name"""
  target_groups

  """column name"""
  type

  """column name"""
  updated_at
}

"""
input type for updating data in table "info_notifications"
"""
input info_notifications_set_input {
  created_at: timestamptz
  created_user_id: String
  data: jsonb
  deleted_at: timestamptz
  editor_id: String
  event: String
  is_important: Boolean
  notification_id: String
  notification_msg_id: String
  owner: Int
  questionnaire_id: String
  receiver_ids: _text
  resource_path: String
  scheduled_at: timestamptz
  sent_at: timestamptz
  status: String
  target_groups: jsonb
  type: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type info_notifications_stddev_fields {
  owner: Float
}

"""
order by stddev() on columns of table "info_notifications"
"""
input info_notifications_stddev_order_by {
  owner: order_by
}

"""aggregate stddev_pop on columns"""
type info_notifications_stddev_pop_fields {
  owner: Float
}

"""
order by stddev_pop() on columns of table "info_notifications"
"""
input info_notifications_stddev_pop_order_by {
  owner: order_by
}

"""aggregate stddev_samp on columns"""
type info_notifications_stddev_samp_fields {
  owner: Float
}

"""
order by stddev_samp() on columns of table "info_notifications"
"""
input info_notifications_stddev_samp_order_by {
  owner: order_by
}

"""aggregate sum on columns"""
type info_notifications_sum_fields {
  owner: Int
}

"""
order by sum() on columns of table "info_notifications"
"""
input info_notifications_sum_order_by {
  owner: order_by
}

"""
columns and relationships of "info_notifications_tags"
"""
type info_notifications_tags {
  created_at: timestamptz!
  deleted_at: timestamptz
  notification_id: String!
  notification_tag_id: String!
  resource_path: String!
  tag_id: String!

  """An object relationship"""
  tags: tags!
  updated_at: timestamptz!
}

"""
aggregated selection of "info_notifications_tags"
"""
type info_notifications_tags_aggregate {
  aggregate: info_notifications_tags_aggregate_fields
  nodes: [info_notifications_tags!]!
}

"""
aggregate fields of "info_notifications_tags"
"""
type info_notifications_tags_aggregate_fields {
  count(columns: [info_notifications_tags_select_column!], distinct: Boolean): Int
  max: info_notifications_tags_max_fields
  min: info_notifications_tags_min_fields
}

"""
order by aggregate values of table "info_notifications_tags"
"""
input info_notifications_tags_aggregate_order_by {
  count: order_by
  max: info_notifications_tags_max_order_by
  min: info_notifications_tags_min_order_by
}

"""
input type for inserting array relation for remote table "info_notifications_tags"
"""
input info_notifications_tags_arr_rel_insert_input {
  data: [info_notifications_tags_insert_input!]!
  on_conflict: info_notifications_tags_on_conflict
}

"""
Boolean expression to filter rows from the table "info_notifications_tags". All fields are combined with a logical 'AND'.
"""
input info_notifications_tags_bool_exp {
  _and: [info_notifications_tags_bool_exp]
  _not: info_notifications_tags_bool_exp
  _or: [info_notifications_tags_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  notification_id: String_comparison_exp
  notification_tag_id: String_comparison_exp
  resource_path: String_comparison_exp
  tag_id: String_comparison_exp
  tags: tags_bool_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "info_notifications_tags"
"""
enum info_notifications_tags_constraint {
  """unique or primary key constraint"""
  pk__notifications_tags
}

"""
input type for inserting data into table "info_notifications_tags"
"""
input info_notifications_tags_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  notification_id: String
  notification_tag_id: String
  resource_path: String
  tag_id: String
  tags: tags_obj_rel_insert_input
  updated_at: timestamptz
}

"""aggregate max on columns"""
type info_notifications_tags_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  notification_id: String
  notification_tag_id: String
  resource_path: String
  tag_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "info_notifications_tags"
"""
input info_notifications_tags_max_order_by {
  created_at: order_by
  deleted_at: order_by
  notification_id: order_by
  notification_tag_id: order_by
  resource_path: order_by
  tag_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type info_notifications_tags_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  notification_id: String
  notification_tag_id: String
  resource_path: String
  tag_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "info_notifications_tags"
"""
input info_notifications_tags_min_order_by {
  created_at: order_by
  deleted_at: order_by
  notification_id: order_by
  notification_tag_id: order_by
  resource_path: order_by
  tag_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "info_notifications_tags"
"""
type info_notifications_tags_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [info_notifications_tags!]!
}

"""
input type for inserting object relation for remote table "info_notifications_tags"
"""
input info_notifications_tags_obj_rel_insert_input {
  data: info_notifications_tags_insert_input!
  on_conflict: info_notifications_tags_on_conflict
}

"""
on conflict condition type for table "info_notifications_tags"
"""
input info_notifications_tags_on_conflict {
  constraint: info_notifications_tags_constraint!
  update_columns: [info_notifications_tags_update_column!]!
  where: info_notifications_tags_bool_exp
}

"""
ordering options when selecting data from "info_notifications_tags"
"""
input info_notifications_tags_order_by {
  created_at: order_by
  deleted_at: order_by
  notification_id: order_by
  notification_tag_id: order_by
  resource_path: order_by
  tag_id: order_by
  tags: tags_order_by
  updated_at: order_by
}

"""
primary key columns input for table: "info_notifications_tags"
"""
input info_notifications_tags_pk_columns_input {
  notification_tag_id: String!
}

"""
select columns of table "info_notifications_tags"
"""
enum info_notifications_tags_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  notification_id

  """column name"""
  notification_tag_id

  """column name"""
  resource_path

  """column name"""
  tag_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "info_notifications_tags"
"""
input info_notifications_tags_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  notification_id: String
  notification_tag_id: String
  resource_path: String
  tag_id: String
  updated_at: timestamptz
}

"""
update columns of table "info_notifications_tags"
"""
enum info_notifications_tags_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  notification_id

  """column name"""
  notification_tag_id

  """column name"""
  resource_path

  """column name"""
  tag_id

  """column name"""
  updated_at
}

"""
update columns of table "info_notifications"
"""
enum info_notifications_update_column {
  """column name"""
  created_at

  """column name"""
  created_user_id

  """column name"""
  data

  """column name"""
  deleted_at

  """column name"""
  editor_id

  """column name"""
  event

  """column name"""
  is_important

  """column name"""
  notification_id

  """column name"""
  notification_msg_id

  """column name"""
  owner

  """column name"""
  questionnaire_id

  """column name"""
  receiver_ids

  """column name"""
  resource_path

  """column name"""
  scheduled_at

  """column name"""
  sent_at

  """column name"""
  status

  """column name"""
  target_groups

  """column name"""
  type

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type info_notifications_var_pop_fields {
  owner: Float
}

"""
order by var_pop() on columns of table "info_notifications"
"""
input info_notifications_var_pop_order_by {
  owner: order_by
}

"""aggregate var_samp on columns"""
type info_notifications_var_samp_fields {
  owner: Float
}

"""
order by var_samp() on columns of table "info_notifications"
"""
input info_notifications_var_samp_order_by {
  owner: order_by
}

"""aggregate variance on columns"""
type info_notifications_variance_fields {
  owner: Float
}

"""
order by variance() on columns of table "info_notifications"
"""
input info_notifications_variance_order_by {
  owner: order_by
}

scalar jsonb

"""
expression to compare columns of type jsonb. All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

"""
columns and relationships of "learning_objectives"
"""
type learning_objectives {
  copied_from: String
  country: String
  created_at: timestamptz!
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint

  """An object relationship"""
  learning_objective: learning_objectives

  """An array relationship"""
  learning_objectives(
    """distinct select on columns"""
    distinct_on: [learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_objectives_order_by!]

    """filter the rows returned"""
    where: learning_objectives_bool_exp
  ): [learning_objectives!]!

  """An aggregated array relationship"""
  learning_objectives_aggregate(
    """distinct select on columns"""
    distinct_on: [learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_objectives_order_by!]

    """filter the rows returned"""
    where: learning_objectives_bool_exp
  ): learning_objectives_aggregate!
  lo_id: String!
  master_lo_id: String
  name: String!
  prerequisites: _text

  """An array relationship"""
  quiz_sets(
    """distinct select on columns"""
    distinct_on: [quiz_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quiz_sets_order_by!]

    """filter the rows returned"""
    where: quiz_sets_bool_exp
  ): [quiz_sets!]!

  """An aggregated array relationship"""
  quiz_sets_aggregate(
    """distinct select on columns"""
    distinct_on: [quiz_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quiz_sets_order_by!]

    """filter the rows returned"""
    where: quiz_sets_bool_exp
  ): quiz_sets_aggregate!

  """An array relationship"""
  quizsets(
    """distinct select on columns"""
    distinct_on: [quizsets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizsets_order_by!]

    """filter the rows returned"""
    where: quizsets_bool_exp
  ): [quizsets!]!

  """An aggregated array relationship"""
  quizsets_aggregate(
    """distinct select on columns"""
    distinct_on: [quizsets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizsets_order_by!]

    """filter the rows returned"""
    where: quizsets_bool_exp
  ): quizsets_aggregate!
  resource_path: String!

  """An object relationship"""
  school: schools!
  school_id: Int!
  study_guide: String
  subject: String

  """An object relationship"""
  topic: topics
  topic_id: String
  type: String
  updated_at: timestamptz!
  video: String
  video_script: String
}

"""
aggregated selection of "learning_objectives"
"""
type learning_objectives_aggregate {
  aggregate: learning_objectives_aggregate_fields
  nodes: [learning_objectives!]!
}

"""
aggregate fields of "learning_objectives"
"""
type learning_objectives_aggregate_fields {
  avg: learning_objectives_avg_fields
  count(columns: [learning_objectives_select_column!], distinct: Boolean): Int
  max: learning_objectives_max_fields
  min: learning_objectives_min_fields
  stddev: learning_objectives_stddev_fields
  stddev_pop: learning_objectives_stddev_pop_fields
  stddev_samp: learning_objectives_stddev_samp_fields
  sum: learning_objectives_sum_fields
  var_pop: learning_objectives_var_pop_fields
  var_samp: learning_objectives_var_samp_fields
  variance: learning_objectives_variance_fields
}

"""
order by aggregate values of table "learning_objectives"
"""
input learning_objectives_aggregate_order_by {
  avg: learning_objectives_avg_order_by
  count: order_by
  max: learning_objectives_max_order_by
  min: learning_objectives_min_order_by
  stddev: learning_objectives_stddev_order_by
  stddev_pop: learning_objectives_stddev_pop_order_by
  stddev_samp: learning_objectives_stddev_samp_order_by
  sum: learning_objectives_sum_order_by
  var_pop: learning_objectives_var_pop_order_by
  var_samp: learning_objectives_var_samp_order_by
  variance: learning_objectives_variance_order_by
}

"""
input type for inserting array relation for remote table "learning_objectives"
"""
input learning_objectives_arr_rel_insert_input {
  data: [learning_objectives_insert_input!]!
  on_conflict: learning_objectives_on_conflict
}

"""aggregate avg on columns"""
type learning_objectives_avg_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by avg() on columns of table "learning_objectives"
"""
input learning_objectives_avg_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "learning_objectives". All fields are combined with a logical 'AND'.
"""
input learning_objectives_bool_exp {
  _and: [learning_objectives_bool_exp]
  _not: learning_objectives_bool_exp
  _or: [learning_objectives_bool_exp]
  copied_from: String_comparison_exp
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  display_order: smallint_comparison_exp
  grade: smallint_comparison_exp
  learning_objective: learning_objectives_bool_exp
  learning_objectives: learning_objectives_bool_exp
  lo_id: String_comparison_exp
  master_lo_id: String_comparison_exp
  name: String_comparison_exp
  prerequisites: _text_comparison_exp
  quiz_sets: quiz_sets_bool_exp
  quizsets: quizsets_bool_exp
  resource_path: String_comparison_exp
  school: schools_bool_exp
  school_id: Int_comparison_exp
  study_guide: String_comparison_exp
  subject: String_comparison_exp
  topic: topics_bool_exp
  topic_id: String_comparison_exp
  type: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  video: String_comparison_exp
  video_script: String_comparison_exp
}

"""
unique or primary key constraints on table "learning_objectives"
"""
enum learning_objectives_constraint {
  """unique or primary key constraint"""
  learning_objectives_pk
}

"""
input type for incrementing integer column in table "learning_objectives"
"""
input learning_objectives_inc_input {
  display_order: smallint
  grade: smallint
  school_id: Int
}

"""
input type for inserting data into table "learning_objectives"
"""
input learning_objectives_insert_input {
  copied_from: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  learning_objective: learning_objectives_obj_rel_insert_input
  learning_objectives: learning_objectives_arr_rel_insert_input
  lo_id: String
  master_lo_id: String
  name: String
  prerequisites: _text
  quiz_sets: quiz_sets_arr_rel_insert_input
  quizsets: quizsets_arr_rel_insert_input
  resource_path: String
  school: schools_obj_rel_insert_input
  school_id: Int
  study_guide: String
  subject: String
  topic: topics_obj_rel_insert_input
  topic_id: String
  type: String
  updated_at: timestamptz
  video: String
  video_script: String
}

"""aggregate max on columns"""
type learning_objectives_max_fields {
  copied_from: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  lo_id: String
  master_lo_id: String
  name: String
  resource_path: String
  school_id: Int
  study_guide: String
  subject: String
  topic_id: String
  type: String
  updated_at: timestamptz
  video: String
  video_script: String
}

"""
order by max() on columns of table "learning_objectives"
"""
input learning_objectives_max_order_by {
  copied_from: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  grade: order_by
  lo_id: order_by
  master_lo_id: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  study_guide: order_by
  subject: order_by
  topic_id: order_by
  type: order_by
  updated_at: order_by
  video: order_by
  video_script: order_by
}

"""aggregate min on columns"""
type learning_objectives_min_fields {
  copied_from: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  lo_id: String
  master_lo_id: String
  name: String
  resource_path: String
  school_id: Int
  study_guide: String
  subject: String
  topic_id: String
  type: String
  updated_at: timestamptz
  video: String
  video_script: String
}

"""
order by min() on columns of table "learning_objectives"
"""
input learning_objectives_min_order_by {
  copied_from: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  grade: order_by
  lo_id: order_by
  master_lo_id: order_by
  name: order_by
  resource_path: order_by
  school_id: order_by
  study_guide: order_by
  subject: order_by
  topic_id: order_by
  type: order_by
  updated_at: order_by
  video: order_by
  video_script: order_by
}

"""
response of any mutation on the table "learning_objectives"
"""
type learning_objectives_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [learning_objectives!]!
}

"""
input type for inserting object relation for remote table "learning_objectives"
"""
input learning_objectives_obj_rel_insert_input {
  data: learning_objectives_insert_input!
  on_conflict: learning_objectives_on_conflict
}

"""
on conflict condition type for table "learning_objectives"
"""
input learning_objectives_on_conflict {
  constraint: learning_objectives_constraint!
  update_columns: [learning_objectives_update_column!]!
  where: learning_objectives_bool_exp
}

"""
ordering options when selecting data from "learning_objectives"
"""
input learning_objectives_order_by {
  copied_from: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  grade: order_by
  learning_objective: learning_objectives_order_by
  learning_objectives_aggregate: learning_objectives_aggregate_order_by
  lo_id: order_by
  master_lo_id: order_by
  name: order_by
  prerequisites: order_by
  quiz_sets_aggregate: quiz_sets_aggregate_order_by
  quizsets_aggregate: quizsets_aggregate_order_by
  resource_path: order_by
  school: schools_order_by
  school_id: order_by
  study_guide: order_by
  subject: order_by
  topic: topics_order_by
  topic_id: order_by
  type: order_by
  updated_at: order_by
  video: order_by
  video_script: order_by
}

"""
primary key columns input for table: "learning_objectives"
"""
input learning_objectives_pk_columns_input {
  lo_id: String!
}

"""
select columns of table "learning_objectives"
"""
enum learning_objectives_select_column {
  """column name"""
  copied_from

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  grade

  """column name"""
  lo_id

  """column name"""
  master_lo_id

  """column name"""
  name

  """column name"""
  prerequisites

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  study_guide

  """column name"""
  subject

  """column name"""
  topic_id

  """column name"""
  type

  """column name"""
  updated_at

  """column name"""
  video

  """column name"""
  video_script
}

"""
input type for updating data in table "learning_objectives"
"""
input learning_objectives_set_input {
  copied_from: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  lo_id: String
  master_lo_id: String
  name: String
  prerequisites: _text
  resource_path: String
  school_id: Int
  study_guide: String
  subject: String
  topic_id: String
  type: String
  updated_at: timestamptz
  video: String
  video_script: String
}

"""aggregate stddev on columns"""
type learning_objectives_stddev_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev() on columns of table "learning_objectives"
"""
input learning_objectives_stddev_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type learning_objectives_stddev_pop_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev_pop() on columns of table "learning_objectives"
"""
input learning_objectives_stddev_pop_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type learning_objectives_stddev_samp_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by stddev_samp() on columns of table "learning_objectives"
"""
input learning_objectives_stddev_samp_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate sum on columns"""
type learning_objectives_sum_fields {
  display_order: smallint
  grade: smallint
  school_id: Int
}

"""
order by sum() on columns of table "learning_objectives"
"""
input learning_objectives_sum_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
update columns of table "learning_objectives"
"""
enum learning_objectives_update_column {
  """column name"""
  copied_from

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  grade

  """column name"""
  lo_id

  """column name"""
  master_lo_id

  """column name"""
  name

  """column name"""
  prerequisites

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  study_guide

  """column name"""
  subject

  """column name"""
  topic_id

  """column name"""
  type

  """column name"""
  updated_at

  """column name"""
  video

  """column name"""
  video_script
}

"""aggregate var_pop on columns"""
type learning_objectives_var_pop_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by var_pop() on columns of table "learning_objectives"
"""
input learning_objectives_var_pop_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate var_samp on columns"""
type learning_objectives_var_samp_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by var_samp() on columns of table "learning_objectives"
"""
input learning_objectives_var_samp_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""aggregate variance on columns"""
type learning_objectives_variance_fields {
  display_order: Float
  grade: Float
  school_id: Float
}

"""
order by variance() on columns of table "learning_objectives"
"""
input learning_objectives_variance_order_by {
  display_order: order_by
  grade: order_by
  school_id: order_by
}

"""
columns and relationships of "lesson_groups"
"""
type lesson_groups {
  course_id: String!
  created_at: timestamptz!
  deleted_at: time
  lesson_group_id: String!
  media_ids: _text
  resource_path: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "lesson_groups"
"""
type lesson_groups_aggregate {
  aggregate: lesson_groups_aggregate_fields
  nodes: [lesson_groups!]!
}

"""
aggregate fields of "lesson_groups"
"""
type lesson_groups_aggregate_fields {
  count(columns: [lesson_groups_select_column!], distinct: Boolean): Int
  max: lesson_groups_max_fields
  min: lesson_groups_min_fields
}

"""
order by aggregate values of table "lesson_groups"
"""
input lesson_groups_aggregate_order_by {
  count: order_by
  max: lesson_groups_max_order_by
  min: lesson_groups_min_order_by
}

"""
input type for inserting array relation for remote table "lesson_groups"
"""
input lesson_groups_arr_rel_insert_input {
  data: [lesson_groups_insert_input!]!
  on_conflict: lesson_groups_on_conflict
}

"""
Boolean expression to filter rows from the table "lesson_groups". All fields are combined with a logical 'AND'.
"""
input lesson_groups_bool_exp {
  _and: [lesson_groups_bool_exp]
  _not: lesson_groups_bool_exp
  _or: [lesson_groups_bool_exp]
  course_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: time_comparison_exp
  lesson_group_id: String_comparison_exp
  media_ids: _text_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "lesson_groups"
"""
enum lesson_groups_constraint {
  """unique or primary key constraint"""
  pk__lesson_groups
}

"""
input type for inserting data into table "lesson_groups"
"""
input lesson_groups_insert_input {
  course_id: String
  created_at: timestamptz
  deleted_at: time
  lesson_group_id: String
  media_ids: _text
  resource_path: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type lesson_groups_max_fields {
  course_id: String
  created_at: timestamptz
  lesson_group_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "lesson_groups"
"""
input lesson_groups_max_order_by {
  course_id: order_by
  created_at: order_by
  lesson_group_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type lesson_groups_min_fields {
  course_id: String
  created_at: timestamptz
  lesson_group_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "lesson_groups"
"""
input lesson_groups_min_order_by {
  course_id: order_by
  created_at: order_by
  lesson_group_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "lesson_groups"
"""
type lesson_groups_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [lesson_groups!]!
}

"""
input type for inserting object relation for remote table "lesson_groups"
"""
input lesson_groups_obj_rel_insert_input {
  data: lesson_groups_insert_input!
  on_conflict: lesson_groups_on_conflict
}

"""
on conflict condition type for table "lesson_groups"
"""
input lesson_groups_on_conflict {
  constraint: lesson_groups_constraint!
  update_columns: [lesson_groups_update_column!]!
  where: lesson_groups_bool_exp
}

"""
ordering options when selecting data from "lesson_groups"
"""
input lesson_groups_order_by {
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  lesson_group_id: order_by
  media_ids: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "lesson_groups"
"""
input lesson_groups_pk_columns_input {
  course_id: String!
  lesson_group_id: String!
}

"""
select columns of table "lesson_groups"
"""
enum lesson_groups_select_column {
  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  lesson_group_id

  """column name"""
  media_ids

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "lesson_groups"
"""
input lesson_groups_set_input {
  course_id: String
  created_at: timestamptz
  deleted_at: time
  lesson_group_id: String
  media_ids: _text
  resource_path: String
  updated_at: timestamptz
}

"""
update columns of table "lesson_groups"
"""
enum lesson_groups_update_column {
  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  lesson_group_id

  """column name"""
  media_ids

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
columns and relationships of "lesson_members"
"""
type lesson_members {
  attendance_remark: String
  attendance_status: String

  """An object relationship"""
  course: courses
  course_id: String
  created_at: timestamptz!
  deleted_at: timestamptz

  """An object relationship"""
  lesson: lessons!
  lesson_id: String!
  resource_path: String!
  updated_at: timestamptz!

  """An object relationship"""
  user: users!
  user_id: String!
}

"""
aggregated selection of "lesson_members"
"""
type lesson_members_aggregate {
  aggregate: lesson_members_aggregate_fields
  nodes: [lesson_members!]!
}

"""
aggregate fields of "lesson_members"
"""
type lesson_members_aggregate_fields {
  count(columns: [lesson_members_select_column!], distinct: Boolean): Int
  max: lesson_members_max_fields
  min: lesson_members_min_fields
}

"""
order by aggregate values of table "lesson_members"
"""
input lesson_members_aggregate_order_by {
  count: order_by
  max: lesson_members_max_order_by
  min: lesson_members_min_order_by
}

"""
input type for inserting array relation for remote table "lesson_members"
"""
input lesson_members_arr_rel_insert_input {
  data: [lesson_members_insert_input!]!
  on_conflict: lesson_members_on_conflict
}

"""
Boolean expression to filter rows from the table "lesson_members". All fields are combined with a logical 'AND'.
"""
input lesson_members_bool_exp {
  _and: [lesson_members_bool_exp]
  _not: lesson_members_bool_exp
  _or: [lesson_members_bool_exp]
  attendance_remark: String_comparison_exp
  attendance_status: String_comparison_exp
  course: courses_bool_exp
  course_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  lesson: lessons_bool_exp
  lesson_id: String_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
  user_id: String_comparison_exp
}

"""
unique or primary key constraints on table "lesson_members"
"""
enum lesson_members_constraint {
  """unique or primary key constraint"""
  pk__lesson_members
}

"""
input type for inserting data into table "lesson_members"
"""
input lesson_members_insert_input {
  attendance_remark: String
  attendance_status: String
  course: courses_obj_rel_insert_input
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  lesson: lessons_obj_rel_insert_input
  lesson_id: String
  resource_path: String
  updated_at: timestamptz
  user: users_obj_rel_insert_input
  user_id: String
}

"""aggregate max on columns"""
type lesson_members_max_fields {
  attendance_remark: String
  attendance_status: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  lesson_id: String
  resource_path: String
  updated_at: timestamptz
  user_id: String
}

"""
order by max() on columns of table "lesson_members"
"""
input lesson_members_max_order_by {
  attendance_remark: order_by
  attendance_status: order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  lesson_id: order_by
  resource_path: order_by
  updated_at: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type lesson_members_min_fields {
  attendance_remark: String
  attendance_status: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  lesson_id: String
  resource_path: String
  updated_at: timestamptz
  user_id: String
}

"""
order by min() on columns of table "lesson_members"
"""
input lesson_members_min_order_by {
  attendance_remark: order_by
  attendance_status: order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  lesson_id: order_by
  resource_path: order_by
  updated_at: order_by
  user_id: order_by
}

"""
response of any mutation on the table "lesson_members"
"""
type lesson_members_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [lesson_members!]!
}

"""
input type for inserting object relation for remote table "lesson_members"
"""
input lesson_members_obj_rel_insert_input {
  data: lesson_members_insert_input!
  on_conflict: lesson_members_on_conflict
}

"""
on conflict condition type for table "lesson_members"
"""
input lesson_members_on_conflict {
  constraint: lesson_members_constraint!
  update_columns: [lesson_members_update_column!]!
  where: lesson_members_bool_exp
}

"""
ordering options when selecting data from "lesson_members"
"""
input lesson_members_order_by {
  attendance_remark: order_by
  attendance_status: order_by
  course: courses_order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  lesson: lessons_order_by
  lesson_id: order_by
  resource_path: order_by
  updated_at: order_by
  user: users_order_by
  user_id: order_by
}

"""
primary key columns input for table: "lesson_members"
"""
input lesson_members_pk_columns_input {
  lesson_id: String!
  user_id: String!
}

"""
select columns of table "lesson_members"
"""
enum lesson_members_select_column {
  """column name"""
  attendance_remark

  """column name"""
  attendance_status

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  lesson_id

  """column name"""
  resource_path

  """column name"""
  updated_at

  """column name"""
  user_id
}

"""
input type for updating data in table "lesson_members"
"""
input lesson_members_set_input {
  attendance_remark: String
  attendance_status: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  lesson_id: String
  resource_path: String
  updated_at: timestamptz
  user_id: String
}

"""
update columns of table "lesson_members"
"""
enum lesson_members_update_column {
  """column name"""
  attendance_remark

  """column name"""
  attendance_status

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  lesson_id

  """column name"""
  resource_path

  """column name"""
  updated_at

  """column name"""
  user_id
}

"""
columns and relationships of "lesson_report_details"
"""
type lesson_report_details {
  created_at: timestamptz!
  deleted_at: timestamptz

  """An object relationship"""
  lesson_report: lesson_reports!
  lesson_report_detail_id: String!
  lesson_report_id: String!

  """An array relationship"""
  partner_dynamic_form_field_values(
    """distinct select on columns"""
    distinct_on: [partner_dynamic_form_field_values_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [partner_dynamic_form_field_values_order_by!]

    """filter the rows returned"""
    where: partner_dynamic_form_field_values_bool_exp
  ): [partner_dynamic_form_field_values!]!

  """An aggregated array relationship"""
  partner_dynamic_form_field_values_aggregate(
    """distinct select on columns"""
    distinct_on: [partner_dynamic_form_field_values_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [partner_dynamic_form_field_values_order_by!]

    """filter the rows returned"""
    where: partner_dynamic_form_field_values_bool_exp
  ): partner_dynamic_form_field_values_aggregate!
  resource_path: String!

  """An object relationship"""
  student: students!
  student_id: String!
  updated_at: timestamptz
}

"""
aggregated selection of "lesson_report_details"
"""
type lesson_report_details_aggregate {
  aggregate: lesson_report_details_aggregate_fields
  nodes: [lesson_report_details!]!
}

"""
aggregate fields of "lesson_report_details"
"""
type lesson_report_details_aggregate_fields {
  count(columns: [lesson_report_details_select_column!], distinct: Boolean): Int
  max: lesson_report_details_max_fields
  min: lesson_report_details_min_fields
}

"""
order by aggregate values of table "lesson_report_details"
"""
input lesson_report_details_aggregate_order_by {
  count: order_by
  max: lesson_report_details_max_order_by
  min: lesson_report_details_min_order_by
}

"""
input type for inserting array relation for remote table "lesson_report_details"
"""
input lesson_report_details_arr_rel_insert_input {
  data: [lesson_report_details_insert_input!]!
  on_conflict: lesson_report_details_on_conflict
}

"""
Boolean expression to filter rows from the table "lesson_report_details". All fields are combined with a logical 'AND'.
"""
input lesson_report_details_bool_exp {
  _and: [lesson_report_details_bool_exp]
  _not: lesson_report_details_bool_exp
  _or: [lesson_report_details_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  lesson_report: lesson_reports_bool_exp
  lesson_report_detail_id: String_comparison_exp
  lesson_report_id: String_comparison_exp
  partner_dynamic_form_field_values: partner_dynamic_form_field_values_bool_exp
  resource_path: String_comparison_exp
  student: students_bool_exp
  student_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "lesson_report_details"
"""
enum lesson_report_details_constraint {
  """unique or primary key constraint"""
  lesson_report_details_pk

  """unique or primary key constraint"""
  unique__lesson_report_id__student_id
}

"""
input type for inserting data into table "lesson_report_details"
"""
input lesson_report_details_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  lesson_report: lesson_reports_obj_rel_insert_input
  lesson_report_detail_id: String
  lesson_report_id: String
  partner_dynamic_form_field_values: partner_dynamic_form_field_values_arr_rel_insert_input
  resource_path: String
  student: students_obj_rel_insert_input
  student_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type lesson_report_details_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  lesson_report_detail_id: String
  lesson_report_id: String
  resource_path: String
  student_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "lesson_report_details"
"""
input lesson_report_details_max_order_by {
  created_at: order_by
  deleted_at: order_by
  lesson_report_detail_id: order_by
  lesson_report_id: order_by
  resource_path: order_by
  student_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type lesson_report_details_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  lesson_report_detail_id: String
  lesson_report_id: String
  resource_path: String
  student_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "lesson_report_details"
"""
input lesson_report_details_min_order_by {
  created_at: order_by
  deleted_at: order_by
  lesson_report_detail_id: order_by
  lesson_report_id: order_by
  resource_path: order_by
  student_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "lesson_report_details"
"""
type lesson_report_details_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [lesson_report_details!]!
}

"""
input type for inserting object relation for remote table "lesson_report_details"
"""
input lesson_report_details_obj_rel_insert_input {
  data: lesson_report_details_insert_input!
  on_conflict: lesson_report_details_on_conflict
}

"""
on conflict condition type for table "lesson_report_details"
"""
input lesson_report_details_on_conflict {
  constraint: lesson_report_details_constraint!
  update_columns: [lesson_report_details_update_column!]!
  where: lesson_report_details_bool_exp
}

"""
ordering options when selecting data from "lesson_report_details"
"""
input lesson_report_details_order_by {
  created_at: order_by
  deleted_at: order_by
  lesson_report: lesson_reports_order_by
  lesson_report_detail_id: order_by
  lesson_report_id: order_by
  partner_dynamic_form_field_values_aggregate: partner_dynamic_form_field_values_aggregate_order_by
  resource_path: order_by
  student: students_order_by
  student_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "lesson_report_details"
"""
input lesson_report_details_pk_columns_input {
  lesson_report_detail_id: String!
}

"""
select columns of table "lesson_report_details"
"""
enum lesson_report_details_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  lesson_report_detail_id

  """column name"""
  lesson_report_id

  """column name"""
  resource_path

  """column name"""
  student_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "lesson_report_details"
"""
input lesson_report_details_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  lesson_report_detail_id: String
  lesson_report_id: String
  resource_path: String
  student_id: String
  updated_at: timestamptz
}

"""
update columns of table "lesson_report_details"
"""
enum lesson_report_details_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  lesson_report_detail_id

  """column name"""
  lesson_report_id

  """column name"""
  resource_path

  """column name"""
  student_id

  """column name"""
  updated_at
}

"""
columns and relationships of "lesson_reports"
"""
type lesson_reports {
  created_at: timestamptz!
  deleted_at: timestamptz
  form_config_id: String

  """An object relationship"""
  lesson: lessons
  lesson_id: String

  """An array relationship"""
  lesson_report_details(
    """distinct select on columns"""
    distinct_on: [lesson_report_details_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_report_details_order_by!]

    """filter the rows returned"""
    where: lesson_report_details_bool_exp
  ): [lesson_report_details!]!

  """An aggregated array relationship"""
  lesson_report_details_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_report_details_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_report_details_order_by!]

    """filter the rows returned"""
    where: lesson_report_details_bool_exp
  ): lesson_report_details_aggregate!
  lesson_report_id: String!

  """An object relationship"""
  partner_form_config: partner_form_configs
  report_submitting_status: String!
  resource_path: String!
  updated_at: timestamptz
}

"""
aggregated selection of "lesson_reports"
"""
type lesson_reports_aggregate {
  aggregate: lesson_reports_aggregate_fields
  nodes: [lesson_reports!]!
}

"""
aggregate fields of "lesson_reports"
"""
type lesson_reports_aggregate_fields {
  count(columns: [lesson_reports_select_column!], distinct: Boolean): Int
  max: lesson_reports_max_fields
  min: lesson_reports_min_fields
}

"""
order by aggregate values of table "lesson_reports"
"""
input lesson_reports_aggregate_order_by {
  count: order_by
  max: lesson_reports_max_order_by
  min: lesson_reports_min_order_by
}

"""
input type for inserting array relation for remote table "lesson_reports"
"""
input lesson_reports_arr_rel_insert_input {
  data: [lesson_reports_insert_input!]!
  on_conflict: lesson_reports_on_conflict
}

"""
Boolean expression to filter rows from the table "lesson_reports". All fields are combined with a logical 'AND'.
"""
input lesson_reports_bool_exp {
  _and: [lesson_reports_bool_exp]
  _not: lesson_reports_bool_exp
  _or: [lesson_reports_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  form_config_id: String_comparison_exp
  lesson: lessons_bool_exp
  lesson_id: String_comparison_exp
  lesson_report_details: lesson_report_details_bool_exp
  lesson_report_id: String_comparison_exp
  partner_form_config: partner_form_configs_bool_exp
  report_submitting_status: String_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "lesson_reports"
"""
enum lesson_reports_constraint {
  """unique or primary key constraint"""
  lesson_reports_pk
}

"""
input type for inserting data into table "lesson_reports"
"""
input lesson_reports_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  form_config_id: String
  lesson: lessons_obj_rel_insert_input
  lesson_id: String
  lesson_report_details: lesson_report_details_arr_rel_insert_input
  lesson_report_id: String
  partner_form_config: partner_form_configs_obj_rel_insert_input
  report_submitting_status: String
  resource_path: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type lesson_reports_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  form_config_id: String
  lesson_id: String
  lesson_report_id: String
  report_submitting_status: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "lesson_reports"
"""
input lesson_reports_max_order_by {
  created_at: order_by
  deleted_at: order_by
  form_config_id: order_by
  lesson_id: order_by
  lesson_report_id: order_by
  report_submitting_status: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type lesson_reports_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  form_config_id: String
  lesson_id: String
  lesson_report_id: String
  report_submitting_status: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "lesson_reports"
"""
input lesson_reports_min_order_by {
  created_at: order_by
  deleted_at: order_by
  form_config_id: order_by
  lesson_id: order_by
  lesson_report_id: order_by
  report_submitting_status: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "lesson_reports"
"""
type lesson_reports_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [lesson_reports!]!
}

"""
input type for inserting object relation for remote table "lesson_reports"
"""
input lesson_reports_obj_rel_insert_input {
  data: lesson_reports_insert_input!
  on_conflict: lesson_reports_on_conflict
}

"""
on conflict condition type for table "lesson_reports"
"""
input lesson_reports_on_conflict {
  constraint: lesson_reports_constraint!
  update_columns: [lesson_reports_update_column!]!
  where: lesson_reports_bool_exp
}

"""
ordering options when selecting data from "lesson_reports"
"""
input lesson_reports_order_by {
  created_at: order_by
  deleted_at: order_by
  form_config_id: order_by
  lesson: lessons_order_by
  lesson_id: order_by
  lesson_report_details_aggregate: lesson_report_details_aggregate_order_by
  lesson_report_id: order_by
  partner_form_config: partner_form_configs_order_by
  report_submitting_status: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "lesson_reports"
"""
input lesson_reports_pk_columns_input {
  lesson_report_id: String!
}

"""
select columns of table "lesson_reports"
"""
enum lesson_reports_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  form_config_id

  """column name"""
  lesson_id

  """column name"""
  lesson_report_id

  """column name"""
  report_submitting_status

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "lesson_reports"
"""
input lesson_reports_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  form_config_id: String
  lesson_id: String
  lesson_report_id: String
  report_submitting_status: String
  resource_path: String
  updated_at: timestamptz
}

"""
update columns of table "lesson_reports"
"""
enum lesson_reports_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  form_config_id

  """column name"""
  lesson_id

  """column name"""
  lesson_report_id

  """column name"""
  report_submitting_status

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
columns and relationships of "lesson_schedules"
"""
type lesson_schedules {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  formatted_date: String
  formatted_day: String
  formatted_month: String
  formatted_year: String
  lesson_id: String
  lesson_type: String
  start_date: timestamptz
  teacher_id: String
  updated_at: timestamptz
}

"""
aggregated selection of "lesson_schedules"
"""
type lesson_schedules_aggregate {
  aggregate: lesson_schedules_aggregate_fields
  nodes: [lesson_schedules!]!
}

"""
aggregate fields of "lesson_schedules"
"""
type lesson_schedules_aggregate_fields {
  count(columns: [lesson_schedules_select_column!], distinct: Boolean): Int
  max: lesson_schedules_max_fields
  min: lesson_schedules_min_fields
}

"""
order by aggregate values of table "lesson_schedules"
"""
input lesson_schedules_aggregate_order_by {
  count: order_by
  max: lesson_schedules_max_order_by
  min: lesson_schedules_min_order_by
}

"""
Boolean expression to filter rows from the table "lesson_schedules". All fields are combined with a logical 'AND'.
"""
input lesson_schedules_bool_exp {
  _and: [lesson_schedules_bool_exp]
  _not: lesson_schedules_bool_exp
  _or: [lesson_schedules_bool_exp]
  course_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  formatted_date: String_comparison_exp
  formatted_day: String_comparison_exp
  formatted_month: String_comparison_exp
  formatted_year: String_comparison_exp
  lesson_id: String_comparison_exp
  lesson_type: String_comparison_exp
  start_date: timestamptz_comparison_exp
  teacher_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""aggregate max on columns"""
type lesson_schedules_max_fields {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  formatted_date: String
  formatted_day: String
  formatted_month: String
  formatted_year: String
  lesson_id: String
  lesson_type: String
  start_date: timestamptz
  teacher_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "lesson_schedules"
"""
input lesson_schedules_max_order_by {
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  formatted_date: order_by
  formatted_day: order_by
  formatted_month: order_by
  formatted_year: order_by
  lesson_id: order_by
  lesson_type: order_by
  start_date: order_by
  teacher_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type lesson_schedules_min_fields {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  formatted_date: String
  formatted_day: String
  formatted_month: String
  formatted_year: String
  lesson_id: String
  lesson_type: String
  start_date: timestamptz
  teacher_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "lesson_schedules"
"""
input lesson_schedules_min_order_by {
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  formatted_date: order_by
  formatted_day: order_by
  formatted_month: order_by
  formatted_year: order_by
  lesson_id: order_by
  lesson_type: order_by
  start_date: order_by
  teacher_id: order_by
  updated_at: order_by
}

"""
ordering options when selecting data from "lesson_schedules"
"""
input lesson_schedules_order_by {
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  formatted_date: order_by
  formatted_day: order_by
  formatted_month: order_by
  formatted_year: order_by
  lesson_id: order_by
  lesson_type: order_by
  start_date: order_by
  teacher_id: order_by
  updated_at: order_by
}

"""
select columns of table "lesson_schedules"
"""
enum lesson_schedules_select_column {
  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  formatted_date

  """column name"""
  formatted_day

  """column name"""
  formatted_month

  """column name"""
  formatted_year

  """column name"""
  lesson_id

  """column name"""
  lesson_type

  """column name"""
  start_date

  """column name"""
  teacher_id

  """column name"""
  updated_at
}

"""
columns and relationships of "lesson_student_subscription_access_path"
"""
type lesson_student_subscription_access_path {
  created_at: timestamptz!
  deleted_at: timestamptz

  """An object relationship"""
  lesson_student_subscription: lesson_student_subscriptions!

  """An object relationship"""
  location: locations!
  location_id: String!
  resource_path: String!
  student_subscription_id: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "lesson_student_subscription_access_path"
"""
type lesson_student_subscription_access_path_aggregate {
  aggregate: lesson_student_subscription_access_path_aggregate_fields
  nodes: [lesson_student_subscription_access_path!]!
}

"""
aggregate fields of "lesson_student_subscription_access_path"
"""
type lesson_student_subscription_access_path_aggregate_fields {
  count(columns: [lesson_student_subscription_access_path_select_column!], distinct: Boolean): Int
  max: lesson_student_subscription_access_path_max_fields
  min: lesson_student_subscription_access_path_min_fields
}

"""
order by aggregate values of table "lesson_student_subscription_access_path"
"""
input lesson_student_subscription_access_path_aggregate_order_by {
  count: order_by
  max: lesson_student_subscription_access_path_max_order_by
  min: lesson_student_subscription_access_path_min_order_by
}

"""
input type for inserting array relation for remote table "lesson_student_subscription_access_path"
"""
input lesson_student_subscription_access_path_arr_rel_insert_input {
  data: [lesson_student_subscription_access_path_insert_input!]!
  on_conflict: lesson_student_subscription_access_path_on_conflict
}

"""
Boolean expression to filter rows from the table "lesson_student_subscription_access_path". All fields are combined with a logical 'AND'.
"""
input lesson_student_subscription_access_path_bool_exp {
  _and: [lesson_student_subscription_access_path_bool_exp]
  _not: lesson_student_subscription_access_path_bool_exp
  _or: [lesson_student_subscription_access_path_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  lesson_student_subscription: lesson_student_subscriptions_bool_exp
  location: locations_bool_exp
  location_id: String_comparison_exp
  resource_path: String_comparison_exp
  student_subscription_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "lesson_student_subscription_access_path"
"""
enum lesson_student_subscription_access_path_constraint {
  """unique or primary key constraint"""
  lesson_student_subscription_access_path_pk
}

"""
input type for inserting data into table "lesson_student_subscription_access_path"
"""
input lesson_student_subscription_access_path_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  lesson_student_subscription: lesson_student_subscriptions_obj_rel_insert_input
  location: locations_obj_rel_insert_input
  location_id: String
  resource_path: String
  student_subscription_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type lesson_student_subscription_access_path_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  resource_path: String
  student_subscription_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "lesson_student_subscription_access_path"
"""
input lesson_student_subscription_access_path_max_order_by {
  created_at: order_by
  deleted_at: order_by
  location_id: order_by
  resource_path: order_by
  student_subscription_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type lesson_student_subscription_access_path_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  resource_path: String
  student_subscription_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "lesson_student_subscription_access_path"
"""
input lesson_student_subscription_access_path_min_order_by {
  created_at: order_by
  deleted_at: order_by
  location_id: order_by
  resource_path: order_by
  student_subscription_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "lesson_student_subscription_access_path"
"""
type lesson_student_subscription_access_path_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [lesson_student_subscription_access_path!]!
}

"""
input type for inserting object relation for remote table "lesson_student_subscription_access_path"
"""
input lesson_student_subscription_access_path_obj_rel_insert_input {
  data: lesson_student_subscription_access_path_insert_input!
  on_conflict: lesson_student_subscription_access_path_on_conflict
}

"""
on conflict condition type for table "lesson_student_subscription_access_path"
"""
input lesson_student_subscription_access_path_on_conflict {
  constraint: lesson_student_subscription_access_path_constraint!
  update_columns: [lesson_student_subscription_access_path_update_column!]!
  where: lesson_student_subscription_access_path_bool_exp
}

"""
ordering options when selecting data from "lesson_student_subscription_access_path"
"""
input lesson_student_subscription_access_path_order_by {
  created_at: order_by
  deleted_at: order_by
  lesson_student_subscription: lesson_student_subscriptions_order_by
  location: locations_order_by
  location_id: order_by
  resource_path: order_by
  student_subscription_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "lesson_student_subscription_access_path"
"""
input lesson_student_subscription_access_path_pk_columns_input {
  location_id: String!
  student_subscription_id: String!
}

"""
select columns of table "lesson_student_subscription_access_path"
"""
enum lesson_student_subscription_access_path_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  location_id

  """column name"""
  resource_path

  """column name"""
  student_subscription_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "lesson_student_subscription_access_path"
"""
input lesson_student_subscription_access_path_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  resource_path: String
  student_subscription_id: String
  updated_at: timestamptz
}

"""
update columns of table "lesson_student_subscription_access_path"
"""
enum lesson_student_subscription_access_path_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  location_id

  """column name"""
  resource_path

  """column name"""
  student_subscription_id

  """column name"""
  updated_at
}

"""
columns and relationships of "lesson_student_subscriptions"
"""
type lesson_student_subscriptions {
  """An object relationship"""
  course: courses!
  course_id: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  end_at: timestamptz

  """An array relationship"""
  lesson_student_subscription_access_paths(
    """distinct select on columns"""
    distinct_on: [lesson_student_subscription_access_path_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_student_subscription_access_path_order_by!]

    """filter the rows returned"""
    where: lesson_student_subscription_access_path_bool_exp
  ): [lesson_student_subscription_access_path!]!

  """An aggregated array relationship"""
  lesson_student_subscription_access_paths_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_student_subscription_access_path_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_student_subscription_access_path_order_by!]

    """filter the rows returned"""
    where: lesson_student_subscription_access_path_bool_exp
  ): lesson_student_subscription_access_path_aggregate!
  resource_path: String!
  start_at: timestamptz

  """An object relationship"""
  student: students!
  student_id: String!
  student_subscription_id: String!
  subscription_id: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "lesson_student_subscriptions"
"""
type lesson_student_subscriptions_aggregate {
  aggregate: lesson_student_subscriptions_aggregate_fields
  nodes: [lesson_student_subscriptions!]!
}

"""
aggregate fields of "lesson_student_subscriptions"
"""
type lesson_student_subscriptions_aggregate_fields {
  count(columns: [lesson_student_subscriptions_select_column!], distinct: Boolean): Int
  max: lesson_student_subscriptions_max_fields
  min: lesson_student_subscriptions_min_fields
}

"""
order by aggregate values of table "lesson_student_subscriptions"
"""
input lesson_student_subscriptions_aggregate_order_by {
  count: order_by
  max: lesson_student_subscriptions_max_order_by
  min: lesson_student_subscriptions_min_order_by
}

"""
input type for inserting array relation for remote table "lesson_student_subscriptions"
"""
input lesson_student_subscriptions_arr_rel_insert_input {
  data: [lesson_student_subscriptions_insert_input!]!
  on_conflict: lesson_student_subscriptions_on_conflict
}

"""
Boolean expression to filter rows from the table "lesson_student_subscriptions". All fields are combined with a logical 'AND'.
"""
input lesson_student_subscriptions_bool_exp {
  _and: [lesson_student_subscriptions_bool_exp]
  _not: lesson_student_subscriptions_bool_exp
  _or: [lesson_student_subscriptions_bool_exp]
  course: courses_bool_exp
  course_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  end_at: timestamptz_comparison_exp
  lesson_student_subscription_access_paths: lesson_student_subscription_access_path_bool_exp
  resource_path: String_comparison_exp
  start_at: timestamptz_comparison_exp
  student: students_bool_exp
  student_id: String_comparison_exp
  student_subscription_id: String_comparison_exp
  subscription_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "lesson_student_subscriptions"
"""
enum lesson_student_subscriptions_constraint {
  """unique or primary key constraint"""
  lesson_student_subscriptions_pkey

  """unique or primary key constraint"""
  lesson_student_subscriptions_uniq
}

"""
input type for inserting data into table "lesson_student_subscriptions"
"""
input lesson_student_subscriptions_insert_input {
  course: courses_obj_rel_insert_input
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_at: timestamptz
  lesson_student_subscription_access_paths: lesson_student_subscription_access_path_arr_rel_insert_input
  resource_path: String
  start_at: timestamptz
  student: students_obj_rel_insert_input
  student_id: String
  student_subscription_id: String
  subscription_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type lesson_student_subscriptions_max_fields {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_at: timestamptz
  resource_path: String
  start_at: timestamptz
  student_id: String
  student_subscription_id: String
  subscription_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "lesson_student_subscriptions"
"""
input lesson_student_subscriptions_max_order_by {
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_at: order_by
  resource_path: order_by
  start_at: order_by
  student_id: order_by
  student_subscription_id: order_by
  subscription_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type lesson_student_subscriptions_min_fields {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_at: timestamptz
  resource_path: String
  start_at: timestamptz
  student_id: String
  student_subscription_id: String
  subscription_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "lesson_student_subscriptions"
"""
input lesson_student_subscriptions_min_order_by {
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_at: order_by
  resource_path: order_by
  start_at: order_by
  student_id: order_by
  student_subscription_id: order_by
  subscription_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "lesson_student_subscriptions"
"""
type lesson_student_subscriptions_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [lesson_student_subscriptions!]!
}

"""
input type for inserting object relation for remote table "lesson_student_subscriptions"
"""
input lesson_student_subscriptions_obj_rel_insert_input {
  data: lesson_student_subscriptions_insert_input!
  on_conflict: lesson_student_subscriptions_on_conflict
}

"""
on conflict condition type for table "lesson_student_subscriptions"
"""
input lesson_student_subscriptions_on_conflict {
  constraint: lesson_student_subscriptions_constraint!
  update_columns: [lesson_student_subscriptions_update_column!]!
  where: lesson_student_subscriptions_bool_exp
}

"""
ordering options when selecting data from "lesson_student_subscriptions"
"""
input lesson_student_subscriptions_order_by {
  course: courses_order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_at: order_by
  lesson_student_subscription_access_paths_aggregate: lesson_student_subscription_access_path_aggregate_order_by
  resource_path: order_by
  start_at: order_by
  student: students_order_by
  student_id: order_by
  student_subscription_id: order_by
  subscription_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "lesson_student_subscriptions"
"""
input lesson_student_subscriptions_pk_columns_input {
  student_subscription_id: String!
}

"""
select columns of table "lesson_student_subscriptions"
"""
enum lesson_student_subscriptions_select_column {
  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_at

  """column name"""
  resource_path

  """column name"""
  start_at

  """column name"""
  student_id

  """column name"""
  student_subscription_id

  """column name"""
  subscription_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "lesson_student_subscriptions"
"""
input lesson_student_subscriptions_set_input {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_at: timestamptz
  resource_path: String
  start_at: timestamptz
  student_id: String
  student_subscription_id: String
  subscription_id: String
  updated_at: timestamptz
}

"""
update columns of table "lesson_student_subscriptions"
"""
enum lesson_student_subscriptions_update_column {
  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_at

  """column name"""
  resource_path

  """column name"""
  start_at

  """column name"""
  student_id

  """column name"""
  student_subscription_id

  """column name"""
  subscription_id

  """column name"""
  updated_at
}

"""
columns and relationships of "lessons"
"""
type lessons {
  center_id: String
  class_id: String
  control_settings(
    """JSON select path"""
    path: String
  ): jsonb

  """An object relationship"""
  course: courses
  course_id: String

  """An array relationship"""
  courses_classes(
    """distinct select on columns"""
    distinct_on: [courses_classes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_classes_order_by!]

    """filter the rows returned"""
    where: courses_classes_bool_exp
  ): [courses_classes!]!

  """An aggregated array relationship"""
  courses_classes_aggregate(
    """distinct select on columns"""
    distinct_on: [courses_classes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_classes_order_by!]

    """filter the rows returned"""
    where: courses_classes_bool_exp
  ): courses_classes_aggregate!
  created_at: timestamptz!
  deleted_at: timestamptz
  end_at: timestamptz
  end_time: timestamptz
  is_locked: Boolean!
  learner_ids: _text!
  lesson_group_id: String
  lesson_id: String!

  """An array relationship"""
  lesson_members(
    """distinct select on columns"""
    distinct_on: [lesson_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_members_order_by!]

    """filter the rows returned"""
    where: lesson_members_bool_exp
  ): [lesson_members!]!

  """An aggregated array relationship"""
  lesson_members_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_members_order_by!]

    """filter the rows returned"""
    where: lesson_members_bool_exp
  ): lesson_members_aggregate!

  """An array relationship"""
  lesson_reports(
    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): [lesson_reports!]!

  """An aggregated array relationship"""
  lesson_reports_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): lesson_reports_aggregate!
  lesson_type: String

  """An array relationship"""
  lessons_courses(
    """distinct select on columns"""
    distinct_on: [lessons_courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_courses_order_by!]

    """filter the rows returned"""
    where: lessons_courses_bool_exp
  ): [lessons_courses!]!

  """An aggregated array relationship"""
  lessons_courses_aggregate(
    """distinct select on columns"""
    distinct_on: [lessons_courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_courses_order_by!]

    """filter the rows returned"""
    where: lessons_courses_bool_exp
  ): lessons_courses_aggregate!

  """An array relationship"""
  lessons_teachers(
    """distinct select on columns"""
    distinct_on: [lessons_teachers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_teachers_order_by!]

    """filter the rows returned"""
    where: lessons_teachers_bool_exp
  ): [lessons_teachers!]!

  """An aggregated array relationship"""
  lessons_teachers_aggregate(
    """distinct select on columns"""
    distinct_on: [lessons_teachers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_teachers_order_by!]

    """filter the rows returned"""
    where: lessons_teachers_bool_exp
  ): lessons_teachers_aggregate!
  name: String

  """An object relationship"""
  preset_study_plan_weekly_format: preset_study_plans_weekly_format

  """An object relationship"""
  preset_study_plans_weekly: preset_study_plans_weekly
  resource_path: String!
  room_id: String
  room_state(
    """JSON select path"""
    path: String
  ): jsonb
  scheduler_id: String
  scheduling_status: String
  start_time: timestamptz
  status: String
  stream_learner_counter: Int!
  teacher_id: String
  teaching_medium: String
  teaching_method: String
  teaching_model: String
  updated_at: timestamptz!

  """An object relationship"""
  users: users
}

"""
aggregated selection of "lessons"
"""
type lessons_aggregate {
  aggregate: lessons_aggregate_fields
  nodes: [lessons!]!
}

"""
aggregate fields of "lessons"
"""
type lessons_aggregate_fields {
  avg: lessons_avg_fields
  count(columns: [lessons_select_column!], distinct: Boolean): Int
  max: lessons_max_fields
  min: lessons_min_fields
  stddev: lessons_stddev_fields
  stddev_pop: lessons_stddev_pop_fields
  stddev_samp: lessons_stddev_samp_fields
  sum: lessons_sum_fields
  var_pop: lessons_var_pop_fields
  var_samp: lessons_var_samp_fields
  variance: lessons_variance_fields
}

"""
order by aggregate values of table "lessons"
"""
input lessons_aggregate_order_by {
  avg: lessons_avg_order_by
  count: order_by
  max: lessons_max_order_by
  min: lessons_min_order_by
  stddev: lessons_stddev_order_by
  stddev_pop: lessons_stddev_pop_order_by
  stddev_samp: lessons_stddev_samp_order_by
  sum: lessons_sum_order_by
  var_pop: lessons_var_pop_order_by
  var_samp: lessons_var_samp_order_by
  variance: lessons_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input lessons_append_input {
  control_settings: jsonb
  room_state: jsonb
}

"""
input type for inserting array relation for remote table "lessons"
"""
input lessons_arr_rel_insert_input {
  data: [lessons_insert_input!]!
  on_conflict: lessons_on_conflict
}

"""aggregate avg on columns"""
type lessons_avg_fields {
  stream_learner_counter: Float
}

"""
order by avg() on columns of table "lessons"
"""
input lessons_avg_order_by {
  stream_learner_counter: order_by
}

"""
Boolean expression to filter rows from the table "lessons". All fields are combined with a logical 'AND'.
"""
input lessons_bool_exp {
  _and: [lessons_bool_exp]
  _not: lessons_bool_exp
  _or: [lessons_bool_exp]
  center_id: String_comparison_exp
  class_id: String_comparison_exp
  control_settings: jsonb_comparison_exp
  course: courses_bool_exp
  course_id: String_comparison_exp
  courses_classes: courses_classes_bool_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  end_at: timestamptz_comparison_exp
  end_time: timestamptz_comparison_exp
  is_locked: Boolean_comparison_exp
  learner_ids: _text_comparison_exp
  lesson_group_id: String_comparison_exp
  lesson_id: String_comparison_exp
  lesson_members: lesson_members_bool_exp
  lesson_reports: lesson_reports_bool_exp
  lesson_type: String_comparison_exp
  lessons_courses: lessons_courses_bool_exp
  lessons_teachers: lessons_teachers_bool_exp
  name: String_comparison_exp
  preset_study_plan_weekly_format: preset_study_plans_weekly_format_bool_exp
  preset_study_plans_weekly: preset_study_plans_weekly_bool_exp
  resource_path: String_comparison_exp
  room_id: String_comparison_exp
  room_state: jsonb_comparison_exp
  scheduler_id: String_comparison_exp
  scheduling_status: String_comparison_exp
  start_time: timestamptz_comparison_exp
  status: String_comparison_exp
  stream_learner_counter: Int_comparison_exp
  teacher_id: String_comparison_exp
  teaching_medium: String_comparison_exp
  teaching_method: String_comparison_exp
  teaching_model: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  users: users_bool_exp
}

"""
unique or primary key constraints on table "lessons"
"""
enum lessons_constraint {
  """unique or primary key constraint"""
  lessons_pk
}

"""
columns and relationships of "lessons_courses"
"""
type lessons_courses {
  """An object relationship"""
  course: courses!
  course_id: String!
  created_at: timestamptz!
  deleted_at: timestamptz

  """An object relationship"""
  lesson: lessons!
  lesson_id: String!
  resource_path: String!
}

"""
aggregated selection of "lessons_courses"
"""
type lessons_courses_aggregate {
  aggregate: lessons_courses_aggregate_fields
  nodes: [lessons_courses!]!
}

"""
aggregate fields of "lessons_courses"
"""
type lessons_courses_aggregate_fields {
  count(columns: [lessons_courses_select_column!], distinct: Boolean): Int
  max: lessons_courses_max_fields
  min: lessons_courses_min_fields
}

"""
order by aggregate values of table "lessons_courses"
"""
input lessons_courses_aggregate_order_by {
  count: order_by
  max: lessons_courses_max_order_by
  min: lessons_courses_min_order_by
}

"""
input type for inserting array relation for remote table "lessons_courses"
"""
input lessons_courses_arr_rel_insert_input {
  data: [lessons_courses_insert_input!]!
  on_conflict: lessons_courses_on_conflict
}

"""
Boolean expression to filter rows from the table "lessons_courses". All fields are combined with a logical 'AND'.
"""
input lessons_courses_bool_exp {
  _and: [lessons_courses_bool_exp]
  _not: lessons_courses_bool_exp
  _or: [lessons_courses_bool_exp]
  course: courses_bool_exp
  course_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  lesson: lessons_bool_exp
  lesson_id: String_comparison_exp
  resource_path: String_comparison_exp
}

"""
unique or primary key constraints on table "lessons_courses"
"""
enum lessons_courses_constraint {
  """unique or primary key constraint"""
  lessons_courses_pk
}

"""
input type for inserting data into table "lessons_courses"
"""
input lessons_courses_insert_input {
  course: courses_obj_rel_insert_input
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  lesson: lessons_obj_rel_insert_input
  lesson_id: String
  resource_path: String
}

"""aggregate max on columns"""
type lessons_courses_max_fields {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  lesson_id: String
  resource_path: String
}

"""
order by max() on columns of table "lessons_courses"
"""
input lessons_courses_max_order_by {
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  lesson_id: order_by
  resource_path: order_by
}

"""aggregate min on columns"""
type lessons_courses_min_fields {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  lesson_id: String
  resource_path: String
}

"""
order by min() on columns of table "lessons_courses"
"""
input lessons_courses_min_order_by {
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  lesson_id: order_by
  resource_path: order_by
}

"""
response of any mutation on the table "lessons_courses"
"""
type lessons_courses_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [lessons_courses!]!
}

"""
input type for inserting object relation for remote table "lessons_courses"
"""
input lessons_courses_obj_rel_insert_input {
  data: lessons_courses_insert_input!
  on_conflict: lessons_courses_on_conflict
}

"""
on conflict condition type for table "lessons_courses"
"""
input lessons_courses_on_conflict {
  constraint: lessons_courses_constraint!
  update_columns: [lessons_courses_update_column!]!
  where: lessons_courses_bool_exp
}

"""
ordering options when selecting data from "lessons_courses"
"""
input lessons_courses_order_by {
  course: courses_order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  lesson: lessons_order_by
  lesson_id: order_by
  resource_path: order_by
}

"""
primary key columns input for table: "lessons_courses"
"""
input lessons_courses_pk_columns_input {
  course_id: String!
  lesson_id: String!
}

"""
select columns of table "lessons_courses"
"""
enum lessons_courses_select_column {
  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  lesson_id

  """column name"""
  resource_path
}

"""
input type for updating data in table "lessons_courses"
"""
input lessons_courses_set_input {
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  lesson_id: String
  resource_path: String
}

"""
update columns of table "lessons_courses"
"""
enum lessons_courses_update_column {
  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  lesson_id

  """column name"""
  resource_path
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input lessons_delete_at_path_input {
  control_settings: [String]
  room_state: [String]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input lessons_delete_elem_input {
  control_settings: Int
  room_state: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input lessons_delete_key_input {
  control_settings: String
  room_state: String
}

"""
input type for incrementing integer column in table "lessons"
"""
input lessons_inc_input {
  stream_learner_counter: Int
}

"""
input type for inserting data into table "lessons"
"""
input lessons_insert_input {
  center_id: String
  class_id: String
  control_settings: jsonb
  course: courses_obj_rel_insert_input
  course_id: String
  courses_classes: courses_classes_arr_rel_insert_input
  created_at: timestamptz
  deleted_at: timestamptz
  end_at: timestamptz
  end_time: timestamptz
  is_locked: Boolean
  learner_ids: _text
  lesson_group_id: String
  lesson_id: String
  lesson_members: lesson_members_arr_rel_insert_input
  lesson_reports: lesson_reports_arr_rel_insert_input
  lesson_type: String
  lessons_courses: lessons_courses_arr_rel_insert_input
  lessons_teachers: lessons_teachers_arr_rel_insert_input
  name: String
  preset_study_plan_weekly_format: preset_study_plans_weekly_format_obj_rel_insert_input
  preset_study_plans_weekly: preset_study_plans_weekly_obj_rel_insert_input
  resource_path: String
  room_id: String
  room_state: jsonb
  scheduler_id: String
  scheduling_status: String
  start_time: timestamptz
  status: String
  stream_learner_counter: Int
  teacher_id: String
  teaching_medium: String
  teaching_method: String
  teaching_model: String
  updated_at: timestamptz
  users: users_obj_rel_insert_input
}

"""aggregate max on columns"""
type lessons_max_fields {
  center_id: String
  class_id: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_at: timestamptz
  end_time: timestamptz
  lesson_group_id: String
  lesson_id: String
  lesson_type: String
  name: String
  resource_path: String
  room_id: String
  scheduler_id: String
  scheduling_status: String
  start_time: timestamptz
  status: String
  stream_learner_counter: Int
  teacher_id: String
  teaching_medium: String
  teaching_method: String
  teaching_model: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "lessons"
"""
input lessons_max_order_by {
  center_id: order_by
  class_id: order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_at: order_by
  end_time: order_by
  lesson_group_id: order_by
  lesson_id: order_by
  lesson_type: order_by
  name: order_by
  resource_path: order_by
  room_id: order_by
  scheduler_id: order_by
  scheduling_status: order_by
  start_time: order_by
  status: order_by
  stream_learner_counter: order_by
  teacher_id: order_by
  teaching_medium: order_by
  teaching_method: order_by
  teaching_model: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type lessons_min_fields {
  center_id: String
  class_id: String
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_at: timestamptz
  end_time: timestamptz
  lesson_group_id: String
  lesson_id: String
  lesson_type: String
  name: String
  resource_path: String
  room_id: String
  scheduler_id: String
  scheduling_status: String
  start_time: timestamptz
  status: String
  stream_learner_counter: Int
  teacher_id: String
  teaching_medium: String
  teaching_method: String
  teaching_model: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "lessons"
"""
input lessons_min_order_by {
  center_id: order_by
  class_id: order_by
  course_id: order_by
  created_at: order_by
  deleted_at: order_by
  end_at: order_by
  end_time: order_by
  lesson_group_id: order_by
  lesson_id: order_by
  lesson_type: order_by
  name: order_by
  resource_path: order_by
  room_id: order_by
  scheduler_id: order_by
  scheduling_status: order_by
  start_time: order_by
  status: order_by
  stream_learner_counter: order_by
  teacher_id: order_by
  teaching_medium: order_by
  teaching_method: order_by
  teaching_model: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "lessons"
"""
type lessons_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [lessons!]!
}

"""
input type for inserting object relation for remote table "lessons"
"""
input lessons_obj_rel_insert_input {
  data: lessons_insert_input!
  on_conflict: lessons_on_conflict
}

"""
on conflict condition type for table "lessons"
"""
input lessons_on_conflict {
  constraint: lessons_constraint!
  update_columns: [lessons_update_column!]!
  where: lessons_bool_exp
}

"""
ordering options when selecting data from "lessons"
"""
input lessons_order_by {
  center_id: order_by
  class_id: order_by
  control_settings: order_by
  course: courses_order_by
  course_id: order_by
  courses_classes_aggregate: courses_classes_aggregate_order_by
  created_at: order_by
  deleted_at: order_by
  end_at: order_by
  end_time: order_by
  is_locked: order_by
  learner_ids: order_by
  lesson_group_id: order_by
  lesson_id: order_by
  lesson_members_aggregate: lesson_members_aggregate_order_by
  lesson_reports_aggregate: lesson_reports_aggregate_order_by
  lesson_type: order_by
  lessons_courses_aggregate: lessons_courses_aggregate_order_by
  lessons_teachers_aggregate: lessons_teachers_aggregate_order_by
  name: order_by
  preset_study_plan_weekly_format: preset_study_plans_weekly_format_order_by
  preset_study_plans_weekly: preset_study_plans_weekly_order_by
  resource_path: order_by
  room_id: order_by
  room_state: order_by
  scheduler_id: order_by
  scheduling_status: order_by
  start_time: order_by
  status: order_by
  stream_learner_counter: order_by
  teacher_id: order_by
  teaching_medium: order_by
  teaching_method: order_by
  teaching_model: order_by
  updated_at: order_by
  users: users_order_by
}

"""
primary key columns input for table: "lessons"
"""
input lessons_pk_columns_input {
  lesson_id: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input lessons_prepend_input {
  control_settings: jsonb
  room_state: jsonb
}

"""
select columns of table "lessons"
"""
enum lessons_select_column {
  """column name"""
  center_id

  """column name"""
  class_id

  """column name"""
  control_settings

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_at

  """column name"""
  end_time

  """column name"""
  is_locked

  """column name"""
  learner_ids

  """column name"""
  lesson_group_id

  """column name"""
  lesson_id

  """column name"""
  lesson_type

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  room_id

  """column name"""
  room_state

  """column name"""
  scheduler_id

  """column name"""
  scheduling_status

  """column name"""
  start_time

  """column name"""
  status

  """column name"""
  stream_learner_counter

  """column name"""
  teacher_id

  """column name"""
  teaching_medium

  """column name"""
  teaching_method

  """column name"""
  teaching_model

  """column name"""
  updated_at
}

"""
input type for updating data in table "lessons"
"""
input lessons_set_input {
  center_id: String
  class_id: String
  control_settings: jsonb
  course_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  end_at: timestamptz
  end_time: timestamptz
  is_locked: Boolean
  learner_ids: _text
  lesson_group_id: String
  lesson_id: String
  lesson_type: String
  name: String
  resource_path: String
  room_id: String
  room_state: jsonb
  scheduler_id: String
  scheduling_status: String
  start_time: timestamptz
  status: String
  stream_learner_counter: Int
  teacher_id: String
  teaching_medium: String
  teaching_method: String
  teaching_model: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type lessons_stddev_fields {
  stream_learner_counter: Float
}

"""
order by stddev() on columns of table "lessons"
"""
input lessons_stddev_order_by {
  stream_learner_counter: order_by
}

"""aggregate stddev_pop on columns"""
type lessons_stddev_pop_fields {
  stream_learner_counter: Float
}

"""
order by stddev_pop() on columns of table "lessons"
"""
input lessons_stddev_pop_order_by {
  stream_learner_counter: order_by
}

"""aggregate stddev_samp on columns"""
type lessons_stddev_samp_fields {
  stream_learner_counter: Float
}

"""
order by stddev_samp() on columns of table "lessons"
"""
input lessons_stddev_samp_order_by {
  stream_learner_counter: order_by
}

"""aggregate sum on columns"""
type lessons_sum_fields {
  stream_learner_counter: Int
}

"""
order by sum() on columns of table "lessons"
"""
input lessons_sum_order_by {
  stream_learner_counter: order_by
}

"""
columns and relationships of "lessons_teachers"
"""
type lessons_teachers {
  created_at: timestamptz!
  deleted_at: timestamptz

  """An object relationship"""
  lesson: lessons!
  lesson_id: String!
  resource_path: String!

  """An object relationship"""
  teacher: teachers!
  teacher_id: String!
}

"""
aggregated selection of "lessons_teachers"
"""
type lessons_teachers_aggregate {
  aggregate: lessons_teachers_aggregate_fields
  nodes: [lessons_teachers!]!
}

"""
aggregate fields of "lessons_teachers"
"""
type lessons_teachers_aggregate_fields {
  count(columns: [lessons_teachers_select_column!], distinct: Boolean): Int
  max: lessons_teachers_max_fields
  min: lessons_teachers_min_fields
}

"""
order by aggregate values of table "lessons_teachers"
"""
input lessons_teachers_aggregate_order_by {
  count: order_by
  max: lessons_teachers_max_order_by
  min: lessons_teachers_min_order_by
}

"""
input type for inserting array relation for remote table "lessons_teachers"
"""
input lessons_teachers_arr_rel_insert_input {
  data: [lessons_teachers_insert_input!]!
  on_conflict: lessons_teachers_on_conflict
}

"""
Boolean expression to filter rows from the table "lessons_teachers". All fields are combined with a logical 'AND'.
"""
input lessons_teachers_bool_exp {
  _and: [lessons_teachers_bool_exp]
  _not: lessons_teachers_bool_exp
  _or: [lessons_teachers_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  lesson: lessons_bool_exp
  lesson_id: String_comparison_exp
  resource_path: String_comparison_exp
  teacher: teachers_bool_exp
  teacher_id: String_comparison_exp
}

"""
unique or primary key constraints on table "lessons_teachers"
"""
enum lessons_teachers_constraint {
  """unique or primary key constraint"""
  lessons_teachers_pk
}

"""
input type for inserting data into table "lessons_teachers"
"""
input lessons_teachers_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  lesson: lessons_obj_rel_insert_input
  lesson_id: String
  resource_path: String
  teacher: teachers_obj_rel_insert_input
  teacher_id: String
}

"""aggregate max on columns"""
type lessons_teachers_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  lesson_id: String
  resource_path: String
  teacher_id: String
}

"""
order by max() on columns of table "lessons_teachers"
"""
input lessons_teachers_max_order_by {
  created_at: order_by
  deleted_at: order_by
  lesson_id: order_by
  resource_path: order_by
  teacher_id: order_by
}

"""aggregate min on columns"""
type lessons_teachers_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  lesson_id: String
  resource_path: String
  teacher_id: String
}

"""
order by min() on columns of table "lessons_teachers"
"""
input lessons_teachers_min_order_by {
  created_at: order_by
  deleted_at: order_by
  lesson_id: order_by
  resource_path: order_by
  teacher_id: order_by
}

"""
response of any mutation on the table "lessons_teachers"
"""
type lessons_teachers_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [lessons_teachers!]!
}

"""
input type for inserting object relation for remote table "lessons_teachers"
"""
input lessons_teachers_obj_rel_insert_input {
  data: lessons_teachers_insert_input!
  on_conflict: lessons_teachers_on_conflict
}

"""
on conflict condition type for table "lessons_teachers"
"""
input lessons_teachers_on_conflict {
  constraint: lessons_teachers_constraint!
  update_columns: [lessons_teachers_update_column!]!
  where: lessons_teachers_bool_exp
}

"""
ordering options when selecting data from "lessons_teachers"
"""
input lessons_teachers_order_by {
  created_at: order_by
  deleted_at: order_by
  lesson: lessons_order_by
  lesson_id: order_by
  resource_path: order_by
  teacher: teachers_order_by
  teacher_id: order_by
}

"""
primary key columns input for table: "lessons_teachers"
"""
input lessons_teachers_pk_columns_input {
  lesson_id: String!
  teacher_id: String!
}

"""
select columns of table "lessons_teachers"
"""
enum lessons_teachers_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  lesson_id

  """column name"""
  resource_path

  """column name"""
  teacher_id
}

"""
input type for updating data in table "lessons_teachers"
"""
input lessons_teachers_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  lesson_id: String
  resource_path: String
  teacher_id: String
}

"""
update columns of table "lessons_teachers"
"""
enum lessons_teachers_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  lesson_id

  """column name"""
  resource_path

  """column name"""
  teacher_id
}

"""
update columns of table "lessons"
"""
enum lessons_update_column {
  """column name"""
  center_id

  """column name"""
  class_id

  """column name"""
  control_settings

  """column name"""
  course_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_at

  """column name"""
  end_time

  """column name"""
  is_locked

  """column name"""
  learner_ids

  """column name"""
  lesson_group_id

  """column name"""
  lesson_id

  """column name"""
  lesson_type

  """column name"""
  name

  """column name"""
  resource_path

  """column name"""
  room_id

  """column name"""
  room_state

  """column name"""
  scheduler_id

  """column name"""
  scheduling_status

  """column name"""
  start_time

  """column name"""
  status

  """column name"""
  stream_learner_counter

  """column name"""
  teacher_id

  """column name"""
  teaching_medium

  """column name"""
  teaching_method

  """column name"""
  teaching_model

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type lessons_var_pop_fields {
  stream_learner_counter: Float
}

"""
order by var_pop() on columns of table "lessons"
"""
input lessons_var_pop_order_by {
  stream_learner_counter: order_by
}

"""aggregate var_samp on columns"""
type lessons_var_samp_fields {
  stream_learner_counter: Float
}

"""
order by var_samp() on columns of table "lessons"
"""
input lessons_var_samp_order_by {
  stream_learner_counter: order_by
}

"""aggregate variance on columns"""
type lessons_variance_fields {
  stream_learner_counter: Float
}

"""
order by variance() on columns of table "lessons"
"""
input lessons_variance_order_by {
  stream_learner_counter: order_by
}

"""
columns and relationships of "location_types"
"""
type location_types {
  created_at: timestamptz!
  deleted_at: timestamptz
  display_name: String
  is_archived: Boolean!
  location_type_id: String!
  name: String!
  parent_location_type_id: String
  parent_name: String
  resource_path: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "location_types"
"""
type location_types_aggregate {
  aggregate: location_types_aggregate_fields
  nodes: [location_types!]!
}

"""
aggregate fields of "location_types"
"""
type location_types_aggregate_fields {
  count(columns: [location_types_select_column!], distinct: Boolean): Int
  max: location_types_max_fields
  min: location_types_min_fields
}

"""
order by aggregate values of table "location_types"
"""
input location_types_aggregate_order_by {
  count: order_by
  max: location_types_max_order_by
  min: location_types_min_order_by
}

"""
input type for inserting array relation for remote table "location_types"
"""
input location_types_arr_rel_insert_input {
  data: [location_types_insert_input!]!
  on_conflict: location_types_on_conflict
}

"""
Boolean expression to filter rows from the table "location_types". All fields are combined with a logical 'AND'.
"""
input location_types_bool_exp {
  _and: [location_types_bool_exp]
  _not: location_types_bool_exp
  _or: [location_types_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  display_name: String_comparison_exp
  is_archived: Boolean_comparison_exp
  location_type_id: String_comparison_exp
  name: String_comparison_exp
  parent_location_type_id: String_comparison_exp
  parent_name: String_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "location_types"
"""
enum location_types_constraint {
  """unique or primary key constraint"""
  location_types_pkey

  """unique or primary key constraint"""
  unique__location_type_name_resource_path
}

"""
input type for inserting data into table "location_types"
"""
input location_types_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  display_name: String
  is_archived: Boolean
  location_type_id: String
  name: String
  parent_location_type_id: String
  parent_name: String
  resource_path: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type location_types_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  display_name: String
  location_type_id: String
  name: String
  parent_location_type_id: String
  parent_name: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "location_types"
"""
input location_types_max_order_by {
  created_at: order_by
  deleted_at: order_by
  display_name: order_by
  location_type_id: order_by
  name: order_by
  parent_location_type_id: order_by
  parent_name: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type location_types_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  display_name: String
  location_type_id: String
  name: String
  parent_location_type_id: String
  parent_name: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "location_types"
"""
input location_types_min_order_by {
  created_at: order_by
  deleted_at: order_by
  display_name: order_by
  location_type_id: order_by
  name: order_by
  parent_location_type_id: order_by
  parent_name: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "location_types"
"""
type location_types_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [location_types!]!
}

"""
input type for inserting object relation for remote table "location_types"
"""
input location_types_obj_rel_insert_input {
  data: location_types_insert_input!
  on_conflict: location_types_on_conflict
}

"""
on conflict condition type for table "location_types"
"""
input location_types_on_conflict {
  constraint: location_types_constraint!
  update_columns: [location_types_update_column!]!
  where: location_types_bool_exp
}

"""
ordering options when selecting data from "location_types"
"""
input location_types_order_by {
  created_at: order_by
  deleted_at: order_by
  display_name: order_by
  is_archived: order_by
  location_type_id: order_by
  name: order_by
  parent_location_type_id: order_by
  parent_name: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "location_types"
"""
input location_types_pk_columns_input {
  location_type_id: String!
}

"""
select columns of table "location_types"
"""
enum location_types_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_name

  """column name"""
  is_archived

  """column name"""
  location_type_id

  """column name"""
  name

  """column name"""
  parent_location_type_id

  """column name"""
  parent_name

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "location_types"
"""
input location_types_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  display_name: String
  is_archived: Boolean
  location_type_id: String
  name: String
  parent_location_type_id: String
  parent_name: String
  resource_path: String
  updated_at: timestamptz
}

"""
update columns of table "location_types"
"""
enum location_types_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_name

  """column name"""
  is_archived

  """column name"""
  location_type_id

  """column name"""
  name

  """column name"""
  parent_location_type_id

  """column name"""
  parent_name

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
columns and relationships of "locations"
"""
type locations {
  access_path: String

  """An array relationship"""
  course_access_paths(
    """distinct select on columns"""
    distinct_on: [course_access_paths_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_access_paths_order_by!]

    """filter the rows returned"""
    where: course_access_paths_bool_exp
  ): [course_access_paths!]!

  """An aggregated array relationship"""
  course_access_paths_aggregate(
    """distinct select on columns"""
    distinct_on: [course_access_paths_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_access_paths_order_by!]

    """filter the rows returned"""
    where: course_access_paths_bool_exp
  ): course_access_paths_aggregate!
  created_at: timestamptz!
  deleted_at: timestamptz
  is_archived: Boolean!

  """An array relationship"""
  lesson_student_subscription_access_paths(
    """distinct select on columns"""
    distinct_on: [lesson_student_subscription_access_path_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_student_subscription_access_path_order_by!]

    """filter the rows returned"""
    where: lesson_student_subscription_access_path_bool_exp
  ): [lesson_student_subscription_access_path!]!

  """An aggregated array relationship"""
  lesson_student_subscription_access_paths_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_student_subscription_access_path_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_student_subscription_access_path_order_by!]

    """filter the rows returned"""
    where: lesson_student_subscription_access_path_bool_exp
  ): lesson_student_subscription_access_path_aggregate!
  location_id: String!
  location_type: String

  """An object relationship"""
  location_types: location_types

  """An object relationship"""
  locations: locations
  name: String!
  parent_location_id: String
  partner_internal_id: String
  partner_internal_parent_id: String
  resource_path: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "locations"
"""
type locations_aggregate {
  aggregate: locations_aggregate_fields
  nodes: [locations!]!
}

"""
aggregate fields of "locations"
"""
type locations_aggregate_fields {
  count(columns: [locations_select_column!], distinct: Boolean): Int
  max: locations_max_fields
  min: locations_min_fields
}

"""
order by aggregate values of table "locations"
"""
input locations_aggregate_order_by {
  count: order_by
  max: locations_max_order_by
  min: locations_min_order_by
}

"""
input type for inserting array relation for remote table "locations"
"""
input locations_arr_rel_insert_input {
  data: [locations_insert_input!]!
  on_conflict: locations_on_conflict
}

"""
Boolean expression to filter rows from the table "locations". All fields are combined with a logical 'AND'.
"""
input locations_bool_exp {
  _and: [locations_bool_exp]
  _not: locations_bool_exp
  _or: [locations_bool_exp]
  access_path: String_comparison_exp
  course_access_paths: course_access_paths_bool_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  is_archived: Boolean_comparison_exp
  lesson_student_subscription_access_paths: lesson_student_subscription_access_path_bool_exp
  location_id: String_comparison_exp
  location_type: String_comparison_exp
  location_types: location_types_bool_exp
  locations: locations_bool_exp
  name: String_comparison_exp
  parent_location_id: String_comparison_exp
  partner_internal_id: String_comparison_exp
  partner_internal_parent_id: String_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "locations"
"""
enum locations_constraint {
  """unique or primary key constraint"""
  locations_pkey
}

"""
input type for inserting data into table "locations"
"""
input locations_insert_input {
  access_path: String
  course_access_paths: course_access_paths_arr_rel_insert_input
  created_at: timestamptz
  deleted_at: timestamptz
  is_archived: Boolean
  lesson_student_subscription_access_paths: lesson_student_subscription_access_path_arr_rel_insert_input
  location_id: String
  location_type: String
  location_types: location_types_obj_rel_insert_input
  locations: locations_obj_rel_insert_input
  name: String
  parent_location_id: String
  partner_internal_id: String
  partner_internal_parent_id: String
  resource_path: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type locations_max_fields {
  access_path: String
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  location_type: String
  name: String
  parent_location_id: String
  partner_internal_id: String
  partner_internal_parent_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "locations"
"""
input locations_max_order_by {
  access_path: order_by
  created_at: order_by
  deleted_at: order_by
  location_id: order_by
  location_type: order_by
  name: order_by
  parent_location_id: order_by
  partner_internal_id: order_by
  partner_internal_parent_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type locations_min_fields {
  access_path: String
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  location_type: String
  name: String
  parent_location_id: String
  partner_internal_id: String
  partner_internal_parent_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "locations"
"""
input locations_min_order_by {
  access_path: order_by
  created_at: order_by
  deleted_at: order_by
  location_id: order_by
  location_type: order_by
  name: order_by
  parent_location_id: order_by
  partner_internal_id: order_by
  partner_internal_parent_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "locations"
"""
type locations_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [locations!]!
}

"""
input type for inserting object relation for remote table "locations"
"""
input locations_obj_rel_insert_input {
  data: locations_insert_input!
  on_conflict: locations_on_conflict
}

"""
on conflict condition type for table "locations"
"""
input locations_on_conflict {
  constraint: locations_constraint!
  update_columns: [locations_update_column!]!
  where: locations_bool_exp
}

"""
ordering options when selecting data from "locations"
"""
input locations_order_by {
  access_path: order_by
  course_access_paths_aggregate: course_access_paths_aggregate_order_by
  created_at: order_by
  deleted_at: order_by
  is_archived: order_by
  lesson_student_subscription_access_paths_aggregate: lesson_student_subscription_access_path_aggregate_order_by
  location_id: order_by
  location_type: order_by
  location_types: location_types_order_by
  locations: locations_order_by
  name: order_by
  parent_location_id: order_by
  partner_internal_id: order_by
  partner_internal_parent_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "locations"
"""
input locations_pk_columns_input {
  location_id: String!
}

"""
select columns of table "locations"
"""
enum locations_select_column {
  """column name"""
  access_path

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  is_archived

  """column name"""
  location_id

  """column name"""
  location_type

  """column name"""
  name

  """column name"""
  parent_location_id

  """column name"""
  partner_internal_id

  """column name"""
  partner_internal_parent_id

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "locations"
"""
input locations_set_input {
  access_path: String
  created_at: timestamptz
  deleted_at: timestamptz
  is_archived: Boolean
  location_id: String
  location_type: String
  name: String
  parent_location_id: String
  partner_internal_id: String
  partner_internal_parent_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
update columns of table "locations"
"""
enum locations_update_column {
  """column name"""
  access_path

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  is_archived

  """column name"""
  location_id

  """column name"""
  location_type

  """column name"""
  name

  """column name"""
  parent_location_id

  """column name"""
  partner_internal_id

  """column name"""
  partner_internal_parent_id

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
columns and relationships of "media"
"""
type media {
  comments(
    """JSON select path"""
    path: String
  ): jsonb

  """An array relationship"""
  conversion_tasks(
    """distinct select on columns"""
    distinct_on: [conversion_tasks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [conversion_tasks_order_by!]

    """filter the rows returned"""
    where: conversion_tasks_bool_exp
  ): [conversion_tasks!]!

  """An aggregated array relationship"""
  conversion_tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [conversion_tasks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [conversion_tasks_order_by!]

    """filter the rows returned"""
    where: conversion_tasks_bool_exp
  ): conversion_tasks_aggregate!
  converted_images(
    """JSON select path"""
    path: String
  ): jsonb
  created_at: timestamptz!
  deleted_at: timestamptz
  media_id: String!
  name: String
  resource: String
  resource_path: String!
  type: String
  updated_at: timestamptz!
}

"""
aggregated selection of "media"
"""
type media_aggregate {
  aggregate: media_aggregate_fields
  nodes: [media!]!
}

"""
aggregate fields of "media"
"""
type media_aggregate_fields {
  count(columns: [media_select_column!], distinct: Boolean): Int
  max: media_max_fields
  min: media_min_fields
}

"""
order by aggregate values of table "media"
"""
input media_aggregate_order_by {
  count: order_by
  max: media_max_order_by
  min: media_min_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input media_append_input {
  comments: jsonb
  converted_images: jsonb
}

"""
input type for inserting array relation for remote table "media"
"""
input media_arr_rel_insert_input {
  data: [media_insert_input!]!
  on_conflict: media_on_conflict
}

"""
Boolean expression to filter rows from the table "media". All fields are combined with a logical 'AND'.
"""
input media_bool_exp {
  _and: [media_bool_exp]
  _not: media_bool_exp
  _or: [media_bool_exp]
  comments: jsonb_comparison_exp
  conversion_tasks: conversion_tasks_bool_exp
  converted_images: jsonb_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  media_id: String_comparison_exp
  name: String_comparison_exp
  resource: String_comparison_exp
  resource_path: String_comparison_exp
  type: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "media"
"""
enum media_constraint {
  """unique or primary key constraint"""
  media_pk
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input media_delete_at_path_input {
  comments: [String]
  converted_images: [String]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input media_delete_elem_input {
  comments: Int
  converted_images: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input media_delete_key_input {
  comments: String
  converted_images: String
}

"""
input type for inserting data into table "media"
"""
input media_insert_input {
  comments: jsonb
  conversion_tasks: conversion_tasks_arr_rel_insert_input
  converted_images: jsonb
  created_at: timestamptz
  deleted_at: timestamptz
  media_id: String
  name: String
  resource: String
  resource_path: String
  type: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type media_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  media_id: String
  name: String
  resource: String
  resource_path: String
  type: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "media"
"""
input media_max_order_by {
  created_at: order_by
  deleted_at: order_by
  media_id: order_by
  name: order_by
  resource: order_by
  resource_path: order_by
  type: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type media_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  media_id: String
  name: String
  resource: String
  resource_path: String
  type: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "media"
"""
input media_min_order_by {
  created_at: order_by
  deleted_at: order_by
  media_id: order_by
  name: order_by
  resource: order_by
  resource_path: order_by
  type: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "media"
"""
type media_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [media!]!
}

"""
input type for inserting object relation for remote table "media"
"""
input media_obj_rel_insert_input {
  data: media_insert_input!
  on_conflict: media_on_conflict
}

"""
on conflict condition type for table "media"
"""
input media_on_conflict {
  constraint: media_constraint!
  update_columns: [media_update_column!]!
  where: media_bool_exp
}

"""
ordering options when selecting data from "media"
"""
input media_order_by {
  comments: order_by
  conversion_tasks_aggregate: conversion_tasks_aggregate_order_by
  converted_images: order_by
  created_at: order_by
  deleted_at: order_by
  media_id: order_by
  name: order_by
  resource: order_by
  resource_path: order_by
  type: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "media"
"""
input media_pk_columns_input {
  media_id: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input media_prepend_input {
  comments: jsonb
  converted_images: jsonb
}

"""
select columns of table "media"
"""
enum media_select_column {
  """column name"""
  comments

  """column name"""
  converted_images

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  media_id

  """column name"""
  name

  """column name"""
  resource

  """column name"""
  resource_path

  """column name"""
  type

  """column name"""
  updated_at
}

"""
input type for updating data in table "media"
"""
input media_set_input {
  comments: jsonb
  converted_images: jsonb
  created_at: timestamptz
  deleted_at: timestamptz
  media_id: String
  name: String
  resource: String
  resource_path: String
  type: String
  updated_at: timestamptz
}

"""
update columns of table "media"
"""
enum media_update_column {
  """column name"""
  comments

  """column name"""
  converted_images

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  media_id

  """column name"""
  name

  """column name"""
  resource

  """column name"""
  resource_path

  """column name"""
  type

  """column name"""
  updated_at
}

"""mutation root"""
type mutation_root {
  """
  delete data from the table: "assignments"
  """
  delete_assignments(
    """filter the rows which have to be deleted"""
    where: assignments_bool_exp!
  ): assignments_mutation_response

  """
  delete single row from the table: "assignments"
  """
  delete_assignments_by_pk(assignment_id: String!): assignments

  """
  delete data from the table: "books"
  """
  delete_books(
    """filter the rows which have to be deleted"""
    where: books_bool_exp!
  ): books_mutation_response

  """
  delete single row from the table: "books"
  """
  delete_books_by_pk(book_id: String!): books

  """
  delete data from the table: "books_chapters"
  """
  delete_books_chapters(
    """filter the rows which have to be deleted"""
    where: books_chapters_bool_exp!
  ): books_chapters_mutation_response

  """
  delete single row from the table: "books_chapters"
  """
  delete_books_chapters_by_pk(book_id: String!, chapter_id: String!): books_chapters

  """
  delete data from the table: "chapters"
  """
  delete_chapters(
    """filter the rows which have to be deleted"""
    where: chapters_bool_exp!
  ): chapters_mutation_response

  """
  delete single row from the table: "chapters"
  """
  delete_chapters_by_pk(chapter_id: String!): chapters

  """
  delete data from the table: "cities"
  """
  delete_cities(
    """filter the rows which have to be deleted"""
    where: cities_bool_exp!
  ): cities_mutation_response

  """
  delete single row from the table: "cities"
  """
  delete_cities_by_pk(city_id: Int!): cities

  """
  delete data from the table: "class"
  """
  delete_class(
    """filter the rows which have to be deleted"""
    where: class_bool_exp!
  ): class_mutation_response

  """
  delete single row from the table: "class"
  """
  delete_class_by_pk(class_id: String!): class

  """
  delete data from the table: "class_member"
  """
  delete_class_member(
    """filter the rows which have to be deleted"""
    where: class_member_bool_exp!
  ): class_member_mutation_response

  """
  delete single row from the table: "class_member"
  """
  delete_class_member_by_pk(class_member_id: String!): class_member

  """
  delete data from the table: "class_members"
  """
  delete_class_members(
    """filter the rows which have to be deleted"""
    where: class_members_bool_exp!
  ): class_members_mutation_response

  """
  delete single row from the table: "class_members"
  """
  delete_class_members_by_pk(class_member_id: String!): class_members

  """
  delete data from the table: "classes"
  """
  delete_classes(
    """filter the rows which have to be deleted"""
    where: classes_bool_exp!
  ): classes_mutation_response

  """
  delete single row from the table: "classes"
  """
  delete_classes_by_pk(class_id: Int!): classes

  """
  delete data from the table: "coaches"
  """
  delete_coaches(
    """filter the rows which have to be deleted"""
    where: coaches_bool_exp!
  ): coaches_mutation_response

  """
  delete single row from the table: "coaches"
  """
  delete_coaches_by_pk(coach_id: String!): coaches

  """
  delete data from the table: "cod_orders"
  """
  delete_cod_orders(
    """filter the rows which have to be deleted"""
    where: cod_orders_bool_exp!
  ): cod_orders_mutation_response

  """
  delete single row from the table: "cod_orders"
  """
  delete_cod_orders_by_pk(cod_order_id: String!): cod_orders

  """
  delete data from the table: "conversion_tasks"
  """
  delete_conversion_tasks(
    """filter the rows which have to be deleted"""
    where: conversion_tasks_bool_exp!
  ): conversion_tasks_mutation_response

  """
  delete single row from the table: "conversion_tasks"
  """
  delete_conversion_tasks_by_pk(task_uuid: String!): conversion_tasks

  """
  delete data from the table: "course_access_paths"
  """
  delete_course_access_paths(
    """filter the rows which have to be deleted"""
    where: course_access_paths_bool_exp!
  ): course_access_paths_mutation_response

  """
  delete single row from the table: "course_access_paths"
  """
  delete_course_access_paths_by_pk(course_id: String!, location_id: String!): course_access_paths

  """
  delete data from the table: "courses"
  """
  delete_courses(
    """filter the rows which have to be deleted"""
    where: courses_bool_exp!
  ): courses_mutation_response

  """
  delete data from the table: "courses_books"
  """
  delete_courses_books(
    """filter the rows which have to be deleted"""
    where: courses_books_bool_exp!
  ): courses_books_mutation_response

  """
  delete single row from the table: "courses_books"
  """
  delete_courses_books_by_pk(book_id: String!, course_id: String!): courses_books

  """
  delete single row from the table: "courses"
  """
  delete_courses_by_pk(course_id: String!): courses

  """
  delete data from the table: "courses_classes"
  """
  delete_courses_classes(
    """filter the rows which have to be deleted"""
    where: courses_classes_bool_exp!
  ): courses_classes_mutation_response

  """
  delete single row from the table: "courses_classes"
  """
  delete_courses_classes_by_pk(class_id: Int!, course_id: String!): courses_classes

  """
  delete data from the table: "districts"
  """
  delete_districts(
    """filter the rows which have to be deleted"""
    where: districts_bool_exp!
  ): districts_mutation_response

  """
  delete single row from the table: "districts"
  """
  delete_districts_by_pk(district_id: Int!): districts

  """
  delete data from the table: "granted_role"
  """
  delete_granted_role(
    """filter the rows which have to be deleted"""
    where: granted_role_bool_exp!
  ): granted_role_mutation_response

  """
  delete data from the table: "granted_role_access_path"
  """
  delete_granted_role_access_path(
    """filter the rows which have to be deleted"""
    where: granted_role_access_path_bool_exp!
  ): granted_role_access_path_mutation_response

  """
  delete single row from the table: "granted_role_access_path"
  """
  delete_granted_role_access_path_by_pk(granted_role_id: String!, location_id: String!): granted_role_access_path

  """
  delete single row from the table: "granted_role"
  """
  delete_granted_role_by_pk(granted_role_id: String!): granted_role

  """
  delete data from the table: "hub_tours"
  """
  delete_hub_tours(
    """filter the rows which have to be deleted"""
    where: hub_tours_bool_exp!
  ): hub_tours_mutation_response

  """
  delete single row from the table: "hub_tours"
  """
  delete_hub_tours_by_pk(hub_id: Int!, student_id: String!): hub_tours

  """
  delete data from the table: "hubs"
  """
  delete_hubs(
    """filter the rows which have to be deleted"""
    where: hubs_bool_exp!
  ): hubs_mutation_response

  """
  delete single row from the table: "hubs"
  """
  delete_hubs_by_pk(hub_id: Int!): hubs

  """
  delete data from the table: "info_notification_msgs"
  """
  delete_info_notification_msgs(
    """filter the rows which have to be deleted"""
    where: info_notification_msgs_bool_exp!
  ): info_notification_msgs_mutation_response

  """
  delete single row from the table: "info_notification_msgs"
  """
  delete_info_notification_msgs_by_pk(notification_msg_id: String!): info_notification_msgs

  """
  delete data from the table: "info_notifications"
  """
  delete_info_notifications(
    """filter the rows which have to be deleted"""
    where: info_notifications_bool_exp!
  ): info_notifications_mutation_response

  """
  delete single row from the table: "info_notifications"
  """
  delete_info_notifications_by_pk(notification_id: String!): info_notifications

  """
  delete data from the table: "info_notifications_tags"
  """
  delete_info_notifications_tags(
    """filter the rows which have to be deleted"""
    where: info_notifications_tags_bool_exp!
  ): info_notifications_tags_mutation_response

  """
  delete single row from the table: "info_notifications_tags"
  """
  delete_info_notifications_tags_by_pk(notification_tag_id: String!): info_notifications_tags

  """
  delete data from the table: "learning_objectives"
  """
  delete_learning_objectives(
    """filter the rows which have to be deleted"""
    where: learning_objectives_bool_exp!
  ): learning_objectives_mutation_response

  """
  delete single row from the table: "learning_objectives"
  """
  delete_learning_objectives_by_pk(lo_id: String!): learning_objectives

  """
  delete data from the table: "lesson_groups"
  """
  delete_lesson_groups(
    """filter the rows which have to be deleted"""
    where: lesson_groups_bool_exp!
  ): lesson_groups_mutation_response

  """
  delete single row from the table: "lesson_groups"
  """
  delete_lesson_groups_by_pk(course_id: String!, lesson_group_id: String!): lesson_groups

  """
  delete data from the table: "lesson_members"
  """
  delete_lesson_members(
    """filter the rows which have to be deleted"""
    where: lesson_members_bool_exp!
  ): lesson_members_mutation_response

  """
  delete single row from the table: "lesson_members"
  """
  delete_lesson_members_by_pk(lesson_id: String!, user_id: String!): lesson_members

  """
  delete data from the table: "lesson_report_details"
  """
  delete_lesson_report_details(
    """filter the rows which have to be deleted"""
    where: lesson_report_details_bool_exp!
  ): lesson_report_details_mutation_response

  """
  delete single row from the table: "lesson_report_details"
  """
  delete_lesson_report_details_by_pk(lesson_report_detail_id: String!): lesson_report_details

  """
  delete data from the table: "lesson_reports"
  """
  delete_lesson_reports(
    """filter the rows which have to be deleted"""
    where: lesson_reports_bool_exp!
  ): lesson_reports_mutation_response

  """
  delete single row from the table: "lesson_reports"
  """
  delete_lesson_reports_by_pk(lesson_report_id: String!): lesson_reports

  """
  delete data from the table: "lesson_student_subscription_access_path"
  """
  delete_lesson_student_subscription_access_path(
    """filter the rows which have to be deleted"""
    where: lesson_student_subscription_access_path_bool_exp!
  ): lesson_student_subscription_access_path_mutation_response

  """
  delete single row from the table: "lesson_student_subscription_access_path"
  """
  delete_lesson_student_subscription_access_path_by_pk(location_id: String!, student_subscription_id: String!): lesson_student_subscription_access_path

  """
  delete data from the table: "lesson_student_subscriptions"
  """
  delete_lesson_student_subscriptions(
    """filter the rows which have to be deleted"""
    where: lesson_student_subscriptions_bool_exp!
  ): lesson_student_subscriptions_mutation_response

  """
  delete single row from the table: "lesson_student_subscriptions"
  """
  delete_lesson_student_subscriptions_by_pk(student_subscription_id: String!): lesson_student_subscriptions

  """
  delete data from the table: "lessons"
  """
  delete_lessons(
    """filter the rows which have to be deleted"""
    where: lessons_bool_exp!
  ): lessons_mutation_response

  """
  delete single row from the table: "lessons"
  """
  delete_lessons_by_pk(lesson_id: String!): lessons

  """
  delete data from the table: "lessons_courses"
  """
  delete_lessons_courses(
    """filter the rows which have to be deleted"""
    where: lessons_courses_bool_exp!
  ): lessons_courses_mutation_response

  """
  delete single row from the table: "lessons_courses"
  """
  delete_lessons_courses_by_pk(course_id: String!, lesson_id: String!): lessons_courses

  """
  delete data from the table: "lessons_teachers"
  """
  delete_lessons_teachers(
    """filter the rows which have to be deleted"""
    where: lessons_teachers_bool_exp!
  ): lessons_teachers_mutation_response

  """
  delete single row from the table: "lessons_teachers"
  """
  delete_lessons_teachers_by_pk(lesson_id: String!, teacher_id: String!): lessons_teachers

  """
  delete data from the table: "location_types"
  """
  delete_location_types(
    """filter the rows which have to be deleted"""
    where: location_types_bool_exp!
  ): location_types_mutation_response

  """
  delete single row from the table: "location_types"
  """
  delete_location_types_by_pk(location_type_id: String!): location_types

  """
  delete data from the table: "locations"
  """
  delete_locations(
    """filter the rows which have to be deleted"""
    where: locations_bool_exp!
  ): locations_mutation_response

  """
  delete single row from the table: "locations"
  """
  delete_locations_by_pk(location_id: String!): locations

  """
  delete data from the table: "media"
  """
  delete_media(
    """filter the rows which have to be deleted"""
    where: media_bool_exp!
  ): media_mutation_response

  """
  delete single row from the table: "media"
  """
  delete_media_by_pk(media_id: String!): media

  """
  delete data from the table: "organizations"
  """
  delete_organizations(
    """filter the rows which have to be deleted"""
    where: organizations_bool_exp!
  ): organizations_mutation_response

  """
  delete single row from the table: "organizations"
  """
  delete_organizations_by_pk(organization_id: String!): organizations

  """
  delete data from the table: "parents"
  """
  delete_parents(
    """filter the rows which have to be deleted"""
    where: parents_bool_exp!
  ): parents_mutation_response

  """
  delete single row from the table: "parents"
  """
  delete_parents_by_pk(parent_id: String!): parents

  """
  delete data from the table: "partner_dynamic_form_field_values"
  """
  delete_partner_dynamic_form_field_values(
    """filter the rows which have to be deleted"""
    where: partner_dynamic_form_field_values_bool_exp!
  ): partner_dynamic_form_field_values_mutation_response

  """
  delete single row from the table: "partner_dynamic_form_field_values"
  """
  delete_partner_dynamic_form_field_values_by_pk(dynamic_form_field_value_id: String!): partner_dynamic_form_field_values

  """
  delete data from the table: "partner_form_configs"
  """
  delete_partner_form_configs(
    """filter the rows which have to be deleted"""
    where: partner_form_configs_bool_exp!
  ): partner_form_configs_mutation_response

  """
  delete single row from the table: "partner_form_configs"
  """
  delete_partner_form_configs_by_pk(form_config_id: String!): partner_form_configs

  """
  delete data from the table: "plans"
  """
  delete_plans(
    """filter the rows which have to be deleted"""
    where: plans_bool_exp!
  ): plans_mutation_response

  """
  delete single row from the table: "plans"
  """
  delete_plans_by_pk(country: String!, plan_id: String!): plans

  """
  delete data from the table: "prefecture"
  """
  delete_prefecture(
    """filter the rows which have to be deleted"""
    where: prefecture_bool_exp!
  ): prefecture_mutation_response

  """
  delete single row from the table: "prefecture"
  """
  delete_prefecture_by_pk(prefecture_id: String!): prefecture

  """
  delete data from the table: "preset_study_plans"
  """
  delete_preset_study_plans(
    """filter the rows which have to be deleted"""
    where: preset_study_plans_bool_exp!
  ): preset_study_plans_mutation_response

  """
  delete single row from the table: "preset_study_plans"
  """
  delete_preset_study_plans_by_pk(preset_study_plan_id: String!): preset_study_plans

  """
  delete data from the table: "preset_study_plans_weekly"
  """
  delete_preset_study_plans_weekly(
    """filter the rows which have to be deleted"""
    where: preset_study_plans_weekly_bool_exp!
  ): preset_study_plans_weekly_mutation_response

  """
  delete single row from the table: "preset_study_plans_weekly"
  """
  delete_preset_study_plans_weekly_by_pk(preset_study_plan_weekly_id: String!): preset_study_plans_weekly

  """
  delete data from the table: "preset_study_plans_weekly_format"
  """
  delete_preset_study_plans_weekly_format(
    """filter the rows which have to be deleted"""
    where: preset_study_plans_weekly_format_bool_exp!
  ): preset_study_plans_weekly_format_mutation_response

  """
  delete data from the table: "promotion_rules"
  """
  delete_promotion_rules(
    """filter the rows which have to be deleted"""
    where: promotion_rules_bool_exp!
  ): promotion_rules_mutation_response

  """
  delete single row from the table: "promotion_rules"
  """
  delete_promotion_rules_by_pk(promotion_rule_id: Int!): promotion_rules

  """
  delete data from the table: "promotions"
  """
  delete_promotions(
    """filter the rows which have to be deleted"""
    where: promotions_bool_exp!
  ): promotions_mutation_response

  """
  delete single row from the table: "promotions"
  """
  delete_promotions_by_pk(promotion_id: Int!): promotions

  """
  delete data from the table: "questionnaire_questions"
  """
  delete_questionnaire_questions(
    """filter the rows which have to be deleted"""
    where: questionnaire_questions_bool_exp!
  ): questionnaire_questions_mutation_response

  """
  delete single row from the table: "questionnaire_questions"
  """
  delete_questionnaire_questions_by_pk(questionnaire_question_id: String!): questionnaire_questions

  """
  delete data from the table: "questionnaire_user_answers"
  """
  delete_questionnaire_user_answers(
    """filter the rows which have to be deleted"""
    where: questionnaire_user_answers_bool_exp!
  ): questionnaire_user_answers_mutation_response

  """
  delete single row from the table: "questionnaire_user_answers"
  """
  delete_questionnaire_user_answers_by_pk(answer_id: String!, user_notification_id: String!): questionnaire_user_answers

  """
  delete data from the table: "questionnaires"
  """
  delete_questionnaires(
    """filter the rows which have to be deleted"""
    where: questionnaires_bool_exp!
  ): questionnaires_mutation_response

  """
  delete single row from the table: "questionnaires"
  """
  delete_questionnaires_by_pk(questionnaire_id: String!): questionnaires

  """
  delete data from the table: "questions"
  """
  delete_questions(
    """filter the rows which have to be deleted"""
    where: questions_bool_exp!
  ): questions_mutation_response

  """
  delete single row from the table: "questions"
  """
  delete_questions_by_pk(question_id: String!): questions

  """
  delete data from the table: "quiz_sets"
  """
  delete_quiz_sets(
    """filter the rows which have to be deleted"""
    where: quiz_sets_bool_exp!
  ): quiz_sets_mutation_response

  """
  delete single row from the table: "quiz_sets"
  """
  delete_quiz_sets_by_pk(quiz_set_id: String!): quiz_sets

  """
  delete data from the table: "quizsets"
  """
  delete_quizsets(
    """filter the rows which have to be deleted"""
    where: quizsets_bool_exp!
  ): quizsets_mutation_response

  """
  delete single row from the table: "quizsets"
  """
  delete_quizsets_by_pk(lo_id: String!, question_id: String!): quizsets

  """
  delete data from the table: "quizzes"
  """
  delete_quizzes(
    """filter the rows which have to be deleted"""
    where: quizzes_bool_exp!
  ): quizzes_mutation_response

  """
  delete single row from the table: "quizzes"
  """
  delete_quizzes_by_pk(quiz_id: String!): quizzes

  """
  delete data from the table: "role"
  """
  delete_role(
    """filter the rows which have to be deleted"""
    where: role_bool_exp!
  ): role_mutation_response

  """
  delete single row from the table: "role"
  """
  delete_role_by_pk(role_id: String!): role

  """
  delete data from the table: "scheduler"
  """
  delete_scheduler(
    """filter the rows which have to be deleted"""
    where: scheduler_bool_exp!
  ): scheduler_mutation_response

  """
  delete single row from the table: "scheduler"
  """
  delete_scheduler_by_pk(scheduler_id: String!): scheduler

  """
  delete data from the table: "school_admins"
  """
  delete_school_admins(
    """filter the rows which have to be deleted"""
    where: school_admins_bool_exp!
  ): school_admins_mutation_response

  """
  delete single row from the table: "school_admins"
  """
  delete_school_admins_by_pk(school_admin_id: String!): school_admins

  """
  delete data from the table: "school_configs"
  """
  delete_school_configs(
    """filter the rows which have to be deleted"""
    where: school_configs_bool_exp!
  ): school_configs_mutation_response

  """
  delete single row from the table: "school_configs"
  """
  delete_school_configs_by_pk(school_id: Int!): school_configs

  """
  delete data from the table: "school_course"
  """
  delete_school_course(
    """filter the rows which have to be deleted"""
    where: school_course_bool_exp!
  ): school_course_mutation_response

  """
  delete single row from the table: "school_course"
  """
  delete_school_course_by_pk(school_course_id: String!): school_course

  """
  delete data from the table: "school_info"
  """
  delete_school_info(
    """filter the rows which have to be deleted"""
    where: school_info_bool_exp!
  ): school_info_mutation_response

  """
  delete single row from the table: "school_info"
  """
  delete_school_info_by_pk(school_id: String!): school_info

  """
  delete data from the table: "school_level"
  """
  delete_school_level(
    """filter the rows which have to be deleted"""
    where: school_level_bool_exp!
  ): school_level_mutation_response

  """
  delete single row from the table: "school_level"
  """
  delete_school_level_by_pk(school_level_id: String!): school_level

  """
  delete data from the table: "schools"
  """
  delete_schools(
    """filter the rows which have to be deleted"""
    where: schools_bool_exp!
  ): schools_mutation_response

  """
  delete single row from the table: "schools"
  """
  delete_schools_by_pk(school_id: Int!): schools

  """
  delete data from the table: "staff"
  """
  delete_staff(
    """filter the rows which have to be deleted"""
    where: staff_bool_exp!
  ): staff_mutation_response

  """
  delete single row from the table: "staff"
  """
  delete_staff_by_pk(staff_id: String!): staff

  """
  delete data from the table: "student_entryexit_records"
  """
  delete_student_entryexit_records(
    """filter the rows which have to be deleted"""
    where: student_entryexit_records_bool_exp!
  ): student_entryexit_records_mutation_response

  """
  delete single row from the table: "student_entryexit_records"
  """
  delete_student_entryexit_records_by_pk(entryexit_id: Int!): student_entryexit_records

  """
  delete data from the table: "student_parents"
  """
  delete_student_parents(
    """filter the rows which have to be deleted"""
    where: student_parents_bool_exp!
  ): student_parents_mutation_response

  """
  delete single row from the table: "student_parents"
  """
  delete_student_parents_by_pk(parent_id: String!, student_id: String!): student_parents

  """
  delete data from the table: "student_qr"
  """
  delete_student_qr(
    """filter the rows which have to be deleted"""
    where: student_qr_bool_exp!
  ): student_qr_mutation_response

  """
  delete single row from the table: "student_qr"
  """
  delete_student_qr_by_pk(qr_id: Int!): student_qr

  """
  delete data from the table: "student_subscriptions"
  """
  delete_student_subscriptions(
    """filter the rows which have to be deleted"""
    where: student_subscriptions_bool_exp!
  ): student_subscriptions_mutation_response

  """
  delete single row from the table: "student_subscriptions"
  """
  delete_student_subscriptions_by_pk(student_subscription_id: String!): student_subscriptions

  """
  delete data from the table: "students"
  """
  delete_students(
    """filter the rows which have to be deleted"""
    where: students_bool_exp!
  ): students_mutation_response

  """
  delete data from the table: "students_assigned_coaches"
  """
  delete_students_assigned_coaches(
    """filter the rows which have to be deleted"""
    where: students_assigned_coaches_bool_exp!
  ): students_assigned_coaches_mutation_response

  """
  delete single row from the table: "students"
  """
  delete_students_by_pk(student_id: String!): students

  """
  delete data from the table: "tags"
  """
  delete_tags(
    """filter the rows which have to be deleted"""
    where: tags_bool_exp!
  ): tags_mutation_response

  """
  delete single row from the table: "tags"
  """
  delete_tags_by_pk(tag_id: String!): tags

  """
  delete data from the table: "teachers"
  """
  delete_teachers(
    """filter the rows which have to be deleted"""
    where: teachers_bool_exp!
  ): teachers_mutation_response

  """
  delete single row from the table: "teachers"
  """
  delete_teachers_by_pk(teacher_id: String!): teachers

  """
  delete data from the table: "topics"
  """
  delete_topics(
    """filter the rows which have to be deleted"""
    where: topics_bool_exp!
  ): topics_mutation_response

  """
  delete single row from the table: "topics"
  """
  delete_topics_by_pk(topic_id: String!): topics

  """
  delete data from the table: "topics_learning_objectives"
  """
  delete_topics_learning_objectives(
    """filter the rows which have to be deleted"""
    where: topics_learning_objectives_bool_exp!
  ): topics_learning_objectives_mutation_response

  """
  delete single row from the table: "topics_learning_objectives"
  """
  delete_topics_learning_objectives_by_pk(lo_id: String!, topic_id: String!): topics_learning_objectives

  """
  delete data from the table: "user_access_paths"
  """
  delete_user_access_paths(
    """filter the rows which have to be deleted"""
    where: user_access_paths_bool_exp!
  ): user_access_paths_mutation_response

  """
  delete single row from the table: "user_access_paths"
  """
  delete_user_access_paths_by_pk(location_id: String!, user_id: String!): user_access_paths

  """
  delete data from the table: "user_address"
  """
  delete_user_address(
    """filter the rows which have to be deleted"""
    where: user_address_bool_exp!
  ): user_address_mutation_response

  """
  delete single row from the table: "user_address"
  """
  delete_user_address_by_pk(user_address_id: String!): user_address

  """
  delete data from the table: "user_group"
  """
  delete_user_group(
    """filter the rows which have to be deleted"""
    where: user_group_bool_exp!
  ): user_group_mutation_response

  """
  delete single row from the table: "user_group"
  """
  delete_user_group_by_pk(user_group_id: String!): user_group

  """
  delete data from the table: "user_group_member"
  """
  delete_user_group_member(
    """filter the rows which have to be deleted"""
    where: user_group_member_bool_exp!
  ): user_group_member_mutation_response

  """
  delete single row from the table: "user_group_member"
  """
  delete_user_group_member_by_pk(user_group_id: String!, user_id: String!): user_group_member

  """
  delete data from the table: "users"
  """
  delete_users(
    """filter the rows which have to be deleted"""
    where: users_bool_exp!
  ): users_mutation_response

  """
  delete single row from the table: "users"
  """
  delete_users_by_pk(user_id: String!): users

  """
  delete data from the table: "users_info_notifications"
  """
  delete_users_info_notifications(
    """filter the rows which have to be deleted"""
    where: users_info_notifications_bool_exp!
  ): users_info_notifications_mutation_response

  """
  delete single row from the table: "users_info_notifications"
  """
  delete_users_info_notifications_by_pk(user_notification_id: String!): users_info_notifications

  """
  insert data into the table: "assignments"
  """
  insert_assignments(
    """the rows to be inserted"""
    objects: [assignments_insert_input!]!

    """on conflict condition"""
    on_conflict: assignments_on_conflict
  ): assignments_mutation_response

  """
  insert a single row into the table: "assignments"
  """
  insert_assignments_one(
    """the row to be inserted"""
    object: assignments_insert_input!

    """on conflict condition"""
    on_conflict: assignments_on_conflict
  ): assignments

  """
  insert data into the table: "books"
  """
  insert_books(
    """the rows to be inserted"""
    objects: [books_insert_input!]!

    """on conflict condition"""
    on_conflict: books_on_conflict
  ): books_mutation_response

  """
  insert data into the table: "books_chapters"
  """
  insert_books_chapters(
    """the rows to be inserted"""
    objects: [books_chapters_insert_input!]!

    """on conflict condition"""
    on_conflict: books_chapters_on_conflict
  ): books_chapters_mutation_response

  """
  insert a single row into the table: "books_chapters"
  """
  insert_books_chapters_one(
    """the row to be inserted"""
    object: books_chapters_insert_input!

    """on conflict condition"""
    on_conflict: books_chapters_on_conflict
  ): books_chapters

  """
  insert a single row into the table: "books"
  """
  insert_books_one(
    """the row to be inserted"""
    object: books_insert_input!

    """on conflict condition"""
    on_conflict: books_on_conflict
  ): books

  """
  insert data into the table: "chapters"
  """
  insert_chapters(
    """the rows to be inserted"""
    objects: [chapters_insert_input!]!

    """on conflict condition"""
    on_conflict: chapters_on_conflict
  ): chapters_mutation_response

  """
  insert a single row into the table: "chapters"
  """
  insert_chapters_one(
    """the row to be inserted"""
    object: chapters_insert_input!

    """on conflict condition"""
    on_conflict: chapters_on_conflict
  ): chapters

  """
  insert data into the table: "cities"
  """
  insert_cities(
    """the rows to be inserted"""
    objects: [cities_insert_input!]!

    """on conflict condition"""
    on_conflict: cities_on_conflict
  ): cities_mutation_response

  """
  insert a single row into the table: "cities"
  """
  insert_cities_one(
    """the row to be inserted"""
    object: cities_insert_input!

    """on conflict condition"""
    on_conflict: cities_on_conflict
  ): cities

  """
  insert data into the table: "class"
  """
  insert_class(
    """the rows to be inserted"""
    objects: [class_insert_input!]!

    """on conflict condition"""
    on_conflict: class_on_conflict
  ): class_mutation_response

  """
  insert data into the table: "class_member"
  """
  insert_class_member(
    """the rows to be inserted"""
    objects: [class_member_insert_input!]!

    """on conflict condition"""
    on_conflict: class_member_on_conflict
  ): class_member_mutation_response

  """
  insert a single row into the table: "class_member"
  """
  insert_class_member_one(
    """the row to be inserted"""
    object: class_member_insert_input!

    """on conflict condition"""
    on_conflict: class_member_on_conflict
  ): class_member

  """
  insert data into the table: "class_members"
  """
  insert_class_members(
    """the rows to be inserted"""
    objects: [class_members_insert_input!]!

    """on conflict condition"""
    on_conflict: class_members_on_conflict
  ): class_members_mutation_response

  """
  insert a single row into the table: "class_members"
  """
  insert_class_members_one(
    """the row to be inserted"""
    object: class_members_insert_input!

    """on conflict condition"""
    on_conflict: class_members_on_conflict
  ): class_members

  """
  insert a single row into the table: "class"
  """
  insert_class_one(
    """the row to be inserted"""
    object: class_insert_input!

    """on conflict condition"""
    on_conflict: class_on_conflict
  ): class

  """
  insert data into the table: "classes"
  """
  insert_classes(
    """the rows to be inserted"""
    objects: [classes_insert_input!]!

    """on conflict condition"""
    on_conflict: classes_on_conflict
  ): classes_mutation_response

  """
  insert a single row into the table: "classes"
  """
  insert_classes_one(
    """the row to be inserted"""
    object: classes_insert_input!

    """on conflict condition"""
    on_conflict: classes_on_conflict
  ): classes

  """
  insert data into the table: "coaches"
  """
  insert_coaches(
    """the rows to be inserted"""
    objects: [coaches_insert_input!]!

    """on conflict condition"""
    on_conflict: coaches_on_conflict
  ): coaches_mutation_response

  """
  insert a single row into the table: "coaches"
  """
  insert_coaches_one(
    """the row to be inserted"""
    object: coaches_insert_input!

    """on conflict condition"""
    on_conflict: coaches_on_conflict
  ): coaches

  """
  insert data into the table: "cod_orders"
  """
  insert_cod_orders(
    """the rows to be inserted"""
    objects: [cod_orders_insert_input!]!

    """on conflict condition"""
    on_conflict: cod_orders_on_conflict
  ): cod_orders_mutation_response

  """
  insert a single row into the table: "cod_orders"
  """
  insert_cod_orders_one(
    """the row to be inserted"""
    object: cod_orders_insert_input!

    """on conflict condition"""
    on_conflict: cod_orders_on_conflict
  ): cod_orders

  """
  insert data into the table: "conversion_tasks"
  """
  insert_conversion_tasks(
    """the rows to be inserted"""
    objects: [conversion_tasks_insert_input!]!

    """on conflict condition"""
    on_conflict: conversion_tasks_on_conflict
  ): conversion_tasks_mutation_response

  """
  insert a single row into the table: "conversion_tasks"
  """
  insert_conversion_tasks_one(
    """the row to be inserted"""
    object: conversion_tasks_insert_input!

    """on conflict condition"""
    on_conflict: conversion_tasks_on_conflict
  ): conversion_tasks

  """
  insert data into the table: "course_access_paths"
  """
  insert_course_access_paths(
    """the rows to be inserted"""
    objects: [course_access_paths_insert_input!]!

    """on conflict condition"""
    on_conflict: course_access_paths_on_conflict
  ): course_access_paths_mutation_response

  """
  insert a single row into the table: "course_access_paths"
  """
  insert_course_access_paths_one(
    """the row to be inserted"""
    object: course_access_paths_insert_input!

    """on conflict condition"""
    on_conflict: course_access_paths_on_conflict
  ): course_access_paths

  """
  insert data into the table: "courses"
  """
  insert_courses(
    """the rows to be inserted"""
    objects: [courses_insert_input!]!

    """on conflict condition"""
    on_conflict: courses_on_conflict
  ): courses_mutation_response

  """
  insert data into the table: "courses_books"
  """
  insert_courses_books(
    """the rows to be inserted"""
    objects: [courses_books_insert_input!]!

    """on conflict condition"""
    on_conflict: courses_books_on_conflict
  ): courses_books_mutation_response

  """
  insert a single row into the table: "courses_books"
  """
  insert_courses_books_one(
    """the row to be inserted"""
    object: courses_books_insert_input!

    """on conflict condition"""
    on_conflict: courses_books_on_conflict
  ): courses_books

  """
  insert data into the table: "courses_classes"
  """
  insert_courses_classes(
    """the rows to be inserted"""
    objects: [courses_classes_insert_input!]!

    """on conflict condition"""
    on_conflict: courses_classes_on_conflict
  ): courses_classes_mutation_response

  """
  insert a single row into the table: "courses_classes"
  """
  insert_courses_classes_one(
    """the row to be inserted"""
    object: courses_classes_insert_input!

    """on conflict condition"""
    on_conflict: courses_classes_on_conflict
  ): courses_classes

  """
  insert a single row into the table: "courses"
  """
  insert_courses_one(
    """the row to be inserted"""
    object: courses_insert_input!

    """on conflict condition"""
    on_conflict: courses_on_conflict
  ): courses

  """
  insert data into the table: "districts"
  """
  insert_districts(
    """the rows to be inserted"""
    objects: [districts_insert_input!]!

    """on conflict condition"""
    on_conflict: districts_on_conflict
  ): districts_mutation_response

  """
  insert a single row into the table: "districts"
  """
  insert_districts_one(
    """the row to be inserted"""
    object: districts_insert_input!

    """on conflict condition"""
    on_conflict: districts_on_conflict
  ): districts

  """
  insert data into the table: "granted_role"
  """
  insert_granted_role(
    """the rows to be inserted"""
    objects: [granted_role_insert_input!]!

    """on conflict condition"""
    on_conflict: granted_role_on_conflict
  ): granted_role_mutation_response

  """
  insert data into the table: "granted_role_access_path"
  """
  insert_granted_role_access_path(
    """the rows to be inserted"""
    objects: [granted_role_access_path_insert_input!]!

    """on conflict condition"""
    on_conflict: granted_role_access_path_on_conflict
  ): granted_role_access_path_mutation_response

  """
  insert a single row into the table: "granted_role_access_path"
  """
  insert_granted_role_access_path_one(
    """the row to be inserted"""
    object: granted_role_access_path_insert_input!

    """on conflict condition"""
    on_conflict: granted_role_access_path_on_conflict
  ): granted_role_access_path

  """
  insert a single row into the table: "granted_role"
  """
  insert_granted_role_one(
    """the row to be inserted"""
    object: granted_role_insert_input!

    """on conflict condition"""
    on_conflict: granted_role_on_conflict
  ): granted_role

  """
  insert data into the table: "hub_tours"
  """
  insert_hub_tours(
    """the rows to be inserted"""
    objects: [hub_tours_insert_input!]!

    """on conflict condition"""
    on_conflict: hub_tours_on_conflict
  ): hub_tours_mutation_response

  """
  insert a single row into the table: "hub_tours"
  """
  insert_hub_tours_one(
    """the row to be inserted"""
    object: hub_tours_insert_input!

    """on conflict condition"""
    on_conflict: hub_tours_on_conflict
  ): hub_tours

  """
  insert data into the table: "hubs"
  """
  insert_hubs(
    """the rows to be inserted"""
    objects: [hubs_insert_input!]!

    """on conflict condition"""
    on_conflict: hubs_on_conflict
  ): hubs_mutation_response

  """
  insert a single row into the table: "hubs"
  """
  insert_hubs_one(
    """the row to be inserted"""
    object: hubs_insert_input!

    """on conflict condition"""
    on_conflict: hubs_on_conflict
  ): hubs

  """
  insert data into the table: "info_notification_msgs"
  """
  insert_info_notification_msgs(
    """the rows to be inserted"""
    objects: [info_notification_msgs_insert_input!]!

    """on conflict condition"""
    on_conflict: info_notification_msgs_on_conflict
  ): info_notification_msgs_mutation_response

  """
  insert a single row into the table: "info_notification_msgs"
  """
  insert_info_notification_msgs_one(
    """the row to be inserted"""
    object: info_notification_msgs_insert_input!

    """on conflict condition"""
    on_conflict: info_notification_msgs_on_conflict
  ): info_notification_msgs

  """
  insert data into the table: "info_notifications"
  """
  insert_info_notifications(
    """the rows to be inserted"""
    objects: [info_notifications_insert_input!]!

    """on conflict condition"""
    on_conflict: info_notifications_on_conflict
  ): info_notifications_mutation_response

  """
  insert a single row into the table: "info_notifications"
  """
  insert_info_notifications_one(
    """the row to be inserted"""
    object: info_notifications_insert_input!

    """on conflict condition"""
    on_conflict: info_notifications_on_conflict
  ): info_notifications

  """
  insert data into the table: "info_notifications_tags"
  """
  insert_info_notifications_tags(
    """the rows to be inserted"""
    objects: [info_notifications_tags_insert_input!]!

    """on conflict condition"""
    on_conflict: info_notifications_tags_on_conflict
  ): info_notifications_tags_mutation_response

  """
  insert a single row into the table: "info_notifications_tags"
  """
  insert_info_notifications_tags_one(
    """the row to be inserted"""
    object: info_notifications_tags_insert_input!

    """on conflict condition"""
    on_conflict: info_notifications_tags_on_conflict
  ): info_notifications_tags

  """
  insert data into the table: "learning_objectives"
  """
  insert_learning_objectives(
    """the rows to be inserted"""
    objects: [learning_objectives_insert_input!]!

    """on conflict condition"""
    on_conflict: learning_objectives_on_conflict
  ): learning_objectives_mutation_response

  """
  insert a single row into the table: "learning_objectives"
  """
  insert_learning_objectives_one(
    """the row to be inserted"""
    object: learning_objectives_insert_input!

    """on conflict condition"""
    on_conflict: learning_objectives_on_conflict
  ): learning_objectives

  """
  insert data into the table: "lesson_groups"
  """
  insert_lesson_groups(
    """the rows to be inserted"""
    objects: [lesson_groups_insert_input!]!

    """on conflict condition"""
    on_conflict: lesson_groups_on_conflict
  ): lesson_groups_mutation_response

  """
  insert a single row into the table: "lesson_groups"
  """
  insert_lesson_groups_one(
    """the row to be inserted"""
    object: lesson_groups_insert_input!

    """on conflict condition"""
    on_conflict: lesson_groups_on_conflict
  ): lesson_groups

  """
  insert data into the table: "lesson_members"
  """
  insert_lesson_members(
    """the rows to be inserted"""
    objects: [lesson_members_insert_input!]!

    """on conflict condition"""
    on_conflict: lesson_members_on_conflict
  ): lesson_members_mutation_response

  """
  insert a single row into the table: "lesson_members"
  """
  insert_lesson_members_one(
    """the row to be inserted"""
    object: lesson_members_insert_input!

    """on conflict condition"""
    on_conflict: lesson_members_on_conflict
  ): lesson_members

  """
  insert data into the table: "lesson_report_details"
  """
  insert_lesson_report_details(
    """the rows to be inserted"""
    objects: [lesson_report_details_insert_input!]!

    """on conflict condition"""
    on_conflict: lesson_report_details_on_conflict
  ): lesson_report_details_mutation_response

  """
  insert a single row into the table: "lesson_report_details"
  """
  insert_lesson_report_details_one(
    """the row to be inserted"""
    object: lesson_report_details_insert_input!

    """on conflict condition"""
    on_conflict: lesson_report_details_on_conflict
  ): lesson_report_details

  """
  insert data into the table: "lesson_reports"
  """
  insert_lesson_reports(
    """the rows to be inserted"""
    objects: [lesson_reports_insert_input!]!

    """on conflict condition"""
    on_conflict: lesson_reports_on_conflict
  ): lesson_reports_mutation_response

  """
  insert a single row into the table: "lesson_reports"
  """
  insert_lesson_reports_one(
    """the row to be inserted"""
    object: lesson_reports_insert_input!

    """on conflict condition"""
    on_conflict: lesson_reports_on_conflict
  ): lesson_reports

  """
  insert data into the table: "lesson_student_subscription_access_path"
  """
  insert_lesson_student_subscription_access_path(
    """the rows to be inserted"""
    objects: [lesson_student_subscription_access_path_insert_input!]!

    """on conflict condition"""
    on_conflict: lesson_student_subscription_access_path_on_conflict
  ): lesson_student_subscription_access_path_mutation_response

  """
  insert a single row into the table: "lesson_student_subscription_access_path"
  """
  insert_lesson_student_subscription_access_path_one(
    """the row to be inserted"""
    object: lesson_student_subscription_access_path_insert_input!

    """on conflict condition"""
    on_conflict: lesson_student_subscription_access_path_on_conflict
  ): lesson_student_subscription_access_path

  """
  insert data into the table: "lesson_student_subscriptions"
  """
  insert_lesson_student_subscriptions(
    """the rows to be inserted"""
    objects: [lesson_student_subscriptions_insert_input!]!

    """on conflict condition"""
    on_conflict: lesson_student_subscriptions_on_conflict
  ): lesson_student_subscriptions_mutation_response

  """
  insert a single row into the table: "lesson_student_subscriptions"
  """
  insert_lesson_student_subscriptions_one(
    """the row to be inserted"""
    object: lesson_student_subscriptions_insert_input!

    """on conflict condition"""
    on_conflict: lesson_student_subscriptions_on_conflict
  ): lesson_student_subscriptions

  """
  insert data into the table: "lessons"
  """
  insert_lessons(
    """the rows to be inserted"""
    objects: [lessons_insert_input!]!

    """on conflict condition"""
    on_conflict: lessons_on_conflict
  ): lessons_mutation_response

  """
  insert data into the table: "lessons_courses"
  """
  insert_lessons_courses(
    """the rows to be inserted"""
    objects: [lessons_courses_insert_input!]!

    """on conflict condition"""
    on_conflict: lessons_courses_on_conflict
  ): lessons_courses_mutation_response

  """
  insert a single row into the table: "lessons_courses"
  """
  insert_lessons_courses_one(
    """the row to be inserted"""
    object: lessons_courses_insert_input!

    """on conflict condition"""
    on_conflict: lessons_courses_on_conflict
  ): lessons_courses

  """
  insert a single row into the table: "lessons"
  """
  insert_lessons_one(
    """the row to be inserted"""
    object: lessons_insert_input!

    """on conflict condition"""
    on_conflict: lessons_on_conflict
  ): lessons

  """
  insert data into the table: "lessons_teachers"
  """
  insert_lessons_teachers(
    """the rows to be inserted"""
    objects: [lessons_teachers_insert_input!]!

    """on conflict condition"""
    on_conflict: lessons_teachers_on_conflict
  ): lessons_teachers_mutation_response

  """
  insert a single row into the table: "lessons_teachers"
  """
  insert_lessons_teachers_one(
    """the row to be inserted"""
    object: lessons_teachers_insert_input!

    """on conflict condition"""
    on_conflict: lessons_teachers_on_conflict
  ): lessons_teachers

  """
  insert data into the table: "location_types"
  """
  insert_location_types(
    """the rows to be inserted"""
    objects: [location_types_insert_input!]!

    """on conflict condition"""
    on_conflict: location_types_on_conflict
  ): location_types_mutation_response

  """
  insert a single row into the table: "location_types"
  """
  insert_location_types_one(
    """the row to be inserted"""
    object: location_types_insert_input!

    """on conflict condition"""
    on_conflict: location_types_on_conflict
  ): location_types

  """
  insert data into the table: "locations"
  """
  insert_locations(
    """the rows to be inserted"""
    objects: [locations_insert_input!]!

    """on conflict condition"""
    on_conflict: locations_on_conflict
  ): locations_mutation_response

  """
  insert a single row into the table: "locations"
  """
  insert_locations_one(
    """the row to be inserted"""
    object: locations_insert_input!

    """on conflict condition"""
    on_conflict: locations_on_conflict
  ): locations

  """
  insert data into the table: "media"
  """
  insert_media(
    """the rows to be inserted"""
    objects: [media_insert_input!]!

    """on conflict condition"""
    on_conflict: media_on_conflict
  ): media_mutation_response

  """
  insert a single row into the table: "media"
  """
  insert_media_one(
    """the row to be inserted"""
    object: media_insert_input!

    """on conflict condition"""
    on_conflict: media_on_conflict
  ): media

  """
  insert data into the table: "organizations"
  """
  insert_organizations(
    """the rows to be inserted"""
    objects: [organizations_insert_input!]!

    """on conflict condition"""
    on_conflict: organizations_on_conflict
  ): organizations_mutation_response

  """
  insert a single row into the table: "organizations"
  """
  insert_organizations_one(
    """the row to be inserted"""
    object: organizations_insert_input!

    """on conflict condition"""
    on_conflict: organizations_on_conflict
  ): organizations

  """
  insert data into the table: "parents"
  """
  insert_parents(
    """the rows to be inserted"""
    objects: [parents_insert_input!]!

    """on conflict condition"""
    on_conflict: parents_on_conflict
  ): parents_mutation_response

  """
  insert a single row into the table: "parents"
  """
  insert_parents_one(
    """the row to be inserted"""
    object: parents_insert_input!

    """on conflict condition"""
    on_conflict: parents_on_conflict
  ): parents

  """
  insert data into the table: "partner_dynamic_form_field_values"
  """
  insert_partner_dynamic_form_field_values(
    """the rows to be inserted"""
    objects: [partner_dynamic_form_field_values_insert_input!]!

    """on conflict condition"""
    on_conflict: partner_dynamic_form_field_values_on_conflict
  ): partner_dynamic_form_field_values_mutation_response

  """
  insert a single row into the table: "partner_dynamic_form_field_values"
  """
  insert_partner_dynamic_form_field_values_one(
    """the row to be inserted"""
    object: partner_dynamic_form_field_values_insert_input!

    """on conflict condition"""
    on_conflict: partner_dynamic_form_field_values_on_conflict
  ): partner_dynamic_form_field_values

  """
  insert data into the table: "partner_form_configs"
  """
  insert_partner_form_configs(
    """the rows to be inserted"""
    objects: [partner_form_configs_insert_input!]!

    """on conflict condition"""
    on_conflict: partner_form_configs_on_conflict
  ): partner_form_configs_mutation_response

  """
  insert a single row into the table: "partner_form_configs"
  """
  insert_partner_form_configs_one(
    """the row to be inserted"""
    object: partner_form_configs_insert_input!

    """on conflict condition"""
    on_conflict: partner_form_configs_on_conflict
  ): partner_form_configs

  """
  insert data into the table: "plans"
  """
  insert_plans(
    """the rows to be inserted"""
    objects: [plans_insert_input!]!

    """on conflict condition"""
    on_conflict: plans_on_conflict
  ): plans_mutation_response

  """
  insert a single row into the table: "plans"
  """
  insert_plans_one(
    """the row to be inserted"""
    object: plans_insert_input!

    """on conflict condition"""
    on_conflict: plans_on_conflict
  ): plans

  """
  insert data into the table: "prefecture"
  """
  insert_prefecture(
    """the rows to be inserted"""
    objects: [prefecture_insert_input!]!

    """on conflict condition"""
    on_conflict: prefecture_on_conflict
  ): prefecture_mutation_response

  """
  insert a single row into the table: "prefecture"
  """
  insert_prefecture_one(
    """the row to be inserted"""
    object: prefecture_insert_input!

    """on conflict condition"""
    on_conflict: prefecture_on_conflict
  ): prefecture

  """
  insert data into the table: "preset_study_plans"
  """
  insert_preset_study_plans(
    """the rows to be inserted"""
    objects: [preset_study_plans_insert_input!]!

    """on conflict condition"""
    on_conflict: preset_study_plans_on_conflict
  ): preset_study_plans_mutation_response

  """
  insert a single row into the table: "preset_study_plans"
  """
  insert_preset_study_plans_one(
    """the row to be inserted"""
    object: preset_study_plans_insert_input!

    """on conflict condition"""
    on_conflict: preset_study_plans_on_conflict
  ): preset_study_plans

  """
  insert data into the table: "preset_study_plans_weekly"
  """
  insert_preset_study_plans_weekly(
    """the rows to be inserted"""
    objects: [preset_study_plans_weekly_insert_input!]!

    """on conflict condition"""
    on_conflict: preset_study_plans_weekly_on_conflict
  ): preset_study_plans_weekly_mutation_response

  """
  insert data into the table: "preset_study_plans_weekly_format"
  """
  insert_preset_study_plans_weekly_format(
    """the rows to be inserted"""
    objects: [preset_study_plans_weekly_format_insert_input!]!
  ): preset_study_plans_weekly_format_mutation_response

  """
  insert a single row into the table: "preset_study_plans_weekly_format"
  """
  insert_preset_study_plans_weekly_format_one(
    """the row to be inserted"""
    object: preset_study_plans_weekly_format_insert_input!
  ): preset_study_plans_weekly_format

  """
  insert a single row into the table: "preset_study_plans_weekly"
  """
  insert_preset_study_plans_weekly_one(
    """the row to be inserted"""
    object: preset_study_plans_weekly_insert_input!

    """on conflict condition"""
    on_conflict: preset_study_plans_weekly_on_conflict
  ): preset_study_plans_weekly

  """
  insert data into the table: "promotion_rules"
  """
  insert_promotion_rules(
    """the rows to be inserted"""
    objects: [promotion_rules_insert_input!]!

    """on conflict condition"""
    on_conflict: promotion_rules_on_conflict
  ): promotion_rules_mutation_response

  """
  insert a single row into the table: "promotion_rules"
  """
  insert_promotion_rules_one(
    """the row to be inserted"""
    object: promotion_rules_insert_input!

    """on conflict condition"""
    on_conflict: promotion_rules_on_conflict
  ): promotion_rules

  """
  insert data into the table: "promotions"
  """
  insert_promotions(
    """the rows to be inserted"""
    objects: [promotions_insert_input!]!

    """on conflict condition"""
    on_conflict: promotions_on_conflict
  ): promotions_mutation_response

  """
  insert a single row into the table: "promotions"
  """
  insert_promotions_one(
    """the row to be inserted"""
    object: promotions_insert_input!

    """on conflict condition"""
    on_conflict: promotions_on_conflict
  ): promotions

  """
  insert data into the table: "questionnaire_questions"
  """
  insert_questionnaire_questions(
    """the rows to be inserted"""
    objects: [questionnaire_questions_insert_input!]!

    """on conflict condition"""
    on_conflict: questionnaire_questions_on_conflict
  ): questionnaire_questions_mutation_response

  """
  insert a single row into the table: "questionnaire_questions"
  """
  insert_questionnaire_questions_one(
    """the row to be inserted"""
    object: questionnaire_questions_insert_input!

    """on conflict condition"""
    on_conflict: questionnaire_questions_on_conflict
  ): questionnaire_questions

  """
  insert data into the table: "questionnaire_user_answers"
  """
  insert_questionnaire_user_answers(
    """the rows to be inserted"""
    objects: [questionnaire_user_answers_insert_input!]!

    """on conflict condition"""
    on_conflict: questionnaire_user_answers_on_conflict
  ): questionnaire_user_answers_mutation_response

  """
  insert a single row into the table: "questionnaire_user_answers"
  """
  insert_questionnaire_user_answers_one(
    """the row to be inserted"""
    object: questionnaire_user_answers_insert_input!

    """on conflict condition"""
    on_conflict: questionnaire_user_answers_on_conflict
  ): questionnaire_user_answers

  """
  insert data into the table: "questionnaires"
  """
  insert_questionnaires(
    """the rows to be inserted"""
    objects: [questionnaires_insert_input!]!

    """on conflict condition"""
    on_conflict: questionnaires_on_conflict
  ): questionnaires_mutation_response

  """
  insert a single row into the table: "questionnaires"
  """
  insert_questionnaires_one(
    """the row to be inserted"""
    object: questionnaires_insert_input!

    """on conflict condition"""
    on_conflict: questionnaires_on_conflict
  ): questionnaires

  """
  insert data into the table: "questions"
  """
  insert_questions(
    """the rows to be inserted"""
    objects: [questions_insert_input!]!

    """on conflict condition"""
    on_conflict: questions_on_conflict
  ): questions_mutation_response

  """
  insert a single row into the table: "questions"
  """
  insert_questions_one(
    """the row to be inserted"""
    object: questions_insert_input!

    """on conflict condition"""
    on_conflict: questions_on_conflict
  ): questions

  """
  insert data into the table: "quiz_sets"
  """
  insert_quiz_sets(
    """the rows to be inserted"""
    objects: [quiz_sets_insert_input!]!

    """on conflict condition"""
    on_conflict: quiz_sets_on_conflict
  ): quiz_sets_mutation_response

  """
  insert a single row into the table: "quiz_sets"
  """
  insert_quiz_sets_one(
    """the row to be inserted"""
    object: quiz_sets_insert_input!

    """on conflict condition"""
    on_conflict: quiz_sets_on_conflict
  ): quiz_sets

  """
  insert data into the table: "quizsets"
  """
  insert_quizsets(
    """the rows to be inserted"""
    objects: [quizsets_insert_input!]!

    """on conflict condition"""
    on_conflict: quizsets_on_conflict
  ): quizsets_mutation_response

  """
  insert a single row into the table: "quizsets"
  """
  insert_quizsets_one(
    """the row to be inserted"""
    object: quizsets_insert_input!

    """on conflict condition"""
    on_conflict: quizsets_on_conflict
  ): quizsets

  """
  insert data into the table: "quizzes"
  """
  insert_quizzes(
    """the rows to be inserted"""
    objects: [quizzes_insert_input!]!

    """on conflict condition"""
    on_conflict: quizzes_on_conflict
  ): quizzes_mutation_response

  """
  insert a single row into the table: "quizzes"
  """
  insert_quizzes_one(
    """the row to be inserted"""
    object: quizzes_insert_input!

    """on conflict condition"""
    on_conflict: quizzes_on_conflict
  ): quizzes

  """
  insert data into the table: "role"
  """
  insert_role(
    """the rows to be inserted"""
    objects: [role_insert_input!]!

    """on conflict condition"""
    on_conflict: role_on_conflict
  ): role_mutation_response

  """
  insert a single row into the table: "role"
  """
  insert_role_one(
    """the row to be inserted"""
    object: role_insert_input!

    """on conflict condition"""
    on_conflict: role_on_conflict
  ): role

  """
  insert data into the table: "scheduler"
  """
  insert_scheduler(
    """the rows to be inserted"""
    objects: [scheduler_insert_input!]!

    """on conflict condition"""
    on_conflict: scheduler_on_conflict
  ): scheduler_mutation_response

  """
  insert a single row into the table: "scheduler"
  """
  insert_scheduler_one(
    """the row to be inserted"""
    object: scheduler_insert_input!

    """on conflict condition"""
    on_conflict: scheduler_on_conflict
  ): scheduler

  """
  insert data into the table: "school_admins"
  """
  insert_school_admins(
    """the rows to be inserted"""
    objects: [school_admins_insert_input!]!

    """on conflict condition"""
    on_conflict: school_admins_on_conflict
  ): school_admins_mutation_response

  """
  insert a single row into the table: "school_admins"
  """
  insert_school_admins_one(
    """the row to be inserted"""
    object: school_admins_insert_input!

    """on conflict condition"""
    on_conflict: school_admins_on_conflict
  ): school_admins

  """
  insert data into the table: "school_configs"
  """
  insert_school_configs(
    """the rows to be inserted"""
    objects: [school_configs_insert_input!]!

    """on conflict condition"""
    on_conflict: school_configs_on_conflict
  ): school_configs_mutation_response

  """
  insert a single row into the table: "school_configs"
  """
  insert_school_configs_one(
    """the row to be inserted"""
    object: school_configs_insert_input!

    """on conflict condition"""
    on_conflict: school_configs_on_conflict
  ): school_configs

  """
  insert data into the table: "school_course"
  """
  insert_school_course(
    """the rows to be inserted"""
    objects: [school_course_insert_input!]!

    """on conflict condition"""
    on_conflict: school_course_on_conflict
  ): school_course_mutation_response

  """
  insert a single row into the table: "school_course"
  """
  insert_school_course_one(
    """the row to be inserted"""
    object: school_course_insert_input!

    """on conflict condition"""
    on_conflict: school_course_on_conflict
  ): school_course

  """
  insert data into the table: "school_info"
  """
  insert_school_info(
    """the rows to be inserted"""
    objects: [school_info_insert_input!]!

    """on conflict condition"""
    on_conflict: school_info_on_conflict
  ): school_info_mutation_response

  """
  insert a single row into the table: "school_info"
  """
  insert_school_info_one(
    """the row to be inserted"""
    object: school_info_insert_input!

    """on conflict condition"""
    on_conflict: school_info_on_conflict
  ): school_info

  """
  insert data into the table: "school_level"
  """
  insert_school_level(
    """the rows to be inserted"""
    objects: [school_level_insert_input!]!

    """on conflict condition"""
    on_conflict: school_level_on_conflict
  ): school_level_mutation_response

  """
  insert a single row into the table: "school_level"
  """
  insert_school_level_one(
    """the row to be inserted"""
    object: school_level_insert_input!

    """on conflict condition"""
    on_conflict: school_level_on_conflict
  ): school_level

  """
  insert data into the table: "schools"
  """
  insert_schools(
    """the rows to be inserted"""
    objects: [schools_insert_input!]!

    """on conflict condition"""
    on_conflict: schools_on_conflict
  ): schools_mutation_response

  """
  insert a single row into the table: "schools"
  """
  insert_schools_one(
    """the row to be inserted"""
    object: schools_insert_input!

    """on conflict condition"""
    on_conflict: schools_on_conflict
  ): schools

  """
  insert data into the table: "staff"
  """
  insert_staff(
    """the rows to be inserted"""
    objects: [staff_insert_input!]!

    """on conflict condition"""
    on_conflict: staff_on_conflict
  ): staff_mutation_response

  """
  insert a single row into the table: "staff"
  """
  insert_staff_one(
    """the row to be inserted"""
    object: staff_insert_input!

    """on conflict condition"""
    on_conflict: staff_on_conflict
  ): staff

  """
  insert data into the table: "student_entryexit_records"
  """
  insert_student_entryexit_records(
    """the rows to be inserted"""
    objects: [student_entryexit_records_insert_input!]!

    """on conflict condition"""
    on_conflict: student_entryexit_records_on_conflict
  ): student_entryexit_records_mutation_response

  """
  insert a single row into the table: "student_entryexit_records"
  """
  insert_student_entryexit_records_one(
    """the row to be inserted"""
    object: student_entryexit_records_insert_input!

    """on conflict condition"""
    on_conflict: student_entryexit_records_on_conflict
  ): student_entryexit_records

  """
  insert data into the table: "student_parents"
  """
  insert_student_parents(
    """the rows to be inserted"""
    objects: [student_parents_insert_input!]!

    """on conflict condition"""
    on_conflict: student_parents_on_conflict
  ): student_parents_mutation_response

  """
  insert a single row into the table: "student_parents"
  """
  insert_student_parents_one(
    """the row to be inserted"""
    object: student_parents_insert_input!

    """on conflict condition"""
    on_conflict: student_parents_on_conflict
  ): student_parents

  """
  insert data into the table: "student_qr"
  """
  insert_student_qr(
    """the rows to be inserted"""
    objects: [student_qr_insert_input!]!

    """on conflict condition"""
    on_conflict: student_qr_on_conflict
  ): student_qr_mutation_response

  """
  insert a single row into the table: "student_qr"
  """
  insert_student_qr_one(
    """the row to be inserted"""
    object: student_qr_insert_input!

    """on conflict condition"""
    on_conflict: student_qr_on_conflict
  ): student_qr

  """
  insert data into the table: "student_subscriptions"
  """
  insert_student_subscriptions(
    """the rows to be inserted"""
    objects: [student_subscriptions_insert_input!]!

    """on conflict condition"""
    on_conflict: student_subscriptions_on_conflict
  ): student_subscriptions_mutation_response

  """
  insert a single row into the table: "student_subscriptions"
  """
  insert_student_subscriptions_one(
    """the row to be inserted"""
    object: student_subscriptions_insert_input!

    """on conflict condition"""
    on_conflict: student_subscriptions_on_conflict
  ): student_subscriptions

  """
  insert data into the table: "students"
  """
  insert_students(
    """the rows to be inserted"""
    objects: [students_insert_input!]!

    """on conflict condition"""
    on_conflict: students_on_conflict
  ): students_mutation_response

  """
  insert data into the table: "students_assigned_coaches"
  """
  insert_students_assigned_coaches(
    """the rows to be inserted"""
    objects: [students_assigned_coaches_insert_input!]!
  ): students_assigned_coaches_mutation_response

  """
  insert a single row into the table: "students_assigned_coaches"
  """
  insert_students_assigned_coaches_one(
    """the row to be inserted"""
    object: students_assigned_coaches_insert_input!
  ): students_assigned_coaches

  """
  insert a single row into the table: "students"
  """
  insert_students_one(
    """the row to be inserted"""
    object: students_insert_input!

    """on conflict condition"""
    on_conflict: students_on_conflict
  ): students

  """
  insert data into the table: "tags"
  """
  insert_tags(
    """the rows to be inserted"""
    objects: [tags_insert_input!]!

    """on conflict condition"""
    on_conflict: tags_on_conflict
  ): tags_mutation_response

  """
  insert a single row into the table: "tags"
  """
  insert_tags_one(
    """the row to be inserted"""
    object: tags_insert_input!

    """on conflict condition"""
    on_conflict: tags_on_conflict
  ): tags

  """
  insert data into the table: "teachers"
  """
  insert_teachers(
    """the rows to be inserted"""
    objects: [teachers_insert_input!]!

    """on conflict condition"""
    on_conflict: teachers_on_conflict
  ): teachers_mutation_response

  """
  insert a single row into the table: "teachers"
  """
  insert_teachers_one(
    """the row to be inserted"""
    object: teachers_insert_input!

    """on conflict condition"""
    on_conflict: teachers_on_conflict
  ): teachers

  """
  insert data into the table: "topics"
  """
  insert_topics(
    """the rows to be inserted"""
    objects: [topics_insert_input!]!

    """on conflict condition"""
    on_conflict: topics_on_conflict
  ): topics_mutation_response

  """
  insert data into the table: "topics_learning_objectives"
  """
  insert_topics_learning_objectives(
    """the rows to be inserted"""
    objects: [topics_learning_objectives_insert_input!]!

    """on conflict condition"""
    on_conflict: topics_learning_objectives_on_conflict
  ): topics_learning_objectives_mutation_response

  """
  insert a single row into the table: "topics_learning_objectives"
  """
  insert_topics_learning_objectives_one(
    """the row to be inserted"""
    object: topics_learning_objectives_insert_input!

    """on conflict condition"""
    on_conflict: topics_learning_objectives_on_conflict
  ): topics_learning_objectives

  """
  insert a single row into the table: "topics"
  """
  insert_topics_one(
    """the row to be inserted"""
    object: topics_insert_input!

    """on conflict condition"""
    on_conflict: topics_on_conflict
  ): topics

  """
  insert data into the table: "user_access_paths"
  """
  insert_user_access_paths(
    """the rows to be inserted"""
    objects: [user_access_paths_insert_input!]!

    """on conflict condition"""
    on_conflict: user_access_paths_on_conflict
  ): user_access_paths_mutation_response

  """
  insert a single row into the table: "user_access_paths"
  """
  insert_user_access_paths_one(
    """the row to be inserted"""
    object: user_access_paths_insert_input!

    """on conflict condition"""
    on_conflict: user_access_paths_on_conflict
  ): user_access_paths

  """
  insert data into the table: "user_address"
  """
  insert_user_address(
    """the rows to be inserted"""
    objects: [user_address_insert_input!]!

    """on conflict condition"""
    on_conflict: user_address_on_conflict
  ): user_address_mutation_response

  """
  insert a single row into the table: "user_address"
  """
  insert_user_address_one(
    """the row to be inserted"""
    object: user_address_insert_input!

    """on conflict condition"""
    on_conflict: user_address_on_conflict
  ): user_address

  """
  insert data into the table: "user_group"
  """
  insert_user_group(
    """the rows to be inserted"""
    objects: [user_group_insert_input!]!

    """on conflict condition"""
    on_conflict: user_group_on_conflict
  ): user_group_mutation_response

  """
  insert data into the table: "user_group_member"
  """
  insert_user_group_member(
    """the rows to be inserted"""
    objects: [user_group_member_insert_input!]!

    """on conflict condition"""
    on_conflict: user_group_member_on_conflict
  ): user_group_member_mutation_response

  """
  insert a single row into the table: "user_group_member"
  """
  insert_user_group_member_one(
    """the row to be inserted"""
    object: user_group_member_insert_input!

    """on conflict condition"""
    on_conflict: user_group_member_on_conflict
  ): user_group_member

  """
  insert a single row into the table: "user_group"
  """
  insert_user_group_one(
    """the row to be inserted"""
    object: user_group_insert_input!

    """on conflict condition"""
    on_conflict: user_group_on_conflict
  ): user_group

  """
  insert data into the table: "users"
  """
  insert_users(
    """the rows to be inserted"""
    objects: [users_insert_input!]!

    """on conflict condition"""
    on_conflict: users_on_conflict
  ): users_mutation_response

  """
  insert data into the table: "users_info_notifications"
  """
  insert_users_info_notifications(
    """the rows to be inserted"""
    objects: [users_info_notifications_insert_input!]!

    """on conflict condition"""
    on_conflict: users_info_notifications_on_conflict
  ): users_info_notifications_mutation_response

  """
  insert a single row into the table: "users_info_notifications"
  """
  insert_users_info_notifications_one(
    """the row to be inserted"""
    object: users_info_notifications_insert_input!

    """on conflict condition"""
    on_conflict: users_info_notifications_on_conflict
  ): users_info_notifications

  """
  insert a single row into the table: "users"
  """
  insert_users_one(
    """the row to be inserted"""
    object: users_insert_input!

    """on conflict condition"""
    on_conflict: users_on_conflict
  ): users

  """
  update data of the table: "assignments"
  """
  update_assignments(
    """increments the integer columns with given value of the filtered values"""
    _inc: assignments_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assignments_set_input

    """filter the rows which have to be updated"""
    where: assignments_bool_exp!
  ): assignments_mutation_response

  """
  update single row of the table: "assignments"
  """
  update_assignments_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: assignments_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: assignments_set_input
    pk_columns: assignments_pk_columns_input!
  ): assignments

  """
  update data of the table: "books"
  """
  update_books(
    """increments the integer columns with given value of the filtered values"""
    _inc: books_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: books_set_input

    """filter the rows which have to be updated"""
    where: books_bool_exp!
  ): books_mutation_response

  """
  update single row of the table: "books"
  """
  update_books_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: books_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: books_set_input
    pk_columns: books_pk_columns_input!
  ): books

  """
  update data of the table: "books_chapters"
  """
  update_books_chapters(
    """sets the columns of the filtered rows to the given values"""
    _set: books_chapters_set_input

    """filter the rows which have to be updated"""
    where: books_chapters_bool_exp!
  ): books_chapters_mutation_response

  """
  update single row of the table: "books_chapters"
  """
  update_books_chapters_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: books_chapters_set_input
    pk_columns: books_chapters_pk_columns_input!
  ): books_chapters

  """
  update data of the table: "chapters"
  """
  update_chapters(
    """increments the integer columns with given value of the filtered values"""
    _inc: chapters_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: chapters_set_input

    """filter the rows which have to be updated"""
    where: chapters_bool_exp!
  ): chapters_mutation_response

  """
  update single row of the table: "chapters"
  """
  update_chapters_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: chapters_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: chapters_set_input
    pk_columns: chapters_pk_columns_input!
  ): chapters

  """
  update data of the table: "cities"
  """
  update_cities(
    """increments the integer columns with given value of the filtered values"""
    _inc: cities_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: cities_set_input

    """filter the rows which have to be updated"""
    where: cities_bool_exp!
  ): cities_mutation_response

  """
  update single row of the table: "cities"
  """
  update_cities_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: cities_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: cities_set_input
    pk_columns: cities_pk_columns_input!
  ): cities

  """
  update data of the table: "class"
  """
  update_class(
    """sets the columns of the filtered rows to the given values"""
    _set: class_set_input

    """filter the rows which have to be updated"""
    where: class_bool_exp!
  ): class_mutation_response

  """
  update single row of the table: "class"
  """
  update_class_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: class_set_input
    pk_columns: class_pk_columns_input!
  ): class

  """
  update data of the table: "class_member"
  """
  update_class_member(
    """sets the columns of the filtered rows to the given values"""
    _set: class_member_set_input

    """filter the rows which have to be updated"""
    where: class_member_bool_exp!
  ): class_member_mutation_response

  """
  update single row of the table: "class_member"
  """
  update_class_member_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: class_member_set_input
    pk_columns: class_member_pk_columns_input!
  ): class_member

  """
  update data of the table: "class_members"
  """
  update_class_members(
    """increments the integer columns with given value of the filtered values"""
    _inc: class_members_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: class_members_set_input

    """filter the rows which have to be updated"""
    where: class_members_bool_exp!
  ): class_members_mutation_response

  """
  update single row of the table: "class_members"
  """
  update_class_members_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: class_members_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: class_members_set_input
    pk_columns: class_members_pk_columns_input!
  ): class_members

  """
  update data of the table: "classes"
  """
  update_classes(
    """increments the integer columns with given value of the filtered values"""
    _inc: classes_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: classes_set_input

    """filter the rows which have to be updated"""
    where: classes_bool_exp!
  ): classes_mutation_response

  """
  update single row of the table: "classes"
  """
  update_classes_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: classes_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: classes_set_input
    pk_columns: classes_pk_columns_input!
  ): classes

  """
  update data of the table: "coaches"
  """
  update_coaches(
    """sets the columns of the filtered rows to the given values"""
    _set: coaches_set_input

    """filter the rows which have to be updated"""
    where: coaches_bool_exp!
  ): coaches_mutation_response

  """
  update single row of the table: "coaches"
  """
  update_coaches_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: coaches_set_input
    pk_columns: coaches_pk_columns_input!
  ): coaches

  """
  update data of the table: "cod_orders"
  """
  update_cod_orders(
    """increments the integer columns with given value of the filtered values"""
    _inc: cod_orders_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: cod_orders_set_input

    """filter the rows which have to be updated"""
    where: cod_orders_bool_exp!
  ): cod_orders_mutation_response

  """
  update single row of the table: "cod_orders"
  """
  update_cod_orders_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: cod_orders_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: cod_orders_set_input
    pk_columns: cod_orders_pk_columns_input!
  ): cod_orders

  """
  update data of the table: "conversion_tasks"
  """
  update_conversion_tasks(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: conversion_tasks_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: conversion_tasks_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: conversion_tasks_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: conversion_tasks_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: conversion_tasks_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: conversion_tasks_set_input

    """filter the rows which have to be updated"""
    where: conversion_tasks_bool_exp!
  ): conversion_tasks_mutation_response

  """
  update single row of the table: "conversion_tasks"
  """
  update_conversion_tasks_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: conversion_tasks_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: conversion_tasks_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: conversion_tasks_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: conversion_tasks_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: conversion_tasks_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: conversion_tasks_set_input
    pk_columns: conversion_tasks_pk_columns_input!
  ): conversion_tasks

  """
  update data of the table: "course_access_paths"
  """
  update_course_access_paths(
    """sets the columns of the filtered rows to the given values"""
    _set: course_access_paths_set_input

    """filter the rows which have to be updated"""
    where: course_access_paths_bool_exp!
  ): course_access_paths_mutation_response

  """
  update single row of the table: "course_access_paths"
  """
  update_course_access_paths_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: course_access_paths_set_input
    pk_columns: course_access_paths_pk_columns_input!
  ): course_access_paths

  """
  update data of the table: "courses"
  """
  update_courses(
    """increments the integer columns with given value of the filtered values"""
    _inc: courses_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: courses_set_input

    """filter the rows which have to be updated"""
    where: courses_bool_exp!
  ): courses_mutation_response

  """
  update data of the table: "courses_books"
  """
  update_courses_books(
    """sets the columns of the filtered rows to the given values"""
    _set: courses_books_set_input

    """filter the rows which have to be updated"""
    where: courses_books_bool_exp!
  ): courses_books_mutation_response

  """
  update single row of the table: "courses_books"
  """
  update_courses_books_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: courses_books_set_input
    pk_columns: courses_books_pk_columns_input!
  ): courses_books

  """
  update single row of the table: "courses"
  """
  update_courses_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: courses_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: courses_set_input
    pk_columns: courses_pk_columns_input!
  ): courses

  """
  update data of the table: "courses_classes"
  """
  update_courses_classes(
    """increments the integer columns with given value of the filtered values"""
    _inc: courses_classes_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: courses_classes_set_input

    """filter the rows which have to be updated"""
    where: courses_classes_bool_exp!
  ): courses_classes_mutation_response

  """
  update single row of the table: "courses_classes"
  """
  update_courses_classes_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: courses_classes_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: courses_classes_set_input
    pk_columns: courses_classes_pk_columns_input!
  ): courses_classes

  """
  update data of the table: "districts"
  """
  update_districts(
    """increments the integer columns with given value of the filtered values"""
    _inc: districts_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: districts_set_input

    """filter the rows which have to be updated"""
    where: districts_bool_exp!
  ): districts_mutation_response

  """
  update single row of the table: "districts"
  """
  update_districts_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: districts_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: districts_set_input
    pk_columns: districts_pk_columns_input!
  ): districts

  """
  update data of the table: "granted_role"
  """
  update_granted_role(
    """sets the columns of the filtered rows to the given values"""
    _set: granted_role_set_input

    """filter the rows which have to be updated"""
    where: granted_role_bool_exp!
  ): granted_role_mutation_response

  """
  update data of the table: "granted_role_access_path"
  """
  update_granted_role_access_path(
    """sets the columns of the filtered rows to the given values"""
    _set: granted_role_access_path_set_input

    """filter the rows which have to be updated"""
    where: granted_role_access_path_bool_exp!
  ): granted_role_access_path_mutation_response

  """
  update single row of the table: "granted_role_access_path"
  """
  update_granted_role_access_path_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: granted_role_access_path_set_input
    pk_columns: granted_role_access_path_pk_columns_input!
  ): granted_role_access_path

  """
  update single row of the table: "granted_role"
  """
  update_granted_role_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: granted_role_set_input
    pk_columns: granted_role_pk_columns_input!
  ): granted_role

  """
  update data of the table: "hub_tours"
  """
  update_hub_tours(
    """increments the integer columns with given value of the filtered values"""
    _inc: hub_tours_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: hub_tours_set_input

    """filter the rows which have to be updated"""
    where: hub_tours_bool_exp!
  ): hub_tours_mutation_response

  """
  update single row of the table: "hub_tours"
  """
  update_hub_tours_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: hub_tours_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: hub_tours_set_input
    pk_columns: hub_tours_pk_columns_input!
  ): hub_tours

  """
  update data of the table: "hubs"
  """
  update_hubs(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: hubs_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: hubs_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: hubs_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: hubs_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: hubs_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: hubs_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: hubs_set_input

    """filter the rows which have to be updated"""
    where: hubs_bool_exp!
  ): hubs_mutation_response

  """
  update single row of the table: "hubs"
  """
  update_hubs_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: hubs_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: hubs_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: hubs_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: hubs_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: hubs_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: hubs_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: hubs_set_input
    pk_columns: hubs_pk_columns_input!
  ): hubs

  """
  update data of the table: "info_notification_msgs"
  """
  update_info_notification_msgs(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: info_notification_msgs_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: info_notification_msgs_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: info_notification_msgs_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: info_notification_msgs_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: info_notification_msgs_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: info_notification_msgs_set_input

    """filter the rows which have to be updated"""
    where: info_notification_msgs_bool_exp!
  ): info_notification_msgs_mutation_response

  """
  update single row of the table: "info_notification_msgs"
  """
  update_info_notification_msgs_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: info_notification_msgs_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: info_notification_msgs_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: info_notification_msgs_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: info_notification_msgs_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: info_notification_msgs_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: info_notification_msgs_set_input
    pk_columns: info_notification_msgs_pk_columns_input!
  ): info_notification_msgs

  """
  update data of the table: "info_notifications"
  """
  update_info_notifications(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: info_notifications_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: info_notifications_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: info_notifications_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: info_notifications_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: info_notifications_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: info_notifications_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: info_notifications_set_input

    """filter the rows which have to be updated"""
    where: info_notifications_bool_exp!
  ): info_notifications_mutation_response

  """
  update single row of the table: "info_notifications"
  """
  update_info_notifications_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: info_notifications_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: info_notifications_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: info_notifications_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: info_notifications_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: info_notifications_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: info_notifications_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: info_notifications_set_input
    pk_columns: info_notifications_pk_columns_input!
  ): info_notifications

  """
  update data of the table: "info_notifications_tags"
  """
  update_info_notifications_tags(
    """sets the columns of the filtered rows to the given values"""
    _set: info_notifications_tags_set_input

    """filter the rows which have to be updated"""
    where: info_notifications_tags_bool_exp!
  ): info_notifications_tags_mutation_response

  """
  update single row of the table: "info_notifications_tags"
  """
  update_info_notifications_tags_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: info_notifications_tags_set_input
    pk_columns: info_notifications_tags_pk_columns_input!
  ): info_notifications_tags

  """
  update data of the table: "learning_objectives"
  """
  update_learning_objectives(
    """increments the integer columns with given value of the filtered values"""
    _inc: learning_objectives_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: learning_objectives_set_input

    """filter the rows which have to be updated"""
    where: learning_objectives_bool_exp!
  ): learning_objectives_mutation_response

  """
  update single row of the table: "learning_objectives"
  """
  update_learning_objectives_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: learning_objectives_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: learning_objectives_set_input
    pk_columns: learning_objectives_pk_columns_input!
  ): learning_objectives

  """
  update data of the table: "lesson_groups"
  """
  update_lesson_groups(
    """sets the columns of the filtered rows to the given values"""
    _set: lesson_groups_set_input

    """filter the rows which have to be updated"""
    where: lesson_groups_bool_exp!
  ): lesson_groups_mutation_response

  """
  update single row of the table: "lesson_groups"
  """
  update_lesson_groups_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: lesson_groups_set_input
    pk_columns: lesson_groups_pk_columns_input!
  ): lesson_groups

  """
  update data of the table: "lesson_members"
  """
  update_lesson_members(
    """sets the columns of the filtered rows to the given values"""
    _set: lesson_members_set_input

    """filter the rows which have to be updated"""
    where: lesson_members_bool_exp!
  ): lesson_members_mutation_response

  """
  update single row of the table: "lesson_members"
  """
  update_lesson_members_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: lesson_members_set_input
    pk_columns: lesson_members_pk_columns_input!
  ): lesson_members

  """
  update data of the table: "lesson_report_details"
  """
  update_lesson_report_details(
    """sets the columns of the filtered rows to the given values"""
    _set: lesson_report_details_set_input

    """filter the rows which have to be updated"""
    where: lesson_report_details_bool_exp!
  ): lesson_report_details_mutation_response

  """
  update single row of the table: "lesson_report_details"
  """
  update_lesson_report_details_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: lesson_report_details_set_input
    pk_columns: lesson_report_details_pk_columns_input!
  ): lesson_report_details

  """
  update data of the table: "lesson_reports"
  """
  update_lesson_reports(
    """sets the columns of the filtered rows to the given values"""
    _set: lesson_reports_set_input

    """filter the rows which have to be updated"""
    where: lesson_reports_bool_exp!
  ): lesson_reports_mutation_response

  """
  update single row of the table: "lesson_reports"
  """
  update_lesson_reports_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: lesson_reports_set_input
    pk_columns: lesson_reports_pk_columns_input!
  ): lesson_reports

  """
  update data of the table: "lesson_student_subscription_access_path"
  """
  update_lesson_student_subscription_access_path(
    """sets the columns of the filtered rows to the given values"""
    _set: lesson_student_subscription_access_path_set_input

    """filter the rows which have to be updated"""
    where: lesson_student_subscription_access_path_bool_exp!
  ): lesson_student_subscription_access_path_mutation_response

  """
  update single row of the table: "lesson_student_subscription_access_path"
  """
  update_lesson_student_subscription_access_path_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: lesson_student_subscription_access_path_set_input
    pk_columns: lesson_student_subscription_access_path_pk_columns_input!
  ): lesson_student_subscription_access_path

  """
  update data of the table: "lesson_student_subscriptions"
  """
  update_lesson_student_subscriptions(
    """sets the columns of the filtered rows to the given values"""
    _set: lesson_student_subscriptions_set_input

    """filter the rows which have to be updated"""
    where: lesson_student_subscriptions_bool_exp!
  ): lesson_student_subscriptions_mutation_response

  """
  update single row of the table: "lesson_student_subscriptions"
  """
  update_lesson_student_subscriptions_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: lesson_student_subscriptions_set_input
    pk_columns: lesson_student_subscriptions_pk_columns_input!
  ): lesson_student_subscriptions

  """
  update data of the table: "lessons"
  """
  update_lessons(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: lessons_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: lessons_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: lessons_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: lessons_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: lessons_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: lessons_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: lessons_set_input

    """filter the rows which have to be updated"""
    where: lessons_bool_exp!
  ): lessons_mutation_response

  """
  update single row of the table: "lessons"
  """
  update_lessons_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: lessons_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: lessons_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: lessons_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: lessons_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: lessons_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: lessons_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: lessons_set_input
    pk_columns: lessons_pk_columns_input!
  ): lessons

  """
  update data of the table: "lessons_courses"
  """
  update_lessons_courses(
    """sets the columns of the filtered rows to the given values"""
    _set: lessons_courses_set_input

    """filter the rows which have to be updated"""
    where: lessons_courses_bool_exp!
  ): lessons_courses_mutation_response

  """
  update single row of the table: "lessons_courses"
  """
  update_lessons_courses_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: lessons_courses_set_input
    pk_columns: lessons_courses_pk_columns_input!
  ): lessons_courses

  """
  update data of the table: "lessons_teachers"
  """
  update_lessons_teachers(
    """sets the columns of the filtered rows to the given values"""
    _set: lessons_teachers_set_input

    """filter the rows which have to be updated"""
    where: lessons_teachers_bool_exp!
  ): lessons_teachers_mutation_response

  """
  update single row of the table: "lessons_teachers"
  """
  update_lessons_teachers_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: lessons_teachers_set_input
    pk_columns: lessons_teachers_pk_columns_input!
  ): lessons_teachers

  """
  update data of the table: "location_types"
  """
  update_location_types(
    """sets the columns of the filtered rows to the given values"""
    _set: location_types_set_input

    """filter the rows which have to be updated"""
    where: location_types_bool_exp!
  ): location_types_mutation_response

  """
  update single row of the table: "location_types"
  """
  update_location_types_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: location_types_set_input
    pk_columns: location_types_pk_columns_input!
  ): location_types

  """
  update data of the table: "locations"
  """
  update_locations(
    """sets the columns of the filtered rows to the given values"""
    _set: locations_set_input

    """filter the rows which have to be updated"""
    where: locations_bool_exp!
  ): locations_mutation_response

  """
  update single row of the table: "locations"
  """
  update_locations_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: locations_set_input
    pk_columns: locations_pk_columns_input!
  ): locations

  """
  update data of the table: "media"
  """
  update_media(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: media_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: media_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: media_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: media_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: media_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: media_set_input

    """filter the rows which have to be updated"""
    where: media_bool_exp!
  ): media_mutation_response

  """
  update single row of the table: "media"
  """
  update_media_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: media_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: media_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: media_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: media_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: media_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: media_set_input
    pk_columns: media_pk_columns_input!
  ): media

  """
  update data of the table: "organizations"
  """
  update_organizations(
    """sets the columns of the filtered rows to the given values"""
    _set: organizations_set_input

    """filter the rows which have to be updated"""
    where: organizations_bool_exp!
  ): organizations_mutation_response

  """
  update single row of the table: "organizations"
  """
  update_organizations_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: organizations_set_input
    pk_columns: organizations_pk_columns_input!
  ): organizations

  """
  update data of the table: "parents"
  """
  update_parents(
    """increments the integer columns with given value of the filtered values"""
    _inc: parents_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: parents_set_input

    """filter the rows which have to be updated"""
    where: parents_bool_exp!
  ): parents_mutation_response

  """
  update single row of the table: "parents"
  """
  update_parents_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: parents_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: parents_set_input
    pk_columns: parents_pk_columns_input!
  ): parents

  """
  update data of the table: "partner_dynamic_form_field_values"
  """
  update_partner_dynamic_form_field_values(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: partner_dynamic_form_field_values_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: partner_dynamic_form_field_values_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: partner_dynamic_form_field_values_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: partner_dynamic_form_field_values_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: partner_dynamic_form_field_values_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: partner_dynamic_form_field_values_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: partner_dynamic_form_field_values_set_input

    """filter the rows which have to be updated"""
    where: partner_dynamic_form_field_values_bool_exp!
  ): partner_dynamic_form_field_values_mutation_response

  """
  update single row of the table: "partner_dynamic_form_field_values"
  """
  update_partner_dynamic_form_field_values_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: partner_dynamic_form_field_values_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: partner_dynamic_form_field_values_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: partner_dynamic_form_field_values_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: partner_dynamic_form_field_values_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: partner_dynamic_form_field_values_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: partner_dynamic_form_field_values_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: partner_dynamic_form_field_values_set_input
    pk_columns: partner_dynamic_form_field_values_pk_columns_input!
  ): partner_dynamic_form_field_values

  """
  update data of the table: "partner_form_configs"
  """
  update_partner_form_configs(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: partner_form_configs_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: partner_form_configs_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: partner_form_configs_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: partner_form_configs_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: partner_form_configs_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: partner_form_configs_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: partner_form_configs_set_input

    """filter the rows which have to be updated"""
    where: partner_form_configs_bool_exp!
  ): partner_form_configs_mutation_response

  """
  update single row of the table: "partner_form_configs"
  """
  update_partner_form_configs_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: partner_form_configs_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: partner_form_configs_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: partner_form_configs_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: partner_form_configs_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: partner_form_configs_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: partner_form_configs_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: partner_form_configs_set_input
    pk_columns: partner_form_configs_pk_columns_input!
  ): partner_form_configs

  """
  update data of the table: "plans"
  """
  update_plans(
    """increments the integer columns with given value of the filtered values"""
    _inc: plans_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: plans_set_input

    """filter the rows which have to be updated"""
    where: plans_bool_exp!
  ): plans_mutation_response

  """
  update single row of the table: "plans"
  """
  update_plans_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: plans_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: plans_set_input
    pk_columns: plans_pk_columns_input!
  ): plans

  """
  update data of the table: "prefecture"
  """
  update_prefecture(
    """sets the columns of the filtered rows to the given values"""
    _set: prefecture_set_input

    """filter the rows which have to be updated"""
    where: prefecture_bool_exp!
  ): prefecture_mutation_response

  """
  update single row of the table: "prefecture"
  """
  update_prefecture_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: prefecture_set_input
    pk_columns: prefecture_pk_columns_input!
  ): prefecture

  """
  update data of the table: "preset_study_plans"
  """
  update_preset_study_plans(
    """increments the integer columns with given value of the filtered values"""
    _inc: preset_study_plans_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: preset_study_plans_set_input

    """filter the rows which have to be updated"""
    where: preset_study_plans_bool_exp!
  ): preset_study_plans_mutation_response

  """
  update single row of the table: "preset_study_plans"
  """
  update_preset_study_plans_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: preset_study_plans_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: preset_study_plans_set_input
    pk_columns: preset_study_plans_pk_columns_input!
  ): preset_study_plans

  """
  update data of the table: "preset_study_plans_weekly"
  """
  update_preset_study_plans_weekly(
    """increments the integer columns with given value of the filtered values"""
    _inc: preset_study_plans_weekly_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: preset_study_plans_weekly_set_input

    """filter the rows which have to be updated"""
    where: preset_study_plans_weekly_bool_exp!
  ): preset_study_plans_weekly_mutation_response

  """
  update single row of the table: "preset_study_plans_weekly"
  """
  update_preset_study_plans_weekly_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: preset_study_plans_weekly_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: preset_study_plans_weekly_set_input
    pk_columns: preset_study_plans_weekly_pk_columns_input!
  ): preset_study_plans_weekly

  """
  update data of the table: "preset_study_plans_weekly_format"
  """
  update_preset_study_plans_weekly_format(
    """increments the integer columns with given value of the filtered values"""
    _inc: preset_study_plans_weekly_format_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: preset_study_plans_weekly_format_set_input

    """filter the rows which have to be updated"""
    where: preset_study_plans_weekly_format_bool_exp!
  ): preset_study_plans_weekly_format_mutation_response

  """
  update data of the table: "promotion_rules"
  """
  update_promotion_rules(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: promotion_rules_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: promotion_rules_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: promotion_rules_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: promotion_rules_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: promotion_rules_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: promotion_rules_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: promotion_rules_set_input

    """filter the rows which have to be updated"""
    where: promotion_rules_bool_exp!
  ): promotion_rules_mutation_response

  """
  update single row of the table: "promotion_rules"
  """
  update_promotion_rules_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: promotion_rules_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: promotion_rules_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: promotion_rules_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: promotion_rules_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: promotion_rules_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: promotion_rules_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: promotion_rules_set_input
    pk_columns: promotion_rules_pk_columns_input!
  ): promotion_rules

  """
  update data of the table: "promotions"
  """
  update_promotions(
    """increments the integer columns with given value of the filtered values"""
    _inc: promotions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: promotions_set_input

    """filter the rows which have to be updated"""
    where: promotions_bool_exp!
  ): promotions_mutation_response

  """
  update single row of the table: "promotions"
  """
  update_promotions_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: promotions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: promotions_set_input
    pk_columns: promotions_pk_columns_input!
  ): promotions

  """
  update data of the table: "questionnaire_questions"
  """
  update_questionnaire_questions(
    """increments the integer columns with given value of the filtered values"""
    _inc: questionnaire_questions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: questionnaire_questions_set_input

    """filter the rows which have to be updated"""
    where: questionnaire_questions_bool_exp!
  ): questionnaire_questions_mutation_response

  """
  update single row of the table: "questionnaire_questions"
  """
  update_questionnaire_questions_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: questionnaire_questions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: questionnaire_questions_set_input
    pk_columns: questionnaire_questions_pk_columns_input!
  ): questionnaire_questions

  """
  update data of the table: "questionnaire_user_answers"
  """
  update_questionnaire_user_answers(
    """sets the columns of the filtered rows to the given values"""
    _set: questionnaire_user_answers_set_input

    """filter the rows which have to be updated"""
    where: questionnaire_user_answers_bool_exp!
  ): questionnaire_user_answers_mutation_response

  """
  update single row of the table: "questionnaire_user_answers"
  """
  update_questionnaire_user_answers_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: questionnaire_user_answers_set_input
    pk_columns: questionnaire_user_answers_pk_columns_input!
  ): questionnaire_user_answers

  """
  update data of the table: "questionnaires"
  """
  update_questionnaires(
    """sets the columns of the filtered rows to the given values"""
    _set: questionnaires_set_input

    """filter the rows which have to be updated"""
    where: questionnaires_bool_exp!
  ): questionnaires_mutation_response

  """
  update single row of the table: "questionnaires"
  """
  update_questionnaires_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: questionnaires_set_input
    pk_columns: questionnaires_pk_columns_input!
  ): questionnaires

  """
  update data of the table: "questions"
  """
  update_questions(
    """increments the integer columns with given value of the filtered values"""
    _inc: questions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: questions_set_input

    """filter the rows which have to be updated"""
    where: questions_bool_exp!
  ): questions_mutation_response

  """
  update single row of the table: "questions"
  """
  update_questions_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: questions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: questions_set_input
    pk_columns: questions_pk_columns_input!
  ): questions

  """
  update data of the table: "quiz_sets"
  """
  update_quiz_sets(
    """sets the columns of the filtered rows to the given values"""
    _set: quiz_sets_set_input

    """filter the rows which have to be updated"""
    where: quiz_sets_bool_exp!
  ): quiz_sets_mutation_response

  """
  update single row of the table: "quiz_sets"
  """
  update_quiz_sets_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: quiz_sets_set_input
    pk_columns: quiz_sets_pk_columns_input!
  ): quiz_sets

  """
  update data of the table: "quizsets"
  """
  update_quizsets(
    """increments the integer columns with given value of the filtered values"""
    _inc: quizsets_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: quizsets_set_input

    """filter the rows which have to be updated"""
    where: quizsets_bool_exp!
  ): quizsets_mutation_response

  """
  update single row of the table: "quizsets"
  """
  update_quizsets_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: quizsets_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: quizsets_set_input
    pk_columns: quizsets_pk_columns_input!
  ): quizsets

  """
  update data of the table: "quizzes"
  """
  update_quizzes(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: quizzes_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: quizzes_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: quizzes_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: quizzes_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: quizzes_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: quizzes_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: quizzes_set_input

    """filter the rows which have to be updated"""
    where: quizzes_bool_exp!
  ): quizzes_mutation_response

  """
  update single row of the table: "quizzes"
  """
  update_quizzes_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: quizzes_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: quizzes_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: quizzes_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: quizzes_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: quizzes_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: quizzes_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: quizzes_set_input
    pk_columns: quizzes_pk_columns_input!
  ): quizzes

  """
  update data of the table: "role"
  """
  update_role(
    """sets the columns of the filtered rows to the given values"""
    _set: role_set_input

    """filter the rows which have to be updated"""
    where: role_bool_exp!
  ): role_mutation_response

  """
  update single row of the table: "role"
  """
  update_role_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: role_set_input
    pk_columns: role_pk_columns_input!
  ): role

  """
  update data of the table: "scheduler"
  """
  update_scheduler(
    """sets the columns of the filtered rows to the given values"""
    _set: scheduler_set_input

    """filter the rows which have to be updated"""
    where: scheduler_bool_exp!
  ): scheduler_mutation_response

  """
  update single row of the table: "scheduler"
  """
  update_scheduler_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: scheduler_set_input
    pk_columns: scheduler_pk_columns_input!
  ): scheduler

  """
  update data of the table: "school_admins"
  """
  update_school_admins(
    """increments the integer columns with given value of the filtered values"""
    _inc: school_admins_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: school_admins_set_input

    """filter the rows which have to be updated"""
    where: school_admins_bool_exp!
  ): school_admins_mutation_response

  """
  update single row of the table: "school_admins"
  """
  update_school_admins_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: school_admins_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: school_admins_set_input
    pk_columns: school_admins_pk_columns_input!
  ): school_admins

  """
  update data of the table: "school_configs"
  """
  update_school_configs(
    """increments the integer columns with given value of the filtered values"""
    _inc: school_configs_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: school_configs_set_input

    """filter the rows which have to be updated"""
    where: school_configs_bool_exp!
  ): school_configs_mutation_response

  """
  update single row of the table: "school_configs"
  """
  update_school_configs_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: school_configs_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: school_configs_set_input
    pk_columns: school_configs_pk_columns_input!
  ): school_configs

  """
  update data of the table: "school_course"
  """
  update_school_course(
    """sets the columns of the filtered rows to the given values"""
    _set: school_course_set_input

    """filter the rows which have to be updated"""
    where: school_course_bool_exp!
  ): school_course_mutation_response

  """
  update single row of the table: "school_course"
  """
  update_school_course_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: school_course_set_input
    pk_columns: school_course_pk_columns_input!
  ): school_course

  """
  update data of the table: "school_info"
  """
  update_school_info(
    """sets the columns of the filtered rows to the given values"""
    _set: school_info_set_input

    """filter the rows which have to be updated"""
    where: school_info_bool_exp!
  ): school_info_mutation_response

  """
  update single row of the table: "school_info"
  """
  update_school_info_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: school_info_set_input
    pk_columns: school_info_pk_columns_input!
  ): school_info

  """
  update data of the table: "school_level"
  """
  update_school_level(
    """increments the integer columns with given value of the filtered values"""
    _inc: school_level_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: school_level_set_input

    """filter the rows which have to be updated"""
    where: school_level_bool_exp!
  ): school_level_mutation_response

  """
  update single row of the table: "school_level"
  """
  update_school_level_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: school_level_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: school_level_set_input
    pk_columns: school_level_pk_columns_input!
  ): school_level

  """
  update data of the table: "schools"
  """
  update_schools(
    """increments the integer columns with given value of the filtered values"""
    _inc: schools_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: schools_set_input

    """filter the rows which have to be updated"""
    where: schools_bool_exp!
  ): schools_mutation_response

  """
  update single row of the table: "schools"
  """
  update_schools_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: schools_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: schools_set_input
    pk_columns: schools_pk_columns_input!
  ): schools

  """
  update data of the table: "staff"
  """
  update_staff(
    """sets the columns of the filtered rows to the given values"""
    _set: staff_set_input

    """filter the rows which have to be updated"""
    where: staff_bool_exp!
  ): staff_mutation_response

  """
  update single row of the table: "staff"
  """
  update_staff_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: staff_set_input
    pk_columns: staff_pk_columns_input!
  ): staff

  """
  update data of the table: "student_entryexit_records"
  """
  update_student_entryexit_records(
    """increments the integer columns with given value of the filtered values"""
    _inc: student_entryexit_records_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_entryexit_records_set_input

    """filter the rows which have to be updated"""
    where: student_entryexit_records_bool_exp!
  ): student_entryexit_records_mutation_response

  """
  update single row of the table: "student_entryexit_records"
  """
  update_student_entryexit_records_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: student_entryexit_records_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_entryexit_records_set_input
    pk_columns: student_entryexit_records_pk_columns_input!
  ): student_entryexit_records

  """
  update data of the table: "student_parents"
  """
  update_student_parents(
    """sets the columns of the filtered rows to the given values"""
    _set: student_parents_set_input

    """filter the rows which have to be updated"""
    where: student_parents_bool_exp!
  ): student_parents_mutation_response

  """
  update single row of the table: "student_parents"
  """
  update_student_parents_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: student_parents_set_input
    pk_columns: student_parents_pk_columns_input!
  ): student_parents

  """
  update data of the table: "student_qr"
  """
  update_student_qr(
    """increments the integer columns with given value of the filtered values"""
    _inc: student_qr_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_qr_set_input

    """filter the rows which have to be updated"""
    where: student_qr_bool_exp!
  ): student_qr_mutation_response

  """
  update single row of the table: "student_qr"
  """
  update_student_qr_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: student_qr_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_qr_set_input
    pk_columns: student_qr_pk_columns_input!
  ): student_qr

  """
  update data of the table: "student_subscriptions"
  """
  update_student_subscriptions(
    """increments the integer columns with given value of the filtered values"""
    _inc: student_subscriptions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_subscriptions_set_input

    """filter the rows which have to be updated"""
    where: student_subscriptions_bool_exp!
  ): student_subscriptions_mutation_response

  """
  update single row of the table: "student_subscriptions"
  """
  update_student_subscriptions_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: student_subscriptions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: student_subscriptions_set_input
    pk_columns: student_subscriptions_pk_columns_input!
  ): student_subscriptions

  """
  update data of the table: "students"
  """
  update_students(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: students_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: students_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: students_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: students_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: students_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: students_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: students_set_input

    """filter the rows which have to be updated"""
    where: students_bool_exp!
  ): students_mutation_response

  """
  update data of the table: "students_assigned_coaches"
  """
  update_students_assigned_coaches(
    """sets the columns of the filtered rows to the given values"""
    _set: students_assigned_coaches_set_input

    """filter the rows which have to be updated"""
    where: students_assigned_coaches_bool_exp!
  ): students_assigned_coaches_mutation_response

  """
  update single row of the table: "students"
  """
  update_students_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: students_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: students_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: students_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: students_delete_key_input

    """increments the integer columns with given value of the filtered values"""
    _inc: students_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: students_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: students_set_input
    pk_columns: students_pk_columns_input!
  ): students

  """
  update data of the table: "tags"
  """
  update_tags(
    """sets the columns of the filtered rows to the given values"""
    _set: tags_set_input

    """filter the rows which have to be updated"""
    where: tags_bool_exp!
  ): tags_mutation_response

  """
  update single row of the table: "tags"
  """
  update_tags_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: tags_set_input
    pk_columns: tags_pk_columns_input!
  ): tags

  """
  update data of the table: "teachers"
  """
  update_teachers(
    """sets the columns of the filtered rows to the given values"""
    _set: teachers_set_input

    """filter the rows which have to be updated"""
    where: teachers_bool_exp!
  ): teachers_mutation_response

  """
  update single row of the table: "teachers"
  """
  update_teachers_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: teachers_set_input
    pk_columns: teachers_pk_columns_input!
  ): teachers

  """
  update data of the table: "topics"
  """
  update_topics(
    """increments the integer columns with given value of the filtered values"""
    _inc: topics_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: topics_set_input

    """filter the rows which have to be updated"""
    where: topics_bool_exp!
  ): topics_mutation_response

  """
  update single row of the table: "topics"
  """
  update_topics_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: topics_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: topics_set_input
    pk_columns: topics_pk_columns_input!
  ): topics

  """
  update data of the table: "topics_learning_objectives"
  """
  update_topics_learning_objectives(
    """increments the integer columns with given value of the filtered values"""
    _inc: topics_learning_objectives_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: topics_learning_objectives_set_input

    """filter the rows which have to be updated"""
    where: topics_learning_objectives_bool_exp!
  ): topics_learning_objectives_mutation_response

  """
  update single row of the table: "topics_learning_objectives"
  """
  update_topics_learning_objectives_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: topics_learning_objectives_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: topics_learning_objectives_set_input
    pk_columns: topics_learning_objectives_pk_columns_input!
  ): topics_learning_objectives

  """
  update data of the table: "user_access_paths"
  """
  update_user_access_paths(
    """sets the columns of the filtered rows to the given values"""
    _set: user_access_paths_set_input

    """filter the rows which have to be updated"""
    where: user_access_paths_bool_exp!
  ): user_access_paths_mutation_response

  """
  update single row of the table: "user_access_paths"
  """
  update_user_access_paths_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: user_access_paths_set_input
    pk_columns: user_access_paths_pk_columns_input!
  ): user_access_paths

  """
  update data of the table: "user_address"
  """
  update_user_address(
    """sets the columns of the filtered rows to the given values"""
    _set: user_address_set_input

    """filter the rows which have to be updated"""
    where: user_address_bool_exp!
  ): user_address_mutation_response

  """
  update single row of the table: "user_address"
  """
  update_user_address_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: user_address_set_input
    pk_columns: user_address_pk_columns_input!
  ): user_address

  """
  update data of the table: "user_group"
  """
  update_user_group(
    """sets the columns of the filtered rows to the given values"""
    _set: user_group_set_input

    """filter the rows which have to be updated"""
    where: user_group_bool_exp!
  ): user_group_mutation_response

  """
  update single row of the table: "user_group"
  """
  update_user_group_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: user_group_set_input
    pk_columns: user_group_pk_columns_input!
  ): user_group

  """
  update data of the table: "user_group_member"
  """
  update_user_group_member(
    """sets the columns of the filtered rows to the given values"""
    _set: user_group_member_set_input

    """filter the rows which have to be updated"""
    where: user_group_member_bool_exp!
  ): user_group_member_mutation_response

  """
  update single row of the table: "user_group_member"
  """
  update_user_group_member_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: user_group_member_set_input
    pk_columns: user_group_member_pk_columns_input!
  ): user_group_member

  """
  update data of the table: "users"
  """
  update_users(
    """sets the columns of the filtered rows to the given values"""
    _set: users_set_input

    """filter the rows which have to be updated"""
    where: users_bool_exp!
  ): users_mutation_response

  """
  update single row of the table: "users"
  """
  update_users_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: users_set_input
    pk_columns: users_pk_columns_input!
  ): users

  """
  update data of the table: "users_info_notifications"
  """
  update_users_info_notifications(
    """increments the integer columns with given value of the filtered values"""
    _inc: users_info_notifications_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: users_info_notifications_set_input

    """filter the rows which have to be updated"""
    where: users_info_notifications_bool_exp!
  ): users_info_notifications_mutation_response

  """
  update single row of the table: "users_info_notifications"
  """
  update_users_info_notifications_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: users_info_notifications_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: users_info_notifications_set_input
    pk_columns: users_info_notifications_pk_columns_input!
  ): users_info_notifications
}

scalar numeric

"""
expression to compare columns of type numeric. All fields are combined with logical 'AND'.
"""
input numeric_comparison_exp {
  _eq: numeric
  _gt: numeric
  _gte: numeric
  _in: [numeric!]
  _is_null: Boolean
  _lt: numeric
  _lte: numeric
  _neq: numeric
  _nin: [numeric!]
}

"""column ordering options"""
enum order_by {
  """in the ascending order, nulls last"""
  asc

  """in the ascending order, nulls first"""
  asc_nulls_first

  """in the ascending order, nulls last"""
  asc_nulls_last

  """in the descending order, nulls first"""
  desc

  """in the descending order, nulls first"""
  desc_nulls_first

  """in the descending order, nulls last"""
  desc_nulls_last
}

"""
columns and relationships of "organizations"
"""
type organizations {
  country: String
  created_at: timestamptz!
  deleted_at: timestamptz
  domain_name: String
  logo_url: String
  name: String
  organization_id: String!
  resource_path: String!
  scrypt_memory_cost: String
  scrypt_rounds: String
  scrypt_salt_separator: String
  scrypt_signer_key: String
  tenant_id: String
  updated_at: timestamptz!
}

"""
aggregated selection of "organizations"
"""
type organizations_aggregate {
  aggregate: organizations_aggregate_fields
  nodes: [organizations!]!
}

"""
aggregate fields of "organizations"
"""
type organizations_aggregate_fields {
  count(columns: [organizations_select_column!], distinct: Boolean): Int
  max: organizations_max_fields
  min: organizations_min_fields
}

"""
order by aggregate values of table "organizations"
"""
input organizations_aggregate_order_by {
  count: order_by
  max: organizations_max_order_by
  min: organizations_min_order_by
}

"""
input type for inserting array relation for remote table "organizations"
"""
input organizations_arr_rel_insert_input {
  data: [organizations_insert_input!]!
  on_conflict: organizations_on_conflict
}

"""
Boolean expression to filter rows from the table "organizations". All fields are combined with a logical 'AND'.
"""
input organizations_bool_exp {
  _and: [organizations_bool_exp]
  _not: organizations_bool_exp
  _or: [organizations_bool_exp]
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  domain_name: String_comparison_exp
  logo_url: String_comparison_exp
  name: String_comparison_exp
  organization_id: String_comparison_exp
  resource_path: String_comparison_exp
  scrypt_memory_cost: String_comparison_exp
  scrypt_rounds: String_comparison_exp
  scrypt_salt_separator: String_comparison_exp
  scrypt_signer_key: String_comparison_exp
  tenant_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "organizations"
"""
enum organizations_constraint {
  """unique or primary key constraint"""
  organization__domain_name__un

  """unique or primary key constraint"""
  organizations__pk

  """unique or primary key constraint"""
  organizations__tenant_id__un
}

"""
input type for inserting data into table "organizations"
"""
input organizations_insert_input {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  domain_name: String
  logo_url: String
  name: String
  organization_id: String
  resource_path: String
  scrypt_memory_cost: String
  scrypt_rounds: String
  scrypt_salt_separator: String
  scrypt_signer_key: String
  tenant_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type organizations_max_fields {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  domain_name: String
  logo_url: String
  name: String
  organization_id: String
  resource_path: String
  scrypt_memory_cost: String
  scrypt_rounds: String
  scrypt_salt_separator: String
  scrypt_signer_key: String
  tenant_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "organizations"
"""
input organizations_max_order_by {
  country: order_by
  created_at: order_by
  deleted_at: order_by
  domain_name: order_by
  logo_url: order_by
  name: order_by
  organization_id: order_by
  resource_path: order_by
  scrypt_memory_cost: order_by
  scrypt_rounds: order_by
  scrypt_salt_separator: order_by
  scrypt_signer_key: order_by
  tenant_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type organizations_min_fields {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  domain_name: String
  logo_url: String
  name: String
  organization_id: String
  resource_path: String
  scrypt_memory_cost: String
  scrypt_rounds: String
  scrypt_salt_separator: String
  scrypt_signer_key: String
  tenant_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "organizations"
"""
input organizations_min_order_by {
  country: order_by
  created_at: order_by
  deleted_at: order_by
  domain_name: order_by
  logo_url: order_by
  name: order_by
  organization_id: order_by
  resource_path: order_by
  scrypt_memory_cost: order_by
  scrypt_rounds: order_by
  scrypt_salt_separator: order_by
  scrypt_signer_key: order_by
  tenant_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "organizations"
"""
type organizations_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [organizations!]!
}

"""
input type for inserting object relation for remote table "organizations"
"""
input organizations_obj_rel_insert_input {
  data: organizations_insert_input!
  on_conflict: organizations_on_conflict
}

"""
on conflict condition type for table "organizations"
"""
input organizations_on_conflict {
  constraint: organizations_constraint!
  update_columns: [organizations_update_column!]!
  where: organizations_bool_exp
}

"""
ordering options when selecting data from "organizations"
"""
input organizations_order_by {
  country: order_by
  created_at: order_by
  deleted_at: order_by
  domain_name: order_by
  logo_url: order_by
  name: order_by
  organization_id: order_by
  resource_path: order_by
  scrypt_memory_cost: order_by
  scrypt_rounds: order_by
  scrypt_salt_separator: order_by
  scrypt_signer_key: order_by
  tenant_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "organizations"
"""
input organizations_pk_columns_input {
  organization_id: String!
}

"""
select columns of table "organizations"
"""
enum organizations_select_column {
  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  domain_name

  """column name"""
  logo_url

  """column name"""
  name

  """column name"""
  organization_id

  """column name"""
  resource_path

  """column name"""
  scrypt_memory_cost

  """column name"""
  scrypt_rounds

  """column name"""
  scrypt_salt_separator

  """column name"""
  scrypt_signer_key

  """column name"""
  tenant_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "organizations"
"""
input organizations_set_input {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  domain_name: String
  logo_url: String
  name: String
  organization_id: String
  resource_path: String
  scrypt_memory_cost: String
  scrypt_rounds: String
  scrypt_salt_separator: String
  scrypt_signer_key: String
  tenant_id: String
  updated_at: timestamptz
}

"""
update columns of table "organizations"
"""
enum organizations_update_column {
  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  domain_name

  """column name"""
  logo_url

  """column name"""
  name

  """column name"""
  organization_id

  """column name"""
  resource_path

  """column name"""
  scrypt_memory_cost

  """column name"""
  scrypt_rounds

  """column name"""
  scrypt_salt_separator

  """column name"""
  scrypt_signer_key

  """column name"""
  tenant_id

  """column name"""
  updated_at
}

"""
columns and relationships of "parents"
"""
type parents {
  created_at: timestamptz!
  deleted_at: timestamptz
  parent_id: String!
  resource_path: String!
  school_id: Int

  """An array relationship"""
  student_parents(
    """distinct select on columns"""
    distinct_on: [student_parents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_parents_order_by!]

    """filter the rows returned"""
    where: student_parents_bool_exp
  ): [student_parents!]!

  """An aggregated array relationship"""
  student_parents_aggregate(
    """distinct select on columns"""
    distinct_on: [student_parents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_parents_order_by!]

    """filter the rows returned"""
    where: student_parents_bool_exp
  ): student_parents_aggregate!
  updated_at: timestamptz!

  """An object relationship"""
  user: users
}

"""
aggregated selection of "parents"
"""
type parents_aggregate {
  aggregate: parents_aggregate_fields
  nodes: [parents!]!
}

"""
aggregate fields of "parents"
"""
type parents_aggregate_fields {
  avg: parents_avg_fields
  count(columns: [parents_select_column!], distinct: Boolean): Int
  max: parents_max_fields
  min: parents_min_fields
  stddev: parents_stddev_fields
  stddev_pop: parents_stddev_pop_fields
  stddev_samp: parents_stddev_samp_fields
  sum: parents_sum_fields
  var_pop: parents_var_pop_fields
  var_samp: parents_var_samp_fields
  variance: parents_variance_fields
}

"""
order by aggregate values of table "parents"
"""
input parents_aggregate_order_by {
  avg: parents_avg_order_by
  count: order_by
  max: parents_max_order_by
  min: parents_min_order_by
  stddev: parents_stddev_order_by
  stddev_pop: parents_stddev_pop_order_by
  stddev_samp: parents_stddev_samp_order_by
  sum: parents_sum_order_by
  var_pop: parents_var_pop_order_by
  var_samp: parents_var_samp_order_by
  variance: parents_variance_order_by
}

"""
input type for inserting array relation for remote table "parents"
"""
input parents_arr_rel_insert_input {
  data: [parents_insert_input!]!
  on_conflict: parents_on_conflict
}

"""aggregate avg on columns"""
type parents_avg_fields {
  school_id: Float
}

"""
order by avg() on columns of table "parents"
"""
input parents_avg_order_by {
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "parents". All fields are combined with a logical 'AND'.
"""
input parents_bool_exp {
  _and: [parents_bool_exp]
  _not: parents_bool_exp
  _or: [parents_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  parent_id: String_comparison_exp
  resource_path: String_comparison_exp
  school_id: Int_comparison_exp
  student_parents: student_parents_bool_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
}

"""
unique or primary key constraints on table "parents"
"""
enum parents_constraint {
  """unique or primary key constraint"""
  parents__parent_id_pk
}

"""
input type for incrementing integer column in table "parents"
"""
input parents_inc_input {
  school_id: Int
}

"""
input type for inserting data into table "parents"
"""
input parents_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  parent_id: String
  resource_path: String
  school_id: Int
  student_parents: student_parents_arr_rel_insert_input
  updated_at: timestamptz
  user: users_obj_rel_insert_input
}

"""aggregate max on columns"""
type parents_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  parent_id: String
  resource_path: String
  school_id: Int
  updated_at: timestamptz
}

"""
order by max() on columns of table "parents"
"""
input parents_max_order_by {
  created_at: order_by
  deleted_at: order_by
  parent_id: order_by
  resource_path: order_by
  school_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type parents_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  parent_id: String
  resource_path: String
  school_id: Int
  updated_at: timestamptz
}

"""
order by min() on columns of table "parents"
"""
input parents_min_order_by {
  created_at: order_by
  deleted_at: order_by
  parent_id: order_by
  resource_path: order_by
  school_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "parents"
"""
type parents_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [parents!]!
}

"""
input type for inserting object relation for remote table "parents"
"""
input parents_obj_rel_insert_input {
  data: parents_insert_input!
  on_conflict: parents_on_conflict
}

"""
on conflict condition type for table "parents"
"""
input parents_on_conflict {
  constraint: parents_constraint!
  update_columns: [parents_update_column!]!
  where: parents_bool_exp
}

"""
ordering options when selecting data from "parents"
"""
input parents_order_by {
  created_at: order_by
  deleted_at: order_by
  parent_id: order_by
  resource_path: order_by
  school_id: order_by
  student_parents_aggregate: student_parents_aggregate_order_by
  updated_at: order_by
  user: users_order_by
}

"""
primary key columns input for table: "parents"
"""
input parents_pk_columns_input {
  parent_id: String!
}

"""
select columns of table "parents"
"""
enum parents_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  parent_id

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "parents"
"""
input parents_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  parent_id: String
  resource_path: String
  school_id: Int
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type parents_stddev_fields {
  school_id: Float
}

"""
order by stddev() on columns of table "parents"
"""
input parents_stddev_order_by {
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type parents_stddev_pop_fields {
  school_id: Float
}

"""
order by stddev_pop() on columns of table "parents"
"""
input parents_stddev_pop_order_by {
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type parents_stddev_samp_fields {
  school_id: Float
}

"""
order by stddev_samp() on columns of table "parents"
"""
input parents_stddev_samp_order_by {
  school_id: order_by
}

"""aggregate sum on columns"""
type parents_sum_fields {
  school_id: Int
}

"""
order by sum() on columns of table "parents"
"""
input parents_sum_order_by {
  school_id: order_by
}

"""
update columns of table "parents"
"""
enum parents_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  parent_id

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type parents_var_pop_fields {
  school_id: Float
}

"""
order by var_pop() on columns of table "parents"
"""
input parents_var_pop_order_by {
  school_id: order_by
}

"""aggregate var_samp on columns"""
type parents_var_samp_fields {
  school_id: Float
}

"""
order by var_samp() on columns of table "parents"
"""
input parents_var_samp_order_by {
  school_id: order_by
}

"""aggregate variance on columns"""
type parents_variance_fields {
  school_id: Float
}

"""
order by variance() on columns of table "parents"
"""
input parents_variance_order_by {
  school_id: order_by
}

"""
columns and relationships of "partner_dynamic_form_field_values"
"""
type partner_dynamic_form_field_values {
  bool_value: Boolean
  created_at: timestamptz!
  deleted_at: timestamptz
  dynamic_form_field_value_id: String!
  field_id: String!
  field_render_guide(
    """JSON select path"""
    path: String
  ): jsonb
  int_array_value: _int4
  int_set_value: _int4
  int_value: Int

  """An object relationship"""
  lesson_report_detail: lesson_report_details!
  lesson_report_detail_id: String!
  resource_path: String!
  string_array_value: _text
  string_set_value: _text
  string_value: String
  updated_at: timestamptz!
  value_type: String
}

"""
aggregated selection of "partner_dynamic_form_field_values"
"""
type partner_dynamic_form_field_values_aggregate {
  aggregate: partner_dynamic_form_field_values_aggregate_fields
  nodes: [partner_dynamic_form_field_values!]!
}

"""
aggregate fields of "partner_dynamic_form_field_values"
"""
type partner_dynamic_form_field_values_aggregate_fields {
  avg: partner_dynamic_form_field_values_avg_fields
  count(columns: [partner_dynamic_form_field_values_select_column!], distinct: Boolean): Int
  max: partner_dynamic_form_field_values_max_fields
  min: partner_dynamic_form_field_values_min_fields
  stddev: partner_dynamic_form_field_values_stddev_fields
  stddev_pop: partner_dynamic_form_field_values_stddev_pop_fields
  stddev_samp: partner_dynamic_form_field_values_stddev_samp_fields
  sum: partner_dynamic_form_field_values_sum_fields
  var_pop: partner_dynamic_form_field_values_var_pop_fields
  var_samp: partner_dynamic_form_field_values_var_samp_fields
  variance: partner_dynamic_form_field_values_variance_fields
}

"""
order by aggregate values of table "partner_dynamic_form_field_values"
"""
input partner_dynamic_form_field_values_aggregate_order_by {
  avg: partner_dynamic_form_field_values_avg_order_by
  count: order_by
  max: partner_dynamic_form_field_values_max_order_by
  min: partner_dynamic_form_field_values_min_order_by
  stddev: partner_dynamic_form_field_values_stddev_order_by
  stddev_pop: partner_dynamic_form_field_values_stddev_pop_order_by
  stddev_samp: partner_dynamic_form_field_values_stddev_samp_order_by
  sum: partner_dynamic_form_field_values_sum_order_by
  var_pop: partner_dynamic_form_field_values_var_pop_order_by
  var_samp: partner_dynamic_form_field_values_var_samp_order_by
  variance: partner_dynamic_form_field_values_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input partner_dynamic_form_field_values_append_input {
  field_render_guide: jsonb
}

"""
input type for inserting array relation for remote table "partner_dynamic_form_field_values"
"""
input partner_dynamic_form_field_values_arr_rel_insert_input {
  data: [partner_dynamic_form_field_values_insert_input!]!
  on_conflict: partner_dynamic_form_field_values_on_conflict
}

"""aggregate avg on columns"""
type partner_dynamic_form_field_values_avg_fields {
  int_value: Float
}

"""
order by avg() on columns of table "partner_dynamic_form_field_values"
"""
input partner_dynamic_form_field_values_avg_order_by {
  int_value: order_by
}

"""
Boolean expression to filter rows from the table "partner_dynamic_form_field_values". All fields are combined with a logical 'AND'.
"""
input partner_dynamic_form_field_values_bool_exp {
  _and: [partner_dynamic_form_field_values_bool_exp]
  _not: partner_dynamic_form_field_values_bool_exp
  _or: [partner_dynamic_form_field_values_bool_exp]
  bool_value: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  dynamic_form_field_value_id: String_comparison_exp
  field_id: String_comparison_exp
  field_render_guide: jsonb_comparison_exp
  int_array_value: _int4_comparison_exp
  int_set_value: _int4_comparison_exp
  int_value: Int_comparison_exp
  lesson_report_detail: lesson_report_details_bool_exp
  lesson_report_detail_id: String_comparison_exp
  resource_path: String_comparison_exp
  string_array_value: _text_comparison_exp
  string_set_value: _text_comparison_exp
  string_value: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  value_type: String_comparison_exp
}

"""
unique or primary key constraints on table "partner_dynamic_form_field_values"
"""
enum partner_dynamic_form_field_values_constraint {
  """unique or primary key constraint"""
  partner_dynamic_form_field_values_pk

  """unique or primary key constraint"""
  unique__lesson_report_detail_id__field_id
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input partner_dynamic_form_field_values_delete_at_path_input {
  field_render_guide: [String]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input partner_dynamic_form_field_values_delete_elem_input {
  field_render_guide: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input partner_dynamic_form_field_values_delete_key_input {
  field_render_guide: String
}

"""
input type for incrementing integer column in table "partner_dynamic_form_field_values"
"""
input partner_dynamic_form_field_values_inc_input {
  int_value: Int
}

"""
input type for inserting data into table "partner_dynamic_form_field_values"
"""
input partner_dynamic_form_field_values_insert_input {
  bool_value: Boolean
  created_at: timestamptz
  deleted_at: timestamptz
  dynamic_form_field_value_id: String
  field_id: String
  field_render_guide: jsonb
  int_array_value: _int4
  int_set_value: _int4
  int_value: Int
  lesson_report_detail: lesson_report_details_obj_rel_insert_input
  lesson_report_detail_id: String
  resource_path: String
  string_array_value: _text
  string_set_value: _text
  string_value: String
  updated_at: timestamptz
  value_type: String
}

"""aggregate max on columns"""
type partner_dynamic_form_field_values_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  dynamic_form_field_value_id: String
  field_id: String
  int_value: Int
  lesson_report_detail_id: String
  resource_path: String
  string_value: String
  updated_at: timestamptz
  value_type: String
}

"""
order by max() on columns of table "partner_dynamic_form_field_values"
"""
input partner_dynamic_form_field_values_max_order_by {
  created_at: order_by
  deleted_at: order_by
  dynamic_form_field_value_id: order_by
  field_id: order_by
  int_value: order_by
  lesson_report_detail_id: order_by
  resource_path: order_by
  string_value: order_by
  updated_at: order_by
  value_type: order_by
}

"""aggregate min on columns"""
type partner_dynamic_form_field_values_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  dynamic_form_field_value_id: String
  field_id: String
  int_value: Int
  lesson_report_detail_id: String
  resource_path: String
  string_value: String
  updated_at: timestamptz
  value_type: String
}

"""
order by min() on columns of table "partner_dynamic_form_field_values"
"""
input partner_dynamic_form_field_values_min_order_by {
  created_at: order_by
  deleted_at: order_by
  dynamic_form_field_value_id: order_by
  field_id: order_by
  int_value: order_by
  lesson_report_detail_id: order_by
  resource_path: order_by
  string_value: order_by
  updated_at: order_by
  value_type: order_by
}

"""
response of any mutation on the table "partner_dynamic_form_field_values"
"""
type partner_dynamic_form_field_values_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [partner_dynamic_form_field_values!]!
}

"""
input type for inserting object relation for remote table "partner_dynamic_form_field_values"
"""
input partner_dynamic_form_field_values_obj_rel_insert_input {
  data: partner_dynamic_form_field_values_insert_input!
  on_conflict: partner_dynamic_form_field_values_on_conflict
}

"""
on conflict condition type for table "partner_dynamic_form_field_values"
"""
input partner_dynamic_form_field_values_on_conflict {
  constraint: partner_dynamic_form_field_values_constraint!
  update_columns: [partner_dynamic_form_field_values_update_column!]!
  where: partner_dynamic_form_field_values_bool_exp
}

"""
ordering options when selecting data from "partner_dynamic_form_field_values"
"""
input partner_dynamic_form_field_values_order_by {
  bool_value: order_by
  created_at: order_by
  deleted_at: order_by
  dynamic_form_field_value_id: order_by
  field_id: order_by
  field_render_guide: order_by
  int_array_value: order_by
  int_set_value: order_by
  int_value: order_by
  lesson_report_detail: lesson_report_details_order_by
  lesson_report_detail_id: order_by
  resource_path: order_by
  string_array_value: order_by
  string_set_value: order_by
  string_value: order_by
  updated_at: order_by
  value_type: order_by
}

"""
primary key columns input for table: "partner_dynamic_form_field_values"
"""
input partner_dynamic_form_field_values_pk_columns_input {
  dynamic_form_field_value_id: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input partner_dynamic_form_field_values_prepend_input {
  field_render_guide: jsonb
}

"""
select columns of table "partner_dynamic_form_field_values"
"""
enum partner_dynamic_form_field_values_select_column {
  """column name"""
  bool_value

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  dynamic_form_field_value_id

  """column name"""
  field_id

  """column name"""
  field_render_guide

  """column name"""
  int_array_value

  """column name"""
  int_set_value

  """column name"""
  int_value

  """column name"""
  lesson_report_detail_id

  """column name"""
  resource_path

  """column name"""
  string_array_value

  """column name"""
  string_set_value

  """column name"""
  string_value

  """column name"""
  updated_at

  """column name"""
  value_type
}

"""
input type for updating data in table "partner_dynamic_form_field_values"
"""
input partner_dynamic_form_field_values_set_input {
  bool_value: Boolean
  created_at: timestamptz
  deleted_at: timestamptz
  dynamic_form_field_value_id: String
  field_id: String
  field_render_guide: jsonb
  int_array_value: _int4
  int_set_value: _int4
  int_value: Int
  lesson_report_detail_id: String
  resource_path: String
  string_array_value: _text
  string_set_value: _text
  string_value: String
  updated_at: timestamptz
  value_type: String
}

"""aggregate stddev on columns"""
type partner_dynamic_form_field_values_stddev_fields {
  int_value: Float
}

"""
order by stddev() on columns of table "partner_dynamic_form_field_values"
"""
input partner_dynamic_form_field_values_stddev_order_by {
  int_value: order_by
}

"""aggregate stddev_pop on columns"""
type partner_dynamic_form_field_values_stddev_pop_fields {
  int_value: Float
}

"""
order by stddev_pop() on columns of table "partner_dynamic_form_field_values"
"""
input partner_dynamic_form_field_values_stddev_pop_order_by {
  int_value: order_by
}

"""aggregate stddev_samp on columns"""
type partner_dynamic_form_field_values_stddev_samp_fields {
  int_value: Float
}

"""
order by stddev_samp() on columns of table "partner_dynamic_form_field_values"
"""
input partner_dynamic_form_field_values_stddev_samp_order_by {
  int_value: order_by
}

"""aggregate sum on columns"""
type partner_dynamic_form_field_values_sum_fields {
  int_value: Int
}

"""
order by sum() on columns of table "partner_dynamic_form_field_values"
"""
input partner_dynamic_form_field_values_sum_order_by {
  int_value: order_by
}

"""
update columns of table "partner_dynamic_form_field_values"
"""
enum partner_dynamic_form_field_values_update_column {
  """column name"""
  bool_value

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  dynamic_form_field_value_id

  """column name"""
  field_id

  """column name"""
  field_render_guide

  """column name"""
  int_array_value

  """column name"""
  int_set_value

  """column name"""
  int_value

  """column name"""
  lesson_report_detail_id

  """column name"""
  resource_path

  """column name"""
  string_array_value

  """column name"""
  string_set_value

  """column name"""
  string_value

  """column name"""
  updated_at

  """column name"""
  value_type
}

"""aggregate var_pop on columns"""
type partner_dynamic_form_field_values_var_pop_fields {
  int_value: Float
}

"""
order by var_pop() on columns of table "partner_dynamic_form_field_values"
"""
input partner_dynamic_form_field_values_var_pop_order_by {
  int_value: order_by
}

"""aggregate var_samp on columns"""
type partner_dynamic_form_field_values_var_samp_fields {
  int_value: Float
}

"""
order by var_samp() on columns of table "partner_dynamic_form_field_values"
"""
input partner_dynamic_form_field_values_var_samp_order_by {
  int_value: order_by
}

"""aggregate variance on columns"""
type partner_dynamic_form_field_values_variance_fields {
  int_value: Float
}

"""
order by variance() on columns of table "partner_dynamic_form_field_values"
"""
input partner_dynamic_form_field_values_variance_order_by {
  int_value: order_by
}

"""
columns and relationships of "partner_form_configs"
"""
type partner_form_configs {
  created_at: timestamptz!
  deleted_at: timestamptz
  feature_name: String!
  form_config_data(
    """JSON select path"""
    path: String
  ): jsonb
  form_config_id: String!

  """An array relationship"""
  lesson_reports(
    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): [lesson_reports!]!

  """An aggregated array relationship"""
  lesson_reports_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): lesson_reports_aggregate!
  partner_id: Int!
  resource_path: String!

  """An object relationship"""
  school: schools!
  updated_at: timestamptz!
}

"""
aggregated selection of "partner_form_configs"
"""
type partner_form_configs_aggregate {
  aggregate: partner_form_configs_aggregate_fields
  nodes: [partner_form_configs!]!
}

"""
aggregate fields of "partner_form_configs"
"""
type partner_form_configs_aggregate_fields {
  avg: partner_form_configs_avg_fields
  count(columns: [partner_form_configs_select_column!], distinct: Boolean): Int
  max: partner_form_configs_max_fields
  min: partner_form_configs_min_fields
  stddev: partner_form_configs_stddev_fields
  stddev_pop: partner_form_configs_stddev_pop_fields
  stddev_samp: partner_form_configs_stddev_samp_fields
  sum: partner_form_configs_sum_fields
  var_pop: partner_form_configs_var_pop_fields
  var_samp: partner_form_configs_var_samp_fields
  variance: partner_form_configs_variance_fields
}

"""
order by aggregate values of table "partner_form_configs"
"""
input partner_form_configs_aggregate_order_by {
  avg: partner_form_configs_avg_order_by
  count: order_by
  max: partner_form_configs_max_order_by
  min: partner_form_configs_min_order_by
  stddev: partner_form_configs_stddev_order_by
  stddev_pop: partner_form_configs_stddev_pop_order_by
  stddev_samp: partner_form_configs_stddev_samp_order_by
  sum: partner_form_configs_sum_order_by
  var_pop: partner_form_configs_var_pop_order_by
  var_samp: partner_form_configs_var_samp_order_by
  variance: partner_form_configs_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input partner_form_configs_append_input {
  form_config_data: jsonb
}

"""
input type for inserting array relation for remote table "partner_form_configs"
"""
input partner_form_configs_arr_rel_insert_input {
  data: [partner_form_configs_insert_input!]!
  on_conflict: partner_form_configs_on_conflict
}

"""aggregate avg on columns"""
type partner_form_configs_avg_fields {
  partner_id: Float
}

"""
order by avg() on columns of table "partner_form_configs"
"""
input partner_form_configs_avg_order_by {
  partner_id: order_by
}

"""
Boolean expression to filter rows from the table "partner_form_configs". All fields are combined with a logical 'AND'.
"""
input partner_form_configs_bool_exp {
  _and: [partner_form_configs_bool_exp]
  _not: partner_form_configs_bool_exp
  _or: [partner_form_configs_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  feature_name: String_comparison_exp
  form_config_data: jsonb_comparison_exp
  form_config_id: String_comparison_exp
  lesson_reports: lesson_reports_bool_exp
  partner_id: Int_comparison_exp
  resource_path: String_comparison_exp
  school: schools_bool_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "partner_form_configs"
"""
enum partner_form_configs_constraint {
  """unique or primary key constraint"""
  partner_form_configs_pk
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input partner_form_configs_delete_at_path_input {
  form_config_data: [String]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input partner_form_configs_delete_elem_input {
  form_config_data: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input partner_form_configs_delete_key_input {
  form_config_data: String
}

"""
input type for incrementing integer column in table "partner_form_configs"
"""
input partner_form_configs_inc_input {
  partner_id: Int
}

"""
input type for inserting data into table "partner_form_configs"
"""
input partner_form_configs_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  feature_name: String
  form_config_data: jsonb
  form_config_id: String
  lesson_reports: lesson_reports_arr_rel_insert_input
  partner_id: Int
  resource_path: String
  school: schools_obj_rel_insert_input
  updated_at: timestamptz
}

"""aggregate max on columns"""
type partner_form_configs_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  feature_name: String
  form_config_id: String
  partner_id: Int
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "partner_form_configs"
"""
input partner_form_configs_max_order_by {
  created_at: order_by
  deleted_at: order_by
  feature_name: order_by
  form_config_id: order_by
  partner_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type partner_form_configs_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  feature_name: String
  form_config_id: String
  partner_id: Int
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "partner_form_configs"
"""
input partner_form_configs_min_order_by {
  created_at: order_by
  deleted_at: order_by
  feature_name: order_by
  form_config_id: order_by
  partner_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "partner_form_configs"
"""
type partner_form_configs_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [partner_form_configs!]!
}

"""
input type for inserting object relation for remote table "partner_form_configs"
"""
input partner_form_configs_obj_rel_insert_input {
  data: partner_form_configs_insert_input!
  on_conflict: partner_form_configs_on_conflict
}

"""
on conflict condition type for table "partner_form_configs"
"""
input partner_form_configs_on_conflict {
  constraint: partner_form_configs_constraint!
  update_columns: [partner_form_configs_update_column!]!
  where: partner_form_configs_bool_exp
}

"""
ordering options when selecting data from "partner_form_configs"
"""
input partner_form_configs_order_by {
  created_at: order_by
  deleted_at: order_by
  feature_name: order_by
  form_config_data: order_by
  form_config_id: order_by
  lesson_reports_aggregate: lesson_reports_aggregate_order_by
  partner_id: order_by
  resource_path: order_by
  school: schools_order_by
  updated_at: order_by
}

"""
primary key columns input for table: "partner_form_configs"
"""
input partner_form_configs_pk_columns_input {
  form_config_id: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input partner_form_configs_prepend_input {
  form_config_data: jsonb
}

"""
select columns of table "partner_form_configs"
"""
enum partner_form_configs_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  feature_name

  """column name"""
  form_config_data

  """column name"""
  form_config_id

  """column name"""
  partner_id

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "partner_form_configs"
"""
input partner_form_configs_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  feature_name: String
  form_config_data: jsonb
  form_config_id: String
  partner_id: Int
  resource_path: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type partner_form_configs_stddev_fields {
  partner_id: Float
}

"""
order by stddev() on columns of table "partner_form_configs"
"""
input partner_form_configs_stddev_order_by {
  partner_id: order_by
}

"""aggregate stddev_pop on columns"""
type partner_form_configs_stddev_pop_fields {
  partner_id: Float
}

"""
order by stddev_pop() on columns of table "partner_form_configs"
"""
input partner_form_configs_stddev_pop_order_by {
  partner_id: order_by
}

"""aggregate stddev_samp on columns"""
type partner_form_configs_stddev_samp_fields {
  partner_id: Float
}

"""
order by stddev_samp() on columns of table "partner_form_configs"
"""
input partner_form_configs_stddev_samp_order_by {
  partner_id: order_by
}

"""aggregate sum on columns"""
type partner_form_configs_sum_fields {
  partner_id: Int
}

"""
order by sum() on columns of table "partner_form_configs"
"""
input partner_form_configs_sum_order_by {
  partner_id: order_by
}

"""
update columns of table "partner_form_configs"
"""
enum partner_form_configs_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  feature_name

  """column name"""
  form_config_data

  """column name"""
  form_config_id

  """column name"""
  partner_id

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type partner_form_configs_var_pop_fields {
  partner_id: Float
}

"""
order by var_pop() on columns of table "partner_form_configs"
"""
input partner_form_configs_var_pop_order_by {
  partner_id: order_by
}

"""aggregate var_samp on columns"""
type partner_form_configs_var_samp_fields {
  partner_id: Float
}

"""
order by var_samp() on columns of table "partner_form_configs"
"""
input partner_form_configs_var_samp_order_by {
  partner_id: order_by
}

"""aggregate variance on columns"""
type partner_form_configs_variance_fields {
  partner_id: Float
}

"""
order by variance() on columns of table "partner_form_configs"
"""
input partner_form_configs_variance_order_by {
  partner_id: order_by
}

"""
columns and relationships of "plans"
"""
type plans {
  benefits: _text

  """An array relationship"""
  classes(
    """distinct select on columns"""
    distinct_on: [classes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [classes_order_by!]

    """filter the rows returned"""
    where: classes_bool_exp
  ): [classes!]!

  """An aggregated array relationship"""
  classes_aggregate(
    """distinct select on columns"""
    distinct_on: [classes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [classes_order_by!]

    """filter the rows returned"""
    where: classes_bool_exp
  ): classes_aggregate!
  country: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  description: String
  is_purchasable: Boolean!
  plan_id: String!
  plan_privileges: _text!
  prioritize_level: smallint
  resource_path: String

  """An array relationship"""
  student_subscriptions(
    """distinct select on columns"""
    distinct_on: [student_subscriptions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_subscriptions_order_by!]

    """filter the rows returned"""
    where: student_subscriptions_bool_exp
  ): [student_subscriptions!]!

  """An aggregated array relationship"""
  student_subscriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [student_subscriptions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_subscriptions_order_by!]

    """filter the rows returned"""
    where: student_subscriptions_bool_exp
  ): student_subscriptions_aggregate!
  updated_at: timestamptz!
}

"""
aggregated selection of "plans"
"""
type plans_aggregate {
  aggregate: plans_aggregate_fields
  nodes: [plans!]!
}

"""
aggregate fields of "plans"
"""
type plans_aggregate_fields {
  avg: plans_avg_fields
  count(columns: [plans_select_column!], distinct: Boolean): Int
  max: plans_max_fields
  min: plans_min_fields
  stddev: plans_stddev_fields
  stddev_pop: plans_stddev_pop_fields
  stddev_samp: plans_stddev_samp_fields
  sum: plans_sum_fields
  var_pop: plans_var_pop_fields
  var_samp: plans_var_samp_fields
  variance: plans_variance_fields
}

"""
order by aggregate values of table "plans"
"""
input plans_aggregate_order_by {
  avg: plans_avg_order_by
  count: order_by
  max: plans_max_order_by
  min: plans_min_order_by
  stddev: plans_stddev_order_by
  stddev_pop: plans_stddev_pop_order_by
  stddev_samp: plans_stddev_samp_order_by
  sum: plans_sum_order_by
  var_pop: plans_var_pop_order_by
  var_samp: plans_var_samp_order_by
  variance: plans_variance_order_by
}

"""
input type for inserting array relation for remote table "plans"
"""
input plans_arr_rel_insert_input {
  data: [plans_insert_input!]!
  on_conflict: plans_on_conflict
}

"""aggregate avg on columns"""
type plans_avg_fields {
  prioritize_level: Float
}

"""
order by avg() on columns of table "plans"
"""
input plans_avg_order_by {
  prioritize_level: order_by
}

"""
Boolean expression to filter rows from the table "plans". All fields are combined with a logical 'AND'.
"""
input plans_bool_exp {
  _and: [plans_bool_exp]
  _not: plans_bool_exp
  _or: [plans_bool_exp]
  benefits: _text_comparison_exp
  classes: classes_bool_exp
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  description: String_comparison_exp
  is_purchasable: Boolean_comparison_exp
  plan_id: String_comparison_exp
  plan_privileges: _text_comparison_exp
  prioritize_level: smallint_comparison_exp
  resource_path: String_comparison_exp
  student_subscriptions: student_subscriptions_bool_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "plans"
"""
enum plans_constraint {
  """unique or primary key constraint"""
  plans_pk
}

"""
input type for incrementing integer column in table "plans"
"""
input plans_inc_input {
  prioritize_level: smallint
}

"""
input type for inserting data into table "plans"
"""
input plans_insert_input {
  benefits: _text
  classes: classes_arr_rel_insert_input
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  description: String
  is_purchasable: Boolean
  plan_id: String
  plan_privileges: _text
  prioritize_level: smallint
  resource_path: String
  student_subscriptions: student_subscriptions_arr_rel_insert_input
  updated_at: timestamptz
}

"""aggregate max on columns"""
type plans_max_fields {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  description: String
  plan_id: String
  prioritize_level: smallint
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "plans"
"""
input plans_max_order_by {
  country: order_by
  created_at: order_by
  deleted_at: order_by
  description: order_by
  plan_id: order_by
  prioritize_level: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type plans_min_fields {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  description: String
  plan_id: String
  prioritize_level: smallint
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "plans"
"""
input plans_min_order_by {
  country: order_by
  created_at: order_by
  deleted_at: order_by
  description: order_by
  plan_id: order_by
  prioritize_level: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "plans"
"""
type plans_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [plans!]!
}

"""
input type for inserting object relation for remote table "plans"
"""
input plans_obj_rel_insert_input {
  data: plans_insert_input!
  on_conflict: plans_on_conflict
}

"""
on conflict condition type for table "plans"
"""
input plans_on_conflict {
  constraint: plans_constraint!
  update_columns: [plans_update_column!]!
  where: plans_bool_exp
}

"""
ordering options when selecting data from "plans"
"""
input plans_order_by {
  benefits: order_by
  classes_aggregate: classes_aggregate_order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  description: order_by
  is_purchasable: order_by
  plan_id: order_by
  plan_privileges: order_by
  prioritize_level: order_by
  resource_path: order_by
  student_subscriptions_aggregate: student_subscriptions_aggregate_order_by
  updated_at: order_by
}

"""
primary key columns input for table: "plans"
"""
input plans_pk_columns_input {
  country: String!
  plan_id: String!
}

"""
select columns of table "plans"
"""
enum plans_select_column {
  """column name"""
  benefits

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  description

  """column name"""
  is_purchasable

  """column name"""
  plan_id

  """column name"""
  plan_privileges

  """column name"""
  prioritize_level

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "plans"
"""
input plans_set_input {
  benefits: _text
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  description: String
  is_purchasable: Boolean
  plan_id: String
  plan_privileges: _text
  prioritize_level: smallint
  resource_path: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type plans_stddev_fields {
  prioritize_level: Float
}

"""
order by stddev() on columns of table "plans"
"""
input plans_stddev_order_by {
  prioritize_level: order_by
}

"""aggregate stddev_pop on columns"""
type plans_stddev_pop_fields {
  prioritize_level: Float
}

"""
order by stddev_pop() on columns of table "plans"
"""
input plans_stddev_pop_order_by {
  prioritize_level: order_by
}

"""aggregate stddev_samp on columns"""
type plans_stddev_samp_fields {
  prioritize_level: Float
}

"""
order by stddev_samp() on columns of table "plans"
"""
input plans_stddev_samp_order_by {
  prioritize_level: order_by
}

"""aggregate sum on columns"""
type plans_sum_fields {
  prioritize_level: smallint
}

"""
order by sum() on columns of table "plans"
"""
input plans_sum_order_by {
  prioritize_level: order_by
}

"""
update columns of table "plans"
"""
enum plans_update_column {
  """column name"""
  benefits

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  description

  """column name"""
  is_purchasable

  """column name"""
  plan_id

  """column name"""
  plan_privileges

  """column name"""
  prioritize_level

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type plans_var_pop_fields {
  prioritize_level: Float
}

"""
order by var_pop() on columns of table "plans"
"""
input plans_var_pop_order_by {
  prioritize_level: order_by
}

"""aggregate var_samp on columns"""
type plans_var_samp_fields {
  prioritize_level: Float
}

"""
order by var_samp() on columns of table "plans"
"""
input plans_var_samp_order_by {
  prioritize_level: order_by
}

"""aggregate variance on columns"""
type plans_variance_fields {
  prioritize_level: Float
}

"""
order by variance() on columns of table "plans"
"""
input plans_variance_order_by {
  prioritize_level: order_by
}

scalar point

"""
expression to compare columns of type point. All fields are combined with logical 'AND'.
"""
input point_comparison_exp {
  _eq: point
  _gt: point
  _gte: point
  _in: [point!]
  _is_null: Boolean
  _lt: point
  _lte: point
  _neq: point
  _nin: [point!]
}

"""
columns and relationships of "prefecture"
"""
type prefecture {
  country: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  name: String!
  prefecture_code: String!
  prefecture_id: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "prefecture"
"""
type prefecture_aggregate {
  aggregate: prefecture_aggregate_fields
  nodes: [prefecture!]!
}

"""
aggregate fields of "prefecture"
"""
type prefecture_aggregate_fields {
  count(columns: [prefecture_select_column!], distinct: Boolean): Int
  max: prefecture_max_fields
  min: prefecture_min_fields
}

"""
order by aggregate values of table "prefecture"
"""
input prefecture_aggregate_order_by {
  count: order_by
  max: prefecture_max_order_by
  min: prefecture_min_order_by
}

"""
input type for inserting array relation for remote table "prefecture"
"""
input prefecture_arr_rel_insert_input {
  data: [prefecture_insert_input!]!
  on_conflict: prefecture_on_conflict
}

"""
Boolean expression to filter rows from the table "prefecture". All fields are combined with a logical 'AND'.
"""
input prefecture_bool_exp {
  _and: [prefecture_bool_exp]
  _not: prefecture_bool_exp
  _or: [prefecture_bool_exp]
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  name: String_comparison_exp
  prefecture_code: String_comparison_exp
  prefecture_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "prefecture"
"""
enum prefecture_constraint {
  """unique or primary key constraint"""
  prefecture__pk
}

"""
input type for inserting data into table "prefecture"
"""
input prefecture_insert_input {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  name: String
  prefecture_code: String
  prefecture_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type prefecture_max_fields {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  name: String
  prefecture_code: String
  prefecture_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "prefecture"
"""
input prefecture_max_order_by {
  country: order_by
  created_at: order_by
  deleted_at: order_by
  name: order_by
  prefecture_code: order_by
  prefecture_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type prefecture_min_fields {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  name: String
  prefecture_code: String
  prefecture_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "prefecture"
"""
input prefecture_min_order_by {
  country: order_by
  created_at: order_by
  deleted_at: order_by
  name: order_by
  prefecture_code: order_by
  prefecture_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "prefecture"
"""
type prefecture_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [prefecture!]!
}

"""
input type for inserting object relation for remote table "prefecture"
"""
input prefecture_obj_rel_insert_input {
  data: prefecture_insert_input!
  on_conflict: prefecture_on_conflict
}

"""
on conflict condition type for table "prefecture"
"""
input prefecture_on_conflict {
  constraint: prefecture_constraint!
  update_columns: [prefecture_update_column!]!
  where: prefecture_bool_exp
}

"""
ordering options when selecting data from "prefecture"
"""
input prefecture_order_by {
  country: order_by
  created_at: order_by
  deleted_at: order_by
  name: order_by
  prefecture_code: order_by
  prefecture_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "prefecture"
"""
input prefecture_pk_columns_input {
  prefecture_id: String!
}

"""
select columns of table "prefecture"
"""
enum prefecture_select_column {
  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  name

  """column name"""
  prefecture_code

  """column name"""
  prefecture_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "prefecture"
"""
input prefecture_set_input {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  name: String
  prefecture_code: String
  prefecture_id: String
  updated_at: timestamptz
}

"""
update columns of table "prefecture"
"""
enum prefecture_update_column {
  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  name

  """column name"""
  prefecture_code

  """column name"""
  prefecture_id

  """column name"""
  updated_at
}

"""
columns and relationships of "preset_study_plans"
"""
type preset_study_plans {
  country: String
  created_at: timestamptz!
  deleted_at: timestamptz
  grade: smallint!
  name: String!
  preset_study_plan_id: String!

  """An array relationship"""
  preset_study_plans_weeklies(
    """distinct select on columns"""
    distinct_on: [preset_study_plans_weekly_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preset_study_plans_weekly_order_by!]

    """filter the rows returned"""
    where: preset_study_plans_weekly_bool_exp
  ): [preset_study_plans_weekly!]!

  """An aggregated array relationship"""
  preset_study_plans_weeklies_aggregate(
    """distinct select on columns"""
    distinct_on: [preset_study_plans_weekly_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preset_study_plans_weekly_order_by!]

    """filter the rows returned"""
    where: preset_study_plans_weekly_bool_exp
  ): preset_study_plans_weekly_aggregate!
  resource_path: String!
  start_date: timestamptz
  subject: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "preset_study_plans"
"""
type preset_study_plans_aggregate {
  aggregate: preset_study_plans_aggregate_fields
  nodes: [preset_study_plans!]!
}

"""
aggregate fields of "preset_study_plans"
"""
type preset_study_plans_aggregate_fields {
  avg: preset_study_plans_avg_fields
  count(columns: [preset_study_plans_select_column!], distinct: Boolean): Int
  max: preset_study_plans_max_fields
  min: preset_study_plans_min_fields
  stddev: preset_study_plans_stddev_fields
  stddev_pop: preset_study_plans_stddev_pop_fields
  stddev_samp: preset_study_plans_stddev_samp_fields
  sum: preset_study_plans_sum_fields
  var_pop: preset_study_plans_var_pop_fields
  var_samp: preset_study_plans_var_samp_fields
  variance: preset_study_plans_variance_fields
}

"""
order by aggregate values of table "preset_study_plans"
"""
input preset_study_plans_aggregate_order_by {
  avg: preset_study_plans_avg_order_by
  count: order_by
  max: preset_study_plans_max_order_by
  min: preset_study_plans_min_order_by
  stddev: preset_study_plans_stddev_order_by
  stddev_pop: preset_study_plans_stddev_pop_order_by
  stddev_samp: preset_study_plans_stddev_samp_order_by
  sum: preset_study_plans_sum_order_by
  var_pop: preset_study_plans_var_pop_order_by
  var_samp: preset_study_plans_var_samp_order_by
  variance: preset_study_plans_variance_order_by
}

"""
input type for inserting array relation for remote table "preset_study_plans"
"""
input preset_study_plans_arr_rel_insert_input {
  data: [preset_study_plans_insert_input!]!
  on_conflict: preset_study_plans_on_conflict
}

"""aggregate avg on columns"""
type preset_study_plans_avg_fields {
  grade: Float
}

"""
order by avg() on columns of table "preset_study_plans"
"""
input preset_study_plans_avg_order_by {
  grade: order_by
}

"""
Boolean expression to filter rows from the table "preset_study_plans". All fields are combined with a logical 'AND'.
"""
input preset_study_plans_bool_exp {
  _and: [preset_study_plans_bool_exp]
  _not: preset_study_plans_bool_exp
  _or: [preset_study_plans_bool_exp]
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  grade: smallint_comparison_exp
  name: String_comparison_exp
  preset_study_plan_id: String_comparison_exp
  preset_study_plans_weeklies: preset_study_plans_weekly_bool_exp
  resource_path: String_comparison_exp
  start_date: timestamptz_comparison_exp
  subject: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "preset_study_plans"
"""
enum preset_study_plans_constraint {
  """unique or primary key constraint"""
  preset_study_plans_pk
}

"""
input type for incrementing integer column in table "preset_study_plans"
"""
input preset_study_plans_inc_input {
  grade: smallint
}

"""
input type for inserting data into table "preset_study_plans"
"""
input preset_study_plans_insert_input {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  grade: smallint
  name: String
  preset_study_plan_id: String
  preset_study_plans_weeklies: preset_study_plans_weekly_arr_rel_insert_input
  resource_path: String
  start_date: timestamptz
  subject: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type preset_study_plans_max_fields {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  grade: smallint
  name: String
  preset_study_plan_id: String
  resource_path: String
  start_date: timestamptz
  subject: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "preset_study_plans"
"""
input preset_study_plans_max_order_by {
  country: order_by
  created_at: order_by
  deleted_at: order_by
  grade: order_by
  name: order_by
  preset_study_plan_id: order_by
  resource_path: order_by
  start_date: order_by
  subject: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type preset_study_plans_min_fields {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  grade: smallint
  name: String
  preset_study_plan_id: String
  resource_path: String
  start_date: timestamptz
  subject: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "preset_study_plans"
"""
input preset_study_plans_min_order_by {
  country: order_by
  created_at: order_by
  deleted_at: order_by
  grade: order_by
  name: order_by
  preset_study_plan_id: order_by
  resource_path: order_by
  start_date: order_by
  subject: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "preset_study_plans"
"""
type preset_study_plans_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [preset_study_plans!]!
}

"""
input type for inserting object relation for remote table "preset_study_plans"
"""
input preset_study_plans_obj_rel_insert_input {
  data: preset_study_plans_insert_input!
  on_conflict: preset_study_plans_on_conflict
}

"""
on conflict condition type for table "preset_study_plans"
"""
input preset_study_plans_on_conflict {
  constraint: preset_study_plans_constraint!
  update_columns: [preset_study_plans_update_column!]!
  where: preset_study_plans_bool_exp
}

"""
ordering options when selecting data from "preset_study_plans"
"""
input preset_study_plans_order_by {
  country: order_by
  created_at: order_by
  deleted_at: order_by
  grade: order_by
  name: order_by
  preset_study_plan_id: order_by
  preset_study_plans_weeklies_aggregate: preset_study_plans_weekly_aggregate_order_by
  resource_path: order_by
  start_date: order_by
  subject: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "preset_study_plans"
"""
input preset_study_plans_pk_columns_input {
  preset_study_plan_id: String!
}

"""
select columns of table "preset_study_plans"
"""
enum preset_study_plans_select_column {
  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  grade

  """column name"""
  name

  """column name"""
  preset_study_plan_id

  """column name"""
  resource_path

  """column name"""
  start_date

  """column name"""
  subject

  """column name"""
  updated_at
}

"""
input type for updating data in table "preset_study_plans"
"""
input preset_study_plans_set_input {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  grade: smallint
  name: String
  preset_study_plan_id: String
  resource_path: String
  start_date: timestamptz
  subject: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type preset_study_plans_stddev_fields {
  grade: Float
}

"""
order by stddev() on columns of table "preset_study_plans"
"""
input preset_study_plans_stddev_order_by {
  grade: order_by
}

"""aggregate stddev_pop on columns"""
type preset_study_plans_stddev_pop_fields {
  grade: Float
}

"""
order by stddev_pop() on columns of table "preset_study_plans"
"""
input preset_study_plans_stddev_pop_order_by {
  grade: order_by
}

"""aggregate stddev_samp on columns"""
type preset_study_plans_stddev_samp_fields {
  grade: Float
}

"""
order by stddev_samp() on columns of table "preset_study_plans"
"""
input preset_study_plans_stddev_samp_order_by {
  grade: order_by
}

"""aggregate sum on columns"""
type preset_study_plans_sum_fields {
  grade: smallint
}

"""
order by sum() on columns of table "preset_study_plans"
"""
input preset_study_plans_sum_order_by {
  grade: order_by
}

"""
update columns of table "preset_study_plans"
"""
enum preset_study_plans_update_column {
  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  grade

  """column name"""
  name

  """column name"""
  preset_study_plan_id

  """column name"""
  resource_path

  """column name"""
  start_date

  """column name"""
  subject

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type preset_study_plans_var_pop_fields {
  grade: Float
}

"""
order by var_pop() on columns of table "preset_study_plans"
"""
input preset_study_plans_var_pop_order_by {
  grade: order_by
}

"""aggregate var_samp on columns"""
type preset_study_plans_var_samp_fields {
  grade: Float
}

"""
order by var_samp() on columns of table "preset_study_plans"
"""
input preset_study_plans_var_samp_order_by {
  grade: order_by
}

"""aggregate variance on columns"""
type preset_study_plans_variance_fields {
  grade: Float
}

"""
order by variance() on columns of table "preset_study_plans"
"""
input preset_study_plans_variance_order_by {
  grade: order_by
}

"""
columns and relationships of "preset_study_plans_weekly"
"""
type preset_study_plans_weekly {
  created_at: timestamptz!
  deleted_at: timestamptz
  end_date: timestamptz
  lesson_id: String
  preset_study_plan_id: String!
  preset_study_plan_weekly_id: String!

  """An object relationship"""
  preset_study_plans: preset_study_plans!
  resource_path: String!
  start_date: timestamptz

  """An object relationship"""
  topic: topics!
  topic_id: String!
  updated_at: timestamptz!
  week: smallint!
}

"""
aggregated selection of "preset_study_plans_weekly"
"""
type preset_study_plans_weekly_aggregate {
  aggregate: preset_study_plans_weekly_aggregate_fields
  nodes: [preset_study_plans_weekly!]!
}

"""
aggregate fields of "preset_study_plans_weekly"
"""
type preset_study_plans_weekly_aggregate_fields {
  avg: preset_study_plans_weekly_avg_fields
  count(columns: [preset_study_plans_weekly_select_column!], distinct: Boolean): Int
  max: preset_study_plans_weekly_max_fields
  min: preset_study_plans_weekly_min_fields
  stddev: preset_study_plans_weekly_stddev_fields
  stddev_pop: preset_study_plans_weekly_stddev_pop_fields
  stddev_samp: preset_study_plans_weekly_stddev_samp_fields
  sum: preset_study_plans_weekly_sum_fields
  var_pop: preset_study_plans_weekly_var_pop_fields
  var_samp: preset_study_plans_weekly_var_samp_fields
  variance: preset_study_plans_weekly_variance_fields
}

"""
order by aggregate values of table "preset_study_plans_weekly"
"""
input preset_study_plans_weekly_aggregate_order_by {
  avg: preset_study_plans_weekly_avg_order_by
  count: order_by
  max: preset_study_plans_weekly_max_order_by
  min: preset_study_plans_weekly_min_order_by
  stddev: preset_study_plans_weekly_stddev_order_by
  stddev_pop: preset_study_plans_weekly_stddev_pop_order_by
  stddev_samp: preset_study_plans_weekly_stddev_samp_order_by
  sum: preset_study_plans_weekly_sum_order_by
  var_pop: preset_study_plans_weekly_var_pop_order_by
  var_samp: preset_study_plans_weekly_var_samp_order_by
  variance: preset_study_plans_weekly_variance_order_by
}

"""
input type for inserting array relation for remote table "preset_study_plans_weekly"
"""
input preset_study_plans_weekly_arr_rel_insert_input {
  data: [preset_study_plans_weekly_insert_input!]!
  on_conflict: preset_study_plans_weekly_on_conflict
}

"""aggregate avg on columns"""
type preset_study_plans_weekly_avg_fields {
  week: Float
}

"""
order by avg() on columns of table "preset_study_plans_weekly"
"""
input preset_study_plans_weekly_avg_order_by {
  week: order_by
}

"""
Boolean expression to filter rows from the table "preset_study_plans_weekly". All fields are combined with a logical 'AND'.
"""
input preset_study_plans_weekly_bool_exp {
  _and: [preset_study_plans_weekly_bool_exp]
  _not: preset_study_plans_weekly_bool_exp
  _or: [preset_study_plans_weekly_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  end_date: timestamptz_comparison_exp
  lesson_id: String_comparison_exp
  preset_study_plan_id: String_comparison_exp
  preset_study_plan_weekly_id: String_comparison_exp
  preset_study_plans: preset_study_plans_bool_exp
  resource_path: String_comparison_exp
  start_date: timestamptz_comparison_exp
  topic: topics_bool_exp
  topic_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  week: smallint_comparison_exp
}

"""
unique or primary key constraints on table "preset_study_plans_weekly"
"""
enum preset_study_plans_weekly_constraint {
  """unique or primary key constraint"""
  weekly_preset_study_plans_pk

  """unique or primary key constraint"""
  weekly_preset_study_plans_un
}

"""
columns and relationships of "preset_study_plans_weekly_format"
"""
type preset_study_plans_weekly_format {
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  formatted_date: String
  formatted_day: String
  formatted_month: String
  formatted_year: String
  lesson_id: String
  preset_study_plan_id: String
  preset_study_plan_weekly_id: String
  start_date: timestamptz

  """An object relationship"""
  topic: topics
  topic_id: String
  updated_at: timestamptz
  week: smallint
}

"""
aggregated selection of "preset_study_plans_weekly_format"
"""
type preset_study_plans_weekly_format_aggregate {
  aggregate: preset_study_plans_weekly_format_aggregate_fields
  nodes: [preset_study_plans_weekly_format!]!
}

"""
aggregate fields of "preset_study_plans_weekly_format"
"""
type preset_study_plans_weekly_format_aggregate_fields {
  avg: preset_study_plans_weekly_format_avg_fields
  count(columns: [preset_study_plans_weekly_format_select_column!], distinct: Boolean): Int
  max: preset_study_plans_weekly_format_max_fields
  min: preset_study_plans_weekly_format_min_fields
  stddev: preset_study_plans_weekly_format_stddev_fields
  stddev_pop: preset_study_plans_weekly_format_stddev_pop_fields
  stddev_samp: preset_study_plans_weekly_format_stddev_samp_fields
  sum: preset_study_plans_weekly_format_sum_fields
  var_pop: preset_study_plans_weekly_format_var_pop_fields
  var_samp: preset_study_plans_weekly_format_var_samp_fields
  variance: preset_study_plans_weekly_format_variance_fields
}

"""
order by aggregate values of table "preset_study_plans_weekly_format"
"""
input preset_study_plans_weekly_format_aggregate_order_by {
  avg: preset_study_plans_weekly_format_avg_order_by
  count: order_by
  max: preset_study_plans_weekly_format_max_order_by
  min: preset_study_plans_weekly_format_min_order_by
  stddev: preset_study_plans_weekly_format_stddev_order_by
  stddev_pop: preset_study_plans_weekly_format_stddev_pop_order_by
  stddev_samp: preset_study_plans_weekly_format_stddev_samp_order_by
  sum: preset_study_plans_weekly_format_sum_order_by
  var_pop: preset_study_plans_weekly_format_var_pop_order_by
  var_samp: preset_study_plans_weekly_format_var_samp_order_by
  variance: preset_study_plans_weekly_format_variance_order_by
}

"""
input type for inserting array relation for remote table "preset_study_plans_weekly_format"
"""
input preset_study_plans_weekly_format_arr_rel_insert_input {
  data: [preset_study_plans_weekly_format_insert_input!]!
}

"""aggregate avg on columns"""
type preset_study_plans_weekly_format_avg_fields {
  week: Float
}

"""
order by avg() on columns of table "preset_study_plans_weekly_format"
"""
input preset_study_plans_weekly_format_avg_order_by {
  week: order_by
}

"""
Boolean expression to filter rows from the table "preset_study_plans_weekly_format". All fields are combined with a logical 'AND'.
"""
input preset_study_plans_weekly_format_bool_exp {
  _and: [preset_study_plans_weekly_format_bool_exp]
  _not: preset_study_plans_weekly_format_bool_exp
  _or: [preset_study_plans_weekly_format_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  end_date: timestamptz_comparison_exp
  formatted_date: String_comparison_exp
  formatted_day: String_comparison_exp
  formatted_month: String_comparison_exp
  formatted_year: String_comparison_exp
  lesson_id: String_comparison_exp
  preset_study_plan_id: String_comparison_exp
  preset_study_plan_weekly_id: String_comparison_exp
  start_date: timestamptz_comparison_exp
  topic: topics_bool_exp
  topic_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  week: smallint_comparison_exp
}

"""
input type for incrementing integer column in table "preset_study_plans_weekly_format"
"""
input preset_study_plans_weekly_format_inc_input {
  week: smallint
}

"""
input type for inserting data into table "preset_study_plans_weekly_format"
"""
input preset_study_plans_weekly_format_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  formatted_date: String
  formatted_day: String
  formatted_month: String
  formatted_year: String
  lesson_id: String
  preset_study_plan_id: String
  preset_study_plan_weekly_id: String
  start_date: timestamptz
  topic: topics_obj_rel_insert_input
  topic_id: String
  updated_at: timestamptz
  week: smallint
}

"""aggregate max on columns"""
type preset_study_plans_weekly_format_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  formatted_date: String
  formatted_day: String
  formatted_month: String
  formatted_year: String
  lesson_id: String
  preset_study_plan_id: String
  preset_study_plan_weekly_id: String
  start_date: timestamptz
  topic_id: String
  updated_at: timestamptz
  week: smallint
}

"""
order by max() on columns of table "preset_study_plans_weekly_format"
"""
input preset_study_plans_weekly_format_max_order_by {
  created_at: order_by
  deleted_at: order_by
  end_date: order_by
  formatted_date: order_by
  formatted_day: order_by
  formatted_month: order_by
  formatted_year: order_by
  lesson_id: order_by
  preset_study_plan_id: order_by
  preset_study_plan_weekly_id: order_by
  start_date: order_by
  topic_id: order_by
  updated_at: order_by
  week: order_by
}

"""aggregate min on columns"""
type preset_study_plans_weekly_format_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  formatted_date: String
  formatted_day: String
  formatted_month: String
  formatted_year: String
  lesson_id: String
  preset_study_plan_id: String
  preset_study_plan_weekly_id: String
  start_date: timestamptz
  topic_id: String
  updated_at: timestamptz
  week: smallint
}

"""
order by min() on columns of table "preset_study_plans_weekly_format"
"""
input preset_study_plans_weekly_format_min_order_by {
  created_at: order_by
  deleted_at: order_by
  end_date: order_by
  formatted_date: order_by
  formatted_day: order_by
  formatted_month: order_by
  formatted_year: order_by
  lesson_id: order_by
  preset_study_plan_id: order_by
  preset_study_plan_weekly_id: order_by
  start_date: order_by
  topic_id: order_by
  updated_at: order_by
  week: order_by
}

"""
response of any mutation on the table "preset_study_plans_weekly_format"
"""
type preset_study_plans_weekly_format_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [preset_study_plans_weekly_format!]!
}

"""
input type for inserting object relation for remote table "preset_study_plans_weekly_format"
"""
input preset_study_plans_weekly_format_obj_rel_insert_input {
  data: preset_study_plans_weekly_format_insert_input!
}

"""
ordering options when selecting data from "preset_study_plans_weekly_format"
"""
input preset_study_plans_weekly_format_order_by {
  created_at: order_by
  deleted_at: order_by
  end_date: order_by
  formatted_date: order_by
  formatted_day: order_by
  formatted_month: order_by
  formatted_year: order_by
  lesson_id: order_by
  preset_study_plan_id: order_by
  preset_study_plan_weekly_id: order_by
  start_date: order_by
  topic: topics_order_by
  topic_id: order_by
  updated_at: order_by
  week: order_by
}

"""
select columns of table "preset_study_plans_weekly_format"
"""
enum preset_study_plans_weekly_format_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_date

  """column name"""
  formatted_date

  """column name"""
  formatted_day

  """column name"""
  formatted_month

  """column name"""
  formatted_year

  """column name"""
  lesson_id

  """column name"""
  preset_study_plan_id

  """column name"""
  preset_study_plan_weekly_id

  """column name"""
  start_date

  """column name"""
  topic_id

  """column name"""
  updated_at

  """column name"""
  week
}

"""
input type for updating data in table "preset_study_plans_weekly_format"
"""
input preset_study_plans_weekly_format_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  formatted_date: String
  formatted_day: String
  formatted_month: String
  formatted_year: String
  lesson_id: String
  preset_study_plan_id: String
  preset_study_plan_weekly_id: String
  start_date: timestamptz
  topic_id: String
  updated_at: timestamptz
  week: smallint
}

"""aggregate stddev on columns"""
type preset_study_plans_weekly_format_stddev_fields {
  week: Float
}

"""
order by stddev() on columns of table "preset_study_plans_weekly_format"
"""
input preset_study_plans_weekly_format_stddev_order_by {
  week: order_by
}

"""aggregate stddev_pop on columns"""
type preset_study_plans_weekly_format_stddev_pop_fields {
  week: Float
}

"""
order by stddev_pop() on columns of table "preset_study_plans_weekly_format"
"""
input preset_study_plans_weekly_format_stddev_pop_order_by {
  week: order_by
}

"""aggregate stddev_samp on columns"""
type preset_study_plans_weekly_format_stddev_samp_fields {
  week: Float
}

"""
order by stddev_samp() on columns of table "preset_study_plans_weekly_format"
"""
input preset_study_plans_weekly_format_stddev_samp_order_by {
  week: order_by
}

"""aggregate sum on columns"""
type preset_study_plans_weekly_format_sum_fields {
  week: smallint
}

"""
order by sum() on columns of table "preset_study_plans_weekly_format"
"""
input preset_study_plans_weekly_format_sum_order_by {
  week: order_by
}

"""aggregate var_pop on columns"""
type preset_study_plans_weekly_format_var_pop_fields {
  week: Float
}

"""
order by var_pop() on columns of table "preset_study_plans_weekly_format"
"""
input preset_study_plans_weekly_format_var_pop_order_by {
  week: order_by
}

"""aggregate var_samp on columns"""
type preset_study_plans_weekly_format_var_samp_fields {
  week: Float
}

"""
order by var_samp() on columns of table "preset_study_plans_weekly_format"
"""
input preset_study_plans_weekly_format_var_samp_order_by {
  week: order_by
}

"""aggregate variance on columns"""
type preset_study_plans_weekly_format_variance_fields {
  week: Float
}

"""
order by variance() on columns of table "preset_study_plans_weekly_format"
"""
input preset_study_plans_weekly_format_variance_order_by {
  week: order_by
}

"""
input type for incrementing integer column in table "preset_study_plans_weekly"
"""
input preset_study_plans_weekly_inc_input {
  week: smallint
}

"""
input type for inserting data into table "preset_study_plans_weekly"
"""
input preset_study_plans_weekly_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  lesson_id: String
  preset_study_plan_id: String
  preset_study_plan_weekly_id: String
  preset_study_plans: preset_study_plans_obj_rel_insert_input
  resource_path: String
  start_date: timestamptz
  topic: topics_obj_rel_insert_input
  topic_id: String
  updated_at: timestamptz
  week: smallint
}

"""aggregate max on columns"""
type preset_study_plans_weekly_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  lesson_id: String
  preset_study_plan_id: String
  preset_study_plan_weekly_id: String
  resource_path: String
  start_date: timestamptz
  topic_id: String
  updated_at: timestamptz
  week: smallint
}

"""
order by max() on columns of table "preset_study_plans_weekly"
"""
input preset_study_plans_weekly_max_order_by {
  created_at: order_by
  deleted_at: order_by
  end_date: order_by
  lesson_id: order_by
  preset_study_plan_id: order_by
  preset_study_plan_weekly_id: order_by
  resource_path: order_by
  start_date: order_by
  topic_id: order_by
  updated_at: order_by
  week: order_by
}

"""aggregate min on columns"""
type preset_study_plans_weekly_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  lesson_id: String
  preset_study_plan_id: String
  preset_study_plan_weekly_id: String
  resource_path: String
  start_date: timestamptz
  topic_id: String
  updated_at: timestamptz
  week: smallint
}

"""
order by min() on columns of table "preset_study_plans_weekly"
"""
input preset_study_plans_weekly_min_order_by {
  created_at: order_by
  deleted_at: order_by
  end_date: order_by
  lesson_id: order_by
  preset_study_plan_id: order_by
  preset_study_plan_weekly_id: order_by
  resource_path: order_by
  start_date: order_by
  topic_id: order_by
  updated_at: order_by
  week: order_by
}

"""
response of any mutation on the table "preset_study_plans_weekly"
"""
type preset_study_plans_weekly_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [preset_study_plans_weekly!]!
}

"""
input type for inserting object relation for remote table "preset_study_plans_weekly"
"""
input preset_study_plans_weekly_obj_rel_insert_input {
  data: preset_study_plans_weekly_insert_input!
  on_conflict: preset_study_plans_weekly_on_conflict
}

"""
on conflict condition type for table "preset_study_plans_weekly"
"""
input preset_study_plans_weekly_on_conflict {
  constraint: preset_study_plans_weekly_constraint!
  update_columns: [preset_study_plans_weekly_update_column!]!
  where: preset_study_plans_weekly_bool_exp
}

"""
ordering options when selecting data from "preset_study_plans_weekly"
"""
input preset_study_plans_weekly_order_by {
  created_at: order_by
  deleted_at: order_by
  end_date: order_by
  lesson_id: order_by
  preset_study_plan_id: order_by
  preset_study_plan_weekly_id: order_by
  preset_study_plans: preset_study_plans_order_by
  resource_path: order_by
  start_date: order_by
  topic: topics_order_by
  topic_id: order_by
  updated_at: order_by
  week: order_by
}

"""
primary key columns input for table: "preset_study_plans_weekly"
"""
input preset_study_plans_weekly_pk_columns_input {
  preset_study_plan_weekly_id: String!
}

"""
select columns of table "preset_study_plans_weekly"
"""
enum preset_study_plans_weekly_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_date

  """column name"""
  lesson_id

  """column name"""
  preset_study_plan_id

  """column name"""
  preset_study_plan_weekly_id

  """column name"""
  resource_path

  """column name"""
  start_date

  """column name"""
  topic_id

  """column name"""
  updated_at

  """column name"""
  week
}

"""
input type for updating data in table "preset_study_plans_weekly"
"""
input preset_study_plans_weekly_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  lesson_id: String
  preset_study_plan_id: String
  preset_study_plan_weekly_id: String
  resource_path: String
  start_date: timestamptz
  topic_id: String
  updated_at: timestamptz
  week: smallint
}

"""aggregate stddev on columns"""
type preset_study_plans_weekly_stddev_fields {
  week: Float
}

"""
order by stddev() on columns of table "preset_study_plans_weekly"
"""
input preset_study_plans_weekly_stddev_order_by {
  week: order_by
}

"""aggregate stddev_pop on columns"""
type preset_study_plans_weekly_stddev_pop_fields {
  week: Float
}

"""
order by stddev_pop() on columns of table "preset_study_plans_weekly"
"""
input preset_study_plans_weekly_stddev_pop_order_by {
  week: order_by
}

"""aggregate stddev_samp on columns"""
type preset_study_plans_weekly_stddev_samp_fields {
  week: Float
}

"""
order by stddev_samp() on columns of table "preset_study_plans_weekly"
"""
input preset_study_plans_weekly_stddev_samp_order_by {
  week: order_by
}

"""aggregate sum on columns"""
type preset_study_plans_weekly_sum_fields {
  week: smallint
}

"""
order by sum() on columns of table "preset_study_plans_weekly"
"""
input preset_study_plans_weekly_sum_order_by {
  week: order_by
}

"""
update columns of table "preset_study_plans_weekly"
"""
enum preset_study_plans_weekly_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_date

  """column name"""
  lesson_id

  """column name"""
  preset_study_plan_id

  """column name"""
  preset_study_plan_weekly_id

  """column name"""
  resource_path

  """column name"""
  start_date

  """column name"""
  topic_id

  """column name"""
  updated_at

  """column name"""
  week
}

"""aggregate var_pop on columns"""
type preset_study_plans_weekly_var_pop_fields {
  week: Float
}

"""
order by var_pop() on columns of table "preset_study_plans_weekly"
"""
input preset_study_plans_weekly_var_pop_order_by {
  week: order_by
}

"""aggregate var_samp on columns"""
type preset_study_plans_weekly_var_samp_fields {
  week: Float
}

"""
order by var_samp() on columns of table "preset_study_plans_weekly"
"""
input preset_study_plans_weekly_var_samp_order_by {
  week: order_by
}

"""aggregate variance on columns"""
type preset_study_plans_weekly_variance_fields {
  week: Float
}

"""
order by variance() on columns of table "preset_study_plans_weekly"
"""
input preset_study_plans_weekly_variance_order_by {
  week: order_by
}

"""
columns and relationships of "promotion_rules"
"""
type promotion_rules {
  conditions(
    """JSON select path"""
    path: String
  ): jsonb
  created_at: timestamptz!
  deleted_at: timestamptz
  discount_amount: numeric!
  discount_type: String
  promo_type: String!

  """An object relationship"""
  promotion: promotions!
  promotion_id: Int!
  promotion_rule_id: Int!
  resource_path: String
  rewards(
    """JSON select path"""
    path: String
  ): jsonb
  updated_at: timestamptz!
}

"""
aggregated selection of "promotion_rules"
"""
type promotion_rules_aggregate {
  aggregate: promotion_rules_aggregate_fields
  nodes: [promotion_rules!]!
}

"""
aggregate fields of "promotion_rules"
"""
type promotion_rules_aggregate_fields {
  avg: promotion_rules_avg_fields
  count(columns: [promotion_rules_select_column!], distinct: Boolean): Int
  max: promotion_rules_max_fields
  min: promotion_rules_min_fields
  stddev: promotion_rules_stddev_fields
  stddev_pop: promotion_rules_stddev_pop_fields
  stddev_samp: promotion_rules_stddev_samp_fields
  sum: promotion_rules_sum_fields
  var_pop: promotion_rules_var_pop_fields
  var_samp: promotion_rules_var_samp_fields
  variance: promotion_rules_variance_fields
}

"""
order by aggregate values of table "promotion_rules"
"""
input promotion_rules_aggregate_order_by {
  avg: promotion_rules_avg_order_by
  count: order_by
  max: promotion_rules_max_order_by
  min: promotion_rules_min_order_by
  stddev: promotion_rules_stddev_order_by
  stddev_pop: promotion_rules_stddev_pop_order_by
  stddev_samp: promotion_rules_stddev_samp_order_by
  sum: promotion_rules_sum_order_by
  var_pop: promotion_rules_var_pop_order_by
  var_samp: promotion_rules_var_samp_order_by
  variance: promotion_rules_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input promotion_rules_append_input {
  conditions: jsonb
  rewards: jsonb
}

"""
input type for inserting array relation for remote table "promotion_rules"
"""
input promotion_rules_arr_rel_insert_input {
  data: [promotion_rules_insert_input!]!
  on_conflict: promotion_rules_on_conflict
}

"""aggregate avg on columns"""
type promotion_rules_avg_fields {
  discount_amount: Float
  promotion_id: Float
  promotion_rule_id: Float
}

"""
order by avg() on columns of table "promotion_rules"
"""
input promotion_rules_avg_order_by {
  discount_amount: order_by
  promotion_id: order_by
  promotion_rule_id: order_by
}

"""
Boolean expression to filter rows from the table "promotion_rules". All fields are combined with a logical 'AND'.
"""
input promotion_rules_bool_exp {
  _and: [promotion_rules_bool_exp]
  _not: promotion_rules_bool_exp
  _or: [promotion_rules_bool_exp]
  conditions: jsonb_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  discount_amount: numeric_comparison_exp
  discount_type: String_comparison_exp
  promo_type: String_comparison_exp
  promotion: promotions_bool_exp
  promotion_id: Int_comparison_exp
  promotion_rule_id: Int_comparison_exp
  resource_path: String_comparison_exp
  rewards: jsonb_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "promotion_rules"
"""
enum promotion_rules_constraint {
  """unique or primary key constraint"""
  promotion_rule_id_pk
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input promotion_rules_delete_at_path_input {
  conditions: [String]
  rewards: [String]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input promotion_rules_delete_elem_input {
  conditions: Int
  rewards: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input promotion_rules_delete_key_input {
  conditions: String
  rewards: String
}

"""
input type for incrementing integer column in table "promotion_rules"
"""
input promotion_rules_inc_input {
  discount_amount: numeric
  promotion_id: Int
  promotion_rule_id: Int
}

"""
input type for inserting data into table "promotion_rules"
"""
input promotion_rules_insert_input {
  conditions: jsonb
  created_at: timestamptz
  deleted_at: timestamptz
  discount_amount: numeric
  discount_type: String
  promo_type: String
  promotion: promotions_obj_rel_insert_input
  promotion_id: Int
  promotion_rule_id: Int
  resource_path: String
  rewards: jsonb
  updated_at: timestamptz
}

"""aggregate max on columns"""
type promotion_rules_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  discount_amount: numeric
  discount_type: String
  promo_type: String
  promotion_id: Int
  promotion_rule_id: Int
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "promotion_rules"
"""
input promotion_rules_max_order_by {
  created_at: order_by
  deleted_at: order_by
  discount_amount: order_by
  discount_type: order_by
  promo_type: order_by
  promotion_id: order_by
  promotion_rule_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type promotion_rules_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  discount_amount: numeric
  discount_type: String
  promo_type: String
  promotion_id: Int
  promotion_rule_id: Int
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "promotion_rules"
"""
input promotion_rules_min_order_by {
  created_at: order_by
  deleted_at: order_by
  discount_amount: order_by
  discount_type: order_by
  promo_type: order_by
  promotion_id: order_by
  promotion_rule_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "promotion_rules"
"""
type promotion_rules_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [promotion_rules!]!
}

"""
input type for inserting object relation for remote table "promotion_rules"
"""
input promotion_rules_obj_rel_insert_input {
  data: promotion_rules_insert_input!
  on_conflict: promotion_rules_on_conflict
}

"""
on conflict condition type for table "promotion_rules"
"""
input promotion_rules_on_conflict {
  constraint: promotion_rules_constraint!
  update_columns: [promotion_rules_update_column!]!
  where: promotion_rules_bool_exp
}

"""
ordering options when selecting data from "promotion_rules"
"""
input promotion_rules_order_by {
  conditions: order_by
  created_at: order_by
  deleted_at: order_by
  discount_amount: order_by
  discount_type: order_by
  promo_type: order_by
  promotion: promotions_order_by
  promotion_id: order_by
  promotion_rule_id: order_by
  resource_path: order_by
  rewards: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "promotion_rules"
"""
input promotion_rules_pk_columns_input {
  promotion_rule_id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input promotion_rules_prepend_input {
  conditions: jsonb
  rewards: jsonb
}

"""
select columns of table "promotion_rules"
"""
enum promotion_rules_select_column {
  """column name"""
  conditions

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  discount_amount

  """column name"""
  discount_type

  """column name"""
  promo_type

  """column name"""
  promotion_id

  """column name"""
  promotion_rule_id

  """column name"""
  resource_path

  """column name"""
  rewards

  """column name"""
  updated_at
}

"""
input type for updating data in table "promotion_rules"
"""
input promotion_rules_set_input {
  conditions: jsonb
  created_at: timestamptz
  deleted_at: timestamptz
  discount_amount: numeric
  discount_type: String
  promo_type: String
  promotion_id: Int
  promotion_rule_id: Int
  resource_path: String
  rewards: jsonb
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type promotion_rules_stddev_fields {
  discount_amount: Float
  promotion_id: Float
  promotion_rule_id: Float
}

"""
order by stddev() on columns of table "promotion_rules"
"""
input promotion_rules_stddev_order_by {
  discount_amount: order_by
  promotion_id: order_by
  promotion_rule_id: order_by
}

"""aggregate stddev_pop on columns"""
type promotion_rules_stddev_pop_fields {
  discount_amount: Float
  promotion_id: Float
  promotion_rule_id: Float
}

"""
order by stddev_pop() on columns of table "promotion_rules"
"""
input promotion_rules_stddev_pop_order_by {
  discount_amount: order_by
  promotion_id: order_by
  promotion_rule_id: order_by
}

"""aggregate stddev_samp on columns"""
type promotion_rules_stddev_samp_fields {
  discount_amount: Float
  promotion_id: Float
  promotion_rule_id: Float
}

"""
order by stddev_samp() on columns of table "promotion_rules"
"""
input promotion_rules_stddev_samp_order_by {
  discount_amount: order_by
  promotion_id: order_by
  promotion_rule_id: order_by
}

"""aggregate sum on columns"""
type promotion_rules_sum_fields {
  discount_amount: numeric
  promotion_id: Int
  promotion_rule_id: Int
}

"""
order by sum() on columns of table "promotion_rules"
"""
input promotion_rules_sum_order_by {
  discount_amount: order_by
  promotion_id: order_by
  promotion_rule_id: order_by
}

"""
update columns of table "promotion_rules"
"""
enum promotion_rules_update_column {
  """column name"""
  conditions

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  discount_amount

  """column name"""
  discount_type

  """column name"""
  promo_type

  """column name"""
  promotion_id

  """column name"""
  promotion_rule_id

  """column name"""
  resource_path

  """column name"""
  rewards

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type promotion_rules_var_pop_fields {
  discount_amount: Float
  promotion_id: Float
  promotion_rule_id: Float
}

"""
order by var_pop() on columns of table "promotion_rules"
"""
input promotion_rules_var_pop_order_by {
  discount_amount: order_by
  promotion_id: order_by
  promotion_rule_id: order_by
}

"""aggregate var_samp on columns"""
type promotion_rules_var_samp_fields {
  discount_amount: Float
  promotion_id: Float
  promotion_rule_id: Float
}

"""
order by var_samp() on columns of table "promotion_rules"
"""
input promotion_rules_var_samp_order_by {
  discount_amount: order_by
  promotion_id: order_by
  promotion_rule_id: order_by
}

"""aggregate variance on columns"""
type promotion_rules_variance_fields {
  discount_amount: Float
  promotion_id: Float
  promotion_rule_id: Float
}

"""
order by variance() on columns of table "promotion_rules"
"""
input promotion_rules_variance_order_by {
  discount_amount: order_by
  promotion_id: order_by
  promotion_rule_id: order_by
}

"""
columns and relationships of "promotions"
"""
type promotions {
  code: String!
  code_prefix: String!
  country: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  expired_date: timestamptz
  notes: String!
  owner_id: String!
  prefix_sequence_number: Int!
  promotion_id: Int!

  """An array relationship"""
  promotion_rules(
    """distinct select on columns"""
    distinct_on: [promotion_rules_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [promotion_rules_order_by!]

    """filter the rows returned"""
    where: promotion_rules_bool_exp
  ): [promotion_rules!]!

  """An aggregated array relationship"""
  promotion_rules_aggregate(
    """distinct select on columns"""
    distinct_on: [promotion_rules_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [promotion_rules_order_by!]

    """filter the rows returned"""
    where: promotion_rules_bool_exp
  ): promotion_rules_aggregate!
  redemption_limit_per_code: Int!
  redemption_limit_per_user: Int!
  resource_path: String
  started_date: timestamptz
  status: String!
  total_redemptions: Int!
  updated_at: timestamptz!

  """An object relationship"""
  user: users!
}

"""
aggregated selection of "promotions"
"""
type promotions_aggregate {
  aggregate: promotions_aggregate_fields
  nodes: [promotions!]!
}

"""
aggregate fields of "promotions"
"""
type promotions_aggregate_fields {
  avg: promotions_avg_fields
  count(columns: [promotions_select_column!], distinct: Boolean): Int
  max: promotions_max_fields
  min: promotions_min_fields
  stddev: promotions_stddev_fields
  stddev_pop: promotions_stddev_pop_fields
  stddev_samp: promotions_stddev_samp_fields
  sum: promotions_sum_fields
  var_pop: promotions_var_pop_fields
  var_samp: promotions_var_samp_fields
  variance: promotions_variance_fields
}

"""
order by aggregate values of table "promotions"
"""
input promotions_aggregate_order_by {
  avg: promotions_avg_order_by
  count: order_by
  max: promotions_max_order_by
  min: promotions_min_order_by
  stddev: promotions_stddev_order_by
  stddev_pop: promotions_stddev_pop_order_by
  stddev_samp: promotions_stddev_samp_order_by
  sum: promotions_sum_order_by
  var_pop: promotions_var_pop_order_by
  var_samp: promotions_var_samp_order_by
  variance: promotions_variance_order_by
}

"""
input type for inserting array relation for remote table "promotions"
"""
input promotions_arr_rel_insert_input {
  data: [promotions_insert_input!]!
  on_conflict: promotions_on_conflict
}

"""aggregate avg on columns"""
type promotions_avg_fields {
  prefix_sequence_number: Float
  promotion_id: Float
  redemption_limit_per_code: Float
  redemption_limit_per_user: Float
  total_redemptions: Float
}

"""
order by avg() on columns of table "promotions"
"""
input promotions_avg_order_by {
  prefix_sequence_number: order_by
  promotion_id: order_by
  redemption_limit_per_code: order_by
  redemption_limit_per_user: order_by
  total_redemptions: order_by
}

"""
Boolean expression to filter rows from the table "promotions". All fields are combined with a logical 'AND'.
"""
input promotions_bool_exp {
  _and: [promotions_bool_exp]
  _not: promotions_bool_exp
  _or: [promotions_bool_exp]
  code: String_comparison_exp
  code_prefix: String_comparison_exp
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  expired_date: timestamptz_comparison_exp
  notes: String_comparison_exp
  owner_id: String_comparison_exp
  prefix_sequence_number: Int_comparison_exp
  promotion_id: Int_comparison_exp
  promotion_rules: promotion_rules_bool_exp
  redemption_limit_per_code: Int_comparison_exp
  redemption_limit_per_user: Int_comparison_exp
  resource_path: String_comparison_exp
  started_date: timestamptz_comparison_exp
  status: String_comparison_exp
  total_redemptions: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
}

"""
unique or primary key constraints on table "promotions"
"""
enum promotions_constraint {
  """unique or primary key constraint"""
  promotions_pk

  """unique or primary key constraint"""
  promotions_un
}

"""
input type for incrementing integer column in table "promotions"
"""
input promotions_inc_input {
  prefix_sequence_number: Int
  promotion_id: Int
  redemption_limit_per_code: Int
  redemption_limit_per_user: Int
  total_redemptions: Int
}

"""
input type for inserting data into table "promotions"
"""
input promotions_insert_input {
  code: String
  code_prefix: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  expired_date: timestamptz
  notes: String
  owner_id: String
  prefix_sequence_number: Int
  promotion_id: Int
  promotion_rules: promotion_rules_arr_rel_insert_input
  redemption_limit_per_code: Int
  redemption_limit_per_user: Int
  resource_path: String
  started_date: timestamptz
  status: String
  total_redemptions: Int
  updated_at: timestamptz
  user: users_obj_rel_insert_input
}

"""aggregate max on columns"""
type promotions_max_fields {
  code: String
  code_prefix: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  expired_date: timestamptz
  notes: String
  owner_id: String
  prefix_sequence_number: Int
  promotion_id: Int
  redemption_limit_per_code: Int
  redemption_limit_per_user: Int
  resource_path: String
  started_date: timestamptz
  status: String
  total_redemptions: Int
  updated_at: timestamptz
}

"""
order by max() on columns of table "promotions"
"""
input promotions_max_order_by {
  code: order_by
  code_prefix: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  expired_date: order_by
  notes: order_by
  owner_id: order_by
  prefix_sequence_number: order_by
  promotion_id: order_by
  redemption_limit_per_code: order_by
  redemption_limit_per_user: order_by
  resource_path: order_by
  started_date: order_by
  status: order_by
  total_redemptions: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type promotions_min_fields {
  code: String
  code_prefix: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  expired_date: timestamptz
  notes: String
  owner_id: String
  prefix_sequence_number: Int
  promotion_id: Int
  redemption_limit_per_code: Int
  redemption_limit_per_user: Int
  resource_path: String
  started_date: timestamptz
  status: String
  total_redemptions: Int
  updated_at: timestamptz
}

"""
order by min() on columns of table "promotions"
"""
input promotions_min_order_by {
  code: order_by
  code_prefix: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  expired_date: order_by
  notes: order_by
  owner_id: order_by
  prefix_sequence_number: order_by
  promotion_id: order_by
  redemption_limit_per_code: order_by
  redemption_limit_per_user: order_by
  resource_path: order_by
  started_date: order_by
  status: order_by
  total_redemptions: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "promotions"
"""
type promotions_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [promotions!]!
}

"""
input type for inserting object relation for remote table "promotions"
"""
input promotions_obj_rel_insert_input {
  data: promotions_insert_input!
  on_conflict: promotions_on_conflict
}

"""
on conflict condition type for table "promotions"
"""
input promotions_on_conflict {
  constraint: promotions_constraint!
  update_columns: [promotions_update_column!]!
  where: promotions_bool_exp
}

"""
ordering options when selecting data from "promotions"
"""
input promotions_order_by {
  code: order_by
  code_prefix: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  expired_date: order_by
  notes: order_by
  owner_id: order_by
  prefix_sequence_number: order_by
  promotion_id: order_by
  promotion_rules_aggregate: promotion_rules_aggregate_order_by
  redemption_limit_per_code: order_by
  redemption_limit_per_user: order_by
  resource_path: order_by
  started_date: order_by
  status: order_by
  total_redemptions: order_by
  updated_at: order_by
  user: users_order_by
}

"""
primary key columns input for table: "promotions"
"""
input promotions_pk_columns_input {
  promotion_id: Int!
}

"""
select columns of table "promotions"
"""
enum promotions_select_column {
  """column name"""
  code

  """column name"""
  code_prefix

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  expired_date

  """column name"""
  notes

  """column name"""
  owner_id

  """column name"""
  prefix_sequence_number

  """column name"""
  promotion_id

  """column name"""
  redemption_limit_per_code

  """column name"""
  redemption_limit_per_user

  """column name"""
  resource_path

  """column name"""
  started_date

  """column name"""
  status

  """column name"""
  total_redemptions

  """column name"""
  updated_at
}

"""
input type for updating data in table "promotions"
"""
input promotions_set_input {
  code: String
  code_prefix: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  expired_date: timestamptz
  notes: String
  owner_id: String
  prefix_sequence_number: Int
  promotion_id: Int
  redemption_limit_per_code: Int
  redemption_limit_per_user: Int
  resource_path: String
  started_date: timestamptz
  status: String
  total_redemptions: Int
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type promotions_stddev_fields {
  prefix_sequence_number: Float
  promotion_id: Float
  redemption_limit_per_code: Float
  redemption_limit_per_user: Float
  total_redemptions: Float
}

"""
order by stddev() on columns of table "promotions"
"""
input promotions_stddev_order_by {
  prefix_sequence_number: order_by
  promotion_id: order_by
  redemption_limit_per_code: order_by
  redemption_limit_per_user: order_by
  total_redemptions: order_by
}

"""aggregate stddev_pop on columns"""
type promotions_stddev_pop_fields {
  prefix_sequence_number: Float
  promotion_id: Float
  redemption_limit_per_code: Float
  redemption_limit_per_user: Float
  total_redemptions: Float
}

"""
order by stddev_pop() on columns of table "promotions"
"""
input promotions_stddev_pop_order_by {
  prefix_sequence_number: order_by
  promotion_id: order_by
  redemption_limit_per_code: order_by
  redemption_limit_per_user: order_by
  total_redemptions: order_by
}

"""aggregate stddev_samp on columns"""
type promotions_stddev_samp_fields {
  prefix_sequence_number: Float
  promotion_id: Float
  redemption_limit_per_code: Float
  redemption_limit_per_user: Float
  total_redemptions: Float
}

"""
order by stddev_samp() on columns of table "promotions"
"""
input promotions_stddev_samp_order_by {
  prefix_sequence_number: order_by
  promotion_id: order_by
  redemption_limit_per_code: order_by
  redemption_limit_per_user: order_by
  total_redemptions: order_by
}

"""aggregate sum on columns"""
type promotions_sum_fields {
  prefix_sequence_number: Int
  promotion_id: Int
  redemption_limit_per_code: Int
  redemption_limit_per_user: Int
  total_redemptions: Int
}

"""
order by sum() on columns of table "promotions"
"""
input promotions_sum_order_by {
  prefix_sequence_number: order_by
  promotion_id: order_by
  redemption_limit_per_code: order_by
  redemption_limit_per_user: order_by
  total_redemptions: order_by
}

"""
update columns of table "promotions"
"""
enum promotions_update_column {
  """column name"""
  code

  """column name"""
  code_prefix

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  expired_date

  """column name"""
  notes

  """column name"""
  owner_id

  """column name"""
  prefix_sequence_number

  """column name"""
  promotion_id

  """column name"""
  redemption_limit_per_code

  """column name"""
  redemption_limit_per_user

  """column name"""
  resource_path

  """column name"""
  started_date

  """column name"""
  status

  """column name"""
  total_redemptions

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type promotions_var_pop_fields {
  prefix_sequence_number: Float
  promotion_id: Float
  redemption_limit_per_code: Float
  redemption_limit_per_user: Float
  total_redemptions: Float
}

"""
order by var_pop() on columns of table "promotions"
"""
input promotions_var_pop_order_by {
  prefix_sequence_number: order_by
  promotion_id: order_by
  redemption_limit_per_code: order_by
  redemption_limit_per_user: order_by
  total_redemptions: order_by
}

"""aggregate var_samp on columns"""
type promotions_var_samp_fields {
  prefix_sequence_number: Float
  promotion_id: Float
  redemption_limit_per_code: Float
  redemption_limit_per_user: Float
  total_redemptions: Float
}

"""
order by var_samp() on columns of table "promotions"
"""
input promotions_var_samp_order_by {
  prefix_sequence_number: order_by
  promotion_id: order_by
  redemption_limit_per_code: order_by
  redemption_limit_per_user: order_by
  total_redemptions: order_by
}

"""aggregate variance on columns"""
type promotions_variance_fields {
  prefix_sequence_number: Float
  promotion_id: Float
  redemption_limit_per_code: Float
  redemption_limit_per_user: Float
  total_redemptions: Float
}

"""
order by variance() on columns of table "promotions"
"""
input promotions_variance_order_by {
  prefix_sequence_number: order_by
  promotion_id: order_by
  redemption_limit_per_code: order_by
  redemption_limit_per_user: order_by
  total_redemptions: order_by
}

"""query root"""
type query_root {
  """
  fetch data from the table: "assignments"
  """
  assignments(
    """distinct select on columns"""
    distinct_on: [assignments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignments_order_by!]

    """filter the rows returned"""
    where: assignments_bool_exp
  ): [assignments!]!

  """
  fetch aggregated fields from the table: "assignments"
  """
  assignments_aggregate(
    """distinct select on columns"""
    distinct_on: [assignments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignments_order_by!]

    """filter the rows returned"""
    where: assignments_bool_exp
  ): assignments_aggregate!

  """fetch data from the table: "assignments" using primary key columns"""
  assignments_by_pk(assignment_id: String!): assignments

  """
  fetch data from the table: "books"
  """
  books(
    """distinct select on columns"""
    distinct_on: [books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_order_by!]

    """filter the rows returned"""
    where: books_bool_exp
  ): [books!]!

  """
  fetch aggregated fields from the table: "books"
  """
  books_aggregate(
    """distinct select on columns"""
    distinct_on: [books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_order_by!]

    """filter the rows returned"""
    where: books_bool_exp
  ): books_aggregate!

  """fetch data from the table: "books" using primary key columns"""
  books_by_pk(book_id: String!): books

  """
  fetch data from the table: "books_chapters"
  """
  books_chapters(
    """distinct select on columns"""
    distinct_on: [books_chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_chapters_order_by!]

    """filter the rows returned"""
    where: books_chapters_bool_exp
  ): [books_chapters!]!

  """
  fetch aggregated fields from the table: "books_chapters"
  """
  books_chapters_aggregate(
    """distinct select on columns"""
    distinct_on: [books_chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_chapters_order_by!]

    """filter the rows returned"""
    where: books_chapters_bool_exp
  ): books_chapters_aggregate!

  """fetch data from the table: "books_chapters" using primary key columns"""
  books_chapters_by_pk(book_id: String!, chapter_id: String!): books_chapters

  """
  fetch data from the table: "chapters"
  """
  chapters(
    """distinct select on columns"""
    distinct_on: [chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [chapters_order_by!]

    """filter the rows returned"""
    where: chapters_bool_exp
  ): [chapters!]!

  """
  fetch aggregated fields from the table: "chapters"
  """
  chapters_aggregate(
    """distinct select on columns"""
    distinct_on: [chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [chapters_order_by!]

    """filter the rows returned"""
    where: chapters_bool_exp
  ): chapters_aggregate!

  """fetch data from the table: "chapters" using primary key columns"""
  chapters_by_pk(chapter_id: String!): chapters

  """
  fetch data from the table: "cities"
  """
  cities(
    """distinct select on columns"""
    distinct_on: [cities_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cities_order_by!]

    """filter the rows returned"""
    where: cities_bool_exp
  ): [cities!]!

  """
  fetch aggregated fields from the table: "cities"
  """
  cities_aggregate(
    """distinct select on columns"""
    distinct_on: [cities_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cities_order_by!]

    """filter the rows returned"""
    where: cities_bool_exp
  ): cities_aggregate!

  """fetch data from the table: "cities" using primary key columns"""
  cities_by_pk(city_id: Int!): cities

  """
  fetch data from the table: "class"
  """
  class(
    """distinct select on columns"""
    distinct_on: [class_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_order_by!]

    """filter the rows returned"""
    where: class_bool_exp
  ): [class!]!

  """
  fetch aggregated fields from the table: "class"
  """
  class_aggregate(
    """distinct select on columns"""
    distinct_on: [class_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_order_by!]

    """filter the rows returned"""
    where: class_bool_exp
  ): class_aggregate!

  """fetch data from the table: "class" using primary key columns"""
  class_by_pk(class_id: String!): class

  """
  fetch data from the table: "class_member"
  """
  class_member(
    """distinct select on columns"""
    distinct_on: [class_member_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_member_order_by!]

    """filter the rows returned"""
    where: class_member_bool_exp
  ): [class_member!]!

  """
  fetch aggregated fields from the table: "class_member"
  """
  class_member_aggregate(
    """distinct select on columns"""
    distinct_on: [class_member_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_member_order_by!]

    """filter the rows returned"""
    where: class_member_bool_exp
  ): class_member_aggregate!

  """fetch data from the table: "class_member" using primary key columns"""
  class_member_by_pk(class_member_id: String!): class_member

  """
  fetch data from the table: "class_members"
  """
  class_members(
    """distinct select on columns"""
    distinct_on: [class_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_members_order_by!]

    """filter the rows returned"""
    where: class_members_bool_exp
  ): [class_members!]!

  """
  fetch aggregated fields from the table: "class_members"
  """
  class_members_aggregate(
    """distinct select on columns"""
    distinct_on: [class_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_members_order_by!]

    """filter the rows returned"""
    where: class_members_bool_exp
  ): class_members_aggregate!

  """fetch data from the table: "class_members" using primary key columns"""
  class_members_by_pk(class_member_id: String!): class_members

  """
  fetch data from the table: "classes"
  """
  classes(
    """distinct select on columns"""
    distinct_on: [classes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [classes_order_by!]

    """filter the rows returned"""
    where: classes_bool_exp
  ): [classes!]!

  """
  fetch aggregated fields from the table: "classes"
  """
  classes_aggregate(
    """distinct select on columns"""
    distinct_on: [classes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [classes_order_by!]

    """filter the rows returned"""
    where: classes_bool_exp
  ): classes_aggregate!

  """fetch data from the table: "classes" using primary key columns"""
  classes_by_pk(class_id: Int!): classes

  """
  fetch data from the table: "coaches"
  """
  coaches(
    """distinct select on columns"""
    distinct_on: [coaches_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [coaches_order_by!]

    """filter the rows returned"""
    where: coaches_bool_exp
  ): [coaches!]!

  """
  fetch aggregated fields from the table: "coaches"
  """
  coaches_aggregate(
    """distinct select on columns"""
    distinct_on: [coaches_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [coaches_order_by!]

    """filter the rows returned"""
    where: coaches_bool_exp
  ): coaches_aggregate!

  """fetch data from the table: "coaches" using primary key columns"""
  coaches_by_pk(coach_id: String!): coaches

  """
  fetch data from the table: "cod_orders"
  """
  cod_orders(
    """distinct select on columns"""
    distinct_on: [cod_orders_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cod_orders_order_by!]

    """filter the rows returned"""
    where: cod_orders_bool_exp
  ): [cod_orders!]!

  """
  fetch aggregated fields from the table: "cod_orders"
  """
  cod_orders_aggregate(
    """distinct select on columns"""
    distinct_on: [cod_orders_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cod_orders_order_by!]

    """filter the rows returned"""
    where: cod_orders_bool_exp
  ): cod_orders_aggregate!

  """fetch data from the table: "cod_orders" using primary key columns"""
  cod_orders_by_pk(cod_order_id: String!): cod_orders

  """
  fetch data from the table: "conversion_tasks"
  """
  conversion_tasks(
    """distinct select on columns"""
    distinct_on: [conversion_tasks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [conversion_tasks_order_by!]

    """filter the rows returned"""
    where: conversion_tasks_bool_exp
  ): [conversion_tasks!]!

  """
  fetch aggregated fields from the table: "conversion_tasks"
  """
  conversion_tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [conversion_tasks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [conversion_tasks_order_by!]

    """filter the rows returned"""
    where: conversion_tasks_bool_exp
  ): conversion_tasks_aggregate!

  """
  fetch data from the table: "conversion_tasks" using primary key columns
  """
  conversion_tasks_by_pk(task_uuid: String!): conversion_tasks

  """
  fetch data from the table: "course_access_paths"
  """
  course_access_paths(
    """distinct select on columns"""
    distinct_on: [course_access_paths_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_access_paths_order_by!]

    """filter the rows returned"""
    where: course_access_paths_bool_exp
  ): [course_access_paths!]!

  """
  fetch aggregated fields from the table: "course_access_paths"
  """
  course_access_paths_aggregate(
    """distinct select on columns"""
    distinct_on: [course_access_paths_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_access_paths_order_by!]

    """filter the rows returned"""
    where: course_access_paths_bool_exp
  ): course_access_paths_aggregate!

  """
  fetch data from the table: "course_access_paths" using primary key columns
  """
  course_access_paths_by_pk(course_id: String!, location_id: String!): course_access_paths

  """
  fetch data from the table: "courses"
  """
  courses(
    """distinct select on columns"""
    distinct_on: [courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_order_by!]

    """filter the rows returned"""
    where: courses_bool_exp
  ): [courses!]!

  """
  fetch aggregated fields from the table: "courses"
  """
  courses_aggregate(
    """distinct select on columns"""
    distinct_on: [courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_order_by!]

    """filter the rows returned"""
    where: courses_bool_exp
  ): courses_aggregate!

  """
  fetch data from the table: "courses_books"
  """
  courses_books(
    """distinct select on columns"""
    distinct_on: [courses_books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_books_order_by!]

    """filter the rows returned"""
    where: courses_books_bool_exp
  ): [courses_books!]!

  """
  fetch aggregated fields from the table: "courses_books"
  """
  courses_books_aggregate(
    """distinct select on columns"""
    distinct_on: [courses_books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_books_order_by!]

    """filter the rows returned"""
    where: courses_books_bool_exp
  ): courses_books_aggregate!

  """fetch data from the table: "courses_books" using primary key columns"""
  courses_books_by_pk(book_id: String!, course_id: String!): courses_books

  """fetch data from the table: "courses" using primary key columns"""
  courses_by_pk(course_id: String!): courses

  """
  fetch data from the table: "courses_classes"
  """
  courses_classes(
    """distinct select on columns"""
    distinct_on: [courses_classes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_classes_order_by!]

    """filter the rows returned"""
    where: courses_classes_bool_exp
  ): [courses_classes!]!

  """
  fetch aggregated fields from the table: "courses_classes"
  """
  courses_classes_aggregate(
    """distinct select on columns"""
    distinct_on: [courses_classes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_classes_order_by!]

    """filter the rows returned"""
    where: courses_classes_bool_exp
  ): courses_classes_aggregate!

  """fetch data from the table: "courses_classes" using primary key columns"""
  courses_classes_by_pk(class_id: Int!, course_id: String!): courses_classes

  """
  fetch data from the table: "districts"
  """
  districts(
    """distinct select on columns"""
    distinct_on: [districts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [districts_order_by!]

    """filter the rows returned"""
    where: districts_bool_exp
  ): [districts!]!

  """
  fetch aggregated fields from the table: "districts"
  """
  districts_aggregate(
    """distinct select on columns"""
    distinct_on: [districts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [districts_order_by!]

    """filter the rows returned"""
    where: districts_bool_exp
  ): districts_aggregate!

  """fetch data from the table: "districts" using primary key columns"""
  districts_by_pk(district_id: Int!): districts

  """
  execute function "find_quiz_by_lo_id" which returns "quizzes"
  """
  find_quiz_by_lo_id(
    """
    input parameters for function "find_quiz_by_lo_id"
    """
    args: find_quiz_by_lo_id_args!

    """distinct select on columns"""
    distinct_on: [quizzes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizzes_order_by!]

    """filter the rows returned"""
    where: quizzes_bool_exp
  ): [quizzes!]!

  """
  execute function "find_quiz_by_lo_id" and query aggregates on result of table type "quizzes"
  """
  find_quiz_by_lo_id_aggregate(
    """
    input parameters for function "find_quiz_by_lo_id"
    """
    args: find_quiz_by_lo_id_args!

    """distinct select on columns"""
    distinct_on: [quizzes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizzes_order_by!]

    """filter the rows returned"""
    where: quizzes_bool_exp
  ): quizzes_aggregate!

  """
  execute function "find_teacher_by_school_id" which returns "users"
  """
  find_teacher_by_school_id(
    """
    input parameters for function "find_teacher_by_school_id"
    """
    args: find_teacher_by_school_id_args!

    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): [users!]!

  """
  execute function "find_teacher_by_school_id" and query aggregates on result of table type "users"
  """
  find_teacher_by_school_id_aggregate(
    """
    input parameters for function "find_teacher_by_school_id"
    """
    args: find_teacher_by_school_id_args!

    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): users_aggregate!

  """
  execute function "get_locations_active_by_course_id" which returns "course_access_paths"
  """
  get_locations_active_by_course_id(
    """
    input parameters for function "get_locations_active_by_course_id"
    """
    args: get_locations_active_by_course_id_args!

    """distinct select on columns"""
    distinct_on: [course_access_paths_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_access_paths_order_by!]

    """filter the rows returned"""
    where: course_access_paths_bool_exp
  ): [course_access_paths!]!

  """
  execute function "get_locations_active_by_course_id" and query aggregates on result of table type "course_access_paths"
  """
  get_locations_active_by_course_id_aggregate(
    """
    input parameters for function "get_locations_active_by_course_id"
    """
    args: get_locations_active_by_course_id_args!

    """distinct select on columns"""
    distinct_on: [course_access_paths_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_access_paths_order_by!]

    """filter the rows returned"""
    where: course_access_paths_bool_exp
  ): course_access_paths_aggregate!

  """
  execute function "get_locations_lowest_level" which returns "locations"
  """
  get_locations_lowest_level(
    """
    input parameters for function "get_locations_lowest_level"
    """
    args: get_locations_lowest_level_args!

    """distinct select on columns"""
    distinct_on: [locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locations_order_by!]

    """filter the rows returned"""
    where: locations_bool_exp
  ): [locations!]!

  """
  execute function "get_locations_lowest_level" and query aggregates on result of table type "locations"
  """
  get_locations_lowest_level_aggregate(
    """
    input parameters for function "get_locations_lowest_level"
    """
    args: get_locations_lowest_level_args!

    """distinct select on columns"""
    distinct_on: [locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locations_order_by!]

    """filter the rows returned"""
    where: locations_bool_exp
  ): locations_aggregate!

  """
  execute function "get_lowest_location_types" which returns "location_types"
  """
  get_lowest_location_types(
    """distinct select on columns"""
    distinct_on: [location_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [location_types_order_by!]

    """filter the rows returned"""
    where: location_types_bool_exp
  ): [location_types!]!

  """
  execute function "get_lowest_location_types" and query aggregates on result of table type "location_types"
  """
  get_lowest_location_types_aggregate(
    """distinct select on columns"""
    distinct_on: [location_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [location_types_order_by!]

    """filter the rows returned"""
    where: location_types_bool_exp
  ): location_types_aggregate!

  """
  execute function "get_partner_dynamic_form_field_values_by_student" which returns "partner_dynamic_form_field_values"
  """
  get_partner_dynamic_form_field_values_by_student(
    """
    input parameters for function "get_partner_dynamic_form_field_values_by_student"
    """
    args: get_partner_dynamic_form_field_values_by_student_args!

    """distinct select on columns"""
    distinct_on: [partner_dynamic_form_field_values_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [partner_dynamic_form_field_values_order_by!]

    """filter the rows returned"""
    where: partner_dynamic_form_field_values_bool_exp
  ): [partner_dynamic_form_field_values!]!

  """
  execute function "get_partner_dynamic_form_field_values_by_student" and query aggregates on result of table type "partner_dynamic_form_field_values"
  """
  get_partner_dynamic_form_field_values_by_student_aggregate(
    """
    input parameters for function "get_partner_dynamic_form_field_values_by_student"
    """
    args: get_partner_dynamic_form_field_values_by_student_args!

    """distinct select on columns"""
    distinct_on: [partner_dynamic_form_field_values_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [partner_dynamic_form_field_values_order_by!]

    """filter the rows returned"""
    where: partner_dynamic_form_field_values_bool_exp
  ): partner_dynamic_form_field_values_aggregate!

  """
  execute function "get_previous_report_of_student" which returns "lesson_reports"
  """
  get_previous_report_of_student(
    """
    input parameters for function "get_previous_report_of_student"
    """
    args: get_previous_report_of_student_args!

    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): [lesson_reports!]!

  """
  execute function "get_previous_report_of_student" and query aggregates on result of table type "lesson_reports"
  """
  get_previous_report_of_student_aggregate(
    """
    input parameters for function "get_previous_report_of_student"
    """
    args: get_previous_report_of_student_args!

    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): lesson_reports_aggregate!

  """
  execute function "get_previous_report_of_student_v2" which returns "lesson_reports"
  """
  get_previous_report_of_student_v2(
    """
    input parameters for function "get_previous_report_of_student_v2"
    """
    args: get_previous_report_of_student_v2_args!

    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): [lesson_reports!]!

  """
  execute function "get_previous_report_of_student_v2" and query aggregates on result of table type "lesson_reports"
  """
  get_previous_report_of_student_v2_aggregate(
    """
    input parameters for function "get_previous_report_of_student_v2"
    """
    args: get_previous_report_of_student_v2_args!

    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): lesson_reports_aggregate!

  """
  execute function "get_previous_report_of_student_v3" which returns "lesson_reports"
  """
  get_previous_report_of_student_v3(
    """
    input parameters for function "get_previous_report_of_student_v3"
    """
    args: get_previous_report_of_student_v3_args!

    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): [lesson_reports!]!

  """
  execute function "get_previous_report_of_student_v3" and query aggregates on result of table type "lesson_reports"
  """
  get_previous_report_of_student_v3_aggregate(
    """
    input parameters for function "get_previous_report_of_student_v3"
    """
    args: get_previous_report_of_student_v3_args!

    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): lesson_reports_aggregate!

  """
  fetch data from the table: "granted_role"
  """
  granted_role(
    """distinct select on columns"""
    distinct_on: [granted_role_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [granted_role_order_by!]

    """filter the rows returned"""
    where: granted_role_bool_exp
  ): [granted_role!]!

  """
  fetch data from the table: "granted_role_access_path"
  """
  granted_role_access_path(
    """distinct select on columns"""
    distinct_on: [granted_role_access_path_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [granted_role_access_path_order_by!]

    """filter the rows returned"""
    where: granted_role_access_path_bool_exp
  ): [granted_role_access_path!]!

  """
  fetch aggregated fields from the table: "granted_role_access_path"
  """
  granted_role_access_path_aggregate(
    """distinct select on columns"""
    distinct_on: [granted_role_access_path_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [granted_role_access_path_order_by!]

    """filter the rows returned"""
    where: granted_role_access_path_bool_exp
  ): granted_role_access_path_aggregate!

  """
  fetch data from the table: "granted_role_access_path" using primary key columns
  """
  granted_role_access_path_by_pk(granted_role_id: String!, location_id: String!): granted_role_access_path

  """
  fetch aggregated fields from the table: "granted_role"
  """
  granted_role_aggregate(
    """distinct select on columns"""
    distinct_on: [granted_role_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [granted_role_order_by!]

    """filter the rows returned"""
    where: granted_role_bool_exp
  ): granted_role_aggregate!

  """fetch data from the table: "granted_role" using primary key columns"""
  granted_role_by_pk(granted_role_id: String!): granted_role

  """
  fetch data from the table: "hub_tours"
  """
  hub_tours(
    """distinct select on columns"""
    distinct_on: [hub_tours_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [hub_tours_order_by!]

    """filter the rows returned"""
    where: hub_tours_bool_exp
  ): [hub_tours!]!

  """
  fetch aggregated fields from the table: "hub_tours"
  """
  hub_tours_aggregate(
    """distinct select on columns"""
    distinct_on: [hub_tours_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [hub_tours_order_by!]

    """filter the rows returned"""
    where: hub_tours_bool_exp
  ): hub_tours_aggregate!

  """fetch data from the table: "hub_tours" using primary key columns"""
  hub_tours_by_pk(hub_id: Int!, student_id: String!): hub_tours

  """
  fetch data from the table: "hubs"
  """
  hubs(
    """distinct select on columns"""
    distinct_on: [hubs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [hubs_order_by!]

    """filter the rows returned"""
    where: hubs_bool_exp
  ): [hubs!]!

  """
  fetch aggregated fields from the table: "hubs"
  """
  hubs_aggregate(
    """distinct select on columns"""
    distinct_on: [hubs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [hubs_order_by!]

    """filter the rows returned"""
    where: hubs_bool_exp
  ): hubs_aggregate!

  """fetch data from the table: "hubs" using primary key columns"""
  hubs_by_pk(hub_id: Int!): hubs

  """
  fetch data from the table: "info_notification_msgs"
  """
  info_notification_msgs(
    """distinct select on columns"""
    distinct_on: [info_notification_msgs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notification_msgs_order_by!]

    """filter the rows returned"""
    where: info_notification_msgs_bool_exp
  ): [info_notification_msgs!]!

  """
  fetch aggregated fields from the table: "info_notification_msgs"
  """
  info_notification_msgs_aggregate(
    """distinct select on columns"""
    distinct_on: [info_notification_msgs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notification_msgs_order_by!]

    """filter the rows returned"""
    where: info_notification_msgs_bool_exp
  ): info_notification_msgs_aggregate!

  """
  fetch data from the table: "info_notification_msgs" using primary key columns
  """
  info_notification_msgs_by_pk(notification_msg_id: String!): info_notification_msgs

  """
  fetch data from the table: "info_notifications"
  """
  info_notifications(
    """distinct select on columns"""
    distinct_on: [info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notifications_order_by!]

    """filter the rows returned"""
    where: info_notifications_bool_exp
  ): [info_notifications!]!

  """
  fetch aggregated fields from the table: "info_notifications"
  """
  info_notifications_aggregate(
    """distinct select on columns"""
    distinct_on: [info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notifications_order_by!]

    """filter the rows returned"""
    where: info_notifications_bool_exp
  ): info_notifications_aggregate!

  """
  fetch data from the table: "info_notifications" using primary key columns
  """
  info_notifications_by_pk(notification_id: String!): info_notifications

  """
  fetch data from the table: "info_notifications_tags"
  """
  info_notifications_tags(
    """distinct select on columns"""
    distinct_on: [info_notifications_tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notifications_tags_order_by!]

    """filter the rows returned"""
    where: info_notifications_tags_bool_exp
  ): [info_notifications_tags!]!

  """
  fetch aggregated fields from the table: "info_notifications_tags"
  """
  info_notifications_tags_aggregate(
    """distinct select on columns"""
    distinct_on: [info_notifications_tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notifications_tags_order_by!]

    """filter the rows returned"""
    where: info_notifications_tags_bool_exp
  ): info_notifications_tags_aggregate!

  """
  fetch data from the table: "info_notifications_tags" using primary key columns
  """
  info_notifications_tags_by_pk(notification_tag_id: String!): info_notifications_tags

  """
  fetch data from the table: "learning_objectives"
  """
  learning_objectives(
    """distinct select on columns"""
    distinct_on: [learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_objectives_order_by!]

    """filter the rows returned"""
    where: learning_objectives_bool_exp
  ): [learning_objectives!]!

  """
  fetch aggregated fields from the table: "learning_objectives"
  """
  learning_objectives_aggregate(
    """distinct select on columns"""
    distinct_on: [learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_objectives_order_by!]

    """filter the rows returned"""
    where: learning_objectives_bool_exp
  ): learning_objectives_aggregate!

  """
  fetch data from the table: "learning_objectives" using primary key columns
  """
  learning_objectives_by_pk(lo_id: String!): learning_objectives

  """
  fetch data from the table: "lesson_groups"
  """
  lesson_groups(
    """distinct select on columns"""
    distinct_on: [lesson_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_groups_order_by!]

    """filter the rows returned"""
    where: lesson_groups_bool_exp
  ): [lesson_groups!]!

  """
  fetch aggregated fields from the table: "lesson_groups"
  """
  lesson_groups_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_groups_order_by!]

    """filter the rows returned"""
    where: lesson_groups_bool_exp
  ): lesson_groups_aggregate!

  """fetch data from the table: "lesson_groups" using primary key columns"""
  lesson_groups_by_pk(course_id: String!, lesson_group_id: String!): lesson_groups

  """
  fetch data from the table: "lesson_members"
  """
  lesson_members(
    """distinct select on columns"""
    distinct_on: [lesson_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_members_order_by!]

    """filter the rows returned"""
    where: lesson_members_bool_exp
  ): [lesson_members!]!

  """
  fetch aggregated fields from the table: "lesson_members"
  """
  lesson_members_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_members_order_by!]

    """filter the rows returned"""
    where: lesson_members_bool_exp
  ): lesson_members_aggregate!

  """fetch data from the table: "lesson_members" using primary key columns"""
  lesson_members_by_pk(lesson_id: String!, user_id: String!): lesson_members

  """
  fetch data from the table: "lesson_report_details"
  """
  lesson_report_details(
    """distinct select on columns"""
    distinct_on: [lesson_report_details_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_report_details_order_by!]

    """filter the rows returned"""
    where: lesson_report_details_bool_exp
  ): [lesson_report_details!]!

  """
  fetch aggregated fields from the table: "lesson_report_details"
  """
  lesson_report_details_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_report_details_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_report_details_order_by!]

    """filter the rows returned"""
    where: lesson_report_details_bool_exp
  ): lesson_report_details_aggregate!

  """
  fetch data from the table: "lesson_report_details" using primary key columns
  """
  lesson_report_details_by_pk(lesson_report_detail_id: String!): lesson_report_details

  """
  fetch data from the table: "lesson_reports"
  """
  lesson_reports(
    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): [lesson_reports!]!

  """
  fetch aggregated fields from the table: "lesson_reports"
  """
  lesson_reports_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): lesson_reports_aggregate!

  """fetch data from the table: "lesson_reports" using primary key columns"""
  lesson_reports_by_pk(lesson_report_id: String!): lesson_reports

  """
  fetch data from the table: "lesson_schedules"
  """
  lesson_schedules(
    """distinct select on columns"""
    distinct_on: [lesson_schedules_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_schedules_order_by!]

    """filter the rows returned"""
    where: lesson_schedules_bool_exp
  ): [lesson_schedules!]!

  """
  fetch aggregated fields from the table: "lesson_schedules"
  """
  lesson_schedules_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_schedules_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_schedules_order_by!]

    """filter the rows returned"""
    where: lesson_schedules_bool_exp
  ): lesson_schedules_aggregate!

  """
  fetch data from the table: "lesson_student_subscription_access_path"
  """
  lesson_student_subscription_access_path(
    """distinct select on columns"""
    distinct_on: [lesson_student_subscription_access_path_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_student_subscription_access_path_order_by!]

    """filter the rows returned"""
    where: lesson_student_subscription_access_path_bool_exp
  ): [lesson_student_subscription_access_path!]!

  """
  fetch aggregated fields from the table: "lesson_student_subscription_access_path"
  """
  lesson_student_subscription_access_path_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_student_subscription_access_path_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_student_subscription_access_path_order_by!]

    """filter the rows returned"""
    where: lesson_student_subscription_access_path_bool_exp
  ): lesson_student_subscription_access_path_aggregate!

  """
  fetch data from the table: "lesson_student_subscription_access_path" using primary key columns
  """
  lesson_student_subscription_access_path_by_pk(location_id: String!, student_subscription_id: String!): lesson_student_subscription_access_path

  """
  fetch data from the table: "lesson_student_subscriptions"
  """
  lesson_student_subscriptions(
    """distinct select on columns"""
    distinct_on: [lesson_student_subscriptions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_student_subscriptions_order_by!]

    """filter the rows returned"""
    where: lesson_student_subscriptions_bool_exp
  ): [lesson_student_subscriptions!]!

  """
  fetch aggregated fields from the table: "lesson_student_subscriptions"
  """
  lesson_student_subscriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_student_subscriptions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_student_subscriptions_order_by!]

    """filter the rows returned"""
    where: lesson_student_subscriptions_bool_exp
  ): lesson_student_subscriptions_aggregate!

  """
  fetch data from the table: "lesson_student_subscriptions" using primary key columns
  """
  lesson_student_subscriptions_by_pk(student_subscription_id: String!): lesson_student_subscriptions

  """
  fetch data from the table: "lessons"
  """
  lessons(
    """distinct select on columns"""
    distinct_on: [lessons_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_order_by!]

    """filter the rows returned"""
    where: lessons_bool_exp
  ): [lessons!]!

  """
  fetch aggregated fields from the table: "lessons"
  """
  lessons_aggregate(
    """distinct select on columns"""
    distinct_on: [lessons_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_order_by!]

    """filter the rows returned"""
    where: lessons_bool_exp
  ): lessons_aggregate!

  """fetch data from the table: "lessons" using primary key columns"""
  lessons_by_pk(lesson_id: String!): lessons

  """
  fetch data from the table: "lessons_courses"
  """
  lessons_courses(
    """distinct select on columns"""
    distinct_on: [lessons_courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_courses_order_by!]

    """filter the rows returned"""
    where: lessons_courses_bool_exp
  ): [lessons_courses!]!

  """
  fetch aggregated fields from the table: "lessons_courses"
  """
  lessons_courses_aggregate(
    """distinct select on columns"""
    distinct_on: [lessons_courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_courses_order_by!]

    """filter the rows returned"""
    where: lessons_courses_bool_exp
  ): lessons_courses_aggregate!

  """fetch data from the table: "lessons_courses" using primary key columns"""
  lessons_courses_by_pk(course_id: String!, lesson_id: String!): lessons_courses

  """
  fetch data from the table: "lessons_teachers"
  """
  lessons_teachers(
    """distinct select on columns"""
    distinct_on: [lessons_teachers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_teachers_order_by!]

    """filter the rows returned"""
    where: lessons_teachers_bool_exp
  ): [lessons_teachers!]!

  """
  fetch aggregated fields from the table: "lessons_teachers"
  """
  lessons_teachers_aggregate(
    """distinct select on columns"""
    distinct_on: [lessons_teachers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_teachers_order_by!]

    """filter the rows returned"""
    where: lessons_teachers_bool_exp
  ): lessons_teachers_aggregate!

  """
  fetch data from the table: "lessons_teachers" using primary key columns
  """
  lessons_teachers_by_pk(lesson_id: String!, teacher_id: String!): lessons_teachers

  """
  fetch data from the table: "location_types"
  """
  location_types(
    """distinct select on columns"""
    distinct_on: [location_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [location_types_order_by!]

    """filter the rows returned"""
    where: location_types_bool_exp
  ): [location_types!]!

  """
  fetch aggregated fields from the table: "location_types"
  """
  location_types_aggregate(
    """distinct select on columns"""
    distinct_on: [location_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [location_types_order_by!]

    """filter the rows returned"""
    where: location_types_bool_exp
  ): location_types_aggregate!

  """fetch data from the table: "location_types" using primary key columns"""
  location_types_by_pk(location_type_id: String!): location_types

  """
  fetch data from the table: "locations"
  """
  locations(
    """distinct select on columns"""
    distinct_on: [locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locations_order_by!]

    """filter the rows returned"""
    where: locations_bool_exp
  ): [locations!]!

  """
  fetch aggregated fields from the table: "locations"
  """
  locations_aggregate(
    """distinct select on columns"""
    distinct_on: [locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locations_order_by!]

    """filter the rows returned"""
    where: locations_bool_exp
  ): locations_aggregate!

  """fetch data from the table: "locations" using primary key columns"""
  locations_by_pk(location_id: String!): locations

  """
  fetch data from the table: "media"
  """
  media(
    """distinct select on columns"""
    distinct_on: [media_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [media_order_by!]

    """filter the rows returned"""
    where: media_bool_exp
  ): [media!]!

  """
  fetch aggregated fields from the table: "media"
  """
  media_aggregate(
    """distinct select on columns"""
    distinct_on: [media_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [media_order_by!]

    """filter the rows returned"""
    where: media_bool_exp
  ): media_aggregate!

  """fetch data from the table: "media" using primary key columns"""
  media_by_pk(media_id: String!): media

  """
  fetch data from the table: "organizations"
  """
  organizations(
    """distinct select on columns"""
    distinct_on: [organizations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organizations_order_by!]

    """filter the rows returned"""
    where: organizations_bool_exp
  ): [organizations!]!

  """
  fetch aggregated fields from the table: "organizations"
  """
  organizations_aggregate(
    """distinct select on columns"""
    distinct_on: [organizations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organizations_order_by!]

    """filter the rows returned"""
    where: organizations_bool_exp
  ): organizations_aggregate!

  """fetch data from the table: "organizations" using primary key columns"""
  organizations_by_pk(organization_id: String!): organizations

  """
  fetch data from the table: "parents"
  """
  parents(
    """distinct select on columns"""
    distinct_on: [parents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [parents_order_by!]

    """filter the rows returned"""
    where: parents_bool_exp
  ): [parents!]!

  """
  fetch aggregated fields from the table: "parents"
  """
  parents_aggregate(
    """distinct select on columns"""
    distinct_on: [parents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [parents_order_by!]

    """filter the rows returned"""
    where: parents_bool_exp
  ): parents_aggregate!

  """fetch data from the table: "parents" using primary key columns"""
  parents_by_pk(parent_id: String!): parents

  """
  fetch data from the table: "partner_dynamic_form_field_values"
  """
  partner_dynamic_form_field_values(
    """distinct select on columns"""
    distinct_on: [partner_dynamic_form_field_values_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [partner_dynamic_form_field_values_order_by!]

    """filter the rows returned"""
    where: partner_dynamic_form_field_values_bool_exp
  ): [partner_dynamic_form_field_values!]!

  """
  fetch aggregated fields from the table: "partner_dynamic_form_field_values"
  """
  partner_dynamic_form_field_values_aggregate(
    """distinct select on columns"""
    distinct_on: [partner_dynamic_form_field_values_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [partner_dynamic_form_field_values_order_by!]

    """filter the rows returned"""
    where: partner_dynamic_form_field_values_bool_exp
  ): partner_dynamic_form_field_values_aggregate!

  """
  fetch data from the table: "partner_dynamic_form_field_values" using primary key columns
  """
  partner_dynamic_form_field_values_by_pk(dynamic_form_field_value_id: String!): partner_dynamic_form_field_values

  """
  fetch data from the table: "partner_form_configs"
  """
  partner_form_configs(
    """distinct select on columns"""
    distinct_on: [partner_form_configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [partner_form_configs_order_by!]

    """filter the rows returned"""
    where: partner_form_configs_bool_exp
  ): [partner_form_configs!]!

  """
  fetch aggregated fields from the table: "partner_form_configs"
  """
  partner_form_configs_aggregate(
    """distinct select on columns"""
    distinct_on: [partner_form_configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [partner_form_configs_order_by!]

    """filter the rows returned"""
    where: partner_form_configs_bool_exp
  ): partner_form_configs_aggregate!

  """
  fetch data from the table: "partner_form_configs" using primary key columns
  """
  partner_form_configs_by_pk(form_config_id: String!): partner_form_configs

  """
  fetch data from the table: "plans"
  """
  plans(
    """distinct select on columns"""
    distinct_on: [plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plans_order_by!]

    """filter the rows returned"""
    where: plans_bool_exp
  ): [plans!]!

  """
  fetch aggregated fields from the table: "plans"
  """
  plans_aggregate(
    """distinct select on columns"""
    distinct_on: [plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plans_order_by!]

    """filter the rows returned"""
    where: plans_bool_exp
  ): plans_aggregate!

  """fetch data from the table: "plans" using primary key columns"""
  plans_by_pk(country: String!, plan_id: String!): plans

  """
  fetch data from the table: "prefecture"
  """
  prefecture(
    """distinct select on columns"""
    distinct_on: [prefecture_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [prefecture_order_by!]

    """filter the rows returned"""
    where: prefecture_bool_exp
  ): [prefecture!]!

  """
  fetch aggregated fields from the table: "prefecture"
  """
  prefecture_aggregate(
    """distinct select on columns"""
    distinct_on: [prefecture_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [prefecture_order_by!]

    """filter the rows returned"""
    where: prefecture_bool_exp
  ): prefecture_aggregate!

  """fetch data from the table: "prefecture" using primary key columns"""
  prefecture_by_pk(prefecture_id: String!): prefecture

  """
  fetch data from the table: "preset_study_plans"
  """
  preset_study_plans(
    """distinct select on columns"""
    distinct_on: [preset_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preset_study_plans_order_by!]

    """filter the rows returned"""
    where: preset_study_plans_bool_exp
  ): [preset_study_plans!]!

  """
  fetch aggregated fields from the table: "preset_study_plans"
  """
  preset_study_plans_aggregate(
    """distinct select on columns"""
    distinct_on: [preset_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preset_study_plans_order_by!]

    """filter the rows returned"""
    where: preset_study_plans_bool_exp
  ): preset_study_plans_aggregate!

  """
  fetch data from the table: "preset_study_plans" using primary key columns
  """
  preset_study_plans_by_pk(preset_study_plan_id: String!): preset_study_plans

  """
  fetch data from the table: "preset_study_plans_weekly"
  """
  preset_study_plans_weekly(
    """distinct select on columns"""
    distinct_on: [preset_study_plans_weekly_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preset_study_plans_weekly_order_by!]

    """filter the rows returned"""
    where: preset_study_plans_weekly_bool_exp
  ): [preset_study_plans_weekly!]!

  """
  fetch aggregated fields from the table: "preset_study_plans_weekly"
  """
  preset_study_plans_weekly_aggregate(
    """distinct select on columns"""
    distinct_on: [preset_study_plans_weekly_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preset_study_plans_weekly_order_by!]

    """filter the rows returned"""
    where: preset_study_plans_weekly_bool_exp
  ): preset_study_plans_weekly_aggregate!

  """
  fetch data from the table: "preset_study_plans_weekly" using primary key columns
  """
  preset_study_plans_weekly_by_pk(preset_study_plan_weekly_id: String!): preset_study_plans_weekly

  """
  fetch data from the table: "preset_study_plans_weekly_format"
  """
  preset_study_plans_weekly_format(
    """distinct select on columns"""
    distinct_on: [preset_study_plans_weekly_format_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preset_study_plans_weekly_format_order_by!]

    """filter the rows returned"""
    where: preset_study_plans_weekly_format_bool_exp
  ): [preset_study_plans_weekly_format!]!

  """
  fetch aggregated fields from the table: "preset_study_plans_weekly_format"
  """
  preset_study_plans_weekly_format_aggregate(
    """distinct select on columns"""
    distinct_on: [preset_study_plans_weekly_format_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preset_study_plans_weekly_format_order_by!]

    """filter the rows returned"""
    where: preset_study_plans_weekly_format_bool_exp
  ): preset_study_plans_weekly_format_aggregate!

  """
  fetch data from the table: "promotion_rules"
  """
  promotion_rules(
    """distinct select on columns"""
    distinct_on: [promotion_rules_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [promotion_rules_order_by!]

    """filter the rows returned"""
    where: promotion_rules_bool_exp
  ): [promotion_rules!]!

  """
  fetch aggregated fields from the table: "promotion_rules"
  """
  promotion_rules_aggregate(
    """distinct select on columns"""
    distinct_on: [promotion_rules_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [promotion_rules_order_by!]

    """filter the rows returned"""
    where: promotion_rules_bool_exp
  ): promotion_rules_aggregate!

  """fetch data from the table: "promotion_rules" using primary key columns"""
  promotion_rules_by_pk(promotion_rule_id: Int!): promotion_rules

  """
  fetch data from the table: "promotions"
  """
  promotions(
    """distinct select on columns"""
    distinct_on: [promotions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [promotions_order_by!]

    """filter the rows returned"""
    where: promotions_bool_exp
  ): [promotions!]!

  """
  fetch aggregated fields from the table: "promotions"
  """
  promotions_aggregate(
    """distinct select on columns"""
    distinct_on: [promotions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [promotions_order_by!]

    """filter the rows returned"""
    where: promotions_bool_exp
  ): promotions_aggregate!

  """fetch data from the table: "promotions" using primary key columns"""
  promotions_by_pk(promotion_id: Int!): promotions

  """
  fetch data from the table: "questionnaire_questions"
  """
  questionnaire_questions(
    """distinct select on columns"""
    distinct_on: [questionnaire_questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questionnaire_questions_order_by!]

    """filter the rows returned"""
    where: questionnaire_questions_bool_exp
  ): [questionnaire_questions!]!

  """
  fetch aggregated fields from the table: "questionnaire_questions"
  """
  questionnaire_questions_aggregate(
    """distinct select on columns"""
    distinct_on: [questionnaire_questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questionnaire_questions_order_by!]

    """filter the rows returned"""
    where: questionnaire_questions_bool_exp
  ): questionnaire_questions_aggregate!

  """
  fetch data from the table: "questionnaire_questions" using primary key columns
  """
  questionnaire_questions_by_pk(questionnaire_question_id: String!): questionnaire_questions

  """
  fetch data from the table: "questionnaire_user_answers"
  """
  questionnaire_user_answers(
    """distinct select on columns"""
    distinct_on: [questionnaire_user_answers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questionnaire_user_answers_order_by!]

    """filter the rows returned"""
    where: questionnaire_user_answers_bool_exp
  ): [questionnaire_user_answers!]!

  """
  fetch aggregated fields from the table: "questionnaire_user_answers"
  """
  questionnaire_user_answers_aggregate(
    """distinct select on columns"""
    distinct_on: [questionnaire_user_answers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questionnaire_user_answers_order_by!]

    """filter the rows returned"""
    where: questionnaire_user_answers_bool_exp
  ): questionnaire_user_answers_aggregate!

  """
  fetch data from the table: "questionnaire_user_answers" using primary key columns
  """
  questionnaire_user_answers_by_pk(answer_id: String!, user_notification_id: String!): questionnaire_user_answers

  """
  fetch data from the table: "questionnaires"
  """
  questionnaires(
    """distinct select on columns"""
    distinct_on: [questionnaires_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questionnaires_order_by!]

    """filter the rows returned"""
    where: questionnaires_bool_exp
  ): [questionnaires!]!

  """
  fetch aggregated fields from the table: "questionnaires"
  """
  questionnaires_aggregate(
    """distinct select on columns"""
    distinct_on: [questionnaires_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questionnaires_order_by!]

    """filter the rows returned"""
    where: questionnaires_bool_exp
  ): questionnaires_aggregate!

  """fetch data from the table: "questionnaires" using primary key columns"""
  questionnaires_by_pk(questionnaire_id: String!): questionnaires

  """
  fetch data from the table: "questions"
  """
  questions(
    """distinct select on columns"""
    distinct_on: [questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_order_by!]

    """filter the rows returned"""
    where: questions_bool_exp
  ): [questions!]!

  """
  fetch aggregated fields from the table: "questions"
  """
  questions_aggregate(
    """distinct select on columns"""
    distinct_on: [questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_order_by!]

    """filter the rows returned"""
    where: questions_bool_exp
  ): questions_aggregate!

  """fetch data from the table: "questions" using primary key columns"""
  questions_by_pk(question_id: String!): questions

  """
  fetch data from the table: "quiz_sets"
  """
  quiz_sets(
    """distinct select on columns"""
    distinct_on: [quiz_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quiz_sets_order_by!]

    """filter the rows returned"""
    where: quiz_sets_bool_exp
  ): [quiz_sets!]!

  """
  fetch aggregated fields from the table: "quiz_sets"
  """
  quiz_sets_aggregate(
    """distinct select on columns"""
    distinct_on: [quiz_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quiz_sets_order_by!]

    """filter the rows returned"""
    where: quiz_sets_bool_exp
  ): quiz_sets_aggregate!

  """fetch data from the table: "quiz_sets" using primary key columns"""
  quiz_sets_by_pk(quiz_set_id: String!): quiz_sets

  """
  fetch data from the table: "quizsets"
  """
  quizsets(
    """distinct select on columns"""
    distinct_on: [quizsets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizsets_order_by!]

    """filter the rows returned"""
    where: quizsets_bool_exp
  ): [quizsets!]!

  """
  fetch aggregated fields from the table: "quizsets"
  """
  quizsets_aggregate(
    """distinct select on columns"""
    distinct_on: [quizsets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizsets_order_by!]

    """filter the rows returned"""
    where: quizsets_bool_exp
  ): quizsets_aggregate!

  """fetch data from the table: "quizsets" using primary key columns"""
  quizsets_by_pk(lo_id: String!, question_id: String!): quizsets

  """
  fetch data from the table: "quizzes"
  """
  quizzes(
    """distinct select on columns"""
    distinct_on: [quizzes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizzes_order_by!]

    """filter the rows returned"""
    where: quizzes_bool_exp
  ): [quizzes!]!

  """
  fetch aggregated fields from the table: "quizzes"
  """
  quizzes_aggregate(
    """distinct select on columns"""
    distinct_on: [quizzes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizzes_order_by!]

    """filter the rows returned"""
    where: quizzes_bool_exp
  ): quizzes_aggregate!

  """fetch data from the table: "quizzes" using primary key columns"""
  quizzes_by_pk(quiz_id: String!): quizzes

  """
  fetch data from the table: "role"
  """
  role(
    """distinct select on columns"""
    distinct_on: [role_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [role_order_by!]

    """filter the rows returned"""
    where: role_bool_exp
  ): [role!]!

  """
  fetch aggregated fields from the table: "role"
  """
  role_aggregate(
    """distinct select on columns"""
    distinct_on: [role_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [role_order_by!]

    """filter the rows returned"""
    where: role_bool_exp
  ): role_aggregate!

  """fetch data from the table: "role" using primary key columns"""
  role_by_pk(role_id: String!): role

  """
  fetch data from the table: "scheduler"
  """
  scheduler(
    """distinct select on columns"""
    distinct_on: [scheduler_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_order_by!]

    """filter the rows returned"""
    where: scheduler_bool_exp
  ): [scheduler!]!

  """
  fetch aggregated fields from the table: "scheduler"
  """
  scheduler_aggregate(
    """distinct select on columns"""
    distinct_on: [scheduler_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_order_by!]

    """filter the rows returned"""
    where: scheduler_bool_exp
  ): scheduler_aggregate!

  """fetch data from the table: "scheduler" using primary key columns"""
  scheduler_by_pk(scheduler_id: String!): scheduler

  """
  fetch data from the table: "school_admins"
  """
  school_admins(
    """distinct select on columns"""
    distinct_on: [school_admins_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_admins_order_by!]

    """filter the rows returned"""
    where: school_admins_bool_exp
  ): [school_admins!]!

  """
  fetch aggregated fields from the table: "school_admins"
  """
  school_admins_aggregate(
    """distinct select on columns"""
    distinct_on: [school_admins_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_admins_order_by!]

    """filter the rows returned"""
    where: school_admins_bool_exp
  ): school_admins_aggregate!

  """fetch data from the table: "school_admins" using primary key columns"""
  school_admins_by_pk(school_admin_id: String!): school_admins

  """
  fetch data from the table: "school_configs"
  """
  school_configs(
    """distinct select on columns"""
    distinct_on: [school_configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_configs_order_by!]

    """filter the rows returned"""
    where: school_configs_bool_exp
  ): [school_configs!]!

  """
  fetch aggregated fields from the table: "school_configs"
  """
  school_configs_aggregate(
    """distinct select on columns"""
    distinct_on: [school_configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_configs_order_by!]

    """filter the rows returned"""
    where: school_configs_bool_exp
  ): school_configs_aggregate!

  """fetch data from the table: "school_configs" using primary key columns"""
  school_configs_by_pk(school_id: Int!): school_configs

  """
  fetch data from the table: "school_course"
  """
  school_course(
    """distinct select on columns"""
    distinct_on: [school_course_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_course_order_by!]

    """filter the rows returned"""
    where: school_course_bool_exp
  ): [school_course!]!

  """
  fetch aggregated fields from the table: "school_course"
  """
  school_course_aggregate(
    """distinct select on columns"""
    distinct_on: [school_course_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_course_order_by!]

    """filter the rows returned"""
    where: school_course_bool_exp
  ): school_course_aggregate!

  """fetch data from the table: "school_course" using primary key columns"""
  school_course_by_pk(school_course_id: String!): school_course

  """
  fetch data from the table: "school_info"
  """
  school_info(
    """distinct select on columns"""
    distinct_on: [school_info_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_info_order_by!]

    """filter the rows returned"""
    where: school_info_bool_exp
  ): [school_info!]!

  """
  fetch aggregated fields from the table: "school_info"
  """
  school_info_aggregate(
    """distinct select on columns"""
    distinct_on: [school_info_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_info_order_by!]

    """filter the rows returned"""
    where: school_info_bool_exp
  ): school_info_aggregate!

  """fetch data from the table: "school_info" using primary key columns"""
  school_info_by_pk(school_id: String!): school_info

  """
  fetch data from the table: "school_level"
  """
  school_level(
    """distinct select on columns"""
    distinct_on: [school_level_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_level_order_by!]

    """filter the rows returned"""
    where: school_level_bool_exp
  ): [school_level!]!

  """
  fetch aggregated fields from the table: "school_level"
  """
  school_level_aggregate(
    """distinct select on columns"""
    distinct_on: [school_level_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_level_order_by!]

    """filter the rows returned"""
    where: school_level_bool_exp
  ): school_level_aggregate!

  """fetch data from the table: "school_level" using primary key columns"""
  school_level_by_pk(school_level_id: String!): school_level

  """
  fetch data from the table: "schools"
  """
  schools(
    """distinct select on columns"""
    distinct_on: [schools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schools_order_by!]

    """filter the rows returned"""
    where: schools_bool_exp
  ): [schools!]!

  """
  fetch aggregated fields from the table: "schools"
  """
  schools_aggregate(
    """distinct select on columns"""
    distinct_on: [schools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schools_order_by!]

    """filter the rows returned"""
    where: schools_bool_exp
  ): schools_aggregate!

  """fetch data from the table: "schools" using primary key columns"""
  schools_by_pk(school_id: Int!): schools

  """
  execute function "search_courses_by_name" which returns "courses"
  """
  search_courses_by_name(
    """
    input parameters for function "search_courses_by_name"
    """
    args: search_courses_by_name_args!

    """distinct select on columns"""
    distinct_on: [courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_order_by!]

    """filter the rows returned"""
    where: courses_bool_exp
  ): [courses!]!

  """
  execute function "search_courses_by_name" and query aggregates on result of table type "courses"
  """
  search_courses_by_name_aggregate(
    """
    input parameters for function "search_courses_by_name"
    """
    args: search_courses_by_name_args!

    """distinct select on columns"""
    distinct_on: [courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_order_by!]

    """filter the rows returned"""
    where: courses_bool_exp
  ): courses_aggregate!

  """
  fetch data from the table: "staff"
  """
  staff(
    """distinct select on columns"""
    distinct_on: [staff_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [staff_order_by!]

    """filter the rows returned"""
    where: staff_bool_exp
  ): [staff!]!

  """
  fetch aggregated fields from the table: "staff"
  """
  staff_aggregate(
    """distinct select on columns"""
    distinct_on: [staff_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [staff_order_by!]

    """filter the rows returned"""
    where: staff_bool_exp
  ): staff_aggregate!

  """fetch data from the table: "staff" using primary key columns"""
  staff_by_pk(staff_id: String!): staff

  """
  fetch data from the table: "student_entryexit_records"
  """
  student_entryexit_records(
    """distinct select on columns"""
    distinct_on: [student_entryexit_records_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_entryexit_records_order_by!]

    """filter the rows returned"""
    where: student_entryexit_records_bool_exp
  ): [student_entryexit_records!]!

  """
  fetch aggregated fields from the table: "student_entryexit_records"
  """
  student_entryexit_records_aggregate(
    """distinct select on columns"""
    distinct_on: [student_entryexit_records_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_entryexit_records_order_by!]

    """filter the rows returned"""
    where: student_entryexit_records_bool_exp
  ): student_entryexit_records_aggregate!

  """
  fetch data from the table: "student_entryexit_records" using primary key columns
  """
  student_entryexit_records_by_pk(entryexit_id: Int!): student_entryexit_records

  """
  fetch data from the table: "student_parents"
  """
  student_parents(
    """distinct select on columns"""
    distinct_on: [student_parents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_parents_order_by!]

    """filter the rows returned"""
    where: student_parents_bool_exp
  ): [student_parents!]!

  """
  fetch aggregated fields from the table: "student_parents"
  """
  student_parents_aggregate(
    """distinct select on columns"""
    distinct_on: [student_parents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_parents_order_by!]

    """filter the rows returned"""
    where: student_parents_bool_exp
  ): student_parents_aggregate!

  """fetch data from the table: "student_parents" using primary key columns"""
  student_parents_by_pk(parent_id: String!, student_id: String!): student_parents

  """
  fetch data from the table: "student_qr"
  """
  student_qr(
    """distinct select on columns"""
    distinct_on: [student_qr_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_qr_order_by!]

    """filter the rows returned"""
    where: student_qr_bool_exp
  ): [student_qr!]!

  """
  fetch aggregated fields from the table: "student_qr"
  """
  student_qr_aggregate(
    """distinct select on columns"""
    distinct_on: [student_qr_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_qr_order_by!]

    """filter the rows returned"""
    where: student_qr_bool_exp
  ): student_qr_aggregate!

  """fetch data from the table: "student_qr" using primary key columns"""
  student_qr_by_pk(qr_id: Int!): student_qr

  """
  fetch data from the table: "student_subscriptions"
  """
  student_subscriptions(
    """distinct select on columns"""
    distinct_on: [student_subscriptions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_subscriptions_order_by!]

    """filter the rows returned"""
    where: student_subscriptions_bool_exp
  ): [student_subscriptions!]!

  """
  fetch aggregated fields from the table: "student_subscriptions"
  """
  student_subscriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [student_subscriptions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_subscriptions_order_by!]

    """filter the rows returned"""
    where: student_subscriptions_bool_exp
  ): student_subscriptions_aggregate!

  """
  fetch data from the table: "student_subscriptions" using primary key columns
  """
  student_subscriptions_by_pk(student_subscription_id: String!): student_subscriptions

  """
  fetch data from the table: "students"
  """
  students(
    """distinct select on columns"""
    distinct_on: [students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [students_order_by!]

    """filter the rows returned"""
    where: students_bool_exp
  ): [students!]!

  """
  fetch aggregated fields from the table: "students"
  """
  students_aggregate(
    """distinct select on columns"""
    distinct_on: [students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [students_order_by!]

    """filter the rows returned"""
    where: students_bool_exp
  ): students_aggregate!

  """
  fetch data from the table: "students_assigned_coaches"
  """
  students_assigned_coaches(
    """distinct select on columns"""
    distinct_on: [students_assigned_coaches_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [students_assigned_coaches_order_by!]

    """filter the rows returned"""
    where: students_assigned_coaches_bool_exp
  ): [students_assigned_coaches!]!

  """
  fetch aggregated fields from the table: "students_assigned_coaches"
  """
  students_assigned_coaches_aggregate(
    """distinct select on columns"""
    distinct_on: [students_assigned_coaches_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [students_assigned_coaches_order_by!]

    """filter the rows returned"""
    where: students_assigned_coaches_bool_exp
  ): students_assigned_coaches_aggregate!

  """fetch data from the table: "students" using primary key columns"""
  students_by_pk(student_id: String!): students

  """
  fetch data from the table: "tags"
  """
  tags(
    """distinct select on columns"""
    distinct_on: [tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tags_order_by!]

    """filter the rows returned"""
    where: tags_bool_exp
  ): [tags!]!

  """
  fetch aggregated fields from the table: "tags"
  """
  tags_aggregate(
    """distinct select on columns"""
    distinct_on: [tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tags_order_by!]

    """filter the rows returned"""
    where: tags_bool_exp
  ): tags_aggregate!

  """fetch data from the table: "tags" using primary key columns"""
  tags_by_pk(tag_id: String!): tags

  """
  fetch data from the table: "teacher_by_school_id"
  """
  teacher_by_school_id(
    """distinct select on columns"""
    distinct_on: [teacher_by_school_id_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_by_school_id_order_by!]

    """filter the rows returned"""
    where: teacher_by_school_id_bool_exp
  ): [teacher_by_school_id!]!

  """
  fetch aggregated fields from the table: "teacher_by_school_id"
  """
  teacher_by_school_id_aggregate(
    """distinct select on columns"""
    distinct_on: [teacher_by_school_id_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_by_school_id_order_by!]

    """filter the rows returned"""
    where: teacher_by_school_id_bool_exp
  ): teacher_by_school_id_aggregate!

  """
  fetch data from the table: "teachers"
  """
  teachers(
    """distinct select on columns"""
    distinct_on: [teachers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teachers_order_by!]

    """filter the rows returned"""
    where: teachers_bool_exp
  ): [teachers!]!

  """
  fetch aggregated fields from the table: "teachers"
  """
  teachers_aggregate(
    """distinct select on columns"""
    distinct_on: [teachers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teachers_order_by!]

    """filter the rows returned"""
    where: teachers_bool_exp
  ): teachers_aggregate!

  """fetch data from the table: "teachers" using primary key columns"""
  teachers_by_pk(teacher_id: String!): teachers

  """
  fetch data from the table: "topics"
  """
  topics(
    """distinct select on columns"""
    distinct_on: [topics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_order_by!]

    """filter the rows returned"""
    where: topics_bool_exp
  ): [topics!]!

  """
  fetch aggregated fields from the table: "topics"
  """
  topics_aggregate(
    """distinct select on columns"""
    distinct_on: [topics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_order_by!]

    """filter the rows returned"""
    where: topics_bool_exp
  ): topics_aggregate!

  """fetch data from the table: "topics" using primary key columns"""
  topics_by_pk(topic_id: String!): topics

  """
  fetch data from the table: "topics_learning_objectives"
  """
  topics_learning_objectives(
    """distinct select on columns"""
    distinct_on: [topics_learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_learning_objectives_order_by!]

    """filter the rows returned"""
    where: topics_learning_objectives_bool_exp
  ): [topics_learning_objectives!]!

  """
  fetch aggregated fields from the table: "topics_learning_objectives"
  """
  topics_learning_objectives_aggregate(
    """distinct select on columns"""
    distinct_on: [topics_learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_learning_objectives_order_by!]

    """filter the rows returned"""
    where: topics_learning_objectives_bool_exp
  ): topics_learning_objectives_aggregate!

  """
  fetch data from the table: "topics_learning_objectives" using primary key columns
  """
  topics_learning_objectives_by_pk(lo_id: String!, topic_id: String!): topics_learning_objectives

  """
  fetch data from the table: "user_access_paths"
  """
  user_access_paths(
    """distinct select on columns"""
    distinct_on: [user_access_paths_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_access_paths_order_by!]

    """filter the rows returned"""
    where: user_access_paths_bool_exp
  ): [user_access_paths!]!

  """
  fetch aggregated fields from the table: "user_access_paths"
  """
  user_access_paths_aggregate(
    """distinct select on columns"""
    distinct_on: [user_access_paths_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_access_paths_order_by!]

    """filter the rows returned"""
    where: user_access_paths_bool_exp
  ): user_access_paths_aggregate!

  """
  fetch data from the table: "user_access_paths" using primary key columns
  """
  user_access_paths_by_pk(location_id: String!, user_id: String!): user_access_paths

  """
  fetch data from the table: "user_address"
  """
  user_address(
    """distinct select on columns"""
    distinct_on: [user_address_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_address_order_by!]

    """filter the rows returned"""
    where: user_address_bool_exp
  ): [user_address!]!

  """
  fetch aggregated fields from the table: "user_address"
  """
  user_address_aggregate(
    """distinct select on columns"""
    distinct_on: [user_address_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_address_order_by!]

    """filter the rows returned"""
    where: user_address_bool_exp
  ): user_address_aggregate!

  """fetch data from the table: "user_address" using primary key columns"""
  user_address_by_pk(user_address_id: String!): user_address

  """
  fetch data from the table: "user_group"
  """
  user_group(
    """distinct select on columns"""
    distinct_on: [user_group_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_group_order_by!]

    """filter the rows returned"""
    where: user_group_bool_exp
  ): [user_group!]!

  """
  fetch aggregated fields from the table: "user_group"
  """
  user_group_aggregate(
    """distinct select on columns"""
    distinct_on: [user_group_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_group_order_by!]

    """filter the rows returned"""
    where: user_group_bool_exp
  ): user_group_aggregate!

  """fetch data from the table: "user_group" using primary key columns"""
  user_group_by_pk(user_group_id: String!): user_group

  """
  fetch data from the table: "user_group_member"
  """
  user_group_member(
    """distinct select on columns"""
    distinct_on: [user_group_member_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_group_member_order_by!]

    """filter the rows returned"""
    where: user_group_member_bool_exp
  ): [user_group_member!]!

  """
  fetch aggregated fields from the table: "user_group_member"
  """
  user_group_member_aggregate(
    """distinct select on columns"""
    distinct_on: [user_group_member_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_group_member_order_by!]

    """filter the rows returned"""
    where: user_group_member_bool_exp
  ): user_group_member_aggregate!

  """
  fetch data from the table: "user_group_member" using primary key columns
  """
  user_group_member_by_pk(user_group_id: String!, user_id: String!): user_group_member

  """
  fetch data from the table: "users"
  """
  users(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): [users!]!

  """
  fetch aggregated fields from the table: "users"
  """
  users_aggregate(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): users_aggregate!

  """fetch data from the table: "users" using primary key columns"""
  users_by_pk(user_id: String!): users

  """
  fetch data from the table: "users_info_notifications"
  """
  users_info_notifications(
    """distinct select on columns"""
    distinct_on: [users_info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_info_notifications_order_by!]

    """filter the rows returned"""
    where: users_info_notifications_bool_exp
  ): [users_info_notifications!]!

  """
  fetch aggregated fields from the table: "users_info_notifications"
  """
  users_info_notifications_aggregate(
    """distinct select on columns"""
    distinct_on: [users_info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_info_notifications_order_by!]

    """filter the rows returned"""
    where: users_info_notifications_bool_exp
  ): users_info_notifications_aggregate!

  """
  fetch data from the table: "users_info_notifications" using primary key columns
  """
  users_info_notifications_by_pk(user_notification_id: String!): users_info_notifications
}

"""
columns and relationships of "questionnaire_questions"
"""
type questionnaire_questions {
  choices: _text
  created_at: timestamptz!
  deleted_at: timestamptz
  is_required: Boolean
  order_index: Int!

  """An object relationship"""
  questionnaire: questionnaires!
  questionnaire_id: String!
  questionnaire_question_id: String!
  resource_path: String!
  title: String
  type: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "questionnaire_questions"
"""
type questionnaire_questions_aggregate {
  aggregate: questionnaire_questions_aggregate_fields
  nodes: [questionnaire_questions!]!
}

"""
aggregate fields of "questionnaire_questions"
"""
type questionnaire_questions_aggregate_fields {
  avg: questionnaire_questions_avg_fields
  count(columns: [questionnaire_questions_select_column!], distinct: Boolean): Int
  max: questionnaire_questions_max_fields
  min: questionnaire_questions_min_fields
  stddev: questionnaire_questions_stddev_fields
  stddev_pop: questionnaire_questions_stddev_pop_fields
  stddev_samp: questionnaire_questions_stddev_samp_fields
  sum: questionnaire_questions_sum_fields
  var_pop: questionnaire_questions_var_pop_fields
  var_samp: questionnaire_questions_var_samp_fields
  variance: questionnaire_questions_variance_fields
}

"""
order by aggregate values of table "questionnaire_questions"
"""
input questionnaire_questions_aggregate_order_by {
  avg: questionnaire_questions_avg_order_by
  count: order_by
  max: questionnaire_questions_max_order_by
  min: questionnaire_questions_min_order_by
  stddev: questionnaire_questions_stddev_order_by
  stddev_pop: questionnaire_questions_stddev_pop_order_by
  stddev_samp: questionnaire_questions_stddev_samp_order_by
  sum: questionnaire_questions_sum_order_by
  var_pop: questionnaire_questions_var_pop_order_by
  var_samp: questionnaire_questions_var_samp_order_by
  variance: questionnaire_questions_variance_order_by
}

"""
input type for inserting array relation for remote table "questionnaire_questions"
"""
input questionnaire_questions_arr_rel_insert_input {
  data: [questionnaire_questions_insert_input!]!
  on_conflict: questionnaire_questions_on_conflict
}

"""aggregate avg on columns"""
type questionnaire_questions_avg_fields {
  order_index: Float
}

"""
order by avg() on columns of table "questionnaire_questions"
"""
input questionnaire_questions_avg_order_by {
  order_index: order_by
}

"""
Boolean expression to filter rows from the table "questionnaire_questions". All fields are combined with a logical 'AND'.
"""
input questionnaire_questions_bool_exp {
  _and: [questionnaire_questions_bool_exp]
  _not: questionnaire_questions_bool_exp
  _or: [questionnaire_questions_bool_exp]
  choices: _text_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  is_required: Boolean_comparison_exp
  order_index: Int_comparison_exp
  questionnaire: questionnaires_bool_exp
  questionnaire_id: String_comparison_exp
  questionnaire_question_id: String_comparison_exp
  resource_path: String_comparison_exp
  title: String_comparison_exp
  type: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "questionnaire_questions"
"""
enum questionnaire_questions_constraint {
  """unique or primary key constraint"""
  pk__questionnaire_questions
}

"""
input type for incrementing integer column in table "questionnaire_questions"
"""
input questionnaire_questions_inc_input {
  order_index: Int
}

"""
input type for inserting data into table "questionnaire_questions"
"""
input questionnaire_questions_insert_input {
  choices: _text
  created_at: timestamptz
  deleted_at: timestamptz
  is_required: Boolean
  order_index: Int
  questionnaire: questionnaires_obj_rel_insert_input
  questionnaire_id: String
  questionnaire_question_id: String
  resource_path: String
  title: String
  type: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type questionnaire_questions_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  order_index: Int
  questionnaire_id: String
  questionnaire_question_id: String
  resource_path: String
  title: String
  type: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "questionnaire_questions"
"""
input questionnaire_questions_max_order_by {
  created_at: order_by
  deleted_at: order_by
  order_index: order_by
  questionnaire_id: order_by
  questionnaire_question_id: order_by
  resource_path: order_by
  title: order_by
  type: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type questionnaire_questions_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  order_index: Int
  questionnaire_id: String
  questionnaire_question_id: String
  resource_path: String
  title: String
  type: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "questionnaire_questions"
"""
input questionnaire_questions_min_order_by {
  created_at: order_by
  deleted_at: order_by
  order_index: order_by
  questionnaire_id: order_by
  questionnaire_question_id: order_by
  resource_path: order_by
  title: order_by
  type: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "questionnaire_questions"
"""
type questionnaire_questions_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [questionnaire_questions!]!
}

"""
input type for inserting object relation for remote table "questionnaire_questions"
"""
input questionnaire_questions_obj_rel_insert_input {
  data: questionnaire_questions_insert_input!
  on_conflict: questionnaire_questions_on_conflict
}

"""
on conflict condition type for table "questionnaire_questions"
"""
input questionnaire_questions_on_conflict {
  constraint: questionnaire_questions_constraint!
  update_columns: [questionnaire_questions_update_column!]!
  where: questionnaire_questions_bool_exp
}

"""
ordering options when selecting data from "questionnaire_questions"
"""
input questionnaire_questions_order_by {
  choices: order_by
  created_at: order_by
  deleted_at: order_by
  is_required: order_by
  order_index: order_by
  questionnaire: questionnaires_order_by
  questionnaire_id: order_by
  questionnaire_question_id: order_by
  resource_path: order_by
  title: order_by
  type: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "questionnaire_questions"
"""
input questionnaire_questions_pk_columns_input {
  questionnaire_question_id: String!
}

"""
select columns of table "questionnaire_questions"
"""
enum questionnaire_questions_select_column {
  """column name"""
  choices

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  is_required

  """column name"""
  order_index

  """column name"""
  questionnaire_id

  """column name"""
  questionnaire_question_id

  """column name"""
  resource_path

  """column name"""
  title

  """column name"""
  type

  """column name"""
  updated_at
}

"""
input type for updating data in table "questionnaire_questions"
"""
input questionnaire_questions_set_input {
  choices: _text
  created_at: timestamptz
  deleted_at: timestamptz
  is_required: Boolean
  order_index: Int
  questionnaire_id: String
  questionnaire_question_id: String
  resource_path: String
  title: String
  type: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type questionnaire_questions_stddev_fields {
  order_index: Float
}

"""
order by stddev() on columns of table "questionnaire_questions"
"""
input questionnaire_questions_stddev_order_by {
  order_index: order_by
}

"""aggregate stddev_pop on columns"""
type questionnaire_questions_stddev_pop_fields {
  order_index: Float
}

"""
order by stddev_pop() on columns of table "questionnaire_questions"
"""
input questionnaire_questions_stddev_pop_order_by {
  order_index: order_by
}

"""aggregate stddev_samp on columns"""
type questionnaire_questions_stddev_samp_fields {
  order_index: Float
}

"""
order by stddev_samp() on columns of table "questionnaire_questions"
"""
input questionnaire_questions_stddev_samp_order_by {
  order_index: order_by
}

"""aggregate sum on columns"""
type questionnaire_questions_sum_fields {
  order_index: Int
}

"""
order by sum() on columns of table "questionnaire_questions"
"""
input questionnaire_questions_sum_order_by {
  order_index: order_by
}

"""
update columns of table "questionnaire_questions"
"""
enum questionnaire_questions_update_column {
  """column name"""
  choices

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  is_required

  """column name"""
  order_index

  """column name"""
  questionnaire_id

  """column name"""
  questionnaire_question_id

  """column name"""
  resource_path

  """column name"""
  title

  """column name"""
  type

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type questionnaire_questions_var_pop_fields {
  order_index: Float
}

"""
order by var_pop() on columns of table "questionnaire_questions"
"""
input questionnaire_questions_var_pop_order_by {
  order_index: order_by
}

"""aggregate var_samp on columns"""
type questionnaire_questions_var_samp_fields {
  order_index: Float
}

"""
order by var_samp() on columns of table "questionnaire_questions"
"""
input questionnaire_questions_var_samp_order_by {
  order_index: order_by
}

"""aggregate variance on columns"""
type questionnaire_questions_variance_fields {
  order_index: Float
}

"""
order by variance() on columns of table "questionnaire_questions"
"""
input questionnaire_questions_variance_order_by {
  order_index: order_by
}

"""
columns and relationships of "questionnaire_user_answers"
"""
type questionnaire_user_answers {
  answer: String
  answer_id: String!
  deleted_at: timestamptz
  questionnaire_question_id: String!
  resource_path: String!
  submitted_at: timestamptz!
  target_id: String!
  user_id: String!
  user_notification_id: String!
}

"""
aggregated selection of "questionnaire_user_answers"
"""
type questionnaire_user_answers_aggregate {
  aggregate: questionnaire_user_answers_aggregate_fields
  nodes: [questionnaire_user_answers!]!
}

"""
aggregate fields of "questionnaire_user_answers"
"""
type questionnaire_user_answers_aggregate_fields {
  count(columns: [questionnaire_user_answers_select_column!], distinct: Boolean): Int
  max: questionnaire_user_answers_max_fields
  min: questionnaire_user_answers_min_fields
}

"""
order by aggregate values of table "questionnaire_user_answers"
"""
input questionnaire_user_answers_aggregate_order_by {
  count: order_by
  max: questionnaire_user_answers_max_order_by
  min: questionnaire_user_answers_min_order_by
}

"""
input type for inserting array relation for remote table "questionnaire_user_answers"
"""
input questionnaire_user_answers_arr_rel_insert_input {
  data: [questionnaire_user_answers_insert_input!]!
  on_conflict: questionnaire_user_answers_on_conflict
}

"""
Boolean expression to filter rows from the table "questionnaire_user_answers". All fields are combined with a logical 'AND'.
"""
input questionnaire_user_answers_bool_exp {
  _and: [questionnaire_user_answers_bool_exp]
  _not: questionnaire_user_answers_bool_exp
  _or: [questionnaire_user_answers_bool_exp]
  answer: String_comparison_exp
  answer_id: String_comparison_exp
  deleted_at: timestamptz_comparison_exp
  questionnaire_question_id: String_comparison_exp
  resource_path: String_comparison_exp
  submitted_at: timestamptz_comparison_exp
  target_id: String_comparison_exp
  user_id: String_comparison_exp
  user_notification_id: String_comparison_exp
}

"""
unique or primary key constraints on table "questionnaire_user_answers"
"""
enum questionnaire_user_answers_constraint {
  """unique or primary key constraint"""
  pk__questionnaire_user_answers
}

"""
input type for inserting data into table "questionnaire_user_answers"
"""
input questionnaire_user_answers_insert_input {
  answer: String
  answer_id: String
  deleted_at: timestamptz
  questionnaire_question_id: String
  resource_path: String
  submitted_at: timestamptz
  target_id: String
  user_id: String
  user_notification_id: String
}

"""aggregate max on columns"""
type questionnaire_user_answers_max_fields {
  answer: String
  answer_id: String
  deleted_at: timestamptz
  questionnaire_question_id: String
  resource_path: String
  submitted_at: timestamptz
  target_id: String
  user_id: String
  user_notification_id: String
}

"""
order by max() on columns of table "questionnaire_user_answers"
"""
input questionnaire_user_answers_max_order_by {
  answer: order_by
  answer_id: order_by
  deleted_at: order_by
  questionnaire_question_id: order_by
  resource_path: order_by
  submitted_at: order_by
  target_id: order_by
  user_id: order_by
  user_notification_id: order_by
}

"""aggregate min on columns"""
type questionnaire_user_answers_min_fields {
  answer: String
  answer_id: String
  deleted_at: timestamptz
  questionnaire_question_id: String
  resource_path: String
  submitted_at: timestamptz
  target_id: String
  user_id: String
  user_notification_id: String
}

"""
order by min() on columns of table "questionnaire_user_answers"
"""
input questionnaire_user_answers_min_order_by {
  answer: order_by
  answer_id: order_by
  deleted_at: order_by
  questionnaire_question_id: order_by
  resource_path: order_by
  submitted_at: order_by
  target_id: order_by
  user_id: order_by
  user_notification_id: order_by
}

"""
response of any mutation on the table "questionnaire_user_answers"
"""
type questionnaire_user_answers_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [questionnaire_user_answers!]!
}

"""
input type for inserting object relation for remote table "questionnaire_user_answers"
"""
input questionnaire_user_answers_obj_rel_insert_input {
  data: questionnaire_user_answers_insert_input!
  on_conflict: questionnaire_user_answers_on_conflict
}

"""
on conflict condition type for table "questionnaire_user_answers"
"""
input questionnaire_user_answers_on_conflict {
  constraint: questionnaire_user_answers_constraint!
  update_columns: [questionnaire_user_answers_update_column!]!
  where: questionnaire_user_answers_bool_exp
}

"""
ordering options when selecting data from "questionnaire_user_answers"
"""
input questionnaire_user_answers_order_by {
  answer: order_by
  answer_id: order_by
  deleted_at: order_by
  questionnaire_question_id: order_by
  resource_path: order_by
  submitted_at: order_by
  target_id: order_by
  user_id: order_by
  user_notification_id: order_by
}

"""
primary key columns input for table: "questionnaire_user_answers"
"""
input questionnaire_user_answers_pk_columns_input {
  answer_id: String!
  user_notification_id: String!
}

"""
select columns of table "questionnaire_user_answers"
"""
enum questionnaire_user_answers_select_column {
  """column name"""
  answer

  """column name"""
  answer_id

  """column name"""
  deleted_at

  """column name"""
  questionnaire_question_id

  """column name"""
  resource_path

  """column name"""
  submitted_at

  """column name"""
  target_id

  """column name"""
  user_id

  """column name"""
  user_notification_id
}

"""
input type for updating data in table "questionnaire_user_answers"
"""
input questionnaire_user_answers_set_input {
  answer: String
  answer_id: String
  deleted_at: timestamptz
  questionnaire_question_id: String
  resource_path: String
  submitted_at: timestamptz
  target_id: String
  user_id: String
  user_notification_id: String
}

"""
update columns of table "questionnaire_user_answers"
"""
enum questionnaire_user_answers_update_column {
  """column name"""
  answer

  """column name"""
  answer_id

  """column name"""
  deleted_at

  """column name"""
  questionnaire_question_id

  """column name"""
  resource_path

  """column name"""
  submitted_at

  """column name"""
  target_id

  """column name"""
  user_id

  """column name"""
  user_notification_id
}

"""
columns and relationships of "questionnaires"
"""
type questionnaires {
  created_at: timestamptz!
  deleted_at: timestamptz
  expiration_date: timestamptz!

  """An array relationship"""
  info_notifications(
    """distinct select on columns"""
    distinct_on: [info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notifications_order_by!]

    """filter the rows returned"""
    where: info_notifications_bool_exp
  ): [info_notifications!]!

  """An aggregated array relationship"""
  info_notifications_aggregate(
    """distinct select on columns"""
    distinct_on: [info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notifications_order_by!]

    """filter the rows returned"""
    where: info_notifications_bool_exp
  ): info_notifications_aggregate!
  questionnaire_id: String!

  """An array relationship"""
  questionnaire_questions(
    """distinct select on columns"""
    distinct_on: [questionnaire_questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questionnaire_questions_order_by!]

    """filter the rows returned"""
    where: questionnaire_questions_bool_exp
  ): [questionnaire_questions!]!

  """An aggregated array relationship"""
  questionnaire_questions_aggregate(
    """distinct select on columns"""
    distinct_on: [questionnaire_questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questionnaire_questions_order_by!]

    """filter the rows returned"""
    where: questionnaire_questions_bool_exp
  ): questionnaire_questions_aggregate!
  resource_path: String!
  resubmit_allowed: Boolean
  updated_at: timestamptz!
}

"""
aggregated selection of "questionnaires"
"""
type questionnaires_aggregate {
  aggregate: questionnaires_aggregate_fields
  nodes: [questionnaires!]!
}

"""
aggregate fields of "questionnaires"
"""
type questionnaires_aggregate_fields {
  count(columns: [questionnaires_select_column!], distinct: Boolean): Int
  max: questionnaires_max_fields
  min: questionnaires_min_fields
}

"""
order by aggregate values of table "questionnaires"
"""
input questionnaires_aggregate_order_by {
  count: order_by
  max: questionnaires_max_order_by
  min: questionnaires_min_order_by
}

"""
input type for inserting array relation for remote table "questionnaires"
"""
input questionnaires_arr_rel_insert_input {
  data: [questionnaires_insert_input!]!
  on_conflict: questionnaires_on_conflict
}

"""
Boolean expression to filter rows from the table "questionnaires". All fields are combined with a logical 'AND'.
"""
input questionnaires_bool_exp {
  _and: [questionnaires_bool_exp]
  _not: questionnaires_bool_exp
  _or: [questionnaires_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  expiration_date: timestamptz_comparison_exp
  info_notifications: info_notifications_bool_exp
  questionnaire_id: String_comparison_exp
  questionnaire_questions: questionnaire_questions_bool_exp
  resource_path: String_comparison_exp
  resubmit_allowed: Boolean_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "questionnaires"
"""
enum questionnaires_constraint {
  """unique or primary key constraint"""
  pk__questionnaires
}

"""
input type for inserting data into table "questionnaires"
"""
input questionnaires_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  expiration_date: timestamptz
  info_notifications: info_notifications_arr_rel_insert_input
  questionnaire_id: String
  questionnaire_questions: questionnaire_questions_arr_rel_insert_input
  resource_path: String
  resubmit_allowed: Boolean
  updated_at: timestamptz
}

"""aggregate max on columns"""
type questionnaires_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  expiration_date: timestamptz
  questionnaire_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "questionnaires"
"""
input questionnaires_max_order_by {
  created_at: order_by
  deleted_at: order_by
  expiration_date: order_by
  questionnaire_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type questionnaires_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  expiration_date: timestamptz
  questionnaire_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "questionnaires"
"""
input questionnaires_min_order_by {
  created_at: order_by
  deleted_at: order_by
  expiration_date: order_by
  questionnaire_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "questionnaires"
"""
type questionnaires_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [questionnaires!]!
}

"""
input type for inserting object relation for remote table "questionnaires"
"""
input questionnaires_obj_rel_insert_input {
  data: questionnaires_insert_input!
  on_conflict: questionnaires_on_conflict
}

"""
on conflict condition type for table "questionnaires"
"""
input questionnaires_on_conflict {
  constraint: questionnaires_constraint!
  update_columns: [questionnaires_update_column!]!
  where: questionnaires_bool_exp
}

"""
ordering options when selecting data from "questionnaires"
"""
input questionnaires_order_by {
  created_at: order_by
  deleted_at: order_by
  expiration_date: order_by
  info_notifications_aggregate: info_notifications_aggregate_order_by
  questionnaire_id: order_by
  questionnaire_questions_aggregate: questionnaire_questions_aggregate_order_by
  resource_path: order_by
  resubmit_allowed: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "questionnaires"
"""
input questionnaires_pk_columns_input {
  questionnaire_id: String!
}

"""
select columns of table "questionnaires"
"""
enum questionnaires_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  expiration_date

  """column name"""
  questionnaire_id

  """column name"""
  resource_path

  """column name"""
  resubmit_allowed

  """column name"""
  updated_at
}

"""
input type for updating data in table "questionnaires"
"""
input questionnaires_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  expiration_date: timestamptz
  questionnaire_id: String
  resource_path: String
  resubmit_allowed: Boolean
  updated_at: timestamptz
}

"""
update columns of table "questionnaires"
"""
enum questionnaires_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  expiration_date

  """column name"""
  questionnaire_id

  """column name"""
  resource_path

  """column name"""
  resubmit_allowed

  """column name"""
  updated_at
}

"""
columns and relationships of "questions"
"""
type questions {
  answers: _text
  answers_rendered: _text
  answers_url: _text
  country: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  difficulty_level: smallint!
  explanation: String
  explanation_rendered: String
  explanation_url: String
  explanation_wrong_answer: _text
  explanation_wrong_answer_rendered: _text
  explanation_wrong_answer_url: _text
  is_waiting_for_render: Boolean
  master_question_id: String
  question: String!

  """An object relationship"""
  questionByMasterQuestionId: questions
  question_id: String!
  question_rendered: String
  question_url: String

  """An array relationship"""
  questions(
    """distinct select on columns"""
    distinct_on: [questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_order_by!]

    """filter the rows returned"""
    where: questions_bool_exp
  ): [questions!]!

  """An aggregated array relationship"""
  questions_aggregate(
    """distinct select on columns"""
    distinct_on: [questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_order_by!]

    """filter the rows returned"""
    where: questions_bool_exp
  ): questions_aggregate!

  """An array relationship"""
  quizsets(
    """distinct select on columns"""
    distinct_on: [quizsets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizsets_order_by!]

    """filter the rows returned"""
    where: quizsets_bool_exp
  ): [quizsets!]!

  """An aggregated array relationship"""
  quizsets_aggregate(
    """distinct select on columns"""
    distinct_on: [quizsets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizsets_order_by!]

    """filter the rows returned"""
    where: quizsets_bool_exp
  ): quizsets_aggregate!
  rendering_question: Boolean
  resource_path: String
  updated_at: timestamptz!
}

"""
aggregated selection of "questions"
"""
type questions_aggregate {
  aggregate: questions_aggregate_fields
  nodes: [questions!]!
}

"""
aggregate fields of "questions"
"""
type questions_aggregate_fields {
  avg: questions_avg_fields
  count(columns: [questions_select_column!], distinct: Boolean): Int
  max: questions_max_fields
  min: questions_min_fields
  stddev: questions_stddev_fields
  stddev_pop: questions_stddev_pop_fields
  stddev_samp: questions_stddev_samp_fields
  sum: questions_sum_fields
  var_pop: questions_var_pop_fields
  var_samp: questions_var_samp_fields
  variance: questions_variance_fields
}

"""
order by aggregate values of table "questions"
"""
input questions_aggregate_order_by {
  avg: questions_avg_order_by
  count: order_by
  max: questions_max_order_by
  min: questions_min_order_by
  stddev: questions_stddev_order_by
  stddev_pop: questions_stddev_pop_order_by
  stddev_samp: questions_stddev_samp_order_by
  sum: questions_sum_order_by
  var_pop: questions_var_pop_order_by
  var_samp: questions_var_samp_order_by
  variance: questions_variance_order_by
}

"""
input type for inserting array relation for remote table "questions"
"""
input questions_arr_rel_insert_input {
  data: [questions_insert_input!]!
  on_conflict: questions_on_conflict
}

"""aggregate avg on columns"""
type questions_avg_fields {
  difficulty_level: Float
}

"""
order by avg() on columns of table "questions"
"""
input questions_avg_order_by {
  difficulty_level: order_by
}

"""
Boolean expression to filter rows from the table "questions". All fields are combined with a logical 'AND'.
"""
input questions_bool_exp {
  _and: [questions_bool_exp]
  _not: questions_bool_exp
  _or: [questions_bool_exp]
  answers: _text_comparison_exp
  answers_rendered: _text_comparison_exp
  answers_url: _text_comparison_exp
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  difficulty_level: smallint_comparison_exp
  explanation: String_comparison_exp
  explanation_rendered: String_comparison_exp
  explanation_url: String_comparison_exp
  explanation_wrong_answer: _text_comparison_exp
  explanation_wrong_answer_rendered: _text_comparison_exp
  explanation_wrong_answer_url: _text_comparison_exp
  is_waiting_for_render: Boolean_comparison_exp
  master_question_id: String_comparison_exp
  question: String_comparison_exp
  questionByMasterQuestionId: questions_bool_exp
  question_id: String_comparison_exp
  question_rendered: String_comparison_exp
  question_url: String_comparison_exp
  questions: questions_bool_exp
  quizsets: quizsets_bool_exp
  rendering_question: Boolean_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "questions"
"""
enum questions_constraint {
  """unique or primary key constraint"""
  questions_pk
}

"""
input type for incrementing integer column in table "questions"
"""
input questions_inc_input {
  difficulty_level: smallint
}

"""
input type for inserting data into table "questions"
"""
input questions_insert_input {
  answers: _text
  answers_rendered: _text
  answers_url: _text
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  difficulty_level: smallint
  explanation: String
  explanation_rendered: String
  explanation_url: String
  explanation_wrong_answer: _text
  explanation_wrong_answer_rendered: _text
  explanation_wrong_answer_url: _text
  is_waiting_for_render: Boolean
  master_question_id: String
  question: String
  questionByMasterQuestionId: questions_obj_rel_insert_input
  question_id: String
  question_rendered: String
  question_url: String
  questions: questions_arr_rel_insert_input
  quizsets: quizsets_arr_rel_insert_input
  rendering_question: Boolean
  resource_path: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type questions_max_fields {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  difficulty_level: smallint
  explanation: String
  explanation_rendered: String
  explanation_url: String
  master_question_id: String
  question: String
  question_id: String
  question_rendered: String
  question_url: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "questions"
"""
input questions_max_order_by {
  country: order_by
  created_at: order_by
  deleted_at: order_by
  difficulty_level: order_by
  explanation: order_by
  explanation_rendered: order_by
  explanation_url: order_by
  master_question_id: order_by
  question: order_by
  question_id: order_by
  question_rendered: order_by
  question_url: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type questions_min_fields {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  difficulty_level: smallint
  explanation: String
  explanation_rendered: String
  explanation_url: String
  master_question_id: String
  question: String
  question_id: String
  question_rendered: String
  question_url: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "questions"
"""
input questions_min_order_by {
  country: order_by
  created_at: order_by
  deleted_at: order_by
  difficulty_level: order_by
  explanation: order_by
  explanation_rendered: order_by
  explanation_url: order_by
  master_question_id: order_by
  question: order_by
  question_id: order_by
  question_rendered: order_by
  question_url: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "questions"
"""
type questions_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [questions!]!
}

"""
input type for inserting object relation for remote table "questions"
"""
input questions_obj_rel_insert_input {
  data: questions_insert_input!
  on_conflict: questions_on_conflict
}

"""
on conflict condition type for table "questions"
"""
input questions_on_conflict {
  constraint: questions_constraint!
  update_columns: [questions_update_column!]!
  where: questions_bool_exp
}

"""
ordering options when selecting data from "questions"
"""
input questions_order_by {
  answers: order_by
  answers_rendered: order_by
  answers_url: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  difficulty_level: order_by
  explanation: order_by
  explanation_rendered: order_by
  explanation_url: order_by
  explanation_wrong_answer: order_by
  explanation_wrong_answer_rendered: order_by
  explanation_wrong_answer_url: order_by
  is_waiting_for_render: order_by
  master_question_id: order_by
  question: order_by
  questionByMasterQuestionId: questions_order_by
  question_id: order_by
  question_rendered: order_by
  question_url: order_by
  questions_aggregate: questions_aggregate_order_by
  quizsets_aggregate: quizsets_aggregate_order_by
  rendering_question: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "questions"
"""
input questions_pk_columns_input {
  question_id: String!
}

"""
select columns of table "questions"
"""
enum questions_select_column {
  """column name"""
  answers

  """column name"""
  answers_rendered

  """column name"""
  answers_url

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  difficulty_level

  """column name"""
  explanation

  """column name"""
  explanation_rendered

  """column name"""
  explanation_url

  """column name"""
  explanation_wrong_answer

  """column name"""
  explanation_wrong_answer_rendered

  """column name"""
  explanation_wrong_answer_url

  """column name"""
  is_waiting_for_render

  """column name"""
  master_question_id

  """column name"""
  question

  """column name"""
  question_id

  """column name"""
  question_rendered

  """column name"""
  question_url

  """column name"""
  rendering_question

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "questions"
"""
input questions_set_input {
  answers: _text
  answers_rendered: _text
  answers_url: _text
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  difficulty_level: smallint
  explanation: String
  explanation_rendered: String
  explanation_url: String
  explanation_wrong_answer: _text
  explanation_wrong_answer_rendered: _text
  explanation_wrong_answer_url: _text
  is_waiting_for_render: Boolean
  master_question_id: String
  question: String
  question_id: String
  question_rendered: String
  question_url: String
  rendering_question: Boolean
  resource_path: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type questions_stddev_fields {
  difficulty_level: Float
}

"""
order by stddev() on columns of table "questions"
"""
input questions_stddev_order_by {
  difficulty_level: order_by
}

"""aggregate stddev_pop on columns"""
type questions_stddev_pop_fields {
  difficulty_level: Float
}

"""
order by stddev_pop() on columns of table "questions"
"""
input questions_stddev_pop_order_by {
  difficulty_level: order_by
}

"""aggregate stddev_samp on columns"""
type questions_stddev_samp_fields {
  difficulty_level: Float
}

"""
order by stddev_samp() on columns of table "questions"
"""
input questions_stddev_samp_order_by {
  difficulty_level: order_by
}

"""aggregate sum on columns"""
type questions_sum_fields {
  difficulty_level: smallint
}

"""
order by sum() on columns of table "questions"
"""
input questions_sum_order_by {
  difficulty_level: order_by
}

"""
update columns of table "questions"
"""
enum questions_update_column {
  """column name"""
  answers

  """column name"""
  answers_rendered

  """column name"""
  answers_url

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  difficulty_level

  """column name"""
  explanation

  """column name"""
  explanation_rendered

  """column name"""
  explanation_url

  """column name"""
  explanation_wrong_answer

  """column name"""
  explanation_wrong_answer_rendered

  """column name"""
  explanation_wrong_answer_url

  """column name"""
  is_waiting_for_render

  """column name"""
  master_question_id

  """column name"""
  question

  """column name"""
  question_id

  """column name"""
  question_rendered

  """column name"""
  question_url

  """column name"""
  rendering_question

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type questions_var_pop_fields {
  difficulty_level: Float
}

"""
order by var_pop() on columns of table "questions"
"""
input questions_var_pop_order_by {
  difficulty_level: order_by
}

"""aggregate var_samp on columns"""
type questions_var_samp_fields {
  difficulty_level: Float
}

"""
order by var_samp() on columns of table "questions"
"""
input questions_var_samp_order_by {
  difficulty_level: order_by
}

"""aggregate variance on columns"""
type questions_variance_fields {
  difficulty_level: Float
}

"""
order by variance() on columns of table "questions"
"""
input questions_variance_order_by {
  difficulty_level: order_by
}

"""
columns and relationships of "quiz_sets"
"""
type quiz_sets {
  created_at: timestamptz!
  deleted_at: timestamptz

  """An object relationship"""
  learning_objective: learning_objectives!
  lo_id: String!
  quiz_external_ids: _text!
  quiz_set_id: String!

  """An array relationship"""
  quiz_sets_quizzes(
    """distinct select on columns"""
    distinct_on: [quizzes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizzes_order_by!]

    """filter the rows returned"""
    where: quizzes_bool_exp
  ): [quizzes!]!

  """An aggregated array relationship"""
  quiz_sets_quizzes_aggregate(
    """distinct select on columns"""
    distinct_on: [quizzes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizzes_order_by!]

    """filter the rows returned"""
    where: quizzes_bool_exp
  ): quizzes_aggregate!
  resource_path: String!
  status: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "quiz_sets"
"""
type quiz_sets_aggregate {
  aggregate: quiz_sets_aggregate_fields
  nodes: [quiz_sets!]!
}

"""
aggregate fields of "quiz_sets"
"""
type quiz_sets_aggregate_fields {
  count(columns: [quiz_sets_select_column!], distinct: Boolean): Int
  max: quiz_sets_max_fields
  min: quiz_sets_min_fields
}

"""
order by aggregate values of table "quiz_sets"
"""
input quiz_sets_aggregate_order_by {
  count: order_by
  max: quiz_sets_max_order_by
  min: quiz_sets_min_order_by
}

"""
input type for inserting array relation for remote table "quiz_sets"
"""
input quiz_sets_arr_rel_insert_input {
  data: [quiz_sets_insert_input!]!
  on_conflict: quiz_sets_on_conflict
}

"""
Boolean expression to filter rows from the table "quiz_sets". All fields are combined with a logical 'AND'.
"""
input quiz_sets_bool_exp {
  _and: [quiz_sets_bool_exp]
  _not: quiz_sets_bool_exp
  _or: [quiz_sets_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  learning_objective: learning_objectives_bool_exp
  lo_id: String_comparison_exp
  quiz_external_ids: _text_comparison_exp
  quiz_set_id: String_comparison_exp
  quiz_sets_quizzes: quizzes_bool_exp
  resource_path: String_comparison_exp
  status: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "quiz_sets"
"""
enum quiz_sets_constraint {
  """unique or primary key constraint"""
  quiz_sets_approved_lo_id_idx

  """unique or primary key constraint"""
  quiz_sets_pk
}

"""
input type for inserting data into table "quiz_sets"
"""
input quiz_sets_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  learning_objective: learning_objectives_obj_rel_insert_input
  lo_id: String
  quiz_external_ids: _text
  quiz_set_id: String
  quiz_sets_quizzes: quizzes_arr_rel_insert_input
  resource_path: String
  status: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type quiz_sets_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  lo_id: String
  quiz_set_id: String
  resource_path: String
  status: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "quiz_sets"
"""
input quiz_sets_max_order_by {
  created_at: order_by
  deleted_at: order_by
  lo_id: order_by
  quiz_set_id: order_by
  resource_path: order_by
  status: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type quiz_sets_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  lo_id: String
  quiz_set_id: String
  resource_path: String
  status: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "quiz_sets"
"""
input quiz_sets_min_order_by {
  created_at: order_by
  deleted_at: order_by
  lo_id: order_by
  quiz_set_id: order_by
  resource_path: order_by
  status: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "quiz_sets"
"""
type quiz_sets_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [quiz_sets!]!
}

"""
input type for inserting object relation for remote table "quiz_sets"
"""
input quiz_sets_obj_rel_insert_input {
  data: quiz_sets_insert_input!
  on_conflict: quiz_sets_on_conflict
}

"""
on conflict condition type for table "quiz_sets"
"""
input quiz_sets_on_conflict {
  constraint: quiz_sets_constraint!
  update_columns: [quiz_sets_update_column!]!
  where: quiz_sets_bool_exp
}

"""
ordering options when selecting data from "quiz_sets"
"""
input quiz_sets_order_by {
  created_at: order_by
  deleted_at: order_by
  learning_objective: learning_objectives_order_by
  lo_id: order_by
  quiz_external_ids: order_by
  quiz_set_id: order_by
  quiz_sets_quizzes_aggregate: quizzes_aggregate_order_by
  resource_path: order_by
  status: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "quiz_sets"
"""
input quiz_sets_pk_columns_input {
  quiz_set_id: String!
}

"""
select columns of table "quiz_sets"
"""
enum quiz_sets_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  lo_id

  """column name"""
  quiz_external_ids

  """column name"""
  quiz_set_id

  """column name"""
  resource_path

  """column name"""
  status

  """column name"""
  updated_at
}

"""
input type for updating data in table "quiz_sets"
"""
input quiz_sets_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  lo_id: String
  quiz_external_ids: _text
  quiz_set_id: String
  resource_path: String
  status: String
  updated_at: timestamptz
}

"""
update columns of table "quiz_sets"
"""
enum quiz_sets_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  lo_id

  """column name"""
  quiz_external_ids

  """column name"""
  quiz_set_id

  """column name"""
  resource_path

  """column name"""
  status

  """column name"""
  updated_at
}

"""
columns and relationships of "quizsets"
"""
type quizsets {
  created_at: timestamptz!
  deleted_at: timestamptz
  display_order: Int

  """An object relationship"""
  learning_objective: learning_objectives!
  lo_id: String!

  """An object relationship"""
  question: questions!
  question_id: String!
  resource_path: String
  updated_at: timestamptz!
}

"""
aggregated selection of "quizsets"
"""
type quizsets_aggregate {
  aggregate: quizsets_aggregate_fields
  nodes: [quizsets!]!
}

"""
aggregate fields of "quizsets"
"""
type quizsets_aggregate_fields {
  avg: quizsets_avg_fields
  count(columns: [quizsets_select_column!], distinct: Boolean): Int
  max: quizsets_max_fields
  min: quizsets_min_fields
  stddev: quizsets_stddev_fields
  stddev_pop: quizsets_stddev_pop_fields
  stddev_samp: quizsets_stddev_samp_fields
  sum: quizsets_sum_fields
  var_pop: quizsets_var_pop_fields
  var_samp: quizsets_var_samp_fields
  variance: quizsets_variance_fields
}

"""
order by aggregate values of table "quizsets"
"""
input quizsets_aggregate_order_by {
  avg: quizsets_avg_order_by
  count: order_by
  max: quizsets_max_order_by
  min: quizsets_min_order_by
  stddev: quizsets_stddev_order_by
  stddev_pop: quizsets_stddev_pop_order_by
  stddev_samp: quizsets_stddev_samp_order_by
  sum: quizsets_sum_order_by
  var_pop: quizsets_var_pop_order_by
  var_samp: quizsets_var_samp_order_by
  variance: quizsets_variance_order_by
}

"""
input type for inserting array relation for remote table "quizsets"
"""
input quizsets_arr_rel_insert_input {
  data: [quizsets_insert_input!]!
  on_conflict: quizsets_on_conflict
}

"""aggregate avg on columns"""
type quizsets_avg_fields {
  display_order: Float
}

"""
order by avg() on columns of table "quizsets"
"""
input quizsets_avg_order_by {
  display_order: order_by
}

"""
Boolean expression to filter rows from the table "quizsets". All fields are combined with a logical 'AND'.
"""
input quizsets_bool_exp {
  _and: [quizsets_bool_exp]
  _not: quizsets_bool_exp
  _or: [quizsets_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  display_order: Int_comparison_exp
  learning_objective: learning_objectives_bool_exp
  lo_id: String_comparison_exp
  question: questions_bool_exp
  question_id: String_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "quizsets"
"""
enum quizsets_constraint {
  """unique or primary key constraint"""
  quizsets_pk
}

"""
input type for incrementing integer column in table "quizsets"
"""
input quizsets_inc_input {
  display_order: Int
}

"""
input type for inserting data into table "quizsets"
"""
input quizsets_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: Int
  learning_objective: learning_objectives_obj_rel_insert_input
  lo_id: String
  question: questions_obj_rel_insert_input
  question_id: String
  resource_path: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type quizsets_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: Int
  lo_id: String
  question_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "quizsets"
"""
input quizsets_max_order_by {
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  lo_id: order_by
  question_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type quizsets_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: Int
  lo_id: String
  question_id: String
  resource_path: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "quizsets"
"""
input quizsets_min_order_by {
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  lo_id: order_by
  question_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "quizsets"
"""
type quizsets_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [quizsets!]!
}

"""
input type for inserting object relation for remote table "quizsets"
"""
input quizsets_obj_rel_insert_input {
  data: quizsets_insert_input!
  on_conflict: quizsets_on_conflict
}

"""
on conflict condition type for table "quizsets"
"""
input quizsets_on_conflict {
  constraint: quizsets_constraint!
  update_columns: [quizsets_update_column!]!
  where: quizsets_bool_exp
}

"""
ordering options when selecting data from "quizsets"
"""
input quizsets_order_by {
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  learning_objective: learning_objectives_order_by
  lo_id: order_by
  question: questions_order_by
  question_id: order_by
  resource_path: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "quizsets"
"""
input quizsets_pk_columns_input {
  lo_id: String!
  question_id: String!
}

"""
select columns of table "quizsets"
"""
enum quizsets_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  lo_id

  """column name"""
  question_id

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""
input type for updating data in table "quizsets"
"""
input quizsets_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: Int
  lo_id: String
  question_id: String
  resource_path: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type quizsets_stddev_fields {
  display_order: Float
}

"""
order by stddev() on columns of table "quizsets"
"""
input quizsets_stddev_order_by {
  display_order: order_by
}

"""aggregate stddev_pop on columns"""
type quizsets_stddev_pop_fields {
  display_order: Float
}

"""
order by stddev_pop() on columns of table "quizsets"
"""
input quizsets_stddev_pop_order_by {
  display_order: order_by
}

"""aggregate stddev_samp on columns"""
type quizsets_stddev_samp_fields {
  display_order: Float
}

"""
order by stddev_samp() on columns of table "quizsets"
"""
input quizsets_stddev_samp_order_by {
  display_order: order_by
}

"""aggregate sum on columns"""
type quizsets_sum_fields {
  display_order: Int
}

"""
order by sum() on columns of table "quizsets"
"""
input quizsets_sum_order_by {
  display_order: order_by
}

"""
update columns of table "quizsets"
"""
enum quizsets_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  lo_id

  """column name"""
  question_id

  """column name"""
  resource_path

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type quizsets_var_pop_fields {
  display_order: Float
}

"""
order by var_pop() on columns of table "quizsets"
"""
input quizsets_var_pop_order_by {
  display_order: order_by
}

"""aggregate var_samp on columns"""
type quizsets_var_samp_fields {
  display_order: Float
}

"""
order by var_samp() on columns of table "quizsets"
"""
input quizsets_var_samp_order_by {
  display_order: order_by
}

"""aggregate variance on columns"""
type quizsets_variance_fields {
  display_order: Float
}

"""
order by variance() on columns of table "quizsets"
"""
input quizsets_variance_order_by {
  display_order: order_by
}

"""
columns and relationships of "quizzes"
"""
type quizzes {
  approved_by: String!
  country: String!
  created_at: timestamptz!
  created_by: String!
  deleted_at: timestamptz
  difficulty_level: Int
  explanation(
    """JSON select path"""
    path: String
  ): jsonb!
  external_id: String!
  kind: String!
  lo_ids: _text
  options(
    """JSON select path"""
    path: String
  ): jsonb!
  question(
    """JSON select path"""
    path: String
  ): jsonb!
  quiz_id: String!

  """An array relationship"""
  quiz_sets(
    """distinct select on columns"""
    distinct_on: [quiz_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quiz_sets_order_by!]

    """filter the rows returned"""
    where: quiz_sets_bool_exp
  ): [quiz_sets!]!

  """An aggregated array relationship"""
  quiz_sets_aggregate(
    """distinct select on columns"""
    distinct_on: [quiz_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quiz_sets_order_by!]

    """filter the rows returned"""
    where: quiz_sets_bool_exp
  ): quiz_sets_aggregate!
  resource_path: String!
  school_id: Int!
  status: String!
  tagged_los: _text
  updated_at: timestamptz!
}

"""
aggregated selection of "quizzes"
"""
type quizzes_aggregate {
  aggregate: quizzes_aggregate_fields
  nodes: [quizzes!]!
}

"""
aggregate fields of "quizzes"
"""
type quizzes_aggregate_fields {
  avg: quizzes_avg_fields
  count(columns: [quizzes_select_column!], distinct: Boolean): Int
  max: quizzes_max_fields
  min: quizzes_min_fields
  stddev: quizzes_stddev_fields
  stddev_pop: quizzes_stddev_pop_fields
  stddev_samp: quizzes_stddev_samp_fields
  sum: quizzes_sum_fields
  var_pop: quizzes_var_pop_fields
  var_samp: quizzes_var_samp_fields
  variance: quizzes_variance_fields
}

"""
order by aggregate values of table "quizzes"
"""
input quizzes_aggregate_order_by {
  avg: quizzes_avg_order_by
  count: order_by
  max: quizzes_max_order_by
  min: quizzes_min_order_by
  stddev: quizzes_stddev_order_by
  stddev_pop: quizzes_stddev_pop_order_by
  stddev_samp: quizzes_stddev_samp_order_by
  sum: quizzes_sum_order_by
  var_pop: quizzes_var_pop_order_by
  var_samp: quizzes_var_samp_order_by
  variance: quizzes_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input quizzes_append_input {
  explanation: jsonb
  options: jsonb
  question: jsonb
}

"""
input type for inserting array relation for remote table "quizzes"
"""
input quizzes_arr_rel_insert_input {
  data: [quizzes_insert_input!]!
  on_conflict: quizzes_on_conflict
}

"""aggregate avg on columns"""
type quizzes_avg_fields {
  difficulty_level: Float
  school_id: Float
}

"""
order by avg() on columns of table "quizzes"
"""
input quizzes_avg_order_by {
  difficulty_level: order_by
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "quizzes". All fields are combined with a logical 'AND'.
"""
input quizzes_bool_exp {
  _and: [quizzes_bool_exp]
  _not: quizzes_bool_exp
  _or: [quizzes_bool_exp]
  approved_by: String_comparison_exp
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  created_by: String_comparison_exp
  deleted_at: timestamptz_comparison_exp
  difficulty_level: Int_comparison_exp
  explanation: jsonb_comparison_exp
  external_id: String_comparison_exp
  kind: String_comparison_exp
  lo_ids: _text_comparison_exp
  options: jsonb_comparison_exp
  question: jsonb_comparison_exp
  quiz_id: String_comparison_exp
  quiz_sets: quiz_sets_bool_exp
  resource_path: String_comparison_exp
  school_id: Int_comparison_exp
  status: String_comparison_exp
  tagged_los: _text_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "quizzes"
"""
enum quizzes_constraint {
  """unique or primary key constraint"""
  quizs_pk
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input quizzes_delete_at_path_input {
  explanation: [String]
  options: [String]
  question: [String]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input quizzes_delete_elem_input {
  explanation: Int
  options: Int
  question: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input quizzes_delete_key_input {
  explanation: String
  options: String
  question: String
}

"""
input type for incrementing integer column in table "quizzes"
"""
input quizzes_inc_input {
  difficulty_level: Int
  school_id: Int
}

"""
input type for inserting data into table "quizzes"
"""
input quizzes_insert_input {
  approved_by: String
  country: String
  created_at: timestamptz
  created_by: String
  deleted_at: timestamptz
  difficulty_level: Int
  explanation: jsonb
  external_id: String
  kind: String
  lo_ids: _text
  options: jsonb
  question: jsonb
  quiz_id: String
  quiz_sets: quiz_sets_arr_rel_insert_input
  resource_path: String
  school_id: Int
  status: String
  tagged_los: _text
  updated_at: timestamptz
}

"""aggregate max on columns"""
type quizzes_max_fields {
  approved_by: String
  country: String
  created_at: timestamptz
  created_by: String
  deleted_at: timestamptz
  difficulty_level: Int
  external_id: String
  kind: String
  quiz_id: String
  resource_path: String
  school_id: Int
  status: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "quizzes"
"""
input quizzes_max_order_by {
  approved_by: order_by
  country: order_by
  created_at: order_by
  created_by: order_by
  deleted_at: order_by
  difficulty_level: order_by
  external_id: order_by
  kind: order_by
  quiz_id: order_by
  resource_path: order_by
  school_id: order_by
  status: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type quizzes_min_fields {
  approved_by: String
  country: String
  created_at: timestamptz
  created_by: String
  deleted_at: timestamptz
  difficulty_level: Int
  external_id: String
  kind: String
  quiz_id: String
  resource_path: String
  school_id: Int
  status: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "quizzes"
"""
input quizzes_min_order_by {
  approved_by: order_by
  country: order_by
  created_at: order_by
  created_by: order_by
  deleted_at: order_by
  difficulty_level: order_by
  external_id: order_by
  kind: order_by
  quiz_id: order_by
  resource_path: order_by
  school_id: order_by
  status: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "quizzes"
"""
type quizzes_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [quizzes!]!
}

"""
input type for inserting object relation for remote table "quizzes"
"""
input quizzes_obj_rel_insert_input {
  data: quizzes_insert_input!
  on_conflict: quizzes_on_conflict
}

"""
on conflict condition type for table "quizzes"
"""
input quizzes_on_conflict {
  constraint: quizzes_constraint!
  update_columns: [quizzes_update_column!]!
  where: quizzes_bool_exp
}

"""
ordering options when selecting data from "quizzes"
"""
input quizzes_order_by {
  approved_by: order_by
  country: order_by
  created_at: order_by
  created_by: order_by
  deleted_at: order_by
  difficulty_level: order_by
  explanation: order_by
  external_id: order_by
  kind: order_by
  lo_ids: order_by
  options: order_by
  question: order_by
  quiz_id: order_by
  quiz_sets_aggregate: quiz_sets_aggregate_order_by
  resource_path: order_by
  school_id: order_by
  status: order_by
  tagged_los: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "quizzes"
"""
input quizzes_pk_columns_input {
  quiz_id: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input quizzes_prepend_input {
  explanation: jsonb
  options: jsonb
  question: jsonb
}

"""
select columns of table "quizzes"
"""
enum quizzes_select_column {
  """column name"""
  approved_by

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  created_by

  """column name"""
  deleted_at

  """column name"""
  difficulty_level

  """column name"""
  explanation

  """column name"""
  external_id

  """column name"""
  kind

  """column name"""
  lo_ids

  """column name"""
  options

  """column name"""
  question

  """column name"""
  quiz_id

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  status

  """column name"""
  tagged_los

  """column name"""
  updated_at
}

"""
input type for updating data in table "quizzes"
"""
input quizzes_set_input {
  approved_by: String
  country: String
  created_at: timestamptz
  created_by: String
  deleted_at: timestamptz
  difficulty_level: Int
  explanation: jsonb
  external_id: String
  kind: String
  lo_ids: _text
  options: jsonb
  question: jsonb
  quiz_id: String
  resource_path: String
  school_id: Int
  status: String
  tagged_los: _text
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type quizzes_stddev_fields {
  difficulty_level: Float
  school_id: Float
}

"""
order by stddev() on columns of table "quizzes"
"""
input quizzes_stddev_order_by {
  difficulty_level: order_by
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type quizzes_stddev_pop_fields {
  difficulty_level: Float
  school_id: Float
}

"""
order by stddev_pop() on columns of table "quizzes"
"""
input quizzes_stddev_pop_order_by {
  difficulty_level: order_by
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type quizzes_stddev_samp_fields {
  difficulty_level: Float
  school_id: Float
}

"""
order by stddev_samp() on columns of table "quizzes"
"""
input quizzes_stddev_samp_order_by {
  difficulty_level: order_by
  school_id: order_by
}

"""aggregate sum on columns"""
type quizzes_sum_fields {
  difficulty_level: Int
  school_id: Int
}

"""
order by sum() on columns of table "quizzes"
"""
input quizzes_sum_order_by {
  difficulty_level: order_by
  school_id: order_by
}

"""
update columns of table "quizzes"
"""
enum quizzes_update_column {
  """column name"""
  approved_by

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  created_by

  """column name"""
  deleted_at

  """column name"""
  difficulty_level

  """column name"""
  explanation

  """column name"""
  external_id

  """column name"""
  kind

  """column name"""
  lo_ids

  """column name"""
  options

  """column name"""
  question

  """column name"""
  quiz_id

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  status

  """column name"""
  tagged_los

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type quizzes_var_pop_fields {
  difficulty_level: Float
  school_id: Float
}

"""
order by var_pop() on columns of table "quizzes"
"""
input quizzes_var_pop_order_by {
  difficulty_level: order_by
  school_id: order_by
}

"""aggregate var_samp on columns"""
type quizzes_var_samp_fields {
  difficulty_level: Float
  school_id: Float
}

"""
order by var_samp() on columns of table "quizzes"
"""
input quizzes_var_samp_order_by {
  difficulty_level: order_by
  school_id: order_by
}

"""aggregate variance on columns"""
type quizzes_variance_fields {
  difficulty_level: Float
  school_id: Float
}

"""
order by variance() on columns of table "quizzes"
"""
input quizzes_variance_order_by {
  difficulty_level: order_by
  school_id: order_by
}

"""
columns and relationships of "role"
"""
type role {
  created_at: timestamptz!
  deleted_at: timestamptz

  """An array relationship"""
  granted_roles(
    """distinct select on columns"""
    distinct_on: [granted_role_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [granted_role_order_by!]

    """filter the rows returned"""
    where: granted_role_bool_exp
  ): [granted_role!]!

  """An aggregated array relationship"""
  granted_roles_aggregate(
    """distinct select on columns"""
    distinct_on: [granted_role_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [granted_role_order_by!]

    """filter the rows returned"""
    where: granted_role_bool_exp
  ): granted_role_aggregate!
  is_system: Boolean
  resource_path: String!
  role_id: String!
  role_name: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "role"
"""
type role_aggregate {
  aggregate: role_aggregate_fields
  nodes: [role!]!
}

"""
aggregate fields of "role"
"""
type role_aggregate_fields {
  count(columns: [role_select_column!], distinct: Boolean): Int
  max: role_max_fields
  min: role_min_fields
}

"""
order by aggregate values of table "role"
"""
input role_aggregate_order_by {
  count: order_by
  max: role_max_order_by
  min: role_min_order_by
}

"""
input type for inserting array relation for remote table "role"
"""
input role_arr_rel_insert_input {
  data: [role_insert_input!]!
  on_conflict: role_on_conflict
}

"""
Boolean expression to filter rows from the table "role". All fields are combined with a logical 'AND'.
"""
input role_bool_exp {
  _and: [role_bool_exp]
  _not: role_bool_exp
  _or: [role_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  granted_roles: granted_role_bool_exp
  is_system: Boolean_comparison_exp
  resource_path: String_comparison_exp
  role_id: String_comparison_exp
  role_name: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "role"
"""
enum role_constraint {
  """unique or primary key constraint"""
  pk__role
}

"""
input type for inserting data into table "role"
"""
input role_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  granted_roles: granted_role_arr_rel_insert_input
  is_system: Boolean
  resource_path: String
  role_id: String
  role_name: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type role_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  role_id: String
  role_name: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "role"
"""
input role_max_order_by {
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  role_id: order_by
  role_name: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type role_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  role_id: String
  role_name: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "role"
"""
input role_min_order_by {
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  role_id: order_by
  role_name: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "role"
"""
type role_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [role!]!
}

"""
input type for inserting object relation for remote table "role"
"""
input role_obj_rel_insert_input {
  data: role_insert_input!
  on_conflict: role_on_conflict
}

"""
on conflict condition type for table "role"
"""
input role_on_conflict {
  constraint: role_constraint!
  update_columns: [role_update_column!]!
  where: role_bool_exp
}

"""
ordering options when selecting data from "role"
"""
input role_order_by {
  created_at: order_by
  deleted_at: order_by
  granted_roles_aggregate: granted_role_aggregate_order_by
  is_system: order_by
  resource_path: order_by
  role_id: order_by
  role_name: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "role"
"""
input role_pk_columns_input {
  role_id: String!
}

"""
select columns of table "role"
"""
enum role_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  is_system

  """column name"""
  resource_path

  """column name"""
  role_id

  """column name"""
  role_name

  """column name"""
  updated_at
}

"""
input type for updating data in table "role"
"""
input role_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  is_system: Boolean
  resource_path: String
  role_id: String
  role_name: String
  updated_at: timestamptz
}

"""
update columns of table "role"
"""
enum role_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  is_system

  """column name"""
  resource_path

  """column name"""
  role_id

  """column name"""
  role_name

  """column name"""
  updated_at
}

"""
columns and relationships of "scheduler"
"""
type scheduler {
  created_at: timestamptz!
  deleted_at: timestamptz
  end_date: timestamptz!
  freq: frequency
  resource_path: String!
  scheduler_id: String!
  start_date: timestamptz!
  updated_at: timestamptz!
}

"""
aggregated selection of "scheduler"
"""
type scheduler_aggregate {
  aggregate: scheduler_aggregate_fields
  nodes: [scheduler!]!
}

"""
aggregate fields of "scheduler"
"""
type scheduler_aggregate_fields {
  count(columns: [scheduler_select_column!], distinct: Boolean): Int
  max: scheduler_max_fields
  min: scheduler_min_fields
}

"""
order by aggregate values of table "scheduler"
"""
input scheduler_aggregate_order_by {
  count: order_by
  max: scheduler_max_order_by
  min: scheduler_min_order_by
}

"""
input type for inserting array relation for remote table "scheduler"
"""
input scheduler_arr_rel_insert_input {
  data: [scheduler_insert_input!]!
  on_conflict: scheduler_on_conflict
}

"""
Boolean expression to filter rows from the table "scheduler". All fields are combined with a logical 'AND'.
"""
input scheduler_bool_exp {
  _and: [scheduler_bool_exp]
  _not: scheduler_bool_exp
  _or: [scheduler_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  end_date: timestamptz_comparison_exp
  freq: frequency_comparison_exp
  resource_path: String_comparison_exp
  scheduler_id: String_comparison_exp
  start_date: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "scheduler"
"""
enum scheduler_constraint {
  """unique or primary key constraint"""
  pk__scheduler
}

"""
input type for inserting data into table "scheduler"
"""
input scheduler_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  freq: frequency
  resource_path: String
  scheduler_id: String
  start_date: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type scheduler_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  resource_path: String
  scheduler_id: String
  start_date: timestamptz
  updated_at: timestamptz
}

"""
order by max() on columns of table "scheduler"
"""
input scheduler_max_order_by {
  created_at: order_by
  deleted_at: order_by
  end_date: order_by
  resource_path: order_by
  scheduler_id: order_by
  start_date: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type scheduler_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  resource_path: String
  scheduler_id: String
  start_date: timestamptz
  updated_at: timestamptz
}

"""
order by min() on columns of table "scheduler"
"""
input scheduler_min_order_by {
  created_at: order_by
  deleted_at: order_by
  end_date: order_by
  resource_path: order_by
  scheduler_id: order_by
  start_date: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "scheduler"
"""
type scheduler_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [scheduler!]!
}

"""
input type for inserting object relation for remote table "scheduler"
"""
input scheduler_obj_rel_insert_input {
  data: scheduler_insert_input!
  on_conflict: scheduler_on_conflict
}

"""
on conflict condition type for table "scheduler"
"""
input scheduler_on_conflict {
  constraint: scheduler_constraint!
  update_columns: [scheduler_update_column!]!
  where: scheduler_bool_exp
}

"""
ordering options when selecting data from "scheduler"
"""
input scheduler_order_by {
  created_at: order_by
  deleted_at: order_by
  end_date: order_by
  freq: order_by
  resource_path: order_by
  scheduler_id: order_by
  start_date: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "scheduler"
"""
input scheduler_pk_columns_input {
  scheduler_id: String!
}

"""
select columns of table "scheduler"
"""
enum scheduler_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_date

  """column name"""
  freq

  """column name"""
  resource_path

  """column name"""
  scheduler_id

  """column name"""
  start_date

  """column name"""
  updated_at
}

"""
input type for updating data in table "scheduler"
"""
input scheduler_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  end_date: timestamptz
  freq: frequency
  resource_path: String
  scheduler_id: String
  start_date: timestamptz
  updated_at: timestamptz
}

"""
update columns of table "scheduler"
"""
enum scheduler_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_date

  """column name"""
  freq

  """column name"""
  resource_path

  """column name"""
  scheduler_id

  """column name"""
  start_date

  """column name"""
  updated_at
}

"""
columns and relationships of "school_admins"
"""
type school_admins {
  created_at: timestamptz!
  deleted_at: timestamptz
  resource_path: String!
  school_admin_id: String!
  school_id: Int!

  """An object relationship"""
  schools: schools
  updated_at: timestamptz!

  """An object relationship"""
  users: users
}

"""
aggregated selection of "school_admins"
"""
type school_admins_aggregate {
  aggregate: school_admins_aggregate_fields
  nodes: [school_admins!]!
}

"""
aggregate fields of "school_admins"
"""
type school_admins_aggregate_fields {
  avg: school_admins_avg_fields
  count(columns: [school_admins_select_column!], distinct: Boolean): Int
  max: school_admins_max_fields
  min: school_admins_min_fields
  stddev: school_admins_stddev_fields
  stddev_pop: school_admins_stddev_pop_fields
  stddev_samp: school_admins_stddev_samp_fields
  sum: school_admins_sum_fields
  var_pop: school_admins_var_pop_fields
  var_samp: school_admins_var_samp_fields
  variance: school_admins_variance_fields
}

"""
order by aggregate values of table "school_admins"
"""
input school_admins_aggregate_order_by {
  avg: school_admins_avg_order_by
  count: order_by
  max: school_admins_max_order_by
  min: school_admins_min_order_by
  stddev: school_admins_stddev_order_by
  stddev_pop: school_admins_stddev_pop_order_by
  stddev_samp: school_admins_stddev_samp_order_by
  sum: school_admins_sum_order_by
  var_pop: school_admins_var_pop_order_by
  var_samp: school_admins_var_samp_order_by
  variance: school_admins_variance_order_by
}

"""
input type for inserting array relation for remote table "school_admins"
"""
input school_admins_arr_rel_insert_input {
  data: [school_admins_insert_input!]!
  on_conflict: school_admins_on_conflict
}

"""aggregate avg on columns"""
type school_admins_avg_fields {
  school_id: Float
}

"""
order by avg() on columns of table "school_admins"
"""
input school_admins_avg_order_by {
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "school_admins". All fields are combined with a logical 'AND'.
"""
input school_admins_bool_exp {
  _and: [school_admins_bool_exp]
  _not: school_admins_bool_exp
  _or: [school_admins_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  resource_path: String_comparison_exp
  school_admin_id: String_comparison_exp
  school_id: Int_comparison_exp
  schools: schools_bool_exp
  updated_at: timestamptz_comparison_exp
  users: users_bool_exp
}

"""
unique or primary key constraints on table "school_admins"
"""
enum school_admins_constraint {
  """unique or primary key constraint"""
  school_admins_pk
}

"""
input type for incrementing integer column in table "school_admins"
"""
input school_admins_inc_input {
  school_id: Int
}

"""
input type for inserting data into table "school_admins"
"""
input school_admins_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  school_admin_id: String
  school_id: Int
  schools: schools_obj_rel_insert_input
  updated_at: timestamptz
  users: users_obj_rel_insert_input
}

"""aggregate max on columns"""
type school_admins_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  school_admin_id: String
  school_id: Int
  updated_at: timestamptz
}

"""
order by max() on columns of table "school_admins"
"""
input school_admins_max_order_by {
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  school_admin_id: order_by
  school_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type school_admins_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  school_admin_id: String
  school_id: Int
  updated_at: timestamptz
}

"""
order by min() on columns of table "school_admins"
"""
input school_admins_min_order_by {
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  school_admin_id: order_by
  school_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "school_admins"
"""
type school_admins_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [school_admins!]!
}

"""
input type for inserting object relation for remote table "school_admins"
"""
input school_admins_obj_rel_insert_input {
  data: school_admins_insert_input!
  on_conflict: school_admins_on_conflict
}

"""
on conflict condition type for table "school_admins"
"""
input school_admins_on_conflict {
  constraint: school_admins_constraint!
  update_columns: [school_admins_update_column!]!
  where: school_admins_bool_exp
}

"""
ordering options when selecting data from "school_admins"
"""
input school_admins_order_by {
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  school_admin_id: order_by
  school_id: order_by
  schools: schools_order_by
  updated_at: order_by
  users: users_order_by
}

"""
primary key columns input for table: "school_admins"
"""
input school_admins_pk_columns_input {
  school_admin_id: String!
}

"""
select columns of table "school_admins"
"""
enum school_admins_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  school_admin_id

  """column name"""
  school_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "school_admins"
"""
input school_admins_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  school_admin_id: String
  school_id: Int
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type school_admins_stddev_fields {
  school_id: Float
}

"""
order by stddev() on columns of table "school_admins"
"""
input school_admins_stddev_order_by {
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type school_admins_stddev_pop_fields {
  school_id: Float
}

"""
order by stddev_pop() on columns of table "school_admins"
"""
input school_admins_stddev_pop_order_by {
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type school_admins_stddev_samp_fields {
  school_id: Float
}

"""
order by stddev_samp() on columns of table "school_admins"
"""
input school_admins_stddev_samp_order_by {
  school_id: order_by
}

"""aggregate sum on columns"""
type school_admins_sum_fields {
  school_id: Int
}

"""
order by sum() on columns of table "school_admins"
"""
input school_admins_sum_order_by {
  school_id: order_by
}

"""
update columns of table "school_admins"
"""
enum school_admins_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  school_admin_id

  """column name"""
  school_id

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type school_admins_var_pop_fields {
  school_id: Float
}

"""
order by var_pop() on columns of table "school_admins"
"""
input school_admins_var_pop_order_by {
  school_id: order_by
}

"""aggregate var_samp on columns"""
type school_admins_var_samp_fields {
  school_id: Float
}

"""
order by var_samp() on columns of table "school_admins"
"""
input school_admins_var_samp_order_by {
  school_id: order_by
}

"""aggregate variance on columns"""
type school_admins_variance_fields {
  school_id: Float
}

"""
order by variance() on columns of table "school_admins"
"""
input school_admins_variance_order_by {
  school_id: order_by
}

"""
columns and relationships of "school_configs"
"""
type school_configs {
  country: String
  created_at: timestamptz!
  deleted_at: timestamptz
  plan_duration: smallint
  plan_expired_at: timestamptz
  plan_id: String!
  privileges: _text
  resource_path: String

  """An object relationship"""
  school: schools!
  school_id: Int!
  updated_at: timestamptz!
}

"""
aggregated selection of "school_configs"
"""
type school_configs_aggregate {
  aggregate: school_configs_aggregate_fields
  nodes: [school_configs!]!
}

"""
aggregate fields of "school_configs"
"""
type school_configs_aggregate_fields {
  avg: school_configs_avg_fields
  count(columns: [school_configs_select_column!], distinct: Boolean): Int
  max: school_configs_max_fields
  min: school_configs_min_fields
  stddev: school_configs_stddev_fields
  stddev_pop: school_configs_stddev_pop_fields
  stddev_samp: school_configs_stddev_samp_fields
  sum: school_configs_sum_fields
  var_pop: school_configs_var_pop_fields
  var_samp: school_configs_var_samp_fields
  variance: school_configs_variance_fields
}

"""
order by aggregate values of table "school_configs"
"""
input school_configs_aggregate_order_by {
  avg: school_configs_avg_order_by
  count: order_by
  max: school_configs_max_order_by
  min: school_configs_min_order_by
  stddev: school_configs_stddev_order_by
  stddev_pop: school_configs_stddev_pop_order_by
  stddev_samp: school_configs_stddev_samp_order_by
  sum: school_configs_sum_order_by
  var_pop: school_configs_var_pop_order_by
  var_samp: school_configs_var_samp_order_by
  variance: school_configs_variance_order_by
}

"""
input type for inserting array relation for remote table "school_configs"
"""
input school_configs_arr_rel_insert_input {
  data: [school_configs_insert_input!]!
  on_conflict: school_configs_on_conflict
}

"""aggregate avg on columns"""
type school_configs_avg_fields {
  plan_duration: Float
  school_id: Float
}

"""
order by avg() on columns of table "school_configs"
"""
input school_configs_avg_order_by {
  plan_duration: order_by
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "school_configs". All fields are combined with a logical 'AND'.
"""
input school_configs_bool_exp {
  _and: [school_configs_bool_exp]
  _not: school_configs_bool_exp
  _or: [school_configs_bool_exp]
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  plan_duration: smallint_comparison_exp
  plan_expired_at: timestamptz_comparison_exp
  plan_id: String_comparison_exp
  privileges: _text_comparison_exp
  resource_path: String_comparison_exp
  school: schools_bool_exp
  school_id: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "school_configs"
"""
enum school_configs_constraint {
  """unique or primary key constraint"""
  school_configs_pk
}

"""
input type for incrementing integer column in table "school_configs"
"""
input school_configs_inc_input {
  plan_duration: smallint
  school_id: Int
}

"""
input type for inserting data into table "school_configs"
"""
input school_configs_insert_input {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  plan_duration: smallint
  plan_expired_at: timestamptz
  plan_id: String
  privileges: _text
  resource_path: String
  school: schools_obj_rel_insert_input
  school_id: Int
  updated_at: timestamptz
}

"""aggregate max on columns"""
type school_configs_max_fields {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  plan_duration: smallint
  plan_expired_at: timestamptz
  plan_id: String
  resource_path: String
  school_id: Int
  updated_at: timestamptz
}

"""
order by max() on columns of table "school_configs"
"""
input school_configs_max_order_by {
  country: order_by
  created_at: order_by
  deleted_at: order_by
  plan_duration: order_by
  plan_expired_at: order_by
  plan_id: order_by
  resource_path: order_by
  school_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type school_configs_min_fields {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  plan_duration: smallint
  plan_expired_at: timestamptz
  plan_id: String
  resource_path: String
  school_id: Int
  updated_at: timestamptz
}

"""
order by min() on columns of table "school_configs"
"""
input school_configs_min_order_by {
  country: order_by
  created_at: order_by
  deleted_at: order_by
  plan_duration: order_by
  plan_expired_at: order_by
  plan_id: order_by
  resource_path: order_by
  school_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "school_configs"
"""
type school_configs_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [school_configs!]!
}

"""
input type for inserting object relation for remote table "school_configs"
"""
input school_configs_obj_rel_insert_input {
  data: school_configs_insert_input!
  on_conflict: school_configs_on_conflict
}

"""
on conflict condition type for table "school_configs"
"""
input school_configs_on_conflict {
  constraint: school_configs_constraint!
  update_columns: [school_configs_update_column!]!
  where: school_configs_bool_exp
}

"""
ordering options when selecting data from "school_configs"
"""
input school_configs_order_by {
  country: order_by
  created_at: order_by
  deleted_at: order_by
  plan_duration: order_by
  plan_expired_at: order_by
  plan_id: order_by
  privileges: order_by
  resource_path: order_by
  school: schools_order_by
  school_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "school_configs"
"""
input school_configs_pk_columns_input {
  school_id: Int!
}

"""
select columns of table "school_configs"
"""
enum school_configs_select_column {
  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  plan_duration

  """column name"""
  plan_expired_at

  """column name"""
  plan_id

  """column name"""
  privileges

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "school_configs"
"""
input school_configs_set_input {
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  plan_duration: smallint
  plan_expired_at: timestamptz
  plan_id: String
  privileges: _text
  resource_path: String
  school_id: Int
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type school_configs_stddev_fields {
  plan_duration: Float
  school_id: Float
}

"""
order by stddev() on columns of table "school_configs"
"""
input school_configs_stddev_order_by {
  plan_duration: order_by
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type school_configs_stddev_pop_fields {
  plan_duration: Float
  school_id: Float
}

"""
order by stddev_pop() on columns of table "school_configs"
"""
input school_configs_stddev_pop_order_by {
  plan_duration: order_by
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type school_configs_stddev_samp_fields {
  plan_duration: Float
  school_id: Float
}

"""
order by stddev_samp() on columns of table "school_configs"
"""
input school_configs_stddev_samp_order_by {
  plan_duration: order_by
  school_id: order_by
}

"""aggregate sum on columns"""
type school_configs_sum_fields {
  plan_duration: smallint
  school_id: Int
}

"""
order by sum() on columns of table "school_configs"
"""
input school_configs_sum_order_by {
  plan_duration: order_by
  school_id: order_by
}

"""
update columns of table "school_configs"
"""
enum school_configs_update_column {
  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  plan_duration

  """column name"""
  plan_expired_at

  """column name"""
  plan_id

  """column name"""
  privileges

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type school_configs_var_pop_fields {
  plan_duration: Float
  school_id: Float
}

"""
order by var_pop() on columns of table "school_configs"
"""
input school_configs_var_pop_order_by {
  plan_duration: order_by
  school_id: order_by
}

"""aggregate var_samp on columns"""
type school_configs_var_samp_fields {
  plan_duration: Float
  school_id: Float
}

"""
order by var_samp() on columns of table "school_configs"
"""
input school_configs_var_samp_order_by {
  plan_duration: order_by
  school_id: order_by
}

"""aggregate variance on columns"""
type school_configs_variance_fields {
  plan_duration: Float
  school_id: Float
}

"""
order by variance() on columns of table "school_configs"
"""
input school_configs_variance_order_by {
  plan_duration: order_by
  school_id: order_by
}

"""
columns and relationships of "school_course"
"""
type school_course {
  created_at: timestamptz!
  deleted_at: timestamptz
  is_archived: Boolean!
  resource_path: String!
  school_course_id: String!
  school_course_name: String!
  school_course_name_phonetic: String
  school_course_partner_id: String
  school_id: String!

  """An object relationship"""
  school_info: school_info!
  updated_at: timestamptz!
}

"""
aggregated selection of "school_course"
"""
type school_course_aggregate {
  aggregate: school_course_aggregate_fields
  nodes: [school_course!]!
}

"""
aggregate fields of "school_course"
"""
type school_course_aggregate_fields {
  count(columns: [school_course_select_column!], distinct: Boolean): Int
  max: school_course_max_fields
  min: school_course_min_fields
}

"""
order by aggregate values of table "school_course"
"""
input school_course_aggregate_order_by {
  count: order_by
  max: school_course_max_order_by
  min: school_course_min_order_by
}

"""
input type for inserting array relation for remote table "school_course"
"""
input school_course_arr_rel_insert_input {
  data: [school_course_insert_input!]!
  on_conflict: school_course_on_conflict
}

"""
Boolean expression to filter rows from the table "school_course". All fields are combined with a logical 'AND'.
"""
input school_course_bool_exp {
  _and: [school_course_bool_exp]
  _not: school_course_bool_exp
  _or: [school_course_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  is_archived: Boolean_comparison_exp
  resource_path: String_comparison_exp
  school_course_id: String_comparison_exp
  school_course_name: String_comparison_exp
  school_course_name_phonetic: String_comparison_exp
  school_course_partner_id: String_comparison_exp
  school_id: String_comparison_exp
  school_info: school_info_bool_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "school_course"
"""
enum school_course_constraint {
  """unique or primary key constraint"""
  school_course__pk

  """unique or primary key constraint"""
  school_course__school_course_partner_id__unique
}

"""
input type for inserting data into table "school_course"
"""
input school_course_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  is_archived: Boolean
  resource_path: String
  school_course_id: String
  school_course_name: String
  school_course_name_phonetic: String
  school_course_partner_id: String
  school_id: String
  school_info: school_info_obj_rel_insert_input
  updated_at: timestamptz
}

"""aggregate max on columns"""
type school_course_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  school_course_id: String
  school_course_name: String
  school_course_name_phonetic: String
  school_course_partner_id: String
  school_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "school_course"
"""
input school_course_max_order_by {
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  school_course_id: order_by
  school_course_name: order_by
  school_course_name_phonetic: order_by
  school_course_partner_id: order_by
  school_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type school_course_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  school_course_id: String
  school_course_name: String
  school_course_name_phonetic: String
  school_course_partner_id: String
  school_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "school_course"
"""
input school_course_min_order_by {
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  school_course_id: order_by
  school_course_name: order_by
  school_course_name_phonetic: order_by
  school_course_partner_id: order_by
  school_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "school_course"
"""
type school_course_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [school_course!]!
}

"""
input type for inserting object relation for remote table "school_course"
"""
input school_course_obj_rel_insert_input {
  data: school_course_insert_input!
  on_conflict: school_course_on_conflict
}

"""
on conflict condition type for table "school_course"
"""
input school_course_on_conflict {
  constraint: school_course_constraint!
  update_columns: [school_course_update_column!]!
  where: school_course_bool_exp
}

"""
ordering options when selecting data from "school_course"
"""
input school_course_order_by {
  created_at: order_by
  deleted_at: order_by
  is_archived: order_by
  resource_path: order_by
  school_course_id: order_by
  school_course_name: order_by
  school_course_name_phonetic: order_by
  school_course_partner_id: order_by
  school_id: order_by
  school_info: school_info_order_by
  updated_at: order_by
}

"""
primary key columns input for table: "school_course"
"""
input school_course_pk_columns_input {
  school_course_id: String!
}

"""
select columns of table "school_course"
"""
enum school_course_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  is_archived

  """column name"""
  resource_path

  """column name"""
  school_course_id

  """column name"""
  school_course_name

  """column name"""
  school_course_name_phonetic

  """column name"""
  school_course_partner_id

  """column name"""
  school_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "school_course"
"""
input school_course_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  is_archived: Boolean
  resource_path: String
  school_course_id: String
  school_course_name: String
  school_course_name_phonetic: String
  school_course_partner_id: String
  school_id: String
  updated_at: timestamptz
}

"""
update columns of table "school_course"
"""
enum school_course_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  is_archived

  """column name"""
  resource_path

  """column name"""
  school_course_id

  """column name"""
  school_course_name

  """column name"""
  school_course_name_phonetic

  """column name"""
  school_course_partner_id

  """column name"""
  school_id

  """column name"""
  updated_at
}

"""
columns and relationships of "school_info"
"""
type school_info {
  address: String
  created_at: timestamptz!
  deleted_at: timestamptz
  is_archived: Boolean!
  resource_path: String!
  school_id: String!

  """An object relationship"""
  school_level: school_level!
  school_level_id: String!
  school_name: String!
  school_name_phonetic: String
  school_partner_id: String
  updated_at: timestamptz!
}

"""
aggregated selection of "school_info"
"""
type school_info_aggregate {
  aggregate: school_info_aggregate_fields
  nodes: [school_info!]!
}

"""
aggregate fields of "school_info"
"""
type school_info_aggregate_fields {
  count(columns: [school_info_select_column!], distinct: Boolean): Int
  max: school_info_max_fields
  min: school_info_min_fields
}

"""
order by aggregate values of table "school_info"
"""
input school_info_aggregate_order_by {
  count: order_by
  max: school_info_max_order_by
  min: school_info_min_order_by
}

"""
input type for inserting array relation for remote table "school_info"
"""
input school_info_arr_rel_insert_input {
  data: [school_info_insert_input!]!
  on_conflict: school_info_on_conflict
}

"""
Boolean expression to filter rows from the table "school_info". All fields are combined with a logical 'AND'.
"""
input school_info_bool_exp {
  _and: [school_info_bool_exp]
  _not: school_info_bool_exp
  _or: [school_info_bool_exp]
  address: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  is_archived: Boolean_comparison_exp
  resource_path: String_comparison_exp
  school_id: String_comparison_exp
  school_level: school_level_bool_exp
  school_level_id: String_comparison_exp
  school_name: String_comparison_exp
  school_name_phonetic: String_comparison_exp
  school_partner_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "school_info"
"""
enum school_info_constraint {
  """unique or primary key constraint"""
  school_info__school_partner_id__unique

  """unique or primary key constraint"""
  school_info_pk
}

"""
input type for inserting data into table "school_info"
"""
input school_info_insert_input {
  address: String
  created_at: timestamptz
  deleted_at: timestamptz
  is_archived: Boolean
  resource_path: String
  school_id: String
  school_level: school_level_obj_rel_insert_input
  school_level_id: String
  school_name: String
  school_name_phonetic: String
  school_partner_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type school_info_max_fields {
  address: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  school_id: String
  school_level_id: String
  school_name: String
  school_name_phonetic: String
  school_partner_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "school_info"
"""
input school_info_max_order_by {
  address: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  school_id: order_by
  school_level_id: order_by
  school_name: order_by
  school_name_phonetic: order_by
  school_partner_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type school_info_min_fields {
  address: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  school_id: String
  school_level_id: String
  school_name: String
  school_name_phonetic: String
  school_partner_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "school_info"
"""
input school_info_min_order_by {
  address: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  school_id: order_by
  school_level_id: order_by
  school_name: order_by
  school_name_phonetic: order_by
  school_partner_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "school_info"
"""
type school_info_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [school_info!]!
}

"""
input type for inserting object relation for remote table "school_info"
"""
input school_info_obj_rel_insert_input {
  data: school_info_insert_input!
  on_conflict: school_info_on_conflict
}

"""
on conflict condition type for table "school_info"
"""
input school_info_on_conflict {
  constraint: school_info_constraint!
  update_columns: [school_info_update_column!]!
  where: school_info_bool_exp
}

"""
ordering options when selecting data from "school_info"
"""
input school_info_order_by {
  address: order_by
  created_at: order_by
  deleted_at: order_by
  is_archived: order_by
  resource_path: order_by
  school_id: order_by
  school_level: school_level_order_by
  school_level_id: order_by
  school_name: order_by
  school_name_phonetic: order_by
  school_partner_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "school_info"
"""
input school_info_pk_columns_input {
  school_id: String!
}

"""
select columns of table "school_info"
"""
enum school_info_select_column {
  """column name"""
  address

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  is_archived

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  school_level_id

  """column name"""
  school_name

  """column name"""
  school_name_phonetic

  """column name"""
  school_partner_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "school_info"
"""
input school_info_set_input {
  address: String
  created_at: timestamptz
  deleted_at: timestamptz
  is_archived: Boolean
  resource_path: String
  school_id: String
  school_level_id: String
  school_name: String
  school_name_phonetic: String
  school_partner_id: String
  updated_at: timestamptz
}

"""
update columns of table "school_info"
"""
enum school_info_update_column {
  """column name"""
  address

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  is_archived

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  school_level_id

  """column name"""
  school_name

  """column name"""
  school_name_phonetic

  """column name"""
  school_partner_id

  """column name"""
  updated_at
}

"""
columns and relationships of "school_level"
"""
type school_level {
  created_at: timestamptz!
  deleted_at: timestamptz
  is_archived: Boolean!
  resource_path: String!

  """An array relationship"""
  school_infos(
    """distinct select on columns"""
    distinct_on: [school_info_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_info_order_by!]

    """filter the rows returned"""
    where: school_info_bool_exp
  ): [school_info!]!

  """An aggregated array relationship"""
  school_infos_aggregate(
    """distinct select on columns"""
    distinct_on: [school_info_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_info_order_by!]

    """filter the rows returned"""
    where: school_info_bool_exp
  ): school_info_aggregate!
  school_level_id: String!
  school_level_name: String!
  sequence: Int!
  updated_at: timestamptz!
}

"""
aggregated selection of "school_level"
"""
type school_level_aggregate {
  aggregate: school_level_aggregate_fields
  nodes: [school_level!]!
}

"""
aggregate fields of "school_level"
"""
type school_level_aggregate_fields {
  avg: school_level_avg_fields
  count(columns: [school_level_select_column!], distinct: Boolean): Int
  max: school_level_max_fields
  min: school_level_min_fields
  stddev: school_level_stddev_fields
  stddev_pop: school_level_stddev_pop_fields
  stddev_samp: school_level_stddev_samp_fields
  sum: school_level_sum_fields
  var_pop: school_level_var_pop_fields
  var_samp: school_level_var_samp_fields
  variance: school_level_variance_fields
}

"""
order by aggregate values of table "school_level"
"""
input school_level_aggregate_order_by {
  avg: school_level_avg_order_by
  count: order_by
  max: school_level_max_order_by
  min: school_level_min_order_by
  stddev: school_level_stddev_order_by
  stddev_pop: school_level_stddev_pop_order_by
  stddev_samp: school_level_stddev_samp_order_by
  sum: school_level_sum_order_by
  var_pop: school_level_var_pop_order_by
  var_samp: school_level_var_samp_order_by
  variance: school_level_variance_order_by
}

"""
input type for inserting array relation for remote table "school_level"
"""
input school_level_arr_rel_insert_input {
  data: [school_level_insert_input!]!
  on_conflict: school_level_on_conflict
}

"""aggregate avg on columns"""
type school_level_avg_fields {
  sequence: Float
}

"""
order by avg() on columns of table "school_level"
"""
input school_level_avg_order_by {
  sequence: order_by
}

"""
Boolean expression to filter rows from the table "school_level". All fields are combined with a logical 'AND'.
"""
input school_level_bool_exp {
  _and: [school_level_bool_exp]
  _not: school_level_bool_exp
  _or: [school_level_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  is_archived: Boolean_comparison_exp
  resource_path: String_comparison_exp
  school_infos: school_info_bool_exp
  school_level_id: String_comparison_exp
  school_level_name: String_comparison_exp
  sequence: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "school_level"
"""
enum school_level_constraint {
  """unique or primary key constraint"""
  school_level__pk

  """unique or primary key constraint"""
  school_level__sequence__unique
}

"""
input type for incrementing integer column in table "school_level"
"""
input school_level_inc_input {
  sequence: Int
}

"""
input type for inserting data into table "school_level"
"""
input school_level_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  is_archived: Boolean
  resource_path: String
  school_infos: school_info_arr_rel_insert_input
  school_level_id: String
  school_level_name: String
  sequence: Int
  updated_at: timestamptz
}

"""aggregate max on columns"""
type school_level_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  school_level_id: String
  school_level_name: String
  sequence: Int
  updated_at: timestamptz
}

"""
order by max() on columns of table "school_level"
"""
input school_level_max_order_by {
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  school_level_id: order_by
  school_level_name: order_by
  sequence: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type school_level_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  school_level_id: String
  school_level_name: String
  sequence: Int
  updated_at: timestamptz
}

"""
order by min() on columns of table "school_level"
"""
input school_level_min_order_by {
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  school_level_id: order_by
  school_level_name: order_by
  sequence: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "school_level"
"""
type school_level_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [school_level!]!
}

"""
input type for inserting object relation for remote table "school_level"
"""
input school_level_obj_rel_insert_input {
  data: school_level_insert_input!
  on_conflict: school_level_on_conflict
}

"""
on conflict condition type for table "school_level"
"""
input school_level_on_conflict {
  constraint: school_level_constraint!
  update_columns: [school_level_update_column!]!
  where: school_level_bool_exp
}

"""
ordering options when selecting data from "school_level"
"""
input school_level_order_by {
  created_at: order_by
  deleted_at: order_by
  is_archived: order_by
  resource_path: order_by
  school_infos_aggregate: school_info_aggregate_order_by
  school_level_id: order_by
  school_level_name: order_by
  sequence: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "school_level"
"""
input school_level_pk_columns_input {
  school_level_id: String!
}

"""
select columns of table "school_level"
"""
enum school_level_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  is_archived

  """column name"""
  resource_path

  """column name"""
  school_level_id

  """column name"""
  school_level_name

  """column name"""
  sequence

  """column name"""
  updated_at
}

"""
input type for updating data in table "school_level"
"""
input school_level_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  is_archived: Boolean
  resource_path: String
  school_level_id: String
  school_level_name: String
  sequence: Int
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type school_level_stddev_fields {
  sequence: Float
}

"""
order by stddev() on columns of table "school_level"
"""
input school_level_stddev_order_by {
  sequence: order_by
}

"""aggregate stddev_pop on columns"""
type school_level_stddev_pop_fields {
  sequence: Float
}

"""
order by stddev_pop() on columns of table "school_level"
"""
input school_level_stddev_pop_order_by {
  sequence: order_by
}

"""aggregate stddev_samp on columns"""
type school_level_stddev_samp_fields {
  sequence: Float
}

"""
order by stddev_samp() on columns of table "school_level"
"""
input school_level_stddev_samp_order_by {
  sequence: order_by
}

"""aggregate sum on columns"""
type school_level_sum_fields {
  sequence: Int
}

"""
order by sum() on columns of table "school_level"
"""
input school_level_sum_order_by {
  sequence: order_by
}

"""
update columns of table "school_level"
"""
enum school_level_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  is_archived

  """column name"""
  resource_path

  """column name"""
  school_level_id

  """column name"""
  school_level_name

  """column name"""
  sequence

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type school_level_var_pop_fields {
  sequence: Float
}

"""
order by var_pop() on columns of table "school_level"
"""
input school_level_var_pop_order_by {
  sequence: order_by
}

"""aggregate var_samp on columns"""
type school_level_var_samp_fields {
  sequence: Float
}

"""
order by var_samp() on columns of table "school_level"
"""
input school_level_var_samp_order_by {
  sequence: order_by
}

"""aggregate variance on columns"""
type school_level_variance_fields {
  sequence: Float
}

"""
order by variance() on columns of table "school_level"
"""
input school_level_variance_order_by {
  sequence: order_by
}

"""
columns and relationships of "schools"
"""
type schools {
  """An array relationship"""
  books(
    """distinct select on columns"""
    distinct_on: [books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_order_by!]

    """filter the rows returned"""
    where: books_bool_exp
  ): [books!]!

  """An aggregated array relationship"""
  books_aggregate(
    """distinct select on columns"""
    distinct_on: [books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_order_by!]

    """filter the rows returned"""
    where: books_bool_exp
  ): books_aggregate!

  """An array relationship"""
  chapters(
    """distinct select on columns"""
    distinct_on: [chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [chapters_order_by!]

    """filter the rows returned"""
    where: chapters_bool_exp
  ): [chapters!]!

  """An aggregated array relationship"""
  chapters_aggregate(
    """distinct select on columns"""
    distinct_on: [chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [chapters_order_by!]

    """filter the rows returned"""
    where: chapters_bool_exp
  ): chapters_aggregate!

  """An object relationship"""
  city: cities!
  city_id: Int!

  """An array relationship"""
  classes(
    """distinct select on columns"""
    distinct_on: [classes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [classes_order_by!]

    """filter the rows returned"""
    where: classes_bool_exp
  ): [classes!]!

  """An aggregated array relationship"""
  classes_aggregate(
    """distinct select on columns"""
    distinct_on: [classes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [classes_order_by!]

    """filter the rows returned"""
    where: classes_bool_exp
  ): classes_aggregate!
  country: String!

  """An array relationship"""
  courses(
    """distinct select on columns"""
    distinct_on: [courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_order_by!]

    """filter the rows returned"""
    where: courses_bool_exp
  ): [courses!]!

  """An aggregated array relationship"""
  courses_aggregate(
    """distinct select on columns"""
    distinct_on: [courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_order_by!]

    """filter the rows returned"""
    where: courses_bool_exp
  ): courses_aggregate!
  created_at: timestamptz!
  deleted_at: timestamptz

  """An object relationship"""
  district: districts!
  district_id: Int!

  """An array relationship"""
  info_notifications(
    """distinct select on columns"""
    distinct_on: [info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notifications_order_by!]

    """filter the rows returned"""
    where: info_notifications_bool_exp
  ): [info_notifications!]!

  """An aggregated array relationship"""
  info_notifications_aggregate(
    """distinct select on columns"""
    distinct_on: [info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notifications_order_by!]

    """filter the rows returned"""
    where: info_notifications_bool_exp
  ): info_notifications_aggregate!
  is_merge: Boolean
  is_system_school: Boolean!

  """An array relationship"""
  learning_objectives(
    """distinct select on columns"""
    distinct_on: [learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_objectives_order_by!]

    """filter the rows returned"""
    where: learning_objectives_bool_exp
  ): [learning_objectives!]!

  """An aggregated array relationship"""
  learning_objectives_aggregate(
    """distinct select on columns"""
    distinct_on: [learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_objectives_order_by!]

    """filter the rows returned"""
    where: learning_objectives_bool_exp
  ): learning_objectives_aggregate!
  name: String!

  """An array relationship"""
  partner_form_configs(
    """distinct select on columns"""
    distinct_on: [partner_form_configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [partner_form_configs_order_by!]

    """filter the rows returned"""
    where: partner_form_configs_bool_exp
  ): [partner_form_configs!]!

  """An aggregated array relationship"""
  partner_form_configs_aggregate(
    """distinct select on columns"""
    distinct_on: [partner_form_configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [partner_form_configs_order_by!]

    """filter the rows returned"""
    where: partner_form_configs_bool_exp
  ): partner_form_configs_aggregate!
  phone_number: String
  point: point
  resource_path: String

  """An array relationship"""
  school_configs(
    """distinct select on columns"""
    distinct_on: [school_configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_configs_order_by!]

    """filter the rows returned"""
    where: school_configs_bool_exp
  ): [school_configs!]!

  """An aggregated array relationship"""
  school_configs_aggregate(
    """distinct select on columns"""
    distinct_on: [school_configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_configs_order_by!]

    """filter the rows returned"""
    where: school_configs_bool_exp
  ): school_configs_aggregate!
  school_id: Int!

  """An array relationship"""
  students(
    """distinct select on columns"""
    distinct_on: [students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [students_order_by!]

    """filter the rows returned"""
    where: students_bool_exp
  ): [students!]!

  """An aggregated array relationship"""
  students_aggregate(
    """distinct select on columns"""
    distinct_on: [students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [students_order_by!]

    """filter the rows returned"""
    where: students_bool_exp
  ): students_aggregate!

  """An array relationship"""
  topics(
    """distinct select on columns"""
    distinct_on: [topics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_order_by!]

    """filter the rows returned"""
    where: topics_bool_exp
  ): [topics!]!

  """An aggregated array relationship"""
  topics_aggregate(
    """distinct select on columns"""
    distinct_on: [topics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_order_by!]

    """filter the rows returned"""
    where: topics_bool_exp
  ): topics_aggregate!
  updated_at: timestamptz!
}

"""
aggregated selection of "schools"
"""
type schools_aggregate {
  aggregate: schools_aggregate_fields
  nodes: [schools!]!
}

"""
aggregate fields of "schools"
"""
type schools_aggregate_fields {
  avg: schools_avg_fields
  count(columns: [schools_select_column!], distinct: Boolean): Int
  max: schools_max_fields
  min: schools_min_fields
  stddev: schools_stddev_fields
  stddev_pop: schools_stddev_pop_fields
  stddev_samp: schools_stddev_samp_fields
  sum: schools_sum_fields
  var_pop: schools_var_pop_fields
  var_samp: schools_var_samp_fields
  variance: schools_variance_fields
}

"""
order by aggregate values of table "schools"
"""
input schools_aggregate_order_by {
  avg: schools_avg_order_by
  count: order_by
  max: schools_max_order_by
  min: schools_min_order_by
  stddev: schools_stddev_order_by
  stddev_pop: schools_stddev_pop_order_by
  stddev_samp: schools_stddev_samp_order_by
  sum: schools_sum_order_by
  var_pop: schools_var_pop_order_by
  var_samp: schools_var_samp_order_by
  variance: schools_variance_order_by
}

"""
input type for inserting array relation for remote table "schools"
"""
input schools_arr_rel_insert_input {
  data: [schools_insert_input!]!
  on_conflict: schools_on_conflict
}

"""aggregate avg on columns"""
type schools_avg_fields {
  city_id: Float
  district_id: Float
  school_id: Float
}

"""
order by avg() on columns of table "schools"
"""
input schools_avg_order_by {
  city_id: order_by
  district_id: order_by
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "schools". All fields are combined with a logical 'AND'.
"""
input schools_bool_exp {
  _and: [schools_bool_exp]
  _not: schools_bool_exp
  _or: [schools_bool_exp]
  books: books_bool_exp
  chapters: chapters_bool_exp
  city: cities_bool_exp
  city_id: Int_comparison_exp
  classes: classes_bool_exp
  country: String_comparison_exp
  courses: courses_bool_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  district: districts_bool_exp
  district_id: Int_comparison_exp
  info_notifications: info_notifications_bool_exp
  is_merge: Boolean_comparison_exp
  is_system_school: Boolean_comparison_exp
  learning_objectives: learning_objectives_bool_exp
  name: String_comparison_exp
  partner_form_configs: partner_form_configs_bool_exp
  phone_number: String_comparison_exp
  point: point_comparison_exp
  resource_path: String_comparison_exp
  school_configs: school_configs_bool_exp
  school_id: Int_comparison_exp
  students: students_bool_exp
  topics: topics_bool_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "schools"
"""
enum schools_constraint {
  """unique or primary key constraint"""
  school_pk

  """unique or primary key constraint"""
  school_un
}

"""
input type for incrementing integer column in table "schools"
"""
input schools_inc_input {
  city_id: Int
  district_id: Int
  school_id: Int
}

"""
input type for inserting data into table "schools"
"""
input schools_insert_input {
  books: books_arr_rel_insert_input
  chapters: chapters_arr_rel_insert_input
  city: cities_obj_rel_insert_input
  city_id: Int
  classes: classes_arr_rel_insert_input
  country: String
  courses: courses_arr_rel_insert_input
  created_at: timestamptz
  deleted_at: timestamptz
  district: districts_obj_rel_insert_input
  district_id: Int
  info_notifications: info_notifications_arr_rel_insert_input
  is_merge: Boolean
  is_system_school: Boolean
  learning_objectives: learning_objectives_arr_rel_insert_input
  name: String
  partner_form_configs: partner_form_configs_arr_rel_insert_input
  phone_number: String
  point: point
  resource_path: String
  school_configs: school_configs_arr_rel_insert_input
  school_id: Int
  students: students_arr_rel_insert_input
  topics: topics_arr_rel_insert_input
  updated_at: timestamptz
}

"""aggregate max on columns"""
type schools_max_fields {
  city_id: Int
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  district_id: Int
  name: String
  phone_number: String
  resource_path: String
  school_id: Int
  updated_at: timestamptz
}

"""
order by max() on columns of table "schools"
"""
input schools_max_order_by {
  city_id: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  district_id: order_by
  name: order_by
  phone_number: order_by
  resource_path: order_by
  school_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type schools_min_fields {
  city_id: Int
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  district_id: Int
  name: String
  phone_number: String
  resource_path: String
  school_id: Int
  updated_at: timestamptz
}

"""
order by min() on columns of table "schools"
"""
input schools_min_order_by {
  city_id: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  district_id: order_by
  name: order_by
  phone_number: order_by
  resource_path: order_by
  school_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "schools"
"""
type schools_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [schools!]!
}

"""
input type for inserting object relation for remote table "schools"
"""
input schools_obj_rel_insert_input {
  data: schools_insert_input!
  on_conflict: schools_on_conflict
}

"""
on conflict condition type for table "schools"
"""
input schools_on_conflict {
  constraint: schools_constraint!
  update_columns: [schools_update_column!]!
  where: schools_bool_exp
}

"""
ordering options when selecting data from "schools"
"""
input schools_order_by {
  books_aggregate: books_aggregate_order_by
  chapters_aggregate: chapters_aggregate_order_by
  city: cities_order_by
  city_id: order_by
  classes_aggregate: classes_aggregate_order_by
  country: order_by
  courses_aggregate: courses_aggregate_order_by
  created_at: order_by
  deleted_at: order_by
  district: districts_order_by
  district_id: order_by
  info_notifications_aggregate: info_notifications_aggregate_order_by
  is_merge: order_by
  is_system_school: order_by
  learning_objectives_aggregate: learning_objectives_aggregate_order_by
  name: order_by
  partner_form_configs_aggregate: partner_form_configs_aggregate_order_by
  phone_number: order_by
  point: order_by
  resource_path: order_by
  school_configs_aggregate: school_configs_aggregate_order_by
  school_id: order_by
  students_aggregate: students_aggregate_order_by
  topics_aggregate: topics_aggregate_order_by
  updated_at: order_by
}

"""
primary key columns input for table: "schools"
"""
input schools_pk_columns_input {
  school_id: Int!
}

"""
select columns of table "schools"
"""
enum schools_select_column {
  """column name"""
  city_id

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  district_id

  """column name"""
  is_merge

  """column name"""
  is_system_school

  """column name"""
  name

  """column name"""
  phone_number

  """column name"""
  point

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "schools"
"""
input schools_set_input {
  city_id: Int
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  district_id: Int
  is_merge: Boolean
  is_system_school: Boolean
  name: String
  phone_number: String
  point: point
  resource_path: String
  school_id: Int
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type schools_stddev_fields {
  city_id: Float
  district_id: Float
  school_id: Float
}

"""
order by stddev() on columns of table "schools"
"""
input schools_stddev_order_by {
  city_id: order_by
  district_id: order_by
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type schools_stddev_pop_fields {
  city_id: Float
  district_id: Float
  school_id: Float
}

"""
order by stddev_pop() on columns of table "schools"
"""
input schools_stddev_pop_order_by {
  city_id: order_by
  district_id: order_by
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type schools_stddev_samp_fields {
  city_id: Float
  district_id: Float
  school_id: Float
}

"""
order by stddev_samp() on columns of table "schools"
"""
input schools_stddev_samp_order_by {
  city_id: order_by
  district_id: order_by
  school_id: order_by
}

"""aggregate sum on columns"""
type schools_sum_fields {
  city_id: Int
  district_id: Int
  school_id: Int
}

"""
order by sum() on columns of table "schools"
"""
input schools_sum_order_by {
  city_id: order_by
  district_id: order_by
  school_id: order_by
}

"""
update columns of table "schools"
"""
enum schools_update_column {
  """column name"""
  city_id

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  district_id

  """column name"""
  is_merge

  """column name"""
  is_system_school

  """column name"""
  name

  """column name"""
  phone_number

  """column name"""
  point

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type schools_var_pop_fields {
  city_id: Float
  district_id: Float
  school_id: Float
}

"""
order by var_pop() on columns of table "schools"
"""
input schools_var_pop_order_by {
  city_id: order_by
  district_id: order_by
  school_id: order_by
}

"""aggregate var_samp on columns"""
type schools_var_samp_fields {
  city_id: Float
  district_id: Float
  school_id: Float
}

"""
order by var_samp() on columns of table "schools"
"""
input schools_var_samp_order_by {
  city_id: order_by
  district_id: order_by
  school_id: order_by
}

"""aggregate variance on columns"""
type schools_variance_fields {
  city_id: Float
  district_id: Float
  school_id: Float
}

"""
order by variance() on columns of table "schools"
"""
input schools_variance_order_by {
  city_id: order_by
  district_id: order_by
  school_id: order_by
}

input search_courses_by_name_args {
  search_limit: Int
  search_name: String
  search_offset: Int
}

scalar smallint

"""
expression to compare columns of type smallint. All fields are combined with logical 'AND'.
"""
input smallint_comparison_exp {
  _eq: smallint
  _gt: smallint
  _gte: smallint
  _in: [smallint!]
  _is_null: Boolean
  _lt: smallint
  _lte: smallint
  _neq: smallint
  _nin: [smallint!]
}

"""
columns and relationships of "staff"
"""
type staff {
  auto_create_timesheet: Boolean
  created_at: timestamptz!
  deleted_at: timestamptz
  resource_path: String!
  staff_id: String!
  updated_at: timestamptz!

  """An object relationship"""
  user: users!
}

"""
aggregated selection of "staff"
"""
type staff_aggregate {
  aggregate: staff_aggregate_fields
  nodes: [staff!]!
}

"""
aggregate fields of "staff"
"""
type staff_aggregate_fields {
  count(columns: [staff_select_column!], distinct: Boolean): Int
  max: staff_max_fields
  min: staff_min_fields
}

"""
order by aggregate values of table "staff"
"""
input staff_aggregate_order_by {
  count: order_by
  max: staff_max_order_by
  min: staff_min_order_by
}

"""
input type for inserting array relation for remote table "staff"
"""
input staff_arr_rel_insert_input {
  data: [staff_insert_input!]!
  on_conflict: staff_on_conflict
}

"""
Boolean expression to filter rows from the table "staff". All fields are combined with a logical 'AND'.
"""
input staff_bool_exp {
  _and: [staff_bool_exp]
  _not: staff_bool_exp
  _or: [staff_bool_exp]
  auto_create_timesheet: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  resource_path: String_comparison_exp
  staff_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
}

"""
unique or primary key constraints on table "staff"
"""
enum staff_constraint {
  """unique or primary key constraint"""
  pk__staff
}

"""
input type for inserting data into table "staff"
"""
input staff_insert_input {
  auto_create_timesheet: Boolean
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  staff_id: String
  updated_at: timestamptz
  user: users_obj_rel_insert_input
}

"""aggregate max on columns"""
type staff_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  staff_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "staff"
"""
input staff_max_order_by {
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  staff_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type staff_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  staff_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "staff"
"""
input staff_min_order_by {
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  staff_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "staff"
"""
type staff_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [staff!]!
}

"""
input type for inserting object relation for remote table "staff"
"""
input staff_obj_rel_insert_input {
  data: staff_insert_input!
  on_conflict: staff_on_conflict
}

"""
on conflict condition type for table "staff"
"""
input staff_on_conflict {
  constraint: staff_constraint!
  update_columns: [staff_update_column!]!
  where: staff_bool_exp
}

"""
ordering options when selecting data from "staff"
"""
input staff_order_by {
  auto_create_timesheet: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  staff_id: order_by
  updated_at: order_by
  user: users_order_by
}

"""
primary key columns input for table: "staff"
"""
input staff_pk_columns_input {
  staff_id: String!
}

"""
select columns of table "staff"
"""
enum staff_select_column {
  """column name"""
  auto_create_timesheet

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  staff_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "staff"
"""
input staff_set_input {
  auto_create_timesheet: Boolean
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  staff_id: String
  updated_at: timestamptz
}

"""
update columns of table "staff"
"""
enum staff_update_column {
  """column name"""
  auto_create_timesheet

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  staff_id

  """column name"""
  updated_at
}

"""
columns and relationships of "student_entryexit_records"
"""
type student_entryexit_records {
  created_at: timestamptz!
  deleted_at: timestamptz
  entry_at: timestamptz!
  entryexit_id: Int!
  exit_at: timestamptz
  resource_path: String!
  student_id: String!

  """An object relationship"""
  students: students!
  updated_at: timestamptz!
}

"""
aggregated selection of "student_entryexit_records"
"""
type student_entryexit_records_aggregate {
  aggregate: student_entryexit_records_aggregate_fields
  nodes: [student_entryexit_records!]!
}

"""
aggregate fields of "student_entryexit_records"
"""
type student_entryexit_records_aggregate_fields {
  avg: student_entryexit_records_avg_fields
  count(columns: [student_entryexit_records_select_column!], distinct: Boolean): Int
  max: student_entryexit_records_max_fields
  min: student_entryexit_records_min_fields
  stddev: student_entryexit_records_stddev_fields
  stddev_pop: student_entryexit_records_stddev_pop_fields
  stddev_samp: student_entryexit_records_stddev_samp_fields
  sum: student_entryexit_records_sum_fields
  var_pop: student_entryexit_records_var_pop_fields
  var_samp: student_entryexit_records_var_samp_fields
  variance: student_entryexit_records_variance_fields
}

"""
order by aggregate values of table "student_entryexit_records"
"""
input student_entryexit_records_aggregate_order_by {
  avg: student_entryexit_records_avg_order_by
  count: order_by
  max: student_entryexit_records_max_order_by
  min: student_entryexit_records_min_order_by
  stddev: student_entryexit_records_stddev_order_by
  stddev_pop: student_entryexit_records_stddev_pop_order_by
  stddev_samp: student_entryexit_records_stddev_samp_order_by
  sum: student_entryexit_records_sum_order_by
  var_pop: student_entryexit_records_var_pop_order_by
  var_samp: student_entryexit_records_var_samp_order_by
  variance: student_entryexit_records_variance_order_by
}

"""
input type for inserting array relation for remote table "student_entryexit_records"
"""
input student_entryexit_records_arr_rel_insert_input {
  data: [student_entryexit_records_insert_input!]!
  on_conflict: student_entryexit_records_on_conflict
}

"""aggregate avg on columns"""
type student_entryexit_records_avg_fields {
  entryexit_id: Float
}

"""
order by avg() on columns of table "student_entryexit_records"
"""
input student_entryexit_records_avg_order_by {
  entryexit_id: order_by
}

"""
Boolean expression to filter rows from the table "student_entryexit_records". All fields are combined with a logical 'AND'.
"""
input student_entryexit_records_bool_exp {
  _and: [student_entryexit_records_bool_exp]
  _not: student_entryexit_records_bool_exp
  _or: [student_entryexit_records_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  entry_at: timestamptz_comparison_exp
  entryexit_id: Int_comparison_exp
  exit_at: timestamptz_comparison_exp
  resource_path: String_comparison_exp
  student_id: String_comparison_exp
  students: students_bool_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "student_entryexit_records"
"""
enum student_entryexit_records_constraint {
  """unique or primary key constraint"""
  student_entryexit_records_pk
}

"""
input type for incrementing integer column in table "student_entryexit_records"
"""
input student_entryexit_records_inc_input {
  entryexit_id: Int
}

"""
input type for inserting data into table "student_entryexit_records"
"""
input student_entryexit_records_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  entry_at: timestamptz
  entryexit_id: Int
  exit_at: timestamptz
  resource_path: String
  student_id: String
  students: students_obj_rel_insert_input
  updated_at: timestamptz
}

"""aggregate max on columns"""
type student_entryexit_records_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  entry_at: timestamptz
  entryexit_id: Int
  exit_at: timestamptz
  resource_path: String
  student_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "student_entryexit_records"
"""
input student_entryexit_records_max_order_by {
  created_at: order_by
  deleted_at: order_by
  entry_at: order_by
  entryexit_id: order_by
  exit_at: order_by
  resource_path: order_by
  student_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type student_entryexit_records_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  entry_at: timestamptz
  entryexit_id: Int
  exit_at: timestamptz
  resource_path: String
  student_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "student_entryexit_records"
"""
input student_entryexit_records_min_order_by {
  created_at: order_by
  deleted_at: order_by
  entry_at: order_by
  entryexit_id: order_by
  exit_at: order_by
  resource_path: order_by
  student_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "student_entryexit_records"
"""
type student_entryexit_records_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [student_entryexit_records!]!
}

"""
input type for inserting object relation for remote table "student_entryexit_records"
"""
input student_entryexit_records_obj_rel_insert_input {
  data: student_entryexit_records_insert_input!
  on_conflict: student_entryexit_records_on_conflict
}

"""
on conflict condition type for table "student_entryexit_records"
"""
input student_entryexit_records_on_conflict {
  constraint: student_entryexit_records_constraint!
  update_columns: [student_entryexit_records_update_column!]!
  where: student_entryexit_records_bool_exp
}

"""
ordering options when selecting data from "student_entryexit_records"
"""
input student_entryexit_records_order_by {
  created_at: order_by
  deleted_at: order_by
  entry_at: order_by
  entryexit_id: order_by
  exit_at: order_by
  resource_path: order_by
  student_id: order_by
  students: students_order_by
  updated_at: order_by
}

"""
primary key columns input for table: "student_entryexit_records"
"""
input student_entryexit_records_pk_columns_input {
  entryexit_id: Int!
}

"""
select columns of table "student_entryexit_records"
"""
enum student_entryexit_records_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  entry_at

  """column name"""
  entryexit_id

  """column name"""
  exit_at

  """column name"""
  resource_path

  """column name"""
  student_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "student_entryexit_records"
"""
input student_entryexit_records_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  entry_at: timestamptz
  entryexit_id: Int
  exit_at: timestamptz
  resource_path: String
  student_id: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type student_entryexit_records_stddev_fields {
  entryexit_id: Float
}

"""
order by stddev() on columns of table "student_entryexit_records"
"""
input student_entryexit_records_stddev_order_by {
  entryexit_id: order_by
}

"""aggregate stddev_pop on columns"""
type student_entryexit_records_stddev_pop_fields {
  entryexit_id: Float
}

"""
order by stddev_pop() on columns of table "student_entryexit_records"
"""
input student_entryexit_records_stddev_pop_order_by {
  entryexit_id: order_by
}

"""aggregate stddev_samp on columns"""
type student_entryexit_records_stddev_samp_fields {
  entryexit_id: Float
}

"""
order by stddev_samp() on columns of table "student_entryexit_records"
"""
input student_entryexit_records_stddev_samp_order_by {
  entryexit_id: order_by
}

"""aggregate sum on columns"""
type student_entryexit_records_sum_fields {
  entryexit_id: Int
}

"""
order by sum() on columns of table "student_entryexit_records"
"""
input student_entryexit_records_sum_order_by {
  entryexit_id: order_by
}

"""
update columns of table "student_entryexit_records"
"""
enum student_entryexit_records_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  entry_at

  """column name"""
  entryexit_id

  """column name"""
  exit_at

  """column name"""
  resource_path

  """column name"""
  student_id

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type student_entryexit_records_var_pop_fields {
  entryexit_id: Float
}

"""
order by var_pop() on columns of table "student_entryexit_records"
"""
input student_entryexit_records_var_pop_order_by {
  entryexit_id: order_by
}

"""aggregate var_samp on columns"""
type student_entryexit_records_var_samp_fields {
  entryexit_id: Float
}

"""
order by var_samp() on columns of table "student_entryexit_records"
"""
input student_entryexit_records_var_samp_order_by {
  entryexit_id: order_by
}

"""aggregate variance on columns"""
type student_entryexit_records_variance_fields {
  entryexit_id: Float
}

"""
order by variance() on columns of table "student_entryexit_records"
"""
input student_entryexit_records_variance_order_by {
  entryexit_id: order_by
}

"""
columns and relationships of "student_parents"
"""
type student_parents {
  created_at: timestamptz!
  deleted_at: timestamptz

  """An object relationship"""
  parent: parents
  parent_id: String!

  """An object relationship"""
  parent_user: users
  relationship: String!
  resource_path: String!

  """An object relationship"""
  student: students
  student_id: String!

  """An object relationship"""
  student_user: users
  updated_at: timestamptz!
}

"""
aggregated selection of "student_parents"
"""
type student_parents_aggregate {
  aggregate: student_parents_aggregate_fields
  nodes: [student_parents!]!
}

"""
aggregate fields of "student_parents"
"""
type student_parents_aggregate_fields {
  count(columns: [student_parents_select_column!], distinct: Boolean): Int
  max: student_parents_max_fields
  min: student_parents_min_fields
}

"""
order by aggregate values of table "student_parents"
"""
input student_parents_aggregate_order_by {
  count: order_by
  max: student_parents_max_order_by
  min: student_parents_min_order_by
}

"""
input type for inserting array relation for remote table "student_parents"
"""
input student_parents_arr_rel_insert_input {
  data: [student_parents_insert_input!]!
  on_conflict: student_parents_on_conflict
}

"""
Boolean expression to filter rows from the table "student_parents". All fields are combined with a logical 'AND'.
"""
input student_parents_bool_exp {
  _and: [student_parents_bool_exp]
  _not: student_parents_bool_exp
  _or: [student_parents_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  parent: parents_bool_exp
  parent_id: String_comparison_exp
  parent_user: users_bool_exp
  relationship: String_comparison_exp
  resource_path: String_comparison_exp
  student: students_bool_exp
  student_id: String_comparison_exp
  student_user: users_bool_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "student_parents"
"""
enum student_parents_constraint {
  """unique or primary key constraint"""
  student_parents_pk
}

"""
input type for inserting data into table "student_parents"
"""
input student_parents_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  parent: parents_obj_rel_insert_input
  parent_id: String
  parent_user: users_obj_rel_insert_input
  relationship: String
  resource_path: String
  student: students_obj_rel_insert_input
  student_id: String
  student_user: users_obj_rel_insert_input
  updated_at: timestamptz
}

"""aggregate max on columns"""
type student_parents_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  parent_id: String
  relationship: String
  resource_path: String
  student_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "student_parents"
"""
input student_parents_max_order_by {
  created_at: order_by
  deleted_at: order_by
  parent_id: order_by
  relationship: order_by
  resource_path: order_by
  student_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type student_parents_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  parent_id: String
  relationship: String
  resource_path: String
  student_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "student_parents"
"""
input student_parents_min_order_by {
  created_at: order_by
  deleted_at: order_by
  parent_id: order_by
  relationship: order_by
  resource_path: order_by
  student_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "student_parents"
"""
type student_parents_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [student_parents!]!
}

"""
input type for inserting object relation for remote table "student_parents"
"""
input student_parents_obj_rel_insert_input {
  data: student_parents_insert_input!
  on_conflict: student_parents_on_conflict
}

"""
on conflict condition type for table "student_parents"
"""
input student_parents_on_conflict {
  constraint: student_parents_constraint!
  update_columns: [student_parents_update_column!]!
  where: student_parents_bool_exp
}

"""
ordering options when selecting data from "student_parents"
"""
input student_parents_order_by {
  created_at: order_by
  deleted_at: order_by
  parent: parents_order_by
  parent_id: order_by
  parent_user: users_order_by
  relationship: order_by
  resource_path: order_by
  student: students_order_by
  student_id: order_by
  student_user: users_order_by
  updated_at: order_by
}

"""
primary key columns input for table: "student_parents"
"""
input student_parents_pk_columns_input {
  parent_id: String!
  student_id: String!
}

"""
select columns of table "student_parents"
"""
enum student_parents_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  parent_id

  """column name"""
  relationship

  """column name"""
  resource_path

  """column name"""
  student_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "student_parents"
"""
input student_parents_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  parent_id: String
  relationship: String
  resource_path: String
  student_id: String
  updated_at: timestamptz
}

"""
update columns of table "student_parents"
"""
enum student_parents_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  parent_id

  """column name"""
  relationship

  """column name"""
  resource_path

  """column name"""
  student_id

  """column name"""
  updated_at
}

"""
columns and relationships of "student_qr"
"""
type student_qr {
  created_at: timestamptz!
  qr_id: Int!
  qr_url: String!
  resource_path: String!
  student_id: String!

  """An object relationship"""
  students: students!
  updated_at: timestamptz!
  version: String
}

"""
aggregated selection of "student_qr"
"""
type student_qr_aggregate {
  aggregate: student_qr_aggregate_fields
  nodes: [student_qr!]!
}

"""
aggregate fields of "student_qr"
"""
type student_qr_aggregate_fields {
  avg: student_qr_avg_fields
  count(columns: [student_qr_select_column!], distinct: Boolean): Int
  max: student_qr_max_fields
  min: student_qr_min_fields
  stddev: student_qr_stddev_fields
  stddev_pop: student_qr_stddev_pop_fields
  stddev_samp: student_qr_stddev_samp_fields
  sum: student_qr_sum_fields
  var_pop: student_qr_var_pop_fields
  var_samp: student_qr_var_samp_fields
  variance: student_qr_variance_fields
}

"""
order by aggregate values of table "student_qr"
"""
input student_qr_aggregate_order_by {
  avg: student_qr_avg_order_by
  count: order_by
  max: student_qr_max_order_by
  min: student_qr_min_order_by
  stddev: student_qr_stddev_order_by
  stddev_pop: student_qr_stddev_pop_order_by
  stddev_samp: student_qr_stddev_samp_order_by
  sum: student_qr_sum_order_by
  var_pop: student_qr_var_pop_order_by
  var_samp: student_qr_var_samp_order_by
  variance: student_qr_variance_order_by
}

"""
input type for inserting array relation for remote table "student_qr"
"""
input student_qr_arr_rel_insert_input {
  data: [student_qr_insert_input!]!
  on_conflict: student_qr_on_conflict
}

"""aggregate avg on columns"""
type student_qr_avg_fields {
  qr_id: Float
}

"""
order by avg() on columns of table "student_qr"
"""
input student_qr_avg_order_by {
  qr_id: order_by
}

"""
Boolean expression to filter rows from the table "student_qr". All fields are combined with a logical 'AND'.
"""
input student_qr_bool_exp {
  _and: [student_qr_bool_exp]
  _not: student_qr_bool_exp
  _or: [student_qr_bool_exp]
  created_at: timestamptz_comparison_exp
  qr_id: Int_comparison_exp
  qr_url: String_comparison_exp
  resource_path: String_comparison_exp
  student_id: String_comparison_exp
  students: students_bool_exp
  updated_at: timestamptz_comparison_exp
  version: String_comparison_exp
}

"""
unique or primary key constraints on table "student_qr"
"""
enum student_qr_constraint {
  """unique or primary key constraint"""
  student_qr_pk

  """unique or primary key constraint"""
  student_qr_qr_url_key

  """unique or primary key constraint"""
  student_qr_student_id_key
}

"""
input type for incrementing integer column in table "student_qr"
"""
input student_qr_inc_input {
  qr_id: Int
}

"""
input type for inserting data into table "student_qr"
"""
input student_qr_insert_input {
  created_at: timestamptz
  qr_id: Int
  qr_url: String
  resource_path: String
  student_id: String
  students: students_obj_rel_insert_input
  updated_at: timestamptz
  version: String
}

"""aggregate max on columns"""
type student_qr_max_fields {
  created_at: timestamptz
  qr_id: Int
  qr_url: String
  resource_path: String
  student_id: String
  updated_at: timestamptz
  version: String
}

"""
order by max() on columns of table "student_qr"
"""
input student_qr_max_order_by {
  created_at: order_by
  qr_id: order_by
  qr_url: order_by
  resource_path: order_by
  student_id: order_by
  updated_at: order_by
  version: order_by
}

"""aggregate min on columns"""
type student_qr_min_fields {
  created_at: timestamptz
  qr_id: Int
  qr_url: String
  resource_path: String
  student_id: String
  updated_at: timestamptz
  version: String
}

"""
order by min() on columns of table "student_qr"
"""
input student_qr_min_order_by {
  created_at: order_by
  qr_id: order_by
  qr_url: order_by
  resource_path: order_by
  student_id: order_by
  updated_at: order_by
  version: order_by
}

"""
response of any mutation on the table "student_qr"
"""
type student_qr_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [student_qr!]!
}

"""
input type for inserting object relation for remote table "student_qr"
"""
input student_qr_obj_rel_insert_input {
  data: student_qr_insert_input!
  on_conflict: student_qr_on_conflict
}

"""
on conflict condition type for table "student_qr"
"""
input student_qr_on_conflict {
  constraint: student_qr_constraint!
  update_columns: [student_qr_update_column!]!
  where: student_qr_bool_exp
}

"""
ordering options when selecting data from "student_qr"
"""
input student_qr_order_by {
  created_at: order_by
  qr_id: order_by
  qr_url: order_by
  resource_path: order_by
  student_id: order_by
  students: students_order_by
  updated_at: order_by
  version: order_by
}

"""
primary key columns input for table: "student_qr"
"""
input student_qr_pk_columns_input {
  qr_id: Int!
}

"""
select columns of table "student_qr"
"""
enum student_qr_select_column {
  """column name"""
  created_at

  """column name"""
  qr_id

  """column name"""
  qr_url

  """column name"""
  resource_path

  """column name"""
  student_id

  """column name"""
  updated_at

  """column name"""
  version
}

"""
input type for updating data in table "student_qr"
"""
input student_qr_set_input {
  created_at: timestamptz
  qr_id: Int
  qr_url: String
  resource_path: String
  student_id: String
  updated_at: timestamptz
  version: String
}

"""aggregate stddev on columns"""
type student_qr_stddev_fields {
  qr_id: Float
}

"""
order by stddev() on columns of table "student_qr"
"""
input student_qr_stddev_order_by {
  qr_id: order_by
}

"""aggregate stddev_pop on columns"""
type student_qr_stddev_pop_fields {
  qr_id: Float
}

"""
order by stddev_pop() on columns of table "student_qr"
"""
input student_qr_stddev_pop_order_by {
  qr_id: order_by
}

"""aggregate stddev_samp on columns"""
type student_qr_stddev_samp_fields {
  qr_id: Float
}

"""
order by stddev_samp() on columns of table "student_qr"
"""
input student_qr_stddev_samp_order_by {
  qr_id: order_by
}

"""aggregate sum on columns"""
type student_qr_sum_fields {
  qr_id: Int
}

"""
order by sum() on columns of table "student_qr"
"""
input student_qr_sum_order_by {
  qr_id: order_by
}

"""
update columns of table "student_qr"
"""
enum student_qr_update_column {
  """column name"""
  created_at

  """column name"""
  qr_id

  """column name"""
  qr_url

  """column name"""
  resource_path

  """column name"""
  student_id

  """column name"""
  updated_at

  """column name"""
  version
}

"""aggregate var_pop on columns"""
type student_qr_var_pop_fields {
  qr_id: Float
}

"""
order by var_pop() on columns of table "student_qr"
"""
input student_qr_var_pop_order_by {
  qr_id: order_by
}

"""aggregate var_samp on columns"""
type student_qr_var_samp_fields {
  qr_id: Float
}

"""
order by var_samp() on columns of table "student_qr"
"""
input student_qr_var_samp_order_by {
  qr_id: order_by
}

"""aggregate variance on columns"""
type student_qr_variance_fields {
  qr_id: Float
}

"""
order by variance() on columns of table "student_qr"
"""
input student_qr_variance_order_by {
  qr_id: order_by
}

"""
columns and relationships of "student_subscriptions"
"""
type student_subscriptions {
  amount: numeric

  """An array relationship"""
  class_members(
    """distinct select on columns"""
    distinct_on: [class_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_members_order_by!]

    """filter the rows returned"""
    where: class_members_bool_exp
  ): [class_members!]!

  """An aggregated array relationship"""
  class_members_aggregate(
    """distinct select on columns"""
    distinct_on: [class_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_members_order_by!]

    """filter the rows returned"""
    where: class_members_bool_exp
  ): class_members_aggregate!
  country: String
  coupon_amount: numeric
  created_at: timestamptz!
  deleted_at: timestamptz
  end_time: timestamptz!
  extend_from: String
  grades: _int4

  """An object relationship"""
  plan: plans
  plan_id: String!
  resource_path: String
  start_time: timestamptz!
  status: String!

  """An object relationship"""
  student: students!
  student_id: String!
  student_order_id: Int
  student_subscription_id: String!
  subject: _text
  updated_at: timestamptz!

  """An object relationship"""
  user: users
}

"""
aggregated selection of "student_subscriptions"
"""
type student_subscriptions_aggregate {
  aggregate: student_subscriptions_aggregate_fields
  nodes: [student_subscriptions!]!
}

"""
aggregate fields of "student_subscriptions"
"""
type student_subscriptions_aggregate_fields {
  avg: student_subscriptions_avg_fields
  count(columns: [student_subscriptions_select_column!], distinct: Boolean): Int
  max: student_subscriptions_max_fields
  min: student_subscriptions_min_fields
  stddev: student_subscriptions_stddev_fields
  stddev_pop: student_subscriptions_stddev_pop_fields
  stddev_samp: student_subscriptions_stddev_samp_fields
  sum: student_subscriptions_sum_fields
  var_pop: student_subscriptions_var_pop_fields
  var_samp: student_subscriptions_var_samp_fields
  variance: student_subscriptions_variance_fields
}

"""
order by aggregate values of table "student_subscriptions"
"""
input student_subscriptions_aggregate_order_by {
  avg: student_subscriptions_avg_order_by
  count: order_by
  max: student_subscriptions_max_order_by
  min: student_subscriptions_min_order_by
  stddev: student_subscriptions_stddev_order_by
  stddev_pop: student_subscriptions_stddev_pop_order_by
  stddev_samp: student_subscriptions_stddev_samp_order_by
  sum: student_subscriptions_sum_order_by
  var_pop: student_subscriptions_var_pop_order_by
  var_samp: student_subscriptions_var_samp_order_by
  variance: student_subscriptions_variance_order_by
}

"""
input type for inserting array relation for remote table "student_subscriptions"
"""
input student_subscriptions_arr_rel_insert_input {
  data: [student_subscriptions_insert_input!]!
  on_conflict: student_subscriptions_on_conflict
}

"""aggregate avg on columns"""
type student_subscriptions_avg_fields {
  amount: Float
  coupon_amount: Float
  student_order_id: Float
}

"""
order by avg() on columns of table "student_subscriptions"
"""
input student_subscriptions_avg_order_by {
  amount: order_by
  coupon_amount: order_by
  student_order_id: order_by
}

"""
Boolean expression to filter rows from the table "student_subscriptions". All fields are combined with a logical 'AND'.
"""
input student_subscriptions_bool_exp {
  _and: [student_subscriptions_bool_exp]
  _not: student_subscriptions_bool_exp
  _or: [student_subscriptions_bool_exp]
  amount: numeric_comparison_exp
  class_members: class_members_bool_exp
  country: String_comparison_exp
  coupon_amount: numeric_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  end_time: timestamptz_comparison_exp
  extend_from: String_comparison_exp
  grades: _int4_comparison_exp
  plan: plans_bool_exp
  plan_id: String_comparison_exp
  resource_path: String_comparison_exp
  start_time: timestamptz_comparison_exp
  status: String_comparison_exp
  student: students_bool_exp
  student_id: String_comparison_exp
  student_order_id: Int_comparison_exp
  student_subscription_id: String_comparison_exp
  subject: _text_comparison_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
}

"""
unique or primary key constraints on table "student_subscriptions"
"""
enum student_subscriptions_constraint {
  """unique or primary key constraint"""
  student_subscriptions_pk
}

"""
input type for incrementing integer column in table "student_subscriptions"
"""
input student_subscriptions_inc_input {
  amount: numeric
  coupon_amount: numeric
  student_order_id: Int
}

"""
input type for inserting data into table "student_subscriptions"
"""
input student_subscriptions_insert_input {
  amount: numeric
  class_members: class_members_arr_rel_insert_input
  country: String
  coupon_amount: numeric
  created_at: timestamptz
  deleted_at: timestamptz
  end_time: timestamptz
  extend_from: String
  grades: _int4
  plan: plans_obj_rel_insert_input
  plan_id: String
  resource_path: String
  start_time: timestamptz
  status: String
  student: students_obj_rel_insert_input
  student_id: String
  student_order_id: Int
  student_subscription_id: String
  subject: _text
  updated_at: timestamptz
  user: users_obj_rel_insert_input
}

"""aggregate max on columns"""
type student_subscriptions_max_fields {
  amount: numeric
  country: String
  coupon_amount: numeric
  created_at: timestamptz
  deleted_at: timestamptz
  end_time: timestamptz
  extend_from: String
  plan_id: String
  resource_path: String
  start_time: timestamptz
  status: String
  student_id: String
  student_order_id: Int
  student_subscription_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "student_subscriptions"
"""
input student_subscriptions_max_order_by {
  amount: order_by
  country: order_by
  coupon_amount: order_by
  created_at: order_by
  deleted_at: order_by
  end_time: order_by
  extend_from: order_by
  plan_id: order_by
  resource_path: order_by
  start_time: order_by
  status: order_by
  student_id: order_by
  student_order_id: order_by
  student_subscription_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type student_subscriptions_min_fields {
  amount: numeric
  country: String
  coupon_amount: numeric
  created_at: timestamptz
  deleted_at: timestamptz
  end_time: timestamptz
  extend_from: String
  plan_id: String
  resource_path: String
  start_time: timestamptz
  status: String
  student_id: String
  student_order_id: Int
  student_subscription_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "student_subscriptions"
"""
input student_subscriptions_min_order_by {
  amount: order_by
  country: order_by
  coupon_amount: order_by
  created_at: order_by
  deleted_at: order_by
  end_time: order_by
  extend_from: order_by
  plan_id: order_by
  resource_path: order_by
  start_time: order_by
  status: order_by
  student_id: order_by
  student_order_id: order_by
  student_subscription_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "student_subscriptions"
"""
type student_subscriptions_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [student_subscriptions!]!
}

"""
input type for inserting object relation for remote table "student_subscriptions"
"""
input student_subscriptions_obj_rel_insert_input {
  data: student_subscriptions_insert_input!
  on_conflict: student_subscriptions_on_conflict
}

"""
on conflict condition type for table "student_subscriptions"
"""
input student_subscriptions_on_conflict {
  constraint: student_subscriptions_constraint!
  update_columns: [student_subscriptions_update_column!]!
  where: student_subscriptions_bool_exp
}

"""
ordering options when selecting data from "student_subscriptions"
"""
input student_subscriptions_order_by {
  amount: order_by
  class_members_aggregate: class_members_aggregate_order_by
  country: order_by
  coupon_amount: order_by
  created_at: order_by
  deleted_at: order_by
  end_time: order_by
  extend_from: order_by
  grades: order_by
  plan: plans_order_by
  plan_id: order_by
  resource_path: order_by
  start_time: order_by
  status: order_by
  student: students_order_by
  student_id: order_by
  student_order_id: order_by
  student_subscription_id: order_by
  subject: order_by
  updated_at: order_by
  user: users_order_by
}

"""
primary key columns input for table: "student_subscriptions"
"""
input student_subscriptions_pk_columns_input {
  student_subscription_id: String!
}

"""
select columns of table "student_subscriptions"
"""
enum student_subscriptions_select_column {
  """column name"""
  amount

  """column name"""
  country

  """column name"""
  coupon_amount

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_time

  """column name"""
  extend_from

  """column name"""
  grades

  """column name"""
  plan_id

  """column name"""
  resource_path

  """column name"""
  start_time

  """column name"""
  status

  """column name"""
  student_id

  """column name"""
  student_order_id

  """column name"""
  student_subscription_id

  """column name"""
  subject

  """column name"""
  updated_at
}

"""
input type for updating data in table "student_subscriptions"
"""
input student_subscriptions_set_input {
  amount: numeric
  country: String
  coupon_amount: numeric
  created_at: timestamptz
  deleted_at: timestamptz
  end_time: timestamptz
  extend_from: String
  grades: _int4
  plan_id: String
  resource_path: String
  start_time: timestamptz
  status: String
  student_id: String
  student_order_id: Int
  student_subscription_id: String
  subject: _text
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type student_subscriptions_stddev_fields {
  amount: Float
  coupon_amount: Float
  student_order_id: Float
}

"""
order by stddev() on columns of table "student_subscriptions"
"""
input student_subscriptions_stddev_order_by {
  amount: order_by
  coupon_amount: order_by
  student_order_id: order_by
}

"""aggregate stddev_pop on columns"""
type student_subscriptions_stddev_pop_fields {
  amount: Float
  coupon_amount: Float
  student_order_id: Float
}

"""
order by stddev_pop() on columns of table "student_subscriptions"
"""
input student_subscriptions_stddev_pop_order_by {
  amount: order_by
  coupon_amount: order_by
  student_order_id: order_by
}

"""aggregate stddev_samp on columns"""
type student_subscriptions_stddev_samp_fields {
  amount: Float
  coupon_amount: Float
  student_order_id: Float
}

"""
order by stddev_samp() on columns of table "student_subscriptions"
"""
input student_subscriptions_stddev_samp_order_by {
  amount: order_by
  coupon_amount: order_by
  student_order_id: order_by
}

"""aggregate sum on columns"""
type student_subscriptions_sum_fields {
  amount: numeric
  coupon_amount: numeric
  student_order_id: Int
}

"""
order by sum() on columns of table "student_subscriptions"
"""
input student_subscriptions_sum_order_by {
  amount: order_by
  coupon_amount: order_by
  student_order_id: order_by
}

"""
update columns of table "student_subscriptions"
"""
enum student_subscriptions_update_column {
  """column name"""
  amount

  """column name"""
  country

  """column name"""
  coupon_amount

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  end_time

  """column name"""
  extend_from

  """column name"""
  grades

  """column name"""
  plan_id

  """column name"""
  resource_path

  """column name"""
  start_time

  """column name"""
  status

  """column name"""
  student_id

  """column name"""
  student_order_id

  """column name"""
  student_subscription_id

  """column name"""
  subject

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type student_subscriptions_var_pop_fields {
  amount: Float
  coupon_amount: Float
  student_order_id: Float
}

"""
order by var_pop() on columns of table "student_subscriptions"
"""
input student_subscriptions_var_pop_order_by {
  amount: order_by
  coupon_amount: order_by
  student_order_id: order_by
}

"""aggregate var_samp on columns"""
type student_subscriptions_var_samp_fields {
  amount: Float
  coupon_amount: Float
  student_order_id: Float
}

"""
order by var_samp() on columns of table "student_subscriptions"
"""
input student_subscriptions_var_samp_order_by {
  amount: order_by
  coupon_amount: order_by
  student_order_id: order_by
}

"""aggregate variance on columns"""
type student_subscriptions_variance_fields {
  amount: Float
  coupon_amount: Float
  student_order_id: Float
}

"""
order by variance() on columns of table "student_subscriptions"
"""
input student_subscriptions_variance_order_by {
  amount: order_by
  coupon_amount: order_by
  student_order_id: order_by
}

"""
columns and relationships of "students"
"""
type students {
  additional_data(
    """JSON select path"""
    path: String
  ): jsonb

  """students need to pay before this day"""
  billing_date: timestamptz!
  biography: String
  birthday: date

  """An array relationship"""
  class_members(
    """distinct select on columns"""
    distinct_on: [class_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_members_order_by!]

    """filter the rows returned"""
    where: class_members_bool_exp
  ): [class_members!]!

  """An aggregated array relationship"""
  class_members_aggregate(
    """distinct select on columns"""
    distinct_on: [class_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_members_order_by!]

    """filter the rows returned"""
    where: class_members_bool_exp
  ): class_members_aggregate!
  created_at: timestamptz!
  current_grade: smallint
  deleted_at: timestamptz
  enrollment_status: String!

  """An array relationship"""
  hub_tours(
    """distinct select on columns"""
    distinct_on: [hub_tours_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [hub_tours_order_by!]

    """filter the rows returned"""
    where: hub_tours_bool_exp
  ): [hub_tours!]!

  """An aggregated array relationship"""
  hub_tours_aggregate(
    """distinct select on columns"""
    distinct_on: [hub_tours_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [hub_tours_order_by!]

    """filter the rows returned"""
    where: hub_tours_bool_exp
  ): hub_tours_aggregate!

  """An array relationship"""
  lesson_report_details(
    """distinct select on columns"""
    distinct_on: [lesson_report_details_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_report_details_order_by!]

    """filter the rows returned"""
    where: lesson_report_details_bool_exp
  ): [lesson_report_details!]!

  """An aggregated array relationship"""
  lesson_report_details_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_report_details_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_report_details_order_by!]

    """filter the rows returned"""
    where: lesson_report_details_bool_exp
  ): lesson_report_details_aggregate!
  on_trial: Boolean!
  previous_grade: smallint
  resource_path: String!

  """An object relationship"""
  school: schools
  school_id: Int
  student_external_id: String
  student_id: String!
  student_note: String!

  """An array relationship"""
  student_subscriptions(
    """distinct select on columns"""
    distinct_on: [student_subscriptions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_subscriptions_order_by!]

    """filter the rows returned"""
    where: student_subscriptions_bool_exp
  ): [student_subscriptions!]!

  """An aggregated array relationship"""
  student_subscriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [student_subscriptions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_subscriptions_order_by!]

    """filter the rows returned"""
    where: student_subscriptions_bool_exp
  ): student_subscriptions_aggregate!

  """An array relationship"""
  students_assigned_coaches(
    """distinct select on columns"""
    distinct_on: [students_assigned_coaches_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [students_assigned_coaches_order_by!]

    """filter the rows returned"""
    where: students_assigned_coaches_bool_exp
  ): [students_assigned_coaches!]!

  """An aggregated array relationship"""
  students_assigned_coaches_aggregate(
    """distinct select on columns"""
    distinct_on: [students_assigned_coaches_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [students_assigned_coaches_order_by!]

    """filter the rows returned"""
    where: students_assigned_coaches_bool_exp
  ): students_assigned_coaches_aggregate!
  target_university: String
  total_question_limit: smallint
  updated_at: timestamptz!

  """An object relationship"""
  user: users
}

"""
aggregated selection of "students"
"""
type students_aggregate {
  aggregate: students_aggregate_fields
  nodes: [students!]!
}

"""
aggregate fields of "students"
"""
type students_aggregate_fields {
  avg: students_avg_fields
  count(columns: [students_select_column!], distinct: Boolean): Int
  max: students_max_fields
  min: students_min_fields
  stddev: students_stddev_fields
  stddev_pop: students_stddev_pop_fields
  stddev_samp: students_stddev_samp_fields
  sum: students_sum_fields
  var_pop: students_var_pop_fields
  var_samp: students_var_samp_fields
  variance: students_variance_fields
}

"""
order by aggregate values of table "students"
"""
input students_aggregate_order_by {
  avg: students_avg_order_by
  count: order_by
  max: students_max_order_by
  min: students_min_order_by
  stddev: students_stddev_order_by
  stddev_pop: students_stddev_pop_order_by
  stddev_samp: students_stddev_samp_order_by
  sum: students_sum_order_by
  var_pop: students_var_pop_order_by
  var_samp: students_var_samp_order_by
  variance: students_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input students_append_input {
  additional_data: jsonb
}

"""
input type for inserting array relation for remote table "students"
"""
input students_arr_rel_insert_input {
  data: [students_insert_input!]!
  on_conflict: students_on_conflict
}

"""
columns and relationships of "students_assigned_coaches"
"""
type students_assigned_coaches {
  """An object relationship"""
  coach: coaches!
  coach_id: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  is_active: Boolean!
  resource_path: String

  """An object relationship"""
  student: students!
  student_id: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "students_assigned_coaches"
"""
type students_assigned_coaches_aggregate {
  aggregate: students_assigned_coaches_aggregate_fields
  nodes: [students_assigned_coaches!]!
}

"""
aggregate fields of "students_assigned_coaches"
"""
type students_assigned_coaches_aggregate_fields {
  count(columns: [students_assigned_coaches_select_column!], distinct: Boolean): Int
  max: students_assigned_coaches_max_fields
  min: students_assigned_coaches_min_fields
}

"""
order by aggregate values of table "students_assigned_coaches"
"""
input students_assigned_coaches_aggregate_order_by {
  count: order_by
  max: students_assigned_coaches_max_order_by
  min: students_assigned_coaches_min_order_by
}

"""
input type for inserting array relation for remote table "students_assigned_coaches"
"""
input students_assigned_coaches_arr_rel_insert_input {
  data: [students_assigned_coaches_insert_input!]!
}

"""
Boolean expression to filter rows from the table "students_assigned_coaches". All fields are combined with a logical 'AND'.
"""
input students_assigned_coaches_bool_exp {
  _and: [students_assigned_coaches_bool_exp]
  _not: students_assigned_coaches_bool_exp
  _or: [students_assigned_coaches_bool_exp]
  coach: coaches_bool_exp
  coach_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  is_active: Boolean_comparison_exp
  resource_path: String_comparison_exp
  student: students_bool_exp
  student_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
input type for inserting data into table "students_assigned_coaches"
"""
input students_assigned_coaches_insert_input {
  coach: coaches_obj_rel_insert_input
  coach_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  is_active: Boolean
  resource_path: String
  student: students_obj_rel_insert_input
  student_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type students_assigned_coaches_max_fields {
  coach_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  student_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "students_assigned_coaches"
"""
input students_assigned_coaches_max_order_by {
  coach_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  student_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type students_assigned_coaches_min_fields {
  coach_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  student_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "students_assigned_coaches"
"""
input students_assigned_coaches_min_order_by {
  coach_id: order_by
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  student_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "students_assigned_coaches"
"""
type students_assigned_coaches_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [students_assigned_coaches!]!
}

"""
input type for inserting object relation for remote table "students_assigned_coaches"
"""
input students_assigned_coaches_obj_rel_insert_input {
  data: students_assigned_coaches_insert_input!
}

"""
ordering options when selecting data from "students_assigned_coaches"
"""
input students_assigned_coaches_order_by {
  coach: coaches_order_by
  coach_id: order_by
  created_at: order_by
  deleted_at: order_by
  is_active: order_by
  resource_path: order_by
  student: students_order_by
  student_id: order_by
  updated_at: order_by
}

"""
select columns of table "students_assigned_coaches"
"""
enum students_assigned_coaches_select_column {
  """column name"""
  coach_id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  is_active

  """column name"""
  resource_path

  """column name"""
  student_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "students_assigned_coaches"
"""
input students_assigned_coaches_set_input {
  coach_id: String
  created_at: timestamptz
  deleted_at: timestamptz
  is_active: Boolean
  resource_path: String
  student_id: String
  updated_at: timestamptz
}

"""aggregate avg on columns"""
type students_avg_fields {
  current_grade: Float
  previous_grade: Float
  school_id: Float
  total_question_limit: Float
}

"""
order by avg() on columns of table "students"
"""
input students_avg_order_by {
  current_grade: order_by
  previous_grade: order_by
  school_id: order_by
  total_question_limit: order_by
}

"""
Boolean expression to filter rows from the table "students". All fields are combined with a logical 'AND'.
"""
input students_bool_exp {
  _and: [students_bool_exp]
  _not: students_bool_exp
  _or: [students_bool_exp]
  additional_data: jsonb_comparison_exp
  billing_date: timestamptz_comparison_exp
  biography: String_comparison_exp
  birthday: date_comparison_exp
  class_members: class_members_bool_exp
  created_at: timestamptz_comparison_exp
  current_grade: smallint_comparison_exp
  deleted_at: timestamptz_comparison_exp
  enrollment_status: String_comparison_exp
  hub_tours: hub_tours_bool_exp
  lesson_report_details: lesson_report_details_bool_exp
  on_trial: Boolean_comparison_exp
  previous_grade: smallint_comparison_exp
  resource_path: String_comparison_exp
  school: schools_bool_exp
  school_id: Int_comparison_exp
  student_external_id: String_comparison_exp
  student_id: String_comparison_exp
  student_note: String_comparison_exp
  student_subscriptions: student_subscriptions_bool_exp
  students_assigned_coaches: students_assigned_coaches_bool_exp
  target_university: String_comparison_exp
  total_question_limit: smallint_comparison_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
}

"""
unique or primary key constraints on table "students"
"""
enum students_constraint {
  """unique or primary key constraint"""
  students_pk
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input students_delete_at_path_input {
  additional_data: [String]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input students_delete_elem_input {
  additional_data: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input students_delete_key_input {
  additional_data: String
}

"""
input type for incrementing integer column in table "students"
"""
input students_inc_input {
  current_grade: smallint
  previous_grade: smallint
  school_id: Int
  total_question_limit: smallint
}

"""
input type for inserting data into table "students"
"""
input students_insert_input {
  additional_data: jsonb
  billing_date: timestamptz
  biography: String
  birthday: date
  class_members: class_members_arr_rel_insert_input
  created_at: timestamptz
  current_grade: smallint
  deleted_at: timestamptz
  enrollment_status: String
  hub_tours: hub_tours_arr_rel_insert_input
  lesson_report_details: lesson_report_details_arr_rel_insert_input
  on_trial: Boolean
  previous_grade: smallint
  resource_path: String
  school: schools_obj_rel_insert_input
  school_id: Int
  student_external_id: String
  student_id: String
  student_note: String
  student_subscriptions: student_subscriptions_arr_rel_insert_input
  students_assigned_coaches: students_assigned_coaches_arr_rel_insert_input
  target_university: String
  total_question_limit: smallint
  updated_at: timestamptz
  user: users_obj_rel_insert_input
}

"""aggregate max on columns"""
type students_max_fields {
  billing_date: timestamptz
  biography: String
  birthday: date
  created_at: timestamptz
  current_grade: smallint
  deleted_at: timestamptz
  enrollment_status: String
  previous_grade: smallint
  resource_path: String
  school_id: Int
  student_external_id: String
  student_id: String
  student_note: String
  target_university: String
  total_question_limit: smallint
  updated_at: timestamptz
}

"""
order by max() on columns of table "students"
"""
input students_max_order_by {
  billing_date: order_by
  biography: order_by
  birthday: order_by
  created_at: order_by
  current_grade: order_by
  deleted_at: order_by
  enrollment_status: order_by
  previous_grade: order_by
  resource_path: order_by
  school_id: order_by
  student_external_id: order_by
  student_id: order_by
  student_note: order_by
  target_university: order_by
  total_question_limit: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type students_min_fields {
  billing_date: timestamptz
  biography: String
  birthday: date
  created_at: timestamptz
  current_grade: smallint
  deleted_at: timestamptz
  enrollment_status: String
  previous_grade: smallint
  resource_path: String
  school_id: Int
  student_external_id: String
  student_id: String
  student_note: String
  target_university: String
  total_question_limit: smallint
  updated_at: timestamptz
}

"""
order by min() on columns of table "students"
"""
input students_min_order_by {
  billing_date: order_by
  biography: order_by
  birthday: order_by
  created_at: order_by
  current_grade: order_by
  deleted_at: order_by
  enrollment_status: order_by
  previous_grade: order_by
  resource_path: order_by
  school_id: order_by
  student_external_id: order_by
  student_id: order_by
  student_note: order_by
  target_university: order_by
  total_question_limit: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "students"
"""
type students_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [students!]!
}

"""
input type for inserting object relation for remote table "students"
"""
input students_obj_rel_insert_input {
  data: students_insert_input!
  on_conflict: students_on_conflict
}

"""
on conflict condition type for table "students"
"""
input students_on_conflict {
  constraint: students_constraint!
  update_columns: [students_update_column!]!
  where: students_bool_exp
}

"""
ordering options when selecting data from "students"
"""
input students_order_by {
  additional_data: order_by
  billing_date: order_by
  biography: order_by
  birthday: order_by
  class_members_aggregate: class_members_aggregate_order_by
  created_at: order_by
  current_grade: order_by
  deleted_at: order_by
  enrollment_status: order_by
  hub_tours_aggregate: hub_tours_aggregate_order_by
  lesson_report_details_aggregate: lesson_report_details_aggregate_order_by
  on_trial: order_by
  previous_grade: order_by
  resource_path: order_by
  school: schools_order_by
  school_id: order_by
  student_external_id: order_by
  student_id: order_by
  student_note: order_by
  student_subscriptions_aggregate: student_subscriptions_aggregate_order_by
  students_assigned_coaches_aggregate: students_assigned_coaches_aggregate_order_by
  target_university: order_by
  total_question_limit: order_by
  updated_at: order_by
  user: users_order_by
}

"""
primary key columns input for table: "students"
"""
input students_pk_columns_input {
  student_id: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input students_prepend_input {
  additional_data: jsonb
}

"""
select columns of table "students"
"""
enum students_select_column {
  """column name"""
  additional_data

  """column name"""
  billing_date

  """column name"""
  biography

  """column name"""
  birthday

  """column name"""
  created_at

  """column name"""
  current_grade

  """column name"""
  deleted_at

  """column name"""
  enrollment_status

  """column name"""
  on_trial

  """column name"""
  previous_grade

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  student_external_id

  """column name"""
  student_id

  """column name"""
  student_note

  """column name"""
  target_university

  """column name"""
  total_question_limit

  """column name"""
  updated_at
}

"""
input type for updating data in table "students"
"""
input students_set_input {
  additional_data: jsonb
  billing_date: timestamptz
  biography: String
  birthday: date
  created_at: timestamptz
  current_grade: smallint
  deleted_at: timestamptz
  enrollment_status: String
  on_trial: Boolean
  previous_grade: smallint
  resource_path: String
  school_id: Int
  student_external_id: String
  student_id: String
  student_note: String
  target_university: String
  total_question_limit: smallint
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type students_stddev_fields {
  current_grade: Float
  previous_grade: Float
  school_id: Float
  total_question_limit: Float
}

"""
order by stddev() on columns of table "students"
"""
input students_stddev_order_by {
  current_grade: order_by
  previous_grade: order_by
  school_id: order_by
  total_question_limit: order_by
}

"""aggregate stddev_pop on columns"""
type students_stddev_pop_fields {
  current_grade: Float
  previous_grade: Float
  school_id: Float
  total_question_limit: Float
}

"""
order by stddev_pop() on columns of table "students"
"""
input students_stddev_pop_order_by {
  current_grade: order_by
  previous_grade: order_by
  school_id: order_by
  total_question_limit: order_by
}

"""aggregate stddev_samp on columns"""
type students_stddev_samp_fields {
  current_grade: Float
  previous_grade: Float
  school_id: Float
  total_question_limit: Float
}

"""
order by stddev_samp() on columns of table "students"
"""
input students_stddev_samp_order_by {
  current_grade: order_by
  previous_grade: order_by
  school_id: order_by
  total_question_limit: order_by
}

"""aggregate sum on columns"""
type students_sum_fields {
  current_grade: smallint
  previous_grade: smallint
  school_id: Int
  total_question_limit: smallint
}

"""
order by sum() on columns of table "students"
"""
input students_sum_order_by {
  current_grade: order_by
  previous_grade: order_by
  school_id: order_by
  total_question_limit: order_by
}

"""
update columns of table "students"
"""
enum students_update_column {
  """column name"""
  additional_data

  """column name"""
  billing_date

  """column name"""
  biography

  """column name"""
  birthday

  """column name"""
  created_at

  """column name"""
  current_grade

  """column name"""
  deleted_at

  """column name"""
  enrollment_status

  """column name"""
  on_trial

  """column name"""
  previous_grade

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  student_external_id

  """column name"""
  student_id

  """column name"""
  student_note

  """column name"""
  target_university

  """column name"""
  total_question_limit

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type students_var_pop_fields {
  current_grade: Float
  previous_grade: Float
  school_id: Float
  total_question_limit: Float
}

"""
order by var_pop() on columns of table "students"
"""
input students_var_pop_order_by {
  current_grade: order_by
  previous_grade: order_by
  school_id: order_by
  total_question_limit: order_by
}

"""aggregate var_samp on columns"""
type students_var_samp_fields {
  current_grade: Float
  previous_grade: Float
  school_id: Float
  total_question_limit: Float
}

"""
order by var_samp() on columns of table "students"
"""
input students_var_samp_order_by {
  current_grade: order_by
  previous_grade: order_by
  school_id: order_by
  total_question_limit: order_by
}

"""aggregate variance on columns"""
type students_variance_fields {
  current_grade: Float
  previous_grade: Float
  school_id: Float
  total_question_limit: Float
}

"""
order by variance() on columns of table "students"
"""
input students_variance_order_by {
  current_grade: order_by
  previous_grade: order_by
  school_id: order_by
  total_question_limit: order_by
}

"""subscription root"""
type subscription_root {
  """
  fetch data from the table: "assignments"
  """
  assignments(
    """distinct select on columns"""
    distinct_on: [assignments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignments_order_by!]

    """filter the rows returned"""
    where: assignments_bool_exp
  ): [assignments!]!

  """
  fetch aggregated fields from the table: "assignments"
  """
  assignments_aggregate(
    """distinct select on columns"""
    distinct_on: [assignments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignments_order_by!]

    """filter the rows returned"""
    where: assignments_bool_exp
  ): assignments_aggregate!

  """fetch data from the table: "assignments" using primary key columns"""
  assignments_by_pk(assignment_id: String!): assignments

  """
  fetch data from the table: "books"
  """
  books(
    """distinct select on columns"""
    distinct_on: [books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_order_by!]

    """filter the rows returned"""
    where: books_bool_exp
  ): [books!]!

  """
  fetch aggregated fields from the table: "books"
  """
  books_aggregate(
    """distinct select on columns"""
    distinct_on: [books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_order_by!]

    """filter the rows returned"""
    where: books_bool_exp
  ): books_aggregate!

  """fetch data from the table: "books" using primary key columns"""
  books_by_pk(book_id: String!): books

  """
  fetch data from the table: "books_chapters"
  """
  books_chapters(
    """distinct select on columns"""
    distinct_on: [books_chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_chapters_order_by!]

    """filter the rows returned"""
    where: books_chapters_bool_exp
  ): [books_chapters!]!

  """
  fetch aggregated fields from the table: "books_chapters"
  """
  books_chapters_aggregate(
    """distinct select on columns"""
    distinct_on: [books_chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [books_chapters_order_by!]

    """filter the rows returned"""
    where: books_chapters_bool_exp
  ): books_chapters_aggregate!

  """fetch data from the table: "books_chapters" using primary key columns"""
  books_chapters_by_pk(book_id: String!, chapter_id: String!): books_chapters

  """
  fetch data from the table: "chapters"
  """
  chapters(
    """distinct select on columns"""
    distinct_on: [chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [chapters_order_by!]

    """filter the rows returned"""
    where: chapters_bool_exp
  ): [chapters!]!

  """
  fetch aggregated fields from the table: "chapters"
  """
  chapters_aggregate(
    """distinct select on columns"""
    distinct_on: [chapters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [chapters_order_by!]

    """filter the rows returned"""
    where: chapters_bool_exp
  ): chapters_aggregate!

  """fetch data from the table: "chapters" using primary key columns"""
  chapters_by_pk(chapter_id: String!): chapters

  """
  fetch data from the table: "cities"
  """
  cities(
    """distinct select on columns"""
    distinct_on: [cities_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cities_order_by!]

    """filter the rows returned"""
    where: cities_bool_exp
  ): [cities!]!

  """
  fetch aggregated fields from the table: "cities"
  """
  cities_aggregate(
    """distinct select on columns"""
    distinct_on: [cities_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cities_order_by!]

    """filter the rows returned"""
    where: cities_bool_exp
  ): cities_aggregate!

  """fetch data from the table: "cities" using primary key columns"""
  cities_by_pk(city_id: Int!): cities

  """
  fetch data from the table: "class"
  """
  class(
    """distinct select on columns"""
    distinct_on: [class_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_order_by!]

    """filter the rows returned"""
    where: class_bool_exp
  ): [class!]!

  """
  fetch aggregated fields from the table: "class"
  """
  class_aggregate(
    """distinct select on columns"""
    distinct_on: [class_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_order_by!]

    """filter the rows returned"""
    where: class_bool_exp
  ): class_aggregate!

  """fetch data from the table: "class" using primary key columns"""
  class_by_pk(class_id: String!): class

  """
  fetch data from the table: "class_member"
  """
  class_member(
    """distinct select on columns"""
    distinct_on: [class_member_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_member_order_by!]

    """filter the rows returned"""
    where: class_member_bool_exp
  ): [class_member!]!

  """
  fetch aggregated fields from the table: "class_member"
  """
  class_member_aggregate(
    """distinct select on columns"""
    distinct_on: [class_member_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_member_order_by!]

    """filter the rows returned"""
    where: class_member_bool_exp
  ): class_member_aggregate!

  """fetch data from the table: "class_member" using primary key columns"""
  class_member_by_pk(class_member_id: String!): class_member

  """
  fetch data from the table: "class_members"
  """
  class_members(
    """distinct select on columns"""
    distinct_on: [class_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_members_order_by!]

    """filter the rows returned"""
    where: class_members_bool_exp
  ): [class_members!]!

  """
  fetch aggregated fields from the table: "class_members"
  """
  class_members_aggregate(
    """distinct select on columns"""
    distinct_on: [class_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_members_order_by!]

    """filter the rows returned"""
    where: class_members_bool_exp
  ): class_members_aggregate!

  """fetch data from the table: "class_members" using primary key columns"""
  class_members_by_pk(class_member_id: String!): class_members

  """
  fetch data from the table: "classes"
  """
  classes(
    """distinct select on columns"""
    distinct_on: [classes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [classes_order_by!]

    """filter the rows returned"""
    where: classes_bool_exp
  ): [classes!]!

  """
  fetch aggregated fields from the table: "classes"
  """
  classes_aggregate(
    """distinct select on columns"""
    distinct_on: [classes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [classes_order_by!]

    """filter the rows returned"""
    where: classes_bool_exp
  ): classes_aggregate!

  """fetch data from the table: "classes" using primary key columns"""
  classes_by_pk(class_id: Int!): classes

  """
  fetch data from the table: "coaches"
  """
  coaches(
    """distinct select on columns"""
    distinct_on: [coaches_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [coaches_order_by!]

    """filter the rows returned"""
    where: coaches_bool_exp
  ): [coaches!]!

  """
  fetch aggregated fields from the table: "coaches"
  """
  coaches_aggregate(
    """distinct select on columns"""
    distinct_on: [coaches_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [coaches_order_by!]

    """filter the rows returned"""
    where: coaches_bool_exp
  ): coaches_aggregate!

  """fetch data from the table: "coaches" using primary key columns"""
  coaches_by_pk(coach_id: String!): coaches

  """
  fetch data from the table: "cod_orders"
  """
  cod_orders(
    """distinct select on columns"""
    distinct_on: [cod_orders_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cod_orders_order_by!]

    """filter the rows returned"""
    where: cod_orders_bool_exp
  ): [cod_orders!]!

  """
  fetch aggregated fields from the table: "cod_orders"
  """
  cod_orders_aggregate(
    """distinct select on columns"""
    distinct_on: [cod_orders_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cod_orders_order_by!]

    """filter the rows returned"""
    where: cod_orders_bool_exp
  ): cod_orders_aggregate!

  """fetch data from the table: "cod_orders" using primary key columns"""
  cod_orders_by_pk(cod_order_id: String!): cod_orders

  """
  fetch data from the table: "conversion_tasks"
  """
  conversion_tasks(
    """distinct select on columns"""
    distinct_on: [conversion_tasks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [conversion_tasks_order_by!]

    """filter the rows returned"""
    where: conversion_tasks_bool_exp
  ): [conversion_tasks!]!

  """
  fetch aggregated fields from the table: "conversion_tasks"
  """
  conversion_tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [conversion_tasks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [conversion_tasks_order_by!]

    """filter the rows returned"""
    where: conversion_tasks_bool_exp
  ): conversion_tasks_aggregate!

  """
  fetch data from the table: "conversion_tasks" using primary key columns
  """
  conversion_tasks_by_pk(task_uuid: String!): conversion_tasks

  """
  fetch data from the table: "course_access_paths"
  """
  course_access_paths(
    """distinct select on columns"""
    distinct_on: [course_access_paths_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_access_paths_order_by!]

    """filter the rows returned"""
    where: course_access_paths_bool_exp
  ): [course_access_paths!]!

  """
  fetch aggregated fields from the table: "course_access_paths"
  """
  course_access_paths_aggregate(
    """distinct select on columns"""
    distinct_on: [course_access_paths_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_access_paths_order_by!]

    """filter the rows returned"""
    where: course_access_paths_bool_exp
  ): course_access_paths_aggregate!

  """
  fetch data from the table: "course_access_paths" using primary key columns
  """
  course_access_paths_by_pk(course_id: String!, location_id: String!): course_access_paths

  """
  fetch data from the table: "courses"
  """
  courses(
    """distinct select on columns"""
    distinct_on: [courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_order_by!]

    """filter the rows returned"""
    where: courses_bool_exp
  ): [courses!]!

  """
  fetch aggregated fields from the table: "courses"
  """
  courses_aggregate(
    """distinct select on columns"""
    distinct_on: [courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_order_by!]

    """filter the rows returned"""
    where: courses_bool_exp
  ): courses_aggregate!

  """
  fetch data from the table: "courses_books"
  """
  courses_books(
    """distinct select on columns"""
    distinct_on: [courses_books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_books_order_by!]

    """filter the rows returned"""
    where: courses_books_bool_exp
  ): [courses_books!]!

  """
  fetch aggregated fields from the table: "courses_books"
  """
  courses_books_aggregate(
    """distinct select on columns"""
    distinct_on: [courses_books_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_books_order_by!]

    """filter the rows returned"""
    where: courses_books_bool_exp
  ): courses_books_aggregate!

  """fetch data from the table: "courses_books" using primary key columns"""
  courses_books_by_pk(book_id: String!, course_id: String!): courses_books

  """fetch data from the table: "courses" using primary key columns"""
  courses_by_pk(course_id: String!): courses

  """
  fetch data from the table: "courses_classes"
  """
  courses_classes(
    """distinct select on columns"""
    distinct_on: [courses_classes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_classes_order_by!]

    """filter the rows returned"""
    where: courses_classes_bool_exp
  ): [courses_classes!]!

  """
  fetch aggregated fields from the table: "courses_classes"
  """
  courses_classes_aggregate(
    """distinct select on columns"""
    distinct_on: [courses_classes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_classes_order_by!]

    """filter the rows returned"""
    where: courses_classes_bool_exp
  ): courses_classes_aggregate!

  """fetch data from the table: "courses_classes" using primary key columns"""
  courses_classes_by_pk(class_id: Int!, course_id: String!): courses_classes

  """
  fetch data from the table: "districts"
  """
  districts(
    """distinct select on columns"""
    distinct_on: [districts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [districts_order_by!]

    """filter the rows returned"""
    where: districts_bool_exp
  ): [districts!]!

  """
  fetch aggregated fields from the table: "districts"
  """
  districts_aggregate(
    """distinct select on columns"""
    distinct_on: [districts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [districts_order_by!]

    """filter the rows returned"""
    where: districts_bool_exp
  ): districts_aggregate!

  """fetch data from the table: "districts" using primary key columns"""
  districts_by_pk(district_id: Int!): districts

  """
  execute function "find_quiz_by_lo_id" which returns "quizzes"
  """
  find_quiz_by_lo_id(
    """
    input parameters for function "find_quiz_by_lo_id"
    """
    args: find_quiz_by_lo_id_args!

    """distinct select on columns"""
    distinct_on: [quizzes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizzes_order_by!]

    """filter the rows returned"""
    where: quizzes_bool_exp
  ): [quizzes!]!

  """
  execute function "find_quiz_by_lo_id" and query aggregates on result of table type "quizzes"
  """
  find_quiz_by_lo_id_aggregate(
    """
    input parameters for function "find_quiz_by_lo_id"
    """
    args: find_quiz_by_lo_id_args!

    """distinct select on columns"""
    distinct_on: [quizzes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizzes_order_by!]

    """filter the rows returned"""
    where: quizzes_bool_exp
  ): quizzes_aggregate!

  """
  execute function "find_teacher_by_school_id" which returns "users"
  """
  find_teacher_by_school_id(
    """
    input parameters for function "find_teacher_by_school_id"
    """
    args: find_teacher_by_school_id_args!

    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): [users!]!

  """
  execute function "find_teacher_by_school_id" and query aggregates on result of table type "users"
  """
  find_teacher_by_school_id_aggregate(
    """
    input parameters for function "find_teacher_by_school_id"
    """
    args: find_teacher_by_school_id_args!

    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): users_aggregate!

  """
  execute function "get_locations_active_by_course_id" which returns "course_access_paths"
  """
  get_locations_active_by_course_id(
    """
    input parameters for function "get_locations_active_by_course_id"
    """
    args: get_locations_active_by_course_id_args!

    """distinct select on columns"""
    distinct_on: [course_access_paths_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_access_paths_order_by!]

    """filter the rows returned"""
    where: course_access_paths_bool_exp
  ): [course_access_paths!]!

  """
  execute function "get_locations_active_by_course_id" and query aggregates on result of table type "course_access_paths"
  """
  get_locations_active_by_course_id_aggregate(
    """
    input parameters for function "get_locations_active_by_course_id"
    """
    args: get_locations_active_by_course_id_args!

    """distinct select on columns"""
    distinct_on: [course_access_paths_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [course_access_paths_order_by!]

    """filter the rows returned"""
    where: course_access_paths_bool_exp
  ): course_access_paths_aggregate!

  """
  execute function "get_locations_lowest_level" which returns "locations"
  """
  get_locations_lowest_level(
    """
    input parameters for function "get_locations_lowest_level"
    """
    args: get_locations_lowest_level_args!

    """distinct select on columns"""
    distinct_on: [locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locations_order_by!]

    """filter the rows returned"""
    where: locations_bool_exp
  ): [locations!]!

  """
  execute function "get_locations_lowest_level" and query aggregates on result of table type "locations"
  """
  get_locations_lowest_level_aggregate(
    """
    input parameters for function "get_locations_lowest_level"
    """
    args: get_locations_lowest_level_args!

    """distinct select on columns"""
    distinct_on: [locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locations_order_by!]

    """filter the rows returned"""
    where: locations_bool_exp
  ): locations_aggregate!

  """
  execute function "get_lowest_location_types" which returns "location_types"
  """
  get_lowest_location_types(
    """distinct select on columns"""
    distinct_on: [location_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [location_types_order_by!]

    """filter the rows returned"""
    where: location_types_bool_exp
  ): [location_types!]!

  """
  execute function "get_lowest_location_types" and query aggregates on result of table type "location_types"
  """
  get_lowest_location_types_aggregate(
    """distinct select on columns"""
    distinct_on: [location_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [location_types_order_by!]

    """filter the rows returned"""
    where: location_types_bool_exp
  ): location_types_aggregate!

  """
  execute function "get_partner_dynamic_form_field_values_by_student" which returns "partner_dynamic_form_field_values"
  """
  get_partner_dynamic_form_field_values_by_student(
    """
    input parameters for function "get_partner_dynamic_form_field_values_by_student"
    """
    args: get_partner_dynamic_form_field_values_by_student_args!

    """distinct select on columns"""
    distinct_on: [partner_dynamic_form_field_values_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [partner_dynamic_form_field_values_order_by!]

    """filter the rows returned"""
    where: partner_dynamic_form_field_values_bool_exp
  ): [partner_dynamic_form_field_values!]!

  """
  execute function "get_partner_dynamic_form_field_values_by_student" and query aggregates on result of table type "partner_dynamic_form_field_values"
  """
  get_partner_dynamic_form_field_values_by_student_aggregate(
    """
    input parameters for function "get_partner_dynamic_form_field_values_by_student"
    """
    args: get_partner_dynamic_form_field_values_by_student_args!

    """distinct select on columns"""
    distinct_on: [partner_dynamic_form_field_values_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [partner_dynamic_form_field_values_order_by!]

    """filter the rows returned"""
    where: partner_dynamic_form_field_values_bool_exp
  ): partner_dynamic_form_field_values_aggregate!

  """
  execute function "get_previous_report_of_student" which returns "lesson_reports"
  """
  get_previous_report_of_student(
    """
    input parameters for function "get_previous_report_of_student"
    """
    args: get_previous_report_of_student_args!

    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): [lesson_reports!]!

  """
  execute function "get_previous_report_of_student" and query aggregates on result of table type "lesson_reports"
  """
  get_previous_report_of_student_aggregate(
    """
    input parameters for function "get_previous_report_of_student"
    """
    args: get_previous_report_of_student_args!

    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): lesson_reports_aggregate!

  """
  execute function "get_previous_report_of_student_v2" which returns "lesson_reports"
  """
  get_previous_report_of_student_v2(
    """
    input parameters for function "get_previous_report_of_student_v2"
    """
    args: get_previous_report_of_student_v2_args!

    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): [lesson_reports!]!

  """
  execute function "get_previous_report_of_student_v2" and query aggregates on result of table type "lesson_reports"
  """
  get_previous_report_of_student_v2_aggregate(
    """
    input parameters for function "get_previous_report_of_student_v2"
    """
    args: get_previous_report_of_student_v2_args!

    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): lesson_reports_aggregate!

  """
  execute function "get_previous_report_of_student_v3" which returns "lesson_reports"
  """
  get_previous_report_of_student_v3(
    """
    input parameters for function "get_previous_report_of_student_v3"
    """
    args: get_previous_report_of_student_v3_args!

    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): [lesson_reports!]!

  """
  execute function "get_previous_report_of_student_v3" and query aggregates on result of table type "lesson_reports"
  """
  get_previous_report_of_student_v3_aggregate(
    """
    input parameters for function "get_previous_report_of_student_v3"
    """
    args: get_previous_report_of_student_v3_args!

    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): lesson_reports_aggregate!

  """
  fetch data from the table: "granted_role"
  """
  granted_role(
    """distinct select on columns"""
    distinct_on: [granted_role_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [granted_role_order_by!]

    """filter the rows returned"""
    where: granted_role_bool_exp
  ): [granted_role!]!

  """
  fetch data from the table: "granted_role_access_path"
  """
  granted_role_access_path(
    """distinct select on columns"""
    distinct_on: [granted_role_access_path_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [granted_role_access_path_order_by!]

    """filter the rows returned"""
    where: granted_role_access_path_bool_exp
  ): [granted_role_access_path!]!

  """
  fetch aggregated fields from the table: "granted_role_access_path"
  """
  granted_role_access_path_aggregate(
    """distinct select on columns"""
    distinct_on: [granted_role_access_path_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [granted_role_access_path_order_by!]

    """filter the rows returned"""
    where: granted_role_access_path_bool_exp
  ): granted_role_access_path_aggregate!

  """
  fetch data from the table: "granted_role_access_path" using primary key columns
  """
  granted_role_access_path_by_pk(granted_role_id: String!, location_id: String!): granted_role_access_path

  """
  fetch aggregated fields from the table: "granted_role"
  """
  granted_role_aggregate(
    """distinct select on columns"""
    distinct_on: [granted_role_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [granted_role_order_by!]

    """filter the rows returned"""
    where: granted_role_bool_exp
  ): granted_role_aggregate!

  """fetch data from the table: "granted_role" using primary key columns"""
  granted_role_by_pk(granted_role_id: String!): granted_role

  """
  fetch data from the table: "hub_tours"
  """
  hub_tours(
    """distinct select on columns"""
    distinct_on: [hub_tours_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [hub_tours_order_by!]

    """filter the rows returned"""
    where: hub_tours_bool_exp
  ): [hub_tours!]!

  """
  fetch aggregated fields from the table: "hub_tours"
  """
  hub_tours_aggregate(
    """distinct select on columns"""
    distinct_on: [hub_tours_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [hub_tours_order_by!]

    """filter the rows returned"""
    where: hub_tours_bool_exp
  ): hub_tours_aggregate!

  """fetch data from the table: "hub_tours" using primary key columns"""
  hub_tours_by_pk(hub_id: Int!, student_id: String!): hub_tours

  """
  fetch data from the table: "hubs"
  """
  hubs(
    """distinct select on columns"""
    distinct_on: [hubs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [hubs_order_by!]

    """filter the rows returned"""
    where: hubs_bool_exp
  ): [hubs!]!

  """
  fetch aggregated fields from the table: "hubs"
  """
  hubs_aggregate(
    """distinct select on columns"""
    distinct_on: [hubs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [hubs_order_by!]

    """filter the rows returned"""
    where: hubs_bool_exp
  ): hubs_aggregate!

  """fetch data from the table: "hubs" using primary key columns"""
  hubs_by_pk(hub_id: Int!): hubs

  """
  fetch data from the table: "info_notification_msgs"
  """
  info_notification_msgs(
    """distinct select on columns"""
    distinct_on: [info_notification_msgs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notification_msgs_order_by!]

    """filter the rows returned"""
    where: info_notification_msgs_bool_exp
  ): [info_notification_msgs!]!

  """
  fetch aggregated fields from the table: "info_notification_msgs"
  """
  info_notification_msgs_aggregate(
    """distinct select on columns"""
    distinct_on: [info_notification_msgs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notification_msgs_order_by!]

    """filter the rows returned"""
    where: info_notification_msgs_bool_exp
  ): info_notification_msgs_aggregate!

  """
  fetch data from the table: "info_notification_msgs" using primary key columns
  """
  info_notification_msgs_by_pk(notification_msg_id: String!): info_notification_msgs

  """
  fetch data from the table: "info_notifications"
  """
  info_notifications(
    """distinct select on columns"""
    distinct_on: [info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notifications_order_by!]

    """filter the rows returned"""
    where: info_notifications_bool_exp
  ): [info_notifications!]!

  """
  fetch aggregated fields from the table: "info_notifications"
  """
  info_notifications_aggregate(
    """distinct select on columns"""
    distinct_on: [info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notifications_order_by!]

    """filter the rows returned"""
    where: info_notifications_bool_exp
  ): info_notifications_aggregate!

  """
  fetch data from the table: "info_notifications" using primary key columns
  """
  info_notifications_by_pk(notification_id: String!): info_notifications

  """
  fetch data from the table: "info_notifications_tags"
  """
  info_notifications_tags(
    """distinct select on columns"""
    distinct_on: [info_notifications_tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notifications_tags_order_by!]

    """filter the rows returned"""
    where: info_notifications_tags_bool_exp
  ): [info_notifications_tags!]!

  """
  fetch aggregated fields from the table: "info_notifications_tags"
  """
  info_notifications_tags_aggregate(
    """distinct select on columns"""
    distinct_on: [info_notifications_tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notifications_tags_order_by!]

    """filter the rows returned"""
    where: info_notifications_tags_bool_exp
  ): info_notifications_tags_aggregate!

  """
  fetch data from the table: "info_notifications_tags" using primary key columns
  """
  info_notifications_tags_by_pk(notification_tag_id: String!): info_notifications_tags

  """
  fetch data from the table: "learning_objectives"
  """
  learning_objectives(
    """distinct select on columns"""
    distinct_on: [learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_objectives_order_by!]

    """filter the rows returned"""
    where: learning_objectives_bool_exp
  ): [learning_objectives!]!

  """
  fetch aggregated fields from the table: "learning_objectives"
  """
  learning_objectives_aggregate(
    """distinct select on columns"""
    distinct_on: [learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_objectives_order_by!]

    """filter the rows returned"""
    where: learning_objectives_bool_exp
  ): learning_objectives_aggregate!

  """
  fetch data from the table: "learning_objectives" using primary key columns
  """
  learning_objectives_by_pk(lo_id: String!): learning_objectives

  """
  fetch data from the table: "lesson_groups"
  """
  lesson_groups(
    """distinct select on columns"""
    distinct_on: [lesson_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_groups_order_by!]

    """filter the rows returned"""
    where: lesson_groups_bool_exp
  ): [lesson_groups!]!

  """
  fetch aggregated fields from the table: "lesson_groups"
  """
  lesson_groups_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_groups_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_groups_order_by!]

    """filter the rows returned"""
    where: lesson_groups_bool_exp
  ): lesson_groups_aggregate!

  """fetch data from the table: "lesson_groups" using primary key columns"""
  lesson_groups_by_pk(course_id: String!, lesson_group_id: String!): lesson_groups

  """
  fetch data from the table: "lesson_members"
  """
  lesson_members(
    """distinct select on columns"""
    distinct_on: [lesson_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_members_order_by!]

    """filter the rows returned"""
    where: lesson_members_bool_exp
  ): [lesson_members!]!

  """
  fetch aggregated fields from the table: "lesson_members"
  """
  lesson_members_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_members_order_by!]

    """filter the rows returned"""
    where: lesson_members_bool_exp
  ): lesson_members_aggregate!

  """fetch data from the table: "lesson_members" using primary key columns"""
  lesson_members_by_pk(lesson_id: String!, user_id: String!): lesson_members

  """
  fetch data from the table: "lesson_report_details"
  """
  lesson_report_details(
    """distinct select on columns"""
    distinct_on: [lesson_report_details_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_report_details_order_by!]

    """filter the rows returned"""
    where: lesson_report_details_bool_exp
  ): [lesson_report_details!]!

  """
  fetch aggregated fields from the table: "lesson_report_details"
  """
  lesson_report_details_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_report_details_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_report_details_order_by!]

    """filter the rows returned"""
    where: lesson_report_details_bool_exp
  ): lesson_report_details_aggregate!

  """
  fetch data from the table: "lesson_report_details" using primary key columns
  """
  lesson_report_details_by_pk(lesson_report_detail_id: String!): lesson_report_details

  """
  fetch data from the table: "lesson_reports"
  """
  lesson_reports(
    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): [lesson_reports!]!

  """
  fetch aggregated fields from the table: "lesson_reports"
  """
  lesson_reports_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_reports_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_reports_order_by!]

    """filter the rows returned"""
    where: lesson_reports_bool_exp
  ): lesson_reports_aggregate!

  """fetch data from the table: "lesson_reports" using primary key columns"""
  lesson_reports_by_pk(lesson_report_id: String!): lesson_reports

  """
  fetch data from the table: "lesson_schedules"
  """
  lesson_schedules(
    """distinct select on columns"""
    distinct_on: [lesson_schedules_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_schedules_order_by!]

    """filter the rows returned"""
    where: lesson_schedules_bool_exp
  ): [lesson_schedules!]!

  """
  fetch aggregated fields from the table: "lesson_schedules"
  """
  lesson_schedules_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_schedules_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_schedules_order_by!]

    """filter the rows returned"""
    where: lesson_schedules_bool_exp
  ): lesson_schedules_aggregate!

  """
  fetch data from the table: "lesson_student_subscription_access_path"
  """
  lesson_student_subscription_access_path(
    """distinct select on columns"""
    distinct_on: [lesson_student_subscription_access_path_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_student_subscription_access_path_order_by!]

    """filter the rows returned"""
    where: lesson_student_subscription_access_path_bool_exp
  ): [lesson_student_subscription_access_path!]!

  """
  fetch aggregated fields from the table: "lesson_student_subscription_access_path"
  """
  lesson_student_subscription_access_path_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_student_subscription_access_path_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_student_subscription_access_path_order_by!]

    """filter the rows returned"""
    where: lesson_student_subscription_access_path_bool_exp
  ): lesson_student_subscription_access_path_aggregate!

  """
  fetch data from the table: "lesson_student_subscription_access_path" using primary key columns
  """
  lesson_student_subscription_access_path_by_pk(location_id: String!, student_subscription_id: String!): lesson_student_subscription_access_path

  """
  fetch data from the table: "lesson_student_subscriptions"
  """
  lesson_student_subscriptions(
    """distinct select on columns"""
    distinct_on: [lesson_student_subscriptions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_student_subscriptions_order_by!]

    """filter the rows returned"""
    where: lesson_student_subscriptions_bool_exp
  ): [lesson_student_subscriptions!]!

  """
  fetch aggregated fields from the table: "lesson_student_subscriptions"
  """
  lesson_student_subscriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_student_subscriptions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_student_subscriptions_order_by!]

    """filter the rows returned"""
    where: lesson_student_subscriptions_bool_exp
  ): lesson_student_subscriptions_aggregate!

  """
  fetch data from the table: "lesson_student_subscriptions" using primary key columns
  """
  lesson_student_subscriptions_by_pk(student_subscription_id: String!): lesson_student_subscriptions

  """
  fetch data from the table: "lessons"
  """
  lessons(
    """distinct select on columns"""
    distinct_on: [lessons_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_order_by!]

    """filter the rows returned"""
    where: lessons_bool_exp
  ): [lessons!]!

  """
  fetch aggregated fields from the table: "lessons"
  """
  lessons_aggregate(
    """distinct select on columns"""
    distinct_on: [lessons_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_order_by!]

    """filter the rows returned"""
    where: lessons_bool_exp
  ): lessons_aggregate!

  """fetch data from the table: "lessons" using primary key columns"""
  lessons_by_pk(lesson_id: String!): lessons

  """
  fetch data from the table: "lessons_courses"
  """
  lessons_courses(
    """distinct select on columns"""
    distinct_on: [lessons_courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_courses_order_by!]

    """filter the rows returned"""
    where: lessons_courses_bool_exp
  ): [lessons_courses!]!

  """
  fetch aggregated fields from the table: "lessons_courses"
  """
  lessons_courses_aggregate(
    """distinct select on columns"""
    distinct_on: [lessons_courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_courses_order_by!]

    """filter the rows returned"""
    where: lessons_courses_bool_exp
  ): lessons_courses_aggregate!

  """fetch data from the table: "lessons_courses" using primary key columns"""
  lessons_courses_by_pk(course_id: String!, lesson_id: String!): lessons_courses

  """
  fetch data from the table: "lessons_teachers"
  """
  lessons_teachers(
    """distinct select on columns"""
    distinct_on: [lessons_teachers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_teachers_order_by!]

    """filter the rows returned"""
    where: lessons_teachers_bool_exp
  ): [lessons_teachers!]!

  """
  fetch aggregated fields from the table: "lessons_teachers"
  """
  lessons_teachers_aggregate(
    """distinct select on columns"""
    distinct_on: [lessons_teachers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_teachers_order_by!]

    """filter the rows returned"""
    where: lessons_teachers_bool_exp
  ): lessons_teachers_aggregate!

  """
  fetch data from the table: "lessons_teachers" using primary key columns
  """
  lessons_teachers_by_pk(lesson_id: String!, teacher_id: String!): lessons_teachers

  """
  fetch data from the table: "location_types"
  """
  location_types(
    """distinct select on columns"""
    distinct_on: [location_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [location_types_order_by!]

    """filter the rows returned"""
    where: location_types_bool_exp
  ): [location_types!]!

  """
  fetch aggregated fields from the table: "location_types"
  """
  location_types_aggregate(
    """distinct select on columns"""
    distinct_on: [location_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [location_types_order_by!]

    """filter the rows returned"""
    where: location_types_bool_exp
  ): location_types_aggregate!

  """fetch data from the table: "location_types" using primary key columns"""
  location_types_by_pk(location_type_id: String!): location_types

  """
  fetch data from the table: "locations"
  """
  locations(
    """distinct select on columns"""
    distinct_on: [locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locations_order_by!]

    """filter the rows returned"""
    where: locations_bool_exp
  ): [locations!]!

  """
  fetch aggregated fields from the table: "locations"
  """
  locations_aggregate(
    """distinct select on columns"""
    distinct_on: [locations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locations_order_by!]

    """filter the rows returned"""
    where: locations_bool_exp
  ): locations_aggregate!

  """fetch data from the table: "locations" using primary key columns"""
  locations_by_pk(location_id: String!): locations

  """
  fetch data from the table: "media"
  """
  media(
    """distinct select on columns"""
    distinct_on: [media_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [media_order_by!]

    """filter the rows returned"""
    where: media_bool_exp
  ): [media!]!

  """
  fetch aggregated fields from the table: "media"
  """
  media_aggregate(
    """distinct select on columns"""
    distinct_on: [media_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [media_order_by!]

    """filter the rows returned"""
    where: media_bool_exp
  ): media_aggregate!

  """fetch data from the table: "media" using primary key columns"""
  media_by_pk(media_id: String!): media

  """
  fetch data from the table: "organizations"
  """
  organizations(
    """distinct select on columns"""
    distinct_on: [organizations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organizations_order_by!]

    """filter the rows returned"""
    where: organizations_bool_exp
  ): [organizations!]!

  """
  fetch aggregated fields from the table: "organizations"
  """
  organizations_aggregate(
    """distinct select on columns"""
    distinct_on: [organizations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [organizations_order_by!]

    """filter the rows returned"""
    where: organizations_bool_exp
  ): organizations_aggregate!

  """fetch data from the table: "organizations" using primary key columns"""
  organizations_by_pk(organization_id: String!): organizations

  """
  fetch data from the table: "parents"
  """
  parents(
    """distinct select on columns"""
    distinct_on: [parents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [parents_order_by!]

    """filter the rows returned"""
    where: parents_bool_exp
  ): [parents!]!

  """
  fetch aggregated fields from the table: "parents"
  """
  parents_aggregate(
    """distinct select on columns"""
    distinct_on: [parents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [parents_order_by!]

    """filter the rows returned"""
    where: parents_bool_exp
  ): parents_aggregate!

  """fetch data from the table: "parents" using primary key columns"""
  parents_by_pk(parent_id: String!): parents

  """
  fetch data from the table: "partner_dynamic_form_field_values"
  """
  partner_dynamic_form_field_values(
    """distinct select on columns"""
    distinct_on: [partner_dynamic_form_field_values_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [partner_dynamic_form_field_values_order_by!]

    """filter the rows returned"""
    where: partner_dynamic_form_field_values_bool_exp
  ): [partner_dynamic_form_field_values!]!

  """
  fetch aggregated fields from the table: "partner_dynamic_form_field_values"
  """
  partner_dynamic_form_field_values_aggregate(
    """distinct select on columns"""
    distinct_on: [partner_dynamic_form_field_values_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [partner_dynamic_form_field_values_order_by!]

    """filter the rows returned"""
    where: partner_dynamic_form_field_values_bool_exp
  ): partner_dynamic_form_field_values_aggregate!

  """
  fetch data from the table: "partner_dynamic_form_field_values" using primary key columns
  """
  partner_dynamic_form_field_values_by_pk(dynamic_form_field_value_id: String!): partner_dynamic_form_field_values

  """
  fetch data from the table: "partner_form_configs"
  """
  partner_form_configs(
    """distinct select on columns"""
    distinct_on: [partner_form_configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [partner_form_configs_order_by!]

    """filter the rows returned"""
    where: partner_form_configs_bool_exp
  ): [partner_form_configs!]!

  """
  fetch aggregated fields from the table: "partner_form_configs"
  """
  partner_form_configs_aggregate(
    """distinct select on columns"""
    distinct_on: [partner_form_configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [partner_form_configs_order_by!]

    """filter the rows returned"""
    where: partner_form_configs_bool_exp
  ): partner_form_configs_aggregate!

  """
  fetch data from the table: "partner_form_configs" using primary key columns
  """
  partner_form_configs_by_pk(form_config_id: String!): partner_form_configs

  """
  fetch data from the table: "plans"
  """
  plans(
    """distinct select on columns"""
    distinct_on: [plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plans_order_by!]

    """filter the rows returned"""
    where: plans_bool_exp
  ): [plans!]!

  """
  fetch aggregated fields from the table: "plans"
  """
  plans_aggregate(
    """distinct select on columns"""
    distinct_on: [plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [plans_order_by!]

    """filter the rows returned"""
    where: plans_bool_exp
  ): plans_aggregate!

  """fetch data from the table: "plans" using primary key columns"""
  plans_by_pk(country: String!, plan_id: String!): plans

  """
  fetch data from the table: "prefecture"
  """
  prefecture(
    """distinct select on columns"""
    distinct_on: [prefecture_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [prefecture_order_by!]

    """filter the rows returned"""
    where: prefecture_bool_exp
  ): [prefecture!]!

  """
  fetch aggregated fields from the table: "prefecture"
  """
  prefecture_aggregate(
    """distinct select on columns"""
    distinct_on: [prefecture_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [prefecture_order_by!]

    """filter the rows returned"""
    where: prefecture_bool_exp
  ): prefecture_aggregate!

  """fetch data from the table: "prefecture" using primary key columns"""
  prefecture_by_pk(prefecture_id: String!): prefecture

  """
  fetch data from the table: "preset_study_plans"
  """
  preset_study_plans(
    """distinct select on columns"""
    distinct_on: [preset_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preset_study_plans_order_by!]

    """filter the rows returned"""
    where: preset_study_plans_bool_exp
  ): [preset_study_plans!]!

  """
  fetch aggregated fields from the table: "preset_study_plans"
  """
  preset_study_plans_aggregate(
    """distinct select on columns"""
    distinct_on: [preset_study_plans_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preset_study_plans_order_by!]

    """filter the rows returned"""
    where: preset_study_plans_bool_exp
  ): preset_study_plans_aggregate!

  """
  fetch data from the table: "preset_study_plans" using primary key columns
  """
  preset_study_plans_by_pk(preset_study_plan_id: String!): preset_study_plans

  """
  fetch data from the table: "preset_study_plans_weekly"
  """
  preset_study_plans_weekly(
    """distinct select on columns"""
    distinct_on: [preset_study_plans_weekly_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preset_study_plans_weekly_order_by!]

    """filter the rows returned"""
    where: preset_study_plans_weekly_bool_exp
  ): [preset_study_plans_weekly!]!

  """
  fetch aggregated fields from the table: "preset_study_plans_weekly"
  """
  preset_study_plans_weekly_aggregate(
    """distinct select on columns"""
    distinct_on: [preset_study_plans_weekly_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preset_study_plans_weekly_order_by!]

    """filter the rows returned"""
    where: preset_study_plans_weekly_bool_exp
  ): preset_study_plans_weekly_aggregate!

  """
  fetch data from the table: "preset_study_plans_weekly" using primary key columns
  """
  preset_study_plans_weekly_by_pk(preset_study_plan_weekly_id: String!): preset_study_plans_weekly

  """
  fetch data from the table: "preset_study_plans_weekly_format"
  """
  preset_study_plans_weekly_format(
    """distinct select on columns"""
    distinct_on: [preset_study_plans_weekly_format_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preset_study_plans_weekly_format_order_by!]

    """filter the rows returned"""
    where: preset_study_plans_weekly_format_bool_exp
  ): [preset_study_plans_weekly_format!]!

  """
  fetch aggregated fields from the table: "preset_study_plans_weekly_format"
  """
  preset_study_plans_weekly_format_aggregate(
    """distinct select on columns"""
    distinct_on: [preset_study_plans_weekly_format_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preset_study_plans_weekly_format_order_by!]

    """filter the rows returned"""
    where: preset_study_plans_weekly_format_bool_exp
  ): preset_study_plans_weekly_format_aggregate!

  """
  fetch data from the table: "promotion_rules"
  """
  promotion_rules(
    """distinct select on columns"""
    distinct_on: [promotion_rules_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [promotion_rules_order_by!]

    """filter the rows returned"""
    where: promotion_rules_bool_exp
  ): [promotion_rules!]!

  """
  fetch aggregated fields from the table: "promotion_rules"
  """
  promotion_rules_aggregate(
    """distinct select on columns"""
    distinct_on: [promotion_rules_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [promotion_rules_order_by!]

    """filter the rows returned"""
    where: promotion_rules_bool_exp
  ): promotion_rules_aggregate!

  """fetch data from the table: "promotion_rules" using primary key columns"""
  promotion_rules_by_pk(promotion_rule_id: Int!): promotion_rules

  """
  fetch data from the table: "promotions"
  """
  promotions(
    """distinct select on columns"""
    distinct_on: [promotions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [promotions_order_by!]

    """filter the rows returned"""
    where: promotions_bool_exp
  ): [promotions!]!

  """
  fetch aggregated fields from the table: "promotions"
  """
  promotions_aggregate(
    """distinct select on columns"""
    distinct_on: [promotions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [promotions_order_by!]

    """filter the rows returned"""
    where: promotions_bool_exp
  ): promotions_aggregate!

  """fetch data from the table: "promotions" using primary key columns"""
  promotions_by_pk(promotion_id: Int!): promotions

  """
  fetch data from the table: "questionnaire_questions"
  """
  questionnaire_questions(
    """distinct select on columns"""
    distinct_on: [questionnaire_questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questionnaire_questions_order_by!]

    """filter the rows returned"""
    where: questionnaire_questions_bool_exp
  ): [questionnaire_questions!]!

  """
  fetch aggregated fields from the table: "questionnaire_questions"
  """
  questionnaire_questions_aggregate(
    """distinct select on columns"""
    distinct_on: [questionnaire_questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questionnaire_questions_order_by!]

    """filter the rows returned"""
    where: questionnaire_questions_bool_exp
  ): questionnaire_questions_aggregate!

  """
  fetch data from the table: "questionnaire_questions" using primary key columns
  """
  questionnaire_questions_by_pk(questionnaire_question_id: String!): questionnaire_questions

  """
  fetch data from the table: "questionnaire_user_answers"
  """
  questionnaire_user_answers(
    """distinct select on columns"""
    distinct_on: [questionnaire_user_answers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questionnaire_user_answers_order_by!]

    """filter the rows returned"""
    where: questionnaire_user_answers_bool_exp
  ): [questionnaire_user_answers!]!

  """
  fetch aggregated fields from the table: "questionnaire_user_answers"
  """
  questionnaire_user_answers_aggregate(
    """distinct select on columns"""
    distinct_on: [questionnaire_user_answers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questionnaire_user_answers_order_by!]

    """filter the rows returned"""
    where: questionnaire_user_answers_bool_exp
  ): questionnaire_user_answers_aggregate!

  """
  fetch data from the table: "questionnaire_user_answers" using primary key columns
  """
  questionnaire_user_answers_by_pk(answer_id: String!, user_notification_id: String!): questionnaire_user_answers

  """
  fetch data from the table: "questionnaires"
  """
  questionnaires(
    """distinct select on columns"""
    distinct_on: [questionnaires_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questionnaires_order_by!]

    """filter the rows returned"""
    where: questionnaires_bool_exp
  ): [questionnaires!]!

  """
  fetch aggregated fields from the table: "questionnaires"
  """
  questionnaires_aggregate(
    """distinct select on columns"""
    distinct_on: [questionnaires_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questionnaires_order_by!]

    """filter the rows returned"""
    where: questionnaires_bool_exp
  ): questionnaires_aggregate!

  """fetch data from the table: "questionnaires" using primary key columns"""
  questionnaires_by_pk(questionnaire_id: String!): questionnaires

  """
  fetch data from the table: "questions"
  """
  questions(
    """distinct select on columns"""
    distinct_on: [questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_order_by!]

    """filter the rows returned"""
    where: questions_bool_exp
  ): [questions!]!

  """
  fetch aggregated fields from the table: "questions"
  """
  questions_aggregate(
    """distinct select on columns"""
    distinct_on: [questions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [questions_order_by!]

    """filter the rows returned"""
    where: questions_bool_exp
  ): questions_aggregate!

  """fetch data from the table: "questions" using primary key columns"""
  questions_by_pk(question_id: String!): questions

  """
  fetch data from the table: "quiz_sets"
  """
  quiz_sets(
    """distinct select on columns"""
    distinct_on: [quiz_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quiz_sets_order_by!]

    """filter the rows returned"""
    where: quiz_sets_bool_exp
  ): [quiz_sets!]!

  """
  fetch aggregated fields from the table: "quiz_sets"
  """
  quiz_sets_aggregate(
    """distinct select on columns"""
    distinct_on: [quiz_sets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quiz_sets_order_by!]

    """filter the rows returned"""
    where: quiz_sets_bool_exp
  ): quiz_sets_aggregate!

  """fetch data from the table: "quiz_sets" using primary key columns"""
  quiz_sets_by_pk(quiz_set_id: String!): quiz_sets

  """
  fetch data from the table: "quizsets"
  """
  quizsets(
    """distinct select on columns"""
    distinct_on: [quizsets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizsets_order_by!]

    """filter the rows returned"""
    where: quizsets_bool_exp
  ): [quizsets!]!

  """
  fetch aggregated fields from the table: "quizsets"
  """
  quizsets_aggregate(
    """distinct select on columns"""
    distinct_on: [quizsets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizsets_order_by!]

    """filter the rows returned"""
    where: quizsets_bool_exp
  ): quizsets_aggregate!

  """fetch data from the table: "quizsets" using primary key columns"""
  quizsets_by_pk(lo_id: String!, question_id: String!): quizsets

  """
  fetch data from the table: "quizzes"
  """
  quizzes(
    """distinct select on columns"""
    distinct_on: [quizzes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizzes_order_by!]

    """filter the rows returned"""
    where: quizzes_bool_exp
  ): [quizzes!]!

  """
  fetch aggregated fields from the table: "quizzes"
  """
  quizzes_aggregate(
    """distinct select on columns"""
    distinct_on: [quizzes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [quizzes_order_by!]

    """filter the rows returned"""
    where: quizzes_bool_exp
  ): quizzes_aggregate!

  """fetch data from the table: "quizzes" using primary key columns"""
  quizzes_by_pk(quiz_id: String!): quizzes

  """
  fetch data from the table: "role"
  """
  role(
    """distinct select on columns"""
    distinct_on: [role_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [role_order_by!]

    """filter the rows returned"""
    where: role_bool_exp
  ): [role!]!

  """
  fetch aggregated fields from the table: "role"
  """
  role_aggregate(
    """distinct select on columns"""
    distinct_on: [role_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [role_order_by!]

    """filter the rows returned"""
    where: role_bool_exp
  ): role_aggregate!

  """fetch data from the table: "role" using primary key columns"""
  role_by_pk(role_id: String!): role

  """
  fetch data from the table: "scheduler"
  """
  scheduler(
    """distinct select on columns"""
    distinct_on: [scheduler_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_order_by!]

    """filter the rows returned"""
    where: scheduler_bool_exp
  ): [scheduler!]!

  """
  fetch aggregated fields from the table: "scheduler"
  """
  scheduler_aggregate(
    """distinct select on columns"""
    distinct_on: [scheduler_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scheduler_order_by!]

    """filter the rows returned"""
    where: scheduler_bool_exp
  ): scheduler_aggregate!

  """fetch data from the table: "scheduler" using primary key columns"""
  scheduler_by_pk(scheduler_id: String!): scheduler

  """
  fetch data from the table: "school_admins"
  """
  school_admins(
    """distinct select on columns"""
    distinct_on: [school_admins_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_admins_order_by!]

    """filter the rows returned"""
    where: school_admins_bool_exp
  ): [school_admins!]!

  """
  fetch aggregated fields from the table: "school_admins"
  """
  school_admins_aggregate(
    """distinct select on columns"""
    distinct_on: [school_admins_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_admins_order_by!]

    """filter the rows returned"""
    where: school_admins_bool_exp
  ): school_admins_aggregate!

  """fetch data from the table: "school_admins" using primary key columns"""
  school_admins_by_pk(school_admin_id: String!): school_admins

  """
  fetch data from the table: "school_configs"
  """
  school_configs(
    """distinct select on columns"""
    distinct_on: [school_configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_configs_order_by!]

    """filter the rows returned"""
    where: school_configs_bool_exp
  ): [school_configs!]!

  """
  fetch aggregated fields from the table: "school_configs"
  """
  school_configs_aggregate(
    """distinct select on columns"""
    distinct_on: [school_configs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_configs_order_by!]

    """filter the rows returned"""
    where: school_configs_bool_exp
  ): school_configs_aggregate!

  """fetch data from the table: "school_configs" using primary key columns"""
  school_configs_by_pk(school_id: Int!): school_configs

  """
  fetch data from the table: "school_course"
  """
  school_course(
    """distinct select on columns"""
    distinct_on: [school_course_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_course_order_by!]

    """filter the rows returned"""
    where: school_course_bool_exp
  ): [school_course!]!

  """
  fetch aggregated fields from the table: "school_course"
  """
  school_course_aggregate(
    """distinct select on columns"""
    distinct_on: [school_course_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_course_order_by!]

    """filter the rows returned"""
    where: school_course_bool_exp
  ): school_course_aggregate!

  """fetch data from the table: "school_course" using primary key columns"""
  school_course_by_pk(school_course_id: String!): school_course

  """
  fetch data from the table: "school_info"
  """
  school_info(
    """distinct select on columns"""
    distinct_on: [school_info_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_info_order_by!]

    """filter the rows returned"""
    where: school_info_bool_exp
  ): [school_info!]!

  """
  fetch aggregated fields from the table: "school_info"
  """
  school_info_aggregate(
    """distinct select on columns"""
    distinct_on: [school_info_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_info_order_by!]

    """filter the rows returned"""
    where: school_info_bool_exp
  ): school_info_aggregate!

  """fetch data from the table: "school_info" using primary key columns"""
  school_info_by_pk(school_id: String!): school_info

  """
  fetch data from the table: "school_level"
  """
  school_level(
    """distinct select on columns"""
    distinct_on: [school_level_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_level_order_by!]

    """filter the rows returned"""
    where: school_level_bool_exp
  ): [school_level!]!

  """
  fetch aggregated fields from the table: "school_level"
  """
  school_level_aggregate(
    """distinct select on columns"""
    distinct_on: [school_level_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [school_level_order_by!]

    """filter the rows returned"""
    where: school_level_bool_exp
  ): school_level_aggregate!

  """fetch data from the table: "school_level" using primary key columns"""
  school_level_by_pk(school_level_id: String!): school_level

  """
  fetch data from the table: "schools"
  """
  schools(
    """distinct select on columns"""
    distinct_on: [schools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schools_order_by!]

    """filter the rows returned"""
    where: schools_bool_exp
  ): [schools!]!

  """
  fetch aggregated fields from the table: "schools"
  """
  schools_aggregate(
    """distinct select on columns"""
    distinct_on: [schools_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [schools_order_by!]

    """filter the rows returned"""
    where: schools_bool_exp
  ): schools_aggregate!

  """fetch data from the table: "schools" using primary key columns"""
  schools_by_pk(school_id: Int!): schools

  """
  execute function "search_courses_by_name" which returns "courses"
  """
  search_courses_by_name(
    """
    input parameters for function "search_courses_by_name"
    """
    args: search_courses_by_name_args!

    """distinct select on columns"""
    distinct_on: [courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_order_by!]

    """filter the rows returned"""
    where: courses_bool_exp
  ): [courses!]!

  """
  execute function "search_courses_by_name" and query aggregates on result of table type "courses"
  """
  search_courses_by_name_aggregate(
    """
    input parameters for function "search_courses_by_name"
    """
    args: search_courses_by_name_args!

    """distinct select on columns"""
    distinct_on: [courses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [courses_order_by!]

    """filter the rows returned"""
    where: courses_bool_exp
  ): courses_aggregate!

  """
  fetch data from the table: "staff"
  """
  staff(
    """distinct select on columns"""
    distinct_on: [staff_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [staff_order_by!]

    """filter the rows returned"""
    where: staff_bool_exp
  ): [staff!]!

  """
  fetch aggregated fields from the table: "staff"
  """
  staff_aggregate(
    """distinct select on columns"""
    distinct_on: [staff_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [staff_order_by!]

    """filter the rows returned"""
    where: staff_bool_exp
  ): staff_aggregate!

  """fetch data from the table: "staff" using primary key columns"""
  staff_by_pk(staff_id: String!): staff

  """
  fetch data from the table: "student_entryexit_records"
  """
  student_entryexit_records(
    """distinct select on columns"""
    distinct_on: [student_entryexit_records_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_entryexit_records_order_by!]

    """filter the rows returned"""
    where: student_entryexit_records_bool_exp
  ): [student_entryexit_records!]!

  """
  fetch aggregated fields from the table: "student_entryexit_records"
  """
  student_entryexit_records_aggregate(
    """distinct select on columns"""
    distinct_on: [student_entryexit_records_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_entryexit_records_order_by!]

    """filter the rows returned"""
    where: student_entryexit_records_bool_exp
  ): student_entryexit_records_aggregate!

  """
  fetch data from the table: "student_entryexit_records" using primary key columns
  """
  student_entryexit_records_by_pk(entryexit_id: Int!): student_entryexit_records

  """
  fetch data from the table: "student_parents"
  """
  student_parents(
    """distinct select on columns"""
    distinct_on: [student_parents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_parents_order_by!]

    """filter the rows returned"""
    where: student_parents_bool_exp
  ): [student_parents!]!

  """
  fetch aggregated fields from the table: "student_parents"
  """
  student_parents_aggregate(
    """distinct select on columns"""
    distinct_on: [student_parents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_parents_order_by!]

    """filter the rows returned"""
    where: student_parents_bool_exp
  ): student_parents_aggregate!

  """fetch data from the table: "student_parents" using primary key columns"""
  student_parents_by_pk(parent_id: String!, student_id: String!): student_parents

  """
  fetch data from the table: "student_qr"
  """
  student_qr(
    """distinct select on columns"""
    distinct_on: [student_qr_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_qr_order_by!]

    """filter the rows returned"""
    where: student_qr_bool_exp
  ): [student_qr!]!

  """
  fetch aggregated fields from the table: "student_qr"
  """
  student_qr_aggregate(
    """distinct select on columns"""
    distinct_on: [student_qr_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_qr_order_by!]

    """filter the rows returned"""
    where: student_qr_bool_exp
  ): student_qr_aggregate!

  """fetch data from the table: "student_qr" using primary key columns"""
  student_qr_by_pk(qr_id: Int!): student_qr

  """
  fetch data from the table: "student_subscriptions"
  """
  student_subscriptions(
    """distinct select on columns"""
    distinct_on: [student_subscriptions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_subscriptions_order_by!]

    """filter the rows returned"""
    where: student_subscriptions_bool_exp
  ): [student_subscriptions!]!

  """
  fetch aggregated fields from the table: "student_subscriptions"
  """
  student_subscriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [student_subscriptions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [student_subscriptions_order_by!]

    """filter the rows returned"""
    where: student_subscriptions_bool_exp
  ): student_subscriptions_aggregate!

  """
  fetch data from the table: "student_subscriptions" using primary key columns
  """
  student_subscriptions_by_pk(student_subscription_id: String!): student_subscriptions

  """
  fetch data from the table: "students"
  """
  students(
    """distinct select on columns"""
    distinct_on: [students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [students_order_by!]

    """filter the rows returned"""
    where: students_bool_exp
  ): [students!]!

  """
  fetch aggregated fields from the table: "students"
  """
  students_aggregate(
    """distinct select on columns"""
    distinct_on: [students_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [students_order_by!]

    """filter the rows returned"""
    where: students_bool_exp
  ): students_aggregate!

  """
  fetch data from the table: "students_assigned_coaches"
  """
  students_assigned_coaches(
    """distinct select on columns"""
    distinct_on: [students_assigned_coaches_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [students_assigned_coaches_order_by!]

    """filter the rows returned"""
    where: students_assigned_coaches_bool_exp
  ): [students_assigned_coaches!]!

  """
  fetch aggregated fields from the table: "students_assigned_coaches"
  """
  students_assigned_coaches_aggregate(
    """distinct select on columns"""
    distinct_on: [students_assigned_coaches_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [students_assigned_coaches_order_by!]

    """filter the rows returned"""
    where: students_assigned_coaches_bool_exp
  ): students_assigned_coaches_aggregate!

  """fetch data from the table: "students" using primary key columns"""
  students_by_pk(student_id: String!): students

  """
  fetch data from the table: "tags"
  """
  tags(
    """distinct select on columns"""
    distinct_on: [tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tags_order_by!]

    """filter the rows returned"""
    where: tags_bool_exp
  ): [tags!]!

  """
  fetch aggregated fields from the table: "tags"
  """
  tags_aggregate(
    """distinct select on columns"""
    distinct_on: [tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tags_order_by!]

    """filter the rows returned"""
    where: tags_bool_exp
  ): tags_aggregate!

  """fetch data from the table: "tags" using primary key columns"""
  tags_by_pk(tag_id: String!): tags

  """
  fetch data from the table: "teacher_by_school_id"
  """
  teacher_by_school_id(
    """distinct select on columns"""
    distinct_on: [teacher_by_school_id_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_by_school_id_order_by!]

    """filter the rows returned"""
    where: teacher_by_school_id_bool_exp
  ): [teacher_by_school_id!]!

  """
  fetch aggregated fields from the table: "teacher_by_school_id"
  """
  teacher_by_school_id_aggregate(
    """distinct select on columns"""
    distinct_on: [teacher_by_school_id_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_by_school_id_order_by!]

    """filter the rows returned"""
    where: teacher_by_school_id_bool_exp
  ): teacher_by_school_id_aggregate!

  """
  fetch data from the table: "teachers"
  """
  teachers(
    """distinct select on columns"""
    distinct_on: [teachers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teachers_order_by!]

    """filter the rows returned"""
    where: teachers_bool_exp
  ): [teachers!]!

  """
  fetch aggregated fields from the table: "teachers"
  """
  teachers_aggregate(
    """distinct select on columns"""
    distinct_on: [teachers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teachers_order_by!]

    """filter the rows returned"""
    where: teachers_bool_exp
  ): teachers_aggregate!

  """fetch data from the table: "teachers" using primary key columns"""
  teachers_by_pk(teacher_id: String!): teachers

  """
  fetch data from the table: "topics"
  """
  topics(
    """distinct select on columns"""
    distinct_on: [topics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_order_by!]

    """filter the rows returned"""
    where: topics_bool_exp
  ): [topics!]!

  """
  fetch aggregated fields from the table: "topics"
  """
  topics_aggregate(
    """distinct select on columns"""
    distinct_on: [topics_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_order_by!]

    """filter the rows returned"""
    where: topics_bool_exp
  ): topics_aggregate!

  """fetch data from the table: "topics" using primary key columns"""
  topics_by_pk(topic_id: String!): topics

  """
  fetch data from the table: "topics_learning_objectives"
  """
  topics_learning_objectives(
    """distinct select on columns"""
    distinct_on: [topics_learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_learning_objectives_order_by!]

    """filter the rows returned"""
    where: topics_learning_objectives_bool_exp
  ): [topics_learning_objectives!]!

  """
  fetch aggregated fields from the table: "topics_learning_objectives"
  """
  topics_learning_objectives_aggregate(
    """distinct select on columns"""
    distinct_on: [topics_learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [topics_learning_objectives_order_by!]

    """filter the rows returned"""
    where: topics_learning_objectives_bool_exp
  ): topics_learning_objectives_aggregate!

  """
  fetch data from the table: "topics_learning_objectives" using primary key columns
  """
  topics_learning_objectives_by_pk(lo_id: String!, topic_id: String!): topics_learning_objectives

  """
  fetch data from the table: "user_access_paths"
  """
  user_access_paths(
    """distinct select on columns"""
    distinct_on: [user_access_paths_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_access_paths_order_by!]

    """filter the rows returned"""
    where: user_access_paths_bool_exp
  ): [user_access_paths!]!

  """
  fetch aggregated fields from the table: "user_access_paths"
  """
  user_access_paths_aggregate(
    """distinct select on columns"""
    distinct_on: [user_access_paths_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_access_paths_order_by!]

    """filter the rows returned"""
    where: user_access_paths_bool_exp
  ): user_access_paths_aggregate!

  """
  fetch data from the table: "user_access_paths" using primary key columns
  """
  user_access_paths_by_pk(location_id: String!, user_id: String!): user_access_paths

  """
  fetch data from the table: "user_address"
  """
  user_address(
    """distinct select on columns"""
    distinct_on: [user_address_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_address_order_by!]

    """filter the rows returned"""
    where: user_address_bool_exp
  ): [user_address!]!

  """
  fetch aggregated fields from the table: "user_address"
  """
  user_address_aggregate(
    """distinct select on columns"""
    distinct_on: [user_address_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_address_order_by!]

    """filter the rows returned"""
    where: user_address_bool_exp
  ): user_address_aggregate!

  """fetch data from the table: "user_address" using primary key columns"""
  user_address_by_pk(user_address_id: String!): user_address

  """
  fetch data from the table: "user_group"
  """
  user_group(
    """distinct select on columns"""
    distinct_on: [user_group_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_group_order_by!]

    """filter the rows returned"""
    where: user_group_bool_exp
  ): [user_group!]!

  """
  fetch aggregated fields from the table: "user_group"
  """
  user_group_aggregate(
    """distinct select on columns"""
    distinct_on: [user_group_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_group_order_by!]

    """filter the rows returned"""
    where: user_group_bool_exp
  ): user_group_aggregate!

  """fetch data from the table: "user_group" using primary key columns"""
  user_group_by_pk(user_group_id: String!): user_group

  """
  fetch data from the table: "user_group_member"
  """
  user_group_member(
    """distinct select on columns"""
    distinct_on: [user_group_member_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_group_member_order_by!]

    """filter the rows returned"""
    where: user_group_member_bool_exp
  ): [user_group_member!]!

  """
  fetch aggregated fields from the table: "user_group_member"
  """
  user_group_member_aggregate(
    """distinct select on columns"""
    distinct_on: [user_group_member_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_group_member_order_by!]

    """filter the rows returned"""
    where: user_group_member_bool_exp
  ): user_group_member_aggregate!

  """
  fetch data from the table: "user_group_member" using primary key columns
  """
  user_group_member_by_pk(user_group_id: String!, user_id: String!): user_group_member

  """
  fetch data from the table: "users"
  """
  users(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): [users!]!

  """
  fetch aggregated fields from the table: "users"
  """
  users_aggregate(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): users_aggregate!

  """fetch data from the table: "users" using primary key columns"""
  users_by_pk(user_id: String!): users

  """
  fetch data from the table: "users_info_notifications"
  """
  users_info_notifications(
    """distinct select on columns"""
    distinct_on: [users_info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_info_notifications_order_by!]

    """filter the rows returned"""
    where: users_info_notifications_bool_exp
  ): [users_info_notifications!]!

  """
  fetch aggregated fields from the table: "users_info_notifications"
  """
  users_info_notifications_aggregate(
    """distinct select on columns"""
    distinct_on: [users_info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_info_notifications_order_by!]

    """filter the rows returned"""
    where: users_info_notifications_bool_exp
  ): users_info_notifications_aggregate!

  """
  fetch data from the table: "users_info_notifications" using primary key columns
  """
  users_info_notifications_by_pk(user_notification_id: String!): users_info_notifications
}

"""
columns and relationships of "tags"
"""
type tags {
  created_at: timestamptz!
  deleted_at: timestamptz

  """An array relationship"""
  info_notifications_tags(
    """distinct select on columns"""
    distinct_on: [info_notifications_tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notifications_tags_order_by!]

    """filter the rows returned"""
    where: info_notifications_tags_bool_exp
  ): [info_notifications_tags!]!

  """An aggregated array relationship"""
  info_notifications_tags_aggregate(
    """distinct select on columns"""
    distinct_on: [info_notifications_tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notifications_tags_order_by!]

    """filter the rows returned"""
    where: info_notifications_tags_bool_exp
  ): info_notifications_tags_aggregate!
  resource_path: String!
  tag_id: String!
  tag_name: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "tags"
"""
type tags_aggregate {
  aggregate: tags_aggregate_fields
  nodes: [tags!]!
}

"""
aggregate fields of "tags"
"""
type tags_aggregate_fields {
  count(columns: [tags_select_column!], distinct: Boolean): Int
  max: tags_max_fields
  min: tags_min_fields
}

"""
order by aggregate values of table "tags"
"""
input tags_aggregate_order_by {
  count: order_by
  max: tags_max_order_by
  min: tags_min_order_by
}

"""
input type for inserting array relation for remote table "tags"
"""
input tags_arr_rel_insert_input {
  data: [tags_insert_input!]!
  on_conflict: tags_on_conflict
}

"""
Boolean expression to filter rows from the table "tags". All fields are combined with a logical 'AND'.
"""
input tags_bool_exp {
  _and: [tags_bool_exp]
  _not: tags_bool_exp
  _or: [tags_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  info_notifications_tags: info_notifications_tags_bool_exp
  resource_path: String_comparison_exp
  tag_id: String_comparison_exp
  tag_name: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "tags"
"""
enum tags_constraint {
  """unique or primary key constraint"""
  pk__tags
}

"""
input type for inserting data into table "tags"
"""
input tags_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  info_notifications_tags: info_notifications_tags_arr_rel_insert_input
  resource_path: String
  tag_id: String
  tag_name: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type tags_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  tag_id: String
  tag_name: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "tags"
"""
input tags_max_order_by {
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  tag_id: order_by
  tag_name: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type tags_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  tag_id: String
  tag_name: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "tags"
"""
input tags_min_order_by {
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  tag_id: order_by
  tag_name: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "tags"
"""
type tags_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [tags!]!
}

"""
input type for inserting object relation for remote table "tags"
"""
input tags_obj_rel_insert_input {
  data: tags_insert_input!
  on_conflict: tags_on_conflict
}

"""
on conflict condition type for table "tags"
"""
input tags_on_conflict {
  constraint: tags_constraint!
  update_columns: [tags_update_column!]!
  where: tags_bool_exp
}

"""
ordering options when selecting data from "tags"
"""
input tags_order_by {
  created_at: order_by
  deleted_at: order_by
  info_notifications_tags_aggregate: info_notifications_tags_aggregate_order_by
  resource_path: order_by
  tag_id: order_by
  tag_name: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "tags"
"""
input tags_pk_columns_input {
  tag_id: String!
}

"""
select columns of table "tags"
"""
enum tags_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  tag_id

  """column name"""
  tag_name

  """column name"""
  updated_at
}

"""
input type for updating data in table "tags"
"""
input tags_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  tag_id: String
  tag_name: String
  updated_at: timestamptz
}

"""
update columns of table "tags"
"""
enum tags_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  tag_id

  """column name"""
  tag_name

  """column name"""
  updated_at
}

"""
columns and relationships of "teacher_by_school_id"
"""
type teacher_by_school_id {
  created_at: timestamptz
  deleted_at: timestamptz
  school_id: Int

  """An object relationship"""
  schools: schools

  """An object relationship"""
  teacher_by_school_id: teachers
  teacher_id: String
  updated_at: timestamptz

  """An object relationship"""
  users: users
}

"""
aggregated selection of "teacher_by_school_id"
"""
type teacher_by_school_id_aggregate {
  aggregate: teacher_by_school_id_aggregate_fields
  nodes: [teacher_by_school_id!]!
}

"""
aggregate fields of "teacher_by_school_id"
"""
type teacher_by_school_id_aggregate_fields {
  avg: teacher_by_school_id_avg_fields
  count(columns: [teacher_by_school_id_select_column!], distinct: Boolean): Int
  max: teacher_by_school_id_max_fields
  min: teacher_by_school_id_min_fields
  stddev: teacher_by_school_id_stddev_fields
  stddev_pop: teacher_by_school_id_stddev_pop_fields
  stddev_samp: teacher_by_school_id_stddev_samp_fields
  sum: teacher_by_school_id_sum_fields
  var_pop: teacher_by_school_id_var_pop_fields
  var_samp: teacher_by_school_id_var_samp_fields
  variance: teacher_by_school_id_variance_fields
}

"""
order by aggregate values of table "teacher_by_school_id"
"""
input teacher_by_school_id_aggregate_order_by {
  avg: teacher_by_school_id_avg_order_by
  count: order_by
  max: teacher_by_school_id_max_order_by
  min: teacher_by_school_id_min_order_by
  stddev: teacher_by_school_id_stddev_order_by
  stddev_pop: teacher_by_school_id_stddev_pop_order_by
  stddev_samp: teacher_by_school_id_stddev_samp_order_by
  sum: teacher_by_school_id_sum_order_by
  var_pop: teacher_by_school_id_var_pop_order_by
  var_samp: teacher_by_school_id_var_samp_order_by
  variance: teacher_by_school_id_variance_order_by
}

"""aggregate avg on columns"""
type teacher_by_school_id_avg_fields {
  school_id: Float
}

"""
order by avg() on columns of table "teacher_by_school_id"
"""
input teacher_by_school_id_avg_order_by {
  school_id: order_by
}

"""
Boolean expression to filter rows from the table "teacher_by_school_id". All fields are combined with a logical 'AND'.
"""
input teacher_by_school_id_bool_exp {
  _and: [teacher_by_school_id_bool_exp]
  _not: teacher_by_school_id_bool_exp
  _or: [teacher_by_school_id_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  school_id: Int_comparison_exp
  schools: schools_bool_exp
  teacher_by_school_id: teachers_bool_exp
  teacher_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  users: users_bool_exp
}

"""aggregate max on columns"""
type teacher_by_school_id_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  school_id: Int
  teacher_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "teacher_by_school_id"
"""
input teacher_by_school_id_max_order_by {
  created_at: order_by
  deleted_at: order_by
  school_id: order_by
  teacher_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type teacher_by_school_id_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  school_id: Int
  teacher_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "teacher_by_school_id"
"""
input teacher_by_school_id_min_order_by {
  created_at: order_by
  deleted_at: order_by
  school_id: order_by
  teacher_id: order_by
  updated_at: order_by
}

"""
ordering options when selecting data from "teacher_by_school_id"
"""
input teacher_by_school_id_order_by {
  created_at: order_by
  deleted_at: order_by
  school_id: order_by
  schools: schools_order_by
  teacher_by_school_id: teachers_order_by
  teacher_id: order_by
  updated_at: order_by
  users: users_order_by
}

"""
select columns of table "teacher_by_school_id"
"""
enum teacher_by_school_id_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  school_id

  """column name"""
  teacher_id

  """column name"""
  updated_at
}

"""aggregate stddev on columns"""
type teacher_by_school_id_stddev_fields {
  school_id: Float
}

"""
order by stddev() on columns of table "teacher_by_school_id"
"""
input teacher_by_school_id_stddev_order_by {
  school_id: order_by
}

"""aggregate stddev_pop on columns"""
type teacher_by_school_id_stddev_pop_fields {
  school_id: Float
}

"""
order by stddev_pop() on columns of table "teacher_by_school_id"
"""
input teacher_by_school_id_stddev_pop_order_by {
  school_id: order_by
}

"""aggregate stddev_samp on columns"""
type teacher_by_school_id_stddev_samp_fields {
  school_id: Float
}

"""
order by stddev_samp() on columns of table "teacher_by_school_id"
"""
input teacher_by_school_id_stddev_samp_order_by {
  school_id: order_by
}

"""aggregate sum on columns"""
type teacher_by_school_id_sum_fields {
  school_id: Int
}

"""
order by sum() on columns of table "teacher_by_school_id"
"""
input teacher_by_school_id_sum_order_by {
  school_id: order_by
}

"""aggregate var_pop on columns"""
type teacher_by_school_id_var_pop_fields {
  school_id: Float
}

"""
order by var_pop() on columns of table "teacher_by_school_id"
"""
input teacher_by_school_id_var_pop_order_by {
  school_id: order_by
}

"""aggregate var_samp on columns"""
type teacher_by_school_id_var_samp_fields {
  school_id: Float
}

"""
order by var_samp() on columns of table "teacher_by_school_id"
"""
input teacher_by_school_id_var_samp_order_by {
  school_id: order_by
}

"""aggregate variance on columns"""
type teacher_by_school_id_variance_fields {
  school_id: Float
}

"""
order by variance() on columns of table "teacher_by_school_id"
"""
input teacher_by_school_id_variance_order_by {
  school_id: order_by
}

"""
columns and relationships of "teachers"
"""
type teachers {
  created_at: timestamptz!
  deleted_at: timestamptz

  """An array relationship"""
  lessons_teachers(
    """distinct select on columns"""
    distinct_on: [lessons_teachers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_teachers_order_by!]

    """filter the rows returned"""
    where: lessons_teachers_bool_exp
  ): [lessons_teachers!]!

  """An aggregated array relationship"""
  lessons_teachers_aggregate(
    """distinct select on columns"""
    distinct_on: [lessons_teachers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lessons_teachers_order_by!]

    """filter the rows returned"""
    where: lessons_teachers_bool_exp
  ): lessons_teachers_aggregate!
  resource_path: String!
  school_ids: _int4
  school_name: String

  """An array relationship"""
  teacher_by_school_ids(
    """distinct select on columns"""
    distinct_on: [teacher_by_school_id_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_by_school_id_order_by!]

    """filter the rows returned"""
    where: teacher_by_school_id_bool_exp
  ): [teacher_by_school_id!]!

  """An aggregated array relationship"""
  teacher_by_school_ids_aggregate(
    """distinct select on columns"""
    distinct_on: [teacher_by_school_id_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teacher_by_school_id_order_by!]

    """filter the rows returned"""
    where: teacher_by_school_id_bool_exp
  ): teacher_by_school_id_aggregate!
  teacher_id: String!
  updated_at: timestamptz!

  """An object relationship"""
  users: users
}

"""
aggregated selection of "teachers"
"""
type teachers_aggregate {
  aggregate: teachers_aggregate_fields
  nodes: [teachers!]!
}

"""
aggregate fields of "teachers"
"""
type teachers_aggregate_fields {
  count(columns: [teachers_select_column!], distinct: Boolean): Int
  max: teachers_max_fields
  min: teachers_min_fields
}

"""
order by aggregate values of table "teachers"
"""
input teachers_aggregate_order_by {
  count: order_by
  max: teachers_max_order_by
  min: teachers_min_order_by
}

"""
input type for inserting array relation for remote table "teachers"
"""
input teachers_arr_rel_insert_input {
  data: [teachers_insert_input!]!
  on_conflict: teachers_on_conflict
}

"""
Boolean expression to filter rows from the table "teachers". All fields are combined with a logical 'AND'.
"""
input teachers_bool_exp {
  _and: [teachers_bool_exp]
  _not: teachers_bool_exp
  _or: [teachers_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  lessons_teachers: lessons_teachers_bool_exp
  resource_path: String_comparison_exp
  school_ids: _int4_comparison_exp
  school_name: String_comparison_exp
  teacher_by_school_ids: teacher_by_school_id_bool_exp
  teacher_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  users: users_bool_exp
}

"""
unique or primary key constraints on table "teachers"
"""
enum teachers_constraint {
  """unique or primary key constraint"""
  teachers_pk
}

"""
input type for inserting data into table "teachers"
"""
input teachers_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  lessons_teachers: lessons_teachers_arr_rel_insert_input
  resource_path: String
  school_ids: _int4
  school_name: String
  teacher_id: String
  updated_at: timestamptz
  users: users_obj_rel_insert_input
}

"""aggregate max on columns"""
type teachers_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  school_name: String
  teacher_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "teachers"
"""
input teachers_max_order_by {
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  school_name: order_by
  teacher_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type teachers_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  school_name: String
  teacher_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "teachers"
"""
input teachers_min_order_by {
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  school_name: order_by
  teacher_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "teachers"
"""
type teachers_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [teachers!]!
}

"""
input type for inserting object relation for remote table "teachers"
"""
input teachers_obj_rel_insert_input {
  data: teachers_insert_input!
  on_conflict: teachers_on_conflict
}

"""
on conflict condition type for table "teachers"
"""
input teachers_on_conflict {
  constraint: teachers_constraint!
  update_columns: [teachers_update_column!]!
  where: teachers_bool_exp
}

"""
ordering options when selecting data from "teachers"
"""
input teachers_order_by {
  created_at: order_by
  deleted_at: order_by
  lessons_teachers_aggregate: lessons_teachers_aggregate_order_by
  resource_path: order_by
  school_ids: order_by
  school_name: order_by
  teacher_by_school_ids_aggregate: teacher_by_school_id_aggregate_order_by
  teacher_id: order_by
  updated_at: order_by
  users: users_order_by
}

"""
primary key columns input for table: "teachers"
"""
input teachers_pk_columns_input {
  teacher_id: String!
}

"""
select columns of table "teachers"
"""
enum teachers_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  school_ids

  """column name"""
  school_name

  """column name"""
  teacher_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "teachers"
"""
input teachers_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  school_ids: _int4
  school_name: String
  teacher_id: String
  updated_at: timestamptz
}

"""
update columns of table "teachers"
"""
enum teachers_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  school_ids

  """column name"""
  school_name

  """column name"""
  teacher_id

  """column name"""
  updated_at
}

scalar time

"""
expression to compare columns of type time. All fields are combined with logical 'AND'.
"""
input time_comparison_exp {
  _eq: time
  _gt: time
  _gte: time
  _in: [time!]
  _is_null: Boolean
  _lt: time
  _lte: time
  _neq: time
  _nin: [time!]
}

scalar timestamptz

"""
expression to compare columns of type timestamptz. All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

"""
columns and relationships of "topics"
"""
type topics {
  """An array relationship"""
  assignments(
    """distinct select on columns"""
    distinct_on: [assignments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignments_order_by!]

    """filter the rows returned"""
    where: assignments_bool_exp
  ): [assignments!]!

  """An aggregated array relationship"""
  assignments_aggregate(
    """distinct select on columns"""
    distinct_on: [assignments_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [assignments_order_by!]

    """filter the rows returned"""
    where: assignments_bool_exp
  ): assignments_aggregate!
  attachment_names: _text
  attachment_urls: _text

  """An object relationship"""
  chapter: chapters
  chapter_id: String
  copied_topic_id: String
  country: String
  created_at: timestamptz!
  deleted_at: timestamptz
  display_order: smallint
  essay_required: Boolean!
  grade: smallint!
  icon_url: String
  instruction: String

  """An array relationship"""
  learning_objectives(
    """distinct select on columns"""
    distinct_on: [learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_objectives_order_by!]

    """filter the rows returned"""
    where: learning_objectives_bool_exp
  ): [learning_objectives!]!

  """An aggregated array relationship"""
  learning_objectives_aggregate(
    """distinct select on columns"""
    distinct_on: [learning_objectives_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [learning_objectives_order_by!]

    """filter the rows returned"""
    where: learning_objectives_bool_exp
  ): learning_objectives_aggregate!
  lo_display_order_counter: Int
  name: String!

  """An array relationship"""
  preset_study_plans_weeklies(
    """distinct select on columns"""
    distinct_on: [preset_study_plans_weekly_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preset_study_plans_weekly_order_by!]

    """filter the rows returned"""
    where: preset_study_plans_weekly_bool_exp
  ): [preset_study_plans_weekly!]!

  """An aggregated array relationship"""
  preset_study_plans_weeklies_aggregate(
    """distinct select on columns"""
    distinct_on: [preset_study_plans_weekly_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [preset_study_plans_weekly_order_by!]

    """filter the rows returned"""
    where: preset_study_plans_weekly_bool_exp
  ): preset_study_plans_weekly_aggregate!
  published_at: timestamptz
  resource_path: String!

  """An object relationship"""
  school: schools!
  school_id: Int!
  status: String
  subject: String!
  topic_id: String!
  topic_type: String!
  total_los: Int!
  updated_at: timestamptz!
}

"""
aggregated selection of "topics"
"""
type topics_aggregate {
  aggregate: topics_aggregate_fields
  nodes: [topics!]!
}

"""
aggregate fields of "topics"
"""
type topics_aggregate_fields {
  avg: topics_avg_fields
  count(columns: [topics_select_column!], distinct: Boolean): Int
  max: topics_max_fields
  min: topics_min_fields
  stddev: topics_stddev_fields
  stddev_pop: topics_stddev_pop_fields
  stddev_samp: topics_stddev_samp_fields
  sum: topics_sum_fields
  var_pop: topics_var_pop_fields
  var_samp: topics_var_samp_fields
  variance: topics_variance_fields
}

"""
order by aggregate values of table "topics"
"""
input topics_aggregate_order_by {
  avg: topics_avg_order_by
  count: order_by
  max: topics_max_order_by
  min: topics_min_order_by
  stddev: topics_stddev_order_by
  stddev_pop: topics_stddev_pop_order_by
  stddev_samp: topics_stddev_samp_order_by
  sum: topics_sum_order_by
  var_pop: topics_var_pop_order_by
  var_samp: topics_var_samp_order_by
  variance: topics_variance_order_by
}

"""
input type for inserting array relation for remote table "topics"
"""
input topics_arr_rel_insert_input {
  data: [topics_insert_input!]!
  on_conflict: topics_on_conflict
}

"""aggregate avg on columns"""
type topics_avg_fields {
  display_order: Float
  grade: Float
  lo_display_order_counter: Float
  school_id: Float
  total_los: Float
}

"""
order by avg() on columns of table "topics"
"""
input topics_avg_order_by {
  display_order: order_by
  grade: order_by
  lo_display_order_counter: order_by
  school_id: order_by
  total_los: order_by
}

"""
Boolean expression to filter rows from the table "topics". All fields are combined with a logical 'AND'.
"""
input topics_bool_exp {
  _and: [topics_bool_exp]
  _not: topics_bool_exp
  _or: [topics_bool_exp]
  assignments: assignments_bool_exp
  attachment_names: _text_comparison_exp
  attachment_urls: _text_comparison_exp
  chapter: chapters_bool_exp
  chapter_id: String_comparison_exp
  copied_topic_id: String_comparison_exp
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  display_order: smallint_comparison_exp
  essay_required: Boolean_comparison_exp
  grade: smallint_comparison_exp
  icon_url: String_comparison_exp
  instruction: String_comparison_exp
  learning_objectives: learning_objectives_bool_exp
  lo_display_order_counter: Int_comparison_exp
  name: String_comparison_exp
  preset_study_plans_weeklies: preset_study_plans_weekly_bool_exp
  published_at: timestamptz_comparison_exp
  resource_path: String_comparison_exp
  school: schools_bool_exp
  school_id: Int_comparison_exp
  status: String_comparison_exp
  subject: String_comparison_exp
  topic_id: String_comparison_exp
  topic_type: String_comparison_exp
  total_los: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "topics"
"""
enum topics_constraint {
  """unique or primary key constraint"""
  topics_pk
}

"""
input type for incrementing integer column in table "topics"
"""
input topics_inc_input {
  display_order: smallint
  grade: smallint
  lo_display_order_counter: Int
  school_id: Int
  total_los: Int
}

"""
input type for inserting data into table "topics"
"""
input topics_insert_input {
  assignments: assignments_arr_rel_insert_input
  attachment_names: _text
  attachment_urls: _text
  chapter: chapters_obj_rel_insert_input
  chapter_id: String
  copied_topic_id: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  essay_required: Boolean
  grade: smallint
  icon_url: String
  instruction: String
  learning_objectives: learning_objectives_arr_rel_insert_input
  lo_display_order_counter: Int
  name: String
  preset_study_plans_weeklies: preset_study_plans_weekly_arr_rel_insert_input
  published_at: timestamptz
  resource_path: String
  school: schools_obj_rel_insert_input
  school_id: Int
  status: String
  subject: String
  topic_id: String
  topic_type: String
  total_los: Int
  updated_at: timestamptz
}

"""
columns and relationships of "topics_learning_objectives"
"""
type topics_learning_objectives {
  created_at: timestamptz!
  deleted_at: timestamptz
  display_order: smallint

  """An object relationship"""
  learning_objective: learning_objectives!
  lo_id: String!
  resource_path: String!

  """An object relationship"""
  topic: topics!
  topic_id: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "topics_learning_objectives"
"""
type topics_learning_objectives_aggregate {
  aggregate: topics_learning_objectives_aggregate_fields
  nodes: [topics_learning_objectives!]!
}

"""
aggregate fields of "topics_learning_objectives"
"""
type topics_learning_objectives_aggregate_fields {
  avg: topics_learning_objectives_avg_fields
  count(columns: [topics_learning_objectives_select_column!], distinct: Boolean): Int
  max: topics_learning_objectives_max_fields
  min: topics_learning_objectives_min_fields
  stddev: topics_learning_objectives_stddev_fields
  stddev_pop: topics_learning_objectives_stddev_pop_fields
  stddev_samp: topics_learning_objectives_stddev_samp_fields
  sum: topics_learning_objectives_sum_fields
  var_pop: topics_learning_objectives_var_pop_fields
  var_samp: topics_learning_objectives_var_samp_fields
  variance: topics_learning_objectives_variance_fields
}

"""
order by aggregate values of table "topics_learning_objectives"
"""
input topics_learning_objectives_aggregate_order_by {
  avg: topics_learning_objectives_avg_order_by
  count: order_by
  max: topics_learning_objectives_max_order_by
  min: topics_learning_objectives_min_order_by
  stddev: topics_learning_objectives_stddev_order_by
  stddev_pop: topics_learning_objectives_stddev_pop_order_by
  stddev_samp: topics_learning_objectives_stddev_samp_order_by
  sum: topics_learning_objectives_sum_order_by
  var_pop: topics_learning_objectives_var_pop_order_by
  var_samp: topics_learning_objectives_var_samp_order_by
  variance: topics_learning_objectives_variance_order_by
}

"""
input type for inserting array relation for remote table "topics_learning_objectives"
"""
input topics_learning_objectives_arr_rel_insert_input {
  data: [topics_learning_objectives_insert_input!]!
  on_conflict: topics_learning_objectives_on_conflict
}

"""aggregate avg on columns"""
type topics_learning_objectives_avg_fields {
  display_order: Float
}

"""
order by avg() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_avg_order_by {
  display_order: order_by
}

"""
Boolean expression to filter rows from the table "topics_learning_objectives". All fields are combined with a logical 'AND'.
"""
input topics_learning_objectives_bool_exp {
  _and: [topics_learning_objectives_bool_exp]
  _not: topics_learning_objectives_bool_exp
  _or: [topics_learning_objectives_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  display_order: smallint_comparison_exp
  learning_objective: learning_objectives_bool_exp
  lo_id: String_comparison_exp
  resource_path: String_comparison_exp
  topic: topics_bool_exp
  topic_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "topics_learning_objectives"
"""
enum topics_learning_objectives_constraint {
  """unique or primary key constraint"""
  topics_learning_objectives_pk
}

"""
input type for incrementing integer column in table "topics_learning_objectives"
"""
input topics_learning_objectives_inc_input {
  display_order: smallint
}

"""
input type for inserting data into table "topics_learning_objectives"
"""
input topics_learning_objectives_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  learning_objective: learning_objectives_obj_rel_insert_input
  lo_id: String
  resource_path: String
  topic: topics_obj_rel_insert_input
  topic_id: String
  updated_at: timestamptz
}

"""aggregate max on columns"""
type topics_learning_objectives_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  lo_id: String
  resource_path: String
  topic_id: String
  updated_at: timestamptz
}

"""
order by max() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_max_order_by {
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  lo_id: order_by
  resource_path: order_by
  topic_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type topics_learning_objectives_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  lo_id: String
  resource_path: String
  topic_id: String
  updated_at: timestamptz
}

"""
order by min() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_min_order_by {
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  lo_id: order_by
  resource_path: order_by
  topic_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "topics_learning_objectives"
"""
type topics_learning_objectives_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [topics_learning_objectives!]!
}

"""
input type for inserting object relation for remote table "topics_learning_objectives"
"""
input topics_learning_objectives_obj_rel_insert_input {
  data: topics_learning_objectives_insert_input!
  on_conflict: topics_learning_objectives_on_conflict
}

"""
on conflict condition type for table "topics_learning_objectives"
"""
input topics_learning_objectives_on_conflict {
  constraint: topics_learning_objectives_constraint!
  update_columns: [topics_learning_objectives_update_column!]!
  where: topics_learning_objectives_bool_exp
}

"""
ordering options when selecting data from "topics_learning_objectives"
"""
input topics_learning_objectives_order_by {
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  learning_objective: learning_objectives_order_by
  lo_id: order_by
  resource_path: order_by
  topic: topics_order_by
  topic_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "topics_learning_objectives"
"""
input topics_learning_objectives_pk_columns_input {
  lo_id: String!
  topic_id: String!
}

"""
select columns of table "topics_learning_objectives"
"""
enum topics_learning_objectives_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  lo_id

  """column name"""
  resource_path

  """column name"""
  topic_id

  """column name"""
  updated_at
}

"""
input type for updating data in table "topics_learning_objectives"
"""
input topics_learning_objectives_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  lo_id: String
  resource_path: String
  topic_id: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type topics_learning_objectives_stddev_fields {
  display_order: Float
}

"""
order by stddev() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_stddev_order_by {
  display_order: order_by
}

"""aggregate stddev_pop on columns"""
type topics_learning_objectives_stddev_pop_fields {
  display_order: Float
}

"""
order by stddev_pop() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_stddev_pop_order_by {
  display_order: order_by
}

"""aggregate stddev_samp on columns"""
type topics_learning_objectives_stddev_samp_fields {
  display_order: Float
}

"""
order by stddev_samp() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_stddev_samp_order_by {
  display_order: order_by
}

"""aggregate sum on columns"""
type topics_learning_objectives_sum_fields {
  display_order: smallint
}

"""
order by sum() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_sum_order_by {
  display_order: order_by
}

"""
update columns of table "topics_learning_objectives"
"""
enum topics_learning_objectives_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  lo_id

  """column name"""
  resource_path

  """column name"""
  topic_id

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type topics_learning_objectives_var_pop_fields {
  display_order: Float
}

"""
order by var_pop() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_var_pop_order_by {
  display_order: order_by
}

"""aggregate var_samp on columns"""
type topics_learning_objectives_var_samp_fields {
  display_order: Float
}

"""
order by var_samp() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_var_samp_order_by {
  display_order: order_by
}

"""aggregate variance on columns"""
type topics_learning_objectives_variance_fields {
  display_order: Float
}

"""
order by variance() on columns of table "topics_learning_objectives"
"""
input topics_learning_objectives_variance_order_by {
  display_order: order_by
}

"""aggregate max on columns"""
type topics_max_fields {
  chapter_id: String
  copied_topic_id: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  icon_url: String
  instruction: String
  lo_display_order_counter: Int
  name: String
  published_at: timestamptz
  resource_path: String
  school_id: Int
  status: String
  subject: String
  topic_id: String
  topic_type: String
  total_los: Int
  updated_at: timestamptz
}

"""
order by max() on columns of table "topics"
"""
input topics_max_order_by {
  chapter_id: order_by
  copied_topic_id: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  grade: order_by
  icon_url: order_by
  instruction: order_by
  lo_display_order_counter: order_by
  name: order_by
  published_at: order_by
  resource_path: order_by
  school_id: order_by
  status: order_by
  subject: order_by
  topic_id: order_by
  topic_type: order_by
  total_los: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type topics_min_fields {
  chapter_id: String
  copied_topic_id: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  grade: smallint
  icon_url: String
  instruction: String
  lo_display_order_counter: Int
  name: String
  published_at: timestamptz
  resource_path: String
  school_id: Int
  status: String
  subject: String
  topic_id: String
  topic_type: String
  total_los: Int
  updated_at: timestamptz
}

"""
order by min() on columns of table "topics"
"""
input topics_min_order_by {
  chapter_id: order_by
  copied_topic_id: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  grade: order_by
  icon_url: order_by
  instruction: order_by
  lo_display_order_counter: order_by
  name: order_by
  published_at: order_by
  resource_path: order_by
  school_id: order_by
  status: order_by
  subject: order_by
  topic_id: order_by
  topic_type: order_by
  total_los: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "topics"
"""
type topics_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [topics!]!
}

"""
input type for inserting object relation for remote table "topics"
"""
input topics_obj_rel_insert_input {
  data: topics_insert_input!
  on_conflict: topics_on_conflict
}

"""
on conflict condition type for table "topics"
"""
input topics_on_conflict {
  constraint: topics_constraint!
  update_columns: [topics_update_column!]!
  where: topics_bool_exp
}

"""
ordering options when selecting data from "topics"
"""
input topics_order_by {
  assignments_aggregate: assignments_aggregate_order_by
  attachment_names: order_by
  attachment_urls: order_by
  chapter: chapters_order_by
  chapter_id: order_by
  copied_topic_id: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  display_order: order_by
  essay_required: order_by
  grade: order_by
  icon_url: order_by
  instruction: order_by
  learning_objectives_aggregate: learning_objectives_aggregate_order_by
  lo_display_order_counter: order_by
  name: order_by
  preset_study_plans_weeklies_aggregate: preset_study_plans_weekly_aggregate_order_by
  published_at: order_by
  resource_path: order_by
  school: schools_order_by
  school_id: order_by
  status: order_by
  subject: order_by
  topic_id: order_by
  topic_type: order_by
  total_los: order_by
  updated_at: order_by
}

"""
primary key columns input for table: "topics"
"""
input topics_pk_columns_input {
  topic_id: String!
}

"""
select columns of table "topics"
"""
enum topics_select_column {
  """column name"""
  attachment_names

  """column name"""
  attachment_urls

  """column name"""
  chapter_id

  """column name"""
  copied_topic_id

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  essay_required

  """column name"""
  grade

  """column name"""
  icon_url

  """column name"""
  instruction

  """column name"""
  lo_display_order_counter

  """column name"""
  name

  """column name"""
  published_at

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  status

  """column name"""
  subject

  """column name"""
  topic_id

  """column name"""
  topic_type

  """column name"""
  total_los

  """column name"""
  updated_at
}

"""
input type for updating data in table "topics"
"""
input topics_set_input {
  attachment_names: _text
  attachment_urls: _text
  chapter_id: String
  copied_topic_id: String
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  display_order: smallint
  essay_required: Boolean
  grade: smallint
  icon_url: String
  instruction: String
  lo_display_order_counter: Int
  name: String
  published_at: timestamptz
  resource_path: String
  school_id: Int
  status: String
  subject: String
  topic_id: String
  topic_type: String
  total_los: Int
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type topics_stddev_fields {
  display_order: Float
  grade: Float
  lo_display_order_counter: Float
  school_id: Float
  total_los: Float
}

"""
order by stddev() on columns of table "topics"
"""
input topics_stddev_order_by {
  display_order: order_by
  grade: order_by
  lo_display_order_counter: order_by
  school_id: order_by
  total_los: order_by
}

"""aggregate stddev_pop on columns"""
type topics_stddev_pop_fields {
  display_order: Float
  grade: Float
  lo_display_order_counter: Float
  school_id: Float
  total_los: Float
}

"""
order by stddev_pop() on columns of table "topics"
"""
input topics_stddev_pop_order_by {
  display_order: order_by
  grade: order_by
  lo_display_order_counter: order_by
  school_id: order_by
  total_los: order_by
}

"""aggregate stddev_samp on columns"""
type topics_stddev_samp_fields {
  display_order: Float
  grade: Float
  lo_display_order_counter: Float
  school_id: Float
  total_los: Float
}

"""
order by stddev_samp() on columns of table "topics"
"""
input topics_stddev_samp_order_by {
  display_order: order_by
  grade: order_by
  lo_display_order_counter: order_by
  school_id: order_by
  total_los: order_by
}

"""aggregate sum on columns"""
type topics_sum_fields {
  display_order: smallint
  grade: smallint
  lo_display_order_counter: Int
  school_id: Int
  total_los: Int
}

"""
order by sum() on columns of table "topics"
"""
input topics_sum_order_by {
  display_order: order_by
  grade: order_by
  lo_display_order_counter: order_by
  school_id: order_by
  total_los: order_by
}

"""
update columns of table "topics"
"""
enum topics_update_column {
  """column name"""
  attachment_names

  """column name"""
  attachment_urls

  """column name"""
  chapter_id

  """column name"""
  copied_topic_id

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  display_order

  """column name"""
  essay_required

  """column name"""
  grade

  """column name"""
  icon_url

  """column name"""
  instruction

  """column name"""
  lo_display_order_counter

  """column name"""
  name

  """column name"""
  published_at

  """column name"""
  resource_path

  """column name"""
  school_id

  """column name"""
  status

  """column name"""
  subject

  """column name"""
  topic_id

  """column name"""
  topic_type

  """column name"""
  total_los

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type topics_var_pop_fields {
  display_order: Float
  grade: Float
  lo_display_order_counter: Float
  school_id: Float
  total_los: Float
}

"""
order by var_pop() on columns of table "topics"
"""
input topics_var_pop_order_by {
  display_order: order_by
  grade: order_by
  lo_display_order_counter: order_by
  school_id: order_by
  total_los: order_by
}

"""aggregate var_samp on columns"""
type topics_var_samp_fields {
  display_order: Float
  grade: Float
  lo_display_order_counter: Float
  school_id: Float
  total_los: Float
}

"""
order by var_samp() on columns of table "topics"
"""
input topics_var_samp_order_by {
  display_order: order_by
  grade: order_by
  lo_display_order_counter: order_by
  school_id: order_by
  total_los: order_by
}

"""aggregate variance on columns"""
type topics_variance_fields {
  display_order: Float
  grade: Float
  lo_display_order_counter: Float
  school_id: Float
  total_los: Float
}

"""
order by variance() on columns of table "topics"
"""
input topics_variance_order_by {
  display_order: order_by
  grade: order_by
  lo_display_order_counter: order_by
  school_id: order_by
  total_los: order_by
}

"""
columns and relationships of "user_access_paths"
"""
type user_access_paths {
  access_path: String
  created_at: timestamptz!
  deleted_at: timestamptz

  """An object relationship"""
  location: locations!
  location_id: String!
  resource_path: String!
  updated_at: timestamptz!

  """An object relationship"""
  user: users!
  user_id: String!
}

"""
aggregated selection of "user_access_paths"
"""
type user_access_paths_aggregate {
  aggregate: user_access_paths_aggregate_fields
  nodes: [user_access_paths!]!
}

"""
aggregate fields of "user_access_paths"
"""
type user_access_paths_aggregate_fields {
  count(columns: [user_access_paths_select_column!], distinct: Boolean): Int
  max: user_access_paths_max_fields
  min: user_access_paths_min_fields
}

"""
order by aggregate values of table "user_access_paths"
"""
input user_access_paths_aggregate_order_by {
  count: order_by
  max: user_access_paths_max_order_by
  min: user_access_paths_min_order_by
}

"""
input type for inserting array relation for remote table "user_access_paths"
"""
input user_access_paths_arr_rel_insert_input {
  data: [user_access_paths_insert_input!]!
  on_conflict: user_access_paths_on_conflict
}

"""
Boolean expression to filter rows from the table "user_access_paths". All fields are combined with a logical 'AND'.
"""
input user_access_paths_bool_exp {
  _and: [user_access_paths_bool_exp]
  _not: user_access_paths_bool_exp
  _or: [user_access_paths_bool_exp]
  access_path: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  location: locations_bool_exp
  location_id: String_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
  user_id: String_comparison_exp
}

"""
unique or primary key constraints on table "user_access_paths"
"""
enum user_access_paths_constraint {
  """unique or primary key constraint"""
  user_access_paths_pk
}

"""
input type for inserting data into table "user_access_paths"
"""
input user_access_paths_insert_input {
  access_path: String
  created_at: timestamptz
  deleted_at: timestamptz
  location: locations_obj_rel_insert_input
  location_id: String
  resource_path: String
  updated_at: timestamptz
  user: users_obj_rel_insert_input
  user_id: String
}

"""aggregate max on columns"""
type user_access_paths_max_fields {
  access_path: String
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  resource_path: String
  updated_at: timestamptz
  user_id: String
}

"""
order by max() on columns of table "user_access_paths"
"""
input user_access_paths_max_order_by {
  access_path: order_by
  created_at: order_by
  deleted_at: order_by
  location_id: order_by
  resource_path: order_by
  updated_at: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type user_access_paths_min_fields {
  access_path: String
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  resource_path: String
  updated_at: timestamptz
  user_id: String
}

"""
order by min() on columns of table "user_access_paths"
"""
input user_access_paths_min_order_by {
  access_path: order_by
  created_at: order_by
  deleted_at: order_by
  location_id: order_by
  resource_path: order_by
  updated_at: order_by
  user_id: order_by
}

"""
response of any mutation on the table "user_access_paths"
"""
type user_access_paths_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [user_access_paths!]!
}

"""
input type for inserting object relation for remote table "user_access_paths"
"""
input user_access_paths_obj_rel_insert_input {
  data: user_access_paths_insert_input!
  on_conflict: user_access_paths_on_conflict
}

"""
on conflict condition type for table "user_access_paths"
"""
input user_access_paths_on_conflict {
  constraint: user_access_paths_constraint!
  update_columns: [user_access_paths_update_column!]!
  where: user_access_paths_bool_exp
}

"""
ordering options when selecting data from "user_access_paths"
"""
input user_access_paths_order_by {
  access_path: order_by
  created_at: order_by
  deleted_at: order_by
  location: locations_order_by
  location_id: order_by
  resource_path: order_by
  updated_at: order_by
  user: users_order_by
  user_id: order_by
}

"""
primary key columns input for table: "user_access_paths"
"""
input user_access_paths_pk_columns_input {
  location_id: String!
  user_id: String!
}

"""
select columns of table "user_access_paths"
"""
enum user_access_paths_select_column {
  """column name"""
  access_path

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  location_id

  """column name"""
  resource_path

  """column name"""
  updated_at

  """column name"""
  user_id
}

"""
input type for updating data in table "user_access_paths"
"""
input user_access_paths_set_input {
  access_path: String
  created_at: timestamptz
  deleted_at: timestamptz
  location_id: String
  resource_path: String
  updated_at: timestamptz
  user_id: String
}

"""
update columns of table "user_access_paths"
"""
enum user_access_paths_update_column {
  """column name"""
  access_path

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  location_id

  """column name"""
  resource_path

  """column name"""
  updated_at

  """column name"""
  user_id
}

"""
columns and relationships of "user_address"
"""
type user_address {
  address_type: String!
  city: String
  created_at: timestamptz!
  deleted_at: timestamptz
  first_street: String
  postal_code: String

  """An object relationship"""
  prefecture: prefecture
  prefecture_id: String
  resource_path: String
  second_street: String
  updated_at: timestamptz!
  user_address_id: String!
  user_id: String!
}

"""
aggregated selection of "user_address"
"""
type user_address_aggregate {
  aggregate: user_address_aggregate_fields
  nodes: [user_address!]!
}

"""
aggregate fields of "user_address"
"""
type user_address_aggregate_fields {
  count(columns: [user_address_select_column!], distinct: Boolean): Int
  max: user_address_max_fields
  min: user_address_min_fields
}

"""
order by aggregate values of table "user_address"
"""
input user_address_aggregate_order_by {
  count: order_by
  max: user_address_max_order_by
  min: user_address_min_order_by
}

"""
input type for inserting array relation for remote table "user_address"
"""
input user_address_arr_rel_insert_input {
  data: [user_address_insert_input!]!
  on_conflict: user_address_on_conflict
}

"""
Boolean expression to filter rows from the table "user_address". All fields are combined with a logical 'AND'.
"""
input user_address_bool_exp {
  _and: [user_address_bool_exp]
  _not: user_address_bool_exp
  _or: [user_address_bool_exp]
  address_type: String_comparison_exp
  city: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  first_street: String_comparison_exp
  postal_code: String_comparison_exp
  prefecture: prefecture_bool_exp
  prefecture_id: String_comparison_exp
  resource_path: String_comparison_exp
  second_street: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_address_id: String_comparison_exp
  user_id: String_comparison_exp
}

"""
unique or primary key constraints on table "user_address"
"""
enum user_address_constraint {
  """unique or primary key constraint"""
  user_address__pk
}

"""
input type for inserting data into table "user_address"
"""
input user_address_insert_input {
  address_type: String
  city: String
  created_at: timestamptz
  deleted_at: timestamptz
  first_street: String
  postal_code: String
  prefecture: prefecture_obj_rel_insert_input
  prefecture_id: String
  resource_path: String
  second_street: String
  updated_at: timestamptz
  user_address_id: String
  user_id: String
}

"""aggregate max on columns"""
type user_address_max_fields {
  address_type: String
  city: String
  created_at: timestamptz
  deleted_at: timestamptz
  first_street: String
  postal_code: String
  prefecture_id: String
  resource_path: String
  second_street: String
  updated_at: timestamptz
  user_address_id: String
  user_id: String
}

"""
order by max() on columns of table "user_address"
"""
input user_address_max_order_by {
  address_type: order_by
  city: order_by
  created_at: order_by
  deleted_at: order_by
  first_street: order_by
  postal_code: order_by
  prefecture_id: order_by
  resource_path: order_by
  second_street: order_by
  updated_at: order_by
  user_address_id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type user_address_min_fields {
  address_type: String
  city: String
  created_at: timestamptz
  deleted_at: timestamptz
  first_street: String
  postal_code: String
  prefecture_id: String
  resource_path: String
  second_street: String
  updated_at: timestamptz
  user_address_id: String
  user_id: String
}

"""
order by min() on columns of table "user_address"
"""
input user_address_min_order_by {
  address_type: order_by
  city: order_by
  created_at: order_by
  deleted_at: order_by
  first_street: order_by
  postal_code: order_by
  prefecture_id: order_by
  resource_path: order_by
  second_street: order_by
  updated_at: order_by
  user_address_id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "user_address"
"""
type user_address_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [user_address!]!
}

"""
input type for inserting object relation for remote table "user_address"
"""
input user_address_obj_rel_insert_input {
  data: user_address_insert_input!
  on_conflict: user_address_on_conflict
}

"""
on conflict condition type for table "user_address"
"""
input user_address_on_conflict {
  constraint: user_address_constraint!
  update_columns: [user_address_update_column!]!
  where: user_address_bool_exp
}

"""
ordering options when selecting data from "user_address"
"""
input user_address_order_by {
  address_type: order_by
  city: order_by
  created_at: order_by
  deleted_at: order_by
  first_street: order_by
  postal_code: order_by
  prefecture: prefecture_order_by
  prefecture_id: order_by
  resource_path: order_by
  second_street: order_by
  updated_at: order_by
  user_address_id: order_by
  user_id: order_by
}

"""
primary key columns input for table: "user_address"
"""
input user_address_pk_columns_input {
  user_address_id: String!
}

"""
select columns of table "user_address"
"""
enum user_address_select_column {
  """column name"""
  address_type

  """column name"""
  city

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  first_street

  """column name"""
  postal_code

  """column name"""
  prefecture_id

  """column name"""
  resource_path

  """column name"""
  second_street

  """column name"""
  updated_at

  """column name"""
  user_address_id

  """column name"""
  user_id
}

"""
input type for updating data in table "user_address"
"""
input user_address_set_input {
  address_type: String
  city: String
  created_at: timestamptz
  deleted_at: timestamptz
  first_street: String
  postal_code: String
  prefecture_id: String
  resource_path: String
  second_street: String
  updated_at: timestamptz
  user_address_id: String
  user_id: String
}

"""
update columns of table "user_address"
"""
enum user_address_update_column {
  """column name"""
  address_type

  """column name"""
  city

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  first_street

  """column name"""
  postal_code

  """column name"""
  prefecture_id

  """column name"""
  resource_path

  """column name"""
  second_street

  """column name"""
  updated_at

  """column name"""
  user_address_id

  """column name"""
  user_id
}

"""
columns and relationships of "user_group"
"""
type user_group {
  created_at: timestamptz!
  deleted_at: timestamptz

  """An array relationship"""
  granted_roles(
    """distinct select on columns"""
    distinct_on: [granted_role_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [granted_role_order_by!]

    """filter the rows returned"""
    where: granted_role_bool_exp
  ): [granted_role!]!

  """An aggregated array relationship"""
  granted_roles_aggregate(
    """distinct select on columns"""
    distinct_on: [granted_role_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [granted_role_order_by!]

    """filter the rows returned"""
    where: granted_role_bool_exp
  ): granted_role_aggregate!
  is_system: Boolean
  org_location_id: String
  resource_path: String!
  updated_at: timestamptz!
  user_group_id: String!

  """An array relationship"""
  user_group_members(
    """distinct select on columns"""
    distinct_on: [user_group_member_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_group_member_order_by!]

    """filter the rows returned"""
    where: user_group_member_bool_exp
  ): [user_group_member!]!

  """An aggregated array relationship"""
  user_group_members_aggregate(
    """distinct select on columns"""
    distinct_on: [user_group_member_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_group_member_order_by!]

    """filter the rows returned"""
    where: user_group_member_bool_exp
  ): user_group_member_aggregate!
  user_group_name: String!
}

"""
aggregated selection of "user_group"
"""
type user_group_aggregate {
  aggregate: user_group_aggregate_fields
  nodes: [user_group!]!
}

"""
aggregate fields of "user_group"
"""
type user_group_aggregate_fields {
  count(columns: [user_group_select_column!], distinct: Boolean): Int
  max: user_group_max_fields
  min: user_group_min_fields
}

"""
order by aggregate values of table "user_group"
"""
input user_group_aggregate_order_by {
  count: order_by
  max: user_group_max_order_by
  min: user_group_min_order_by
}

"""
input type for inserting array relation for remote table "user_group"
"""
input user_group_arr_rel_insert_input {
  data: [user_group_insert_input!]!
  on_conflict: user_group_on_conflict
}

"""
Boolean expression to filter rows from the table "user_group". All fields are combined with a logical 'AND'.
"""
input user_group_bool_exp {
  _and: [user_group_bool_exp]
  _not: user_group_bool_exp
  _or: [user_group_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  granted_roles: granted_role_bool_exp
  is_system: Boolean_comparison_exp
  org_location_id: String_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_group_id: String_comparison_exp
  user_group_members: user_group_member_bool_exp
  user_group_name: String_comparison_exp
}

"""
unique or primary key constraints on table "user_group"
"""
enum user_group_constraint {
  """unique or primary key constraint"""
  pk__user_group
}

"""
input type for inserting data into table "user_group"
"""
input user_group_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  granted_roles: granted_role_arr_rel_insert_input
  is_system: Boolean
  org_location_id: String
  resource_path: String
  updated_at: timestamptz
  user_group_id: String
  user_group_members: user_group_member_arr_rel_insert_input
  user_group_name: String
}

"""aggregate max on columns"""
type user_group_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  org_location_id: String
  resource_path: String
  updated_at: timestamptz
  user_group_id: String
  user_group_name: String
}

"""
order by max() on columns of table "user_group"
"""
input user_group_max_order_by {
  created_at: order_by
  deleted_at: order_by
  org_location_id: order_by
  resource_path: order_by
  updated_at: order_by
  user_group_id: order_by
  user_group_name: order_by
}

"""
columns and relationships of "user_group_member"
"""
type user_group_member {
  created_at: timestamptz!
  deleted_at: timestamptz
  resource_path: String!
  updated_at: timestamptz!

  """An object relationship"""
  user_group: user_group!
  user_group_id: String!
  user_id: String!
}

"""
aggregated selection of "user_group_member"
"""
type user_group_member_aggregate {
  aggregate: user_group_member_aggregate_fields
  nodes: [user_group_member!]!
}

"""
aggregate fields of "user_group_member"
"""
type user_group_member_aggregate_fields {
  count(columns: [user_group_member_select_column!], distinct: Boolean): Int
  max: user_group_member_max_fields
  min: user_group_member_min_fields
}

"""
order by aggregate values of table "user_group_member"
"""
input user_group_member_aggregate_order_by {
  count: order_by
  max: user_group_member_max_order_by
  min: user_group_member_min_order_by
}

"""
input type for inserting array relation for remote table "user_group_member"
"""
input user_group_member_arr_rel_insert_input {
  data: [user_group_member_insert_input!]!
  on_conflict: user_group_member_on_conflict
}

"""
Boolean expression to filter rows from the table "user_group_member". All fields are combined with a logical 'AND'.
"""
input user_group_member_bool_exp {
  _and: [user_group_member_bool_exp]
  _not: user_group_member_bool_exp
  _or: [user_group_member_bool_exp]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  resource_path: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_group: user_group_bool_exp
  user_group_id: String_comparison_exp
  user_id: String_comparison_exp
}

"""
unique or primary key constraints on table "user_group_member"
"""
enum user_group_member_constraint {
  """unique or primary key constraint"""
  pk__user_group_member
}

"""
input type for inserting data into table "user_group_member"
"""
input user_group_member_insert_input {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
  user_group: user_group_obj_rel_insert_input
  user_group_id: String
  user_id: String
}

"""aggregate max on columns"""
type user_group_member_max_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
  user_group_id: String
  user_id: String
}

"""
order by max() on columns of table "user_group_member"
"""
input user_group_member_max_order_by {
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  updated_at: order_by
  user_group_id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type user_group_member_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
  user_group_id: String
  user_id: String
}

"""
order by min() on columns of table "user_group_member"
"""
input user_group_member_min_order_by {
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  updated_at: order_by
  user_group_id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "user_group_member"
"""
type user_group_member_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [user_group_member!]!
}

"""
input type for inserting object relation for remote table "user_group_member"
"""
input user_group_member_obj_rel_insert_input {
  data: user_group_member_insert_input!
  on_conflict: user_group_member_on_conflict
}

"""
on conflict condition type for table "user_group_member"
"""
input user_group_member_on_conflict {
  constraint: user_group_member_constraint!
  update_columns: [user_group_member_update_column!]!
  where: user_group_member_bool_exp
}

"""
ordering options when selecting data from "user_group_member"
"""
input user_group_member_order_by {
  created_at: order_by
  deleted_at: order_by
  resource_path: order_by
  updated_at: order_by
  user_group: user_group_order_by
  user_group_id: order_by
  user_id: order_by
}

"""
primary key columns input for table: "user_group_member"
"""
input user_group_member_pk_columns_input {
  user_group_id: String!
  user_id: String!
}

"""
select columns of table "user_group_member"
"""
enum user_group_member_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  updated_at

  """column name"""
  user_group_id

  """column name"""
  user_id
}

"""
input type for updating data in table "user_group_member"
"""
input user_group_member_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  resource_path: String
  updated_at: timestamptz
  user_group_id: String
  user_id: String
}

"""
update columns of table "user_group_member"
"""
enum user_group_member_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  resource_path

  """column name"""
  updated_at

  """column name"""
  user_group_id

  """column name"""
  user_id
}

"""aggregate min on columns"""
type user_group_min_fields {
  created_at: timestamptz
  deleted_at: timestamptz
  org_location_id: String
  resource_path: String
  updated_at: timestamptz
  user_group_id: String
  user_group_name: String
}

"""
order by min() on columns of table "user_group"
"""
input user_group_min_order_by {
  created_at: order_by
  deleted_at: order_by
  org_location_id: order_by
  resource_path: order_by
  updated_at: order_by
  user_group_id: order_by
  user_group_name: order_by
}

"""
response of any mutation on the table "user_group"
"""
type user_group_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [user_group!]!
}

"""
input type for inserting object relation for remote table "user_group"
"""
input user_group_obj_rel_insert_input {
  data: user_group_insert_input!
  on_conflict: user_group_on_conflict
}

"""
on conflict condition type for table "user_group"
"""
input user_group_on_conflict {
  constraint: user_group_constraint!
  update_columns: [user_group_update_column!]!
  where: user_group_bool_exp
}

"""
ordering options when selecting data from "user_group"
"""
input user_group_order_by {
  created_at: order_by
  deleted_at: order_by
  granted_roles_aggregate: granted_role_aggregate_order_by
  is_system: order_by
  org_location_id: order_by
  resource_path: order_by
  updated_at: order_by
  user_group_id: order_by
  user_group_members_aggregate: user_group_member_aggregate_order_by
  user_group_name: order_by
}

"""
primary key columns input for table: "user_group"
"""
input user_group_pk_columns_input {
  user_group_id: String!
}

"""
select columns of table "user_group"
"""
enum user_group_select_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  is_system

  """column name"""
  org_location_id

  """column name"""
  resource_path

  """column name"""
  updated_at

  """column name"""
  user_group_id

  """column name"""
  user_group_name
}

"""
input type for updating data in table "user_group"
"""
input user_group_set_input {
  created_at: timestamptz
  deleted_at: timestamptz
  is_system: Boolean
  org_location_id: String
  resource_path: String
  updated_at: timestamptz
  user_group_id: String
  user_group_name: String
}

"""
update columns of table "user_group"
"""
enum user_group_update_column {
  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  is_system

  """column name"""
  org_location_id

  """column name"""
  resource_path

  """column name"""
  updated_at

  """column name"""
  user_group_id

  """column name"""
  user_group_name
}

"""
columns and relationships of "users"
"""
type users {
  allow_notification: Boolean
  avatar: String
  birthday: date

  """An array relationship"""
  class_members(
    """distinct select on columns"""
    distinct_on: [class_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_members_order_by!]

    """filter the rows returned"""
    where: class_members_bool_exp
  ): [class_members!]!

  """An aggregated array relationship"""
  class_members_aggregate(
    """distinct select on columns"""
    distinct_on: [class_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [class_members_order_by!]

    """filter the rows returned"""
    where: class_members_bool_exp
  ): class_members_aggregate!
  country: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  device_token: String
  email: String
  email_verified: Boolean
  facebook_id: String
  first_name: String!
  first_name_phonetic: String
  full_name_phonetic: String
  gender: String
  given_name: String

  """An array relationship"""
  info_notifications(
    """distinct select on columns"""
    distinct_on: [info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notifications_order_by!]

    """filter the rows returned"""
    where: info_notifications_bool_exp
  ): [info_notifications!]!

  """An aggregated array relationship"""
  info_notifications_aggregate(
    """distinct select on columns"""
    distinct_on: [info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [info_notifications_order_by!]

    """filter the rows returned"""
    where: info_notifications_bool_exp
  ): info_notifications_aggregate!

  """
  to distinguish our staff using app as a student or tester testing app as coach, tutor
  """
  is_tester: Boolean
  last_login_date: timestamptz
  last_name: String!
  last_name_phonetic: String

  """An array relationship"""
  lesson_members(
    """distinct select on columns"""
    distinct_on: [lesson_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_members_order_by!]

    """filter the rows returned"""
    where: lesson_members_bool_exp
  ): [lesson_members!]!

  """An aggregated array relationship"""
  lesson_members_aggregate(
    """distinct select on columns"""
    distinct_on: [lesson_members_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [lesson_members_order_by!]

    """filter the rows returned"""
    where: lesson_members_bool_exp
  ): lesson_members_aggregate!
  name: String!

  """An object relationship"""
  parent: parents
  phone_number: String
  phone_verified: Boolean
  platform: String

  """An array relationship"""
  promotions(
    """distinct select on columns"""
    distinct_on: [promotions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [promotions_order_by!]

    """filter the rows returned"""
    where: promotions_bool_exp
  ): [promotions!]!

  """An aggregated array relationship"""
  promotions_aggregate(
    """distinct select on columns"""
    distinct_on: [promotions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [promotions_order_by!]

    """filter the rows returned"""
    where: promotions_bool_exp
  ): promotions_aggregate!
  resource_path: String!

  """An object relationship"""
  school_admin: school_admins

  """An object relationship"""
  student: students

  """An object relationship"""
  student_parent: student_parents

  """An object relationship"""
  teacher_by_school_id: teacher_by_school_id

  """An array relationship"""
  teachers(
    """distinct select on columns"""
    distinct_on: [teachers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teachers_order_by!]

    """filter the rows returned"""
    where: teachers_bool_exp
  ): [teachers!]!

  """An aggregated array relationship"""
  teachers_aggregate(
    """distinct select on columns"""
    distinct_on: [teachers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [teachers_order_by!]

    """filter the rows returned"""
    where: teachers_bool_exp
  ): teachers_aggregate!
  updated_at: timestamptz!

  """An array relationship"""
  user_access_paths(
    """distinct select on columns"""
    distinct_on: [user_access_paths_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_access_paths_order_by!]

    """filter the rows returned"""
    where: user_access_paths_bool_exp
  ): [user_access_paths!]!

  """An aggregated array relationship"""
  user_access_paths_aggregate(
    """distinct select on columns"""
    distinct_on: [user_access_paths_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_access_paths_order_by!]

    """filter the rows returned"""
    where: user_access_paths_bool_exp
  ): user_access_paths_aggregate!
  user_group: String!

  """An array relationship"""
  user_group_members(
    """distinct select on columns"""
    distinct_on: [user_group_member_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_group_member_order_by!]

    """filter the rows returned"""
    where: user_group_member_bool_exp
  ): [user_group_member!]!

  """An aggregated array relationship"""
  user_group_members_aggregate(
    """distinct select on columns"""
    distinct_on: [user_group_member_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_group_member_order_by!]

    """filter the rows returned"""
    where: user_group_member_bool_exp
  ): user_group_member_aggregate!
  user_id: String!

  """An array relationship"""
  users_info_notifications(
    """distinct select on columns"""
    distinct_on: [users_info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_info_notifications_order_by!]

    """filter the rows returned"""
    where: users_info_notifications_bool_exp
  ): [users_info_notifications!]!

  """An aggregated array relationship"""
  users_info_notifications_aggregate(
    """distinct select on columns"""
    distinct_on: [users_info_notifications_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_info_notifications_order_by!]

    """filter the rows returned"""
    where: users_info_notifications_bool_exp
  ): users_info_notifications_aggregate!
}

"""
aggregated selection of "users"
"""
type users_aggregate {
  aggregate: users_aggregate_fields
  nodes: [users!]!
}

"""
aggregate fields of "users"
"""
type users_aggregate_fields {
  count(columns: [users_select_column!], distinct: Boolean): Int
  max: users_max_fields
  min: users_min_fields
}

"""
order by aggregate values of table "users"
"""
input users_aggregate_order_by {
  count: order_by
  max: users_max_order_by
  min: users_min_order_by
}

"""
input type for inserting array relation for remote table "users"
"""
input users_arr_rel_insert_input {
  data: [users_insert_input!]!
  on_conflict: users_on_conflict
}

"""
Boolean expression to filter rows from the table "users". All fields are combined with a logical 'AND'.
"""
input users_bool_exp {
  _and: [users_bool_exp]
  _not: users_bool_exp
  _or: [users_bool_exp]
  allow_notification: Boolean_comparison_exp
  avatar: String_comparison_exp
  birthday: date_comparison_exp
  class_members: class_members_bool_exp
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  device_token: String_comparison_exp
  email: String_comparison_exp
  email_verified: Boolean_comparison_exp
  facebook_id: String_comparison_exp
  first_name: String_comparison_exp
  first_name_phonetic: String_comparison_exp
  full_name_phonetic: String_comparison_exp
  gender: String_comparison_exp
  given_name: String_comparison_exp
  info_notifications: info_notifications_bool_exp
  is_tester: Boolean_comparison_exp
  last_login_date: timestamptz_comparison_exp
  last_name: String_comparison_exp
  last_name_phonetic: String_comparison_exp
  lesson_members: lesson_members_bool_exp
  name: String_comparison_exp
  parent: parents_bool_exp
  phone_number: String_comparison_exp
  phone_verified: Boolean_comparison_exp
  platform: String_comparison_exp
  promotions: promotions_bool_exp
  resource_path: String_comparison_exp
  school_admin: school_admins_bool_exp
  student: students_bool_exp
  student_parent: student_parents_bool_exp
  teacher_by_school_id: teacher_by_school_id_bool_exp
  teachers: teachers_bool_exp
  updated_at: timestamptz_comparison_exp
  user_access_paths: user_access_paths_bool_exp
  user_group: String_comparison_exp
  user_group_members: user_group_member_bool_exp
  user_id: String_comparison_exp
  users_info_notifications: users_info_notifications_bool_exp
}

"""
unique or primary key constraints on table "users"
"""
enum users_constraint {
  """unique or primary key constraint"""
  users_email_un

  """unique or primary key constraint"""
  users_fb_id_un

  """unique or primary key constraint"""
  users_phone_un

  """unique or primary key constraint"""
  users_pk
}

"""
columns and relationships of "users_info_notifications"
"""
type users_info_notifications {
  course_ids: _text
  created_at: timestamptz!
  current_grade: smallint
  deleted_at: timestamptz

  """An object relationship"""
  info_notification: info_notifications!
  is_individual: Boolean
  notification_id: String!
  parent_id: String
  qn_status: String
  qn_submitted_at: timestamptz
  resource_path: String!
  status: String!

  """An object relationship"""
  student: students
  student_id: String

  """An object relationship"""
  student_parent: student_parents
  updated_at: timestamptz!

  """An object relationship"""
  user: users!
  user_group: String
  user_id: String!
  user_notification_id: String!
}

"""
aggregated selection of "users_info_notifications"
"""
type users_info_notifications_aggregate {
  aggregate: users_info_notifications_aggregate_fields
  nodes: [users_info_notifications!]!
}

"""
aggregate fields of "users_info_notifications"
"""
type users_info_notifications_aggregate_fields {
  avg: users_info_notifications_avg_fields
  count(columns: [users_info_notifications_select_column!], distinct: Boolean): Int
  max: users_info_notifications_max_fields
  min: users_info_notifications_min_fields
  stddev: users_info_notifications_stddev_fields
  stddev_pop: users_info_notifications_stddev_pop_fields
  stddev_samp: users_info_notifications_stddev_samp_fields
  sum: users_info_notifications_sum_fields
  var_pop: users_info_notifications_var_pop_fields
  var_samp: users_info_notifications_var_samp_fields
  variance: users_info_notifications_variance_fields
}

"""
order by aggregate values of table "users_info_notifications"
"""
input users_info_notifications_aggregate_order_by {
  avg: users_info_notifications_avg_order_by
  count: order_by
  max: users_info_notifications_max_order_by
  min: users_info_notifications_min_order_by
  stddev: users_info_notifications_stddev_order_by
  stddev_pop: users_info_notifications_stddev_pop_order_by
  stddev_samp: users_info_notifications_stddev_samp_order_by
  sum: users_info_notifications_sum_order_by
  var_pop: users_info_notifications_var_pop_order_by
  var_samp: users_info_notifications_var_samp_order_by
  variance: users_info_notifications_variance_order_by
}

"""
input type for inserting array relation for remote table "users_info_notifications"
"""
input users_info_notifications_arr_rel_insert_input {
  data: [users_info_notifications_insert_input!]!
  on_conflict: users_info_notifications_on_conflict
}

"""aggregate avg on columns"""
type users_info_notifications_avg_fields {
  current_grade: Float
}

"""
order by avg() on columns of table "users_info_notifications"
"""
input users_info_notifications_avg_order_by {
  current_grade: order_by
}

"""
Boolean expression to filter rows from the table "users_info_notifications". All fields are combined with a logical 'AND'.
"""
input users_info_notifications_bool_exp {
  _and: [users_info_notifications_bool_exp]
  _not: users_info_notifications_bool_exp
  _or: [users_info_notifications_bool_exp]
  course_ids: _text_comparison_exp
  created_at: timestamptz_comparison_exp
  current_grade: smallint_comparison_exp
  deleted_at: timestamptz_comparison_exp
  info_notification: info_notifications_bool_exp
  is_individual: Boolean_comparison_exp
  notification_id: String_comparison_exp
  parent_id: String_comparison_exp
  qn_status: String_comparison_exp
  qn_submitted_at: timestamptz_comparison_exp
  resource_path: String_comparison_exp
  status: String_comparison_exp
  student: students_bool_exp
  student_id: String_comparison_exp
  student_parent: student_parents_bool_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
  user_group: String_comparison_exp
  user_id: String_comparison_exp
  user_notification_id: String_comparison_exp
}

"""
unique or primary key constraints on table "users_info_notifications"
"""
enum users_info_notifications_constraint {
  """unique or primary key constraint"""
  pk__users_info_notifications

  """unique or primary key constraint"""
  unique__user_id__notification_id
}

"""
input type for incrementing integer column in table "users_info_notifications"
"""
input users_info_notifications_inc_input {
  current_grade: smallint
}

"""
input type for inserting data into table "users_info_notifications"
"""
input users_info_notifications_insert_input {
  course_ids: _text
  created_at: timestamptz
  current_grade: smallint
  deleted_at: timestamptz
  info_notification: info_notifications_obj_rel_insert_input
  is_individual: Boolean
  notification_id: String
  parent_id: String
  qn_status: String
  qn_submitted_at: timestamptz
  resource_path: String
  status: String
  student: students_obj_rel_insert_input
  student_id: String
  student_parent: student_parents_obj_rel_insert_input
  updated_at: timestamptz
  user: users_obj_rel_insert_input
  user_group: String
  user_id: String
  user_notification_id: String
}

"""aggregate max on columns"""
type users_info_notifications_max_fields {
  created_at: timestamptz
  current_grade: smallint
  deleted_at: timestamptz
  notification_id: String
  parent_id: String
  qn_status: String
  qn_submitted_at: timestamptz
  resource_path: String
  status: String
  student_id: String
  updated_at: timestamptz
  user_group: String
  user_id: String
  user_notification_id: String
}

"""
order by max() on columns of table "users_info_notifications"
"""
input users_info_notifications_max_order_by {
  created_at: order_by
  current_grade: order_by
  deleted_at: order_by
  notification_id: order_by
  parent_id: order_by
  qn_status: order_by
  qn_submitted_at: order_by
  resource_path: order_by
  status: order_by
  student_id: order_by
  updated_at: order_by
  user_group: order_by
  user_id: order_by
  user_notification_id: order_by
}

"""aggregate min on columns"""
type users_info_notifications_min_fields {
  created_at: timestamptz
  current_grade: smallint
  deleted_at: timestamptz
  notification_id: String
  parent_id: String
  qn_status: String
  qn_submitted_at: timestamptz
  resource_path: String
  status: String
  student_id: String
  updated_at: timestamptz
  user_group: String
  user_id: String
  user_notification_id: String
}

"""
order by min() on columns of table "users_info_notifications"
"""
input users_info_notifications_min_order_by {
  created_at: order_by
  current_grade: order_by
  deleted_at: order_by
  notification_id: order_by
  parent_id: order_by
  qn_status: order_by
  qn_submitted_at: order_by
  resource_path: order_by
  status: order_by
  student_id: order_by
  updated_at: order_by
  user_group: order_by
  user_id: order_by
  user_notification_id: order_by
}

"""
response of any mutation on the table "users_info_notifications"
"""
type users_info_notifications_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [users_info_notifications!]!
}

"""
input type for inserting object relation for remote table "users_info_notifications"
"""
input users_info_notifications_obj_rel_insert_input {
  data: users_info_notifications_insert_input!
  on_conflict: users_info_notifications_on_conflict
}

"""
on conflict condition type for table "users_info_notifications"
"""
input users_info_notifications_on_conflict {
  constraint: users_info_notifications_constraint!
  update_columns: [users_info_notifications_update_column!]!
  where: users_info_notifications_bool_exp
}

"""
ordering options when selecting data from "users_info_notifications"
"""
input users_info_notifications_order_by {
  course_ids: order_by
  created_at: order_by
  current_grade: order_by
  deleted_at: order_by
  info_notification: info_notifications_order_by
  is_individual: order_by
  notification_id: order_by
  parent_id: order_by
  qn_status: order_by
  qn_submitted_at: order_by
  resource_path: order_by
  status: order_by
  student: students_order_by
  student_id: order_by
  student_parent: student_parents_order_by
  updated_at: order_by
  user: users_order_by
  user_group: order_by
  user_id: order_by
  user_notification_id: order_by
}

"""
primary key columns input for table: "users_info_notifications"
"""
input users_info_notifications_pk_columns_input {
  user_notification_id: String!
}

"""
select columns of table "users_info_notifications"
"""
enum users_info_notifications_select_column {
  """column name"""
  course_ids

  """column name"""
  created_at

  """column name"""
  current_grade

  """column name"""
  deleted_at

  """column name"""
  is_individual

  """column name"""
  notification_id

  """column name"""
  parent_id

  """column name"""
  qn_status

  """column name"""
  qn_submitted_at

  """column name"""
  resource_path

  """column name"""
  status

  """column name"""
  student_id

  """column name"""
  updated_at

  """column name"""
  user_group

  """column name"""
  user_id

  """column name"""
  user_notification_id
}

"""
input type for updating data in table "users_info_notifications"
"""
input users_info_notifications_set_input {
  course_ids: _text
  created_at: timestamptz
  current_grade: smallint
  deleted_at: timestamptz
  is_individual: Boolean
  notification_id: String
  parent_id: String
  qn_status: String
  qn_submitted_at: timestamptz
  resource_path: String
  status: String
  student_id: String
  updated_at: timestamptz
  user_group: String
  user_id: String
  user_notification_id: String
}

"""aggregate stddev on columns"""
type users_info_notifications_stddev_fields {
  current_grade: Float
}

"""
order by stddev() on columns of table "users_info_notifications"
"""
input users_info_notifications_stddev_order_by {
  current_grade: order_by
}

"""aggregate stddev_pop on columns"""
type users_info_notifications_stddev_pop_fields {
  current_grade: Float
}

"""
order by stddev_pop() on columns of table "users_info_notifications"
"""
input users_info_notifications_stddev_pop_order_by {
  current_grade: order_by
}

"""aggregate stddev_samp on columns"""
type users_info_notifications_stddev_samp_fields {
  current_grade: Float
}

"""
order by stddev_samp() on columns of table "users_info_notifications"
"""
input users_info_notifications_stddev_samp_order_by {
  current_grade: order_by
}

"""aggregate sum on columns"""
type users_info_notifications_sum_fields {
  current_grade: smallint
}

"""
order by sum() on columns of table "users_info_notifications"
"""
input users_info_notifications_sum_order_by {
  current_grade: order_by
}

"""
update columns of table "users_info_notifications"
"""
enum users_info_notifications_update_column {
  """column name"""
  course_ids

  """column name"""
  created_at

  """column name"""
  current_grade

  """column name"""
  deleted_at

  """column name"""
  is_individual

  """column name"""
  notification_id

  """column name"""
  parent_id

  """column name"""
  qn_status

  """column name"""
  qn_submitted_at

  """column name"""
  resource_path

  """column name"""
  status

  """column name"""
  student_id

  """column name"""
  updated_at

  """column name"""
  user_group

  """column name"""
  user_id

  """column name"""
  user_notification_id
}

"""aggregate var_pop on columns"""
type users_info_notifications_var_pop_fields {
  current_grade: Float
}

"""
order by var_pop() on columns of table "users_info_notifications"
"""
input users_info_notifications_var_pop_order_by {
  current_grade: order_by
}

"""aggregate var_samp on columns"""
type users_info_notifications_var_samp_fields {
  current_grade: Float
}

"""
order by var_samp() on columns of table "users_info_notifications"
"""
input users_info_notifications_var_samp_order_by {
  current_grade: order_by
}

"""aggregate variance on columns"""
type users_info_notifications_variance_fields {
  current_grade: Float
}

"""
order by variance() on columns of table "users_info_notifications"
"""
input users_info_notifications_variance_order_by {
  current_grade: order_by
}

"""
input type for inserting data into table "users"
"""
input users_insert_input {
  allow_notification: Boolean
  avatar: String
  birthday: date
  class_members: class_members_arr_rel_insert_input
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  device_token: String
  email: String
  email_verified: Boolean
  facebook_id: String
  first_name: String
  first_name_phonetic: String
  full_name_phonetic: String
  gender: String
  given_name: String
  info_notifications: info_notifications_arr_rel_insert_input
  is_tester: Boolean
  last_login_date: timestamptz
  last_name: String
  last_name_phonetic: String
  lesson_members: lesson_members_arr_rel_insert_input
  name: String
  parent: parents_obj_rel_insert_input
  phone_number: String
  phone_verified: Boolean
  platform: String
  promotions: promotions_arr_rel_insert_input
  resource_path: String
  school_admin: school_admins_obj_rel_insert_input
  student: students_obj_rel_insert_input
  student_parent: student_parents_obj_rel_insert_input
  teachers: teachers_arr_rel_insert_input
  updated_at: timestamptz
  user_access_paths: user_access_paths_arr_rel_insert_input
  user_group: String
  user_group_members: user_group_member_arr_rel_insert_input
  user_id: String
  users_info_notifications: users_info_notifications_arr_rel_insert_input
}

"""aggregate max on columns"""
type users_max_fields {
  avatar: String
  birthday: date
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  device_token: String
  email: String
  facebook_id: String
  first_name: String
  first_name_phonetic: String
  full_name_phonetic: String
  gender: String
  given_name: String
  last_login_date: timestamptz
  last_name: String
  last_name_phonetic: String
  name: String
  phone_number: String
  platform: String
  resource_path: String
  updated_at: timestamptz
  user_group: String
  user_id: String
}

"""
order by max() on columns of table "users"
"""
input users_max_order_by {
  avatar: order_by
  birthday: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  device_token: order_by
  email: order_by
  facebook_id: order_by
  first_name: order_by
  first_name_phonetic: order_by
  full_name_phonetic: order_by
  gender: order_by
  given_name: order_by
  last_login_date: order_by
  last_name: order_by
  last_name_phonetic: order_by
  name: order_by
  phone_number: order_by
  platform: order_by
  resource_path: order_by
  updated_at: order_by
  user_group: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type users_min_fields {
  avatar: String
  birthday: date
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  device_token: String
  email: String
  facebook_id: String
  first_name: String
  first_name_phonetic: String
  full_name_phonetic: String
  gender: String
  given_name: String
  last_login_date: timestamptz
  last_name: String
  last_name_phonetic: String
  name: String
  phone_number: String
  platform: String
  resource_path: String
  updated_at: timestamptz
  user_group: String
  user_id: String
}

"""
order by min() on columns of table "users"
"""
input users_min_order_by {
  avatar: order_by
  birthday: order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  device_token: order_by
  email: order_by
  facebook_id: order_by
  first_name: order_by
  first_name_phonetic: order_by
  full_name_phonetic: order_by
  gender: order_by
  given_name: order_by
  last_login_date: order_by
  last_name: order_by
  last_name_phonetic: order_by
  name: order_by
  phone_number: order_by
  platform: order_by
  resource_path: order_by
  updated_at: order_by
  user_group: order_by
  user_id: order_by
}

"""
response of any mutation on the table "users"
"""
type users_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [users!]!
}

"""
input type for inserting object relation for remote table "users"
"""
input users_obj_rel_insert_input {
  data: users_insert_input!
  on_conflict: users_on_conflict
}

"""
on conflict condition type for table "users"
"""
input users_on_conflict {
  constraint: users_constraint!
  update_columns: [users_update_column!]!
  where: users_bool_exp
}

"""
ordering options when selecting data from "users"
"""
input users_order_by {
  allow_notification: order_by
  avatar: order_by
  birthday: order_by
  class_members_aggregate: class_members_aggregate_order_by
  country: order_by
  created_at: order_by
  deleted_at: order_by
  device_token: order_by
  email: order_by
  email_verified: order_by
  facebook_id: order_by
  first_name: order_by
  first_name_phonetic: order_by
  full_name_phonetic: order_by
  gender: order_by
  given_name: order_by
  info_notifications_aggregate: info_notifications_aggregate_order_by
  is_tester: order_by
  last_login_date: order_by
  last_name: order_by
  last_name_phonetic: order_by
  lesson_members_aggregate: lesson_members_aggregate_order_by
  name: order_by
  parent: parents_order_by
  phone_number: order_by
  phone_verified: order_by
  platform: order_by
  promotions_aggregate: promotions_aggregate_order_by
  resource_path: order_by
  school_admin: school_admins_order_by
  student: students_order_by
  student_parent: student_parents_order_by
  teacher_by_school_id: teacher_by_school_id_order_by
  teachers_aggregate: teachers_aggregate_order_by
  updated_at: order_by
  user_access_paths_aggregate: user_access_paths_aggregate_order_by
  user_group: order_by
  user_group_members_aggregate: user_group_member_aggregate_order_by
  user_id: order_by
  users_info_notifications_aggregate: users_info_notifications_aggregate_order_by
}

"""
primary key columns input for table: "users"
"""
input users_pk_columns_input {
  user_id: String!
}

"""
select columns of table "users"
"""
enum users_select_column {
  """column name"""
  allow_notification

  """column name"""
  avatar

  """column name"""
  birthday

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  device_token

  """column name"""
  email

  """column name"""
  email_verified

  """column name"""
  facebook_id

  """column name"""
  first_name

  """column name"""
  first_name_phonetic

  """column name"""
  full_name_phonetic

  """column name"""
  gender

  """column name"""
  given_name

  """column name"""
  is_tester

  """column name"""
  last_login_date

  """column name"""
  last_name

  """column name"""
  last_name_phonetic

  """column name"""
  name

  """column name"""
  phone_number

  """column name"""
  phone_verified

  """column name"""
  platform

  """column name"""
  resource_path

  """column name"""
  updated_at

  """column name"""
  user_group

  """column name"""
  user_id
}

"""
input type for updating data in table "users"
"""
input users_set_input {
  allow_notification: Boolean
  avatar: String
  birthday: date
  country: String
  created_at: timestamptz
  deleted_at: timestamptz
  device_token: String
  email: String
  email_verified: Boolean
  facebook_id: String
  first_name: String
  first_name_phonetic: String
  full_name_phonetic: String
  gender: String
  given_name: String
  is_tester: Boolean
  last_login_date: timestamptz
  last_name: String
  last_name_phonetic: String
  name: String
  phone_number: String
  phone_verified: Boolean
  platform: String
  resource_path: String
  updated_at: timestamptz
  user_group: String
  user_id: String
}

"""
update columns of table "users"
"""
enum users_update_column {
  """column name"""
  allow_notification

  """column name"""
  avatar

  """column name"""
  birthday

  """column name"""
  country

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  device_token

  """column name"""
  email

  """column name"""
  email_verified

  """column name"""
  facebook_id

  """column name"""
  first_name

  """column name"""
  first_name_phonetic

  """column name"""
  full_name_phonetic

  """column name"""
  gender

  """column name"""
  given_name

  """column name"""
  is_tester

  """column name"""
  last_login_date

  """column name"""
  last_name

  """column name"""
  last_name_phonetic

  """column name"""
  name

  """column name"""
  phone_number

  """column name"""
  phone_verified

  """column name"""
  platform

  """column name"""
  resource_path

  """column name"""
  updated_at

  """column name"""
  user_group

  """column name"""
  user_id
}
