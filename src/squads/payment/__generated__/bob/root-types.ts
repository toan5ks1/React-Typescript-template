export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  _int4: any;
  _text: any;
  date: string;
  frequency: any;
  jsonb: any;
  numeric: number;
  point: { type: string; coordinates: number[] };
  smallint: number;
  timestamptz: any;
};

/** expression to compare columns of type Boolean. All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Boolean']>;
  _gt?: InputMaybe<Scalars['Boolean']>;
  _gte?: InputMaybe<Scalars['Boolean']>;
  _in?: InputMaybe<Array<Scalars['Boolean']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['Boolean']>;
  _lte?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<Scalars['Boolean']>;
  _nin?: InputMaybe<Array<Scalars['Boolean']>>;
};

/** expression to compare columns of type Int. All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Int']>;
  _gt?: InputMaybe<Scalars['Int']>;
  _gte?: InputMaybe<Scalars['Int']>;
  _in?: InputMaybe<Array<Scalars['Int']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['Int']>;
  _lte?: InputMaybe<Scalars['Int']>;
  _neq?: InputMaybe<Scalars['Int']>;
  _nin?: InputMaybe<Array<Scalars['Int']>>;
};

/** expression to compare columns of type String. All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['String']>;
  _gt?: InputMaybe<Scalars['String']>;
  _gte?: InputMaybe<Scalars['String']>;
  _ilike?: InputMaybe<Scalars['String']>;
  _in?: InputMaybe<Array<Scalars['String']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _like?: InputMaybe<Scalars['String']>;
  _lt?: InputMaybe<Scalars['String']>;
  _lte?: InputMaybe<Scalars['String']>;
  _neq?: InputMaybe<Scalars['String']>;
  _nilike?: InputMaybe<Scalars['String']>;
  _nin?: InputMaybe<Array<Scalars['String']>>;
  _nlike?: InputMaybe<Scalars['String']>;
  _nsimilar?: InputMaybe<Scalars['String']>;
  _similar?: InputMaybe<Scalars['String']>;
};

/** expression to compare columns of type _int4. All fields are combined with logical 'AND'. */
export type _Int4_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['_int4']>;
  _gt?: InputMaybe<Scalars['_int4']>;
  _gte?: InputMaybe<Scalars['_int4']>;
  _in?: InputMaybe<Array<Scalars['_int4']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['_int4']>;
  _lte?: InputMaybe<Scalars['_int4']>;
  _neq?: InputMaybe<Scalars['_int4']>;
  _nin?: InputMaybe<Array<Scalars['_int4']>>;
};

/** expression to compare columns of type _text. All fields are combined with logical 'AND'. */
export type _Text_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['_text']>;
  _gt?: InputMaybe<Scalars['_text']>;
  _gte?: InputMaybe<Scalars['_text']>;
  _in?: InputMaybe<Array<Scalars['_text']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['_text']>;
  _lte?: InputMaybe<Scalars['_text']>;
  _neq?: InputMaybe<Scalars['_text']>;
  _nin?: InputMaybe<Array<Scalars['_text']>>;
};

/** columns and relationships of "assignments" */
export type Assignments = {
  assigned_by: Scalars['String'];
  assignment_id: Scalars['String'];
  assignment_type?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['Int']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date: Scalars['timestamptz'];
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date: Scalars['timestamptz'];
  /** An object relationship */
  topic: Topics;
  topic_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "assignments" */
export type Assignments_Aggregate = {
  aggregate?: Maybe<Assignments_Aggregate_Fields>;
  nodes: Array<Assignments>;
};

/** aggregate fields of "assignments" */
export type Assignments_Aggregate_Fields = {
  avg?: Maybe<Assignments_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Assignments_Max_Fields>;
  min?: Maybe<Assignments_Min_Fields>;
  stddev?: Maybe<Assignments_Stddev_Fields>;
  stddev_pop?: Maybe<Assignments_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Assignments_Stddev_Samp_Fields>;
  sum?: Maybe<Assignments_Sum_Fields>;
  var_pop?: Maybe<Assignments_Var_Pop_Fields>;
  var_samp?: Maybe<Assignments_Var_Samp_Fields>;
  variance?: Maybe<Assignments_Variance_Fields>;
};


/** aggregate fields of "assignments" */
export type Assignments_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Assignments_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "assignments" */
export type Assignments_Aggregate_Order_By = {
  avg?: InputMaybe<Assignments_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Assignments_Max_Order_By>;
  min?: InputMaybe<Assignments_Min_Order_By>;
  stddev?: InputMaybe<Assignments_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Assignments_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Assignments_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Assignments_Sum_Order_By>;
  var_pop?: InputMaybe<Assignments_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Assignments_Var_Samp_Order_By>;
  variance?: InputMaybe<Assignments_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "assignments" */
export type Assignments_Arr_Rel_Insert_Input = {
  data: Array<Assignments_Insert_Input>;
  on_conflict?: InputMaybe<Assignments_On_Conflict>;
};

/** aggregate avg on columns */
export type Assignments_Avg_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "assignments" */
export type Assignments_Avg_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "assignments". All fields are combined with a logical 'AND'. */
export type Assignments_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Assignments_Bool_Exp>>>;
  _not?: InputMaybe<Assignments_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Assignments_Bool_Exp>>>;
  assigned_by?: InputMaybe<String_Comparison_Exp>;
  assignment_id?: InputMaybe<String_Comparison_Exp>;
  assignment_type?: InputMaybe<String_Comparison_Exp>;
  class_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  end_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  preset_study_plan_id?: InputMaybe<String_Comparison_Exp>;
  preset_study_plan_weekly_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  start_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  topic?: InputMaybe<Topics_Bool_Exp>;
  topic_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "assignments" */
export enum Assignments_Constraint {
  /** unique or primary key constraint */
  AssignmentsPk = 'assignments_pk'
}

/** input type for incrementing integer column in table "assignments" */
export type Assignments_Inc_Input = {
  class_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "assignments" */
export type Assignments_Insert_Input = {
  assigned_by?: InputMaybe<Scalars['String']>;
  assignment_id?: InputMaybe<Scalars['String']>;
  assignment_type?: InputMaybe<Scalars['String']>;
  class_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  end_date?: InputMaybe<Scalars['timestamptz']>;
  preset_study_plan_id?: InputMaybe<Scalars['String']>;
  preset_study_plan_weekly_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['timestamptz']>;
  topic?: InputMaybe<Topics_Obj_Rel_Insert_Input>;
  topic_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Assignments_Max_Fields = {
  assigned_by?: Maybe<Scalars['String']>;
  assignment_id?: Maybe<Scalars['String']>;
  assignment_type?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "assignments" */
export type Assignments_Max_Order_By = {
  assigned_by?: InputMaybe<Order_By>;
  assignment_id?: InputMaybe<Order_By>;
  assignment_type?: InputMaybe<Order_By>;
  class_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  preset_study_plan_id?: InputMaybe<Order_By>;
  preset_study_plan_weekly_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  topic_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Assignments_Min_Fields = {
  assigned_by?: Maybe<Scalars['String']>;
  assignment_id?: Maybe<Scalars['String']>;
  assignment_type?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "assignments" */
export type Assignments_Min_Order_By = {
  assigned_by?: InputMaybe<Order_By>;
  assignment_id?: InputMaybe<Order_By>;
  assignment_type?: InputMaybe<Order_By>;
  class_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  preset_study_plan_id?: InputMaybe<Order_By>;
  preset_study_plan_weekly_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  topic_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "assignments" */
export type Assignments_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Assignments>;
};

/** input type for inserting object relation for remote table "assignments" */
export type Assignments_Obj_Rel_Insert_Input = {
  data: Assignments_Insert_Input;
  on_conflict?: InputMaybe<Assignments_On_Conflict>;
};

/** on conflict condition type for table "assignments" */
export type Assignments_On_Conflict = {
  constraint: Assignments_Constraint;
  update_columns: Array<Assignments_Update_Column>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};

/** ordering options when selecting data from "assignments" */
export type Assignments_Order_By = {
  assigned_by?: InputMaybe<Order_By>;
  assignment_id?: InputMaybe<Order_By>;
  assignment_type?: InputMaybe<Order_By>;
  class_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  preset_study_plan_id?: InputMaybe<Order_By>;
  preset_study_plan_weekly_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  topic?: InputMaybe<Topics_Order_By>;
  topic_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "assignments" */
export type Assignments_Pk_Columns_Input = {
  assignment_id: Scalars['String'];
};

/** select columns of table "assignments" */
export enum Assignments_Select_Column {
  /** column name */
  AssignedBy = 'assigned_by',
  /** column name */
  AssignmentId = 'assignment_id',
  /** column name */
  AssignmentType = 'assignment_type',
  /** column name */
  ClassId = 'class_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  PresetStudyPlanWeeklyId = 'preset_study_plan_weekly_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "assignments" */
export type Assignments_Set_Input = {
  assigned_by?: InputMaybe<Scalars['String']>;
  assignment_id?: InputMaybe<Scalars['String']>;
  assignment_type?: InputMaybe<Scalars['String']>;
  class_id?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  end_date?: InputMaybe<Scalars['timestamptz']>;
  preset_study_plan_id?: InputMaybe<Scalars['String']>;
  preset_study_plan_weekly_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['timestamptz']>;
  topic_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Assignments_Stddev_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "assignments" */
export type Assignments_Stddev_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Assignments_Stddev_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "assignments" */
export type Assignments_Stddev_Pop_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Assignments_Stddev_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "assignments" */
export type Assignments_Stddev_Samp_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Assignments_Sum_Fields = {
  class_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "assignments" */
export type Assignments_Sum_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** update columns of table "assignments" */
export enum Assignments_Update_Column {
  /** column name */
  AssignedBy = 'assigned_by',
  /** column name */
  AssignmentId = 'assignment_id',
  /** column name */
  AssignmentType = 'assignment_type',
  /** column name */
  ClassId = 'class_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  PresetStudyPlanWeeklyId = 'preset_study_plan_weekly_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Assignments_Var_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "assignments" */
export type Assignments_Var_Pop_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Assignments_Var_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "assignments" */
export type Assignments_Var_Samp_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Assignments_Variance_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "assignments" */
export type Assignments_Variance_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "bank" */
export type Bank = {
  bank_code: Scalars['String'];
  bank_id: Scalars['String'];
  bank_name: Scalars['String'];
  bank_name_phonetic: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_archived: Scalars['Boolean'];
  resource_path: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "bank" */
export type Bank_Aggregate = {
  aggregate?: Maybe<Bank_Aggregate_Fields>;
  nodes: Array<Bank>;
};

/** aggregate fields of "bank" */
export type Bank_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Bank_Max_Fields>;
  min?: Maybe<Bank_Min_Fields>;
};


/** aggregate fields of "bank" */
export type Bank_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Bank_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "bank" */
export type Bank_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Bank_Max_Order_By>;
  min?: InputMaybe<Bank_Min_Order_By>;
};

/** input type for inserting array relation for remote table "bank" */
export type Bank_Arr_Rel_Insert_Input = {
  data: Array<Bank_Insert_Input>;
  on_conflict?: InputMaybe<Bank_On_Conflict>;
};

/** Boolean expression to filter rows from the table "bank". All fields are combined with a logical 'AND'. */
export type Bank_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Bank_Bool_Exp>>>;
  _not?: InputMaybe<Bank_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Bank_Bool_Exp>>>;
  bank_code?: InputMaybe<String_Comparison_Exp>;
  bank_id?: InputMaybe<String_Comparison_Exp>;
  bank_name?: InputMaybe<String_Comparison_Exp>;
  bank_name_phonetic?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  is_archived?: InputMaybe<Boolean_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** columns and relationships of "bank_branch" */
export type Bank_Branch = {
  bank_branch_code: Scalars['String'];
  bank_branch_id: Scalars['String'];
  bank_branch_name: Scalars['String'];
  bank_branch_phonetic_name: Scalars['String'];
  bank_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_archived: Scalars['Boolean'];
  resource_path: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "bank_branch" */
export type Bank_Branch_Aggregate = {
  aggregate?: Maybe<Bank_Branch_Aggregate_Fields>;
  nodes: Array<Bank_Branch>;
};

/** aggregate fields of "bank_branch" */
export type Bank_Branch_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Bank_Branch_Max_Fields>;
  min?: Maybe<Bank_Branch_Min_Fields>;
};


/** aggregate fields of "bank_branch" */
export type Bank_Branch_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Bank_Branch_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "bank_branch" */
export type Bank_Branch_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Bank_Branch_Max_Order_By>;
  min?: InputMaybe<Bank_Branch_Min_Order_By>;
};

/** input type for inserting array relation for remote table "bank_branch" */
export type Bank_Branch_Arr_Rel_Insert_Input = {
  data: Array<Bank_Branch_Insert_Input>;
  on_conflict?: InputMaybe<Bank_Branch_On_Conflict>;
};

/** Boolean expression to filter rows from the table "bank_branch". All fields are combined with a logical 'AND'. */
export type Bank_Branch_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Bank_Branch_Bool_Exp>>>;
  _not?: InputMaybe<Bank_Branch_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Bank_Branch_Bool_Exp>>>;
  bank_branch_code?: InputMaybe<String_Comparison_Exp>;
  bank_branch_id?: InputMaybe<String_Comparison_Exp>;
  bank_branch_name?: InputMaybe<String_Comparison_Exp>;
  bank_branch_phonetic_name?: InputMaybe<String_Comparison_Exp>;
  bank_id?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  is_archived?: InputMaybe<Boolean_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "bank_branch" */
export enum Bank_Branch_Constraint {
  /** unique or primary key constraint */
  BankBranchPk = 'bank_branch__pk'
}

/** input type for inserting data into table "bank_branch" */
export type Bank_Branch_Insert_Input = {
  bank_branch_code?: InputMaybe<Scalars['String']>;
  bank_branch_id?: InputMaybe<Scalars['String']>;
  bank_branch_name?: InputMaybe<Scalars['String']>;
  bank_branch_phonetic_name?: InputMaybe<Scalars['String']>;
  bank_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_archived?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Bank_Branch_Max_Fields = {
  bank_branch_code?: Maybe<Scalars['String']>;
  bank_branch_id?: Maybe<Scalars['String']>;
  bank_branch_name?: Maybe<Scalars['String']>;
  bank_branch_phonetic_name?: Maybe<Scalars['String']>;
  bank_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "bank_branch" */
export type Bank_Branch_Max_Order_By = {
  bank_branch_code?: InputMaybe<Order_By>;
  bank_branch_id?: InputMaybe<Order_By>;
  bank_branch_name?: InputMaybe<Order_By>;
  bank_branch_phonetic_name?: InputMaybe<Order_By>;
  bank_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Bank_Branch_Min_Fields = {
  bank_branch_code?: Maybe<Scalars['String']>;
  bank_branch_id?: Maybe<Scalars['String']>;
  bank_branch_name?: Maybe<Scalars['String']>;
  bank_branch_phonetic_name?: Maybe<Scalars['String']>;
  bank_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "bank_branch" */
export type Bank_Branch_Min_Order_By = {
  bank_branch_code?: InputMaybe<Order_By>;
  bank_branch_id?: InputMaybe<Order_By>;
  bank_branch_name?: InputMaybe<Order_By>;
  bank_branch_phonetic_name?: InputMaybe<Order_By>;
  bank_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "bank_branch" */
export type Bank_Branch_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Bank_Branch>;
};

/** input type for inserting object relation for remote table "bank_branch" */
export type Bank_Branch_Obj_Rel_Insert_Input = {
  data: Bank_Branch_Insert_Input;
  on_conflict?: InputMaybe<Bank_Branch_On_Conflict>;
};

/** on conflict condition type for table "bank_branch" */
export type Bank_Branch_On_Conflict = {
  constraint: Bank_Branch_Constraint;
  update_columns: Array<Bank_Branch_Update_Column>;
  where?: InputMaybe<Bank_Branch_Bool_Exp>;
};

/** ordering options when selecting data from "bank_branch" */
export type Bank_Branch_Order_By = {
  bank_branch_code?: InputMaybe<Order_By>;
  bank_branch_id?: InputMaybe<Order_By>;
  bank_branch_name?: InputMaybe<Order_By>;
  bank_branch_phonetic_name?: InputMaybe<Order_By>;
  bank_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  is_archived?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "bank_branch" */
export type Bank_Branch_Pk_Columns_Input = {
  bank_branch_id: Scalars['String'];
};

/** select columns of table "bank_branch" */
export enum Bank_Branch_Select_Column {
  /** column name */
  BankBranchCode = 'bank_branch_code',
  /** column name */
  BankBranchId = 'bank_branch_id',
  /** column name */
  BankBranchName = 'bank_branch_name',
  /** column name */
  BankBranchPhoneticName = 'bank_branch_phonetic_name',
  /** column name */
  BankId = 'bank_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "bank_branch" */
export type Bank_Branch_Set_Input = {
  bank_branch_code?: InputMaybe<Scalars['String']>;
  bank_branch_id?: InputMaybe<Scalars['String']>;
  bank_branch_name?: InputMaybe<Scalars['String']>;
  bank_branch_phonetic_name?: InputMaybe<Scalars['String']>;
  bank_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_archived?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "bank_branch" */
export enum Bank_Branch_Update_Column {
  /** column name */
  BankBranchCode = 'bank_branch_code',
  /** column name */
  BankBranchId = 'bank_branch_id',
  /** column name */
  BankBranchName = 'bank_branch_name',
  /** column name */
  BankBranchPhoneticName = 'bank_branch_phonetic_name',
  /** column name */
  BankId = 'bank_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** unique or primary key constraints on table "bank" */
export enum Bank_Constraint {
  /** unique or primary key constraint */
  BankBankCodeUnique = 'bank__bank_code__unique',
  /** unique or primary key constraint */
  BankPk = 'bank__pk'
}

/** input type for inserting data into table "bank" */
export type Bank_Insert_Input = {
  bank_code?: InputMaybe<Scalars['String']>;
  bank_id?: InputMaybe<Scalars['String']>;
  bank_name?: InputMaybe<Scalars['String']>;
  bank_name_phonetic?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_archived?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Bank_Max_Fields = {
  bank_code?: Maybe<Scalars['String']>;
  bank_id?: Maybe<Scalars['String']>;
  bank_name?: Maybe<Scalars['String']>;
  bank_name_phonetic?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "bank" */
export type Bank_Max_Order_By = {
  bank_code?: InputMaybe<Order_By>;
  bank_id?: InputMaybe<Order_By>;
  bank_name?: InputMaybe<Order_By>;
  bank_name_phonetic?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Bank_Min_Fields = {
  bank_code?: Maybe<Scalars['String']>;
  bank_id?: Maybe<Scalars['String']>;
  bank_name?: Maybe<Scalars['String']>;
  bank_name_phonetic?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "bank" */
export type Bank_Min_Order_By = {
  bank_code?: InputMaybe<Order_By>;
  bank_id?: InputMaybe<Order_By>;
  bank_name?: InputMaybe<Order_By>;
  bank_name_phonetic?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "bank" */
export type Bank_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Bank>;
};

/** input type for inserting object relation for remote table "bank" */
export type Bank_Obj_Rel_Insert_Input = {
  data: Bank_Insert_Input;
  on_conflict?: InputMaybe<Bank_On_Conflict>;
};

/** on conflict condition type for table "bank" */
export type Bank_On_Conflict = {
  constraint: Bank_Constraint;
  update_columns: Array<Bank_Update_Column>;
  where?: InputMaybe<Bank_Bool_Exp>;
};

/** ordering options when selecting data from "bank" */
export type Bank_Order_By = {
  bank_code?: InputMaybe<Order_By>;
  bank_id?: InputMaybe<Order_By>;
  bank_name?: InputMaybe<Order_By>;
  bank_name_phonetic?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  is_archived?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "bank" */
export type Bank_Pk_Columns_Input = {
  bank_id: Scalars['String'];
};

/** select columns of table "bank" */
export enum Bank_Select_Column {
  /** column name */
  BankCode = 'bank_code',
  /** column name */
  BankId = 'bank_id',
  /** column name */
  BankName = 'bank_name',
  /** column name */
  BankNamePhonetic = 'bank_name_phonetic',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "bank" */
export type Bank_Set_Input = {
  bank_code?: InputMaybe<Scalars['String']>;
  bank_id?: InputMaybe<Scalars['String']>;
  bank_name?: InputMaybe<Scalars['String']>;
  bank_name_phonetic?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_archived?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "bank" */
export enum Bank_Update_Column {
  /** column name */
  BankCode = 'bank_code',
  /** column name */
  BankId = 'bank_id',
  /** column name */
  BankName = 'bank_name',
  /** column name */
  BankNamePhonetic = 'bank_name_phonetic',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "books" */
export type Books = {
  /** An array relationship */
  book_chapters: Array<Books_Chapters>;
  /** An aggregated array relationship */
  book_chapters_aggregate: Books_Chapters_Aggregate;
  book_id: Scalars['String'];
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  /** An array relationship */
  course_books: Array<Courses_Books>;
  /** An aggregated array relationship */
  course_books_aggregate: Courses_Books_Aggregate;
  created_at: Scalars['timestamptz'];
  current_chapter_display_order: Scalars['Int'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  name: Scalars['String'];
  resource_path: Scalars['String'];
  /** An object relationship */
  school: Schools;
  school_id: Scalars['Int'];
  subject?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "books" */
export type BooksBook_ChaptersArgs = {
  distinct_on?: InputMaybe<Array<Books_Chapters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Books_Chapters_Order_By>>;
  where?: InputMaybe<Books_Chapters_Bool_Exp>;
};


/** columns and relationships of "books" */
export type BooksBook_Chapters_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Books_Chapters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Books_Chapters_Order_By>>;
  where?: InputMaybe<Books_Chapters_Bool_Exp>;
};


/** columns and relationships of "books" */
export type BooksCourse_BooksArgs = {
  distinct_on?: InputMaybe<Array<Courses_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Books_Order_By>>;
  where?: InputMaybe<Courses_Books_Bool_Exp>;
};


/** columns and relationships of "books" */
export type BooksCourse_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Courses_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Books_Order_By>>;
  where?: InputMaybe<Courses_Books_Bool_Exp>;
};

/** aggregated selection of "books" */
export type Books_Aggregate = {
  aggregate?: Maybe<Books_Aggregate_Fields>;
  nodes: Array<Books>;
};

/** aggregate fields of "books" */
export type Books_Aggregate_Fields = {
  avg?: Maybe<Books_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Books_Max_Fields>;
  min?: Maybe<Books_Min_Fields>;
  stddev?: Maybe<Books_Stddev_Fields>;
  stddev_pop?: Maybe<Books_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Books_Stddev_Samp_Fields>;
  sum?: Maybe<Books_Sum_Fields>;
  var_pop?: Maybe<Books_Var_Pop_Fields>;
  var_samp?: Maybe<Books_Var_Samp_Fields>;
  variance?: Maybe<Books_Variance_Fields>;
};


/** aggregate fields of "books" */
export type Books_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Books_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "books" */
export type Books_Aggregate_Order_By = {
  avg?: InputMaybe<Books_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Books_Max_Order_By>;
  min?: InputMaybe<Books_Min_Order_By>;
  stddev?: InputMaybe<Books_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Books_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Books_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Books_Sum_Order_By>;
  var_pop?: InputMaybe<Books_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Books_Var_Samp_Order_By>;
  variance?: InputMaybe<Books_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "books" */
export type Books_Arr_Rel_Insert_Input = {
  data: Array<Books_Insert_Input>;
  on_conflict?: InputMaybe<Books_On_Conflict>;
};

/** aggregate avg on columns */
export type Books_Avg_Fields = {
  current_chapter_display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "books" */
export type Books_Avg_Order_By = {
  current_chapter_display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "books". All fields are combined with a logical 'AND'. */
export type Books_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Books_Bool_Exp>>>;
  _not?: InputMaybe<Books_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Books_Bool_Exp>>>;
  book_chapters?: InputMaybe<Books_Chapters_Bool_Exp>;
  book_id?: InputMaybe<String_Comparison_Exp>;
  copied_from?: InputMaybe<String_Comparison_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  course_books?: InputMaybe<Courses_Books_Bool_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  current_chapter_display_order?: InputMaybe<Int_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  grade?: InputMaybe<Smallint_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school?: InputMaybe<Schools_Bool_Exp>;
  school_id?: InputMaybe<Int_Comparison_Exp>;
  subject?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** columns and relationships of "books_chapters" */
export type Books_Chapters = {
  /** An object relationship */
  book?: Maybe<Books>;
  book_id: Scalars['String'];
  /** An object relationship */
  chapter?: Maybe<Chapters>;
  chapter_id: Scalars['String'];
  /** An object relationship */
  course_book?: Maybe<Courses_Books>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "books_chapters" */
export type Books_Chapters_Aggregate = {
  aggregate?: Maybe<Books_Chapters_Aggregate_Fields>;
  nodes: Array<Books_Chapters>;
};

/** aggregate fields of "books_chapters" */
export type Books_Chapters_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Books_Chapters_Max_Fields>;
  min?: Maybe<Books_Chapters_Min_Fields>;
};


/** aggregate fields of "books_chapters" */
export type Books_Chapters_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Books_Chapters_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "books_chapters" */
export type Books_Chapters_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Books_Chapters_Max_Order_By>;
  min?: InputMaybe<Books_Chapters_Min_Order_By>;
};

/** input type for inserting array relation for remote table "books_chapters" */
export type Books_Chapters_Arr_Rel_Insert_Input = {
  data: Array<Books_Chapters_Insert_Input>;
  on_conflict?: InputMaybe<Books_Chapters_On_Conflict>;
};

/** Boolean expression to filter rows from the table "books_chapters". All fields are combined with a logical 'AND'. */
export type Books_Chapters_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Books_Chapters_Bool_Exp>>>;
  _not?: InputMaybe<Books_Chapters_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Books_Chapters_Bool_Exp>>>;
  book?: InputMaybe<Books_Bool_Exp>;
  book_id?: InputMaybe<String_Comparison_Exp>;
  chapter?: InputMaybe<Chapters_Bool_Exp>;
  chapter_id?: InputMaybe<String_Comparison_Exp>;
  course_book?: InputMaybe<Courses_Books_Bool_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "books_chapters" */
export enum Books_Chapters_Constraint {
  /** unique or primary key constraint */
  BooksChaptersPk = 'books_chapters_pk'
}

/** input type for inserting data into table "books_chapters" */
export type Books_Chapters_Insert_Input = {
  book?: InputMaybe<Books_Obj_Rel_Insert_Input>;
  book_id?: InputMaybe<Scalars['String']>;
  chapter?: InputMaybe<Chapters_Obj_Rel_Insert_Input>;
  chapter_id?: InputMaybe<Scalars['String']>;
  course_book?: InputMaybe<Courses_Books_Obj_Rel_Insert_Input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Books_Chapters_Max_Fields = {
  book_id?: Maybe<Scalars['String']>;
  chapter_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "books_chapters" */
export type Books_Chapters_Max_Order_By = {
  book_id?: InputMaybe<Order_By>;
  chapter_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Books_Chapters_Min_Fields = {
  book_id?: Maybe<Scalars['String']>;
  chapter_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "books_chapters" */
export type Books_Chapters_Min_Order_By = {
  book_id?: InputMaybe<Order_By>;
  chapter_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "books_chapters" */
export type Books_Chapters_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Books_Chapters>;
};

/** input type for inserting object relation for remote table "books_chapters" */
export type Books_Chapters_Obj_Rel_Insert_Input = {
  data: Books_Chapters_Insert_Input;
  on_conflict?: InputMaybe<Books_Chapters_On_Conflict>;
};

/** on conflict condition type for table "books_chapters" */
export type Books_Chapters_On_Conflict = {
  constraint: Books_Chapters_Constraint;
  update_columns: Array<Books_Chapters_Update_Column>;
  where?: InputMaybe<Books_Chapters_Bool_Exp>;
};

/** ordering options when selecting data from "books_chapters" */
export type Books_Chapters_Order_By = {
  book?: InputMaybe<Books_Order_By>;
  book_id?: InputMaybe<Order_By>;
  chapter?: InputMaybe<Chapters_Order_By>;
  chapter_id?: InputMaybe<Order_By>;
  course_book?: InputMaybe<Courses_Books_Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "books_chapters" */
export type Books_Chapters_Pk_Columns_Input = {
  book_id: Scalars['String'];
  chapter_id: Scalars['String'];
};

/** select columns of table "books_chapters" */
export enum Books_Chapters_Select_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  ChapterId = 'chapter_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "books_chapters" */
export type Books_Chapters_Set_Input = {
  book_id?: InputMaybe<Scalars['String']>;
  chapter_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "books_chapters" */
export enum Books_Chapters_Update_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  ChapterId = 'chapter_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** unique or primary key constraints on table "books" */
export enum Books_Constraint {
  /** unique or primary key constraint */
  BooksPk = 'books_pk'
}

/** input type for incrementing integer column in table "books" */
export type Books_Inc_Input = {
  current_chapter_display_order?: InputMaybe<Scalars['Int']>;
  grade?: InputMaybe<Scalars['smallint']>;
  school_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "books" */
export type Books_Insert_Input = {
  book_chapters?: InputMaybe<Books_Chapters_Arr_Rel_Insert_Input>;
  book_id?: InputMaybe<Scalars['String']>;
  copied_from?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  course_books?: InputMaybe<Courses_Books_Arr_Rel_Insert_Input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  current_chapter_display_order?: InputMaybe<Scalars['Int']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  grade?: InputMaybe<Scalars['smallint']>;
  name?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school?: InputMaybe<Schools_Obj_Rel_Insert_Input>;
  school_id?: InputMaybe<Scalars['Int']>;
  subject?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Books_Max_Fields = {
  book_id?: Maybe<Scalars['String']>;
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_chapter_display_order?: Maybe<Scalars['Int']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "books" */
export type Books_Max_Order_By = {
  book_id?: InputMaybe<Order_By>;
  copied_from?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_chapter_display_order?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Books_Min_Fields = {
  book_id?: Maybe<Scalars['String']>;
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_chapter_display_order?: Maybe<Scalars['Int']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "books" */
export type Books_Min_Order_By = {
  book_id?: InputMaybe<Order_By>;
  copied_from?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_chapter_display_order?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "books" */
export type Books_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Books>;
};

/** input type for inserting object relation for remote table "books" */
export type Books_Obj_Rel_Insert_Input = {
  data: Books_Insert_Input;
  on_conflict?: InputMaybe<Books_On_Conflict>;
};

/** on conflict condition type for table "books" */
export type Books_On_Conflict = {
  constraint: Books_Constraint;
  update_columns: Array<Books_Update_Column>;
  where?: InputMaybe<Books_Bool_Exp>;
};

/** ordering options when selecting data from "books" */
export type Books_Order_By = {
  book_chapters_aggregate?: InputMaybe<Books_Chapters_Aggregate_Order_By>;
  book_id?: InputMaybe<Order_By>;
  copied_from?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  course_books_aggregate?: InputMaybe<Courses_Books_Aggregate_Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_chapter_display_order?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school?: InputMaybe<Schools_Order_By>;
  school_id?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "books" */
export type Books_Pk_Columns_Input = {
  book_id: Scalars['String'];
};

/** select columns of table "books" */
export enum Books_Select_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  CopiedFrom = 'copied_from',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentChapterDisplayOrder = 'current_chapter_display_order',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Grade = 'grade',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "books" */
export type Books_Set_Input = {
  book_id?: InputMaybe<Scalars['String']>;
  copied_from?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  current_chapter_display_order?: InputMaybe<Scalars['Int']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  grade?: InputMaybe<Scalars['smallint']>;
  name?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['Int']>;
  subject?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Books_Stddev_Fields = {
  current_chapter_display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "books" */
export type Books_Stddev_Order_By = {
  current_chapter_display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Books_Stddev_Pop_Fields = {
  current_chapter_display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "books" */
export type Books_Stddev_Pop_Order_By = {
  current_chapter_display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Books_Stddev_Samp_Fields = {
  current_chapter_display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "books" */
export type Books_Stddev_Samp_Order_By = {
  current_chapter_display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Books_Sum_Fields = {
  current_chapter_display_order?: Maybe<Scalars['Int']>;
  grade?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "books" */
export type Books_Sum_Order_By = {
  current_chapter_display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** update columns of table "books" */
export enum Books_Update_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  CopiedFrom = 'copied_from',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentChapterDisplayOrder = 'current_chapter_display_order',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Grade = 'grade',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Books_Var_Pop_Fields = {
  current_chapter_display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "books" */
export type Books_Var_Pop_Order_By = {
  current_chapter_display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Books_Var_Samp_Fields = {
  current_chapter_display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "books" */
export type Books_Var_Samp_Order_By = {
  current_chapter_display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Books_Variance_Fields = {
  current_chapter_display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "books" */
export type Books_Variance_Order_By = {
  current_chapter_display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "chapters" */
export type Chapters = {
  /** An array relationship */
  book_chapters: Array<Books_Chapters>;
  /** An aggregated array relationship */
  book_chapters_aggregate: Books_Chapters_Aggregate;
  chapter_id: Scalars['String'];
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  current_topic_display_order?: Maybe<Scalars['Int']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  name: Scalars['String'];
  resource_path: Scalars['String'];
  /** An object relationship */
  school: Schools;
  school_id: Scalars['Int'];
  subject?: Maybe<Scalars['String']>;
  /** An array relationship */
  topics: Array<Topics>;
  /** An aggregated array relationship */
  topics_aggregate: Topics_Aggregate;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "chapters" */
export type ChaptersBook_ChaptersArgs = {
  distinct_on?: InputMaybe<Array<Books_Chapters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Books_Chapters_Order_By>>;
  where?: InputMaybe<Books_Chapters_Bool_Exp>;
};


/** columns and relationships of "chapters" */
export type ChaptersBook_Chapters_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Books_Chapters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Books_Chapters_Order_By>>;
  where?: InputMaybe<Books_Chapters_Bool_Exp>;
};


/** columns and relationships of "chapters" */
export type ChaptersTopicsArgs = {
  distinct_on?: InputMaybe<Array<Topics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Topics_Order_By>>;
  where?: InputMaybe<Topics_Bool_Exp>;
};


/** columns and relationships of "chapters" */
export type ChaptersTopics_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Topics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Topics_Order_By>>;
  where?: InputMaybe<Topics_Bool_Exp>;
};

/** aggregated selection of "chapters" */
export type Chapters_Aggregate = {
  aggregate?: Maybe<Chapters_Aggregate_Fields>;
  nodes: Array<Chapters>;
};

/** aggregate fields of "chapters" */
export type Chapters_Aggregate_Fields = {
  avg?: Maybe<Chapters_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Chapters_Max_Fields>;
  min?: Maybe<Chapters_Min_Fields>;
  stddev?: Maybe<Chapters_Stddev_Fields>;
  stddev_pop?: Maybe<Chapters_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Chapters_Stddev_Samp_Fields>;
  sum?: Maybe<Chapters_Sum_Fields>;
  var_pop?: Maybe<Chapters_Var_Pop_Fields>;
  var_samp?: Maybe<Chapters_Var_Samp_Fields>;
  variance?: Maybe<Chapters_Variance_Fields>;
};


/** aggregate fields of "chapters" */
export type Chapters_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Chapters_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "chapters" */
export type Chapters_Aggregate_Order_By = {
  avg?: InputMaybe<Chapters_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Chapters_Max_Order_By>;
  min?: InputMaybe<Chapters_Min_Order_By>;
  stddev?: InputMaybe<Chapters_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Chapters_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Chapters_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Chapters_Sum_Order_By>;
  var_pop?: InputMaybe<Chapters_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Chapters_Var_Samp_Order_By>;
  variance?: InputMaybe<Chapters_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "chapters" */
export type Chapters_Arr_Rel_Insert_Input = {
  data: Array<Chapters_Insert_Input>;
  on_conflict?: InputMaybe<Chapters_On_Conflict>;
};

/** aggregate avg on columns */
export type Chapters_Avg_Fields = {
  current_topic_display_order?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "chapters" */
export type Chapters_Avg_Order_By = {
  current_topic_display_order?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "chapters". All fields are combined with a logical 'AND'. */
export type Chapters_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Chapters_Bool_Exp>>>;
  _not?: InputMaybe<Chapters_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Chapters_Bool_Exp>>>;
  book_chapters?: InputMaybe<Books_Chapters_Bool_Exp>;
  chapter_id?: InputMaybe<String_Comparison_Exp>;
  copied_from?: InputMaybe<String_Comparison_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  current_topic_display_order?: InputMaybe<Int_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  display_order?: InputMaybe<Smallint_Comparison_Exp>;
  grade?: InputMaybe<Smallint_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school?: InputMaybe<Schools_Bool_Exp>;
  school_id?: InputMaybe<Int_Comparison_Exp>;
  subject?: InputMaybe<String_Comparison_Exp>;
  topics?: InputMaybe<Topics_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "chapters" */
export enum Chapters_Constraint {
  /** unique or primary key constraint */
  ChaptersPk = 'chapters_pk'
}

/** input type for incrementing integer column in table "chapters" */
export type Chapters_Inc_Input = {
  current_topic_display_order?: InputMaybe<Scalars['Int']>;
  display_order?: InputMaybe<Scalars['smallint']>;
  grade?: InputMaybe<Scalars['smallint']>;
  school_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "chapters" */
export type Chapters_Insert_Input = {
  book_chapters?: InputMaybe<Books_Chapters_Arr_Rel_Insert_Input>;
  chapter_id?: InputMaybe<Scalars['String']>;
  copied_from?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  current_topic_display_order?: InputMaybe<Scalars['Int']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  display_order?: InputMaybe<Scalars['smallint']>;
  grade?: InputMaybe<Scalars['smallint']>;
  name?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school?: InputMaybe<Schools_Obj_Rel_Insert_Input>;
  school_id?: InputMaybe<Scalars['Int']>;
  subject?: InputMaybe<Scalars['String']>;
  topics?: InputMaybe<Topics_Arr_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Chapters_Max_Fields = {
  chapter_id?: Maybe<Scalars['String']>;
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_topic_display_order?: Maybe<Scalars['Int']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "chapters" */
export type Chapters_Max_Order_By = {
  chapter_id?: InputMaybe<Order_By>;
  copied_from?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_topic_display_order?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Chapters_Min_Fields = {
  chapter_id?: Maybe<Scalars['String']>;
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_topic_display_order?: Maybe<Scalars['Int']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "chapters" */
export type Chapters_Min_Order_By = {
  chapter_id?: InputMaybe<Order_By>;
  copied_from?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_topic_display_order?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "chapters" */
export type Chapters_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Chapters>;
};

/** input type for inserting object relation for remote table "chapters" */
export type Chapters_Obj_Rel_Insert_Input = {
  data: Chapters_Insert_Input;
  on_conflict?: InputMaybe<Chapters_On_Conflict>;
};

/** on conflict condition type for table "chapters" */
export type Chapters_On_Conflict = {
  constraint: Chapters_Constraint;
  update_columns: Array<Chapters_Update_Column>;
  where?: InputMaybe<Chapters_Bool_Exp>;
};

/** ordering options when selecting data from "chapters" */
export type Chapters_Order_By = {
  book_chapters_aggregate?: InputMaybe<Books_Chapters_Aggregate_Order_By>;
  chapter_id?: InputMaybe<Order_By>;
  copied_from?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_topic_display_order?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school?: InputMaybe<Schools_Order_By>;
  school_id?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  topics_aggregate?: InputMaybe<Topics_Aggregate_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "chapters" */
export type Chapters_Pk_Columns_Input = {
  chapter_id: Scalars['String'];
};

/** select columns of table "chapters" */
export enum Chapters_Select_Column {
  /** column name */
  ChapterId = 'chapter_id',
  /** column name */
  CopiedFrom = 'copied_from',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentTopicDisplayOrder = 'current_topic_display_order',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  Grade = 'grade',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "chapters" */
export type Chapters_Set_Input = {
  chapter_id?: InputMaybe<Scalars['String']>;
  copied_from?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  current_topic_display_order?: InputMaybe<Scalars['Int']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  display_order?: InputMaybe<Scalars['smallint']>;
  grade?: InputMaybe<Scalars['smallint']>;
  name?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['Int']>;
  subject?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Chapters_Stddev_Fields = {
  current_topic_display_order?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "chapters" */
export type Chapters_Stddev_Order_By = {
  current_topic_display_order?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Chapters_Stddev_Pop_Fields = {
  current_topic_display_order?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "chapters" */
export type Chapters_Stddev_Pop_Order_By = {
  current_topic_display_order?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Chapters_Stddev_Samp_Fields = {
  current_topic_display_order?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "chapters" */
export type Chapters_Stddev_Samp_Order_By = {
  current_topic_display_order?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Chapters_Sum_Fields = {
  current_topic_display_order?: Maybe<Scalars['Int']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "chapters" */
export type Chapters_Sum_Order_By = {
  current_topic_display_order?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** update columns of table "chapters" */
export enum Chapters_Update_Column {
  /** column name */
  ChapterId = 'chapter_id',
  /** column name */
  CopiedFrom = 'copied_from',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentTopicDisplayOrder = 'current_topic_display_order',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  Grade = 'grade',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Chapters_Var_Pop_Fields = {
  current_topic_display_order?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "chapters" */
export type Chapters_Var_Pop_Order_By = {
  current_topic_display_order?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Chapters_Var_Samp_Fields = {
  current_topic_display_order?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "chapters" */
export type Chapters_Var_Samp_Order_By = {
  current_topic_display_order?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Chapters_Variance_Fields = {
  current_topic_display_order?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "chapters" */
export type Chapters_Variance_Order_By = {
  current_topic_display_order?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "cities" */
export type Cities = {
  city_id: Scalars['Int'];
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order: Scalars['smallint'];
  /** An array relationship */
  districts: Array<Districts>;
  /** An aggregated array relationship */
  districts_aggregate: Districts_Aggregate;
  name: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  /** An array relationship */
  schools: Array<Schools>;
  /** An aggregated array relationship */
  schools_aggregate: Schools_Aggregate;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "cities" */
export type CitiesDistrictsArgs = {
  distinct_on?: InputMaybe<Array<Districts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Districts_Order_By>>;
  where?: InputMaybe<Districts_Bool_Exp>;
};


/** columns and relationships of "cities" */
export type CitiesDistricts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Districts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Districts_Order_By>>;
  where?: InputMaybe<Districts_Bool_Exp>;
};


/** columns and relationships of "cities" */
export type CitiesSchoolsArgs = {
  distinct_on?: InputMaybe<Array<Schools_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Schools_Order_By>>;
  where?: InputMaybe<Schools_Bool_Exp>;
};


/** columns and relationships of "cities" */
export type CitiesSchools_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Schools_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Schools_Order_By>>;
  where?: InputMaybe<Schools_Bool_Exp>;
};

/** aggregated selection of "cities" */
export type Cities_Aggregate = {
  aggregate?: Maybe<Cities_Aggregate_Fields>;
  nodes: Array<Cities>;
};

/** aggregate fields of "cities" */
export type Cities_Aggregate_Fields = {
  avg?: Maybe<Cities_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Cities_Max_Fields>;
  min?: Maybe<Cities_Min_Fields>;
  stddev?: Maybe<Cities_Stddev_Fields>;
  stddev_pop?: Maybe<Cities_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Cities_Stddev_Samp_Fields>;
  sum?: Maybe<Cities_Sum_Fields>;
  var_pop?: Maybe<Cities_Var_Pop_Fields>;
  var_samp?: Maybe<Cities_Var_Samp_Fields>;
  variance?: Maybe<Cities_Variance_Fields>;
};


/** aggregate fields of "cities" */
export type Cities_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Cities_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "cities" */
export type Cities_Aggregate_Order_By = {
  avg?: InputMaybe<Cities_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Cities_Max_Order_By>;
  min?: InputMaybe<Cities_Min_Order_By>;
  stddev?: InputMaybe<Cities_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Cities_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Cities_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Cities_Sum_Order_By>;
  var_pop?: InputMaybe<Cities_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Cities_Var_Samp_Order_By>;
  variance?: InputMaybe<Cities_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "cities" */
export type Cities_Arr_Rel_Insert_Input = {
  data: Array<Cities_Insert_Input>;
  on_conflict?: InputMaybe<Cities_On_Conflict>;
};

/** aggregate avg on columns */
export type Cities_Avg_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "cities" */
export type Cities_Avg_Order_By = {
  city_id?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "cities". All fields are combined with a logical 'AND'. */
export type Cities_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Cities_Bool_Exp>>>;
  _not?: InputMaybe<Cities_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Cities_Bool_Exp>>>;
  city_id?: InputMaybe<Int_Comparison_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  display_order?: InputMaybe<Smallint_Comparison_Exp>;
  districts?: InputMaybe<Districts_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  schools?: InputMaybe<Schools_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "cities" */
export enum Cities_Constraint {
  /** unique or primary key constraint */
  CityPk = 'city_pk',
  /** unique or primary key constraint */
  CityUn = 'city_un'
}

/** input type for incrementing integer column in table "cities" */
export type Cities_Inc_Input = {
  city_id?: InputMaybe<Scalars['Int']>;
  display_order?: InputMaybe<Scalars['smallint']>;
};

/** input type for inserting data into table "cities" */
export type Cities_Insert_Input = {
  city_id?: InputMaybe<Scalars['Int']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  display_order?: InputMaybe<Scalars['smallint']>;
  districts?: InputMaybe<Districts_Arr_Rel_Insert_Input>;
  name?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  schools?: InputMaybe<Schools_Arr_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Cities_Max_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "cities" */
export type Cities_Max_Order_By = {
  city_id?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Cities_Min_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "cities" */
export type Cities_Min_Order_By = {
  city_id?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "cities" */
export type Cities_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Cities>;
};

/** input type for inserting object relation for remote table "cities" */
export type Cities_Obj_Rel_Insert_Input = {
  data: Cities_Insert_Input;
  on_conflict?: InputMaybe<Cities_On_Conflict>;
};

/** on conflict condition type for table "cities" */
export type Cities_On_Conflict = {
  constraint: Cities_Constraint;
  update_columns: Array<Cities_Update_Column>;
  where?: InputMaybe<Cities_Bool_Exp>;
};

/** ordering options when selecting data from "cities" */
export type Cities_Order_By = {
  city_id?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  districts_aggregate?: InputMaybe<Districts_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  schools_aggregate?: InputMaybe<Schools_Aggregate_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "cities" */
export type Cities_Pk_Columns_Input = {
  city_id: Scalars['Int'];
};

/** select columns of table "cities" */
export enum Cities_Select_Column {
  /** column name */
  CityId = 'city_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "cities" */
export type Cities_Set_Input = {
  city_id?: InputMaybe<Scalars['Int']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  display_order?: InputMaybe<Scalars['smallint']>;
  name?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Cities_Stddev_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "cities" */
export type Cities_Stddev_Order_By = {
  city_id?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Cities_Stddev_Pop_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "cities" */
export type Cities_Stddev_Pop_Order_By = {
  city_id?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Cities_Stddev_Samp_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "cities" */
export type Cities_Stddev_Samp_Order_By = {
  city_id?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Cities_Sum_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  display_order?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "cities" */
export type Cities_Sum_Order_By = {
  city_id?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
};

/** update columns of table "cities" */
export enum Cities_Update_Column {
  /** column name */
  CityId = 'city_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Cities_Var_Pop_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "cities" */
export type Cities_Var_Pop_Order_By = {
  city_id?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Cities_Var_Samp_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "cities" */
export type Cities_Var_Samp_Order_By = {
  city_id?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Cities_Variance_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  display_order?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "cities" */
export type Cities_Variance_Order_By = {
  city_id?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
};

/** columns and relationships of "class" */
export type Class = {
  class_id: Scalars['String'];
  /** An object relationship */
  course: Courses;
  course_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  location: Locations;
  location_id: Scalars['String'];
  name: Scalars['String'];
  resource_path: Scalars['String'];
  school_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "class" */
export type Class_Aggregate = {
  aggregate?: Maybe<Class_Aggregate_Fields>;
  nodes: Array<Class>;
};

/** aggregate fields of "class" */
export type Class_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Class_Max_Fields>;
  min?: Maybe<Class_Min_Fields>;
};


/** aggregate fields of "class" */
export type Class_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Class_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "class" */
export type Class_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Class_Max_Order_By>;
  min?: InputMaybe<Class_Min_Order_By>;
};

/** input type for inserting array relation for remote table "class" */
export type Class_Arr_Rel_Insert_Input = {
  data: Array<Class_Insert_Input>;
  on_conflict?: InputMaybe<Class_On_Conflict>;
};

/** Boolean expression to filter rows from the table "class". All fields are combined with a logical 'AND'. */
export type Class_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Class_Bool_Exp>>>;
  _not?: InputMaybe<Class_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Class_Bool_Exp>>>;
  class_id?: InputMaybe<String_Comparison_Exp>;
  course?: InputMaybe<Courses_Bool_Exp>;
  course_id?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  location?: InputMaybe<Locations_Bool_Exp>;
  location_id?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "class" */
export enum Class_Constraint {
  /** unique or primary key constraint */
  PkClass = 'pk__class'
}

/** input type for inserting data into table "class" */
export type Class_Insert_Input = {
  class_id?: InputMaybe<Scalars['String']>;
  course?: InputMaybe<Courses_Obj_Rel_Insert_Input>;
  course_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  location?: InputMaybe<Locations_Obj_Rel_Insert_Input>;
  location_id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Class_Max_Fields = {
  class_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "class" */
export type Class_Max_Order_By = {
  class_id?: InputMaybe<Order_By>;
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** columns and relationships of "class_member" */
export type Class_Member = {
  class_id: Scalars['String'];
  class_member_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  resource_path: Scalars['String'];
  start_date?: Maybe<Scalars['timestamptz']>;
  updated_at: Scalars['timestamptz'];
  user_id: Scalars['String'];
};

/** aggregated selection of "class_member" */
export type Class_Member_Aggregate = {
  aggregate?: Maybe<Class_Member_Aggregate_Fields>;
  nodes: Array<Class_Member>;
};

/** aggregate fields of "class_member" */
export type Class_Member_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Class_Member_Max_Fields>;
  min?: Maybe<Class_Member_Min_Fields>;
};


/** aggregate fields of "class_member" */
export type Class_Member_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Class_Member_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "class_member" */
export type Class_Member_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Class_Member_Max_Order_By>;
  min?: InputMaybe<Class_Member_Min_Order_By>;
};

/** input type for inserting array relation for remote table "class_member" */
export type Class_Member_Arr_Rel_Insert_Input = {
  data: Array<Class_Member_Insert_Input>;
  on_conflict?: InputMaybe<Class_Member_On_Conflict>;
};

/** Boolean expression to filter rows from the table "class_member". All fields are combined with a logical 'AND'. */
export type Class_Member_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Class_Member_Bool_Exp>>>;
  _not?: InputMaybe<Class_Member_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Class_Member_Bool_Exp>>>;
  class_id?: InputMaybe<String_Comparison_Exp>;
  class_member_id?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  end_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  start_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user_id?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "class_member" */
export enum Class_Member_Constraint {
  /** unique or primary key constraint */
  PkClassMember = 'pk__class_member'
}

/** input type for inserting data into table "class_member" */
export type Class_Member_Insert_Input = {
  class_id?: InputMaybe<Scalars['String']>;
  class_member_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  end_date?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['timestamptz']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Class_Member_Max_Fields = {
  class_id?: Maybe<Scalars['String']>;
  class_member_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "class_member" */
export type Class_Member_Max_Order_By = {
  class_id?: InputMaybe<Order_By>;
  class_member_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Class_Member_Min_Fields = {
  class_id?: Maybe<Scalars['String']>;
  class_member_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "class_member" */
export type Class_Member_Min_Order_By = {
  class_id?: InputMaybe<Order_By>;
  class_member_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "class_member" */
export type Class_Member_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Class_Member>;
};

/** input type for inserting object relation for remote table "class_member" */
export type Class_Member_Obj_Rel_Insert_Input = {
  data: Class_Member_Insert_Input;
  on_conflict?: InputMaybe<Class_Member_On_Conflict>;
};

/** on conflict condition type for table "class_member" */
export type Class_Member_On_Conflict = {
  constraint: Class_Member_Constraint;
  update_columns: Array<Class_Member_Update_Column>;
  where?: InputMaybe<Class_Member_Bool_Exp>;
};

/** ordering options when selecting data from "class_member" */
export type Class_Member_Order_By = {
  class_id?: InputMaybe<Order_By>;
  class_member_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "class_member" */
export type Class_Member_Pk_Columns_Input = {
  class_member_id: Scalars['String'];
};

/** select columns of table "class_member" */
export enum Class_Member_Select_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  ClassMemberId = 'class_member_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "class_member" */
export type Class_Member_Set_Input = {
  class_id?: InputMaybe<Scalars['String']>;
  class_member_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  end_date?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['timestamptz']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['String']>;
};

/** update columns of table "class_member" */
export enum Class_Member_Update_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  ClassMemberId = 'class_member_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** columns and relationships of "class_members" */
export type Class_Members = {
  /** An object relationship */
  class: Classes;
  class_id: Scalars['Int'];
  class_member_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_owner: Scalars['Boolean'];
  resource_path: Scalars['String'];
  status: Scalars['String'];
  /** An object relationship */
  student?: Maybe<Students>;
  /** An object relationship */
  student_subscription?: Maybe<Student_Subscriptions>;
  student_subscription_id?: Maybe<Scalars['String']>;
  /** An object relationship */
  teacher_by_school_id?: Maybe<Teacher_By_School_Id>;
  /** An object relationship */
  teachers?: Maybe<Teachers>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: Users;
  user_group: Scalars['String'];
  user_id: Scalars['String'];
};

/** aggregated selection of "class_members" */
export type Class_Members_Aggregate = {
  aggregate?: Maybe<Class_Members_Aggregate_Fields>;
  nodes: Array<Class_Members>;
};

/** aggregate fields of "class_members" */
export type Class_Members_Aggregate_Fields = {
  avg?: Maybe<Class_Members_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Class_Members_Max_Fields>;
  min?: Maybe<Class_Members_Min_Fields>;
  stddev?: Maybe<Class_Members_Stddev_Fields>;
  stddev_pop?: Maybe<Class_Members_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Class_Members_Stddev_Samp_Fields>;
  sum?: Maybe<Class_Members_Sum_Fields>;
  var_pop?: Maybe<Class_Members_Var_Pop_Fields>;
  var_samp?: Maybe<Class_Members_Var_Samp_Fields>;
  variance?: Maybe<Class_Members_Variance_Fields>;
};


/** aggregate fields of "class_members" */
export type Class_Members_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Class_Members_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "class_members" */
export type Class_Members_Aggregate_Order_By = {
  avg?: InputMaybe<Class_Members_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Class_Members_Max_Order_By>;
  min?: InputMaybe<Class_Members_Min_Order_By>;
  stddev?: InputMaybe<Class_Members_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Class_Members_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Class_Members_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Class_Members_Sum_Order_By>;
  var_pop?: InputMaybe<Class_Members_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Class_Members_Var_Samp_Order_By>;
  variance?: InputMaybe<Class_Members_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "class_members" */
export type Class_Members_Arr_Rel_Insert_Input = {
  data: Array<Class_Members_Insert_Input>;
  on_conflict?: InputMaybe<Class_Members_On_Conflict>;
};

/** aggregate avg on columns */
export type Class_Members_Avg_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "class_members" */
export type Class_Members_Avg_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "class_members". All fields are combined with a logical 'AND'. */
export type Class_Members_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Class_Members_Bool_Exp>>>;
  _not?: InputMaybe<Class_Members_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Class_Members_Bool_Exp>>>;
  class?: InputMaybe<Classes_Bool_Exp>;
  class_id?: InputMaybe<Int_Comparison_Exp>;
  class_member_id?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  is_owner?: InputMaybe<Boolean_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  student?: InputMaybe<Students_Bool_Exp>;
  student_subscription?: InputMaybe<Student_Subscriptions_Bool_Exp>;
  student_subscription_id?: InputMaybe<String_Comparison_Exp>;
  teacher_by_school_id?: InputMaybe<Teacher_By_School_Id_Bool_Exp>;
  teachers?: InputMaybe<Teachers_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_group?: InputMaybe<String_Comparison_Exp>;
  user_id?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "class_members" */
export enum Class_Members_Constraint {
  /** unique or primary key constraint */
  ClassMembersPk = 'class_members_pk'
}

/** input type for incrementing integer column in table "class_members" */
export type Class_Members_Inc_Input = {
  class_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "class_members" */
export type Class_Members_Insert_Input = {
  class?: InputMaybe<Classes_Obj_Rel_Insert_Input>;
  class_id?: InputMaybe<Scalars['Int']>;
  class_member_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_owner?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  student?: InputMaybe<Students_Obj_Rel_Insert_Input>;
  student_subscription?: InputMaybe<Student_Subscriptions_Obj_Rel_Insert_Input>;
  student_subscription_id?: InputMaybe<Scalars['String']>;
  teachers?: InputMaybe<Teachers_Obj_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_group?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Class_Members_Max_Fields = {
  class_id?: Maybe<Scalars['Int']>;
  class_member_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "class_members" */
export type Class_Members_Max_Order_By = {
  class_id?: InputMaybe<Order_By>;
  class_member_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  student_subscription_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_group?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Class_Members_Min_Fields = {
  class_id?: Maybe<Scalars['Int']>;
  class_member_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "class_members" */
export type Class_Members_Min_Order_By = {
  class_id?: InputMaybe<Order_By>;
  class_member_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  student_subscription_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_group?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "class_members" */
export type Class_Members_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Class_Members>;
};

/** input type for inserting object relation for remote table "class_members" */
export type Class_Members_Obj_Rel_Insert_Input = {
  data: Class_Members_Insert_Input;
  on_conflict?: InputMaybe<Class_Members_On_Conflict>;
};

/** on conflict condition type for table "class_members" */
export type Class_Members_On_Conflict = {
  constraint: Class_Members_Constraint;
  update_columns: Array<Class_Members_Update_Column>;
  where?: InputMaybe<Class_Members_Bool_Exp>;
};

/** ordering options when selecting data from "class_members" */
export type Class_Members_Order_By = {
  class?: InputMaybe<Classes_Order_By>;
  class_id?: InputMaybe<Order_By>;
  class_member_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  is_owner?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  student?: InputMaybe<Students_Order_By>;
  student_subscription?: InputMaybe<Student_Subscriptions_Order_By>;
  student_subscription_id?: InputMaybe<Order_By>;
  teacher_by_school_id?: InputMaybe<Teacher_By_School_Id_Order_By>;
  teachers?: InputMaybe<Teachers_Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_group?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "class_members" */
export type Class_Members_Pk_Columns_Input = {
  class_member_id: Scalars['String'];
};

/** select columns of table "class_members" */
export enum Class_Members_Select_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  ClassMemberId = 'class_member_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsOwner = 'is_owner',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentSubscriptionId = 'student_subscription_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserGroup = 'user_group',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "class_members" */
export type Class_Members_Set_Input = {
  class_id?: InputMaybe<Scalars['Int']>;
  class_member_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_owner?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  student_subscription_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_group?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Class_Members_Stddev_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "class_members" */
export type Class_Members_Stddev_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Class_Members_Stddev_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "class_members" */
export type Class_Members_Stddev_Pop_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Class_Members_Stddev_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "class_members" */
export type Class_Members_Stddev_Samp_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Class_Members_Sum_Fields = {
  class_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "class_members" */
export type Class_Members_Sum_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** update columns of table "class_members" */
export enum Class_Members_Update_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  ClassMemberId = 'class_member_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsOwner = 'is_owner',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentSubscriptionId = 'student_subscription_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserGroup = 'user_group',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Class_Members_Var_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "class_members" */
export type Class_Members_Var_Pop_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Class_Members_Var_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "class_members" */
export type Class_Members_Var_Samp_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Class_Members_Variance_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "class_members" */
export type Class_Members_Variance_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Class_Min_Fields = {
  class_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "class" */
export type Class_Min_Order_By = {
  class_id?: InputMaybe<Order_By>;
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "class" */
export type Class_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Class>;
};

/** input type for inserting object relation for remote table "class" */
export type Class_Obj_Rel_Insert_Input = {
  data: Class_Insert_Input;
  on_conflict?: InputMaybe<Class_On_Conflict>;
};

/** on conflict condition type for table "class" */
export type Class_On_Conflict = {
  constraint: Class_Constraint;
  update_columns: Array<Class_Update_Column>;
  where?: InputMaybe<Class_Bool_Exp>;
};

/** ordering options when selecting data from "class" */
export type Class_Order_By = {
  class_id?: InputMaybe<Order_By>;
  course?: InputMaybe<Courses_Order_By>;
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  location?: InputMaybe<Locations_Order_By>;
  location_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "class" */
export type Class_Pk_Columns_Input = {
  class_id: Scalars['String'];
};

/** select columns of table "class" */
export enum Class_Select_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "class" */
export type Class_Set_Input = {
  class_id?: InputMaybe<Scalars['String']>;
  course_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  location_id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "class" */
export enum Class_Update_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "classes" */
export type Classes = {
  avatar: Scalars['String'];
  class_code?: Maybe<Scalars['String']>;
  class_id: Scalars['Int'];
  /** An array relationship */
  class_members: Array<Class_Members>;
  /** An aggregated array relationship */
  class_members_aggregate: Class_Members_Aggregate;
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grades?: Maybe<Scalars['_int4']>;
  name: Scalars['String'];
  /** An object relationship */
  plan?: Maybe<Plans>;
  plan_duration?: Maybe<Scalars['smallint']>;
  plan_expired_at?: Maybe<Scalars['timestamptz']>;
  plan_id?: Maybe<Scalars['String']>;
  resource_path: Scalars['String'];
  /** An object relationship */
  school: Schools;
  school_id: Scalars['Int'];
  status: Scalars['String'];
  subjects?: Maybe<Scalars['_text']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "classes" */
export type ClassesClass_MembersArgs = {
  distinct_on?: InputMaybe<Array<Class_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Members_Order_By>>;
  where?: InputMaybe<Class_Members_Bool_Exp>;
};


/** columns and relationships of "classes" */
export type ClassesClass_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Class_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Members_Order_By>>;
  where?: InputMaybe<Class_Members_Bool_Exp>;
};

/** aggregated selection of "classes" */
export type Classes_Aggregate = {
  aggregate?: Maybe<Classes_Aggregate_Fields>;
  nodes: Array<Classes>;
};

/** aggregate fields of "classes" */
export type Classes_Aggregate_Fields = {
  avg?: Maybe<Classes_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Classes_Max_Fields>;
  min?: Maybe<Classes_Min_Fields>;
  stddev?: Maybe<Classes_Stddev_Fields>;
  stddev_pop?: Maybe<Classes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Classes_Stddev_Samp_Fields>;
  sum?: Maybe<Classes_Sum_Fields>;
  var_pop?: Maybe<Classes_Var_Pop_Fields>;
  var_samp?: Maybe<Classes_Var_Samp_Fields>;
  variance?: Maybe<Classes_Variance_Fields>;
};


/** aggregate fields of "classes" */
export type Classes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Classes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "classes" */
export type Classes_Aggregate_Order_By = {
  avg?: InputMaybe<Classes_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Classes_Max_Order_By>;
  min?: InputMaybe<Classes_Min_Order_By>;
  stddev?: InputMaybe<Classes_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Classes_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Classes_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Classes_Sum_Order_By>;
  var_pop?: InputMaybe<Classes_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Classes_Var_Samp_Order_By>;
  variance?: InputMaybe<Classes_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "classes" */
export type Classes_Arr_Rel_Insert_Input = {
  data: Array<Classes_Insert_Input>;
  on_conflict?: InputMaybe<Classes_On_Conflict>;
};

/** aggregate avg on columns */
export type Classes_Avg_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "classes" */
export type Classes_Avg_Order_By = {
  class_id?: InputMaybe<Order_By>;
  plan_duration?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "classes". All fields are combined with a logical 'AND'. */
export type Classes_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Classes_Bool_Exp>>>;
  _not?: InputMaybe<Classes_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Classes_Bool_Exp>>>;
  avatar?: InputMaybe<String_Comparison_Exp>;
  class_code?: InputMaybe<String_Comparison_Exp>;
  class_id?: InputMaybe<Int_Comparison_Exp>;
  class_members?: InputMaybe<Class_Members_Bool_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  grades?: InputMaybe<_Int4_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  plan?: InputMaybe<Plans_Bool_Exp>;
  plan_duration?: InputMaybe<Smallint_Comparison_Exp>;
  plan_expired_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  plan_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school?: InputMaybe<Schools_Bool_Exp>;
  school_id?: InputMaybe<Int_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  subjects?: InputMaybe<_Text_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "classes" */
export enum Classes_Constraint {
  /** unique or primary key constraint */
  ClassesPk = 'classes_pk',
  /** unique or primary key constraint */
  ClassesUn = 'classes_un'
}

/** input type for incrementing integer column in table "classes" */
export type Classes_Inc_Input = {
  class_id?: InputMaybe<Scalars['Int']>;
  plan_duration?: InputMaybe<Scalars['smallint']>;
  school_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "classes" */
export type Classes_Insert_Input = {
  avatar?: InputMaybe<Scalars['String']>;
  class_code?: InputMaybe<Scalars['String']>;
  class_id?: InputMaybe<Scalars['Int']>;
  class_members?: InputMaybe<Class_Members_Arr_Rel_Insert_Input>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  grades?: InputMaybe<Scalars['_int4']>;
  name?: InputMaybe<Scalars['String']>;
  plan?: InputMaybe<Plans_Obj_Rel_Insert_Input>;
  plan_duration?: InputMaybe<Scalars['smallint']>;
  plan_expired_at?: InputMaybe<Scalars['timestamptz']>;
  plan_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school?: InputMaybe<Schools_Obj_Rel_Insert_Input>;
  school_id?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<Scalars['String']>;
  subjects?: InputMaybe<Scalars['_text']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Classes_Max_Fields = {
  avatar?: Maybe<Scalars['String']>;
  class_code?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  plan_duration?: Maybe<Scalars['smallint']>;
  plan_expired_at?: Maybe<Scalars['timestamptz']>;
  plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "classes" */
export type Classes_Max_Order_By = {
  avatar?: InputMaybe<Order_By>;
  class_code?: InputMaybe<Order_By>;
  class_id?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  plan_duration?: InputMaybe<Order_By>;
  plan_expired_at?: InputMaybe<Order_By>;
  plan_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Classes_Min_Fields = {
  avatar?: Maybe<Scalars['String']>;
  class_code?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  plan_duration?: Maybe<Scalars['smallint']>;
  plan_expired_at?: Maybe<Scalars['timestamptz']>;
  plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "classes" */
export type Classes_Min_Order_By = {
  avatar?: InputMaybe<Order_By>;
  class_code?: InputMaybe<Order_By>;
  class_id?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  plan_duration?: InputMaybe<Order_By>;
  plan_expired_at?: InputMaybe<Order_By>;
  plan_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "classes" */
export type Classes_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Classes>;
};

/** input type for inserting object relation for remote table "classes" */
export type Classes_Obj_Rel_Insert_Input = {
  data: Classes_Insert_Input;
  on_conflict?: InputMaybe<Classes_On_Conflict>;
};

/** on conflict condition type for table "classes" */
export type Classes_On_Conflict = {
  constraint: Classes_Constraint;
  update_columns: Array<Classes_Update_Column>;
  where?: InputMaybe<Classes_Bool_Exp>;
};

/** ordering options when selecting data from "classes" */
export type Classes_Order_By = {
  avatar?: InputMaybe<Order_By>;
  class_code?: InputMaybe<Order_By>;
  class_id?: InputMaybe<Order_By>;
  class_members_aggregate?: InputMaybe<Class_Members_Aggregate_Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  grades?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  plan?: InputMaybe<Plans_Order_By>;
  plan_duration?: InputMaybe<Order_By>;
  plan_expired_at?: InputMaybe<Order_By>;
  plan_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school?: InputMaybe<Schools_Order_By>;
  school_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  subjects?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "classes" */
export type Classes_Pk_Columns_Input = {
  class_id: Scalars['Int'];
};

/** select columns of table "classes" */
export enum Classes_Select_Column {
  /** column name */
  Avatar = 'avatar',
  /** column name */
  ClassCode = 'class_code',
  /** column name */
  ClassId = 'class_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Grades = 'grades',
  /** column name */
  Name = 'name',
  /** column name */
  PlanDuration = 'plan_duration',
  /** column name */
  PlanExpiredAt = 'plan_expired_at',
  /** column name */
  PlanId = 'plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Status = 'status',
  /** column name */
  Subjects = 'subjects',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "classes" */
export type Classes_Set_Input = {
  avatar?: InputMaybe<Scalars['String']>;
  class_code?: InputMaybe<Scalars['String']>;
  class_id?: InputMaybe<Scalars['Int']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  grades?: InputMaybe<Scalars['_int4']>;
  name?: InputMaybe<Scalars['String']>;
  plan_duration?: InputMaybe<Scalars['smallint']>;
  plan_expired_at?: InputMaybe<Scalars['timestamptz']>;
  plan_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<Scalars['String']>;
  subjects?: InputMaybe<Scalars['_text']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Classes_Stddev_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "classes" */
export type Classes_Stddev_Order_By = {
  class_id?: InputMaybe<Order_By>;
  plan_duration?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Classes_Stddev_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "classes" */
export type Classes_Stddev_Pop_Order_By = {
  class_id?: InputMaybe<Order_By>;
  plan_duration?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Classes_Stddev_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "classes" */
export type Classes_Stddev_Samp_Order_By = {
  class_id?: InputMaybe<Order_By>;
  plan_duration?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Classes_Sum_Fields = {
  class_id?: Maybe<Scalars['Int']>;
  plan_duration?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "classes" */
export type Classes_Sum_Order_By = {
  class_id?: InputMaybe<Order_By>;
  plan_duration?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** update columns of table "classes" */
export enum Classes_Update_Column {
  /** column name */
  Avatar = 'avatar',
  /** column name */
  ClassCode = 'class_code',
  /** column name */
  ClassId = 'class_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Grades = 'grades',
  /** column name */
  Name = 'name',
  /** column name */
  PlanDuration = 'plan_duration',
  /** column name */
  PlanExpiredAt = 'plan_expired_at',
  /** column name */
  PlanId = 'plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Status = 'status',
  /** column name */
  Subjects = 'subjects',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Classes_Var_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "classes" */
export type Classes_Var_Pop_Order_By = {
  class_id?: InputMaybe<Order_By>;
  plan_duration?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Classes_Var_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "classes" */
export type Classes_Var_Samp_Order_By = {
  class_id?: InputMaybe<Order_By>;
  plan_duration?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Classes_Variance_Fields = {
  class_id?: Maybe<Scalars['Float']>;
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "classes" */
export type Classes_Variance_Order_By = {
  class_id?: InputMaybe<Order_By>;
  plan_duration?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "coaches" */
export type Coaches = {
  coach_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An array relationship */
  students_assigned_coaches: Array<Students_Assigned_Coaches>;
  /** An aggregated array relationship */
  students_assigned_coaches_aggregate: Students_Assigned_Coaches_Aggregate;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user?: Maybe<Users>;
};


/** columns and relationships of "coaches" */
export type CoachesStudents_Assigned_CoachesArgs = {
  distinct_on?: InputMaybe<Array<Students_Assigned_Coaches_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Students_Assigned_Coaches_Order_By>>;
  where?: InputMaybe<Students_Assigned_Coaches_Bool_Exp>;
};


/** columns and relationships of "coaches" */
export type CoachesStudents_Assigned_Coaches_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Students_Assigned_Coaches_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Students_Assigned_Coaches_Order_By>>;
  where?: InputMaybe<Students_Assigned_Coaches_Bool_Exp>;
};

/** aggregated selection of "coaches" */
export type Coaches_Aggregate = {
  aggregate?: Maybe<Coaches_Aggregate_Fields>;
  nodes: Array<Coaches>;
};

/** aggregate fields of "coaches" */
export type Coaches_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Coaches_Max_Fields>;
  min?: Maybe<Coaches_Min_Fields>;
};


/** aggregate fields of "coaches" */
export type Coaches_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Coaches_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "coaches" */
export type Coaches_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Coaches_Max_Order_By>;
  min?: InputMaybe<Coaches_Min_Order_By>;
};

/** input type for inserting array relation for remote table "coaches" */
export type Coaches_Arr_Rel_Insert_Input = {
  data: Array<Coaches_Insert_Input>;
  on_conflict?: InputMaybe<Coaches_On_Conflict>;
};

/** Boolean expression to filter rows from the table "coaches". All fields are combined with a logical 'AND'. */
export type Coaches_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Coaches_Bool_Exp>>>;
  _not?: InputMaybe<Coaches_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Coaches_Bool_Exp>>>;
  coach_id?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  students_assigned_coaches?: InputMaybe<Students_Assigned_Coaches_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "coaches" */
export enum Coaches_Constraint {
  /** unique or primary key constraint */
  CoachesPk = 'coaches_pk'
}

/** input type for inserting data into table "coaches" */
export type Coaches_Insert_Input = {
  coach_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  students_assigned_coaches?: InputMaybe<Students_Assigned_Coaches_Arr_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Coaches_Max_Fields = {
  coach_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "coaches" */
export type Coaches_Max_Order_By = {
  coach_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Coaches_Min_Fields = {
  coach_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "coaches" */
export type Coaches_Min_Order_By = {
  coach_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "coaches" */
export type Coaches_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Coaches>;
};

/** input type for inserting object relation for remote table "coaches" */
export type Coaches_Obj_Rel_Insert_Input = {
  data: Coaches_Insert_Input;
  on_conflict?: InputMaybe<Coaches_On_Conflict>;
};

/** on conflict condition type for table "coaches" */
export type Coaches_On_Conflict = {
  constraint: Coaches_Constraint;
  update_columns: Array<Coaches_Update_Column>;
  where?: InputMaybe<Coaches_Bool_Exp>;
};

/** ordering options when selecting data from "coaches" */
export type Coaches_Order_By = {
  coach_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  students_assigned_coaches_aggregate?: InputMaybe<Students_Assigned_Coaches_Aggregate_Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
};

/** primary key columns input for table: "coaches" */
export type Coaches_Pk_Columns_Input = {
  coach_id: Scalars['String'];
};

/** select columns of table "coaches" */
export enum Coaches_Select_Column {
  /** column name */
  CoachId = 'coach_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "coaches" */
export type Coaches_Set_Input = {
  coach_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "coaches" */
export enum Coaches_Update_Column {
  /** column name */
  CoachId = 'coach_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "cod_orders" */
export type Cod_Orders = {
  address_tree: Scalars['_text'];
  cod_order_id: Scalars['String'];
  cod_secret_code: Scalars['String'];
  created_at: Scalars['timestamptz'];
  customer_address: Scalars['String'];
  customer_name: Scalars['String'];
  customer_phone_number: Scalars['String'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  expected_delivery_time: Scalars['timestamptz'];
  resource_path?: Maybe<Scalars['String']>;
  status: Scalars['String'];
  student_order_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "cod_orders" */
export type Cod_Orders_Aggregate = {
  aggregate?: Maybe<Cod_Orders_Aggregate_Fields>;
  nodes: Array<Cod_Orders>;
};

/** aggregate fields of "cod_orders" */
export type Cod_Orders_Aggregate_Fields = {
  avg?: Maybe<Cod_Orders_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Cod_Orders_Max_Fields>;
  min?: Maybe<Cod_Orders_Min_Fields>;
  stddev?: Maybe<Cod_Orders_Stddev_Fields>;
  stddev_pop?: Maybe<Cod_Orders_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Cod_Orders_Stddev_Samp_Fields>;
  sum?: Maybe<Cod_Orders_Sum_Fields>;
  var_pop?: Maybe<Cod_Orders_Var_Pop_Fields>;
  var_samp?: Maybe<Cod_Orders_Var_Samp_Fields>;
  variance?: Maybe<Cod_Orders_Variance_Fields>;
};


/** aggregate fields of "cod_orders" */
export type Cod_Orders_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Cod_Orders_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "cod_orders" */
export type Cod_Orders_Aggregate_Order_By = {
  avg?: InputMaybe<Cod_Orders_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Cod_Orders_Max_Order_By>;
  min?: InputMaybe<Cod_Orders_Min_Order_By>;
  stddev?: InputMaybe<Cod_Orders_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Cod_Orders_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Cod_Orders_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Cod_Orders_Sum_Order_By>;
  var_pop?: InputMaybe<Cod_Orders_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Cod_Orders_Var_Samp_Order_By>;
  variance?: InputMaybe<Cod_Orders_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "cod_orders" */
export type Cod_Orders_Arr_Rel_Insert_Input = {
  data: Array<Cod_Orders_Insert_Input>;
  on_conflict?: InputMaybe<Cod_Orders_On_Conflict>;
};

/** aggregate avg on columns */
export type Cod_Orders_Avg_Fields = {
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "cod_orders" */
export type Cod_Orders_Avg_Order_By = {
  student_order_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "cod_orders". All fields are combined with a logical 'AND'. */
export type Cod_Orders_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Cod_Orders_Bool_Exp>>>;
  _not?: InputMaybe<Cod_Orders_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Cod_Orders_Bool_Exp>>>;
  address_tree?: InputMaybe<_Text_Comparison_Exp>;
  cod_order_id?: InputMaybe<String_Comparison_Exp>;
  cod_secret_code?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  customer_address?: InputMaybe<String_Comparison_Exp>;
  customer_name?: InputMaybe<String_Comparison_Exp>;
  customer_phone_number?: InputMaybe<String_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  expected_delivery_time?: InputMaybe<Timestamptz_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  student_order_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "cod_orders" */
export enum Cod_Orders_Constraint {
  /** unique or primary key constraint */
  CodOrdersPk1 = 'cod_orders_pk1'
}

/** input type for incrementing integer column in table "cod_orders" */
export type Cod_Orders_Inc_Input = {
  student_order_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "cod_orders" */
export type Cod_Orders_Insert_Input = {
  address_tree?: InputMaybe<Scalars['_text']>;
  cod_order_id?: InputMaybe<Scalars['String']>;
  cod_secret_code?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  customer_address?: InputMaybe<Scalars['String']>;
  customer_name?: InputMaybe<Scalars['String']>;
  customer_phone_number?: InputMaybe<Scalars['String']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  expected_delivery_time?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  student_order_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Cod_Orders_Max_Fields = {
  cod_order_id?: Maybe<Scalars['String']>;
  cod_secret_code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customer_address?: Maybe<Scalars['String']>;
  customer_name?: Maybe<Scalars['String']>;
  customer_phone_number?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  expected_delivery_time?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_order_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "cod_orders" */
export type Cod_Orders_Max_Order_By = {
  cod_order_id?: InputMaybe<Order_By>;
  cod_secret_code?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  customer_address?: InputMaybe<Order_By>;
  customer_name?: InputMaybe<Order_By>;
  customer_phone_number?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  expected_delivery_time?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  student_order_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Cod_Orders_Min_Fields = {
  cod_order_id?: Maybe<Scalars['String']>;
  cod_secret_code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customer_address?: Maybe<Scalars['String']>;
  customer_name?: Maybe<Scalars['String']>;
  customer_phone_number?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  expected_delivery_time?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_order_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "cod_orders" */
export type Cod_Orders_Min_Order_By = {
  cod_order_id?: InputMaybe<Order_By>;
  cod_secret_code?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  customer_address?: InputMaybe<Order_By>;
  customer_name?: InputMaybe<Order_By>;
  customer_phone_number?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  expected_delivery_time?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  student_order_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "cod_orders" */
export type Cod_Orders_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Cod_Orders>;
};

/** input type for inserting object relation for remote table "cod_orders" */
export type Cod_Orders_Obj_Rel_Insert_Input = {
  data: Cod_Orders_Insert_Input;
  on_conflict?: InputMaybe<Cod_Orders_On_Conflict>;
};

/** on conflict condition type for table "cod_orders" */
export type Cod_Orders_On_Conflict = {
  constraint: Cod_Orders_Constraint;
  update_columns: Array<Cod_Orders_Update_Column>;
  where?: InputMaybe<Cod_Orders_Bool_Exp>;
};

/** ordering options when selecting data from "cod_orders" */
export type Cod_Orders_Order_By = {
  address_tree?: InputMaybe<Order_By>;
  cod_order_id?: InputMaybe<Order_By>;
  cod_secret_code?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  customer_address?: InputMaybe<Order_By>;
  customer_name?: InputMaybe<Order_By>;
  customer_phone_number?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  expected_delivery_time?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  student_order_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "cod_orders" */
export type Cod_Orders_Pk_Columns_Input = {
  cod_order_id: Scalars['String'];
};

/** select columns of table "cod_orders" */
export enum Cod_Orders_Select_Column {
  /** column name */
  AddressTree = 'address_tree',
  /** column name */
  CodOrderId = 'cod_order_id',
  /** column name */
  CodSecretCode = 'cod_secret_code',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomerAddress = 'customer_address',
  /** column name */
  CustomerName = 'customer_name',
  /** column name */
  CustomerPhoneNumber = 'customer_phone_number',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ExpectedDeliveryTime = 'expected_delivery_time',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentOrderId = 'student_order_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "cod_orders" */
export type Cod_Orders_Set_Input = {
  address_tree?: InputMaybe<Scalars['_text']>;
  cod_order_id?: InputMaybe<Scalars['String']>;
  cod_secret_code?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  customer_address?: InputMaybe<Scalars['String']>;
  customer_name?: InputMaybe<Scalars['String']>;
  customer_phone_number?: InputMaybe<Scalars['String']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  expected_delivery_time?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  student_order_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Cod_Orders_Stddev_Fields = {
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "cod_orders" */
export type Cod_Orders_Stddev_Order_By = {
  student_order_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Cod_Orders_Stddev_Pop_Fields = {
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "cod_orders" */
export type Cod_Orders_Stddev_Pop_Order_By = {
  student_order_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Cod_Orders_Stddev_Samp_Fields = {
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "cod_orders" */
export type Cod_Orders_Stddev_Samp_Order_By = {
  student_order_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Cod_Orders_Sum_Fields = {
  student_order_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "cod_orders" */
export type Cod_Orders_Sum_Order_By = {
  student_order_id?: InputMaybe<Order_By>;
};

/** update columns of table "cod_orders" */
export enum Cod_Orders_Update_Column {
  /** column name */
  AddressTree = 'address_tree',
  /** column name */
  CodOrderId = 'cod_order_id',
  /** column name */
  CodSecretCode = 'cod_secret_code',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomerAddress = 'customer_address',
  /** column name */
  CustomerName = 'customer_name',
  /** column name */
  CustomerPhoneNumber = 'customer_phone_number',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ExpectedDeliveryTime = 'expected_delivery_time',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentOrderId = 'student_order_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Cod_Orders_Var_Pop_Fields = {
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "cod_orders" */
export type Cod_Orders_Var_Pop_Order_By = {
  student_order_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Cod_Orders_Var_Samp_Fields = {
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "cod_orders" */
export type Cod_Orders_Var_Samp_Order_By = {
  student_order_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Cod_Orders_Variance_Fields = {
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "cod_orders" */
export type Cod_Orders_Variance_Order_By = {
  student_order_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "conversion_tasks" */
export type Conversion_Tasks = {
  conversion_response?: Maybe<Scalars['jsonb']>;
  created_at: Scalars['timestamptz'];
  resource_path?: Maybe<Scalars['String']>;
  resource_url: Scalars['String'];
  status: Scalars['String'];
  task_uuid: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "conversion_tasks" */
export type Conversion_TasksConversion_ResponseArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "conversion_tasks" */
export type Conversion_Tasks_Aggregate = {
  aggregate?: Maybe<Conversion_Tasks_Aggregate_Fields>;
  nodes: Array<Conversion_Tasks>;
};

/** aggregate fields of "conversion_tasks" */
export type Conversion_Tasks_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Conversion_Tasks_Max_Fields>;
  min?: Maybe<Conversion_Tasks_Min_Fields>;
};


/** aggregate fields of "conversion_tasks" */
export type Conversion_Tasks_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Conversion_Tasks_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "conversion_tasks" */
export type Conversion_Tasks_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Conversion_Tasks_Max_Order_By>;
  min?: InputMaybe<Conversion_Tasks_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Conversion_Tasks_Append_Input = {
  conversion_response?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "conversion_tasks" */
export type Conversion_Tasks_Arr_Rel_Insert_Input = {
  data: Array<Conversion_Tasks_Insert_Input>;
  on_conflict?: InputMaybe<Conversion_Tasks_On_Conflict>;
};

/** Boolean expression to filter rows from the table "conversion_tasks". All fields are combined with a logical 'AND'. */
export type Conversion_Tasks_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Conversion_Tasks_Bool_Exp>>>;
  _not?: InputMaybe<Conversion_Tasks_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Conversion_Tasks_Bool_Exp>>>;
  conversion_response?: InputMaybe<Jsonb_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  resource_url?: InputMaybe<String_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  task_uuid?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "conversion_tasks" */
export enum Conversion_Tasks_Constraint {
  /** unique or primary key constraint */
  ConversionTasksPkey = 'conversion_tasks_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Conversion_Tasks_Delete_At_Path_Input = {
  conversion_response?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Conversion_Tasks_Delete_Elem_Input = {
  conversion_response?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Conversion_Tasks_Delete_Key_Input = {
  conversion_response?: InputMaybe<Scalars['String']>;
};

/** input type for inserting data into table "conversion_tasks" */
export type Conversion_Tasks_Insert_Input = {
  conversion_response?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  resource_url?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  task_uuid?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Conversion_Tasks_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  resource_url?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  task_uuid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "conversion_tasks" */
export type Conversion_Tasks_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  resource_url?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  task_uuid?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Conversion_Tasks_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  resource_url?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  task_uuid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "conversion_tasks" */
export type Conversion_Tasks_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  resource_url?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  task_uuid?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "conversion_tasks" */
export type Conversion_Tasks_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Conversion_Tasks>;
};

/** input type for inserting object relation for remote table "conversion_tasks" */
export type Conversion_Tasks_Obj_Rel_Insert_Input = {
  data: Conversion_Tasks_Insert_Input;
  on_conflict?: InputMaybe<Conversion_Tasks_On_Conflict>;
};

/** on conflict condition type for table "conversion_tasks" */
export type Conversion_Tasks_On_Conflict = {
  constraint: Conversion_Tasks_Constraint;
  update_columns: Array<Conversion_Tasks_Update_Column>;
  where?: InputMaybe<Conversion_Tasks_Bool_Exp>;
};

/** ordering options when selecting data from "conversion_tasks" */
export type Conversion_Tasks_Order_By = {
  conversion_response?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  resource_url?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  task_uuid?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "conversion_tasks" */
export type Conversion_Tasks_Pk_Columns_Input = {
  task_uuid: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Conversion_Tasks_Prepend_Input = {
  conversion_response?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "conversion_tasks" */
export enum Conversion_Tasks_Select_Column {
  /** column name */
  ConversionResponse = 'conversion_response',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  ResourceUrl = 'resource_url',
  /** column name */
  Status = 'status',
  /** column name */
  TaskUuid = 'task_uuid',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "conversion_tasks" */
export type Conversion_Tasks_Set_Input = {
  conversion_response?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  resource_url?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  task_uuid?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "conversion_tasks" */
export enum Conversion_Tasks_Update_Column {
  /** column name */
  ConversionResponse = 'conversion_response',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  ResourceUrl = 'resource_url',
  /** column name */
  Status = 'status',
  /** column name */
  TaskUuid = 'task_uuid',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "course_access_paths" */
export type Course_Access_Paths = {
  /** An object relationship */
  course: Courses;
  course_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  location: Locations;
  location_id: Scalars['String'];
  resource_path: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "course_access_paths" */
export type Course_Access_Paths_Aggregate = {
  aggregate?: Maybe<Course_Access_Paths_Aggregate_Fields>;
  nodes: Array<Course_Access_Paths>;
};

/** aggregate fields of "course_access_paths" */
export type Course_Access_Paths_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Course_Access_Paths_Max_Fields>;
  min?: Maybe<Course_Access_Paths_Min_Fields>;
};


/** aggregate fields of "course_access_paths" */
export type Course_Access_Paths_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Course_Access_Paths_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "course_access_paths" */
export type Course_Access_Paths_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Course_Access_Paths_Max_Order_By>;
  min?: InputMaybe<Course_Access_Paths_Min_Order_By>;
};

/** input type for inserting array relation for remote table "course_access_paths" */
export type Course_Access_Paths_Arr_Rel_Insert_Input = {
  data: Array<Course_Access_Paths_Insert_Input>;
  on_conflict?: InputMaybe<Course_Access_Paths_On_Conflict>;
};

/** Boolean expression to filter rows from the table "course_access_paths". All fields are combined with a logical 'AND'. */
export type Course_Access_Paths_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Course_Access_Paths_Bool_Exp>>>;
  _not?: InputMaybe<Course_Access_Paths_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Course_Access_Paths_Bool_Exp>>>;
  course?: InputMaybe<Courses_Bool_Exp>;
  course_id?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  location?: InputMaybe<Locations_Bool_Exp>;
  location_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "course_access_paths" */
export enum Course_Access_Paths_Constraint {
  /** unique or primary key constraint */
  CourseAccessPathsPk = 'course_access_paths_pk'
}

/** input type for inserting data into table "course_access_paths" */
export type Course_Access_Paths_Insert_Input = {
  course?: InputMaybe<Courses_Obj_Rel_Insert_Input>;
  course_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  location?: InputMaybe<Locations_Obj_Rel_Insert_Input>;
  location_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Course_Access_Paths_Max_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "course_access_paths" */
export type Course_Access_Paths_Max_Order_By = {
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Course_Access_Paths_Min_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "course_access_paths" */
export type Course_Access_Paths_Min_Order_By = {
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "course_access_paths" */
export type Course_Access_Paths_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Course_Access_Paths>;
};

/** input type for inserting object relation for remote table "course_access_paths" */
export type Course_Access_Paths_Obj_Rel_Insert_Input = {
  data: Course_Access_Paths_Insert_Input;
  on_conflict?: InputMaybe<Course_Access_Paths_On_Conflict>;
};

/** on conflict condition type for table "course_access_paths" */
export type Course_Access_Paths_On_Conflict = {
  constraint: Course_Access_Paths_Constraint;
  update_columns: Array<Course_Access_Paths_Update_Column>;
  where?: InputMaybe<Course_Access_Paths_Bool_Exp>;
};

/** ordering options when selecting data from "course_access_paths" */
export type Course_Access_Paths_Order_By = {
  course?: InputMaybe<Courses_Order_By>;
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  location?: InputMaybe<Locations_Order_By>;
  location_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "course_access_paths" */
export type Course_Access_Paths_Pk_Columns_Input = {
  course_id: Scalars['String'];
  location_id: Scalars['String'];
};

/** select columns of table "course_access_paths" */
export enum Course_Access_Paths_Select_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "course_access_paths" */
export type Course_Access_Paths_Set_Input = {
  course_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  location_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "course_access_paths" */
export enum Course_Access_Paths_Update_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "courses" */
export type Courses = {
  country?: Maybe<Scalars['String']>;
  /** An array relationship */
  course_access_paths: Array<Course_Access_Paths>;
  /** An aggregated array relationship */
  course_access_paths_aggregate: Course_Access_Paths_Aggregate;
  /** An array relationship */
  course_books: Array<Courses_Books>;
  /** An aggregated array relationship */
  course_books_aggregate: Courses_Books_Aggregate;
  /** An array relationship */
  course_classes: Array<Courses_Classes>;
  /** An aggregated array relationship */
  course_classes_aggregate: Courses_Classes_Aggregate;
  course_id: Scalars['String'];
  /** An array relationship */
  course_lessons: Array<Lessons>;
  /** An aggregated array relationship */
  course_lessons_aggregate: Lessons_Aggregate;
  course_type?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  icon?: Maybe<Scalars['String']>;
  /** An array relationship */
  lesson_groups: Array<Lesson_Groups>;
  /** An aggregated array relationship */
  lesson_groups_aggregate: Lesson_Groups_Aggregate;
  /** An array relationship */
  lesson_members: Array<Lesson_Members>;
  /** An aggregated array relationship */
  lesson_members_aggregate: Lesson_Members_Aggregate;
  /** An array relationship */
  lessons_courses: Array<Lessons_Courses>;
  /** An aggregated array relationship */
  lessons_courses_aggregate: Lessons_Courses_Aggregate;
  name: Scalars['String'];
  preset_study_plan_id?: Maybe<Scalars['String']>;
  resource_path: Scalars['String'];
  /** An object relationship */
  school: Schools;
  school_id: Scalars['Int'];
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  /** An array relationship */
  teacher: Array<Teacher_By_School_Id>;
  /** An aggregated array relationship */
  teacher_aggregate: Teacher_By_School_Id_Aggregate;
  teacher_ids?: Maybe<Scalars['_text']>;
  teaching_method?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "courses" */
export type CoursesCourse_Access_PathsArgs = {
  distinct_on?: InputMaybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Course_Access_Paths_Order_By>>;
  where?: InputMaybe<Course_Access_Paths_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesCourse_Access_Paths_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Course_Access_Paths_Order_By>>;
  where?: InputMaybe<Course_Access_Paths_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesCourse_BooksArgs = {
  distinct_on?: InputMaybe<Array<Courses_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Books_Order_By>>;
  where?: InputMaybe<Courses_Books_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesCourse_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Courses_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Books_Order_By>>;
  where?: InputMaybe<Courses_Books_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesCourse_ClassesArgs = {
  distinct_on?: InputMaybe<Array<Courses_Classes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Classes_Order_By>>;
  where?: InputMaybe<Courses_Classes_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesCourse_Classes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Courses_Classes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Classes_Order_By>>;
  where?: InputMaybe<Courses_Classes_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesCourse_LessonsArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Order_By>>;
  where?: InputMaybe<Lessons_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesCourse_Lessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Order_By>>;
  where?: InputMaybe<Lessons_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesLesson_GroupsArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Groups_Order_By>>;
  where?: InputMaybe<Lesson_Groups_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesLesson_Groups_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Groups_Order_By>>;
  where?: InputMaybe<Lesson_Groups_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesLesson_MembersArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Members_Order_By>>;
  where?: InputMaybe<Lesson_Members_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesLesson_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Members_Order_By>>;
  where?: InputMaybe<Lesson_Members_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesLessons_CoursesArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Courses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Courses_Order_By>>;
  where?: InputMaybe<Lessons_Courses_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesLessons_Courses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Courses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Courses_Order_By>>;
  where?: InputMaybe<Lessons_Courses_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesTeacherArgs = {
  distinct_on?: InputMaybe<Array<Teacher_By_School_Id_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_By_School_Id_Order_By>>;
  where?: InputMaybe<Teacher_By_School_Id_Bool_Exp>;
};


/** columns and relationships of "courses" */
export type CoursesTeacher_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_By_School_Id_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_By_School_Id_Order_By>>;
  where?: InputMaybe<Teacher_By_School_Id_Bool_Exp>;
};

/** aggregated selection of "courses" */
export type Courses_Aggregate = {
  aggregate?: Maybe<Courses_Aggregate_Fields>;
  nodes: Array<Courses>;
};

/** aggregate fields of "courses" */
export type Courses_Aggregate_Fields = {
  avg?: Maybe<Courses_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Courses_Max_Fields>;
  min?: Maybe<Courses_Min_Fields>;
  stddev?: Maybe<Courses_Stddev_Fields>;
  stddev_pop?: Maybe<Courses_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Courses_Stddev_Samp_Fields>;
  sum?: Maybe<Courses_Sum_Fields>;
  var_pop?: Maybe<Courses_Var_Pop_Fields>;
  var_samp?: Maybe<Courses_Var_Samp_Fields>;
  variance?: Maybe<Courses_Variance_Fields>;
};


/** aggregate fields of "courses" */
export type Courses_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Courses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "courses" */
export type Courses_Aggregate_Order_By = {
  avg?: InputMaybe<Courses_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Courses_Max_Order_By>;
  min?: InputMaybe<Courses_Min_Order_By>;
  stddev?: InputMaybe<Courses_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Courses_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Courses_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Courses_Sum_Order_By>;
  var_pop?: InputMaybe<Courses_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Courses_Var_Samp_Order_By>;
  variance?: InputMaybe<Courses_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "courses" */
export type Courses_Arr_Rel_Insert_Input = {
  data: Array<Courses_Insert_Input>;
  on_conflict?: InputMaybe<Courses_On_Conflict>;
};

/** aggregate avg on columns */
export type Courses_Avg_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "courses" */
export type Courses_Avg_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "courses_books" */
export type Courses_Books = {
  book_id: Scalars['String'];
  /** An array relationship */
  books: Array<Books>;
  /** An aggregated array relationship */
  books_aggregate: Books_Aggregate;
  /** An object relationship */
  course?: Maybe<Courses>;
  course_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "courses_books" */
export type Courses_BooksBooksArgs = {
  distinct_on?: InputMaybe<Array<Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Books_Order_By>>;
  where?: InputMaybe<Books_Bool_Exp>;
};


/** columns and relationships of "courses_books" */
export type Courses_BooksBooks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Books_Order_By>>;
  where?: InputMaybe<Books_Bool_Exp>;
};

/** aggregated selection of "courses_books" */
export type Courses_Books_Aggregate = {
  aggregate?: Maybe<Courses_Books_Aggregate_Fields>;
  nodes: Array<Courses_Books>;
};

/** aggregate fields of "courses_books" */
export type Courses_Books_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Courses_Books_Max_Fields>;
  min?: Maybe<Courses_Books_Min_Fields>;
};


/** aggregate fields of "courses_books" */
export type Courses_Books_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Courses_Books_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "courses_books" */
export type Courses_Books_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Courses_Books_Max_Order_By>;
  min?: InputMaybe<Courses_Books_Min_Order_By>;
};

/** input type for inserting array relation for remote table "courses_books" */
export type Courses_Books_Arr_Rel_Insert_Input = {
  data: Array<Courses_Books_Insert_Input>;
  on_conflict?: InputMaybe<Courses_Books_On_Conflict>;
};

/** Boolean expression to filter rows from the table "courses_books". All fields are combined with a logical 'AND'. */
export type Courses_Books_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Courses_Books_Bool_Exp>>>;
  _not?: InputMaybe<Courses_Books_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Courses_Books_Bool_Exp>>>;
  book_id?: InputMaybe<String_Comparison_Exp>;
  books?: InputMaybe<Books_Bool_Exp>;
  course?: InputMaybe<Courses_Bool_Exp>;
  course_id?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "courses_books" */
export enum Courses_Books_Constraint {
  /** unique or primary key constraint */
  CoursesBooksPk = 'courses_books_pk'
}

/** input type for inserting data into table "courses_books" */
export type Courses_Books_Insert_Input = {
  book_id?: InputMaybe<Scalars['String']>;
  books?: InputMaybe<Books_Arr_Rel_Insert_Input>;
  course?: InputMaybe<Courses_Obj_Rel_Insert_Input>;
  course_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Courses_Books_Max_Fields = {
  book_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "courses_books" */
export type Courses_Books_Max_Order_By = {
  book_id?: InputMaybe<Order_By>;
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Courses_Books_Min_Fields = {
  book_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "courses_books" */
export type Courses_Books_Min_Order_By = {
  book_id?: InputMaybe<Order_By>;
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "courses_books" */
export type Courses_Books_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Courses_Books>;
};

/** input type for inserting object relation for remote table "courses_books" */
export type Courses_Books_Obj_Rel_Insert_Input = {
  data: Courses_Books_Insert_Input;
  on_conflict?: InputMaybe<Courses_Books_On_Conflict>;
};

/** on conflict condition type for table "courses_books" */
export type Courses_Books_On_Conflict = {
  constraint: Courses_Books_Constraint;
  update_columns: Array<Courses_Books_Update_Column>;
  where?: InputMaybe<Courses_Books_Bool_Exp>;
};

/** ordering options when selecting data from "courses_books" */
export type Courses_Books_Order_By = {
  book_id?: InputMaybe<Order_By>;
  books_aggregate?: InputMaybe<Books_Aggregate_Order_By>;
  course?: InputMaybe<Courses_Order_By>;
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "courses_books" */
export type Courses_Books_Pk_Columns_Input = {
  book_id: Scalars['String'];
  course_id: Scalars['String'];
};

/** select columns of table "courses_books" */
export enum Courses_Books_Select_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "courses_books" */
export type Courses_Books_Set_Input = {
  book_id?: InputMaybe<Scalars['String']>;
  course_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "courses_books" */
export enum Courses_Books_Update_Column {
  /** column name */
  BookId = 'book_id',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** Boolean expression to filter rows from the table "courses". All fields are combined with a logical 'AND'. */
export type Courses_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Courses_Bool_Exp>>>;
  _not?: InputMaybe<Courses_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Courses_Bool_Exp>>>;
  country?: InputMaybe<String_Comparison_Exp>;
  course_access_paths?: InputMaybe<Course_Access_Paths_Bool_Exp>;
  course_books?: InputMaybe<Courses_Books_Bool_Exp>;
  course_classes?: InputMaybe<Courses_Classes_Bool_Exp>;
  course_id?: InputMaybe<String_Comparison_Exp>;
  course_lessons?: InputMaybe<Lessons_Bool_Exp>;
  course_type?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  display_order?: InputMaybe<Smallint_Comparison_Exp>;
  end_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  grade?: InputMaybe<Smallint_Comparison_Exp>;
  icon?: InputMaybe<String_Comparison_Exp>;
  lesson_groups?: InputMaybe<Lesson_Groups_Bool_Exp>;
  lesson_members?: InputMaybe<Lesson_Members_Bool_Exp>;
  lessons_courses?: InputMaybe<Lessons_Courses_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  preset_study_plan_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school?: InputMaybe<Schools_Bool_Exp>;
  school_id?: InputMaybe<Int_Comparison_Exp>;
  start_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  subject?: InputMaybe<String_Comparison_Exp>;
  teacher?: InputMaybe<Teacher_By_School_Id_Bool_Exp>;
  teacher_ids?: InputMaybe<_Text_Comparison_Exp>;
  teaching_method?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** columns and relationships of "courses_classes" */
export type Courses_Classes = {
  /** An object relationship */
  class?: Maybe<Classes>;
  class_id: Scalars['Int'];
  /** An object relationship */
  course?: Maybe<Courses>;
  course_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  members: Array<Class_Members>;
  /** An aggregated array relationship */
  members_aggregate: Class_Members_Aggregate;
  resource_path: Scalars['String'];
  status: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "courses_classes" */
export type Courses_ClassesMembersArgs = {
  distinct_on?: InputMaybe<Array<Class_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Members_Order_By>>;
  where?: InputMaybe<Class_Members_Bool_Exp>;
};


/** columns and relationships of "courses_classes" */
export type Courses_ClassesMembers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Class_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Members_Order_By>>;
  where?: InputMaybe<Class_Members_Bool_Exp>;
};

/** aggregated selection of "courses_classes" */
export type Courses_Classes_Aggregate = {
  aggregate?: Maybe<Courses_Classes_Aggregate_Fields>;
  nodes: Array<Courses_Classes>;
};

/** aggregate fields of "courses_classes" */
export type Courses_Classes_Aggregate_Fields = {
  avg?: Maybe<Courses_Classes_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Courses_Classes_Max_Fields>;
  min?: Maybe<Courses_Classes_Min_Fields>;
  stddev?: Maybe<Courses_Classes_Stddev_Fields>;
  stddev_pop?: Maybe<Courses_Classes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Courses_Classes_Stddev_Samp_Fields>;
  sum?: Maybe<Courses_Classes_Sum_Fields>;
  var_pop?: Maybe<Courses_Classes_Var_Pop_Fields>;
  var_samp?: Maybe<Courses_Classes_Var_Samp_Fields>;
  variance?: Maybe<Courses_Classes_Variance_Fields>;
};


/** aggregate fields of "courses_classes" */
export type Courses_Classes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Courses_Classes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "courses_classes" */
export type Courses_Classes_Aggregate_Order_By = {
  avg?: InputMaybe<Courses_Classes_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Courses_Classes_Max_Order_By>;
  min?: InputMaybe<Courses_Classes_Min_Order_By>;
  stddev?: InputMaybe<Courses_Classes_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Courses_Classes_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Courses_Classes_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Courses_Classes_Sum_Order_By>;
  var_pop?: InputMaybe<Courses_Classes_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Courses_Classes_Var_Samp_Order_By>;
  variance?: InputMaybe<Courses_Classes_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "courses_classes" */
export type Courses_Classes_Arr_Rel_Insert_Input = {
  data: Array<Courses_Classes_Insert_Input>;
  on_conflict?: InputMaybe<Courses_Classes_On_Conflict>;
};

/** aggregate avg on columns */
export type Courses_Classes_Avg_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "courses_classes" */
export type Courses_Classes_Avg_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "courses_classes". All fields are combined with a logical 'AND'. */
export type Courses_Classes_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Courses_Classes_Bool_Exp>>>;
  _not?: InputMaybe<Courses_Classes_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Courses_Classes_Bool_Exp>>>;
  class?: InputMaybe<Classes_Bool_Exp>;
  class_id?: InputMaybe<Int_Comparison_Exp>;
  course?: InputMaybe<Courses_Bool_Exp>;
  course_id?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  members?: InputMaybe<Class_Members_Bool_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "courses_classes" */
export enum Courses_Classes_Constraint {
  /** unique or primary key constraint */
  CoursesClassesPk = 'courses_classes_pk'
}

/** input type for incrementing integer column in table "courses_classes" */
export type Courses_Classes_Inc_Input = {
  class_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "courses_classes" */
export type Courses_Classes_Insert_Input = {
  class?: InputMaybe<Classes_Obj_Rel_Insert_Input>;
  class_id?: InputMaybe<Scalars['Int']>;
  course?: InputMaybe<Courses_Obj_Rel_Insert_Input>;
  course_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  members?: InputMaybe<Class_Members_Arr_Rel_Insert_Input>;
  resource_path?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Courses_Classes_Max_Fields = {
  class_id?: Maybe<Scalars['Int']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "courses_classes" */
export type Courses_Classes_Max_Order_By = {
  class_id?: InputMaybe<Order_By>;
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Courses_Classes_Min_Fields = {
  class_id?: Maybe<Scalars['Int']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "courses_classes" */
export type Courses_Classes_Min_Order_By = {
  class_id?: InputMaybe<Order_By>;
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "courses_classes" */
export type Courses_Classes_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Courses_Classes>;
};

/** input type for inserting object relation for remote table "courses_classes" */
export type Courses_Classes_Obj_Rel_Insert_Input = {
  data: Courses_Classes_Insert_Input;
  on_conflict?: InputMaybe<Courses_Classes_On_Conflict>;
};

/** on conflict condition type for table "courses_classes" */
export type Courses_Classes_On_Conflict = {
  constraint: Courses_Classes_Constraint;
  update_columns: Array<Courses_Classes_Update_Column>;
  where?: InputMaybe<Courses_Classes_Bool_Exp>;
};

/** ordering options when selecting data from "courses_classes" */
export type Courses_Classes_Order_By = {
  class?: InputMaybe<Classes_Order_By>;
  class_id?: InputMaybe<Order_By>;
  course?: InputMaybe<Courses_Order_By>;
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  members_aggregate?: InputMaybe<Class_Members_Aggregate_Order_By>;
  resource_path?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "courses_classes" */
export type Courses_Classes_Pk_Columns_Input = {
  class_id: Scalars['Int'];
  course_id: Scalars['String'];
};

/** select columns of table "courses_classes" */
export enum Courses_Classes_Select_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "courses_classes" */
export type Courses_Classes_Set_Input = {
  class_id?: InputMaybe<Scalars['Int']>;
  course_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Courses_Classes_Stddev_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "courses_classes" */
export type Courses_Classes_Stddev_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Courses_Classes_Stddev_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "courses_classes" */
export type Courses_Classes_Stddev_Pop_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Courses_Classes_Stddev_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "courses_classes" */
export type Courses_Classes_Stddev_Samp_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Courses_Classes_Sum_Fields = {
  class_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "courses_classes" */
export type Courses_Classes_Sum_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** update columns of table "courses_classes" */
export enum Courses_Classes_Update_Column {
  /** column name */
  ClassId = 'class_id',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Courses_Classes_Var_Pop_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "courses_classes" */
export type Courses_Classes_Var_Pop_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Courses_Classes_Var_Samp_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "courses_classes" */
export type Courses_Classes_Var_Samp_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Courses_Classes_Variance_Fields = {
  class_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "courses_classes" */
export type Courses_Classes_Variance_Order_By = {
  class_id?: InputMaybe<Order_By>;
};

/** unique or primary key constraints on table "courses" */
export enum Courses_Constraint {
  /** unique or primary key constraint */
  CoursesPk = 'courses_pk'
}

/** input type for incrementing integer column in table "courses" */
export type Courses_Inc_Input = {
  display_order?: InputMaybe<Scalars['smallint']>;
  grade?: InputMaybe<Scalars['smallint']>;
  school_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "courses" */
export type Courses_Insert_Input = {
  country?: InputMaybe<Scalars['String']>;
  course_access_paths?: InputMaybe<Course_Access_Paths_Arr_Rel_Insert_Input>;
  course_books?: InputMaybe<Courses_Books_Arr_Rel_Insert_Input>;
  course_classes?: InputMaybe<Courses_Classes_Arr_Rel_Insert_Input>;
  course_id?: InputMaybe<Scalars['String']>;
  course_lessons?: InputMaybe<Lessons_Arr_Rel_Insert_Input>;
  course_type?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  display_order?: InputMaybe<Scalars['smallint']>;
  end_date?: InputMaybe<Scalars['timestamptz']>;
  grade?: InputMaybe<Scalars['smallint']>;
  icon?: InputMaybe<Scalars['String']>;
  lesson_groups?: InputMaybe<Lesson_Groups_Arr_Rel_Insert_Input>;
  lesson_members?: InputMaybe<Lesson_Members_Arr_Rel_Insert_Input>;
  lessons_courses?: InputMaybe<Lessons_Courses_Arr_Rel_Insert_Input>;
  name?: InputMaybe<Scalars['String']>;
  preset_study_plan_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school?: InputMaybe<Schools_Obj_Rel_Insert_Input>;
  school_id?: InputMaybe<Scalars['Int']>;
  start_date?: InputMaybe<Scalars['timestamptz']>;
  status?: InputMaybe<Scalars['String']>;
  subject?: InputMaybe<Scalars['String']>;
  teacher_ids?: InputMaybe<Scalars['_text']>;
  teaching_method?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Courses_Max_Fields = {
  country?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  course_type?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  icon?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  teaching_method?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "courses" */
export type Courses_Max_Order_By = {
  country?: InputMaybe<Order_By>;
  course_id?: InputMaybe<Order_By>;
  course_type?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  icon?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  preset_study_plan_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  teaching_method?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Courses_Min_Fields = {
  country?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  course_type?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  icon?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  teaching_method?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "courses" */
export type Courses_Min_Order_By = {
  country?: InputMaybe<Order_By>;
  course_id?: InputMaybe<Order_By>;
  course_type?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  icon?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  preset_study_plan_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  teaching_method?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "courses" */
export type Courses_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Courses>;
};

/** input type for inserting object relation for remote table "courses" */
export type Courses_Obj_Rel_Insert_Input = {
  data: Courses_Insert_Input;
  on_conflict?: InputMaybe<Courses_On_Conflict>;
};

/** on conflict condition type for table "courses" */
export type Courses_On_Conflict = {
  constraint: Courses_Constraint;
  update_columns: Array<Courses_Update_Column>;
  where?: InputMaybe<Courses_Bool_Exp>;
};

/** ordering options when selecting data from "courses" */
export type Courses_Order_By = {
  country?: InputMaybe<Order_By>;
  course_access_paths_aggregate?: InputMaybe<Course_Access_Paths_Aggregate_Order_By>;
  course_books_aggregate?: InputMaybe<Courses_Books_Aggregate_Order_By>;
  course_classes_aggregate?: InputMaybe<Courses_Classes_Aggregate_Order_By>;
  course_id?: InputMaybe<Order_By>;
  course_lessons_aggregate?: InputMaybe<Lessons_Aggregate_Order_By>;
  course_type?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  icon?: InputMaybe<Order_By>;
  lesson_groups_aggregate?: InputMaybe<Lesson_Groups_Aggregate_Order_By>;
  lesson_members_aggregate?: InputMaybe<Lesson_Members_Aggregate_Order_By>;
  lessons_courses_aggregate?: InputMaybe<Lessons_Courses_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  preset_study_plan_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school?: InputMaybe<Schools_Order_By>;
  school_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  teacher_aggregate?: InputMaybe<Teacher_By_School_Id_Aggregate_Order_By>;
  teacher_ids?: InputMaybe<Order_By>;
  teaching_method?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "courses" */
export type Courses_Pk_Columns_Input = {
  course_id: Scalars['String'];
};

/** select columns of table "courses" */
export enum Courses_Select_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CourseType = 'course_type',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  Grade = 'grade',
  /** column name */
  Icon = 'icon',
  /** column name */
  Name = 'name',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Status = 'status',
  /** column name */
  Subject = 'subject',
  /** column name */
  TeacherIds = 'teacher_ids',
  /** column name */
  TeachingMethod = 'teaching_method',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "courses" */
export type Courses_Set_Input = {
  country?: InputMaybe<Scalars['String']>;
  course_id?: InputMaybe<Scalars['String']>;
  course_type?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  display_order?: InputMaybe<Scalars['smallint']>;
  end_date?: InputMaybe<Scalars['timestamptz']>;
  grade?: InputMaybe<Scalars['smallint']>;
  icon?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  preset_study_plan_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['Int']>;
  start_date?: InputMaybe<Scalars['timestamptz']>;
  status?: InputMaybe<Scalars['String']>;
  subject?: InputMaybe<Scalars['String']>;
  teacher_ids?: InputMaybe<Scalars['_text']>;
  teaching_method?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Courses_Stddev_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "courses" */
export type Courses_Stddev_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Courses_Stddev_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "courses" */
export type Courses_Stddev_Pop_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Courses_Stddev_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "courses" */
export type Courses_Stddev_Samp_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Courses_Sum_Fields = {
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "courses" */
export type Courses_Sum_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** update columns of table "courses" */
export enum Courses_Update_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CourseType = 'course_type',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  Grade = 'grade',
  /** column name */
  Icon = 'icon',
  /** column name */
  Name = 'name',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Status = 'status',
  /** column name */
  Subject = 'subject',
  /** column name */
  TeacherIds = 'teacher_ids',
  /** column name */
  TeachingMethod = 'teaching_method',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Courses_Var_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "courses" */
export type Courses_Var_Pop_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Courses_Var_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "courses" */
export type Courses_Var_Samp_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Courses_Variance_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "courses" */
export type Courses_Variance_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** expression to compare columns of type date. All fields are combined with logical 'AND'. */
export type Date_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['date']>;
  _gt?: InputMaybe<Scalars['date']>;
  _gte?: InputMaybe<Scalars['date']>;
  _in?: InputMaybe<Array<Scalars['date']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['date']>;
  _lte?: InputMaybe<Scalars['date']>;
  _neq?: InputMaybe<Scalars['date']>;
  _nin?: InputMaybe<Array<Scalars['date']>>;
};

/** columns and relationships of "districts" */
export type Districts = {
  /** An object relationship */
  city: Cities;
  city_id: Scalars['Int'];
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  district_id: Scalars['Int'];
  name: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  /** An array relationship */
  schools: Array<Schools>;
  /** An aggregated array relationship */
  schools_aggregate: Schools_Aggregate;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "districts" */
export type DistrictsSchoolsArgs = {
  distinct_on?: InputMaybe<Array<Schools_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Schools_Order_By>>;
  where?: InputMaybe<Schools_Bool_Exp>;
};


/** columns and relationships of "districts" */
export type DistrictsSchools_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Schools_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Schools_Order_By>>;
  where?: InputMaybe<Schools_Bool_Exp>;
};

/** aggregated selection of "districts" */
export type Districts_Aggregate = {
  aggregate?: Maybe<Districts_Aggregate_Fields>;
  nodes: Array<Districts>;
};

/** aggregate fields of "districts" */
export type Districts_Aggregate_Fields = {
  avg?: Maybe<Districts_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Districts_Max_Fields>;
  min?: Maybe<Districts_Min_Fields>;
  stddev?: Maybe<Districts_Stddev_Fields>;
  stddev_pop?: Maybe<Districts_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Districts_Stddev_Samp_Fields>;
  sum?: Maybe<Districts_Sum_Fields>;
  var_pop?: Maybe<Districts_Var_Pop_Fields>;
  var_samp?: Maybe<Districts_Var_Samp_Fields>;
  variance?: Maybe<Districts_Variance_Fields>;
};


/** aggregate fields of "districts" */
export type Districts_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Districts_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "districts" */
export type Districts_Aggregate_Order_By = {
  avg?: InputMaybe<Districts_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Districts_Max_Order_By>;
  min?: InputMaybe<Districts_Min_Order_By>;
  stddev?: InputMaybe<Districts_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Districts_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Districts_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Districts_Sum_Order_By>;
  var_pop?: InputMaybe<Districts_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Districts_Var_Samp_Order_By>;
  variance?: InputMaybe<Districts_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "districts" */
export type Districts_Arr_Rel_Insert_Input = {
  data: Array<Districts_Insert_Input>;
  on_conflict?: InputMaybe<Districts_On_Conflict>;
};

/** aggregate avg on columns */
export type Districts_Avg_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "districts" */
export type Districts_Avg_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "districts". All fields are combined with a logical 'AND'. */
export type Districts_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Districts_Bool_Exp>>>;
  _not?: InputMaybe<Districts_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Districts_Bool_Exp>>>;
  city?: InputMaybe<Cities_Bool_Exp>;
  city_id?: InputMaybe<Int_Comparison_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  district_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  schools?: InputMaybe<Schools_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "districts" */
export enum Districts_Constraint {
  /** unique or primary key constraint */
  DistrictPk = 'district_pk',
  /** unique or primary key constraint */
  DistrictUn = 'district_un'
}

/** input type for incrementing integer column in table "districts" */
export type Districts_Inc_Input = {
  city_id?: InputMaybe<Scalars['Int']>;
  district_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "districts" */
export type Districts_Insert_Input = {
  city?: InputMaybe<Cities_Obj_Rel_Insert_Input>;
  city_id?: InputMaybe<Scalars['Int']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  district_id?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  schools?: InputMaybe<Schools_Arr_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Districts_Max_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  district_id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "districts" */
export type Districts_Max_Order_By = {
  city_id?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Districts_Min_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  district_id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "districts" */
export type Districts_Min_Order_By = {
  city_id?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "districts" */
export type Districts_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Districts>;
};

/** input type for inserting object relation for remote table "districts" */
export type Districts_Obj_Rel_Insert_Input = {
  data: Districts_Insert_Input;
  on_conflict?: InputMaybe<Districts_On_Conflict>;
};

/** on conflict condition type for table "districts" */
export type Districts_On_Conflict = {
  constraint: Districts_Constraint;
  update_columns: Array<Districts_Update_Column>;
  where?: InputMaybe<Districts_Bool_Exp>;
};

/** ordering options when selecting data from "districts" */
export type Districts_Order_By = {
  city?: InputMaybe<Cities_Order_By>;
  city_id?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  schools_aggregate?: InputMaybe<Schools_Aggregate_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "districts" */
export type Districts_Pk_Columns_Input = {
  district_id: Scalars['Int'];
};

/** select columns of table "districts" */
export enum Districts_Select_Column {
  /** column name */
  CityId = 'city_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DistrictId = 'district_id',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "districts" */
export type Districts_Set_Input = {
  city_id?: InputMaybe<Scalars['Int']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  district_id?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Districts_Stddev_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "districts" */
export type Districts_Stddev_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Districts_Stddev_Pop_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "districts" */
export type Districts_Stddev_Pop_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Districts_Stddev_Samp_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "districts" */
export type Districts_Stddev_Samp_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Districts_Sum_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  district_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "districts" */
export type Districts_Sum_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
};

/** update columns of table "districts" */
export enum Districts_Update_Column {
  /** column name */
  CityId = 'city_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DistrictId = 'district_id',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Districts_Var_Pop_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "districts" */
export type Districts_Var_Pop_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Districts_Var_Samp_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "districts" */
export type Districts_Var_Samp_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Districts_Variance_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "districts" */
export type Districts_Variance_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
};

export type Find_Quiz_By_Lo_Id_Args = {
  id?: InputMaybe<Scalars['String']>;
};

export type Find_Teacher_By_School_Id_Args = {
  school_id?: InputMaybe<Scalars['Int']>;
};

/** expression to compare columns of type frequency. All fields are combined with logical 'AND'. */
export type Frequency_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['frequency']>;
  _gt?: InputMaybe<Scalars['frequency']>;
  _gte?: InputMaybe<Scalars['frequency']>;
  _in?: InputMaybe<Array<Scalars['frequency']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['frequency']>;
  _lte?: InputMaybe<Scalars['frequency']>;
  _neq?: InputMaybe<Scalars['frequency']>;
  _nin?: InputMaybe<Array<Scalars['frequency']>>;
};

export type Get_Locations_Active_By_Course_Id_Args = {
  course?: InputMaybe<Scalars['String']>;
};

export type Get_Locations_Lowest_Level_Args = {
  location_limit?: InputMaybe<Scalars['Int']>;
  location_offset?: InputMaybe<Scalars['Int']>;
  location_search_name?: InputMaybe<Scalars['String']>;
};

export type Get_Partner_Dynamic_Form_Field_Values_By_Student_Args = {
  report_id?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['String']>;
};

export type Get_Previous_Report_Of_Student_Args = {
  report_course_id?: InputMaybe<Scalars['String']>;
  report_id?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['String']>;
};

export type Get_Previous_Report_Of_Student_V2_Args = {
  report_course_id?: InputMaybe<Scalars['String']>;
  report_id?: InputMaybe<Scalars['String']>;
  report_lesson_id?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['String']>;
};

export type Get_Previous_Report_Of_Student_V3_Args = {
  report_course_id?: InputMaybe<Scalars['String']>;
  report_id?: InputMaybe<Scalars['String']>;
  report_lesson_id?: InputMaybe<Scalars['String']>;
  report_user_id?: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "granted_role" */
export type Granted_Role = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  granted_role_access_paths: Array<Granted_Role_Access_Path>;
  /** An aggregated array relationship */
  granted_role_access_paths_aggregate: Granted_Role_Access_Path_Aggregate;
  granted_role_id: Scalars['String'];
  resource_path: Scalars['String'];
  /** An object relationship */
  role: Role;
  role_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user_group: User_Group;
  user_group_id: Scalars['String'];
};


/** columns and relationships of "granted_role" */
export type Granted_RoleGranted_Role_Access_PathsArgs = {
  distinct_on?: InputMaybe<Array<Granted_Role_Access_Path_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Granted_Role_Access_Path_Order_By>>;
  where?: InputMaybe<Granted_Role_Access_Path_Bool_Exp>;
};


/** columns and relationships of "granted_role" */
export type Granted_RoleGranted_Role_Access_Paths_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Granted_Role_Access_Path_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Granted_Role_Access_Path_Order_By>>;
  where?: InputMaybe<Granted_Role_Access_Path_Bool_Exp>;
};

/** columns and relationships of "granted_role_access_path" */
export type Granted_Role_Access_Path = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  granted_role: Granted_Role;
  granted_role_id: Scalars['String'];
  /** An object relationship */
  location: Locations;
  location_id: Scalars['String'];
  resource_path: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "granted_role_access_path" */
export type Granted_Role_Access_Path_Aggregate = {
  aggregate?: Maybe<Granted_Role_Access_Path_Aggregate_Fields>;
  nodes: Array<Granted_Role_Access_Path>;
};

/** aggregate fields of "granted_role_access_path" */
export type Granted_Role_Access_Path_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Granted_Role_Access_Path_Max_Fields>;
  min?: Maybe<Granted_Role_Access_Path_Min_Fields>;
};


/** aggregate fields of "granted_role_access_path" */
export type Granted_Role_Access_Path_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Granted_Role_Access_Path_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "granted_role_access_path" */
export type Granted_Role_Access_Path_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Granted_Role_Access_Path_Max_Order_By>;
  min?: InputMaybe<Granted_Role_Access_Path_Min_Order_By>;
};

/** input type for inserting array relation for remote table "granted_role_access_path" */
export type Granted_Role_Access_Path_Arr_Rel_Insert_Input = {
  data: Array<Granted_Role_Access_Path_Insert_Input>;
  on_conflict?: InputMaybe<Granted_Role_Access_Path_On_Conflict>;
};

/** Boolean expression to filter rows from the table "granted_role_access_path". All fields are combined with a logical 'AND'. */
export type Granted_Role_Access_Path_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Granted_Role_Access_Path_Bool_Exp>>>;
  _not?: InputMaybe<Granted_Role_Access_Path_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Granted_Role_Access_Path_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  granted_role?: InputMaybe<Granted_Role_Bool_Exp>;
  granted_role_id?: InputMaybe<String_Comparison_Exp>;
  location?: InputMaybe<Locations_Bool_Exp>;
  location_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "granted_role_access_path" */
export enum Granted_Role_Access_Path_Constraint {
  /** unique or primary key constraint */
  PkGrantedRoleAccessPath = 'pk__granted_role_access_path'
}

/** input type for inserting data into table "granted_role_access_path" */
export type Granted_Role_Access_Path_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  granted_role?: InputMaybe<Granted_Role_Obj_Rel_Insert_Input>;
  granted_role_id?: InputMaybe<Scalars['String']>;
  location?: InputMaybe<Locations_Obj_Rel_Insert_Input>;
  location_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Granted_Role_Access_Path_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  granted_role_id?: Maybe<Scalars['String']>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "granted_role_access_path" */
export type Granted_Role_Access_Path_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  granted_role_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Granted_Role_Access_Path_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  granted_role_id?: Maybe<Scalars['String']>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "granted_role_access_path" */
export type Granted_Role_Access_Path_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  granted_role_id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "granted_role_access_path" */
export type Granted_Role_Access_Path_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Granted_Role_Access_Path>;
};

/** input type for inserting object relation for remote table "granted_role_access_path" */
export type Granted_Role_Access_Path_Obj_Rel_Insert_Input = {
  data: Granted_Role_Access_Path_Insert_Input;
  on_conflict?: InputMaybe<Granted_Role_Access_Path_On_Conflict>;
};

/** on conflict condition type for table "granted_role_access_path" */
export type Granted_Role_Access_Path_On_Conflict = {
  constraint: Granted_Role_Access_Path_Constraint;
  update_columns: Array<Granted_Role_Access_Path_Update_Column>;
  where?: InputMaybe<Granted_Role_Access_Path_Bool_Exp>;
};

/** ordering options when selecting data from "granted_role_access_path" */
export type Granted_Role_Access_Path_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  granted_role?: InputMaybe<Granted_Role_Order_By>;
  granted_role_id?: InputMaybe<Order_By>;
  location?: InputMaybe<Locations_Order_By>;
  location_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "granted_role_access_path" */
export type Granted_Role_Access_Path_Pk_Columns_Input = {
  granted_role_id: Scalars['String'];
  location_id: Scalars['String'];
};

/** select columns of table "granted_role_access_path" */
export enum Granted_Role_Access_Path_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  GrantedRoleId = 'granted_role_id',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "granted_role_access_path" */
export type Granted_Role_Access_Path_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  granted_role_id?: InputMaybe<Scalars['String']>;
  location_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "granted_role_access_path" */
export enum Granted_Role_Access_Path_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  GrantedRoleId = 'granted_role_id',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregated selection of "granted_role" */
export type Granted_Role_Aggregate = {
  aggregate?: Maybe<Granted_Role_Aggregate_Fields>;
  nodes: Array<Granted_Role>;
};

/** aggregate fields of "granted_role" */
export type Granted_Role_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Granted_Role_Max_Fields>;
  min?: Maybe<Granted_Role_Min_Fields>;
};


/** aggregate fields of "granted_role" */
export type Granted_Role_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Granted_Role_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "granted_role" */
export type Granted_Role_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Granted_Role_Max_Order_By>;
  min?: InputMaybe<Granted_Role_Min_Order_By>;
};

/** input type for inserting array relation for remote table "granted_role" */
export type Granted_Role_Arr_Rel_Insert_Input = {
  data: Array<Granted_Role_Insert_Input>;
  on_conflict?: InputMaybe<Granted_Role_On_Conflict>;
};

/** Boolean expression to filter rows from the table "granted_role". All fields are combined with a logical 'AND'. */
export type Granted_Role_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Granted_Role_Bool_Exp>>>;
  _not?: InputMaybe<Granted_Role_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Granted_Role_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  granted_role_access_paths?: InputMaybe<Granted_Role_Access_Path_Bool_Exp>;
  granted_role_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  role?: InputMaybe<Role_Bool_Exp>;
  role_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user_group?: InputMaybe<User_Group_Bool_Exp>;
  user_group_id?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "granted_role" */
export enum Granted_Role_Constraint {
  /** unique or primary key constraint */
  GrantedRoleGrantedRoleIdKey = 'granted_role_granted_role_id_key',
  /** unique or primary key constraint */
  PkGrantedRole = 'pk__granted_role'
}

/** input type for inserting data into table "granted_role" */
export type Granted_Role_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  granted_role_access_paths?: InputMaybe<Granted_Role_Access_Path_Arr_Rel_Insert_Input>;
  granted_role_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  role?: InputMaybe<Role_Obj_Rel_Insert_Input>;
  role_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_group?: InputMaybe<User_Group_Obj_Rel_Insert_Input>;
  user_group_id?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Granted_Role_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  granted_role_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  role_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "granted_role" */
export type Granted_Role_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  granted_role_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_group_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Granted_Role_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  granted_role_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  role_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "granted_role" */
export type Granted_Role_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  granted_role_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_group_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "granted_role" */
export type Granted_Role_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Granted_Role>;
};

/** input type for inserting object relation for remote table "granted_role" */
export type Granted_Role_Obj_Rel_Insert_Input = {
  data: Granted_Role_Insert_Input;
  on_conflict?: InputMaybe<Granted_Role_On_Conflict>;
};

/** on conflict condition type for table "granted_role" */
export type Granted_Role_On_Conflict = {
  constraint: Granted_Role_Constraint;
  update_columns: Array<Granted_Role_Update_Column>;
  where?: InputMaybe<Granted_Role_Bool_Exp>;
};

/** ordering options when selecting data from "granted_role" */
export type Granted_Role_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  granted_role_access_paths_aggregate?: InputMaybe<Granted_Role_Access_Path_Aggregate_Order_By>;
  granted_role_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  role?: InputMaybe<Role_Order_By>;
  role_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_group?: InputMaybe<User_Group_Order_By>;
  user_group_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "granted_role" */
export type Granted_Role_Pk_Columns_Input = {
  granted_role_id: Scalars['String'];
};

/** select columns of table "granted_role" */
export enum Granted_Role_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  GrantedRoleId = 'granted_role_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  RoleId = 'role_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserGroupId = 'user_group_id'
}

/** input type for updating data in table "granted_role" */
export type Granted_Role_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  granted_role_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  role_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_group_id?: InputMaybe<Scalars['String']>;
};

/** update columns of table "granted_role" */
export enum Granted_Role_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  GrantedRoleId = 'granted_role_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  RoleId = 'role_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserGroupId = 'user_group_id'
}

/** columns and relationships of "hub_tours" */
export type Hub_Tours = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  hub: Hubs;
  hub_id: Scalars['Int'];
  parent_phone_number?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status: Scalars['String'];
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user?: Maybe<Users>;
};

/** aggregated selection of "hub_tours" */
export type Hub_Tours_Aggregate = {
  aggregate?: Maybe<Hub_Tours_Aggregate_Fields>;
  nodes: Array<Hub_Tours>;
};

/** aggregate fields of "hub_tours" */
export type Hub_Tours_Aggregate_Fields = {
  avg?: Maybe<Hub_Tours_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Hub_Tours_Max_Fields>;
  min?: Maybe<Hub_Tours_Min_Fields>;
  stddev?: Maybe<Hub_Tours_Stddev_Fields>;
  stddev_pop?: Maybe<Hub_Tours_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Hub_Tours_Stddev_Samp_Fields>;
  sum?: Maybe<Hub_Tours_Sum_Fields>;
  var_pop?: Maybe<Hub_Tours_Var_Pop_Fields>;
  var_samp?: Maybe<Hub_Tours_Var_Samp_Fields>;
  variance?: Maybe<Hub_Tours_Variance_Fields>;
};


/** aggregate fields of "hub_tours" */
export type Hub_Tours_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Hub_Tours_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "hub_tours" */
export type Hub_Tours_Aggregate_Order_By = {
  avg?: InputMaybe<Hub_Tours_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Hub_Tours_Max_Order_By>;
  min?: InputMaybe<Hub_Tours_Min_Order_By>;
  stddev?: InputMaybe<Hub_Tours_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Hub_Tours_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Hub_Tours_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Hub_Tours_Sum_Order_By>;
  var_pop?: InputMaybe<Hub_Tours_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Hub_Tours_Var_Samp_Order_By>;
  variance?: InputMaybe<Hub_Tours_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "hub_tours" */
export type Hub_Tours_Arr_Rel_Insert_Input = {
  data: Array<Hub_Tours_Insert_Input>;
  on_conflict?: InputMaybe<Hub_Tours_On_Conflict>;
};

/** aggregate avg on columns */
export type Hub_Tours_Avg_Fields = {
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "hub_tours" */
export type Hub_Tours_Avg_Order_By = {
  hub_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "hub_tours". All fields are combined with a logical 'AND'. */
export type Hub_Tours_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Hub_Tours_Bool_Exp>>>;
  _not?: InputMaybe<Hub_Tours_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Hub_Tours_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  hub?: InputMaybe<Hubs_Bool_Exp>;
  hub_id?: InputMaybe<Int_Comparison_Exp>;
  parent_phone_number?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  student?: InputMaybe<Students_Bool_Exp>;
  student_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "hub_tours" */
export enum Hub_Tours_Constraint {
  /** unique or primary key constraint */
  HubTourPk = 'hub_tour_pk'
}

/** input type for incrementing integer column in table "hub_tours" */
export type Hub_Tours_Inc_Input = {
  hub_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "hub_tours" */
export type Hub_Tours_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  hub?: InputMaybe<Hubs_Obj_Rel_Insert_Input>;
  hub_id?: InputMaybe<Scalars['Int']>;
  parent_phone_number?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  student?: InputMaybe<Students_Obj_Rel_Insert_Input>;
  student_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Hub_Tours_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  hub_id?: Maybe<Scalars['Int']>;
  parent_phone_number?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "hub_tours" */
export type Hub_Tours_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  hub_id?: InputMaybe<Order_By>;
  parent_phone_number?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Hub_Tours_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  hub_id?: Maybe<Scalars['Int']>;
  parent_phone_number?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "hub_tours" */
export type Hub_Tours_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  hub_id?: InputMaybe<Order_By>;
  parent_phone_number?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "hub_tours" */
export type Hub_Tours_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Hub_Tours>;
};

/** input type for inserting object relation for remote table "hub_tours" */
export type Hub_Tours_Obj_Rel_Insert_Input = {
  data: Hub_Tours_Insert_Input;
  on_conflict?: InputMaybe<Hub_Tours_On_Conflict>;
};

/** on conflict condition type for table "hub_tours" */
export type Hub_Tours_On_Conflict = {
  constraint: Hub_Tours_Constraint;
  update_columns: Array<Hub_Tours_Update_Column>;
  where?: InputMaybe<Hub_Tours_Bool_Exp>;
};

/** ordering options when selecting data from "hub_tours" */
export type Hub_Tours_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  hub?: InputMaybe<Hubs_Order_By>;
  hub_id?: InputMaybe<Order_By>;
  parent_phone_number?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  student?: InputMaybe<Students_Order_By>;
  student_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
};

/** primary key columns input for table: "hub_tours" */
export type Hub_Tours_Pk_Columns_Input = {
  hub_id: Scalars['Int'];
  student_id: Scalars['String'];
};

/** select columns of table "hub_tours" */
export enum Hub_Tours_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  HubId = 'hub_id',
  /** column name */
  ParentPhoneNumber = 'parent_phone_number',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "hub_tours" */
export type Hub_Tours_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  hub_id?: InputMaybe<Scalars['Int']>;
  parent_phone_number?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  student_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Hub_Tours_Stddev_Fields = {
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "hub_tours" */
export type Hub_Tours_Stddev_Order_By = {
  hub_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Hub_Tours_Stddev_Pop_Fields = {
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "hub_tours" */
export type Hub_Tours_Stddev_Pop_Order_By = {
  hub_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Hub_Tours_Stddev_Samp_Fields = {
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "hub_tours" */
export type Hub_Tours_Stddev_Samp_Order_By = {
  hub_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Hub_Tours_Sum_Fields = {
  hub_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "hub_tours" */
export type Hub_Tours_Sum_Order_By = {
  hub_id?: InputMaybe<Order_By>;
};

/** update columns of table "hub_tours" */
export enum Hub_Tours_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  HubId = 'hub_id',
  /** column name */
  ParentPhoneNumber = 'parent_phone_number',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Hub_Tours_Var_Pop_Fields = {
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "hub_tours" */
export type Hub_Tours_Var_Pop_Order_By = {
  hub_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Hub_Tours_Var_Samp_Fields = {
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "hub_tours" */
export type Hub_Tours_Var_Samp_Order_By = {
  hub_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Hub_Tours_Variance_Fields = {
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "hub_tours" */
export type Hub_Tours_Variance_Order_By = {
  hub_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "hubs" */
export type Hubs = {
  address?: Maybe<Scalars['String']>;
  /** An object relationship */
  city?: Maybe<Cities>;
  city_id?: Maybe<Scalars['Int']>;
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  /** An object relationship */
  district?: Maybe<Districts>;
  district_id?: Maybe<Scalars['Int']>;
  events?: Maybe<Scalars['jsonb']>;
  hub_id: Scalars['Int'];
  /** An array relationship */
  hub_tours: Array<Hub_Tours>;
  /** An aggregated array relationship */
  hub_tours_aggregate: Hub_Tours_Aggregate;
  images?: Maybe<Scalars['_text']>;
  name: Scalars['String'];
  opening_hours?: Maybe<Scalars['_text']>;
  phone_number?: Maybe<Scalars['String']>;
  point?: Maybe<Scalars['point']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "hubs" */
export type HubsEventsArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "hubs" */
export type HubsHub_ToursArgs = {
  distinct_on?: InputMaybe<Array<Hub_Tours_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Hub_Tours_Order_By>>;
  where?: InputMaybe<Hub_Tours_Bool_Exp>;
};


/** columns and relationships of "hubs" */
export type HubsHub_Tours_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Hub_Tours_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Hub_Tours_Order_By>>;
  where?: InputMaybe<Hub_Tours_Bool_Exp>;
};

/** aggregated selection of "hubs" */
export type Hubs_Aggregate = {
  aggregate?: Maybe<Hubs_Aggregate_Fields>;
  nodes: Array<Hubs>;
};

/** aggregate fields of "hubs" */
export type Hubs_Aggregate_Fields = {
  avg?: Maybe<Hubs_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Hubs_Max_Fields>;
  min?: Maybe<Hubs_Min_Fields>;
  stddev?: Maybe<Hubs_Stddev_Fields>;
  stddev_pop?: Maybe<Hubs_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Hubs_Stddev_Samp_Fields>;
  sum?: Maybe<Hubs_Sum_Fields>;
  var_pop?: Maybe<Hubs_Var_Pop_Fields>;
  var_samp?: Maybe<Hubs_Var_Samp_Fields>;
  variance?: Maybe<Hubs_Variance_Fields>;
};


/** aggregate fields of "hubs" */
export type Hubs_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Hubs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "hubs" */
export type Hubs_Aggregate_Order_By = {
  avg?: InputMaybe<Hubs_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Hubs_Max_Order_By>;
  min?: InputMaybe<Hubs_Min_Order_By>;
  stddev?: InputMaybe<Hubs_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Hubs_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Hubs_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Hubs_Sum_Order_By>;
  var_pop?: InputMaybe<Hubs_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Hubs_Var_Samp_Order_By>;
  variance?: InputMaybe<Hubs_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Hubs_Append_Input = {
  events?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "hubs" */
export type Hubs_Arr_Rel_Insert_Input = {
  data: Array<Hubs_Insert_Input>;
  on_conflict?: InputMaybe<Hubs_On_Conflict>;
};

/** aggregate avg on columns */
export type Hubs_Avg_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "hubs" */
export type Hubs_Avg_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  hub_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "hubs". All fields are combined with a logical 'AND'. */
export type Hubs_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Hubs_Bool_Exp>>>;
  _not?: InputMaybe<Hubs_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Hubs_Bool_Exp>>>;
  address?: InputMaybe<String_Comparison_Exp>;
  city?: InputMaybe<Cities_Bool_Exp>;
  city_id?: InputMaybe<Int_Comparison_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  district?: InputMaybe<Districts_Bool_Exp>;
  district_id?: InputMaybe<Int_Comparison_Exp>;
  events?: InputMaybe<Jsonb_Comparison_Exp>;
  hub_id?: InputMaybe<Int_Comparison_Exp>;
  hub_tours?: InputMaybe<Hub_Tours_Bool_Exp>;
  images?: InputMaybe<_Text_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  opening_hours?: InputMaybe<_Text_Comparison_Exp>;
  phone_number?: InputMaybe<String_Comparison_Exp>;
  point?: InputMaybe<Point_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "hubs" */
export enum Hubs_Constraint {
  /** unique or primary key constraint */
  HubPk = 'hub_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Hubs_Delete_At_Path_Input = {
  events?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Hubs_Delete_Elem_Input = {
  events?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Hubs_Delete_Key_Input = {
  events?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "hubs" */
export type Hubs_Inc_Input = {
  city_id?: InputMaybe<Scalars['Int']>;
  district_id?: InputMaybe<Scalars['Int']>;
  hub_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "hubs" */
export type Hubs_Insert_Input = {
  address?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Cities_Obj_Rel_Insert_Input>;
  city_id?: InputMaybe<Scalars['Int']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  district?: InputMaybe<Districts_Obj_Rel_Insert_Input>;
  district_id?: InputMaybe<Scalars['Int']>;
  events?: InputMaybe<Scalars['jsonb']>;
  hub_id?: InputMaybe<Scalars['Int']>;
  hub_tours?: InputMaybe<Hub_Tours_Arr_Rel_Insert_Input>;
  images?: InputMaybe<Scalars['_text']>;
  name?: InputMaybe<Scalars['String']>;
  opening_hours?: InputMaybe<Scalars['_text']>;
  phone_number?: InputMaybe<Scalars['String']>;
  point?: InputMaybe<Scalars['point']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Hubs_Max_Fields = {
  address?: Maybe<Scalars['String']>;
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  district_id?: Maybe<Scalars['Int']>;
  hub_id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "hubs" */
export type Hubs_Max_Order_By = {
  address?: InputMaybe<Order_By>;
  city_id?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  hub_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  phone_number?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Hubs_Min_Fields = {
  address?: Maybe<Scalars['String']>;
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  district_id?: Maybe<Scalars['Int']>;
  hub_id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "hubs" */
export type Hubs_Min_Order_By = {
  address?: InputMaybe<Order_By>;
  city_id?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  hub_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  phone_number?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "hubs" */
export type Hubs_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Hubs>;
};

/** input type for inserting object relation for remote table "hubs" */
export type Hubs_Obj_Rel_Insert_Input = {
  data: Hubs_Insert_Input;
  on_conflict?: InputMaybe<Hubs_On_Conflict>;
};

/** on conflict condition type for table "hubs" */
export type Hubs_On_Conflict = {
  constraint: Hubs_Constraint;
  update_columns: Array<Hubs_Update_Column>;
  where?: InputMaybe<Hubs_Bool_Exp>;
};

/** ordering options when selecting data from "hubs" */
export type Hubs_Order_By = {
  address?: InputMaybe<Order_By>;
  city?: InputMaybe<Cities_Order_By>;
  city_id?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  district?: InputMaybe<Districts_Order_By>;
  district_id?: InputMaybe<Order_By>;
  events?: InputMaybe<Order_By>;
  hub_id?: InputMaybe<Order_By>;
  hub_tours_aggregate?: InputMaybe<Hub_Tours_Aggregate_Order_By>;
  images?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  opening_hours?: InputMaybe<Order_By>;
  phone_number?: InputMaybe<Order_By>;
  point?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "hubs" */
export type Hubs_Pk_Columns_Input = {
  hub_id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Hubs_Prepend_Input = {
  events?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "hubs" */
export enum Hubs_Select_Column {
  /** column name */
  Address = 'address',
  /** column name */
  CityId = 'city_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  DistrictId = 'district_id',
  /** column name */
  Events = 'events',
  /** column name */
  HubId = 'hub_id',
  /** column name */
  Images = 'images',
  /** column name */
  Name = 'name',
  /** column name */
  OpeningHours = 'opening_hours',
  /** column name */
  PhoneNumber = 'phone_number',
  /** column name */
  Point = 'point',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "hubs" */
export type Hubs_Set_Input = {
  address?: InputMaybe<Scalars['String']>;
  city_id?: InputMaybe<Scalars['Int']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  district_id?: InputMaybe<Scalars['Int']>;
  events?: InputMaybe<Scalars['jsonb']>;
  hub_id?: InputMaybe<Scalars['Int']>;
  images?: InputMaybe<Scalars['_text']>;
  name?: InputMaybe<Scalars['String']>;
  opening_hours?: InputMaybe<Scalars['_text']>;
  phone_number?: InputMaybe<Scalars['String']>;
  point?: InputMaybe<Scalars['point']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Hubs_Stddev_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "hubs" */
export type Hubs_Stddev_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  hub_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Hubs_Stddev_Pop_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "hubs" */
export type Hubs_Stddev_Pop_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  hub_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Hubs_Stddev_Samp_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "hubs" */
export type Hubs_Stddev_Samp_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  hub_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Hubs_Sum_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  district_id?: Maybe<Scalars['Int']>;
  hub_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "hubs" */
export type Hubs_Sum_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  hub_id?: InputMaybe<Order_By>;
};

/** update columns of table "hubs" */
export enum Hubs_Update_Column {
  /** column name */
  Address = 'address',
  /** column name */
  CityId = 'city_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  DistrictId = 'district_id',
  /** column name */
  Events = 'events',
  /** column name */
  HubId = 'hub_id',
  /** column name */
  Images = 'images',
  /** column name */
  Name = 'name',
  /** column name */
  OpeningHours = 'opening_hours',
  /** column name */
  PhoneNumber = 'phone_number',
  /** column name */
  Point = 'point',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Hubs_Var_Pop_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "hubs" */
export type Hubs_Var_Pop_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  hub_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Hubs_Var_Samp_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "hubs" */
export type Hubs_Var_Samp_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  hub_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Hubs_Variance_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  hub_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "hubs" */
export type Hubs_Variance_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  hub_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "info_notification_msgs" */
export type Info_Notification_Msgs = {
  content?: Maybe<Scalars['jsonb']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  info_notifications: Array<Info_Notifications>;
  /** An aggregated array relationship */
  info_notifications_aggregate: Info_Notifications_Aggregate;
  media_ids?: Maybe<Scalars['_text']>;
  notification_msg_id: Scalars['String'];
  resource_path: Scalars['String'];
  title: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "info_notification_msgs" */
export type Info_Notification_MsgsContentArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "info_notification_msgs" */
export type Info_Notification_MsgsInfo_NotificationsArgs = {
  distinct_on?: InputMaybe<Array<Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notifications_Order_By>>;
  where?: InputMaybe<Info_Notifications_Bool_Exp>;
};


/** columns and relationships of "info_notification_msgs" */
export type Info_Notification_MsgsInfo_Notifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notifications_Order_By>>;
  where?: InputMaybe<Info_Notifications_Bool_Exp>;
};

/** aggregated selection of "info_notification_msgs" */
export type Info_Notification_Msgs_Aggregate = {
  aggregate?: Maybe<Info_Notification_Msgs_Aggregate_Fields>;
  nodes: Array<Info_Notification_Msgs>;
};

/** aggregate fields of "info_notification_msgs" */
export type Info_Notification_Msgs_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Info_Notification_Msgs_Max_Fields>;
  min?: Maybe<Info_Notification_Msgs_Min_Fields>;
};


/** aggregate fields of "info_notification_msgs" */
export type Info_Notification_Msgs_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Info_Notification_Msgs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "info_notification_msgs" */
export type Info_Notification_Msgs_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Info_Notification_Msgs_Max_Order_By>;
  min?: InputMaybe<Info_Notification_Msgs_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Info_Notification_Msgs_Append_Input = {
  content?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "info_notification_msgs" */
export type Info_Notification_Msgs_Arr_Rel_Insert_Input = {
  data: Array<Info_Notification_Msgs_Insert_Input>;
  on_conflict?: InputMaybe<Info_Notification_Msgs_On_Conflict>;
};

/** Boolean expression to filter rows from the table "info_notification_msgs". All fields are combined with a logical 'AND'. */
export type Info_Notification_Msgs_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Info_Notification_Msgs_Bool_Exp>>>;
  _not?: InputMaybe<Info_Notification_Msgs_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Info_Notification_Msgs_Bool_Exp>>>;
  content?: InputMaybe<Jsonb_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  info_notifications?: InputMaybe<Info_Notifications_Bool_Exp>;
  media_ids?: InputMaybe<_Text_Comparison_Exp>;
  notification_msg_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "info_notification_msgs" */
export enum Info_Notification_Msgs_Constraint {
  /** unique or primary key constraint */
  PkInfoNotificationMsgs = 'pk__info_notification_msgs'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Info_Notification_Msgs_Delete_At_Path_Input = {
  content?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Info_Notification_Msgs_Delete_Elem_Input = {
  content?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Info_Notification_Msgs_Delete_Key_Input = {
  content?: InputMaybe<Scalars['String']>;
};

/** input type for inserting data into table "info_notification_msgs" */
export type Info_Notification_Msgs_Insert_Input = {
  content?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  info_notifications?: InputMaybe<Info_Notifications_Arr_Rel_Insert_Input>;
  media_ids?: InputMaybe<Scalars['_text']>;
  notification_msg_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Info_Notification_Msgs_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  notification_msg_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "info_notification_msgs" */
export type Info_Notification_Msgs_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  notification_msg_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Info_Notification_Msgs_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  notification_msg_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "info_notification_msgs" */
export type Info_Notification_Msgs_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  notification_msg_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "info_notification_msgs" */
export type Info_Notification_Msgs_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Info_Notification_Msgs>;
};

/** input type for inserting object relation for remote table "info_notification_msgs" */
export type Info_Notification_Msgs_Obj_Rel_Insert_Input = {
  data: Info_Notification_Msgs_Insert_Input;
  on_conflict?: InputMaybe<Info_Notification_Msgs_On_Conflict>;
};

/** on conflict condition type for table "info_notification_msgs" */
export type Info_Notification_Msgs_On_Conflict = {
  constraint: Info_Notification_Msgs_Constraint;
  update_columns: Array<Info_Notification_Msgs_Update_Column>;
  where?: InputMaybe<Info_Notification_Msgs_Bool_Exp>;
};

/** ordering options when selecting data from "info_notification_msgs" */
export type Info_Notification_Msgs_Order_By = {
  content?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  info_notifications_aggregate?: InputMaybe<Info_Notifications_Aggregate_Order_By>;
  media_ids?: InputMaybe<Order_By>;
  notification_msg_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "info_notification_msgs" */
export type Info_Notification_Msgs_Pk_Columns_Input = {
  notification_msg_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Info_Notification_Msgs_Prepend_Input = {
  content?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "info_notification_msgs" */
export enum Info_Notification_Msgs_Select_Column {
  /** column name */
  Content = 'content',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  MediaIds = 'media_ids',
  /** column name */
  NotificationMsgId = 'notification_msg_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "info_notification_msgs" */
export type Info_Notification_Msgs_Set_Input = {
  content?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  media_ids?: InputMaybe<Scalars['_text']>;
  notification_msg_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "info_notification_msgs" */
export enum Info_Notification_Msgs_Update_Column {
  /** column name */
  Content = 'content',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  MediaIds = 'media_ids',
  /** column name */
  NotificationMsgId = 'notification_msg_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "info_notifications" */
export type Info_Notifications = {
  created_at: Scalars['timestamptz'];
  created_user_id?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  editor_id?: Maybe<Scalars['String']>;
  event?: Maybe<Scalars['String']>;
  /** An object relationship */
  info_notification_msg?: Maybe<Info_Notification_Msgs>;
  is_important?: Maybe<Scalars['Boolean']>;
  notification_id: Scalars['String'];
  notification_msg_id?: Maybe<Scalars['String']>;
  owner: Scalars['Int'];
  /** An object relationship */
  questionnaire?: Maybe<Questionnaires>;
  questionnaire_id?: Maybe<Scalars['String']>;
  receiver_ids?: Maybe<Scalars['_text']>;
  resource_path: Scalars['String'];
  scheduled_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  school: Schools;
  /** An object relationship */
  school_admin?: Maybe<School_Admins>;
  sent_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  target_groups?: Maybe<Scalars['jsonb']>;
  type: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An array relationship */
  users_info_notifications: Array<Users_Info_Notifications>;
  /** An aggregated array relationship */
  users_info_notifications_aggregate: Users_Info_Notifications_Aggregate;
};


/** columns and relationships of "info_notifications" */
export type Info_NotificationsDataArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "info_notifications" */
export type Info_NotificationsTarget_GroupsArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "info_notifications" */
export type Info_NotificationsUsers_Info_NotificationsArgs = {
  distinct_on?: InputMaybe<Array<Users_Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Info_Notifications_Order_By>>;
  where?: InputMaybe<Users_Info_Notifications_Bool_Exp>;
};


/** columns and relationships of "info_notifications" */
export type Info_NotificationsUsers_Info_Notifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Users_Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Info_Notifications_Order_By>>;
  where?: InputMaybe<Users_Info_Notifications_Bool_Exp>;
};

/** aggregated selection of "info_notifications" */
export type Info_Notifications_Aggregate = {
  aggregate?: Maybe<Info_Notifications_Aggregate_Fields>;
  nodes: Array<Info_Notifications>;
};

/** aggregate fields of "info_notifications" */
export type Info_Notifications_Aggregate_Fields = {
  avg?: Maybe<Info_Notifications_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Info_Notifications_Max_Fields>;
  min?: Maybe<Info_Notifications_Min_Fields>;
  stddev?: Maybe<Info_Notifications_Stddev_Fields>;
  stddev_pop?: Maybe<Info_Notifications_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Info_Notifications_Stddev_Samp_Fields>;
  sum?: Maybe<Info_Notifications_Sum_Fields>;
  var_pop?: Maybe<Info_Notifications_Var_Pop_Fields>;
  var_samp?: Maybe<Info_Notifications_Var_Samp_Fields>;
  variance?: Maybe<Info_Notifications_Variance_Fields>;
};


/** aggregate fields of "info_notifications" */
export type Info_Notifications_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Info_Notifications_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "info_notifications" */
export type Info_Notifications_Aggregate_Order_By = {
  avg?: InputMaybe<Info_Notifications_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Info_Notifications_Max_Order_By>;
  min?: InputMaybe<Info_Notifications_Min_Order_By>;
  stddev?: InputMaybe<Info_Notifications_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Info_Notifications_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Info_Notifications_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Info_Notifications_Sum_Order_By>;
  var_pop?: InputMaybe<Info_Notifications_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Info_Notifications_Var_Samp_Order_By>;
  variance?: InputMaybe<Info_Notifications_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Info_Notifications_Append_Input = {
  data?: InputMaybe<Scalars['jsonb']>;
  target_groups?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "info_notifications" */
export type Info_Notifications_Arr_Rel_Insert_Input = {
  data: Array<Info_Notifications_Insert_Input>;
  on_conflict?: InputMaybe<Info_Notifications_On_Conflict>;
};

/** aggregate avg on columns */
export type Info_Notifications_Avg_Fields = {
  owner?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "info_notifications" */
export type Info_Notifications_Avg_Order_By = {
  owner?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "info_notifications". All fields are combined with a logical 'AND'. */
export type Info_Notifications_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Info_Notifications_Bool_Exp>>>;
  _not?: InputMaybe<Info_Notifications_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Info_Notifications_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  created_user_id?: InputMaybe<String_Comparison_Exp>;
  data?: InputMaybe<Jsonb_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  editor_id?: InputMaybe<String_Comparison_Exp>;
  event?: InputMaybe<String_Comparison_Exp>;
  info_notification_msg?: InputMaybe<Info_Notification_Msgs_Bool_Exp>;
  is_important?: InputMaybe<Boolean_Comparison_Exp>;
  notification_id?: InputMaybe<String_Comparison_Exp>;
  notification_msg_id?: InputMaybe<String_Comparison_Exp>;
  owner?: InputMaybe<Int_Comparison_Exp>;
  questionnaire?: InputMaybe<Questionnaires_Bool_Exp>;
  questionnaire_id?: InputMaybe<String_Comparison_Exp>;
  receiver_ids?: InputMaybe<_Text_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  scheduled_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  school?: InputMaybe<Schools_Bool_Exp>;
  school_admin?: InputMaybe<School_Admins_Bool_Exp>;
  sent_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  target_groups?: InputMaybe<Jsonb_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  users_info_notifications?: InputMaybe<Users_Info_Notifications_Bool_Exp>;
};

/** unique or primary key constraints on table "info_notifications" */
export enum Info_Notifications_Constraint {
  /** unique or primary key constraint */
  PkInfoNotifications = 'pk__info_notifications'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Info_Notifications_Delete_At_Path_Input = {
  data?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  target_groups?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Info_Notifications_Delete_Elem_Input = {
  data?: InputMaybe<Scalars['Int']>;
  target_groups?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Info_Notifications_Delete_Key_Input = {
  data?: InputMaybe<Scalars['String']>;
  target_groups?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "info_notifications" */
export type Info_Notifications_Inc_Input = {
  owner?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "info_notifications" */
export type Info_Notifications_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_user_id?: InputMaybe<Scalars['String']>;
  data?: InputMaybe<Scalars['jsonb']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  editor_id?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<Scalars['String']>;
  info_notification_msg?: InputMaybe<Info_Notification_Msgs_Obj_Rel_Insert_Input>;
  is_important?: InputMaybe<Scalars['Boolean']>;
  notification_id?: InputMaybe<Scalars['String']>;
  notification_msg_id?: InputMaybe<Scalars['String']>;
  owner?: InputMaybe<Scalars['Int']>;
  questionnaire?: InputMaybe<Questionnaires_Obj_Rel_Insert_Input>;
  questionnaire_id?: InputMaybe<Scalars['String']>;
  receiver_ids?: InputMaybe<Scalars['_text']>;
  resource_path?: InputMaybe<Scalars['String']>;
  scheduled_at?: InputMaybe<Scalars['timestamptz']>;
  school?: InputMaybe<Schools_Obj_Rel_Insert_Input>;
  school_admin?: InputMaybe<School_Admins_Obj_Rel_Insert_Input>;
  sent_at?: InputMaybe<Scalars['timestamptz']>;
  status?: InputMaybe<Scalars['String']>;
  target_groups?: InputMaybe<Scalars['jsonb']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  users_info_notifications?: InputMaybe<Users_Info_Notifications_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Info_Notifications_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  created_user_id?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  editor_id?: Maybe<Scalars['String']>;
  event?: Maybe<Scalars['String']>;
  notification_id?: Maybe<Scalars['String']>;
  notification_msg_id?: Maybe<Scalars['String']>;
  owner?: Maybe<Scalars['Int']>;
  questionnaire_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduled_at?: Maybe<Scalars['timestamptz']>;
  sent_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "info_notifications" */
export type Info_Notifications_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  created_user_id?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  editor_id?: InputMaybe<Order_By>;
  event?: InputMaybe<Order_By>;
  notification_id?: InputMaybe<Order_By>;
  notification_msg_id?: InputMaybe<Order_By>;
  owner?: InputMaybe<Order_By>;
  questionnaire_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  scheduled_at?: InputMaybe<Order_By>;
  sent_at?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Info_Notifications_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  created_user_id?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  editor_id?: Maybe<Scalars['String']>;
  event?: Maybe<Scalars['String']>;
  notification_id?: Maybe<Scalars['String']>;
  notification_msg_id?: Maybe<Scalars['String']>;
  owner?: Maybe<Scalars['Int']>;
  questionnaire_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduled_at?: Maybe<Scalars['timestamptz']>;
  sent_at?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "info_notifications" */
export type Info_Notifications_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  created_user_id?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  editor_id?: InputMaybe<Order_By>;
  event?: InputMaybe<Order_By>;
  notification_id?: InputMaybe<Order_By>;
  notification_msg_id?: InputMaybe<Order_By>;
  owner?: InputMaybe<Order_By>;
  questionnaire_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  scheduled_at?: InputMaybe<Order_By>;
  sent_at?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "info_notifications" */
export type Info_Notifications_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Info_Notifications>;
};

/** input type for inserting object relation for remote table "info_notifications" */
export type Info_Notifications_Obj_Rel_Insert_Input = {
  data: Info_Notifications_Insert_Input;
  on_conflict?: InputMaybe<Info_Notifications_On_Conflict>;
};

/** on conflict condition type for table "info_notifications" */
export type Info_Notifications_On_Conflict = {
  constraint: Info_Notifications_Constraint;
  update_columns: Array<Info_Notifications_Update_Column>;
  where?: InputMaybe<Info_Notifications_Bool_Exp>;
};

/** ordering options when selecting data from "info_notifications" */
export type Info_Notifications_Order_By = {
  created_at?: InputMaybe<Order_By>;
  created_user_id?: InputMaybe<Order_By>;
  data?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  editor_id?: InputMaybe<Order_By>;
  event?: InputMaybe<Order_By>;
  info_notification_msg?: InputMaybe<Info_Notification_Msgs_Order_By>;
  is_important?: InputMaybe<Order_By>;
  notification_id?: InputMaybe<Order_By>;
  notification_msg_id?: InputMaybe<Order_By>;
  owner?: InputMaybe<Order_By>;
  questionnaire?: InputMaybe<Questionnaires_Order_By>;
  questionnaire_id?: InputMaybe<Order_By>;
  receiver_ids?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  scheduled_at?: InputMaybe<Order_By>;
  school?: InputMaybe<Schools_Order_By>;
  school_admin?: InputMaybe<School_Admins_Order_By>;
  sent_at?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  target_groups?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  users_info_notifications_aggregate?: InputMaybe<Users_Info_Notifications_Aggregate_Order_By>;
};

/** primary key columns input for table: "info_notifications" */
export type Info_Notifications_Pk_Columns_Input = {
  notification_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Info_Notifications_Prepend_Input = {
  data?: InputMaybe<Scalars['jsonb']>;
  target_groups?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "info_notifications" */
export enum Info_Notifications_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreatedUserId = 'created_user_id',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EditorId = 'editor_id',
  /** column name */
  Event = 'event',
  /** column name */
  IsImportant = 'is_important',
  /** column name */
  NotificationId = 'notification_id',
  /** column name */
  NotificationMsgId = 'notification_msg_id',
  /** column name */
  Owner = 'owner',
  /** column name */
  QuestionnaireId = 'questionnaire_id',
  /** column name */
  ReceiverIds = 'receiver_ids',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  ScheduledAt = 'scheduled_at',
  /** column name */
  SentAt = 'sent_at',
  /** column name */
  Status = 'status',
  /** column name */
  TargetGroups = 'target_groups',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "info_notifications" */
export type Info_Notifications_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_user_id?: InputMaybe<Scalars['String']>;
  data?: InputMaybe<Scalars['jsonb']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  editor_id?: InputMaybe<Scalars['String']>;
  event?: InputMaybe<Scalars['String']>;
  is_important?: InputMaybe<Scalars['Boolean']>;
  notification_id?: InputMaybe<Scalars['String']>;
  notification_msg_id?: InputMaybe<Scalars['String']>;
  owner?: InputMaybe<Scalars['Int']>;
  questionnaire_id?: InputMaybe<Scalars['String']>;
  receiver_ids?: InputMaybe<Scalars['_text']>;
  resource_path?: InputMaybe<Scalars['String']>;
  scheduled_at?: InputMaybe<Scalars['timestamptz']>;
  sent_at?: InputMaybe<Scalars['timestamptz']>;
  status?: InputMaybe<Scalars['String']>;
  target_groups?: InputMaybe<Scalars['jsonb']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Info_Notifications_Stddev_Fields = {
  owner?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "info_notifications" */
export type Info_Notifications_Stddev_Order_By = {
  owner?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Info_Notifications_Stddev_Pop_Fields = {
  owner?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "info_notifications" */
export type Info_Notifications_Stddev_Pop_Order_By = {
  owner?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Info_Notifications_Stddev_Samp_Fields = {
  owner?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "info_notifications" */
export type Info_Notifications_Stddev_Samp_Order_By = {
  owner?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Info_Notifications_Sum_Fields = {
  owner?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "info_notifications" */
export type Info_Notifications_Sum_Order_By = {
  owner?: InputMaybe<Order_By>;
};

/** columns and relationships of "info_notifications_tags" */
export type Info_Notifications_Tags = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  notification_id: Scalars['String'];
  notification_tag_id: Scalars['String'];
  resource_path: Scalars['String'];
  tag_id: Scalars['String'];
  /** An object relationship */
  tags: Tags;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "info_notifications_tags" */
export type Info_Notifications_Tags_Aggregate = {
  aggregate?: Maybe<Info_Notifications_Tags_Aggregate_Fields>;
  nodes: Array<Info_Notifications_Tags>;
};

/** aggregate fields of "info_notifications_tags" */
export type Info_Notifications_Tags_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Info_Notifications_Tags_Max_Fields>;
  min?: Maybe<Info_Notifications_Tags_Min_Fields>;
};


/** aggregate fields of "info_notifications_tags" */
export type Info_Notifications_Tags_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Info_Notifications_Tags_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "info_notifications_tags" */
export type Info_Notifications_Tags_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Info_Notifications_Tags_Max_Order_By>;
  min?: InputMaybe<Info_Notifications_Tags_Min_Order_By>;
};

/** input type for inserting array relation for remote table "info_notifications_tags" */
export type Info_Notifications_Tags_Arr_Rel_Insert_Input = {
  data: Array<Info_Notifications_Tags_Insert_Input>;
  on_conflict?: InputMaybe<Info_Notifications_Tags_On_Conflict>;
};

/** Boolean expression to filter rows from the table "info_notifications_tags". All fields are combined with a logical 'AND'. */
export type Info_Notifications_Tags_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Info_Notifications_Tags_Bool_Exp>>>;
  _not?: InputMaybe<Info_Notifications_Tags_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Info_Notifications_Tags_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  notification_id?: InputMaybe<String_Comparison_Exp>;
  notification_tag_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  tag_id?: InputMaybe<String_Comparison_Exp>;
  tags?: InputMaybe<Tags_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "info_notifications_tags" */
export enum Info_Notifications_Tags_Constraint {
  /** unique or primary key constraint */
  PkNotificationsTags = 'pk__notifications_tags'
}

/** input type for inserting data into table "info_notifications_tags" */
export type Info_Notifications_Tags_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  notification_id?: InputMaybe<Scalars['String']>;
  notification_tag_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  tag_id?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Tags_Obj_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Info_Notifications_Tags_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  notification_id?: Maybe<Scalars['String']>;
  notification_tag_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  tag_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "info_notifications_tags" */
export type Info_Notifications_Tags_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  notification_id?: InputMaybe<Order_By>;
  notification_tag_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Info_Notifications_Tags_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  notification_id?: Maybe<Scalars['String']>;
  notification_tag_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  tag_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "info_notifications_tags" */
export type Info_Notifications_Tags_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  notification_id?: InputMaybe<Order_By>;
  notification_tag_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "info_notifications_tags" */
export type Info_Notifications_Tags_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Info_Notifications_Tags>;
};

/** input type for inserting object relation for remote table "info_notifications_tags" */
export type Info_Notifications_Tags_Obj_Rel_Insert_Input = {
  data: Info_Notifications_Tags_Insert_Input;
  on_conflict?: InputMaybe<Info_Notifications_Tags_On_Conflict>;
};

/** on conflict condition type for table "info_notifications_tags" */
export type Info_Notifications_Tags_On_Conflict = {
  constraint: Info_Notifications_Tags_Constraint;
  update_columns: Array<Info_Notifications_Tags_Update_Column>;
  where?: InputMaybe<Info_Notifications_Tags_Bool_Exp>;
};

/** ordering options when selecting data from "info_notifications_tags" */
export type Info_Notifications_Tags_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  notification_id?: InputMaybe<Order_By>;
  notification_tag_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  tags?: InputMaybe<Tags_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "info_notifications_tags" */
export type Info_Notifications_Tags_Pk_Columns_Input = {
  notification_tag_id: Scalars['String'];
};

/** select columns of table "info_notifications_tags" */
export enum Info_Notifications_Tags_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  NotificationId = 'notification_id',
  /** column name */
  NotificationTagId = 'notification_tag_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TagId = 'tag_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "info_notifications_tags" */
export type Info_Notifications_Tags_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  notification_id?: InputMaybe<Scalars['String']>;
  notification_tag_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  tag_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "info_notifications_tags" */
export enum Info_Notifications_Tags_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  NotificationId = 'notification_id',
  /** column name */
  NotificationTagId = 'notification_tag_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TagId = 'tag_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** update columns of table "info_notifications" */
export enum Info_Notifications_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreatedUserId = 'created_user_id',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EditorId = 'editor_id',
  /** column name */
  Event = 'event',
  /** column name */
  IsImportant = 'is_important',
  /** column name */
  NotificationId = 'notification_id',
  /** column name */
  NotificationMsgId = 'notification_msg_id',
  /** column name */
  Owner = 'owner',
  /** column name */
  QuestionnaireId = 'questionnaire_id',
  /** column name */
  ReceiverIds = 'receiver_ids',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  ScheduledAt = 'scheduled_at',
  /** column name */
  SentAt = 'sent_at',
  /** column name */
  Status = 'status',
  /** column name */
  TargetGroups = 'target_groups',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Info_Notifications_Var_Pop_Fields = {
  owner?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "info_notifications" */
export type Info_Notifications_Var_Pop_Order_By = {
  owner?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Info_Notifications_Var_Samp_Fields = {
  owner?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "info_notifications" */
export type Info_Notifications_Var_Samp_Order_By = {
  owner?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Info_Notifications_Variance_Fields = {
  owner?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "info_notifications" */
export type Info_Notifications_Variance_Order_By = {
  owner?: InputMaybe<Order_By>;
};

/** expression to compare columns of type jsonb. All fields are combined with logical 'AND'. */
export type Jsonb_Comparison_Exp = {
  /** is the column contained in the given json value */
  _contained_in?: InputMaybe<Scalars['jsonb']>;
  /** does the column contain the given json value at the top level */
  _contains?: InputMaybe<Scalars['jsonb']>;
  _eq?: InputMaybe<Scalars['jsonb']>;
  _gt?: InputMaybe<Scalars['jsonb']>;
  _gte?: InputMaybe<Scalars['jsonb']>;
  /** does the string exist as a top-level key in the column */
  _has_key?: InputMaybe<Scalars['String']>;
  /** do all of these strings exist as top-level keys in the column */
  _has_keys_all?: InputMaybe<Array<Scalars['String']>>;
  /** do any of these strings exist as top-level keys in the column */
  _has_keys_any?: InputMaybe<Array<Scalars['String']>>;
  _in?: InputMaybe<Array<Scalars['jsonb']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['jsonb']>;
  _lte?: InputMaybe<Scalars['jsonb']>;
  _neq?: InputMaybe<Scalars['jsonb']>;
  _nin?: InputMaybe<Array<Scalars['jsonb']>>;
};

/** columns and relationships of "learning_objectives" */
export type Learning_Objectives = {
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  /** An object relationship */
  learning_objective?: Maybe<Learning_Objectives>;
  /** An array relationship */
  learning_objectives: Array<Learning_Objectives>;
  /** An aggregated array relationship */
  learning_objectives_aggregate: Learning_Objectives_Aggregate;
  lo_id: Scalars['String'];
  master_lo_id?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  prerequisites?: Maybe<Scalars['_text']>;
  /** An array relationship */
  quiz_sets: Array<Quiz_Sets>;
  /** An aggregated array relationship */
  quiz_sets_aggregate: Quiz_Sets_Aggregate;
  /** An array relationship */
  quizsets: Array<Quizsets>;
  /** An aggregated array relationship */
  quizsets_aggregate: Quizsets_Aggregate;
  resource_path: Scalars['String'];
  /** An object relationship */
  school: Schools;
  school_id: Scalars['Int'];
  study_guide?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  /** An object relationship */
  topic?: Maybe<Topics>;
  topic_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  video?: Maybe<Scalars['String']>;
  video_script?: Maybe<Scalars['String']>;
};


/** columns and relationships of "learning_objectives" */
export type Learning_ObjectivesLearning_ObjectivesArgs = {
  distinct_on?: InputMaybe<Array<Learning_Objectives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Learning_Objectives_Order_By>>;
  where?: InputMaybe<Learning_Objectives_Bool_Exp>;
};


/** columns and relationships of "learning_objectives" */
export type Learning_ObjectivesLearning_Objectives_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Learning_Objectives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Learning_Objectives_Order_By>>;
  where?: InputMaybe<Learning_Objectives_Bool_Exp>;
};


/** columns and relationships of "learning_objectives" */
export type Learning_ObjectivesQuiz_SetsArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Sets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Sets_Order_By>>;
  where?: InputMaybe<Quiz_Sets_Bool_Exp>;
};


/** columns and relationships of "learning_objectives" */
export type Learning_ObjectivesQuiz_Sets_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Sets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Sets_Order_By>>;
  where?: InputMaybe<Quiz_Sets_Bool_Exp>;
};


/** columns and relationships of "learning_objectives" */
export type Learning_ObjectivesQuizsetsArgs = {
  distinct_on?: InputMaybe<Array<Quizsets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizsets_Order_By>>;
  where?: InputMaybe<Quizsets_Bool_Exp>;
};


/** columns and relationships of "learning_objectives" */
export type Learning_ObjectivesQuizsets_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Quizsets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizsets_Order_By>>;
  where?: InputMaybe<Quizsets_Bool_Exp>;
};

/** aggregated selection of "learning_objectives" */
export type Learning_Objectives_Aggregate = {
  aggregate?: Maybe<Learning_Objectives_Aggregate_Fields>;
  nodes: Array<Learning_Objectives>;
};

/** aggregate fields of "learning_objectives" */
export type Learning_Objectives_Aggregate_Fields = {
  avg?: Maybe<Learning_Objectives_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Learning_Objectives_Max_Fields>;
  min?: Maybe<Learning_Objectives_Min_Fields>;
  stddev?: Maybe<Learning_Objectives_Stddev_Fields>;
  stddev_pop?: Maybe<Learning_Objectives_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Learning_Objectives_Stddev_Samp_Fields>;
  sum?: Maybe<Learning_Objectives_Sum_Fields>;
  var_pop?: Maybe<Learning_Objectives_Var_Pop_Fields>;
  var_samp?: Maybe<Learning_Objectives_Var_Samp_Fields>;
  variance?: Maybe<Learning_Objectives_Variance_Fields>;
};


/** aggregate fields of "learning_objectives" */
export type Learning_Objectives_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Learning_Objectives_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "learning_objectives" */
export type Learning_Objectives_Aggregate_Order_By = {
  avg?: InputMaybe<Learning_Objectives_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Learning_Objectives_Max_Order_By>;
  min?: InputMaybe<Learning_Objectives_Min_Order_By>;
  stddev?: InputMaybe<Learning_Objectives_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Learning_Objectives_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Learning_Objectives_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Learning_Objectives_Sum_Order_By>;
  var_pop?: InputMaybe<Learning_Objectives_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Learning_Objectives_Var_Samp_Order_By>;
  variance?: InputMaybe<Learning_Objectives_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "learning_objectives" */
export type Learning_Objectives_Arr_Rel_Insert_Input = {
  data: Array<Learning_Objectives_Insert_Input>;
  on_conflict?: InputMaybe<Learning_Objectives_On_Conflict>;
};

/** aggregate avg on columns */
export type Learning_Objectives_Avg_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "learning_objectives" */
export type Learning_Objectives_Avg_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "learning_objectives". All fields are combined with a logical 'AND'. */
export type Learning_Objectives_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Learning_Objectives_Bool_Exp>>>;
  _not?: InputMaybe<Learning_Objectives_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Learning_Objectives_Bool_Exp>>>;
  copied_from?: InputMaybe<String_Comparison_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  display_order?: InputMaybe<Smallint_Comparison_Exp>;
  grade?: InputMaybe<Smallint_Comparison_Exp>;
  learning_objective?: InputMaybe<Learning_Objectives_Bool_Exp>;
  learning_objectives?: InputMaybe<Learning_Objectives_Bool_Exp>;
  lo_id?: InputMaybe<String_Comparison_Exp>;
  master_lo_id?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  prerequisites?: InputMaybe<_Text_Comparison_Exp>;
  quiz_sets?: InputMaybe<Quiz_Sets_Bool_Exp>;
  quizsets?: InputMaybe<Quizsets_Bool_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school?: InputMaybe<Schools_Bool_Exp>;
  school_id?: InputMaybe<Int_Comparison_Exp>;
  study_guide?: InputMaybe<String_Comparison_Exp>;
  subject?: InputMaybe<String_Comparison_Exp>;
  topic?: InputMaybe<Topics_Bool_Exp>;
  topic_id?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  video?: InputMaybe<String_Comparison_Exp>;
  video_script?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "learning_objectives" */
export enum Learning_Objectives_Constraint {
  /** unique or primary key constraint */
  LearningObjectivesPk = 'learning_objectives_pk'
}

/** input type for incrementing integer column in table "learning_objectives" */
export type Learning_Objectives_Inc_Input = {
  display_order?: InputMaybe<Scalars['smallint']>;
  grade?: InputMaybe<Scalars['smallint']>;
  school_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "learning_objectives" */
export type Learning_Objectives_Insert_Input = {
  copied_from?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  display_order?: InputMaybe<Scalars['smallint']>;
  grade?: InputMaybe<Scalars['smallint']>;
  learning_objective?: InputMaybe<Learning_Objectives_Obj_Rel_Insert_Input>;
  learning_objectives?: InputMaybe<Learning_Objectives_Arr_Rel_Insert_Input>;
  lo_id?: InputMaybe<Scalars['String']>;
  master_lo_id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  prerequisites?: InputMaybe<Scalars['_text']>;
  quiz_sets?: InputMaybe<Quiz_Sets_Arr_Rel_Insert_Input>;
  quizsets?: InputMaybe<Quizsets_Arr_Rel_Insert_Input>;
  resource_path?: InputMaybe<Scalars['String']>;
  school?: InputMaybe<Schools_Obj_Rel_Insert_Input>;
  school_id?: InputMaybe<Scalars['Int']>;
  study_guide?: InputMaybe<Scalars['String']>;
  subject?: InputMaybe<Scalars['String']>;
  topic?: InputMaybe<Topics_Obj_Rel_Insert_Input>;
  topic_id?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  video?: InputMaybe<Scalars['String']>;
  video_script?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Learning_Objectives_Max_Fields = {
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  lo_id?: Maybe<Scalars['String']>;
  master_lo_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  study_guide?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  video?: Maybe<Scalars['String']>;
  video_script?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "learning_objectives" */
export type Learning_Objectives_Max_Order_By = {
  copied_from?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  lo_id?: InputMaybe<Order_By>;
  master_lo_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  study_guide?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  topic_id?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  video?: InputMaybe<Order_By>;
  video_script?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Learning_Objectives_Min_Fields = {
  copied_from?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  lo_id?: Maybe<Scalars['String']>;
  master_lo_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  study_guide?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  video?: Maybe<Scalars['String']>;
  video_script?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "learning_objectives" */
export type Learning_Objectives_Min_Order_By = {
  copied_from?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  lo_id?: InputMaybe<Order_By>;
  master_lo_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  study_guide?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  topic_id?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  video?: InputMaybe<Order_By>;
  video_script?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "learning_objectives" */
export type Learning_Objectives_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Learning_Objectives>;
};

/** input type for inserting object relation for remote table "learning_objectives" */
export type Learning_Objectives_Obj_Rel_Insert_Input = {
  data: Learning_Objectives_Insert_Input;
  on_conflict?: InputMaybe<Learning_Objectives_On_Conflict>;
};

/** on conflict condition type for table "learning_objectives" */
export type Learning_Objectives_On_Conflict = {
  constraint: Learning_Objectives_Constraint;
  update_columns: Array<Learning_Objectives_Update_Column>;
  where?: InputMaybe<Learning_Objectives_Bool_Exp>;
};

/** ordering options when selecting data from "learning_objectives" */
export type Learning_Objectives_Order_By = {
  copied_from?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  learning_objective?: InputMaybe<Learning_Objectives_Order_By>;
  learning_objectives_aggregate?: InputMaybe<Learning_Objectives_Aggregate_Order_By>;
  lo_id?: InputMaybe<Order_By>;
  master_lo_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  prerequisites?: InputMaybe<Order_By>;
  quiz_sets_aggregate?: InputMaybe<Quiz_Sets_Aggregate_Order_By>;
  quizsets_aggregate?: InputMaybe<Quizsets_Aggregate_Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school?: InputMaybe<Schools_Order_By>;
  school_id?: InputMaybe<Order_By>;
  study_guide?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  topic?: InputMaybe<Topics_Order_By>;
  topic_id?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  video?: InputMaybe<Order_By>;
  video_script?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "learning_objectives" */
export type Learning_Objectives_Pk_Columns_Input = {
  lo_id: Scalars['String'];
};

/** select columns of table "learning_objectives" */
export enum Learning_Objectives_Select_Column {
  /** column name */
  CopiedFrom = 'copied_from',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  Grade = 'grade',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  MasterLoId = 'master_lo_id',
  /** column name */
  Name = 'name',
  /** column name */
  Prerequisites = 'prerequisites',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  StudyGuide = 'study_guide',
  /** column name */
  Subject = 'subject',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Video = 'video',
  /** column name */
  VideoScript = 'video_script'
}

/** input type for updating data in table "learning_objectives" */
export type Learning_Objectives_Set_Input = {
  copied_from?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  display_order?: InputMaybe<Scalars['smallint']>;
  grade?: InputMaybe<Scalars['smallint']>;
  lo_id?: InputMaybe<Scalars['String']>;
  master_lo_id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  prerequisites?: InputMaybe<Scalars['_text']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['Int']>;
  study_guide?: InputMaybe<Scalars['String']>;
  subject?: InputMaybe<Scalars['String']>;
  topic_id?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  video?: InputMaybe<Scalars['String']>;
  video_script?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Learning_Objectives_Stddev_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "learning_objectives" */
export type Learning_Objectives_Stddev_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Learning_Objectives_Stddev_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "learning_objectives" */
export type Learning_Objectives_Stddev_Pop_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Learning_Objectives_Stddev_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "learning_objectives" */
export type Learning_Objectives_Stddev_Samp_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Learning_Objectives_Sum_Fields = {
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "learning_objectives" */
export type Learning_Objectives_Sum_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** update columns of table "learning_objectives" */
export enum Learning_Objectives_Update_Column {
  /** column name */
  CopiedFrom = 'copied_from',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  Grade = 'grade',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  MasterLoId = 'master_lo_id',
  /** column name */
  Name = 'name',
  /** column name */
  Prerequisites = 'prerequisites',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  StudyGuide = 'study_guide',
  /** column name */
  Subject = 'subject',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Video = 'video',
  /** column name */
  VideoScript = 'video_script'
}

/** aggregate var_pop on columns */
export type Learning_Objectives_Var_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "learning_objectives" */
export type Learning_Objectives_Var_Pop_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Learning_Objectives_Var_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "learning_objectives" */
export type Learning_Objectives_Var_Samp_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Learning_Objectives_Variance_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "learning_objectives" */
export type Learning_Objectives_Variance_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "lesson_groups" */
export type Lesson_Groups = {
  course_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  lesson_group_id: Scalars['String'];
  media_ids?: Maybe<Scalars['_text']>;
  resource_path: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "lesson_groups" */
export type Lesson_Groups_Aggregate = {
  aggregate?: Maybe<Lesson_Groups_Aggregate_Fields>;
  nodes: Array<Lesson_Groups>;
};

/** aggregate fields of "lesson_groups" */
export type Lesson_Groups_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lesson_Groups_Max_Fields>;
  min?: Maybe<Lesson_Groups_Min_Fields>;
};


/** aggregate fields of "lesson_groups" */
export type Lesson_Groups_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Lesson_Groups_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lesson_groups" */
export type Lesson_Groups_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Lesson_Groups_Max_Order_By>;
  min?: InputMaybe<Lesson_Groups_Min_Order_By>;
};

/** input type for inserting array relation for remote table "lesson_groups" */
export type Lesson_Groups_Arr_Rel_Insert_Input = {
  data: Array<Lesson_Groups_Insert_Input>;
  on_conflict?: InputMaybe<Lesson_Groups_On_Conflict>;
};

/** Boolean expression to filter rows from the table "lesson_groups". All fields are combined with a logical 'AND'. */
export type Lesson_Groups_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Lesson_Groups_Bool_Exp>>>;
  _not?: InputMaybe<Lesson_Groups_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Lesson_Groups_Bool_Exp>>>;
  course_id?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  lesson_group_id?: InputMaybe<String_Comparison_Exp>;
  media_ids?: InputMaybe<_Text_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "lesson_groups" */
export enum Lesson_Groups_Constraint {
  /** unique or primary key constraint */
  PkLessonGroups = 'pk__lesson_groups'
}

/** input type for inserting data into table "lesson_groups" */
export type Lesson_Groups_Insert_Input = {
  course_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  lesson_group_id?: InputMaybe<Scalars['String']>;
  media_ids?: InputMaybe<Scalars['_text']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Lesson_Groups_Max_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  lesson_group_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "lesson_groups" */
export type Lesson_Groups_Max_Order_By = {
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  lesson_group_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Lesson_Groups_Min_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  lesson_group_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "lesson_groups" */
export type Lesson_Groups_Min_Order_By = {
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  lesson_group_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "lesson_groups" */
export type Lesson_Groups_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lesson_Groups>;
};

/** input type for inserting object relation for remote table "lesson_groups" */
export type Lesson_Groups_Obj_Rel_Insert_Input = {
  data: Lesson_Groups_Insert_Input;
  on_conflict?: InputMaybe<Lesson_Groups_On_Conflict>;
};

/** on conflict condition type for table "lesson_groups" */
export type Lesson_Groups_On_Conflict = {
  constraint: Lesson_Groups_Constraint;
  update_columns: Array<Lesson_Groups_Update_Column>;
  where?: InputMaybe<Lesson_Groups_Bool_Exp>;
};

/** ordering options when selecting data from "lesson_groups" */
export type Lesson_Groups_Order_By = {
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  lesson_group_id?: InputMaybe<Order_By>;
  media_ids?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "lesson_groups" */
export type Lesson_Groups_Pk_Columns_Input = {
  course_id: Scalars['String'];
  lesson_group_id: Scalars['String'];
};

/** select columns of table "lesson_groups" */
export enum Lesson_Groups_Select_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  LessonGroupId = 'lesson_group_id',
  /** column name */
  MediaIds = 'media_ids',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "lesson_groups" */
export type Lesson_Groups_Set_Input = {
  course_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  lesson_group_id?: InputMaybe<Scalars['String']>;
  media_ids?: InputMaybe<Scalars['_text']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "lesson_groups" */
export enum Lesson_Groups_Update_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  LessonGroupId = 'lesson_group_id',
  /** column name */
  MediaIds = 'media_ids',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "lesson_members" */
export type Lesson_Members = {
  attendance_remark?: Maybe<Scalars['String']>;
  attendance_status?: Maybe<Scalars['String']>;
  /** An object relationship */
  course?: Maybe<Courses>;
  course_id?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  lesson: Lessons;
  lesson_id: Scalars['String'];
  resource_path: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['String'];
};

/** aggregated selection of "lesson_members" */
export type Lesson_Members_Aggregate = {
  aggregate?: Maybe<Lesson_Members_Aggregate_Fields>;
  nodes: Array<Lesson_Members>;
};

/** aggregate fields of "lesson_members" */
export type Lesson_Members_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lesson_Members_Max_Fields>;
  min?: Maybe<Lesson_Members_Min_Fields>;
};


/** aggregate fields of "lesson_members" */
export type Lesson_Members_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Lesson_Members_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lesson_members" */
export type Lesson_Members_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Lesson_Members_Max_Order_By>;
  min?: InputMaybe<Lesson_Members_Min_Order_By>;
};

/** input type for inserting array relation for remote table "lesson_members" */
export type Lesson_Members_Arr_Rel_Insert_Input = {
  data: Array<Lesson_Members_Insert_Input>;
  on_conflict?: InputMaybe<Lesson_Members_On_Conflict>;
};

/** Boolean expression to filter rows from the table "lesson_members". All fields are combined with a logical 'AND'. */
export type Lesson_Members_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Lesson_Members_Bool_Exp>>>;
  _not?: InputMaybe<Lesson_Members_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Lesson_Members_Bool_Exp>>>;
  attendance_remark?: InputMaybe<String_Comparison_Exp>;
  attendance_status?: InputMaybe<String_Comparison_Exp>;
  course?: InputMaybe<Courses_Bool_Exp>;
  course_id?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  lesson?: InputMaybe<Lessons_Bool_Exp>;
  lesson_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "lesson_members" */
export enum Lesson_Members_Constraint {
  /** unique or primary key constraint */
  PkLessonMembers = 'pk__lesson_members'
}

/** input type for inserting data into table "lesson_members" */
export type Lesson_Members_Insert_Input = {
  attendance_remark?: InputMaybe<Scalars['String']>;
  attendance_status?: InputMaybe<Scalars['String']>;
  course?: InputMaybe<Courses_Obj_Rel_Insert_Input>;
  course_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  lesson?: InputMaybe<Lessons_Obj_Rel_Insert_Input>;
  lesson_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Lesson_Members_Max_Fields = {
  attendance_remark?: Maybe<Scalars['String']>;
  attendance_status?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "lesson_members" */
export type Lesson_Members_Max_Order_By = {
  attendance_remark?: InputMaybe<Order_By>;
  attendance_status?: InputMaybe<Order_By>;
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Lesson_Members_Min_Fields = {
  attendance_remark?: Maybe<Scalars['String']>;
  attendance_status?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "lesson_members" */
export type Lesson_Members_Min_Order_By = {
  attendance_remark?: InputMaybe<Order_By>;
  attendance_status?: InputMaybe<Order_By>;
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "lesson_members" */
export type Lesson_Members_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lesson_Members>;
};

/** input type for inserting object relation for remote table "lesson_members" */
export type Lesson_Members_Obj_Rel_Insert_Input = {
  data: Lesson_Members_Insert_Input;
  on_conflict?: InputMaybe<Lesson_Members_On_Conflict>;
};

/** on conflict condition type for table "lesson_members" */
export type Lesson_Members_On_Conflict = {
  constraint: Lesson_Members_Constraint;
  update_columns: Array<Lesson_Members_Update_Column>;
  where?: InputMaybe<Lesson_Members_Bool_Exp>;
};

/** ordering options when selecting data from "lesson_members" */
export type Lesson_Members_Order_By = {
  attendance_remark?: InputMaybe<Order_By>;
  attendance_status?: InputMaybe<Order_By>;
  course?: InputMaybe<Courses_Order_By>;
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  lesson?: InputMaybe<Lessons_Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "lesson_members" */
export type Lesson_Members_Pk_Columns_Input = {
  lesson_id: Scalars['String'];
  user_id: Scalars['String'];
};

/** select columns of table "lesson_members" */
export enum Lesson_Members_Select_Column {
  /** column name */
  AttendanceRemark = 'attendance_remark',
  /** column name */
  AttendanceStatus = 'attendance_status',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "lesson_members" */
export type Lesson_Members_Set_Input = {
  attendance_remark?: InputMaybe<Scalars['String']>;
  attendance_status?: InputMaybe<Scalars['String']>;
  course_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  lesson_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['String']>;
};

/** update columns of table "lesson_members" */
export enum Lesson_Members_Update_Column {
  /** column name */
  AttendanceRemark = 'attendance_remark',
  /** column name */
  AttendanceStatus = 'attendance_status',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** columns and relationships of "lesson_report_details" */
export type Lesson_Report_Details = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  lesson_report: Lesson_Reports;
  lesson_report_detail_id: Scalars['String'];
  lesson_report_id: Scalars['String'];
  /** An array relationship */
  partner_dynamic_form_field_values: Array<Partner_Dynamic_Form_Field_Values>;
  /** An aggregated array relationship */
  partner_dynamic_form_field_values_aggregate: Partner_Dynamic_Form_Field_Values_Aggregate;
  resource_path: Scalars['String'];
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "lesson_report_details" */
export type Lesson_Report_DetailsPartner_Dynamic_Form_Field_ValuesArgs = {
  distinct_on?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: InputMaybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};


/** columns and relationships of "lesson_report_details" */
export type Lesson_Report_DetailsPartner_Dynamic_Form_Field_Values_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: InputMaybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};

/** aggregated selection of "lesson_report_details" */
export type Lesson_Report_Details_Aggregate = {
  aggregate?: Maybe<Lesson_Report_Details_Aggregate_Fields>;
  nodes: Array<Lesson_Report_Details>;
};

/** aggregate fields of "lesson_report_details" */
export type Lesson_Report_Details_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lesson_Report_Details_Max_Fields>;
  min?: Maybe<Lesson_Report_Details_Min_Fields>;
};


/** aggregate fields of "lesson_report_details" */
export type Lesson_Report_Details_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Lesson_Report_Details_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lesson_report_details" */
export type Lesson_Report_Details_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Lesson_Report_Details_Max_Order_By>;
  min?: InputMaybe<Lesson_Report_Details_Min_Order_By>;
};

/** input type for inserting array relation for remote table "lesson_report_details" */
export type Lesson_Report_Details_Arr_Rel_Insert_Input = {
  data: Array<Lesson_Report_Details_Insert_Input>;
  on_conflict?: InputMaybe<Lesson_Report_Details_On_Conflict>;
};

/** Boolean expression to filter rows from the table "lesson_report_details". All fields are combined with a logical 'AND'. */
export type Lesson_Report_Details_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Lesson_Report_Details_Bool_Exp>>>;
  _not?: InputMaybe<Lesson_Report_Details_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Lesson_Report_Details_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  lesson_report?: InputMaybe<Lesson_Reports_Bool_Exp>;
  lesson_report_detail_id?: InputMaybe<String_Comparison_Exp>;
  lesson_report_id?: InputMaybe<String_Comparison_Exp>;
  partner_dynamic_form_field_values?: InputMaybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  student?: InputMaybe<Students_Bool_Exp>;
  student_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "lesson_report_details" */
export enum Lesson_Report_Details_Constraint {
  /** unique or primary key constraint */
  LessonReportDetailsPk = 'lesson_report_details_pk',
  /** unique or primary key constraint */
  UniqueLessonReportIdStudentId = 'unique__lesson_report_id__student_id'
}

/** input type for inserting data into table "lesson_report_details" */
export type Lesson_Report_Details_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  lesson_report?: InputMaybe<Lesson_Reports_Obj_Rel_Insert_Input>;
  lesson_report_detail_id?: InputMaybe<Scalars['String']>;
  lesson_report_id?: InputMaybe<Scalars['String']>;
  partner_dynamic_form_field_values?: InputMaybe<Partner_Dynamic_Form_Field_Values_Arr_Rel_Insert_Input>;
  resource_path?: InputMaybe<Scalars['String']>;
  student?: InputMaybe<Students_Obj_Rel_Insert_Input>;
  student_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Lesson_Report_Details_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_report_detail_id?: Maybe<Scalars['String']>;
  lesson_report_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "lesson_report_details" */
export type Lesson_Report_Details_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  lesson_report_detail_id?: InputMaybe<Order_By>;
  lesson_report_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Lesson_Report_Details_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_report_detail_id?: Maybe<Scalars['String']>;
  lesson_report_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "lesson_report_details" */
export type Lesson_Report_Details_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  lesson_report_detail_id?: InputMaybe<Order_By>;
  lesson_report_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "lesson_report_details" */
export type Lesson_Report_Details_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lesson_Report_Details>;
};

/** input type for inserting object relation for remote table "lesson_report_details" */
export type Lesson_Report_Details_Obj_Rel_Insert_Input = {
  data: Lesson_Report_Details_Insert_Input;
  on_conflict?: InputMaybe<Lesson_Report_Details_On_Conflict>;
};

/** on conflict condition type for table "lesson_report_details" */
export type Lesson_Report_Details_On_Conflict = {
  constraint: Lesson_Report_Details_Constraint;
  update_columns: Array<Lesson_Report_Details_Update_Column>;
  where?: InputMaybe<Lesson_Report_Details_Bool_Exp>;
};

/** ordering options when selecting data from "lesson_report_details" */
export type Lesson_Report_Details_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  lesson_report?: InputMaybe<Lesson_Reports_Order_By>;
  lesson_report_detail_id?: InputMaybe<Order_By>;
  lesson_report_id?: InputMaybe<Order_By>;
  partner_dynamic_form_field_values_aggregate?: InputMaybe<Partner_Dynamic_Form_Field_Values_Aggregate_Order_By>;
  resource_path?: InputMaybe<Order_By>;
  student?: InputMaybe<Students_Order_By>;
  student_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "lesson_report_details" */
export type Lesson_Report_Details_Pk_Columns_Input = {
  lesson_report_detail_id: Scalars['String'];
};

/** select columns of table "lesson_report_details" */
export enum Lesson_Report_Details_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LessonReportDetailId = 'lesson_report_detail_id',
  /** column name */
  LessonReportId = 'lesson_report_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "lesson_report_details" */
export type Lesson_Report_Details_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  lesson_report_detail_id?: InputMaybe<Scalars['String']>;
  lesson_report_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  student_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "lesson_report_details" */
export enum Lesson_Report_Details_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LessonReportDetailId = 'lesson_report_detail_id',
  /** column name */
  LessonReportId = 'lesson_report_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "lesson_reports" */
export type Lesson_Reports = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  form_config_id?: Maybe<Scalars['String']>;
  /** An object relationship */
  lesson?: Maybe<Lessons>;
  lesson_id?: Maybe<Scalars['String']>;
  /** An array relationship */
  lesson_report_details: Array<Lesson_Report_Details>;
  /** An aggregated array relationship */
  lesson_report_details_aggregate: Lesson_Report_Details_Aggregate;
  lesson_report_id: Scalars['String'];
  /** An object relationship */
  partner_form_config?: Maybe<Partner_Form_Configs>;
  report_submitting_status: Scalars['String'];
  resource_path: Scalars['String'];
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "lesson_reports" */
export type Lesson_ReportsLesson_Report_DetailsArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Report_Details_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Report_Details_Order_By>>;
  where?: InputMaybe<Lesson_Report_Details_Bool_Exp>;
};


/** columns and relationships of "lesson_reports" */
export type Lesson_ReportsLesson_Report_Details_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Report_Details_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Report_Details_Order_By>>;
  where?: InputMaybe<Lesson_Report_Details_Bool_Exp>;
};

/** aggregated selection of "lesson_reports" */
export type Lesson_Reports_Aggregate = {
  aggregate?: Maybe<Lesson_Reports_Aggregate_Fields>;
  nodes: Array<Lesson_Reports>;
};

/** aggregate fields of "lesson_reports" */
export type Lesson_Reports_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lesson_Reports_Max_Fields>;
  min?: Maybe<Lesson_Reports_Min_Fields>;
};


/** aggregate fields of "lesson_reports" */
export type Lesson_Reports_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lesson_reports" */
export type Lesson_Reports_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Lesson_Reports_Max_Order_By>;
  min?: InputMaybe<Lesson_Reports_Min_Order_By>;
};

/** input type for inserting array relation for remote table "lesson_reports" */
export type Lesson_Reports_Arr_Rel_Insert_Input = {
  data: Array<Lesson_Reports_Insert_Input>;
  on_conflict?: InputMaybe<Lesson_Reports_On_Conflict>;
};

/** Boolean expression to filter rows from the table "lesson_reports". All fields are combined with a logical 'AND'. */
export type Lesson_Reports_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Lesson_Reports_Bool_Exp>>>;
  _not?: InputMaybe<Lesson_Reports_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Lesson_Reports_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  form_config_id?: InputMaybe<String_Comparison_Exp>;
  lesson?: InputMaybe<Lessons_Bool_Exp>;
  lesson_id?: InputMaybe<String_Comparison_Exp>;
  lesson_report_details?: InputMaybe<Lesson_Report_Details_Bool_Exp>;
  lesson_report_id?: InputMaybe<String_Comparison_Exp>;
  partner_form_config?: InputMaybe<Partner_Form_Configs_Bool_Exp>;
  report_submitting_status?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "lesson_reports" */
export enum Lesson_Reports_Constraint {
  /** unique or primary key constraint */
  LessonReportsPk = 'lesson_reports_pk'
}

/** input type for inserting data into table "lesson_reports" */
export type Lesson_Reports_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  form_config_id?: InputMaybe<Scalars['String']>;
  lesson?: InputMaybe<Lessons_Obj_Rel_Insert_Input>;
  lesson_id?: InputMaybe<Scalars['String']>;
  lesson_report_details?: InputMaybe<Lesson_Report_Details_Arr_Rel_Insert_Input>;
  lesson_report_id?: InputMaybe<Scalars['String']>;
  partner_form_config?: InputMaybe<Partner_Form_Configs_Obj_Rel_Insert_Input>;
  report_submitting_status?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Lesson_Reports_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  form_config_id?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  lesson_report_id?: Maybe<Scalars['String']>;
  report_submitting_status?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "lesson_reports" */
export type Lesson_Reports_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  form_config_id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_report_id?: InputMaybe<Order_By>;
  report_submitting_status?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Lesson_Reports_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  form_config_id?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  lesson_report_id?: Maybe<Scalars['String']>;
  report_submitting_status?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "lesson_reports" */
export type Lesson_Reports_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  form_config_id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_report_id?: InputMaybe<Order_By>;
  report_submitting_status?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "lesson_reports" */
export type Lesson_Reports_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lesson_Reports>;
};

/** input type for inserting object relation for remote table "lesson_reports" */
export type Lesson_Reports_Obj_Rel_Insert_Input = {
  data: Lesson_Reports_Insert_Input;
  on_conflict?: InputMaybe<Lesson_Reports_On_Conflict>;
};

/** on conflict condition type for table "lesson_reports" */
export type Lesson_Reports_On_Conflict = {
  constraint: Lesson_Reports_Constraint;
  update_columns: Array<Lesson_Reports_Update_Column>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};

/** ordering options when selecting data from "lesson_reports" */
export type Lesson_Reports_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  form_config_id?: InputMaybe<Order_By>;
  lesson?: InputMaybe<Lessons_Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_report_details_aggregate?: InputMaybe<Lesson_Report_Details_Aggregate_Order_By>;
  lesson_report_id?: InputMaybe<Order_By>;
  partner_form_config?: InputMaybe<Partner_Form_Configs_Order_By>;
  report_submitting_status?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "lesson_reports" */
export type Lesson_Reports_Pk_Columns_Input = {
  lesson_report_id: Scalars['String'];
};

/** select columns of table "lesson_reports" */
export enum Lesson_Reports_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  FormConfigId = 'form_config_id',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  LessonReportId = 'lesson_report_id',
  /** column name */
  ReportSubmittingStatus = 'report_submitting_status',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "lesson_reports" */
export type Lesson_Reports_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  form_config_id?: InputMaybe<Scalars['String']>;
  lesson_id?: InputMaybe<Scalars['String']>;
  lesson_report_id?: InputMaybe<Scalars['String']>;
  report_submitting_status?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "lesson_reports" */
export enum Lesson_Reports_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  FormConfigId = 'form_config_id',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  LessonReportId = 'lesson_report_id',
  /** column name */
  ReportSubmittingStatus = 'report_submitting_status',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "lesson_schedules" */
export type Lesson_Schedules = {
  control_settings?: Maybe<Scalars['jsonb']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  formatted_date?: Maybe<Scalars['String']>;
  formatted_day?: Maybe<Scalars['String']>;
  formatted_month?: Maybe<Scalars['String']>;
  formatted_year?: Maybe<Scalars['String']>;
  lesson_group_id?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  lesson_type?: Maybe<Scalars['String']>;
  room_id?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "lesson_schedules" */
export type Lesson_SchedulesControl_SettingsArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "lesson_schedules" */
export type Lesson_Schedules_Aggregate = {
  aggregate?: Maybe<Lesson_Schedules_Aggregate_Fields>;
  nodes: Array<Lesson_Schedules>;
};

/** aggregate fields of "lesson_schedules" */
export type Lesson_Schedules_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lesson_Schedules_Max_Fields>;
  min?: Maybe<Lesson_Schedules_Min_Fields>;
};


/** aggregate fields of "lesson_schedules" */
export type Lesson_Schedules_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Lesson_Schedules_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lesson_schedules" */
export type Lesson_Schedules_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Lesson_Schedules_Max_Order_By>;
  min?: InputMaybe<Lesson_Schedules_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Lesson_Schedules_Append_Input = {
  control_settings?: InputMaybe<Scalars['jsonb']>;
};

/** Boolean expression to filter rows from the table "lesson_schedules". All fields are combined with a logical 'AND'. */
export type Lesson_Schedules_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Lesson_Schedules_Bool_Exp>>>;
  _not?: InputMaybe<Lesson_Schedules_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Lesson_Schedules_Bool_Exp>>>;
  control_settings?: InputMaybe<Jsonb_Comparison_Exp>;
  course_id?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  end_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  formatted_date?: InputMaybe<String_Comparison_Exp>;
  formatted_day?: InputMaybe<String_Comparison_Exp>;
  formatted_month?: InputMaybe<String_Comparison_Exp>;
  formatted_year?: InputMaybe<String_Comparison_Exp>;
  lesson_group_id?: InputMaybe<String_Comparison_Exp>;
  lesson_id?: InputMaybe<String_Comparison_Exp>;
  lesson_type?: InputMaybe<String_Comparison_Exp>;
  room_id?: InputMaybe<String_Comparison_Exp>;
  start_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  teacher_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Lesson_Schedules_Delete_At_Path_Input = {
  control_settings?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Lesson_Schedules_Delete_Elem_Input = {
  control_settings?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Lesson_Schedules_Delete_Key_Input = {
  control_settings?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Lesson_Schedules_Max_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  formatted_date?: Maybe<Scalars['String']>;
  formatted_day?: Maybe<Scalars['String']>;
  formatted_month?: Maybe<Scalars['String']>;
  formatted_year?: Maybe<Scalars['String']>;
  lesson_group_id?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  lesson_type?: Maybe<Scalars['String']>;
  room_id?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "lesson_schedules" */
export type Lesson_Schedules_Max_Order_By = {
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_at?: InputMaybe<Order_By>;
  formatted_date?: InputMaybe<Order_By>;
  formatted_day?: InputMaybe<Order_By>;
  formatted_month?: InputMaybe<Order_By>;
  formatted_year?: InputMaybe<Order_By>;
  lesson_group_id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_type?: InputMaybe<Order_By>;
  room_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Lesson_Schedules_Min_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  formatted_date?: Maybe<Scalars['String']>;
  formatted_day?: Maybe<Scalars['String']>;
  formatted_month?: Maybe<Scalars['String']>;
  formatted_year?: Maybe<Scalars['String']>;
  lesson_group_id?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  lesson_type?: Maybe<Scalars['String']>;
  room_id?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "lesson_schedules" */
export type Lesson_Schedules_Min_Order_By = {
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_at?: InputMaybe<Order_By>;
  formatted_date?: InputMaybe<Order_By>;
  formatted_day?: InputMaybe<Order_By>;
  formatted_month?: InputMaybe<Order_By>;
  formatted_year?: InputMaybe<Order_By>;
  lesson_group_id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_type?: InputMaybe<Order_By>;
  room_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** ordering options when selecting data from "lesson_schedules" */
export type Lesson_Schedules_Order_By = {
  control_settings?: InputMaybe<Order_By>;
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_at?: InputMaybe<Order_By>;
  formatted_date?: InputMaybe<Order_By>;
  formatted_day?: InputMaybe<Order_By>;
  formatted_month?: InputMaybe<Order_By>;
  formatted_year?: InputMaybe<Order_By>;
  lesson_group_id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_type?: InputMaybe<Order_By>;
  room_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Lesson_Schedules_Prepend_Input = {
  control_settings?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "lesson_schedules" */
export enum Lesson_Schedules_Select_Column {
  /** column name */
  ControlSettings = 'control_settings',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndAt = 'end_at',
  /** column name */
  FormattedDate = 'formatted_date',
  /** column name */
  FormattedDay = 'formatted_day',
  /** column name */
  FormattedMonth = 'formatted_month',
  /** column name */
  FormattedYear = 'formatted_year',
  /** column name */
  LessonGroupId = 'lesson_group_id',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  LessonType = 'lesson_type',
  /** column name */
  RoomId = 'room_id',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Status = 'status',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  lesson_student_subscription: Lesson_Student_Subscriptions;
  /** An object relationship */
  location: Locations;
  location_id: Scalars['String'];
  resource_path: Scalars['String'];
  student_subscription_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Aggregate = {
  aggregate?: Maybe<Lesson_Student_Subscription_Access_Path_Aggregate_Fields>;
  nodes: Array<Lesson_Student_Subscription_Access_Path>;
};

/** aggregate fields of "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lesson_Student_Subscription_Access_Path_Max_Fields>;
  min?: Maybe<Lesson_Student_Subscription_Access_Path_Min_Fields>;
};


/** aggregate fields of "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Lesson_Student_Subscription_Access_Path_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Lesson_Student_Subscription_Access_Path_Max_Order_By>;
  min?: InputMaybe<Lesson_Student_Subscription_Access_Path_Min_Order_By>;
};

/** input type for inserting array relation for remote table "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Arr_Rel_Insert_Input = {
  data: Array<Lesson_Student_Subscription_Access_Path_Insert_Input>;
  on_conflict?: InputMaybe<Lesson_Student_Subscription_Access_Path_On_Conflict>;
};

/** Boolean expression to filter rows from the table "lesson_student_subscription_access_path". All fields are combined with a logical 'AND'. */
export type Lesson_Student_Subscription_Access_Path_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>>>;
  _not?: InputMaybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  lesson_student_subscription?: InputMaybe<Lesson_Student_Subscriptions_Bool_Exp>;
  location?: InputMaybe<Locations_Bool_Exp>;
  location_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  student_subscription_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "lesson_student_subscription_access_path" */
export enum Lesson_Student_Subscription_Access_Path_Constraint {
  /** unique or primary key constraint */
  LessonStudentSubscriptionAccessPathPk = 'lesson_student_subscription_access_path_pk'
}

/** input type for inserting data into table "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  lesson_student_subscription?: InputMaybe<Lesson_Student_Subscriptions_Obj_Rel_Insert_Input>;
  location?: InputMaybe<Locations_Obj_Rel_Insert_Input>;
  location_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  student_subscription_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Lesson_Student_Subscription_Access_Path_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  student_subscription_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Lesson_Student_Subscription_Access_Path_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  student_subscription_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lesson_Student_Subscription_Access_Path>;
};

/** input type for inserting object relation for remote table "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Obj_Rel_Insert_Input = {
  data: Lesson_Student_Subscription_Access_Path_Insert_Input;
  on_conflict?: InputMaybe<Lesson_Student_Subscription_Access_Path_On_Conflict>;
};

/** on conflict condition type for table "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_On_Conflict = {
  constraint: Lesson_Student_Subscription_Access_Path_Constraint;
  update_columns: Array<Lesson_Student_Subscription_Access_Path_Update_Column>;
  where?: InputMaybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
};

/** ordering options when selecting data from "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  lesson_student_subscription?: InputMaybe<Lesson_Student_Subscriptions_Order_By>;
  location?: InputMaybe<Locations_Order_By>;
  location_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  student_subscription_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Pk_Columns_Input = {
  location_id: Scalars['String'];
  student_subscription_id: Scalars['String'];
};

/** select columns of table "lesson_student_subscription_access_path" */
export enum Lesson_Student_Subscription_Access_Path_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentSubscriptionId = 'student_subscription_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "lesson_student_subscription_access_path" */
export type Lesson_Student_Subscription_Access_Path_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  location_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  student_subscription_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "lesson_student_subscription_access_path" */
export enum Lesson_Student_Subscription_Access_Path_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentSubscriptionId = 'student_subscription_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions = {
  /** An object relationship */
  course: Courses;
  course_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  lesson_student_subscription_access_paths: Array<Lesson_Student_Subscription_Access_Path>;
  /** An aggregated array relationship */
  lesson_student_subscription_access_paths_aggregate: Lesson_Student_Subscription_Access_Path_Aggregate;
  resource_path: Scalars['String'];
  start_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  student_subscription_id: Scalars['String'];
  subscription_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "lesson_student_subscriptions" */
export type Lesson_Student_SubscriptionsLesson_Student_Subscription_Access_PathsArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Student_Subscription_Access_Path_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Student_Subscription_Access_Path_Order_By>>;
  where?: InputMaybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
};


/** columns and relationships of "lesson_student_subscriptions" */
export type Lesson_Student_SubscriptionsLesson_Student_Subscription_Access_Paths_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Student_Subscription_Access_Path_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Student_Subscription_Access_Path_Order_By>>;
  where?: InputMaybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
};

/** aggregated selection of "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Aggregate = {
  aggregate?: Maybe<Lesson_Student_Subscriptions_Aggregate_Fields>;
  nodes: Array<Lesson_Student_Subscriptions>;
};

/** aggregate fields of "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lesson_Student_Subscriptions_Max_Fields>;
  min?: Maybe<Lesson_Student_Subscriptions_Min_Fields>;
};


/** aggregate fields of "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Lesson_Student_Subscriptions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Lesson_Student_Subscriptions_Max_Order_By>;
  min?: InputMaybe<Lesson_Student_Subscriptions_Min_Order_By>;
};

/** input type for inserting array relation for remote table "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Arr_Rel_Insert_Input = {
  data: Array<Lesson_Student_Subscriptions_Insert_Input>;
  on_conflict?: InputMaybe<Lesson_Student_Subscriptions_On_Conflict>;
};

/** Boolean expression to filter rows from the table "lesson_student_subscriptions". All fields are combined with a logical 'AND'. */
export type Lesson_Student_Subscriptions_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Lesson_Student_Subscriptions_Bool_Exp>>>;
  _not?: InputMaybe<Lesson_Student_Subscriptions_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Lesson_Student_Subscriptions_Bool_Exp>>>;
  course?: InputMaybe<Courses_Bool_Exp>;
  course_id?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  end_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  lesson_student_subscription_access_paths?: InputMaybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  start_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  student?: InputMaybe<Students_Bool_Exp>;
  student_id?: InputMaybe<String_Comparison_Exp>;
  student_subscription_id?: InputMaybe<String_Comparison_Exp>;
  subscription_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "lesson_student_subscriptions" */
export enum Lesson_Student_Subscriptions_Constraint {
  /** unique or primary key constraint */
  LessonStudentSubscriptionsPkey = 'lesson_student_subscriptions_pkey',
  /** unique or primary key constraint */
  LessonStudentSubscriptionsUniq = 'lesson_student_subscriptions_uniq'
}

/** input type for inserting data into table "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Insert_Input = {
  course?: InputMaybe<Courses_Obj_Rel_Insert_Input>;
  course_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  end_at?: InputMaybe<Scalars['timestamptz']>;
  lesson_student_subscription_access_paths?: InputMaybe<Lesson_Student_Subscription_Access_Path_Arr_Rel_Insert_Input>;
  resource_path?: InputMaybe<Scalars['String']>;
  start_at?: InputMaybe<Scalars['timestamptz']>;
  student?: InputMaybe<Students_Obj_Rel_Insert_Input>;
  student_id?: InputMaybe<Scalars['String']>;
  student_subscription_id?: InputMaybe<Scalars['String']>;
  subscription_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Lesson_Student_Subscriptions_Max_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  student_id?: Maybe<Scalars['String']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Max_Order_By = {
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  start_at?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  student_subscription_id?: InputMaybe<Order_By>;
  subscription_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Lesson_Student_Subscriptions_Min_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  start_at?: Maybe<Scalars['timestamptz']>;
  student_id?: Maybe<Scalars['String']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Min_Order_By = {
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  start_at?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  student_subscription_id?: InputMaybe<Order_By>;
  subscription_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lesson_Student_Subscriptions>;
};

/** input type for inserting object relation for remote table "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Obj_Rel_Insert_Input = {
  data: Lesson_Student_Subscriptions_Insert_Input;
  on_conflict?: InputMaybe<Lesson_Student_Subscriptions_On_Conflict>;
};

/** on conflict condition type for table "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_On_Conflict = {
  constraint: Lesson_Student_Subscriptions_Constraint;
  update_columns: Array<Lesson_Student_Subscriptions_Update_Column>;
  where?: InputMaybe<Lesson_Student_Subscriptions_Bool_Exp>;
};

/** ordering options when selecting data from "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Order_By = {
  course?: InputMaybe<Courses_Order_By>;
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_at?: InputMaybe<Order_By>;
  lesson_student_subscription_access_paths_aggregate?: InputMaybe<Lesson_Student_Subscription_Access_Path_Aggregate_Order_By>;
  resource_path?: InputMaybe<Order_By>;
  start_at?: InputMaybe<Order_By>;
  student?: InputMaybe<Students_Order_By>;
  student_id?: InputMaybe<Order_By>;
  student_subscription_id?: InputMaybe<Order_By>;
  subscription_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Pk_Columns_Input = {
  student_subscription_id: Scalars['String'];
};

/** select columns of table "lesson_student_subscriptions" */
export enum Lesson_Student_Subscriptions_Select_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndAt = 'end_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartAt = 'start_at',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudentSubscriptionId = 'student_subscription_id',
  /** column name */
  SubscriptionId = 'subscription_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "lesson_student_subscriptions" */
export type Lesson_Student_Subscriptions_Set_Input = {
  course_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  end_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  start_at?: InputMaybe<Scalars['timestamptz']>;
  student_id?: InputMaybe<Scalars['String']>;
  student_subscription_id?: InputMaybe<Scalars['String']>;
  subscription_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "lesson_student_subscriptions" */
export enum Lesson_Student_Subscriptions_Update_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndAt = 'end_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartAt = 'start_at',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudentSubscriptionId = 'student_subscription_id',
  /** column name */
  SubscriptionId = 'subscription_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "lessons" */
export type Lessons = {
  center_id?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['String']>;
  control_settings?: Maybe<Scalars['jsonb']>;
  /** An object relationship */
  course?: Maybe<Courses>;
  course_id?: Maybe<Scalars['String']>;
  /** An array relationship */
  courses_classes: Array<Courses_Classes>;
  /** An aggregated array relationship */
  courses_classes_aggregate: Courses_Classes_Aggregate;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  is_locked: Scalars['Boolean'];
  learner_ids: Scalars['_text'];
  lesson_group_id?: Maybe<Scalars['String']>;
  lesson_id: Scalars['String'];
  /** An array relationship */
  lesson_members: Array<Lesson_Members>;
  /** An aggregated array relationship */
  lesson_members_aggregate: Lesson_Members_Aggregate;
  /** An array relationship */
  lesson_reports: Array<Lesson_Reports>;
  /** An aggregated array relationship */
  lesson_reports_aggregate: Lesson_Reports_Aggregate;
  lesson_type?: Maybe<Scalars['String']>;
  /** An array relationship */
  lessons_courses: Array<Lessons_Courses>;
  /** An aggregated array relationship */
  lessons_courses_aggregate: Lessons_Courses_Aggregate;
  /** An array relationship */
  lessons_teachers: Array<Lessons_Teachers>;
  /** An aggregated array relationship */
  lessons_teachers_aggregate: Lessons_Teachers_Aggregate;
  name?: Maybe<Scalars['String']>;
  /** An object relationship */
  preset_study_plan_weekly_format?: Maybe<Preset_Study_Plans_Weekly_Format>;
  /** An object relationship */
  preset_study_plans_weekly?: Maybe<Preset_Study_Plans_Weekly>;
  resource_path: Scalars['String'];
  room_id?: Maybe<Scalars['String']>;
  room_state?: Maybe<Scalars['jsonb']>;
  scheduler_id?: Maybe<Scalars['String']>;
  scheduling_status?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  stream_learner_counter: Scalars['Int'];
  teacher_id?: Maybe<Scalars['String']>;
  teaching_medium?: Maybe<Scalars['String']>;
  teaching_method?: Maybe<Scalars['String']>;
  teaching_model?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  users?: Maybe<Users>;
};


/** columns and relationships of "lessons" */
export type LessonsControl_SettingsArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "lessons" */
export type LessonsCourses_ClassesArgs = {
  distinct_on?: InputMaybe<Array<Courses_Classes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Classes_Order_By>>;
  where?: InputMaybe<Courses_Classes_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsCourses_Classes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Courses_Classes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Classes_Order_By>>;
  where?: InputMaybe<Courses_Classes_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsLesson_MembersArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Members_Order_By>>;
  where?: InputMaybe<Lesson_Members_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsLesson_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Members_Order_By>>;
  where?: InputMaybe<Lesson_Members_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsLesson_ReportsArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsLesson_Reports_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsLessons_CoursesArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Courses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Courses_Order_By>>;
  where?: InputMaybe<Lessons_Courses_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsLessons_Courses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Courses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Courses_Order_By>>;
  where?: InputMaybe<Lessons_Courses_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsLessons_TeachersArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Teachers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Teachers_Order_By>>;
  where?: InputMaybe<Lessons_Teachers_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsLessons_Teachers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Teachers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Teachers_Order_By>>;
  where?: InputMaybe<Lessons_Teachers_Bool_Exp>;
};


/** columns and relationships of "lessons" */
export type LessonsRoom_StateArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "lessons" */
export type Lessons_Aggregate = {
  aggregate?: Maybe<Lessons_Aggregate_Fields>;
  nodes: Array<Lessons>;
};

/** aggregate fields of "lessons" */
export type Lessons_Aggregate_Fields = {
  avg?: Maybe<Lessons_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lessons_Max_Fields>;
  min?: Maybe<Lessons_Min_Fields>;
  stddev?: Maybe<Lessons_Stddev_Fields>;
  stddev_pop?: Maybe<Lessons_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Lessons_Stddev_Samp_Fields>;
  sum?: Maybe<Lessons_Sum_Fields>;
  var_pop?: Maybe<Lessons_Var_Pop_Fields>;
  var_samp?: Maybe<Lessons_Var_Samp_Fields>;
  variance?: Maybe<Lessons_Variance_Fields>;
};


/** aggregate fields of "lessons" */
export type Lessons_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Lessons_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lessons" */
export type Lessons_Aggregate_Order_By = {
  avg?: InputMaybe<Lessons_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Lessons_Max_Order_By>;
  min?: InputMaybe<Lessons_Min_Order_By>;
  stddev?: InputMaybe<Lessons_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Lessons_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Lessons_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Lessons_Sum_Order_By>;
  var_pop?: InputMaybe<Lessons_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Lessons_Var_Samp_Order_By>;
  variance?: InputMaybe<Lessons_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Lessons_Append_Input = {
  control_settings?: InputMaybe<Scalars['jsonb']>;
  room_state?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "lessons" */
export type Lessons_Arr_Rel_Insert_Input = {
  data: Array<Lessons_Insert_Input>;
  on_conflict?: InputMaybe<Lessons_On_Conflict>;
};

/** aggregate avg on columns */
export type Lessons_Avg_Fields = {
  stream_learner_counter?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "lessons" */
export type Lessons_Avg_Order_By = {
  stream_learner_counter?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "lessons". All fields are combined with a logical 'AND'. */
export type Lessons_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Lessons_Bool_Exp>>>;
  _not?: InputMaybe<Lessons_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Lessons_Bool_Exp>>>;
  center_id?: InputMaybe<String_Comparison_Exp>;
  class_id?: InputMaybe<String_Comparison_Exp>;
  control_settings?: InputMaybe<Jsonb_Comparison_Exp>;
  course?: InputMaybe<Courses_Bool_Exp>;
  course_id?: InputMaybe<String_Comparison_Exp>;
  courses_classes?: InputMaybe<Courses_Classes_Bool_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  end_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  end_time?: InputMaybe<Timestamptz_Comparison_Exp>;
  is_locked?: InputMaybe<Boolean_Comparison_Exp>;
  learner_ids?: InputMaybe<_Text_Comparison_Exp>;
  lesson_group_id?: InputMaybe<String_Comparison_Exp>;
  lesson_id?: InputMaybe<String_Comparison_Exp>;
  lesson_members?: InputMaybe<Lesson_Members_Bool_Exp>;
  lesson_reports?: InputMaybe<Lesson_Reports_Bool_Exp>;
  lesson_type?: InputMaybe<String_Comparison_Exp>;
  lessons_courses?: InputMaybe<Lessons_Courses_Bool_Exp>;
  lessons_teachers?: InputMaybe<Lessons_Teachers_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  preset_study_plan_weekly_format?: InputMaybe<Preset_Study_Plans_Weekly_Format_Bool_Exp>;
  preset_study_plans_weekly?: InputMaybe<Preset_Study_Plans_Weekly_Bool_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  room_id?: InputMaybe<String_Comparison_Exp>;
  room_state?: InputMaybe<Jsonb_Comparison_Exp>;
  scheduler_id?: InputMaybe<String_Comparison_Exp>;
  scheduling_status?: InputMaybe<String_Comparison_Exp>;
  start_time?: InputMaybe<Timestamptz_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  stream_learner_counter?: InputMaybe<Int_Comparison_Exp>;
  teacher_id?: InputMaybe<String_Comparison_Exp>;
  teaching_medium?: InputMaybe<String_Comparison_Exp>;
  teaching_method?: InputMaybe<String_Comparison_Exp>;
  teaching_model?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  users?: InputMaybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "lessons" */
export enum Lessons_Constraint {
  /** unique or primary key constraint */
  LessonsPk = 'lessons_pk'
}

/** columns and relationships of "lessons_courses" */
export type Lessons_Courses = {
  /** An object relationship */
  course: Courses;
  course_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  lesson: Lessons;
  lesson_id: Scalars['String'];
  resource_path: Scalars['String'];
};

/** aggregated selection of "lessons_courses" */
export type Lessons_Courses_Aggregate = {
  aggregate?: Maybe<Lessons_Courses_Aggregate_Fields>;
  nodes: Array<Lessons_Courses>;
};

/** aggregate fields of "lessons_courses" */
export type Lessons_Courses_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lessons_Courses_Max_Fields>;
  min?: Maybe<Lessons_Courses_Min_Fields>;
};


/** aggregate fields of "lessons_courses" */
export type Lessons_Courses_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Lessons_Courses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lessons_courses" */
export type Lessons_Courses_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Lessons_Courses_Max_Order_By>;
  min?: InputMaybe<Lessons_Courses_Min_Order_By>;
};

/** input type for inserting array relation for remote table "lessons_courses" */
export type Lessons_Courses_Arr_Rel_Insert_Input = {
  data: Array<Lessons_Courses_Insert_Input>;
  on_conflict?: InputMaybe<Lessons_Courses_On_Conflict>;
};

/** Boolean expression to filter rows from the table "lessons_courses". All fields are combined with a logical 'AND'. */
export type Lessons_Courses_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Lessons_Courses_Bool_Exp>>>;
  _not?: InputMaybe<Lessons_Courses_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Lessons_Courses_Bool_Exp>>>;
  course?: InputMaybe<Courses_Bool_Exp>;
  course_id?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  lesson?: InputMaybe<Lessons_Bool_Exp>;
  lesson_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "lessons_courses" */
export enum Lessons_Courses_Constraint {
  /** unique or primary key constraint */
  LessonsCoursesPk = 'lessons_courses_pk'
}

/** input type for inserting data into table "lessons_courses" */
export type Lessons_Courses_Insert_Input = {
  course?: InputMaybe<Courses_Obj_Rel_Insert_Input>;
  course_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  lesson?: InputMaybe<Lessons_Obj_Rel_Insert_Input>;
  lesson_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Lessons_Courses_Max_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "lessons_courses" */
export type Lessons_Courses_Max_Order_By = {
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Lessons_Courses_Min_Fields = {
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "lessons_courses" */
export type Lessons_Courses_Min_Order_By = {
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "lessons_courses" */
export type Lessons_Courses_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lessons_Courses>;
};

/** input type for inserting object relation for remote table "lessons_courses" */
export type Lessons_Courses_Obj_Rel_Insert_Input = {
  data: Lessons_Courses_Insert_Input;
  on_conflict?: InputMaybe<Lessons_Courses_On_Conflict>;
};

/** on conflict condition type for table "lessons_courses" */
export type Lessons_Courses_On_Conflict = {
  constraint: Lessons_Courses_Constraint;
  update_columns: Array<Lessons_Courses_Update_Column>;
  where?: InputMaybe<Lessons_Courses_Bool_Exp>;
};

/** ordering options when selecting data from "lessons_courses" */
export type Lessons_Courses_Order_By = {
  course?: InputMaybe<Courses_Order_By>;
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  lesson?: InputMaybe<Lessons_Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "lessons_courses" */
export type Lessons_Courses_Pk_Columns_Input = {
  course_id: Scalars['String'];
  lesson_id: Scalars['String'];
};

/** select columns of table "lessons_courses" */
export enum Lessons_Courses_Select_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  ResourcePath = 'resource_path'
}

/** input type for updating data in table "lessons_courses" */
export type Lessons_Courses_Set_Input = {
  course_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  lesson_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
};

/** update columns of table "lessons_courses" */
export enum Lessons_Courses_Update_Column {
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  ResourcePath = 'resource_path'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Lessons_Delete_At_Path_Input = {
  control_settings?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  room_state?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Lessons_Delete_Elem_Input = {
  control_settings?: InputMaybe<Scalars['Int']>;
  room_state?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Lessons_Delete_Key_Input = {
  control_settings?: InputMaybe<Scalars['String']>;
  room_state?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "lessons" */
export type Lessons_Inc_Input = {
  stream_learner_counter?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "lessons" */
export type Lessons_Insert_Input = {
  center_id?: InputMaybe<Scalars['String']>;
  class_id?: InputMaybe<Scalars['String']>;
  control_settings?: InputMaybe<Scalars['jsonb']>;
  course?: InputMaybe<Courses_Obj_Rel_Insert_Input>;
  course_id?: InputMaybe<Scalars['String']>;
  courses_classes?: InputMaybe<Courses_Classes_Arr_Rel_Insert_Input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  end_at?: InputMaybe<Scalars['timestamptz']>;
  end_time?: InputMaybe<Scalars['timestamptz']>;
  is_locked?: InputMaybe<Scalars['Boolean']>;
  learner_ids?: InputMaybe<Scalars['_text']>;
  lesson_group_id?: InputMaybe<Scalars['String']>;
  lesson_id?: InputMaybe<Scalars['String']>;
  lesson_members?: InputMaybe<Lesson_Members_Arr_Rel_Insert_Input>;
  lesson_reports?: InputMaybe<Lesson_Reports_Arr_Rel_Insert_Input>;
  lesson_type?: InputMaybe<Scalars['String']>;
  lessons_courses?: InputMaybe<Lessons_Courses_Arr_Rel_Insert_Input>;
  lessons_teachers?: InputMaybe<Lessons_Teachers_Arr_Rel_Insert_Input>;
  name?: InputMaybe<Scalars['String']>;
  preset_study_plan_weekly_format?: InputMaybe<Preset_Study_Plans_Weekly_Format_Obj_Rel_Insert_Input>;
  preset_study_plans_weekly?: InputMaybe<Preset_Study_Plans_Weekly_Obj_Rel_Insert_Input>;
  resource_path?: InputMaybe<Scalars['String']>;
  room_id?: InputMaybe<Scalars['String']>;
  room_state?: InputMaybe<Scalars['jsonb']>;
  scheduler_id?: InputMaybe<Scalars['String']>;
  scheduling_status?: InputMaybe<Scalars['String']>;
  start_time?: InputMaybe<Scalars['timestamptz']>;
  status?: InputMaybe<Scalars['String']>;
  stream_learner_counter?: InputMaybe<Scalars['Int']>;
  teacher_id?: InputMaybe<Scalars['String']>;
  teaching_medium?: InputMaybe<Scalars['String']>;
  teaching_method?: InputMaybe<Scalars['String']>;
  teaching_model?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  users?: InputMaybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Lessons_Max_Fields = {
  center_id?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  lesson_group_id?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  lesson_type?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  room_id?: Maybe<Scalars['String']>;
  scheduler_id?: Maybe<Scalars['String']>;
  scheduling_status?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  stream_learner_counter?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['String']>;
  teaching_medium?: Maybe<Scalars['String']>;
  teaching_method?: Maybe<Scalars['String']>;
  teaching_model?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "lessons" */
export type Lessons_Max_Order_By = {
  center_id?: InputMaybe<Order_By>;
  class_id?: InputMaybe<Order_By>;
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_at?: InputMaybe<Order_By>;
  end_time?: InputMaybe<Order_By>;
  lesson_group_id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_type?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  room_id?: InputMaybe<Order_By>;
  scheduler_id?: InputMaybe<Order_By>;
  scheduling_status?: InputMaybe<Order_By>;
  start_time?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  stream_learner_counter?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  teaching_medium?: InputMaybe<Order_By>;
  teaching_method?: InputMaybe<Order_By>;
  teaching_model?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Lessons_Min_Fields = {
  center_id?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['String']>;
  course_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  lesson_group_id?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  lesson_type?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  room_id?: Maybe<Scalars['String']>;
  scheduler_id?: Maybe<Scalars['String']>;
  scheduling_status?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  stream_learner_counter?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['String']>;
  teaching_medium?: Maybe<Scalars['String']>;
  teaching_method?: Maybe<Scalars['String']>;
  teaching_model?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "lessons" */
export type Lessons_Min_Order_By = {
  center_id?: InputMaybe<Order_By>;
  class_id?: InputMaybe<Order_By>;
  course_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_at?: InputMaybe<Order_By>;
  end_time?: InputMaybe<Order_By>;
  lesson_group_id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_type?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  room_id?: InputMaybe<Order_By>;
  scheduler_id?: InputMaybe<Order_By>;
  scheduling_status?: InputMaybe<Order_By>;
  start_time?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  stream_learner_counter?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  teaching_medium?: InputMaybe<Order_By>;
  teaching_method?: InputMaybe<Order_By>;
  teaching_model?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "lessons" */
export type Lessons_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lessons>;
};

/** input type for inserting object relation for remote table "lessons" */
export type Lessons_Obj_Rel_Insert_Input = {
  data: Lessons_Insert_Input;
  on_conflict?: InputMaybe<Lessons_On_Conflict>;
};

/** on conflict condition type for table "lessons" */
export type Lessons_On_Conflict = {
  constraint: Lessons_Constraint;
  update_columns: Array<Lessons_Update_Column>;
  where?: InputMaybe<Lessons_Bool_Exp>;
};

/** ordering options when selecting data from "lessons" */
export type Lessons_Order_By = {
  center_id?: InputMaybe<Order_By>;
  class_id?: InputMaybe<Order_By>;
  control_settings?: InputMaybe<Order_By>;
  course?: InputMaybe<Courses_Order_By>;
  course_id?: InputMaybe<Order_By>;
  courses_classes_aggregate?: InputMaybe<Courses_Classes_Aggregate_Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_at?: InputMaybe<Order_By>;
  end_time?: InputMaybe<Order_By>;
  is_locked?: InputMaybe<Order_By>;
  learner_ids?: InputMaybe<Order_By>;
  lesson_group_id?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  lesson_members_aggregate?: InputMaybe<Lesson_Members_Aggregate_Order_By>;
  lesson_reports_aggregate?: InputMaybe<Lesson_Reports_Aggregate_Order_By>;
  lesson_type?: InputMaybe<Order_By>;
  lessons_courses_aggregate?: InputMaybe<Lessons_Courses_Aggregate_Order_By>;
  lessons_teachers_aggregate?: InputMaybe<Lessons_Teachers_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  preset_study_plan_weekly_format?: InputMaybe<Preset_Study_Plans_Weekly_Format_Order_By>;
  preset_study_plans_weekly?: InputMaybe<Preset_Study_Plans_Weekly_Order_By>;
  resource_path?: InputMaybe<Order_By>;
  room_id?: InputMaybe<Order_By>;
  room_state?: InputMaybe<Order_By>;
  scheduler_id?: InputMaybe<Order_By>;
  scheduling_status?: InputMaybe<Order_By>;
  start_time?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  stream_learner_counter?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  teaching_medium?: InputMaybe<Order_By>;
  teaching_method?: InputMaybe<Order_By>;
  teaching_model?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  users?: InputMaybe<Users_Order_By>;
};

/** primary key columns input for table: "lessons" */
export type Lessons_Pk_Columns_Input = {
  lesson_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Lessons_Prepend_Input = {
  control_settings?: InputMaybe<Scalars['jsonb']>;
  room_state?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "lessons" */
export enum Lessons_Select_Column {
  /** column name */
  CenterId = 'center_id',
  /** column name */
  ClassId = 'class_id',
  /** column name */
  ControlSettings = 'control_settings',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndAt = 'end_at',
  /** column name */
  EndTime = 'end_time',
  /** column name */
  IsLocked = 'is_locked',
  /** column name */
  LearnerIds = 'learner_ids',
  /** column name */
  LessonGroupId = 'lesson_group_id',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  LessonType = 'lesson_type',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  RoomId = 'room_id',
  /** column name */
  RoomState = 'room_state',
  /** column name */
  SchedulerId = 'scheduler_id',
  /** column name */
  SchedulingStatus = 'scheduling_status',
  /** column name */
  StartTime = 'start_time',
  /** column name */
  Status = 'status',
  /** column name */
  StreamLearnerCounter = 'stream_learner_counter',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  TeachingMedium = 'teaching_medium',
  /** column name */
  TeachingMethod = 'teaching_method',
  /** column name */
  TeachingModel = 'teaching_model',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "lessons" */
export type Lessons_Set_Input = {
  center_id?: InputMaybe<Scalars['String']>;
  class_id?: InputMaybe<Scalars['String']>;
  control_settings?: InputMaybe<Scalars['jsonb']>;
  course_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  end_at?: InputMaybe<Scalars['timestamptz']>;
  end_time?: InputMaybe<Scalars['timestamptz']>;
  is_locked?: InputMaybe<Scalars['Boolean']>;
  learner_ids?: InputMaybe<Scalars['_text']>;
  lesson_group_id?: InputMaybe<Scalars['String']>;
  lesson_id?: InputMaybe<Scalars['String']>;
  lesson_type?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  room_id?: InputMaybe<Scalars['String']>;
  room_state?: InputMaybe<Scalars['jsonb']>;
  scheduler_id?: InputMaybe<Scalars['String']>;
  scheduling_status?: InputMaybe<Scalars['String']>;
  start_time?: InputMaybe<Scalars['timestamptz']>;
  status?: InputMaybe<Scalars['String']>;
  stream_learner_counter?: InputMaybe<Scalars['Int']>;
  teacher_id?: InputMaybe<Scalars['String']>;
  teaching_medium?: InputMaybe<Scalars['String']>;
  teaching_method?: InputMaybe<Scalars['String']>;
  teaching_model?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Lessons_Stddev_Fields = {
  stream_learner_counter?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "lessons" */
export type Lessons_Stddev_Order_By = {
  stream_learner_counter?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Lessons_Stddev_Pop_Fields = {
  stream_learner_counter?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "lessons" */
export type Lessons_Stddev_Pop_Order_By = {
  stream_learner_counter?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Lessons_Stddev_Samp_Fields = {
  stream_learner_counter?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "lessons" */
export type Lessons_Stddev_Samp_Order_By = {
  stream_learner_counter?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Lessons_Sum_Fields = {
  stream_learner_counter?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "lessons" */
export type Lessons_Sum_Order_By = {
  stream_learner_counter?: InputMaybe<Order_By>;
};

/** columns and relationships of "lessons_teachers" */
export type Lessons_Teachers = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  lesson: Lessons;
  lesson_id: Scalars['String'];
  resource_path: Scalars['String'];
  /** An object relationship */
  teacher: Teachers;
  teacher_id: Scalars['String'];
};

/** aggregated selection of "lessons_teachers" */
export type Lessons_Teachers_Aggregate = {
  aggregate?: Maybe<Lessons_Teachers_Aggregate_Fields>;
  nodes: Array<Lessons_Teachers>;
};

/** aggregate fields of "lessons_teachers" */
export type Lessons_Teachers_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Lessons_Teachers_Max_Fields>;
  min?: Maybe<Lessons_Teachers_Min_Fields>;
};


/** aggregate fields of "lessons_teachers" */
export type Lessons_Teachers_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Lessons_Teachers_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "lessons_teachers" */
export type Lessons_Teachers_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Lessons_Teachers_Max_Order_By>;
  min?: InputMaybe<Lessons_Teachers_Min_Order_By>;
};

/** input type for inserting array relation for remote table "lessons_teachers" */
export type Lessons_Teachers_Arr_Rel_Insert_Input = {
  data: Array<Lessons_Teachers_Insert_Input>;
  on_conflict?: InputMaybe<Lessons_Teachers_On_Conflict>;
};

/** Boolean expression to filter rows from the table "lessons_teachers". All fields are combined with a logical 'AND'. */
export type Lessons_Teachers_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Lessons_Teachers_Bool_Exp>>>;
  _not?: InputMaybe<Lessons_Teachers_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Lessons_Teachers_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  lesson?: InputMaybe<Lessons_Bool_Exp>;
  lesson_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  teacher?: InputMaybe<Teachers_Bool_Exp>;
  teacher_id?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "lessons_teachers" */
export enum Lessons_Teachers_Constraint {
  /** unique or primary key constraint */
  LessonsTeachersPk = 'lessons_teachers_pk'
}

/** input type for inserting data into table "lessons_teachers" */
export type Lessons_Teachers_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  lesson?: InputMaybe<Lessons_Obj_Rel_Insert_Input>;
  lesson_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  teacher?: InputMaybe<Teachers_Obj_Rel_Insert_Input>;
  teacher_id?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Lessons_Teachers_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "lessons_teachers" */
export type Lessons_Teachers_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Lessons_Teachers_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "lessons_teachers" */
export type Lessons_Teachers_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "lessons_teachers" */
export type Lessons_Teachers_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Lessons_Teachers>;
};

/** input type for inserting object relation for remote table "lessons_teachers" */
export type Lessons_Teachers_Obj_Rel_Insert_Input = {
  data: Lessons_Teachers_Insert_Input;
  on_conflict?: InputMaybe<Lessons_Teachers_On_Conflict>;
};

/** on conflict condition type for table "lessons_teachers" */
export type Lessons_Teachers_On_Conflict = {
  constraint: Lessons_Teachers_Constraint;
  update_columns: Array<Lessons_Teachers_Update_Column>;
  where?: InputMaybe<Lessons_Teachers_Bool_Exp>;
};

/** ordering options when selecting data from "lessons_teachers" */
export type Lessons_Teachers_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  lesson?: InputMaybe<Lessons_Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  teacher?: InputMaybe<Teachers_Order_By>;
  teacher_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "lessons_teachers" */
export type Lessons_Teachers_Pk_Columns_Input = {
  lesson_id: Scalars['String'];
  teacher_id: Scalars['String'];
};

/** select columns of table "lessons_teachers" */
export enum Lessons_Teachers_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TeacherId = 'teacher_id'
}

/** input type for updating data in table "lessons_teachers" */
export type Lessons_Teachers_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  lesson_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  teacher_id?: InputMaybe<Scalars['String']>;
};

/** update columns of table "lessons_teachers" */
export enum Lessons_Teachers_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TeacherId = 'teacher_id'
}

/** update columns of table "lessons" */
export enum Lessons_Update_Column {
  /** column name */
  CenterId = 'center_id',
  /** column name */
  ClassId = 'class_id',
  /** column name */
  ControlSettings = 'control_settings',
  /** column name */
  CourseId = 'course_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndAt = 'end_at',
  /** column name */
  EndTime = 'end_time',
  /** column name */
  IsLocked = 'is_locked',
  /** column name */
  LearnerIds = 'learner_ids',
  /** column name */
  LessonGroupId = 'lesson_group_id',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  LessonType = 'lesson_type',
  /** column name */
  Name = 'name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  RoomId = 'room_id',
  /** column name */
  RoomState = 'room_state',
  /** column name */
  SchedulerId = 'scheduler_id',
  /** column name */
  SchedulingStatus = 'scheduling_status',
  /** column name */
  StartTime = 'start_time',
  /** column name */
  Status = 'status',
  /** column name */
  StreamLearnerCounter = 'stream_learner_counter',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  TeachingMedium = 'teaching_medium',
  /** column name */
  TeachingMethod = 'teaching_method',
  /** column name */
  TeachingModel = 'teaching_model',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Lessons_Var_Pop_Fields = {
  stream_learner_counter?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "lessons" */
export type Lessons_Var_Pop_Order_By = {
  stream_learner_counter?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Lessons_Var_Samp_Fields = {
  stream_learner_counter?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "lessons" */
export type Lessons_Var_Samp_Order_By = {
  stream_learner_counter?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Lessons_Variance_Fields = {
  stream_learner_counter?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "lessons" */
export type Lessons_Variance_Order_By = {
  stream_learner_counter?: InputMaybe<Order_By>;
};

/** columns and relationships of "location_types" */
export type Location_Types = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_name?: Maybe<Scalars['String']>;
  is_archived: Scalars['Boolean'];
  location_type_id: Scalars['String'];
  name: Scalars['String'];
  parent_location_type_id?: Maybe<Scalars['String']>;
  parent_name?: Maybe<Scalars['String']>;
  resource_path: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "location_types" */
export type Location_Types_Aggregate = {
  aggregate?: Maybe<Location_Types_Aggregate_Fields>;
  nodes: Array<Location_Types>;
};

/** aggregate fields of "location_types" */
export type Location_Types_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Location_Types_Max_Fields>;
  min?: Maybe<Location_Types_Min_Fields>;
};


/** aggregate fields of "location_types" */
export type Location_Types_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Location_Types_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "location_types" */
export type Location_Types_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Location_Types_Max_Order_By>;
  min?: InputMaybe<Location_Types_Min_Order_By>;
};

/** input type for inserting array relation for remote table "location_types" */
export type Location_Types_Arr_Rel_Insert_Input = {
  data: Array<Location_Types_Insert_Input>;
  on_conflict?: InputMaybe<Location_Types_On_Conflict>;
};

/** Boolean expression to filter rows from the table "location_types". All fields are combined with a logical 'AND'. */
export type Location_Types_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Location_Types_Bool_Exp>>>;
  _not?: InputMaybe<Location_Types_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Location_Types_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  display_name?: InputMaybe<String_Comparison_Exp>;
  is_archived?: InputMaybe<Boolean_Comparison_Exp>;
  location_type_id?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  parent_location_type_id?: InputMaybe<String_Comparison_Exp>;
  parent_name?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "location_types" */
export enum Location_Types_Constraint {
  /** unique or primary key constraint */
  LocationTypesPkey = 'location_types_pkey',
  /** unique or primary key constraint */
  UniqueLocationTypeNameResourcePath = 'unique__location_type_name_resource_path'
}

/** input type for inserting data into table "location_types" */
export type Location_Types_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  display_name?: InputMaybe<Scalars['String']>;
  is_archived?: InputMaybe<Scalars['Boolean']>;
  location_type_id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  parent_location_type_id?: InputMaybe<Scalars['String']>;
  parent_name?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Location_Types_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_name?: Maybe<Scalars['String']>;
  location_type_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  parent_location_type_id?: Maybe<Scalars['String']>;
  parent_name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "location_types" */
export type Location_Types_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_name?: InputMaybe<Order_By>;
  location_type_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  parent_location_type_id?: InputMaybe<Order_By>;
  parent_name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Location_Types_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_name?: Maybe<Scalars['String']>;
  location_type_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  parent_location_type_id?: Maybe<Scalars['String']>;
  parent_name?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "location_types" */
export type Location_Types_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_name?: InputMaybe<Order_By>;
  location_type_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  parent_location_type_id?: InputMaybe<Order_By>;
  parent_name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "location_types" */
export type Location_Types_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Location_Types>;
};

/** input type for inserting object relation for remote table "location_types" */
export type Location_Types_Obj_Rel_Insert_Input = {
  data: Location_Types_Insert_Input;
  on_conflict?: InputMaybe<Location_Types_On_Conflict>;
};

/** on conflict condition type for table "location_types" */
export type Location_Types_On_Conflict = {
  constraint: Location_Types_Constraint;
  update_columns: Array<Location_Types_Update_Column>;
  where?: InputMaybe<Location_Types_Bool_Exp>;
};

/** ordering options when selecting data from "location_types" */
export type Location_Types_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_name?: InputMaybe<Order_By>;
  is_archived?: InputMaybe<Order_By>;
  location_type_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  parent_location_type_id?: InputMaybe<Order_By>;
  parent_name?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "location_types" */
export type Location_Types_Pk_Columns_Input = {
  location_type_id: Scalars['String'];
};

/** select columns of table "location_types" */
export enum Location_Types_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayName = 'display_name',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  LocationTypeId = 'location_type_id',
  /** column name */
  Name = 'name',
  /** column name */
  ParentLocationTypeId = 'parent_location_type_id',
  /** column name */
  ParentName = 'parent_name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "location_types" */
export type Location_Types_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  display_name?: InputMaybe<Scalars['String']>;
  is_archived?: InputMaybe<Scalars['Boolean']>;
  location_type_id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  parent_location_type_id?: InputMaybe<Scalars['String']>;
  parent_name?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "location_types" */
export enum Location_Types_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayName = 'display_name',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  LocationTypeId = 'location_type_id',
  /** column name */
  Name = 'name',
  /** column name */
  ParentLocationTypeId = 'parent_location_type_id',
  /** column name */
  ParentName = 'parent_name',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "locations" */
export type Locations = {
  access_path?: Maybe<Scalars['String']>;
  /** An array relationship */
  course_access_paths: Array<Course_Access_Paths>;
  /** An aggregated array relationship */
  course_access_paths_aggregate: Course_Access_Paths_Aggregate;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_archived: Scalars['Boolean'];
  /** An array relationship */
  lesson_student_subscription_access_paths: Array<Lesson_Student_Subscription_Access_Path>;
  /** An aggregated array relationship */
  lesson_student_subscription_access_paths_aggregate: Lesson_Student_Subscription_Access_Path_Aggregate;
  location_id: Scalars['String'];
  location_type?: Maybe<Scalars['String']>;
  /** An object relationship */
  location_types?: Maybe<Location_Types>;
  /** An object relationship */
  locations?: Maybe<Locations>;
  name: Scalars['String'];
  parent_location_id?: Maybe<Scalars['String']>;
  partner_internal_id?: Maybe<Scalars['String']>;
  partner_internal_parent_id?: Maybe<Scalars['String']>;
  resource_path: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "locations" */
export type LocationsCourse_Access_PathsArgs = {
  distinct_on?: InputMaybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Course_Access_Paths_Order_By>>;
  where?: InputMaybe<Course_Access_Paths_Bool_Exp>;
};


/** columns and relationships of "locations" */
export type LocationsCourse_Access_Paths_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Course_Access_Paths_Order_By>>;
  where?: InputMaybe<Course_Access_Paths_Bool_Exp>;
};


/** columns and relationships of "locations" */
export type LocationsLesson_Student_Subscription_Access_PathsArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Student_Subscription_Access_Path_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Student_Subscription_Access_Path_Order_By>>;
  where?: InputMaybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
};


/** columns and relationships of "locations" */
export type LocationsLesson_Student_Subscription_Access_Paths_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Student_Subscription_Access_Path_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Student_Subscription_Access_Path_Order_By>>;
  where?: InputMaybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
};

/** aggregated selection of "locations" */
export type Locations_Aggregate = {
  aggregate?: Maybe<Locations_Aggregate_Fields>;
  nodes: Array<Locations>;
};

/** aggregate fields of "locations" */
export type Locations_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Locations_Max_Fields>;
  min?: Maybe<Locations_Min_Fields>;
};


/** aggregate fields of "locations" */
export type Locations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Locations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "locations" */
export type Locations_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Locations_Max_Order_By>;
  min?: InputMaybe<Locations_Min_Order_By>;
};

/** input type for inserting array relation for remote table "locations" */
export type Locations_Arr_Rel_Insert_Input = {
  data: Array<Locations_Insert_Input>;
  on_conflict?: InputMaybe<Locations_On_Conflict>;
};

/** Boolean expression to filter rows from the table "locations". All fields are combined with a logical 'AND'. */
export type Locations_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Locations_Bool_Exp>>>;
  _not?: InputMaybe<Locations_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Locations_Bool_Exp>>>;
  access_path?: InputMaybe<String_Comparison_Exp>;
  course_access_paths?: InputMaybe<Course_Access_Paths_Bool_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  is_archived?: InputMaybe<Boolean_Comparison_Exp>;
  lesson_student_subscription_access_paths?: InputMaybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
  location_id?: InputMaybe<String_Comparison_Exp>;
  location_type?: InputMaybe<String_Comparison_Exp>;
  location_types?: InputMaybe<Location_Types_Bool_Exp>;
  locations?: InputMaybe<Locations_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  parent_location_id?: InputMaybe<String_Comparison_Exp>;
  partner_internal_id?: InputMaybe<String_Comparison_Exp>;
  partner_internal_parent_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "locations" */
export enum Locations_Constraint {
  /** unique or primary key constraint */
  LocationsPkey = 'locations_pkey'
}

/** input type for inserting data into table "locations" */
export type Locations_Insert_Input = {
  access_path?: InputMaybe<Scalars['String']>;
  course_access_paths?: InputMaybe<Course_Access_Paths_Arr_Rel_Insert_Input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_archived?: InputMaybe<Scalars['Boolean']>;
  lesson_student_subscription_access_paths?: InputMaybe<Lesson_Student_Subscription_Access_Path_Arr_Rel_Insert_Input>;
  location_id?: InputMaybe<Scalars['String']>;
  location_type?: InputMaybe<Scalars['String']>;
  location_types?: InputMaybe<Location_Types_Obj_Rel_Insert_Input>;
  locations?: InputMaybe<Locations_Obj_Rel_Insert_Input>;
  name?: InputMaybe<Scalars['String']>;
  parent_location_id?: InputMaybe<Scalars['String']>;
  partner_internal_id?: InputMaybe<Scalars['String']>;
  partner_internal_parent_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Locations_Max_Fields = {
  access_path?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  location_type?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  parent_location_id?: Maybe<Scalars['String']>;
  partner_internal_id?: Maybe<Scalars['String']>;
  partner_internal_parent_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "locations" */
export type Locations_Max_Order_By = {
  access_path?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  location_type?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  parent_location_id?: InputMaybe<Order_By>;
  partner_internal_id?: InputMaybe<Order_By>;
  partner_internal_parent_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Locations_Min_Fields = {
  access_path?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  location_type?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  parent_location_id?: Maybe<Scalars['String']>;
  partner_internal_id?: Maybe<Scalars['String']>;
  partner_internal_parent_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "locations" */
export type Locations_Min_Order_By = {
  access_path?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  location_type?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  parent_location_id?: InputMaybe<Order_By>;
  partner_internal_id?: InputMaybe<Order_By>;
  partner_internal_parent_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "locations" */
export type Locations_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Locations>;
};

/** input type for inserting object relation for remote table "locations" */
export type Locations_Obj_Rel_Insert_Input = {
  data: Locations_Insert_Input;
  on_conflict?: InputMaybe<Locations_On_Conflict>;
};

/** on conflict condition type for table "locations" */
export type Locations_On_Conflict = {
  constraint: Locations_Constraint;
  update_columns: Array<Locations_Update_Column>;
  where?: InputMaybe<Locations_Bool_Exp>;
};

/** ordering options when selecting data from "locations" */
export type Locations_Order_By = {
  access_path?: InputMaybe<Order_By>;
  course_access_paths_aggregate?: InputMaybe<Course_Access_Paths_Aggregate_Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  is_archived?: InputMaybe<Order_By>;
  lesson_student_subscription_access_paths_aggregate?: InputMaybe<Lesson_Student_Subscription_Access_Path_Aggregate_Order_By>;
  location_id?: InputMaybe<Order_By>;
  location_type?: InputMaybe<Order_By>;
  location_types?: InputMaybe<Location_Types_Order_By>;
  locations?: InputMaybe<Locations_Order_By>;
  name?: InputMaybe<Order_By>;
  parent_location_id?: InputMaybe<Order_By>;
  partner_internal_id?: InputMaybe<Order_By>;
  partner_internal_parent_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "locations" */
export type Locations_Pk_Columns_Input = {
  location_id: Scalars['String'];
};

/** select columns of table "locations" */
export enum Locations_Select_Column {
  /** column name */
  AccessPath = 'access_path',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  LocationType = 'location_type',
  /** column name */
  Name = 'name',
  /** column name */
  ParentLocationId = 'parent_location_id',
  /** column name */
  PartnerInternalId = 'partner_internal_id',
  /** column name */
  PartnerInternalParentId = 'partner_internal_parent_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "locations" */
export type Locations_Set_Input = {
  access_path?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_archived?: InputMaybe<Scalars['Boolean']>;
  location_id?: InputMaybe<Scalars['String']>;
  location_type?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  parent_location_id?: InputMaybe<Scalars['String']>;
  partner_internal_id?: InputMaybe<Scalars['String']>;
  partner_internal_parent_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "locations" */
export enum Locations_Update_Column {
  /** column name */
  AccessPath = 'access_path',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  LocationType = 'location_type',
  /** column name */
  Name = 'name',
  /** column name */
  ParentLocationId = 'parent_location_id',
  /** column name */
  PartnerInternalId = 'partner_internal_id',
  /** column name */
  PartnerInternalParentId = 'partner_internal_parent_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "media" */
export type Media = {
  comments?: Maybe<Scalars['jsonb']>;
  /** An array relationship */
  conversion_tasks: Array<Conversion_Tasks>;
  /** An aggregated array relationship */
  conversion_tasks_aggregate: Conversion_Tasks_Aggregate;
  converted_images?: Maybe<Scalars['jsonb']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  media_id: Scalars['String'];
  name?: Maybe<Scalars['String']>;
  resource?: Maybe<Scalars['String']>;
  resource_path: Scalars['String'];
  type?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "media" */
export type MediaCommentsArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "media" */
export type MediaConversion_TasksArgs = {
  distinct_on?: InputMaybe<Array<Conversion_Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Conversion_Tasks_Order_By>>;
  where?: InputMaybe<Conversion_Tasks_Bool_Exp>;
};


/** columns and relationships of "media" */
export type MediaConversion_Tasks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Conversion_Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Conversion_Tasks_Order_By>>;
  where?: InputMaybe<Conversion_Tasks_Bool_Exp>;
};


/** columns and relationships of "media" */
export type MediaConverted_ImagesArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "media" */
export type Media_Aggregate = {
  aggregate?: Maybe<Media_Aggregate_Fields>;
  nodes: Array<Media>;
};

/** aggregate fields of "media" */
export type Media_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Media_Max_Fields>;
  min?: Maybe<Media_Min_Fields>;
};


/** aggregate fields of "media" */
export type Media_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Media_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "media" */
export type Media_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Media_Max_Order_By>;
  min?: InputMaybe<Media_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Media_Append_Input = {
  comments?: InputMaybe<Scalars['jsonb']>;
  converted_images?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "media" */
export type Media_Arr_Rel_Insert_Input = {
  data: Array<Media_Insert_Input>;
  on_conflict?: InputMaybe<Media_On_Conflict>;
};

/** Boolean expression to filter rows from the table "media". All fields are combined with a logical 'AND'. */
export type Media_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Media_Bool_Exp>>>;
  _not?: InputMaybe<Media_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Media_Bool_Exp>>>;
  comments?: InputMaybe<Jsonb_Comparison_Exp>;
  conversion_tasks?: InputMaybe<Conversion_Tasks_Bool_Exp>;
  converted_images?: InputMaybe<Jsonb_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  media_id?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  resource?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "media" */
export enum Media_Constraint {
  /** unique or primary key constraint */
  MediaPk = 'media_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Media_Delete_At_Path_Input = {
  comments?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  converted_images?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Media_Delete_Elem_Input = {
  comments?: InputMaybe<Scalars['Int']>;
  converted_images?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Media_Delete_Key_Input = {
  comments?: InputMaybe<Scalars['String']>;
  converted_images?: InputMaybe<Scalars['String']>;
};

/** input type for inserting data into table "media" */
export type Media_Insert_Input = {
  comments?: InputMaybe<Scalars['jsonb']>;
  conversion_tasks?: InputMaybe<Conversion_Tasks_Arr_Rel_Insert_Input>;
  converted_images?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  media_id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  resource?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Media_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  media_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "media" */
export type Media_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  media_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Media_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  media_id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  resource?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "media" */
export type Media_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  media_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "media" */
export type Media_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Media>;
};

/** input type for inserting object relation for remote table "media" */
export type Media_Obj_Rel_Insert_Input = {
  data: Media_Insert_Input;
  on_conflict?: InputMaybe<Media_On_Conflict>;
};

/** on conflict condition type for table "media" */
export type Media_On_Conflict = {
  constraint: Media_Constraint;
  update_columns: Array<Media_Update_Column>;
  where?: InputMaybe<Media_Bool_Exp>;
};

/** ordering options when selecting data from "media" */
export type Media_Order_By = {
  comments?: InputMaybe<Order_By>;
  conversion_tasks_aggregate?: InputMaybe<Conversion_Tasks_Aggregate_Order_By>;
  converted_images?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  media_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  resource?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "media" */
export type Media_Pk_Columns_Input = {
  media_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Media_Prepend_Input = {
  comments?: InputMaybe<Scalars['jsonb']>;
  converted_images?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "media" */
export enum Media_Select_Column {
  /** column name */
  Comments = 'comments',
  /** column name */
  ConvertedImages = 'converted_images',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  MediaId = 'media_id',
  /** column name */
  Name = 'name',
  /** column name */
  Resource = 'resource',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "media" */
export type Media_Set_Input = {
  comments?: InputMaybe<Scalars['jsonb']>;
  converted_images?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  media_id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  resource?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "media" */
export enum Media_Update_Column {
  /** column name */
  Comments = 'comments',
  /** column name */
  ConvertedImages = 'converted_images',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  MediaId = 'media_id',
  /** column name */
  Name = 'name',
  /** column name */
  Resource = 'resource',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** mutation root */
export type Mutation_Root = {
  /** delete data from the table: "assignments" */
  delete_assignments?: Maybe<Assignments_Mutation_Response>;
  /** delete single row from the table: "assignments" */
  delete_assignments_by_pk?: Maybe<Assignments>;
  /** delete data from the table: "bank" */
  delete_bank?: Maybe<Bank_Mutation_Response>;
  /** delete data from the table: "bank_branch" */
  delete_bank_branch?: Maybe<Bank_Branch_Mutation_Response>;
  /** delete single row from the table: "bank_branch" */
  delete_bank_branch_by_pk?: Maybe<Bank_Branch>;
  /** delete single row from the table: "bank" */
  delete_bank_by_pk?: Maybe<Bank>;
  /** delete data from the table: "books" */
  delete_books?: Maybe<Books_Mutation_Response>;
  /** delete single row from the table: "books" */
  delete_books_by_pk?: Maybe<Books>;
  /** delete data from the table: "books_chapters" */
  delete_books_chapters?: Maybe<Books_Chapters_Mutation_Response>;
  /** delete single row from the table: "books_chapters" */
  delete_books_chapters_by_pk?: Maybe<Books_Chapters>;
  /** delete data from the table: "chapters" */
  delete_chapters?: Maybe<Chapters_Mutation_Response>;
  /** delete single row from the table: "chapters" */
  delete_chapters_by_pk?: Maybe<Chapters>;
  /** delete data from the table: "cities" */
  delete_cities?: Maybe<Cities_Mutation_Response>;
  /** delete single row from the table: "cities" */
  delete_cities_by_pk?: Maybe<Cities>;
  /** delete data from the table: "class" */
  delete_class?: Maybe<Class_Mutation_Response>;
  /** delete single row from the table: "class" */
  delete_class_by_pk?: Maybe<Class>;
  /** delete data from the table: "class_member" */
  delete_class_member?: Maybe<Class_Member_Mutation_Response>;
  /** delete single row from the table: "class_member" */
  delete_class_member_by_pk?: Maybe<Class_Member>;
  /** delete data from the table: "class_members" */
  delete_class_members?: Maybe<Class_Members_Mutation_Response>;
  /** delete single row from the table: "class_members" */
  delete_class_members_by_pk?: Maybe<Class_Members>;
  /** delete data from the table: "classes" */
  delete_classes?: Maybe<Classes_Mutation_Response>;
  /** delete single row from the table: "classes" */
  delete_classes_by_pk?: Maybe<Classes>;
  /** delete data from the table: "coaches" */
  delete_coaches?: Maybe<Coaches_Mutation_Response>;
  /** delete single row from the table: "coaches" */
  delete_coaches_by_pk?: Maybe<Coaches>;
  /** delete data from the table: "cod_orders" */
  delete_cod_orders?: Maybe<Cod_Orders_Mutation_Response>;
  /** delete single row from the table: "cod_orders" */
  delete_cod_orders_by_pk?: Maybe<Cod_Orders>;
  /** delete data from the table: "conversion_tasks" */
  delete_conversion_tasks?: Maybe<Conversion_Tasks_Mutation_Response>;
  /** delete single row from the table: "conversion_tasks" */
  delete_conversion_tasks_by_pk?: Maybe<Conversion_Tasks>;
  /** delete data from the table: "course_access_paths" */
  delete_course_access_paths?: Maybe<Course_Access_Paths_Mutation_Response>;
  /** delete single row from the table: "course_access_paths" */
  delete_course_access_paths_by_pk?: Maybe<Course_Access_Paths>;
  /** delete data from the table: "courses" */
  delete_courses?: Maybe<Courses_Mutation_Response>;
  /** delete data from the table: "courses_books" */
  delete_courses_books?: Maybe<Courses_Books_Mutation_Response>;
  /** delete single row from the table: "courses_books" */
  delete_courses_books_by_pk?: Maybe<Courses_Books>;
  /** delete single row from the table: "courses" */
  delete_courses_by_pk?: Maybe<Courses>;
  /** delete data from the table: "courses_classes" */
  delete_courses_classes?: Maybe<Courses_Classes_Mutation_Response>;
  /** delete single row from the table: "courses_classes" */
  delete_courses_classes_by_pk?: Maybe<Courses_Classes>;
  /** delete data from the table: "districts" */
  delete_districts?: Maybe<Districts_Mutation_Response>;
  /** delete single row from the table: "districts" */
  delete_districts_by_pk?: Maybe<Districts>;
  /** delete data from the table: "granted_role" */
  delete_granted_role?: Maybe<Granted_Role_Mutation_Response>;
  /** delete data from the table: "granted_role_access_path" */
  delete_granted_role_access_path?: Maybe<Granted_Role_Access_Path_Mutation_Response>;
  /** delete single row from the table: "granted_role_access_path" */
  delete_granted_role_access_path_by_pk?: Maybe<Granted_Role_Access_Path>;
  /** delete single row from the table: "granted_role" */
  delete_granted_role_by_pk?: Maybe<Granted_Role>;
  /** delete data from the table: "hub_tours" */
  delete_hub_tours?: Maybe<Hub_Tours_Mutation_Response>;
  /** delete single row from the table: "hub_tours" */
  delete_hub_tours_by_pk?: Maybe<Hub_Tours>;
  /** delete data from the table: "hubs" */
  delete_hubs?: Maybe<Hubs_Mutation_Response>;
  /** delete single row from the table: "hubs" */
  delete_hubs_by_pk?: Maybe<Hubs>;
  /** delete data from the table: "info_notification_msgs" */
  delete_info_notification_msgs?: Maybe<Info_Notification_Msgs_Mutation_Response>;
  /** delete single row from the table: "info_notification_msgs" */
  delete_info_notification_msgs_by_pk?: Maybe<Info_Notification_Msgs>;
  /** delete data from the table: "info_notifications" */
  delete_info_notifications?: Maybe<Info_Notifications_Mutation_Response>;
  /** delete single row from the table: "info_notifications" */
  delete_info_notifications_by_pk?: Maybe<Info_Notifications>;
  /** delete data from the table: "info_notifications_tags" */
  delete_info_notifications_tags?: Maybe<Info_Notifications_Tags_Mutation_Response>;
  /** delete single row from the table: "info_notifications_tags" */
  delete_info_notifications_tags_by_pk?: Maybe<Info_Notifications_Tags>;
  /** delete data from the table: "learning_objectives" */
  delete_learning_objectives?: Maybe<Learning_Objectives_Mutation_Response>;
  /** delete single row from the table: "learning_objectives" */
  delete_learning_objectives_by_pk?: Maybe<Learning_Objectives>;
  /** delete data from the table: "lesson_groups" */
  delete_lesson_groups?: Maybe<Lesson_Groups_Mutation_Response>;
  /** delete single row from the table: "lesson_groups" */
  delete_lesson_groups_by_pk?: Maybe<Lesson_Groups>;
  /** delete data from the table: "lesson_members" */
  delete_lesson_members?: Maybe<Lesson_Members_Mutation_Response>;
  /** delete single row from the table: "lesson_members" */
  delete_lesson_members_by_pk?: Maybe<Lesson_Members>;
  /** delete data from the table: "lesson_report_details" */
  delete_lesson_report_details?: Maybe<Lesson_Report_Details_Mutation_Response>;
  /** delete single row from the table: "lesson_report_details" */
  delete_lesson_report_details_by_pk?: Maybe<Lesson_Report_Details>;
  /** delete data from the table: "lesson_reports" */
  delete_lesson_reports?: Maybe<Lesson_Reports_Mutation_Response>;
  /** delete single row from the table: "lesson_reports" */
  delete_lesson_reports_by_pk?: Maybe<Lesson_Reports>;
  /** delete data from the table: "lesson_student_subscription_access_path" */
  delete_lesson_student_subscription_access_path?: Maybe<Lesson_Student_Subscription_Access_Path_Mutation_Response>;
  /** delete single row from the table: "lesson_student_subscription_access_path" */
  delete_lesson_student_subscription_access_path_by_pk?: Maybe<Lesson_Student_Subscription_Access_Path>;
  /** delete data from the table: "lesson_student_subscriptions" */
  delete_lesson_student_subscriptions?: Maybe<Lesson_Student_Subscriptions_Mutation_Response>;
  /** delete single row from the table: "lesson_student_subscriptions" */
  delete_lesson_student_subscriptions_by_pk?: Maybe<Lesson_Student_Subscriptions>;
  /** delete data from the table: "lessons" */
  delete_lessons?: Maybe<Lessons_Mutation_Response>;
  /** delete single row from the table: "lessons" */
  delete_lessons_by_pk?: Maybe<Lessons>;
  /** delete data from the table: "lessons_courses" */
  delete_lessons_courses?: Maybe<Lessons_Courses_Mutation_Response>;
  /** delete single row from the table: "lessons_courses" */
  delete_lessons_courses_by_pk?: Maybe<Lessons_Courses>;
  /** delete data from the table: "lessons_teachers" */
  delete_lessons_teachers?: Maybe<Lessons_Teachers_Mutation_Response>;
  /** delete single row from the table: "lessons_teachers" */
  delete_lessons_teachers_by_pk?: Maybe<Lessons_Teachers>;
  /** delete data from the table: "location_types" */
  delete_location_types?: Maybe<Location_Types_Mutation_Response>;
  /** delete single row from the table: "location_types" */
  delete_location_types_by_pk?: Maybe<Location_Types>;
  /** delete data from the table: "locations" */
  delete_locations?: Maybe<Locations_Mutation_Response>;
  /** delete single row from the table: "locations" */
  delete_locations_by_pk?: Maybe<Locations>;
  /** delete data from the table: "media" */
  delete_media?: Maybe<Media_Mutation_Response>;
  /** delete single row from the table: "media" */
  delete_media_by_pk?: Maybe<Media>;
  /** delete data from the table: "organizations" */
  delete_organizations?: Maybe<Organizations_Mutation_Response>;
  /** delete single row from the table: "organizations" */
  delete_organizations_by_pk?: Maybe<Organizations>;
  /** delete data from the table: "parents" */
  delete_parents?: Maybe<Parents_Mutation_Response>;
  /** delete single row from the table: "parents" */
  delete_parents_by_pk?: Maybe<Parents>;
  /** delete data from the table: "partner_dynamic_form_field_values" */
  delete_partner_dynamic_form_field_values?: Maybe<Partner_Dynamic_Form_Field_Values_Mutation_Response>;
  /** delete single row from the table: "partner_dynamic_form_field_values" */
  delete_partner_dynamic_form_field_values_by_pk?: Maybe<Partner_Dynamic_Form_Field_Values>;
  /** delete data from the table: "partner_form_configs" */
  delete_partner_form_configs?: Maybe<Partner_Form_Configs_Mutation_Response>;
  /** delete single row from the table: "partner_form_configs" */
  delete_partner_form_configs_by_pk?: Maybe<Partner_Form_Configs>;
  /** delete data from the table: "plans" */
  delete_plans?: Maybe<Plans_Mutation_Response>;
  /** delete single row from the table: "plans" */
  delete_plans_by_pk?: Maybe<Plans>;
  /** delete data from the table: "prefecture" */
  delete_prefecture?: Maybe<Prefecture_Mutation_Response>;
  /** delete single row from the table: "prefecture" */
  delete_prefecture_by_pk?: Maybe<Prefecture>;
  /** delete data from the table: "preset_study_plans" */
  delete_preset_study_plans?: Maybe<Preset_Study_Plans_Mutation_Response>;
  /** delete single row from the table: "preset_study_plans" */
  delete_preset_study_plans_by_pk?: Maybe<Preset_Study_Plans>;
  /** delete data from the table: "preset_study_plans_weekly" */
  delete_preset_study_plans_weekly?: Maybe<Preset_Study_Plans_Weekly_Mutation_Response>;
  /** delete single row from the table: "preset_study_plans_weekly" */
  delete_preset_study_plans_weekly_by_pk?: Maybe<Preset_Study_Plans_Weekly>;
  /** delete data from the table: "preset_study_plans_weekly_format" */
  delete_preset_study_plans_weekly_format?: Maybe<Preset_Study_Plans_Weekly_Format_Mutation_Response>;
  /** delete data from the table: "promotion_rules" */
  delete_promotion_rules?: Maybe<Promotion_Rules_Mutation_Response>;
  /** delete single row from the table: "promotion_rules" */
  delete_promotion_rules_by_pk?: Maybe<Promotion_Rules>;
  /** delete data from the table: "promotions" */
  delete_promotions?: Maybe<Promotions_Mutation_Response>;
  /** delete single row from the table: "promotions" */
  delete_promotions_by_pk?: Maybe<Promotions>;
  /** delete data from the table: "questionnaire_questions" */
  delete_questionnaire_questions?: Maybe<Questionnaire_Questions_Mutation_Response>;
  /** delete single row from the table: "questionnaire_questions" */
  delete_questionnaire_questions_by_pk?: Maybe<Questionnaire_Questions>;
  /** delete data from the table: "questionnaire_user_answers" */
  delete_questionnaire_user_answers?: Maybe<Questionnaire_User_Answers_Mutation_Response>;
  /** delete single row from the table: "questionnaire_user_answers" */
  delete_questionnaire_user_answers_by_pk?: Maybe<Questionnaire_User_Answers>;
  /** delete data from the table: "questionnaires" */
  delete_questionnaires?: Maybe<Questionnaires_Mutation_Response>;
  /** delete single row from the table: "questionnaires" */
  delete_questionnaires_by_pk?: Maybe<Questionnaires>;
  /** delete data from the table: "questions" */
  delete_questions?: Maybe<Questions_Mutation_Response>;
  /** delete single row from the table: "questions" */
  delete_questions_by_pk?: Maybe<Questions>;
  /** delete data from the table: "quiz_sets" */
  delete_quiz_sets?: Maybe<Quiz_Sets_Mutation_Response>;
  /** delete single row from the table: "quiz_sets" */
  delete_quiz_sets_by_pk?: Maybe<Quiz_Sets>;
  /** delete data from the table: "quizsets" */
  delete_quizsets?: Maybe<Quizsets_Mutation_Response>;
  /** delete single row from the table: "quizsets" */
  delete_quizsets_by_pk?: Maybe<Quizsets>;
  /** delete data from the table: "quizzes" */
  delete_quizzes?: Maybe<Quizzes_Mutation_Response>;
  /** delete single row from the table: "quizzes" */
  delete_quizzes_by_pk?: Maybe<Quizzes>;
  /** delete data from the table: "role" */
  delete_role?: Maybe<Role_Mutation_Response>;
  /** delete single row from the table: "role" */
  delete_role_by_pk?: Maybe<Role>;
  /** delete data from the table: "scheduler" */
  delete_scheduler?: Maybe<Scheduler_Mutation_Response>;
  /** delete single row from the table: "scheduler" */
  delete_scheduler_by_pk?: Maybe<Scheduler>;
  /** delete data from the table: "school_admins" */
  delete_school_admins?: Maybe<School_Admins_Mutation_Response>;
  /** delete single row from the table: "school_admins" */
  delete_school_admins_by_pk?: Maybe<School_Admins>;
  /** delete data from the table: "school_configs" */
  delete_school_configs?: Maybe<School_Configs_Mutation_Response>;
  /** delete single row from the table: "school_configs" */
  delete_school_configs_by_pk?: Maybe<School_Configs>;
  /** delete data from the table: "school_course" */
  delete_school_course?: Maybe<School_Course_Mutation_Response>;
  /** delete single row from the table: "school_course" */
  delete_school_course_by_pk?: Maybe<School_Course>;
  /** delete data from the table: "school_info" */
  delete_school_info?: Maybe<School_Info_Mutation_Response>;
  /** delete single row from the table: "school_info" */
  delete_school_info_by_pk?: Maybe<School_Info>;
  /** delete data from the table: "school_level" */
  delete_school_level?: Maybe<School_Level_Mutation_Response>;
  /** delete single row from the table: "school_level" */
  delete_school_level_by_pk?: Maybe<School_Level>;
  /** delete data from the table: "school_level_grade" */
  delete_school_level_grade?: Maybe<School_Level_Grade_Mutation_Response>;
  /** delete single row from the table: "school_level_grade" */
  delete_school_level_grade_by_pk?: Maybe<School_Level_Grade>;
  /** delete data from the table: "schools" */
  delete_schools?: Maybe<Schools_Mutation_Response>;
  /** delete single row from the table: "schools" */
  delete_schools_by_pk?: Maybe<Schools>;
  /** delete data from the table: "staff" */
  delete_staff?: Maybe<Staff_Mutation_Response>;
  /** delete single row from the table: "staff" */
  delete_staff_by_pk?: Maybe<Staff>;
  /** delete data from the table: "student_entryexit_records" */
  delete_student_entryexit_records?: Maybe<Student_Entryexit_Records_Mutation_Response>;
  /** delete single row from the table: "student_entryexit_records" */
  delete_student_entryexit_records_by_pk?: Maybe<Student_Entryexit_Records>;
  /** delete data from the table: "student_parents" */
  delete_student_parents?: Maybe<Student_Parents_Mutation_Response>;
  /** delete single row from the table: "student_parents" */
  delete_student_parents_by_pk?: Maybe<Student_Parents>;
  /** delete data from the table: "student_qr" */
  delete_student_qr?: Maybe<Student_Qr_Mutation_Response>;
  /** delete single row from the table: "student_qr" */
  delete_student_qr_by_pk?: Maybe<Student_Qr>;
  /** delete data from the table: "student_subscriptions" */
  delete_student_subscriptions?: Maybe<Student_Subscriptions_Mutation_Response>;
  /** delete single row from the table: "student_subscriptions" */
  delete_student_subscriptions_by_pk?: Maybe<Student_Subscriptions>;
  /** delete data from the table: "students" */
  delete_students?: Maybe<Students_Mutation_Response>;
  /** delete data from the table: "students_assigned_coaches" */
  delete_students_assigned_coaches?: Maybe<Students_Assigned_Coaches_Mutation_Response>;
  /** delete single row from the table: "students" */
  delete_students_by_pk?: Maybe<Students>;
  /** delete data from the table: "tags" */
  delete_tags?: Maybe<Tags_Mutation_Response>;
  /** delete single row from the table: "tags" */
  delete_tags_by_pk?: Maybe<Tags>;
  /** delete data from the table: "teachers" */
  delete_teachers?: Maybe<Teachers_Mutation_Response>;
  /** delete single row from the table: "teachers" */
  delete_teachers_by_pk?: Maybe<Teachers>;
  /** delete data from the table: "topics" */
  delete_topics?: Maybe<Topics_Mutation_Response>;
  /** delete single row from the table: "topics" */
  delete_topics_by_pk?: Maybe<Topics>;
  /** delete data from the table: "topics_learning_objectives" */
  delete_topics_learning_objectives?: Maybe<Topics_Learning_Objectives_Mutation_Response>;
  /** delete single row from the table: "topics_learning_objectives" */
  delete_topics_learning_objectives_by_pk?: Maybe<Topics_Learning_Objectives>;
  /** delete data from the table: "user_access_paths" */
  delete_user_access_paths?: Maybe<User_Access_Paths_Mutation_Response>;
  /** delete single row from the table: "user_access_paths" */
  delete_user_access_paths_by_pk?: Maybe<User_Access_Paths>;
  /** delete data from the table: "user_address" */
  delete_user_address?: Maybe<User_Address_Mutation_Response>;
  /** delete single row from the table: "user_address" */
  delete_user_address_by_pk?: Maybe<User_Address>;
  /** delete data from the table: "user_group" */
  delete_user_group?: Maybe<User_Group_Mutation_Response>;
  /** delete single row from the table: "user_group" */
  delete_user_group_by_pk?: Maybe<User_Group>;
  /** delete data from the table: "user_group_member" */
  delete_user_group_member?: Maybe<User_Group_Member_Mutation_Response>;
  /** delete single row from the table: "user_group_member" */
  delete_user_group_member_by_pk?: Maybe<User_Group_Member>;
  /** delete data from the table: "user_tag" */
  delete_user_tag?: Maybe<User_Tag_Mutation_Response>;
  /** delete single row from the table: "user_tag" */
  delete_user_tag_by_pk?: Maybe<User_Tag>;
  /** delete data from the table: "users" */
  delete_users?: Maybe<Users_Mutation_Response>;
  /** delete single row from the table: "users" */
  delete_users_by_pk?: Maybe<Users>;
  /** delete data from the table: "users_info_notifications" */
  delete_users_info_notifications?: Maybe<Users_Info_Notifications_Mutation_Response>;
  /** delete single row from the table: "users_info_notifications" */
  delete_users_info_notifications_by_pk?: Maybe<Users_Info_Notifications>;
  /** insert data into the table: "assignments" */
  insert_assignments?: Maybe<Assignments_Mutation_Response>;
  /** insert a single row into the table: "assignments" */
  insert_assignments_one?: Maybe<Assignments>;
  /** insert data into the table: "bank" */
  insert_bank?: Maybe<Bank_Mutation_Response>;
  /** insert data into the table: "bank_branch" */
  insert_bank_branch?: Maybe<Bank_Branch_Mutation_Response>;
  /** insert a single row into the table: "bank_branch" */
  insert_bank_branch_one?: Maybe<Bank_Branch>;
  /** insert a single row into the table: "bank" */
  insert_bank_one?: Maybe<Bank>;
  /** insert data into the table: "books" */
  insert_books?: Maybe<Books_Mutation_Response>;
  /** insert data into the table: "books_chapters" */
  insert_books_chapters?: Maybe<Books_Chapters_Mutation_Response>;
  /** insert a single row into the table: "books_chapters" */
  insert_books_chapters_one?: Maybe<Books_Chapters>;
  /** insert a single row into the table: "books" */
  insert_books_one?: Maybe<Books>;
  /** insert data into the table: "chapters" */
  insert_chapters?: Maybe<Chapters_Mutation_Response>;
  /** insert a single row into the table: "chapters" */
  insert_chapters_one?: Maybe<Chapters>;
  /** insert data into the table: "cities" */
  insert_cities?: Maybe<Cities_Mutation_Response>;
  /** insert a single row into the table: "cities" */
  insert_cities_one?: Maybe<Cities>;
  /** insert data into the table: "class" */
  insert_class?: Maybe<Class_Mutation_Response>;
  /** insert data into the table: "class_member" */
  insert_class_member?: Maybe<Class_Member_Mutation_Response>;
  /** insert a single row into the table: "class_member" */
  insert_class_member_one?: Maybe<Class_Member>;
  /** insert data into the table: "class_members" */
  insert_class_members?: Maybe<Class_Members_Mutation_Response>;
  /** insert a single row into the table: "class_members" */
  insert_class_members_one?: Maybe<Class_Members>;
  /** insert a single row into the table: "class" */
  insert_class_one?: Maybe<Class>;
  /** insert data into the table: "classes" */
  insert_classes?: Maybe<Classes_Mutation_Response>;
  /** insert a single row into the table: "classes" */
  insert_classes_one?: Maybe<Classes>;
  /** insert data into the table: "coaches" */
  insert_coaches?: Maybe<Coaches_Mutation_Response>;
  /** insert a single row into the table: "coaches" */
  insert_coaches_one?: Maybe<Coaches>;
  /** insert data into the table: "cod_orders" */
  insert_cod_orders?: Maybe<Cod_Orders_Mutation_Response>;
  /** insert a single row into the table: "cod_orders" */
  insert_cod_orders_one?: Maybe<Cod_Orders>;
  /** insert data into the table: "conversion_tasks" */
  insert_conversion_tasks?: Maybe<Conversion_Tasks_Mutation_Response>;
  /** insert a single row into the table: "conversion_tasks" */
  insert_conversion_tasks_one?: Maybe<Conversion_Tasks>;
  /** insert data into the table: "course_access_paths" */
  insert_course_access_paths?: Maybe<Course_Access_Paths_Mutation_Response>;
  /** insert a single row into the table: "course_access_paths" */
  insert_course_access_paths_one?: Maybe<Course_Access_Paths>;
  /** insert data into the table: "courses" */
  insert_courses?: Maybe<Courses_Mutation_Response>;
  /** insert data into the table: "courses_books" */
  insert_courses_books?: Maybe<Courses_Books_Mutation_Response>;
  /** insert a single row into the table: "courses_books" */
  insert_courses_books_one?: Maybe<Courses_Books>;
  /** insert data into the table: "courses_classes" */
  insert_courses_classes?: Maybe<Courses_Classes_Mutation_Response>;
  /** insert a single row into the table: "courses_classes" */
  insert_courses_classes_one?: Maybe<Courses_Classes>;
  /** insert a single row into the table: "courses" */
  insert_courses_one?: Maybe<Courses>;
  /** insert data into the table: "districts" */
  insert_districts?: Maybe<Districts_Mutation_Response>;
  /** insert a single row into the table: "districts" */
  insert_districts_one?: Maybe<Districts>;
  /** insert data into the table: "granted_role" */
  insert_granted_role?: Maybe<Granted_Role_Mutation_Response>;
  /** insert data into the table: "granted_role_access_path" */
  insert_granted_role_access_path?: Maybe<Granted_Role_Access_Path_Mutation_Response>;
  /** insert a single row into the table: "granted_role_access_path" */
  insert_granted_role_access_path_one?: Maybe<Granted_Role_Access_Path>;
  /** insert a single row into the table: "granted_role" */
  insert_granted_role_one?: Maybe<Granted_Role>;
  /** insert data into the table: "hub_tours" */
  insert_hub_tours?: Maybe<Hub_Tours_Mutation_Response>;
  /** insert a single row into the table: "hub_tours" */
  insert_hub_tours_one?: Maybe<Hub_Tours>;
  /** insert data into the table: "hubs" */
  insert_hubs?: Maybe<Hubs_Mutation_Response>;
  /** insert a single row into the table: "hubs" */
  insert_hubs_one?: Maybe<Hubs>;
  /** insert data into the table: "info_notification_msgs" */
  insert_info_notification_msgs?: Maybe<Info_Notification_Msgs_Mutation_Response>;
  /** insert a single row into the table: "info_notification_msgs" */
  insert_info_notification_msgs_one?: Maybe<Info_Notification_Msgs>;
  /** insert data into the table: "info_notifications" */
  insert_info_notifications?: Maybe<Info_Notifications_Mutation_Response>;
  /** insert a single row into the table: "info_notifications" */
  insert_info_notifications_one?: Maybe<Info_Notifications>;
  /** insert data into the table: "info_notifications_tags" */
  insert_info_notifications_tags?: Maybe<Info_Notifications_Tags_Mutation_Response>;
  /** insert a single row into the table: "info_notifications_tags" */
  insert_info_notifications_tags_one?: Maybe<Info_Notifications_Tags>;
  /** insert data into the table: "learning_objectives" */
  insert_learning_objectives?: Maybe<Learning_Objectives_Mutation_Response>;
  /** insert a single row into the table: "learning_objectives" */
  insert_learning_objectives_one?: Maybe<Learning_Objectives>;
  /** insert data into the table: "lesson_groups" */
  insert_lesson_groups?: Maybe<Lesson_Groups_Mutation_Response>;
  /** insert a single row into the table: "lesson_groups" */
  insert_lesson_groups_one?: Maybe<Lesson_Groups>;
  /** insert data into the table: "lesson_members" */
  insert_lesson_members?: Maybe<Lesson_Members_Mutation_Response>;
  /** insert a single row into the table: "lesson_members" */
  insert_lesson_members_one?: Maybe<Lesson_Members>;
  /** insert data into the table: "lesson_report_details" */
  insert_lesson_report_details?: Maybe<Lesson_Report_Details_Mutation_Response>;
  /** insert a single row into the table: "lesson_report_details" */
  insert_lesson_report_details_one?: Maybe<Lesson_Report_Details>;
  /** insert data into the table: "lesson_reports" */
  insert_lesson_reports?: Maybe<Lesson_Reports_Mutation_Response>;
  /** insert a single row into the table: "lesson_reports" */
  insert_lesson_reports_one?: Maybe<Lesson_Reports>;
  /** insert data into the table: "lesson_student_subscription_access_path" */
  insert_lesson_student_subscription_access_path?: Maybe<Lesson_Student_Subscription_Access_Path_Mutation_Response>;
  /** insert a single row into the table: "lesson_student_subscription_access_path" */
  insert_lesson_student_subscription_access_path_one?: Maybe<Lesson_Student_Subscription_Access_Path>;
  /** insert data into the table: "lesson_student_subscriptions" */
  insert_lesson_student_subscriptions?: Maybe<Lesson_Student_Subscriptions_Mutation_Response>;
  /** insert a single row into the table: "lesson_student_subscriptions" */
  insert_lesson_student_subscriptions_one?: Maybe<Lesson_Student_Subscriptions>;
  /** insert data into the table: "lessons" */
  insert_lessons?: Maybe<Lessons_Mutation_Response>;
  /** insert data into the table: "lessons_courses" */
  insert_lessons_courses?: Maybe<Lessons_Courses_Mutation_Response>;
  /** insert a single row into the table: "lessons_courses" */
  insert_lessons_courses_one?: Maybe<Lessons_Courses>;
  /** insert a single row into the table: "lessons" */
  insert_lessons_one?: Maybe<Lessons>;
  /** insert data into the table: "lessons_teachers" */
  insert_lessons_teachers?: Maybe<Lessons_Teachers_Mutation_Response>;
  /** insert a single row into the table: "lessons_teachers" */
  insert_lessons_teachers_one?: Maybe<Lessons_Teachers>;
  /** insert data into the table: "location_types" */
  insert_location_types?: Maybe<Location_Types_Mutation_Response>;
  /** insert a single row into the table: "location_types" */
  insert_location_types_one?: Maybe<Location_Types>;
  /** insert data into the table: "locations" */
  insert_locations?: Maybe<Locations_Mutation_Response>;
  /** insert a single row into the table: "locations" */
  insert_locations_one?: Maybe<Locations>;
  /** insert data into the table: "media" */
  insert_media?: Maybe<Media_Mutation_Response>;
  /** insert a single row into the table: "media" */
  insert_media_one?: Maybe<Media>;
  /** insert data into the table: "organizations" */
  insert_organizations?: Maybe<Organizations_Mutation_Response>;
  /** insert a single row into the table: "organizations" */
  insert_organizations_one?: Maybe<Organizations>;
  /** insert data into the table: "parents" */
  insert_parents?: Maybe<Parents_Mutation_Response>;
  /** insert a single row into the table: "parents" */
  insert_parents_one?: Maybe<Parents>;
  /** insert data into the table: "partner_dynamic_form_field_values" */
  insert_partner_dynamic_form_field_values?: Maybe<Partner_Dynamic_Form_Field_Values_Mutation_Response>;
  /** insert a single row into the table: "partner_dynamic_form_field_values" */
  insert_partner_dynamic_form_field_values_one?: Maybe<Partner_Dynamic_Form_Field_Values>;
  /** insert data into the table: "partner_form_configs" */
  insert_partner_form_configs?: Maybe<Partner_Form_Configs_Mutation_Response>;
  /** insert a single row into the table: "partner_form_configs" */
  insert_partner_form_configs_one?: Maybe<Partner_Form_Configs>;
  /** insert data into the table: "plans" */
  insert_plans?: Maybe<Plans_Mutation_Response>;
  /** insert a single row into the table: "plans" */
  insert_plans_one?: Maybe<Plans>;
  /** insert data into the table: "prefecture" */
  insert_prefecture?: Maybe<Prefecture_Mutation_Response>;
  /** insert a single row into the table: "prefecture" */
  insert_prefecture_one?: Maybe<Prefecture>;
  /** insert data into the table: "preset_study_plans" */
  insert_preset_study_plans?: Maybe<Preset_Study_Plans_Mutation_Response>;
  /** insert a single row into the table: "preset_study_plans" */
  insert_preset_study_plans_one?: Maybe<Preset_Study_Plans>;
  /** insert data into the table: "preset_study_plans_weekly" */
  insert_preset_study_plans_weekly?: Maybe<Preset_Study_Plans_Weekly_Mutation_Response>;
  /** insert data into the table: "preset_study_plans_weekly_format" */
  insert_preset_study_plans_weekly_format?: Maybe<Preset_Study_Plans_Weekly_Format_Mutation_Response>;
  /** insert a single row into the table: "preset_study_plans_weekly_format" */
  insert_preset_study_plans_weekly_format_one?: Maybe<Preset_Study_Plans_Weekly_Format>;
  /** insert a single row into the table: "preset_study_plans_weekly" */
  insert_preset_study_plans_weekly_one?: Maybe<Preset_Study_Plans_Weekly>;
  /** insert data into the table: "promotion_rules" */
  insert_promotion_rules?: Maybe<Promotion_Rules_Mutation_Response>;
  /** insert a single row into the table: "promotion_rules" */
  insert_promotion_rules_one?: Maybe<Promotion_Rules>;
  /** insert data into the table: "promotions" */
  insert_promotions?: Maybe<Promotions_Mutation_Response>;
  /** insert a single row into the table: "promotions" */
  insert_promotions_one?: Maybe<Promotions>;
  /** insert data into the table: "questionnaire_questions" */
  insert_questionnaire_questions?: Maybe<Questionnaire_Questions_Mutation_Response>;
  /** insert a single row into the table: "questionnaire_questions" */
  insert_questionnaire_questions_one?: Maybe<Questionnaire_Questions>;
  /** insert data into the table: "questionnaire_user_answers" */
  insert_questionnaire_user_answers?: Maybe<Questionnaire_User_Answers_Mutation_Response>;
  /** insert a single row into the table: "questionnaire_user_answers" */
  insert_questionnaire_user_answers_one?: Maybe<Questionnaire_User_Answers>;
  /** insert data into the table: "questionnaires" */
  insert_questionnaires?: Maybe<Questionnaires_Mutation_Response>;
  /** insert a single row into the table: "questionnaires" */
  insert_questionnaires_one?: Maybe<Questionnaires>;
  /** insert data into the table: "questions" */
  insert_questions?: Maybe<Questions_Mutation_Response>;
  /** insert a single row into the table: "questions" */
  insert_questions_one?: Maybe<Questions>;
  /** insert data into the table: "quiz_sets" */
  insert_quiz_sets?: Maybe<Quiz_Sets_Mutation_Response>;
  /** insert a single row into the table: "quiz_sets" */
  insert_quiz_sets_one?: Maybe<Quiz_Sets>;
  /** insert data into the table: "quizsets" */
  insert_quizsets?: Maybe<Quizsets_Mutation_Response>;
  /** insert a single row into the table: "quizsets" */
  insert_quizsets_one?: Maybe<Quizsets>;
  /** insert data into the table: "quizzes" */
  insert_quizzes?: Maybe<Quizzes_Mutation_Response>;
  /** insert a single row into the table: "quizzes" */
  insert_quizzes_one?: Maybe<Quizzes>;
  /** insert data into the table: "role" */
  insert_role?: Maybe<Role_Mutation_Response>;
  /** insert a single row into the table: "role" */
  insert_role_one?: Maybe<Role>;
  /** insert data into the table: "scheduler" */
  insert_scheduler?: Maybe<Scheduler_Mutation_Response>;
  /** insert a single row into the table: "scheduler" */
  insert_scheduler_one?: Maybe<Scheduler>;
  /** insert data into the table: "school_admins" */
  insert_school_admins?: Maybe<School_Admins_Mutation_Response>;
  /** insert a single row into the table: "school_admins" */
  insert_school_admins_one?: Maybe<School_Admins>;
  /** insert data into the table: "school_configs" */
  insert_school_configs?: Maybe<School_Configs_Mutation_Response>;
  /** insert a single row into the table: "school_configs" */
  insert_school_configs_one?: Maybe<School_Configs>;
  /** insert data into the table: "school_course" */
  insert_school_course?: Maybe<School_Course_Mutation_Response>;
  /** insert a single row into the table: "school_course" */
  insert_school_course_one?: Maybe<School_Course>;
  /** insert data into the table: "school_info" */
  insert_school_info?: Maybe<School_Info_Mutation_Response>;
  /** insert a single row into the table: "school_info" */
  insert_school_info_one?: Maybe<School_Info>;
  /** insert data into the table: "school_level" */
  insert_school_level?: Maybe<School_Level_Mutation_Response>;
  /** insert data into the table: "school_level_grade" */
  insert_school_level_grade?: Maybe<School_Level_Grade_Mutation_Response>;
  /** insert a single row into the table: "school_level_grade" */
  insert_school_level_grade_one?: Maybe<School_Level_Grade>;
  /** insert a single row into the table: "school_level" */
  insert_school_level_one?: Maybe<School_Level>;
  /** insert data into the table: "schools" */
  insert_schools?: Maybe<Schools_Mutation_Response>;
  /** insert a single row into the table: "schools" */
  insert_schools_one?: Maybe<Schools>;
  /** insert data into the table: "staff" */
  insert_staff?: Maybe<Staff_Mutation_Response>;
  /** insert a single row into the table: "staff" */
  insert_staff_one?: Maybe<Staff>;
  /** insert data into the table: "student_entryexit_records" */
  insert_student_entryexit_records?: Maybe<Student_Entryexit_Records_Mutation_Response>;
  /** insert a single row into the table: "student_entryexit_records" */
  insert_student_entryexit_records_one?: Maybe<Student_Entryexit_Records>;
  /** insert data into the table: "student_parents" */
  insert_student_parents?: Maybe<Student_Parents_Mutation_Response>;
  /** insert a single row into the table: "student_parents" */
  insert_student_parents_one?: Maybe<Student_Parents>;
  /** insert data into the table: "student_qr" */
  insert_student_qr?: Maybe<Student_Qr_Mutation_Response>;
  /** insert a single row into the table: "student_qr" */
  insert_student_qr_one?: Maybe<Student_Qr>;
  /** insert data into the table: "student_subscriptions" */
  insert_student_subscriptions?: Maybe<Student_Subscriptions_Mutation_Response>;
  /** insert a single row into the table: "student_subscriptions" */
  insert_student_subscriptions_one?: Maybe<Student_Subscriptions>;
  /** insert data into the table: "students" */
  insert_students?: Maybe<Students_Mutation_Response>;
  /** insert data into the table: "students_assigned_coaches" */
  insert_students_assigned_coaches?: Maybe<Students_Assigned_Coaches_Mutation_Response>;
  /** insert a single row into the table: "students_assigned_coaches" */
  insert_students_assigned_coaches_one?: Maybe<Students_Assigned_Coaches>;
  /** insert a single row into the table: "students" */
  insert_students_one?: Maybe<Students>;
  /** insert data into the table: "tags" */
  insert_tags?: Maybe<Tags_Mutation_Response>;
  /** insert a single row into the table: "tags" */
  insert_tags_one?: Maybe<Tags>;
  /** insert data into the table: "teachers" */
  insert_teachers?: Maybe<Teachers_Mutation_Response>;
  /** insert a single row into the table: "teachers" */
  insert_teachers_one?: Maybe<Teachers>;
  /** insert data into the table: "topics" */
  insert_topics?: Maybe<Topics_Mutation_Response>;
  /** insert data into the table: "topics_learning_objectives" */
  insert_topics_learning_objectives?: Maybe<Topics_Learning_Objectives_Mutation_Response>;
  /** insert a single row into the table: "topics_learning_objectives" */
  insert_topics_learning_objectives_one?: Maybe<Topics_Learning_Objectives>;
  /** insert a single row into the table: "topics" */
  insert_topics_one?: Maybe<Topics>;
  /** insert data into the table: "user_access_paths" */
  insert_user_access_paths?: Maybe<User_Access_Paths_Mutation_Response>;
  /** insert a single row into the table: "user_access_paths" */
  insert_user_access_paths_one?: Maybe<User_Access_Paths>;
  /** insert data into the table: "user_address" */
  insert_user_address?: Maybe<User_Address_Mutation_Response>;
  /** insert a single row into the table: "user_address" */
  insert_user_address_one?: Maybe<User_Address>;
  /** insert data into the table: "user_group" */
  insert_user_group?: Maybe<User_Group_Mutation_Response>;
  /** insert data into the table: "user_group_member" */
  insert_user_group_member?: Maybe<User_Group_Member_Mutation_Response>;
  /** insert a single row into the table: "user_group_member" */
  insert_user_group_member_one?: Maybe<User_Group_Member>;
  /** insert a single row into the table: "user_group" */
  insert_user_group_one?: Maybe<User_Group>;
  /** insert data into the table: "user_tag" */
  insert_user_tag?: Maybe<User_Tag_Mutation_Response>;
  /** insert a single row into the table: "user_tag" */
  insert_user_tag_one?: Maybe<User_Tag>;
  /** insert data into the table: "users" */
  insert_users?: Maybe<Users_Mutation_Response>;
  /** insert data into the table: "users_info_notifications" */
  insert_users_info_notifications?: Maybe<Users_Info_Notifications_Mutation_Response>;
  /** insert a single row into the table: "users_info_notifications" */
  insert_users_info_notifications_one?: Maybe<Users_Info_Notifications>;
  /** insert a single row into the table: "users" */
  insert_users_one?: Maybe<Users>;
  /** update data of the table: "assignments" */
  update_assignments?: Maybe<Assignments_Mutation_Response>;
  /** update single row of the table: "assignments" */
  update_assignments_by_pk?: Maybe<Assignments>;
  /** update data of the table: "bank" */
  update_bank?: Maybe<Bank_Mutation_Response>;
  /** update data of the table: "bank_branch" */
  update_bank_branch?: Maybe<Bank_Branch_Mutation_Response>;
  /** update single row of the table: "bank_branch" */
  update_bank_branch_by_pk?: Maybe<Bank_Branch>;
  /** update single row of the table: "bank" */
  update_bank_by_pk?: Maybe<Bank>;
  /** update data of the table: "books" */
  update_books?: Maybe<Books_Mutation_Response>;
  /** update single row of the table: "books" */
  update_books_by_pk?: Maybe<Books>;
  /** update data of the table: "books_chapters" */
  update_books_chapters?: Maybe<Books_Chapters_Mutation_Response>;
  /** update single row of the table: "books_chapters" */
  update_books_chapters_by_pk?: Maybe<Books_Chapters>;
  /** update data of the table: "chapters" */
  update_chapters?: Maybe<Chapters_Mutation_Response>;
  /** update single row of the table: "chapters" */
  update_chapters_by_pk?: Maybe<Chapters>;
  /** update data of the table: "cities" */
  update_cities?: Maybe<Cities_Mutation_Response>;
  /** update single row of the table: "cities" */
  update_cities_by_pk?: Maybe<Cities>;
  /** update data of the table: "class" */
  update_class?: Maybe<Class_Mutation_Response>;
  /** update single row of the table: "class" */
  update_class_by_pk?: Maybe<Class>;
  /** update data of the table: "class_member" */
  update_class_member?: Maybe<Class_Member_Mutation_Response>;
  /** update single row of the table: "class_member" */
  update_class_member_by_pk?: Maybe<Class_Member>;
  /** update data of the table: "class_members" */
  update_class_members?: Maybe<Class_Members_Mutation_Response>;
  /** update single row of the table: "class_members" */
  update_class_members_by_pk?: Maybe<Class_Members>;
  /** update data of the table: "classes" */
  update_classes?: Maybe<Classes_Mutation_Response>;
  /** update single row of the table: "classes" */
  update_classes_by_pk?: Maybe<Classes>;
  /** update data of the table: "coaches" */
  update_coaches?: Maybe<Coaches_Mutation_Response>;
  /** update single row of the table: "coaches" */
  update_coaches_by_pk?: Maybe<Coaches>;
  /** update data of the table: "cod_orders" */
  update_cod_orders?: Maybe<Cod_Orders_Mutation_Response>;
  /** update single row of the table: "cod_orders" */
  update_cod_orders_by_pk?: Maybe<Cod_Orders>;
  /** update data of the table: "conversion_tasks" */
  update_conversion_tasks?: Maybe<Conversion_Tasks_Mutation_Response>;
  /** update single row of the table: "conversion_tasks" */
  update_conversion_tasks_by_pk?: Maybe<Conversion_Tasks>;
  /** update data of the table: "course_access_paths" */
  update_course_access_paths?: Maybe<Course_Access_Paths_Mutation_Response>;
  /** update single row of the table: "course_access_paths" */
  update_course_access_paths_by_pk?: Maybe<Course_Access_Paths>;
  /** update data of the table: "courses" */
  update_courses?: Maybe<Courses_Mutation_Response>;
  /** update data of the table: "courses_books" */
  update_courses_books?: Maybe<Courses_Books_Mutation_Response>;
  /** update single row of the table: "courses_books" */
  update_courses_books_by_pk?: Maybe<Courses_Books>;
  /** update single row of the table: "courses" */
  update_courses_by_pk?: Maybe<Courses>;
  /** update data of the table: "courses_classes" */
  update_courses_classes?: Maybe<Courses_Classes_Mutation_Response>;
  /** update single row of the table: "courses_classes" */
  update_courses_classes_by_pk?: Maybe<Courses_Classes>;
  /** update data of the table: "districts" */
  update_districts?: Maybe<Districts_Mutation_Response>;
  /** update single row of the table: "districts" */
  update_districts_by_pk?: Maybe<Districts>;
  /** update data of the table: "granted_role" */
  update_granted_role?: Maybe<Granted_Role_Mutation_Response>;
  /** update data of the table: "granted_role_access_path" */
  update_granted_role_access_path?: Maybe<Granted_Role_Access_Path_Mutation_Response>;
  /** update single row of the table: "granted_role_access_path" */
  update_granted_role_access_path_by_pk?: Maybe<Granted_Role_Access_Path>;
  /** update single row of the table: "granted_role" */
  update_granted_role_by_pk?: Maybe<Granted_Role>;
  /** update data of the table: "hub_tours" */
  update_hub_tours?: Maybe<Hub_Tours_Mutation_Response>;
  /** update single row of the table: "hub_tours" */
  update_hub_tours_by_pk?: Maybe<Hub_Tours>;
  /** update data of the table: "hubs" */
  update_hubs?: Maybe<Hubs_Mutation_Response>;
  /** update single row of the table: "hubs" */
  update_hubs_by_pk?: Maybe<Hubs>;
  /** update data of the table: "info_notification_msgs" */
  update_info_notification_msgs?: Maybe<Info_Notification_Msgs_Mutation_Response>;
  /** update single row of the table: "info_notification_msgs" */
  update_info_notification_msgs_by_pk?: Maybe<Info_Notification_Msgs>;
  /** update data of the table: "info_notifications" */
  update_info_notifications?: Maybe<Info_Notifications_Mutation_Response>;
  /** update single row of the table: "info_notifications" */
  update_info_notifications_by_pk?: Maybe<Info_Notifications>;
  /** update data of the table: "info_notifications_tags" */
  update_info_notifications_tags?: Maybe<Info_Notifications_Tags_Mutation_Response>;
  /** update single row of the table: "info_notifications_tags" */
  update_info_notifications_tags_by_pk?: Maybe<Info_Notifications_Tags>;
  /** update data of the table: "learning_objectives" */
  update_learning_objectives?: Maybe<Learning_Objectives_Mutation_Response>;
  /** update single row of the table: "learning_objectives" */
  update_learning_objectives_by_pk?: Maybe<Learning_Objectives>;
  /** update data of the table: "lesson_groups" */
  update_lesson_groups?: Maybe<Lesson_Groups_Mutation_Response>;
  /** update single row of the table: "lesson_groups" */
  update_lesson_groups_by_pk?: Maybe<Lesson_Groups>;
  /** update data of the table: "lesson_members" */
  update_lesson_members?: Maybe<Lesson_Members_Mutation_Response>;
  /** update single row of the table: "lesson_members" */
  update_lesson_members_by_pk?: Maybe<Lesson_Members>;
  /** update data of the table: "lesson_report_details" */
  update_lesson_report_details?: Maybe<Lesson_Report_Details_Mutation_Response>;
  /** update single row of the table: "lesson_report_details" */
  update_lesson_report_details_by_pk?: Maybe<Lesson_Report_Details>;
  /** update data of the table: "lesson_reports" */
  update_lesson_reports?: Maybe<Lesson_Reports_Mutation_Response>;
  /** update single row of the table: "lesson_reports" */
  update_lesson_reports_by_pk?: Maybe<Lesson_Reports>;
  /** update data of the table: "lesson_student_subscription_access_path" */
  update_lesson_student_subscription_access_path?: Maybe<Lesson_Student_Subscription_Access_Path_Mutation_Response>;
  /** update single row of the table: "lesson_student_subscription_access_path" */
  update_lesson_student_subscription_access_path_by_pk?: Maybe<Lesson_Student_Subscription_Access_Path>;
  /** update data of the table: "lesson_student_subscriptions" */
  update_lesson_student_subscriptions?: Maybe<Lesson_Student_Subscriptions_Mutation_Response>;
  /** update single row of the table: "lesson_student_subscriptions" */
  update_lesson_student_subscriptions_by_pk?: Maybe<Lesson_Student_Subscriptions>;
  /** update data of the table: "lessons" */
  update_lessons?: Maybe<Lessons_Mutation_Response>;
  /** update single row of the table: "lessons" */
  update_lessons_by_pk?: Maybe<Lessons>;
  /** update data of the table: "lessons_courses" */
  update_lessons_courses?: Maybe<Lessons_Courses_Mutation_Response>;
  /** update single row of the table: "lessons_courses" */
  update_lessons_courses_by_pk?: Maybe<Lessons_Courses>;
  /** update data of the table: "lessons_teachers" */
  update_lessons_teachers?: Maybe<Lessons_Teachers_Mutation_Response>;
  /** update single row of the table: "lessons_teachers" */
  update_lessons_teachers_by_pk?: Maybe<Lessons_Teachers>;
  /** update data of the table: "location_types" */
  update_location_types?: Maybe<Location_Types_Mutation_Response>;
  /** update single row of the table: "location_types" */
  update_location_types_by_pk?: Maybe<Location_Types>;
  /** update data of the table: "locations" */
  update_locations?: Maybe<Locations_Mutation_Response>;
  /** update single row of the table: "locations" */
  update_locations_by_pk?: Maybe<Locations>;
  /** update data of the table: "media" */
  update_media?: Maybe<Media_Mutation_Response>;
  /** update single row of the table: "media" */
  update_media_by_pk?: Maybe<Media>;
  /** update data of the table: "organizations" */
  update_organizations?: Maybe<Organizations_Mutation_Response>;
  /** update single row of the table: "organizations" */
  update_organizations_by_pk?: Maybe<Organizations>;
  /** update data of the table: "parents" */
  update_parents?: Maybe<Parents_Mutation_Response>;
  /** update single row of the table: "parents" */
  update_parents_by_pk?: Maybe<Parents>;
  /** update data of the table: "partner_dynamic_form_field_values" */
  update_partner_dynamic_form_field_values?: Maybe<Partner_Dynamic_Form_Field_Values_Mutation_Response>;
  /** update single row of the table: "partner_dynamic_form_field_values" */
  update_partner_dynamic_form_field_values_by_pk?: Maybe<Partner_Dynamic_Form_Field_Values>;
  /** update data of the table: "partner_form_configs" */
  update_partner_form_configs?: Maybe<Partner_Form_Configs_Mutation_Response>;
  /** update single row of the table: "partner_form_configs" */
  update_partner_form_configs_by_pk?: Maybe<Partner_Form_Configs>;
  /** update data of the table: "plans" */
  update_plans?: Maybe<Plans_Mutation_Response>;
  /** update single row of the table: "plans" */
  update_plans_by_pk?: Maybe<Plans>;
  /** update data of the table: "prefecture" */
  update_prefecture?: Maybe<Prefecture_Mutation_Response>;
  /** update single row of the table: "prefecture" */
  update_prefecture_by_pk?: Maybe<Prefecture>;
  /** update data of the table: "preset_study_plans" */
  update_preset_study_plans?: Maybe<Preset_Study_Plans_Mutation_Response>;
  /** update single row of the table: "preset_study_plans" */
  update_preset_study_plans_by_pk?: Maybe<Preset_Study_Plans>;
  /** update data of the table: "preset_study_plans_weekly" */
  update_preset_study_plans_weekly?: Maybe<Preset_Study_Plans_Weekly_Mutation_Response>;
  /** update single row of the table: "preset_study_plans_weekly" */
  update_preset_study_plans_weekly_by_pk?: Maybe<Preset_Study_Plans_Weekly>;
  /** update data of the table: "preset_study_plans_weekly_format" */
  update_preset_study_plans_weekly_format?: Maybe<Preset_Study_Plans_Weekly_Format_Mutation_Response>;
  /** update data of the table: "promotion_rules" */
  update_promotion_rules?: Maybe<Promotion_Rules_Mutation_Response>;
  /** update single row of the table: "promotion_rules" */
  update_promotion_rules_by_pk?: Maybe<Promotion_Rules>;
  /** update data of the table: "promotions" */
  update_promotions?: Maybe<Promotions_Mutation_Response>;
  /** update single row of the table: "promotions" */
  update_promotions_by_pk?: Maybe<Promotions>;
  /** update data of the table: "questionnaire_questions" */
  update_questionnaire_questions?: Maybe<Questionnaire_Questions_Mutation_Response>;
  /** update single row of the table: "questionnaire_questions" */
  update_questionnaire_questions_by_pk?: Maybe<Questionnaire_Questions>;
  /** update data of the table: "questionnaire_user_answers" */
  update_questionnaire_user_answers?: Maybe<Questionnaire_User_Answers_Mutation_Response>;
  /** update single row of the table: "questionnaire_user_answers" */
  update_questionnaire_user_answers_by_pk?: Maybe<Questionnaire_User_Answers>;
  /** update data of the table: "questionnaires" */
  update_questionnaires?: Maybe<Questionnaires_Mutation_Response>;
  /** update single row of the table: "questionnaires" */
  update_questionnaires_by_pk?: Maybe<Questionnaires>;
  /** update data of the table: "questions" */
  update_questions?: Maybe<Questions_Mutation_Response>;
  /** update single row of the table: "questions" */
  update_questions_by_pk?: Maybe<Questions>;
  /** update data of the table: "quiz_sets" */
  update_quiz_sets?: Maybe<Quiz_Sets_Mutation_Response>;
  /** update single row of the table: "quiz_sets" */
  update_quiz_sets_by_pk?: Maybe<Quiz_Sets>;
  /** update data of the table: "quizsets" */
  update_quizsets?: Maybe<Quizsets_Mutation_Response>;
  /** update single row of the table: "quizsets" */
  update_quizsets_by_pk?: Maybe<Quizsets>;
  /** update data of the table: "quizzes" */
  update_quizzes?: Maybe<Quizzes_Mutation_Response>;
  /** update single row of the table: "quizzes" */
  update_quizzes_by_pk?: Maybe<Quizzes>;
  /** update data of the table: "role" */
  update_role?: Maybe<Role_Mutation_Response>;
  /** update single row of the table: "role" */
  update_role_by_pk?: Maybe<Role>;
  /** update data of the table: "scheduler" */
  update_scheduler?: Maybe<Scheduler_Mutation_Response>;
  /** update single row of the table: "scheduler" */
  update_scheduler_by_pk?: Maybe<Scheduler>;
  /** update data of the table: "school_admins" */
  update_school_admins?: Maybe<School_Admins_Mutation_Response>;
  /** update single row of the table: "school_admins" */
  update_school_admins_by_pk?: Maybe<School_Admins>;
  /** update data of the table: "school_configs" */
  update_school_configs?: Maybe<School_Configs_Mutation_Response>;
  /** update single row of the table: "school_configs" */
  update_school_configs_by_pk?: Maybe<School_Configs>;
  /** update data of the table: "school_course" */
  update_school_course?: Maybe<School_Course_Mutation_Response>;
  /** update single row of the table: "school_course" */
  update_school_course_by_pk?: Maybe<School_Course>;
  /** update data of the table: "school_info" */
  update_school_info?: Maybe<School_Info_Mutation_Response>;
  /** update single row of the table: "school_info" */
  update_school_info_by_pk?: Maybe<School_Info>;
  /** update data of the table: "school_level" */
  update_school_level?: Maybe<School_Level_Mutation_Response>;
  /** update single row of the table: "school_level" */
  update_school_level_by_pk?: Maybe<School_Level>;
  /** update data of the table: "school_level_grade" */
  update_school_level_grade?: Maybe<School_Level_Grade_Mutation_Response>;
  /** update single row of the table: "school_level_grade" */
  update_school_level_grade_by_pk?: Maybe<School_Level_Grade>;
  /** update data of the table: "schools" */
  update_schools?: Maybe<Schools_Mutation_Response>;
  /** update single row of the table: "schools" */
  update_schools_by_pk?: Maybe<Schools>;
  /** update data of the table: "staff" */
  update_staff?: Maybe<Staff_Mutation_Response>;
  /** update single row of the table: "staff" */
  update_staff_by_pk?: Maybe<Staff>;
  /** update data of the table: "student_entryexit_records" */
  update_student_entryexit_records?: Maybe<Student_Entryexit_Records_Mutation_Response>;
  /** update single row of the table: "student_entryexit_records" */
  update_student_entryexit_records_by_pk?: Maybe<Student_Entryexit_Records>;
  /** update data of the table: "student_parents" */
  update_student_parents?: Maybe<Student_Parents_Mutation_Response>;
  /** update single row of the table: "student_parents" */
  update_student_parents_by_pk?: Maybe<Student_Parents>;
  /** update data of the table: "student_qr" */
  update_student_qr?: Maybe<Student_Qr_Mutation_Response>;
  /** update single row of the table: "student_qr" */
  update_student_qr_by_pk?: Maybe<Student_Qr>;
  /** update data of the table: "student_subscriptions" */
  update_student_subscriptions?: Maybe<Student_Subscriptions_Mutation_Response>;
  /** update single row of the table: "student_subscriptions" */
  update_student_subscriptions_by_pk?: Maybe<Student_Subscriptions>;
  /** update data of the table: "students" */
  update_students?: Maybe<Students_Mutation_Response>;
  /** update data of the table: "students_assigned_coaches" */
  update_students_assigned_coaches?: Maybe<Students_Assigned_Coaches_Mutation_Response>;
  /** update single row of the table: "students" */
  update_students_by_pk?: Maybe<Students>;
  /** update data of the table: "tags" */
  update_tags?: Maybe<Tags_Mutation_Response>;
  /** update single row of the table: "tags" */
  update_tags_by_pk?: Maybe<Tags>;
  /** update data of the table: "teachers" */
  update_teachers?: Maybe<Teachers_Mutation_Response>;
  /** update single row of the table: "teachers" */
  update_teachers_by_pk?: Maybe<Teachers>;
  /** update data of the table: "topics" */
  update_topics?: Maybe<Topics_Mutation_Response>;
  /** update single row of the table: "topics" */
  update_topics_by_pk?: Maybe<Topics>;
  /** update data of the table: "topics_learning_objectives" */
  update_topics_learning_objectives?: Maybe<Topics_Learning_Objectives_Mutation_Response>;
  /** update single row of the table: "topics_learning_objectives" */
  update_topics_learning_objectives_by_pk?: Maybe<Topics_Learning_Objectives>;
  /** update data of the table: "user_access_paths" */
  update_user_access_paths?: Maybe<User_Access_Paths_Mutation_Response>;
  /** update single row of the table: "user_access_paths" */
  update_user_access_paths_by_pk?: Maybe<User_Access_Paths>;
  /** update data of the table: "user_address" */
  update_user_address?: Maybe<User_Address_Mutation_Response>;
  /** update single row of the table: "user_address" */
  update_user_address_by_pk?: Maybe<User_Address>;
  /** update data of the table: "user_group" */
  update_user_group?: Maybe<User_Group_Mutation_Response>;
  /** update single row of the table: "user_group" */
  update_user_group_by_pk?: Maybe<User_Group>;
  /** update data of the table: "user_group_member" */
  update_user_group_member?: Maybe<User_Group_Member_Mutation_Response>;
  /** update single row of the table: "user_group_member" */
  update_user_group_member_by_pk?: Maybe<User_Group_Member>;
  /** update data of the table: "user_tag" */
  update_user_tag?: Maybe<User_Tag_Mutation_Response>;
  /** update single row of the table: "user_tag" */
  update_user_tag_by_pk?: Maybe<User_Tag>;
  /** update data of the table: "users" */
  update_users?: Maybe<Users_Mutation_Response>;
  /** update single row of the table: "users" */
  update_users_by_pk?: Maybe<Users>;
  /** update data of the table: "users_info_notifications" */
  update_users_info_notifications?: Maybe<Users_Info_Notifications_Mutation_Response>;
  /** update single row of the table: "users_info_notifications" */
  update_users_info_notifications_by_pk?: Maybe<Users_Info_Notifications>;
};


/** mutation root */
export type Mutation_RootDelete_AssignmentsArgs = {
  where: Assignments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Assignments_By_PkArgs = {
  assignment_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_BankArgs = {
  where: Bank_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Bank_BranchArgs = {
  where: Bank_Branch_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Bank_Branch_By_PkArgs = {
  bank_branch_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Bank_By_PkArgs = {
  bank_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_BooksArgs = {
  where: Books_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Books_By_PkArgs = {
  book_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Books_ChaptersArgs = {
  where: Books_Chapters_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Books_Chapters_By_PkArgs = {
  book_id: Scalars['String'];
  chapter_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_ChaptersArgs = {
  where: Chapters_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Chapters_By_PkArgs = {
  chapter_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_CitiesArgs = {
  where: Cities_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Cities_By_PkArgs = {
  city_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_ClassArgs = {
  where: Class_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Class_By_PkArgs = {
  class_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Class_MemberArgs = {
  where: Class_Member_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Class_Member_By_PkArgs = {
  class_member_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Class_MembersArgs = {
  where: Class_Members_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Class_Members_By_PkArgs = {
  class_member_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_ClassesArgs = {
  where: Classes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Classes_By_PkArgs = {
  class_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_CoachesArgs = {
  where: Coaches_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Coaches_By_PkArgs = {
  coach_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Cod_OrdersArgs = {
  where: Cod_Orders_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Cod_Orders_By_PkArgs = {
  cod_order_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Conversion_TasksArgs = {
  where: Conversion_Tasks_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Conversion_Tasks_By_PkArgs = {
  task_uuid: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Course_Access_PathsArgs = {
  where: Course_Access_Paths_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Course_Access_Paths_By_PkArgs = {
  course_id: Scalars['String'];
  location_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_CoursesArgs = {
  where: Courses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Courses_BooksArgs = {
  where: Courses_Books_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Courses_Books_By_PkArgs = {
  book_id: Scalars['String'];
  course_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Courses_By_PkArgs = {
  course_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Courses_ClassesArgs = {
  where: Courses_Classes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Courses_Classes_By_PkArgs = {
  class_id: Scalars['Int'];
  course_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_DistrictsArgs = {
  where: Districts_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Districts_By_PkArgs = {
  district_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Granted_RoleArgs = {
  where: Granted_Role_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Granted_Role_Access_PathArgs = {
  where: Granted_Role_Access_Path_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Granted_Role_Access_Path_By_PkArgs = {
  granted_role_id: Scalars['String'];
  location_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Granted_Role_By_PkArgs = {
  granted_role_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Hub_ToursArgs = {
  where: Hub_Tours_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Hub_Tours_By_PkArgs = {
  hub_id: Scalars['Int'];
  student_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_HubsArgs = {
  where: Hubs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Hubs_By_PkArgs = {
  hub_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Info_Notification_MsgsArgs = {
  where: Info_Notification_Msgs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Info_Notification_Msgs_By_PkArgs = {
  notification_msg_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Info_NotificationsArgs = {
  where: Info_Notifications_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Info_Notifications_By_PkArgs = {
  notification_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Info_Notifications_TagsArgs = {
  where: Info_Notifications_Tags_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Info_Notifications_Tags_By_PkArgs = {
  notification_tag_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Learning_ObjectivesArgs = {
  where: Learning_Objectives_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Learning_Objectives_By_PkArgs = {
  lo_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Lesson_GroupsArgs = {
  where: Lesson_Groups_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Groups_By_PkArgs = {
  course_id: Scalars['String'];
  lesson_group_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Lesson_MembersArgs = {
  where: Lesson_Members_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Members_By_PkArgs = {
  lesson_id: Scalars['String'];
  user_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Report_DetailsArgs = {
  where: Lesson_Report_Details_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Report_Details_By_PkArgs = {
  lesson_report_detail_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Lesson_ReportsArgs = {
  where: Lesson_Reports_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Reports_By_PkArgs = {
  lesson_report_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Student_Subscription_Access_PathArgs = {
  where: Lesson_Student_Subscription_Access_Path_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Student_Subscription_Access_Path_By_PkArgs = {
  location_id: Scalars['String'];
  student_subscription_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Student_SubscriptionsArgs = {
  where: Lesson_Student_Subscriptions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lesson_Student_Subscriptions_By_PkArgs = {
  student_subscription_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_LessonsArgs = {
  where: Lessons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lessons_By_PkArgs = {
  lesson_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Lessons_CoursesArgs = {
  where: Lessons_Courses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lessons_Courses_By_PkArgs = {
  course_id: Scalars['String'];
  lesson_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Lessons_TeachersArgs = {
  where: Lessons_Teachers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lessons_Teachers_By_PkArgs = {
  lesson_id: Scalars['String'];
  teacher_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Location_TypesArgs = {
  where: Location_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Location_Types_By_PkArgs = {
  location_type_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_LocationsArgs = {
  where: Locations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Locations_By_PkArgs = {
  location_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_MediaArgs = {
  where: Media_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Media_By_PkArgs = {
  media_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_OrganizationsArgs = {
  where: Organizations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Organizations_By_PkArgs = {
  organization_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_ParentsArgs = {
  where: Parents_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Parents_By_PkArgs = {
  parent_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Partner_Dynamic_Form_Field_ValuesArgs = {
  where: Partner_Dynamic_Form_Field_Values_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Partner_Dynamic_Form_Field_Values_By_PkArgs = {
  dynamic_form_field_value_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Partner_Form_ConfigsArgs = {
  where: Partner_Form_Configs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Partner_Form_Configs_By_PkArgs = {
  form_config_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_PlansArgs = {
  where: Plans_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Plans_By_PkArgs = {
  country: Scalars['String'];
  plan_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_PrefectureArgs = {
  where: Prefecture_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Prefecture_By_PkArgs = {
  prefecture_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Preset_Study_PlansArgs = {
  where: Preset_Study_Plans_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Preset_Study_Plans_By_PkArgs = {
  preset_study_plan_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Preset_Study_Plans_WeeklyArgs = {
  where: Preset_Study_Plans_Weekly_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Preset_Study_Plans_Weekly_By_PkArgs = {
  preset_study_plan_weekly_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Preset_Study_Plans_Weekly_FormatArgs = {
  where: Preset_Study_Plans_Weekly_Format_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Promotion_RulesArgs = {
  where: Promotion_Rules_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Promotion_Rules_By_PkArgs = {
  promotion_rule_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_PromotionsArgs = {
  where: Promotions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Promotions_By_PkArgs = {
  promotion_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Questionnaire_QuestionsArgs = {
  where: Questionnaire_Questions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Questionnaire_Questions_By_PkArgs = {
  questionnaire_question_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Questionnaire_User_AnswersArgs = {
  where: Questionnaire_User_Answers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Questionnaire_User_Answers_By_PkArgs = {
  answer_id: Scalars['String'];
  user_notification_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_QuestionnairesArgs = {
  where: Questionnaires_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Questionnaires_By_PkArgs = {
  questionnaire_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_QuestionsArgs = {
  where: Questions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Questions_By_PkArgs = {
  question_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Quiz_SetsArgs = {
  where: Quiz_Sets_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Quiz_Sets_By_PkArgs = {
  quiz_set_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_QuizsetsArgs = {
  where: Quizsets_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Quizsets_By_PkArgs = {
  lo_id: Scalars['String'];
  question_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_QuizzesArgs = {
  where: Quizzes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Quizzes_By_PkArgs = {
  quiz_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_RoleArgs = {
  where: Role_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Role_By_PkArgs = {
  role_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_SchedulerArgs = {
  where: Scheduler_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Scheduler_By_PkArgs = {
  scheduler_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_School_AdminsArgs = {
  where: School_Admins_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_School_Admins_By_PkArgs = {
  school_admin_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_School_ConfigsArgs = {
  where: School_Configs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_School_Configs_By_PkArgs = {
  school_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_School_CourseArgs = {
  where: School_Course_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_School_Course_By_PkArgs = {
  school_course_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_School_InfoArgs = {
  where: School_Info_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_School_Info_By_PkArgs = {
  school_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_School_LevelArgs = {
  where: School_Level_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_School_Level_By_PkArgs = {
  school_level_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_School_Level_GradeArgs = {
  where: School_Level_Grade_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_School_Level_Grade_By_PkArgs = {
  grade_id: Scalars['String'];
  school_level_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_SchoolsArgs = {
  where: Schools_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Schools_By_PkArgs = {
  school_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_StaffArgs = {
  where: Staff_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Staff_By_PkArgs = {
  staff_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Student_Entryexit_RecordsArgs = {
  where: Student_Entryexit_Records_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Student_Entryexit_Records_By_PkArgs = {
  entryexit_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Student_ParentsArgs = {
  where: Student_Parents_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Student_Parents_By_PkArgs = {
  parent_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Student_QrArgs = {
  where: Student_Qr_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Student_Qr_By_PkArgs = {
  qr_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Student_SubscriptionsArgs = {
  where: Student_Subscriptions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Student_Subscriptions_By_PkArgs = {
  student_subscription_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_StudentsArgs = {
  where: Students_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Students_Assigned_CoachesArgs = {
  where: Students_Assigned_Coaches_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Students_By_PkArgs = {
  student_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_TagsArgs = {
  where: Tags_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Tags_By_PkArgs = {
  tag_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_TeachersArgs = {
  where: Teachers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Teachers_By_PkArgs = {
  teacher_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_TopicsArgs = {
  where: Topics_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Topics_By_PkArgs = {
  topic_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Topics_Learning_ObjectivesArgs = {
  where: Topics_Learning_Objectives_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Topics_Learning_Objectives_By_PkArgs = {
  lo_id: Scalars['String'];
  topic_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_User_Access_PathsArgs = {
  where: User_Access_Paths_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_User_Access_Paths_By_PkArgs = {
  location_id: Scalars['String'];
  user_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_User_AddressArgs = {
  where: User_Address_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_User_Address_By_PkArgs = {
  user_address_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_User_GroupArgs = {
  where: User_Group_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_User_Group_By_PkArgs = {
  user_group_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_User_Group_MemberArgs = {
  where: User_Group_Member_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_User_Group_Member_By_PkArgs = {
  user_group_id: Scalars['String'];
  user_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_User_TagArgs = {
  where: User_Tag_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_User_Tag_By_PkArgs = {
  user_tag_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_UsersArgs = {
  where: Users_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Users_By_PkArgs = {
  user_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Users_Info_NotificationsArgs = {
  where: Users_Info_Notifications_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Users_Info_Notifications_By_PkArgs = {
  user_notification_id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootInsert_AssignmentsArgs = {
  objects: Array<Assignments_Insert_Input>;
  on_conflict?: InputMaybe<Assignments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Assignments_OneArgs = {
  object: Assignments_Insert_Input;
  on_conflict?: InputMaybe<Assignments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_BankArgs = {
  objects: Array<Bank_Insert_Input>;
  on_conflict?: InputMaybe<Bank_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Bank_BranchArgs = {
  objects: Array<Bank_Branch_Insert_Input>;
  on_conflict?: InputMaybe<Bank_Branch_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Bank_Branch_OneArgs = {
  object: Bank_Branch_Insert_Input;
  on_conflict?: InputMaybe<Bank_Branch_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Bank_OneArgs = {
  object: Bank_Insert_Input;
  on_conflict?: InputMaybe<Bank_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_BooksArgs = {
  objects: Array<Books_Insert_Input>;
  on_conflict?: InputMaybe<Books_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Books_ChaptersArgs = {
  objects: Array<Books_Chapters_Insert_Input>;
  on_conflict?: InputMaybe<Books_Chapters_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Books_Chapters_OneArgs = {
  object: Books_Chapters_Insert_Input;
  on_conflict?: InputMaybe<Books_Chapters_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Books_OneArgs = {
  object: Books_Insert_Input;
  on_conflict?: InputMaybe<Books_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ChaptersArgs = {
  objects: Array<Chapters_Insert_Input>;
  on_conflict?: InputMaybe<Chapters_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chapters_OneArgs = {
  object: Chapters_Insert_Input;
  on_conflict?: InputMaybe<Chapters_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_CitiesArgs = {
  objects: Array<Cities_Insert_Input>;
  on_conflict?: InputMaybe<Cities_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Cities_OneArgs = {
  object: Cities_Insert_Input;
  on_conflict?: InputMaybe<Cities_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ClassArgs = {
  objects: Array<Class_Insert_Input>;
  on_conflict?: InputMaybe<Class_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Class_MemberArgs = {
  objects: Array<Class_Member_Insert_Input>;
  on_conflict?: InputMaybe<Class_Member_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Class_Member_OneArgs = {
  object: Class_Member_Insert_Input;
  on_conflict?: InputMaybe<Class_Member_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Class_MembersArgs = {
  objects: Array<Class_Members_Insert_Input>;
  on_conflict?: InputMaybe<Class_Members_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Class_Members_OneArgs = {
  object: Class_Members_Insert_Input;
  on_conflict?: InputMaybe<Class_Members_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Class_OneArgs = {
  object: Class_Insert_Input;
  on_conflict?: InputMaybe<Class_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ClassesArgs = {
  objects: Array<Classes_Insert_Input>;
  on_conflict?: InputMaybe<Classes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Classes_OneArgs = {
  object: Classes_Insert_Input;
  on_conflict?: InputMaybe<Classes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_CoachesArgs = {
  objects: Array<Coaches_Insert_Input>;
  on_conflict?: InputMaybe<Coaches_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Coaches_OneArgs = {
  object: Coaches_Insert_Input;
  on_conflict?: InputMaybe<Coaches_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Cod_OrdersArgs = {
  objects: Array<Cod_Orders_Insert_Input>;
  on_conflict?: InputMaybe<Cod_Orders_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Cod_Orders_OneArgs = {
  object: Cod_Orders_Insert_Input;
  on_conflict?: InputMaybe<Cod_Orders_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Conversion_TasksArgs = {
  objects: Array<Conversion_Tasks_Insert_Input>;
  on_conflict?: InputMaybe<Conversion_Tasks_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Conversion_Tasks_OneArgs = {
  object: Conversion_Tasks_Insert_Input;
  on_conflict?: InputMaybe<Conversion_Tasks_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Course_Access_PathsArgs = {
  objects: Array<Course_Access_Paths_Insert_Input>;
  on_conflict?: InputMaybe<Course_Access_Paths_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Course_Access_Paths_OneArgs = {
  object: Course_Access_Paths_Insert_Input;
  on_conflict?: InputMaybe<Course_Access_Paths_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_CoursesArgs = {
  objects: Array<Courses_Insert_Input>;
  on_conflict?: InputMaybe<Courses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Courses_BooksArgs = {
  objects: Array<Courses_Books_Insert_Input>;
  on_conflict?: InputMaybe<Courses_Books_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Courses_Books_OneArgs = {
  object: Courses_Books_Insert_Input;
  on_conflict?: InputMaybe<Courses_Books_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Courses_ClassesArgs = {
  objects: Array<Courses_Classes_Insert_Input>;
  on_conflict?: InputMaybe<Courses_Classes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Courses_Classes_OneArgs = {
  object: Courses_Classes_Insert_Input;
  on_conflict?: InputMaybe<Courses_Classes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Courses_OneArgs = {
  object: Courses_Insert_Input;
  on_conflict?: InputMaybe<Courses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DistrictsArgs = {
  objects: Array<Districts_Insert_Input>;
  on_conflict?: InputMaybe<Districts_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Districts_OneArgs = {
  object: Districts_Insert_Input;
  on_conflict?: InputMaybe<Districts_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Granted_RoleArgs = {
  objects: Array<Granted_Role_Insert_Input>;
  on_conflict?: InputMaybe<Granted_Role_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Granted_Role_Access_PathArgs = {
  objects: Array<Granted_Role_Access_Path_Insert_Input>;
  on_conflict?: InputMaybe<Granted_Role_Access_Path_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Granted_Role_Access_Path_OneArgs = {
  object: Granted_Role_Access_Path_Insert_Input;
  on_conflict?: InputMaybe<Granted_Role_Access_Path_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Granted_Role_OneArgs = {
  object: Granted_Role_Insert_Input;
  on_conflict?: InputMaybe<Granted_Role_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Hub_ToursArgs = {
  objects: Array<Hub_Tours_Insert_Input>;
  on_conflict?: InputMaybe<Hub_Tours_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Hub_Tours_OneArgs = {
  object: Hub_Tours_Insert_Input;
  on_conflict?: InputMaybe<Hub_Tours_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_HubsArgs = {
  objects: Array<Hubs_Insert_Input>;
  on_conflict?: InputMaybe<Hubs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Hubs_OneArgs = {
  object: Hubs_Insert_Input;
  on_conflict?: InputMaybe<Hubs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Info_Notification_MsgsArgs = {
  objects: Array<Info_Notification_Msgs_Insert_Input>;
  on_conflict?: InputMaybe<Info_Notification_Msgs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Info_Notification_Msgs_OneArgs = {
  object: Info_Notification_Msgs_Insert_Input;
  on_conflict?: InputMaybe<Info_Notification_Msgs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Info_NotificationsArgs = {
  objects: Array<Info_Notifications_Insert_Input>;
  on_conflict?: InputMaybe<Info_Notifications_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Info_Notifications_OneArgs = {
  object: Info_Notifications_Insert_Input;
  on_conflict?: InputMaybe<Info_Notifications_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Info_Notifications_TagsArgs = {
  objects: Array<Info_Notifications_Tags_Insert_Input>;
  on_conflict?: InputMaybe<Info_Notifications_Tags_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Info_Notifications_Tags_OneArgs = {
  object: Info_Notifications_Tags_Insert_Input;
  on_conflict?: InputMaybe<Info_Notifications_Tags_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Learning_ObjectivesArgs = {
  objects: Array<Learning_Objectives_Insert_Input>;
  on_conflict?: InputMaybe<Learning_Objectives_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Learning_Objectives_OneArgs = {
  object: Learning_Objectives_Insert_Input;
  on_conflict?: InputMaybe<Learning_Objectives_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_GroupsArgs = {
  objects: Array<Lesson_Groups_Insert_Input>;
  on_conflict?: InputMaybe<Lesson_Groups_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Groups_OneArgs = {
  object: Lesson_Groups_Insert_Input;
  on_conflict?: InputMaybe<Lesson_Groups_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_MembersArgs = {
  objects: Array<Lesson_Members_Insert_Input>;
  on_conflict?: InputMaybe<Lesson_Members_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Members_OneArgs = {
  object: Lesson_Members_Insert_Input;
  on_conflict?: InputMaybe<Lesson_Members_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Report_DetailsArgs = {
  objects: Array<Lesson_Report_Details_Insert_Input>;
  on_conflict?: InputMaybe<Lesson_Report_Details_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Report_Details_OneArgs = {
  object: Lesson_Report_Details_Insert_Input;
  on_conflict?: InputMaybe<Lesson_Report_Details_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_ReportsArgs = {
  objects: Array<Lesson_Reports_Insert_Input>;
  on_conflict?: InputMaybe<Lesson_Reports_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Reports_OneArgs = {
  object: Lesson_Reports_Insert_Input;
  on_conflict?: InputMaybe<Lesson_Reports_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Student_Subscription_Access_PathArgs = {
  objects: Array<Lesson_Student_Subscription_Access_Path_Insert_Input>;
  on_conflict?: InputMaybe<Lesson_Student_Subscription_Access_Path_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Student_Subscription_Access_Path_OneArgs = {
  object: Lesson_Student_Subscription_Access_Path_Insert_Input;
  on_conflict?: InputMaybe<Lesson_Student_Subscription_Access_Path_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Student_SubscriptionsArgs = {
  objects: Array<Lesson_Student_Subscriptions_Insert_Input>;
  on_conflict?: InputMaybe<Lesson_Student_Subscriptions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lesson_Student_Subscriptions_OneArgs = {
  object: Lesson_Student_Subscriptions_Insert_Input;
  on_conflict?: InputMaybe<Lesson_Student_Subscriptions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_LessonsArgs = {
  objects: Array<Lessons_Insert_Input>;
  on_conflict?: InputMaybe<Lessons_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lessons_CoursesArgs = {
  objects: Array<Lessons_Courses_Insert_Input>;
  on_conflict?: InputMaybe<Lessons_Courses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lessons_Courses_OneArgs = {
  object: Lessons_Courses_Insert_Input;
  on_conflict?: InputMaybe<Lessons_Courses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lessons_OneArgs = {
  object: Lessons_Insert_Input;
  on_conflict?: InputMaybe<Lessons_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lessons_TeachersArgs = {
  objects: Array<Lessons_Teachers_Insert_Input>;
  on_conflict?: InputMaybe<Lessons_Teachers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lessons_Teachers_OneArgs = {
  object: Lessons_Teachers_Insert_Input;
  on_conflict?: InputMaybe<Lessons_Teachers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Location_TypesArgs = {
  objects: Array<Location_Types_Insert_Input>;
  on_conflict?: InputMaybe<Location_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Location_Types_OneArgs = {
  object: Location_Types_Insert_Input;
  on_conflict?: InputMaybe<Location_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_LocationsArgs = {
  objects: Array<Locations_Insert_Input>;
  on_conflict?: InputMaybe<Locations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Locations_OneArgs = {
  object: Locations_Insert_Input;
  on_conflict?: InputMaybe<Locations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_MediaArgs = {
  objects: Array<Media_Insert_Input>;
  on_conflict?: InputMaybe<Media_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Media_OneArgs = {
  object: Media_Insert_Input;
  on_conflict?: InputMaybe<Media_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_OrganizationsArgs = {
  objects: Array<Organizations_Insert_Input>;
  on_conflict?: InputMaybe<Organizations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Organizations_OneArgs = {
  object: Organizations_Insert_Input;
  on_conflict?: InputMaybe<Organizations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ParentsArgs = {
  objects: Array<Parents_Insert_Input>;
  on_conflict?: InputMaybe<Parents_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Parents_OneArgs = {
  object: Parents_Insert_Input;
  on_conflict?: InputMaybe<Parents_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Partner_Dynamic_Form_Field_ValuesArgs = {
  objects: Array<Partner_Dynamic_Form_Field_Values_Insert_Input>;
  on_conflict?: InputMaybe<Partner_Dynamic_Form_Field_Values_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Partner_Dynamic_Form_Field_Values_OneArgs = {
  object: Partner_Dynamic_Form_Field_Values_Insert_Input;
  on_conflict?: InputMaybe<Partner_Dynamic_Form_Field_Values_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Partner_Form_ConfigsArgs = {
  objects: Array<Partner_Form_Configs_Insert_Input>;
  on_conflict?: InputMaybe<Partner_Form_Configs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Partner_Form_Configs_OneArgs = {
  object: Partner_Form_Configs_Insert_Input;
  on_conflict?: InputMaybe<Partner_Form_Configs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_PlansArgs = {
  objects: Array<Plans_Insert_Input>;
  on_conflict?: InputMaybe<Plans_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Plans_OneArgs = {
  object: Plans_Insert_Input;
  on_conflict?: InputMaybe<Plans_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_PrefectureArgs = {
  objects: Array<Prefecture_Insert_Input>;
  on_conflict?: InputMaybe<Prefecture_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Prefecture_OneArgs = {
  object: Prefecture_Insert_Input;
  on_conflict?: InputMaybe<Prefecture_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Preset_Study_PlansArgs = {
  objects: Array<Preset_Study_Plans_Insert_Input>;
  on_conflict?: InputMaybe<Preset_Study_Plans_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Preset_Study_Plans_OneArgs = {
  object: Preset_Study_Plans_Insert_Input;
  on_conflict?: InputMaybe<Preset_Study_Plans_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Preset_Study_Plans_WeeklyArgs = {
  objects: Array<Preset_Study_Plans_Weekly_Insert_Input>;
  on_conflict?: InputMaybe<Preset_Study_Plans_Weekly_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Preset_Study_Plans_Weekly_FormatArgs = {
  objects: Array<Preset_Study_Plans_Weekly_Format_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Preset_Study_Plans_Weekly_Format_OneArgs = {
  object: Preset_Study_Plans_Weekly_Format_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_Preset_Study_Plans_Weekly_OneArgs = {
  object: Preset_Study_Plans_Weekly_Insert_Input;
  on_conflict?: InputMaybe<Preset_Study_Plans_Weekly_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Promotion_RulesArgs = {
  objects: Array<Promotion_Rules_Insert_Input>;
  on_conflict?: InputMaybe<Promotion_Rules_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Promotion_Rules_OneArgs = {
  object: Promotion_Rules_Insert_Input;
  on_conflict?: InputMaybe<Promotion_Rules_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_PromotionsArgs = {
  objects: Array<Promotions_Insert_Input>;
  on_conflict?: InputMaybe<Promotions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Promotions_OneArgs = {
  object: Promotions_Insert_Input;
  on_conflict?: InputMaybe<Promotions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Questionnaire_QuestionsArgs = {
  objects: Array<Questionnaire_Questions_Insert_Input>;
  on_conflict?: InputMaybe<Questionnaire_Questions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Questionnaire_Questions_OneArgs = {
  object: Questionnaire_Questions_Insert_Input;
  on_conflict?: InputMaybe<Questionnaire_Questions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Questionnaire_User_AnswersArgs = {
  objects: Array<Questionnaire_User_Answers_Insert_Input>;
  on_conflict?: InputMaybe<Questionnaire_User_Answers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Questionnaire_User_Answers_OneArgs = {
  object: Questionnaire_User_Answers_Insert_Input;
  on_conflict?: InputMaybe<Questionnaire_User_Answers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_QuestionnairesArgs = {
  objects: Array<Questionnaires_Insert_Input>;
  on_conflict?: InputMaybe<Questionnaires_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Questionnaires_OneArgs = {
  object: Questionnaires_Insert_Input;
  on_conflict?: InputMaybe<Questionnaires_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_QuestionsArgs = {
  objects: Array<Questions_Insert_Input>;
  on_conflict?: InputMaybe<Questions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Questions_OneArgs = {
  object: Questions_Insert_Input;
  on_conflict?: InputMaybe<Questions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Quiz_SetsArgs = {
  objects: Array<Quiz_Sets_Insert_Input>;
  on_conflict?: InputMaybe<Quiz_Sets_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Quiz_Sets_OneArgs = {
  object: Quiz_Sets_Insert_Input;
  on_conflict?: InputMaybe<Quiz_Sets_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_QuizsetsArgs = {
  objects: Array<Quizsets_Insert_Input>;
  on_conflict?: InputMaybe<Quizsets_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Quizsets_OneArgs = {
  object: Quizsets_Insert_Input;
  on_conflict?: InputMaybe<Quizsets_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_QuizzesArgs = {
  objects: Array<Quizzes_Insert_Input>;
  on_conflict?: InputMaybe<Quizzes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Quizzes_OneArgs = {
  object: Quizzes_Insert_Input;
  on_conflict?: InputMaybe<Quizzes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RoleArgs = {
  objects: Array<Role_Insert_Input>;
  on_conflict?: InputMaybe<Role_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Role_OneArgs = {
  object: Role_Insert_Input;
  on_conflict?: InputMaybe<Role_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_SchedulerArgs = {
  objects: Array<Scheduler_Insert_Input>;
  on_conflict?: InputMaybe<Scheduler_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Scheduler_OneArgs = {
  object: Scheduler_Insert_Input;
  on_conflict?: InputMaybe<Scheduler_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_School_AdminsArgs = {
  objects: Array<School_Admins_Insert_Input>;
  on_conflict?: InputMaybe<School_Admins_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_School_Admins_OneArgs = {
  object: School_Admins_Insert_Input;
  on_conflict?: InputMaybe<School_Admins_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_School_ConfigsArgs = {
  objects: Array<School_Configs_Insert_Input>;
  on_conflict?: InputMaybe<School_Configs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_School_Configs_OneArgs = {
  object: School_Configs_Insert_Input;
  on_conflict?: InputMaybe<School_Configs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_School_CourseArgs = {
  objects: Array<School_Course_Insert_Input>;
  on_conflict?: InputMaybe<School_Course_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_School_Course_OneArgs = {
  object: School_Course_Insert_Input;
  on_conflict?: InputMaybe<School_Course_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_School_InfoArgs = {
  objects: Array<School_Info_Insert_Input>;
  on_conflict?: InputMaybe<School_Info_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_School_Info_OneArgs = {
  object: School_Info_Insert_Input;
  on_conflict?: InputMaybe<School_Info_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_School_LevelArgs = {
  objects: Array<School_Level_Insert_Input>;
  on_conflict?: InputMaybe<School_Level_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_School_Level_GradeArgs = {
  objects: Array<School_Level_Grade_Insert_Input>;
  on_conflict?: InputMaybe<School_Level_Grade_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_School_Level_Grade_OneArgs = {
  object: School_Level_Grade_Insert_Input;
  on_conflict?: InputMaybe<School_Level_Grade_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_School_Level_OneArgs = {
  object: School_Level_Insert_Input;
  on_conflict?: InputMaybe<School_Level_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_SchoolsArgs = {
  objects: Array<Schools_Insert_Input>;
  on_conflict?: InputMaybe<Schools_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Schools_OneArgs = {
  object: Schools_Insert_Input;
  on_conflict?: InputMaybe<Schools_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_StaffArgs = {
  objects: Array<Staff_Insert_Input>;
  on_conflict?: InputMaybe<Staff_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Staff_OneArgs = {
  object: Staff_Insert_Input;
  on_conflict?: InputMaybe<Staff_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Entryexit_RecordsArgs = {
  objects: Array<Student_Entryexit_Records_Insert_Input>;
  on_conflict?: InputMaybe<Student_Entryexit_Records_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Entryexit_Records_OneArgs = {
  object: Student_Entryexit_Records_Insert_Input;
  on_conflict?: InputMaybe<Student_Entryexit_Records_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_ParentsArgs = {
  objects: Array<Student_Parents_Insert_Input>;
  on_conflict?: InputMaybe<Student_Parents_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Parents_OneArgs = {
  object: Student_Parents_Insert_Input;
  on_conflict?: InputMaybe<Student_Parents_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_QrArgs = {
  objects: Array<Student_Qr_Insert_Input>;
  on_conflict?: InputMaybe<Student_Qr_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Qr_OneArgs = {
  object: Student_Qr_Insert_Input;
  on_conflict?: InputMaybe<Student_Qr_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_SubscriptionsArgs = {
  objects: Array<Student_Subscriptions_Insert_Input>;
  on_conflict?: InputMaybe<Student_Subscriptions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Student_Subscriptions_OneArgs = {
  object: Student_Subscriptions_Insert_Input;
  on_conflict?: InputMaybe<Student_Subscriptions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_StudentsArgs = {
  objects: Array<Students_Insert_Input>;
  on_conflict?: InputMaybe<Students_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Students_Assigned_CoachesArgs = {
  objects: Array<Students_Assigned_Coaches_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Students_Assigned_Coaches_OneArgs = {
  object: Students_Assigned_Coaches_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_Students_OneArgs = {
  object: Students_Insert_Input;
  on_conflict?: InputMaybe<Students_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TagsArgs = {
  objects: Array<Tags_Insert_Input>;
  on_conflict?: InputMaybe<Tags_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Tags_OneArgs = {
  object: Tags_Insert_Input;
  on_conflict?: InputMaybe<Tags_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TeachersArgs = {
  objects: Array<Teachers_Insert_Input>;
  on_conflict?: InputMaybe<Teachers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Teachers_OneArgs = {
  object: Teachers_Insert_Input;
  on_conflict?: InputMaybe<Teachers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TopicsArgs = {
  objects: Array<Topics_Insert_Input>;
  on_conflict?: InputMaybe<Topics_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Topics_Learning_ObjectivesArgs = {
  objects: Array<Topics_Learning_Objectives_Insert_Input>;
  on_conflict?: InputMaybe<Topics_Learning_Objectives_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Topics_Learning_Objectives_OneArgs = {
  object: Topics_Learning_Objectives_Insert_Input;
  on_conflict?: InputMaybe<Topics_Learning_Objectives_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Topics_OneArgs = {
  object: Topics_Insert_Input;
  on_conflict?: InputMaybe<Topics_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_Access_PathsArgs = {
  objects: Array<User_Access_Paths_Insert_Input>;
  on_conflict?: InputMaybe<User_Access_Paths_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_Access_Paths_OneArgs = {
  object: User_Access_Paths_Insert_Input;
  on_conflict?: InputMaybe<User_Access_Paths_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_AddressArgs = {
  objects: Array<User_Address_Insert_Input>;
  on_conflict?: InputMaybe<User_Address_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_Address_OneArgs = {
  object: User_Address_Insert_Input;
  on_conflict?: InputMaybe<User_Address_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_GroupArgs = {
  objects: Array<User_Group_Insert_Input>;
  on_conflict?: InputMaybe<User_Group_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_Group_MemberArgs = {
  objects: Array<User_Group_Member_Insert_Input>;
  on_conflict?: InputMaybe<User_Group_Member_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_Group_Member_OneArgs = {
  object: User_Group_Member_Insert_Input;
  on_conflict?: InputMaybe<User_Group_Member_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_Group_OneArgs = {
  object: User_Group_Insert_Input;
  on_conflict?: InputMaybe<User_Group_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_TagArgs = {
  objects: Array<User_Tag_Insert_Input>;
  on_conflict?: InputMaybe<User_Tag_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_Tag_OneArgs = {
  object: User_Tag_Insert_Input;
  on_conflict?: InputMaybe<User_Tag_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_UsersArgs = {
  objects: Array<Users_Insert_Input>;
  on_conflict?: InputMaybe<Users_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Users_Info_NotificationsArgs = {
  objects: Array<Users_Info_Notifications_Insert_Input>;
  on_conflict?: InputMaybe<Users_Info_Notifications_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Users_Info_Notifications_OneArgs = {
  object: Users_Info_Notifications_Insert_Input;
  on_conflict?: InputMaybe<Users_Info_Notifications_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Users_OneArgs = {
  object: Users_Insert_Input;
  on_conflict?: InputMaybe<Users_On_Conflict>;
};


/** mutation root */
export type Mutation_RootUpdate_AssignmentsArgs = {
  _inc?: InputMaybe<Assignments_Inc_Input>;
  _set?: InputMaybe<Assignments_Set_Input>;
  where: Assignments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Assignments_By_PkArgs = {
  _inc?: InputMaybe<Assignments_Inc_Input>;
  _set?: InputMaybe<Assignments_Set_Input>;
  pk_columns: Assignments_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_BankArgs = {
  _set?: InputMaybe<Bank_Set_Input>;
  where: Bank_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Bank_BranchArgs = {
  _set?: InputMaybe<Bank_Branch_Set_Input>;
  where: Bank_Branch_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Bank_Branch_By_PkArgs = {
  _set?: InputMaybe<Bank_Branch_Set_Input>;
  pk_columns: Bank_Branch_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Bank_By_PkArgs = {
  _set?: InputMaybe<Bank_Set_Input>;
  pk_columns: Bank_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_BooksArgs = {
  _inc?: InputMaybe<Books_Inc_Input>;
  _set?: InputMaybe<Books_Set_Input>;
  where: Books_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Books_By_PkArgs = {
  _inc?: InputMaybe<Books_Inc_Input>;
  _set?: InputMaybe<Books_Set_Input>;
  pk_columns: Books_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Books_ChaptersArgs = {
  _set?: InputMaybe<Books_Chapters_Set_Input>;
  where: Books_Chapters_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Books_Chapters_By_PkArgs = {
  _set?: InputMaybe<Books_Chapters_Set_Input>;
  pk_columns: Books_Chapters_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ChaptersArgs = {
  _inc?: InputMaybe<Chapters_Inc_Input>;
  _set?: InputMaybe<Chapters_Set_Input>;
  where: Chapters_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Chapters_By_PkArgs = {
  _inc?: InputMaybe<Chapters_Inc_Input>;
  _set?: InputMaybe<Chapters_Set_Input>;
  pk_columns: Chapters_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_CitiesArgs = {
  _inc?: InputMaybe<Cities_Inc_Input>;
  _set?: InputMaybe<Cities_Set_Input>;
  where: Cities_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Cities_By_PkArgs = {
  _inc?: InputMaybe<Cities_Inc_Input>;
  _set?: InputMaybe<Cities_Set_Input>;
  pk_columns: Cities_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ClassArgs = {
  _set?: InputMaybe<Class_Set_Input>;
  where: Class_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Class_By_PkArgs = {
  _set?: InputMaybe<Class_Set_Input>;
  pk_columns: Class_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Class_MemberArgs = {
  _set?: InputMaybe<Class_Member_Set_Input>;
  where: Class_Member_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Class_Member_By_PkArgs = {
  _set?: InputMaybe<Class_Member_Set_Input>;
  pk_columns: Class_Member_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Class_MembersArgs = {
  _inc?: InputMaybe<Class_Members_Inc_Input>;
  _set?: InputMaybe<Class_Members_Set_Input>;
  where: Class_Members_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Class_Members_By_PkArgs = {
  _inc?: InputMaybe<Class_Members_Inc_Input>;
  _set?: InputMaybe<Class_Members_Set_Input>;
  pk_columns: Class_Members_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ClassesArgs = {
  _inc?: InputMaybe<Classes_Inc_Input>;
  _set?: InputMaybe<Classes_Set_Input>;
  where: Classes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Classes_By_PkArgs = {
  _inc?: InputMaybe<Classes_Inc_Input>;
  _set?: InputMaybe<Classes_Set_Input>;
  pk_columns: Classes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_CoachesArgs = {
  _set?: InputMaybe<Coaches_Set_Input>;
  where: Coaches_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Coaches_By_PkArgs = {
  _set?: InputMaybe<Coaches_Set_Input>;
  pk_columns: Coaches_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Cod_OrdersArgs = {
  _inc?: InputMaybe<Cod_Orders_Inc_Input>;
  _set?: InputMaybe<Cod_Orders_Set_Input>;
  where: Cod_Orders_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Cod_Orders_By_PkArgs = {
  _inc?: InputMaybe<Cod_Orders_Inc_Input>;
  _set?: InputMaybe<Cod_Orders_Set_Input>;
  pk_columns: Cod_Orders_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Conversion_TasksArgs = {
  _append?: InputMaybe<Conversion_Tasks_Append_Input>;
  _delete_at_path?: InputMaybe<Conversion_Tasks_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Conversion_Tasks_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Conversion_Tasks_Delete_Key_Input>;
  _prepend?: InputMaybe<Conversion_Tasks_Prepend_Input>;
  _set?: InputMaybe<Conversion_Tasks_Set_Input>;
  where: Conversion_Tasks_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Conversion_Tasks_By_PkArgs = {
  _append?: InputMaybe<Conversion_Tasks_Append_Input>;
  _delete_at_path?: InputMaybe<Conversion_Tasks_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Conversion_Tasks_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Conversion_Tasks_Delete_Key_Input>;
  _prepend?: InputMaybe<Conversion_Tasks_Prepend_Input>;
  _set?: InputMaybe<Conversion_Tasks_Set_Input>;
  pk_columns: Conversion_Tasks_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Course_Access_PathsArgs = {
  _set?: InputMaybe<Course_Access_Paths_Set_Input>;
  where: Course_Access_Paths_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Course_Access_Paths_By_PkArgs = {
  _set?: InputMaybe<Course_Access_Paths_Set_Input>;
  pk_columns: Course_Access_Paths_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_CoursesArgs = {
  _inc?: InputMaybe<Courses_Inc_Input>;
  _set?: InputMaybe<Courses_Set_Input>;
  where: Courses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Courses_BooksArgs = {
  _set?: InputMaybe<Courses_Books_Set_Input>;
  where: Courses_Books_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Courses_Books_By_PkArgs = {
  _set?: InputMaybe<Courses_Books_Set_Input>;
  pk_columns: Courses_Books_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Courses_By_PkArgs = {
  _inc?: InputMaybe<Courses_Inc_Input>;
  _set?: InputMaybe<Courses_Set_Input>;
  pk_columns: Courses_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Courses_ClassesArgs = {
  _inc?: InputMaybe<Courses_Classes_Inc_Input>;
  _set?: InputMaybe<Courses_Classes_Set_Input>;
  where: Courses_Classes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Courses_Classes_By_PkArgs = {
  _inc?: InputMaybe<Courses_Classes_Inc_Input>;
  _set?: InputMaybe<Courses_Classes_Set_Input>;
  pk_columns: Courses_Classes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_DistrictsArgs = {
  _inc?: InputMaybe<Districts_Inc_Input>;
  _set?: InputMaybe<Districts_Set_Input>;
  where: Districts_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Districts_By_PkArgs = {
  _inc?: InputMaybe<Districts_Inc_Input>;
  _set?: InputMaybe<Districts_Set_Input>;
  pk_columns: Districts_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Granted_RoleArgs = {
  _set?: InputMaybe<Granted_Role_Set_Input>;
  where: Granted_Role_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Granted_Role_Access_PathArgs = {
  _set?: InputMaybe<Granted_Role_Access_Path_Set_Input>;
  where: Granted_Role_Access_Path_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Granted_Role_Access_Path_By_PkArgs = {
  _set?: InputMaybe<Granted_Role_Access_Path_Set_Input>;
  pk_columns: Granted_Role_Access_Path_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Granted_Role_By_PkArgs = {
  _set?: InputMaybe<Granted_Role_Set_Input>;
  pk_columns: Granted_Role_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Hub_ToursArgs = {
  _inc?: InputMaybe<Hub_Tours_Inc_Input>;
  _set?: InputMaybe<Hub_Tours_Set_Input>;
  where: Hub_Tours_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Hub_Tours_By_PkArgs = {
  _inc?: InputMaybe<Hub_Tours_Inc_Input>;
  _set?: InputMaybe<Hub_Tours_Set_Input>;
  pk_columns: Hub_Tours_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_HubsArgs = {
  _append?: InputMaybe<Hubs_Append_Input>;
  _delete_at_path?: InputMaybe<Hubs_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Hubs_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Hubs_Delete_Key_Input>;
  _inc?: InputMaybe<Hubs_Inc_Input>;
  _prepend?: InputMaybe<Hubs_Prepend_Input>;
  _set?: InputMaybe<Hubs_Set_Input>;
  where: Hubs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Hubs_By_PkArgs = {
  _append?: InputMaybe<Hubs_Append_Input>;
  _delete_at_path?: InputMaybe<Hubs_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Hubs_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Hubs_Delete_Key_Input>;
  _inc?: InputMaybe<Hubs_Inc_Input>;
  _prepend?: InputMaybe<Hubs_Prepend_Input>;
  _set?: InputMaybe<Hubs_Set_Input>;
  pk_columns: Hubs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Info_Notification_MsgsArgs = {
  _append?: InputMaybe<Info_Notification_Msgs_Append_Input>;
  _delete_at_path?: InputMaybe<Info_Notification_Msgs_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Info_Notification_Msgs_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Info_Notification_Msgs_Delete_Key_Input>;
  _prepend?: InputMaybe<Info_Notification_Msgs_Prepend_Input>;
  _set?: InputMaybe<Info_Notification_Msgs_Set_Input>;
  where: Info_Notification_Msgs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Info_Notification_Msgs_By_PkArgs = {
  _append?: InputMaybe<Info_Notification_Msgs_Append_Input>;
  _delete_at_path?: InputMaybe<Info_Notification_Msgs_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Info_Notification_Msgs_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Info_Notification_Msgs_Delete_Key_Input>;
  _prepend?: InputMaybe<Info_Notification_Msgs_Prepend_Input>;
  _set?: InputMaybe<Info_Notification_Msgs_Set_Input>;
  pk_columns: Info_Notification_Msgs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Info_NotificationsArgs = {
  _append?: InputMaybe<Info_Notifications_Append_Input>;
  _delete_at_path?: InputMaybe<Info_Notifications_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Info_Notifications_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Info_Notifications_Delete_Key_Input>;
  _inc?: InputMaybe<Info_Notifications_Inc_Input>;
  _prepend?: InputMaybe<Info_Notifications_Prepend_Input>;
  _set?: InputMaybe<Info_Notifications_Set_Input>;
  where: Info_Notifications_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Info_Notifications_By_PkArgs = {
  _append?: InputMaybe<Info_Notifications_Append_Input>;
  _delete_at_path?: InputMaybe<Info_Notifications_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Info_Notifications_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Info_Notifications_Delete_Key_Input>;
  _inc?: InputMaybe<Info_Notifications_Inc_Input>;
  _prepend?: InputMaybe<Info_Notifications_Prepend_Input>;
  _set?: InputMaybe<Info_Notifications_Set_Input>;
  pk_columns: Info_Notifications_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Info_Notifications_TagsArgs = {
  _set?: InputMaybe<Info_Notifications_Tags_Set_Input>;
  where: Info_Notifications_Tags_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Info_Notifications_Tags_By_PkArgs = {
  _set?: InputMaybe<Info_Notifications_Tags_Set_Input>;
  pk_columns: Info_Notifications_Tags_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Learning_ObjectivesArgs = {
  _inc?: InputMaybe<Learning_Objectives_Inc_Input>;
  _set?: InputMaybe<Learning_Objectives_Set_Input>;
  where: Learning_Objectives_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Learning_Objectives_By_PkArgs = {
  _inc?: InputMaybe<Learning_Objectives_Inc_Input>;
  _set?: InputMaybe<Learning_Objectives_Set_Input>;
  pk_columns: Learning_Objectives_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_GroupsArgs = {
  _set?: InputMaybe<Lesson_Groups_Set_Input>;
  where: Lesson_Groups_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Groups_By_PkArgs = {
  _set?: InputMaybe<Lesson_Groups_Set_Input>;
  pk_columns: Lesson_Groups_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_MembersArgs = {
  _set?: InputMaybe<Lesson_Members_Set_Input>;
  where: Lesson_Members_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Members_By_PkArgs = {
  _set?: InputMaybe<Lesson_Members_Set_Input>;
  pk_columns: Lesson_Members_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Report_DetailsArgs = {
  _set?: InputMaybe<Lesson_Report_Details_Set_Input>;
  where: Lesson_Report_Details_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Report_Details_By_PkArgs = {
  _set?: InputMaybe<Lesson_Report_Details_Set_Input>;
  pk_columns: Lesson_Report_Details_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_ReportsArgs = {
  _set?: InputMaybe<Lesson_Reports_Set_Input>;
  where: Lesson_Reports_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Reports_By_PkArgs = {
  _set?: InputMaybe<Lesson_Reports_Set_Input>;
  pk_columns: Lesson_Reports_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Student_Subscription_Access_PathArgs = {
  _set?: InputMaybe<Lesson_Student_Subscription_Access_Path_Set_Input>;
  where: Lesson_Student_Subscription_Access_Path_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Student_Subscription_Access_Path_By_PkArgs = {
  _set?: InputMaybe<Lesson_Student_Subscription_Access_Path_Set_Input>;
  pk_columns: Lesson_Student_Subscription_Access_Path_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Student_SubscriptionsArgs = {
  _set?: InputMaybe<Lesson_Student_Subscriptions_Set_Input>;
  where: Lesson_Student_Subscriptions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lesson_Student_Subscriptions_By_PkArgs = {
  _set?: InputMaybe<Lesson_Student_Subscriptions_Set_Input>;
  pk_columns: Lesson_Student_Subscriptions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_LessonsArgs = {
  _append?: InputMaybe<Lessons_Append_Input>;
  _delete_at_path?: InputMaybe<Lessons_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Lessons_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Lessons_Delete_Key_Input>;
  _inc?: InputMaybe<Lessons_Inc_Input>;
  _prepend?: InputMaybe<Lessons_Prepend_Input>;
  _set?: InputMaybe<Lessons_Set_Input>;
  where: Lessons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lessons_By_PkArgs = {
  _append?: InputMaybe<Lessons_Append_Input>;
  _delete_at_path?: InputMaybe<Lessons_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Lessons_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Lessons_Delete_Key_Input>;
  _inc?: InputMaybe<Lessons_Inc_Input>;
  _prepend?: InputMaybe<Lessons_Prepend_Input>;
  _set?: InputMaybe<Lessons_Set_Input>;
  pk_columns: Lessons_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lessons_CoursesArgs = {
  _set?: InputMaybe<Lessons_Courses_Set_Input>;
  where: Lessons_Courses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lessons_Courses_By_PkArgs = {
  _set?: InputMaybe<Lessons_Courses_Set_Input>;
  pk_columns: Lessons_Courses_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lessons_TeachersArgs = {
  _set?: InputMaybe<Lessons_Teachers_Set_Input>;
  where: Lessons_Teachers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lessons_Teachers_By_PkArgs = {
  _set?: InputMaybe<Lessons_Teachers_Set_Input>;
  pk_columns: Lessons_Teachers_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Location_TypesArgs = {
  _set?: InputMaybe<Location_Types_Set_Input>;
  where: Location_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Location_Types_By_PkArgs = {
  _set?: InputMaybe<Location_Types_Set_Input>;
  pk_columns: Location_Types_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_LocationsArgs = {
  _set?: InputMaybe<Locations_Set_Input>;
  where: Locations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Locations_By_PkArgs = {
  _set?: InputMaybe<Locations_Set_Input>;
  pk_columns: Locations_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_MediaArgs = {
  _append?: InputMaybe<Media_Append_Input>;
  _delete_at_path?: InputMaybe<Media_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Media_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Media_Delete_Key_Input>;
  _prepend?: InputMaybe<Media_Prepend_Input>;
  _set?: InputMaybe<Media_Set_Input>;
  where: Media_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Media_By_PkArgs = {
  _append?: InputMaybe<Media_Append_Input>;
  _delete_at_path?: InputMaybe<Media_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Media_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Media_Delete_Key_Input>;
  _prepend?: InputMaybe<Media_Prepend_Input>;
  _set?: InputMaybe<Media_Set_Input>;
  pk_columns: Media_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_OrganizationsArgs = {
  _set?: InputMaybe<Organizations_Set_Input>;
  where: Organizations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Organizations_By_PkArgs = {
  _set?: InputMaybe<Organizations_Set_Input>;
  pk_columns: Organizations_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ParentsArgs = {
  _inc?: InputMaybe<Parents_Inc_Input>;
  _set?: InputMaybe<Parents_Set_Input>;
  where: Parents_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Parents_By_PkArgs = {
  _inc?: InputMaybe<Parents_Inc_Input>;
  _set?: InputMaybe<Parents_Set_Input>;
  pk_columns: Parents_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Partner_Dynamic_Form_Field_ValuesArgs = {
  _append?: InputMaybe<Partner_Dynamic_Form_Field_Values_Append_Input>;
  _delete_at_path?: InputMaybe<Partner_Dynamic_Form_Field_Values_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Partner_Dynamic_Form_Field_Values_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Partner_Dynamic_Form_Field_Values_Delete_Key_Input>;
  _inc?: InputMaybe<Partner_Dynamic_Form_Field_Values_Inc_Input>;
  _prepend?: InputMaybe<Partner_Dynamic_Form_Field_Values_Prepend_Input>;
  _set?: InputMaybe<Partner_Dynamic_Form_Field_Values_Set_Input>;
  where: Partner_Dynamic_Form_Field_Values_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Partner_Dynamic_Form_Field_Values_By_PkArgs = {
  _append?: InputMaybe<Partner_Dynamic_Form_Field_Values_Append_Input>;
  _delete_at_path?: InputMaybe<Partner_Dynamic_Form_Field_Values_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Partner_Dynamic_Form_Field_Values_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Partner_Dynamic_Form_Field_Values_Delete_Key_Input>;
  _inc?: InputMaybe<Partner_Dynamic_Form_Field_Values_Inc_Input>;
  _prepend?: InputMaybe<Partner_Dynamic_Form_Field_Values_Prepend_Input>;
  _set?: InputMaybe<Partner_Dynamic_Form_Field_Values_Set_Input>;
  pk_columns: Partner_Dynamic_Form_Field_Values_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Partner_Form_ConfigsArgs = {
  _append?: InputMaybe<Partner_Form_Configs_Append_Input>;
  _delete_at_path?: InputMaybe<Partner_Form_Configs_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Partner_Form_Configs_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Partner_Form_Configs_Delete_Key_Input>;
  _inc?: InputMaybe<Partner_Form_Configs_Inc_Input>;
  _prepend?: InputMaybe<Partner_Form_Configs_Prepend_Input>;
  _set?: InputMaybe<Partner_Form_Configs_Set_Input>;
  where: Partner_Form_Configs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Partner_Form_Configs_By_PkArgs = {
  _append?: InputMaybe<Partner_Form_Configs_Append_Input>;
  _delete_at_path?: InputMaybe<Partner_Form_Configs_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Partner_Form_Configs_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Partner_Form_Configs_Delete_Key_Input>;
  _inc?: InputMaybe<Partner_Form_Configs_Inc_Input>;
  _prepend?: InputMaybe<Partner_Form_Configs_Prepend_Input>;
  _set?: InputMaybe<Partner_Form_Configs_Set_Input>;
  pk_columns: Partner_Form_Configs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_PlansArgs = {
  _inc?: InputMaybe<Plans_Inc_Input>;
  _set?: InputMaybe<Plans_Set_Input>;
  where: Plans_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Plans_By_PkArgs = {
  _inc?: InputMaybe<Plans_Inc_Input>;
  _set?: InputMaybe<Plans_Set_Input>;
  pk_columns: Plans_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_PrefectureArgs = {
  _set?: InputMaybe<Prefecture_Set_Input>;
  where: Prefecture_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Prefecture_By_PkArgs = {
  _set?: InputMaybe<Prefecture_Set_Input>;
  pk_columns: Prefecture_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Preset_Study_PlansArgs = {
  _inc?: InputMaybe<Preset_Study_Plans_Inc_Input>;
  _set?: InputMaybe<Preset_Study_Plans_Set_Input>;
  where: Preset_Study_Plans_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Preset_Study_Plans_By_PkArgs = {
  _inc?: InputMaybe<Preset_Study_Plans_Inc_Input>;
  _set?: InputMaybe<Preset_Study_Plans_Set_Input>;
  pk_columns: Preset_Study_Plans_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Preset_Study_Plans_WeeklyArgs = {
  _inc?: InputMaybe<Preset_Study_Plans_Weekly_Inc_Input>;
  _set?: InputMaybe<Preset_Study_Plans_Weekly_Set_Input>;
  where: Preset_Study_Plans_Weekly_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Preset_Study_Plans_Weekly_By_PkArgs = {
  _inc?: InputMaybe<Preset_Study_Plans_Weekly_Inc_Input>;
  _set?: InputMaybe<Preset_Study_Plans_Weekly_Set_Input>;
  pk_columns: Preset_Study_Plans_Weekly_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Preset_Study_Plans_Weekly_FormatArgs = {
  _inc?: InputMaybe<Preset_Study_Plans_Weekly_Format_Inc_Input>;
  _set?: InputMaybe<Preset_Study_Plans_Weekly_Format_Set_Input>;
  where: Preset_Study_Plans_Weekly_Format_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Promotion_RulesArgs = {
  _append?: InputMaybe<Promotion_Rules_Append_Input>;
  _delete_at_path?: InputMaybe<Promotion_Rules_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Promotion_Rules_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Promotion_Rules_Delete_Key_Input>;
  _inc?: InputMaybe<Promotion_Rules_Inc_Input>;
  _prepend?: InputMaybe<Promotion_Rules_Prepend_Input>;
  _set?: InputMaybe<Promotion_Rules_Set_Input>;
  where: Promotion_Rules_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Promotion_Rules_By_PkArgs = {
  _append?: InputMaybe<Promotion_Rules_Append_Input>;
  _delete_at_path?: InputMaybe<Promotion_Rules_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Promotion_Rules_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Promotion_Rules_Delete_Key_Input>;
  _inc?: InputMaybe<Promotion_Rules_Inc_Input>;
  _prepend?: InputMaybe<Promotion_Rules_Prepend_Input>;
  _set?: InputMaybe<Promotion_Rules_Set_Input>;
  pk_columns: Promotion_Rules_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_PromotionsArgs = {
  _inc?: InputMaybe<Promotions_Inc_Input>;
  _set?: InputMaybe<Promotions_Set_Input>;
  where: Promotions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Promotions_By_PkArgs = {
  _inc?: InputMaybe<Promotions_Inc_Input>;
  _set?: InputMaybe<Promotions_Set_Input>;
  pk_columns: Promotions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Questionnaire_QuestionsArgs = {
  _inc?: InputMaybe<Questionnaire_Questions_Inc_Input>;
  _set?: InputMaybe<Questionnaire_Questions_Set_Input>;
  where: Questionnaire_Questions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Questionnaire_Questions_By_PkArgs = {
  _inc?: InputMaybe<Questionnaire_Questions_Inc_Input>;
  _set?: InputMaybe<Questionnaire_Questions_Set_Input>;
  pk_columns: Questionnaire_Questions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Questionnaire_User_AnswersArgs = {
  _set?: InputMaybe<Questionnaire_User_Answers_Set_Input>;
  where: Questionnaire_User_Answers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Questionnaire_User_Answers_By_PkArgs = {
  _set?: InputMaybe<Questionnaire_User_Answers_Set_Input>;
  pk_columns: Questionnaire_User_Answers_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_QuestionnairesArgs = {
  _set?: InputMaybe<Questionnaires_Set_Input>;
  where: Questionnaires_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Questionnaires_By_PkArgs = {
  _set?: InputMaybe<Questionnaires_Set_Input>;
  pk_columns: Questionnaires_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_QuestionsArgs = {
  _inc?: InputMaybe<Questions_Inc_Input>;
  _set?: InputMaybe<Questions_Set_Input>;
  where: Questions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Questions_By_PkArgs = {
  _inc?: InputMaybe<Questions_Inc_Input>;
  _set?: InputMaybe<Questions_Set_Input>;
  pk_columns: Questions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Quiz_SetsArgs = {
  _set?: InputMaybe<Quiz_Sets_Set_Input>;
  where: Quiz_Sets_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Quiz_Sets_By_PkArgs = {
  _set?: InputMaybe<Quiz_Sets_Set_Input>;
  pk_columns: Quiz_Sets_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_QuizsetsArgs = {
  _inc?: InputMaybe<Quizsets_Inc_Input>;
  _set?: InputMaybe<Quizsets_Set_Input>;
  where: Quizsets_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Quizsets_By_PkArgs = {
  _inc?: InputMaybe<Quizsets_Inc_Input>;
  _set?: InputMaybe<Quizsets_Set_Input>;
  pk_columns: Quizsets_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_QuizzesArgs = {
  _append?: InputMaybe<Quizzes_Append_Input>;
  _delete_at_path?: InputMaybe<Quizzes_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Quizzes_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Quizzes_Delete_Key_Input>;
  _inc?: InputMaybe<Quizzes_Inc_Input>;
  _prepend?: InputMaybe<Quizzes_Prepend_Input>;
  _set?: InputMaybe<Quizzes_Set_Input>;
  where: Quizzes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Quizzes_By_PkArgs = {
  _append?: InputMaybe<Quizzes_Append_Input>;
  _delete_at_path?: InputMaybe<Quizzes_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Quizzes_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Quizzes_Delete_Key_Input>;
  _inc?: InputMaybe<Quizzes_Inc_Input>;
  _prepend?: InputMaybe<Quizzes_Prepend_Input>;
  _set?: InputMaybe<Quizzes_Set_Input>;
  pk_columns: Quizzes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_RoleArgs = {
  _set?: InputMaybe<Role_Set_Input>;
  where: Role_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Role_By_PkArgs = {
  _set?: InputMaybe<Role_Set_Input>;
  pk_columns: Role_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_SchedulerArgs = {
  _set?: InputMaybe<Scheduler_Set_Input>;
  where: Scheduler_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Scheduler_By_PkArgs = {
  _set?: InputMaybe<Scheduler_Set_Input>;
  pk_columns: Scheduler_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_School_AdminsArgs = {
  _inc?: InputMaybe<School_Admins_Inc_Input>;
  _set?: InputMaybe<School_Admins_Set_Input>;
  where: School_Admins_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_School_Admins_By_PkArgs = {
  _inc?: InputMaybe<School_Admins_Inc_Input>;
  _set?: InputMaybe<School_Admins_Set_Input>;
  pk_columns: School_Admins_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_School_ConfigsArgs = {
  _inc?: InputMaybe<School_Configs_Inc_Input>;
  _set?: InputMaybe<School_Configs_Set_Input>;
  where: School_Configs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_School_Configs_By_PkArgs = {
  _inc?: InputMaybe<School_Configs_Inc_Input>;
  _set?: InputMaybe<School_Configs_Set_Input>;
  pk_columns: School_Configs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_School_CourseArgs = {
  _set?: InputMaybe<School_Course_Set_Input>;
  where: School_Course_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_School_Course_By_PkArgs = {
  _set?: InputMaybe<School_Course_Set_Input>;
  pk_columns: School_Course_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_School_InfoArgs = {
  _set?: InputMaybe<School_Info_Set_Input>;
  where: School_Info_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_School_Info_By_PkArgs = {
  _set?: InputMaybe<School_Info_Set_Input>;
  pk_columns: School_Info_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_School_LevelArgs = {
  _inc?: InputMaybe<School_Level_Inc_Input>;
  _set?: InputMaybe<School_Level_Set_Input>;
  where: School_Level_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_School_Level_By_PkArgs = {
  _inc?: InputMaybe<School_Level_Inc_Input>;
  _set?: InputMaybe<School_Level_Set_Input>;
  pk_columns: School_Level_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_School_Level_GradeArgs = {
  _set?: InputMaybe<School_Level_Grade_Set_Input>;
  where: School_Level_Grade_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_School_Level_Grade_By_PkArgs = {
  _set?: InputMaybe<School_Level_Grade_Set_Input>;
  pk_columns: School_Level_Grade_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_SchoolsArgs = {
  _inc?: InputMaybe<Schools_Inc_Input>;
  _set?: InputMaybe<Schools_Set_Input>;
  where: Schools_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Schools_By_PkArgs = {
  _inc?: InputMaybe<Schools_Inc_Input>;
  _set?: InputMaybe<Schools_Set_Input>;
  pk_columns: Schools_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_StaffArgs = {
  _set?: InputMaybe<Staff_Set_Input>;
  where: Staff_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Staff_By_PkArgs = {
  _set?: InputMaybe<Staff_Set_Input>;
  pk_columns: Staff_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Entryexit_RecordsArgs = {
  _inc?: InputMaybe<Student_Entryexit_Records_Inc_Input>;
  _set?: InputMaybe<Student_Entryexit_Records_Set_Input>;
  where: Student_Entryexit_Records_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Entryexit_Records_By_PkArgs = {
  _inc?: InputMaybe<Student_Entryexit_Records_Inc_Input>;
  _set?: InputMaybe<Student_Entryexit_Records_Set_Input>;
  pk_columns: Student_Entryexit_Records_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Student_ParentsArgs = {
  _set?: InputMaybe<Student_Parents_Set_Input>;
  where: Student_Parents_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Parents_By_PkArgs = {
  _set?: InputMaybe<Student_Parents_Set_Input>;
  pk_columns: Student_Parents_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Student_QrArgs = {
  _inc?: InputMaybe<Student_Qr_Inc_Input>;
  _set?: InputMaybe<Student_Qr_Set_Input>;
  where: Student_Qr_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Qr_By_PkArgs = {
  _inc?: InputMaybe<Student_Qr_Inc_Input>;
  _set?: InputMaybe<Student_Qr_Set_Input>;
  pk_columns: Student_Qr_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Student_SubscriptionsArgs = {
  _inc?: InputMaybe<Student_Subscriptions_Inc_Input>;
  _set?: InputMaybe<Student_Subscriptions_Set_Input>;
  where: Student_Subscriptions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Student_Subscriptions_By_PkArgs = {
  _inc?: InputMaybe<Student_Subscriptions_Inc_Input>;
  _set?: InputMaybe<Student_Subscriptions_Set_Input>;
  pk_columns: Student_Subscriptions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_StudentsArgs = {
  _append?: InputMaybe<Students_Append_Input>;
  _delete_at_path?: InputMaybe<Students_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Students_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Students_Delete_Key_Input>;
  _inc?: InputMaybe<Students_Inc_Input>;
  _prepend?: InputMaybe<Students_Prepend_Input>;
  _set?: InputMaybe<Students_Set_Input>;
  where: Students_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Students_Assigned_CoachesArgs = {
  _set?: InputMaybe<Students_Assigned_Coaches_Set_Input>;
  where: Students_Assigned_Coaches_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Students_By_PkArgs = {
  _append?: InputMaybe<Students_Append_Input>;
  _delete_at_path?: InputMaybe<Students_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Students_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Students_Delete_Key_Input>;
  _inc?: InputMaybe<Students_Inc_Input>;
  _prepend?: InputMaybe<Students_Prepend_Input>;
  _set?: InputMaybe<Students_Set_Input>;
  pk_columns: Students_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_TagsArgs = {
  _set?: InputMaybe<Tags_Set_Input>;
  where: Tags_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Tags_By_PkArgs = {
  _set?: InputMaybe<Tags_Set_Input>;
  pk_columns: Tags_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_TeachersArgs = {
  _set?: InputMaybe<Teachers_Set_Input>;
  where: Teachers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Teachers_By_PkArgs = {
  _set?: InputMaybe<Teachers_Set_Input>;
  pk_columns: Teachers_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_TopicsArgs = {
  _inc?: InputMaybe<Topics_Inc_Input>;
  _set?: InputMaybe<Topics_Set_Input>;
  where: Topics_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Topics_By_PkArgs = {
  _inc?: InputMaybe<Topics_Inc_Input>;
  _set?: InputMaybe<Topics_Set_Input>;
  pk_columns: Topics_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Topics_Learning_ObjectivesArgs = {
  _inc?: InputMaybe<Topics_Learning_Objectives_Inc_Input>;
  _set?: InputMaybe<Topics_Learning_Objectives_Set_Input>;
  where: Topics_Learning_Objectives_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Topics_Learning_Objectives_By_PkArgs = {
  _inc?: InputMaybe<Topics_Learning_Objectives_Inc_Input>;
  _set?: InputMaybe<Topics_Learning_Objectives_Set_Input>;
  pk_columns: Topics_Learning_Objectives_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_User_Access_PathsArgs = {
  _set?: InputMaybe<User_Access_Paths_Set_Input>;
  where: User_Access_Paths_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_User_Access_Paths_By_PkArgs = {
  _set?: InputMaybe<User_Access_Paths_Set_Input>;
  pk_columns: User_Access_Paths_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_User_AddressArgs = {
  _set?: InputMaybe<User_Address_Set_Input>;
  where: User_Address_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_User_Address_By_PkArgs = {
  _set?: InputMaybe<User_Address_Set_Input>;
  pk_columns: User_Address_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_User_GroupArgs = {
  _set?: InputMaybe<User_Group_Set_Input>;
  where: User_Group_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_User_Group_By_PkArgs = {
  _set?: InputMaybe<User_Group_Set_Input>;
  pk_columns: User_Group_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_User_Group_MemberArgs = {
  _set?: InputMaybe<User_Group_Member_Set_Input>;
  where: User_Group_Member_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_User_Group_Member_By_PkArgs = {
  _set?: InputMaybe<User_Group_Member_Set_Input>;
  pk_columns: User_Group_Member_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_User_TagArgs = {
  _set?: InputMaybe<User_Tag_Set_Input>;
  where: User_Tag_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_User_Tag_By_PkArgs = {
  _set?: InputMaybe<User_Tag_Set_Input>;
  pk_columns: User_Tag_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_UsersArgs = {
  _set?: InputMaybe<Users_Set_Input>;
  where: Users_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Users_By_PkArgs = {
  _set?: InputMaybe<Users_Set_Input>;
  pk_columns: Users_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Users_Info_NotificationsArgs = {
  _inc?: InputMaybe<Users_Info_Notifications_Inc_Input>;
  _set?: InputMaybe<Users_Info_Notifications_Set_Input>;
  where: Users_Info_Notifications_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Users_Info_Notifications_By_PkArgs = {
  _inc?: InputMaybe<Users_Info_Notifications_Inc_Input>;
  _set?: InputMaybe<Users_Info_Notifications_Set_Input>;
  pk_columns: Users_Info_Notifications_Pk_Columns_Input;
};

/** expression to compare columns of type numeric. All fields are combined with logical 'AND'. */
export type Numeric_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['numeric']>;
  _gt?: InputMaybe<Scalars['numeric']>;
  _gte?: InputMaybe<Scalars['numeric']>;
  _in?: InputMaybe<Array<Scalars['numeric']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['numeric']>;
  _lte?: InputMaybe<Scalars['numeric']>;
  _neq?: InputMaybe<Scalars['numeric']>;
  _nin?: InputMaybe<Array<Scalars['numeric']>>;
};

/** column ordering options */
export enum Order_By {
  /** in the ascending order, nulls last */
  Asc = 'asc',
  /** in the ascending order, nulls first */
  AscNullsFirst = 'asc_nulls_first',
  /** in the ascending order, nulls last */
  AscNullsLast = 'asc_nulls_last',
  /** in the descending order, nulls first */
  Desc = 'desc',
  /** in the descending order, nulls first */
  DescNullsFirst = 'desc_nulls_first',
  /** in the descending order, nulls last */
  DescNullsLast = 'desc_nulls_last'
}

/** columns and relationships of "organizations" */
export type Organizations = {
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  domain_name?: Maybe<Scalars['String']>;
  logo_url?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  organization_id: Scalars['String'];
  resource_path: Scalars['String'];
  scrypt_memory_cost?: Maybe<Scalars['String']>;
  scrypt_rounds?: Maybe<Scalars['String']>;
  scrypt_salt_separator?: Maybe<Scalars['String']>;
  scrypt_signer_key?: Maybe<Scalars['String']>;
  tenant_id?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "organizations" */
export type Organizations_Aggregate = {
  aggregate?: Maybe<Organizations_Aggregate_Fields>;
  nodes: Array<Organizations>;
};

/** aggregate fields of "organizations" */
export type Organizations_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Organizations_Max_Fields>;
  min?: Maybe<Organizations_Min_Fields>;
};


/** aggregate fields of "organizations" */
export type Organizations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Organizations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "organizations" */
export type Organizations_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Organizations_Max_Order_By>;
  min?: InputMaybe<Organizations_Min_Order_By>;
};

/** input type for inserting array relation for remote table "organizations" */
export type Organizations_Arr_Rel_Insert_Input = {
  data: Array<Organizations_Insert_Input>;
  on_conflict?: InputMaybe<Organizations_On_Conflict>;
};

/** Boolean expression to filter rows from the table "organizations". All fields are combined with a logical 'AND'. */
export type Organizations_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Organizations_Bool_Exp>>>;
  _not?: InputMaybe<Organizations_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Organizations_Bool_Exp>>>;
  country?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  domain_name?: InputMaybe<String_Comparison_Exp>;
  logo_url?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  organization_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  scrypt_memory_cost?: InputMaybe<String_Comparison_Exp>;
  scrypt_rounds?: InputMaybe<String_Comparison_Exp>;
  scrypt_salt_separator?: InputMaybe<String_Comparison_Exp>;
  scrypt_signer_key?: InputMaybe<String_Comparison_Exp>;
  tenant_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "organizations" */
export enum Organizations_Constraint {
  /** unique or primary key constraint */
  OrganizationDomainNameUn = 'organization__domain_name__un',
  /** unique or primary key constraint */
  OrganizationsPk = 'organizations__pk',
  /** unique or primary key constraint */
  OrganizationsTenantIdUn = 'organizations__tenant_id__un'
}

/** input type for inserting data into table "organizations" */
export type Organizations_Insert_Input = {
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  domain_name?: InputMaybe<Scalars['String']>;
  logo_url?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organization_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  scrypt_memory_cost?: InputMaybe<Scalars['String']>;
  scrypt_rounds?: InputMaybe<Scalars['String']>;
  scrypt_salt_separator?: InputMaybe<Scalars['String']>;
  scrypt_signer_key?: InputMaybe<Scalars['String']>;
  tenant_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Organizations_Max_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  domain_name?: Maybe<Scalars['String']>;
  logo_url?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  organization_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scrypt_memory_cost?: Maybe<Scalars['String']>;
  scrypt_rounds?: Maybe<Scalars['String']>;
  scrypt_salt_separator?: Maybe<Scalars['String']>;
  scrypt_signer_key?: Maybe<Scalars['String']>;
  tenant_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "organizations" */
export type Organizations_Max_Order_By = {
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  domain_name?: InputMaybe<Order_By>;
  logo_url?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  organization_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  scrypt_memory_cost?: InputMaybe<Order_By>;
  scrypt_rounds?: InputMaybe<Order_By>;
  scrypt_salt_separator?: InputMaybe<Order_By>;
  scrypt_signer_key?: InputMaybe<Order_By>;
  tenant_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Organizations_Min_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  domain_name?: Maybe<Scalars['String']>;
  logo_url?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  organization_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  scrypt_memory_cost?: Maybe<Scalars['String']>;
  scrypt_rounds?: Maybe<Scalars['String']>;
  scrypt_salt_separator?: Maybe<Scalars['String']>;
  scrypt_signer_key?: Maybe<Scalars['String']>;
  tenant_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "organizations" */
export type Organizations_Min_Order_By = {
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  domain_name?: InputMaybe<Order_By>;
  logo_url?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  organization_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  scrypt_memory_cost?: InputMaybe<Order_By>;
  scrypt_rounds?: InputMaybe<Order_By>;
  scrypt_salt_separator?: InputMaybe<Order_By>;
  scrypt_signer_key?: InputMaybe<Order_By>;
  tenant_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "organizations" */
export type Organizations_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Organizations>;
};

/** input type for inserting object relation for remote table "organizations" */
export type Organizations_Obj_Rel_Insert_Input = {
  data: Organizations_Insert_Input;
  on_conflict?: InputMaybe<Organizations_On_Conflict>;
};

/** on conflict condition type for table "organizations" */
export type Organizations_On_Conflict = {
  constraint: Organizations_Constraint;
  update_columns: Array<Organizations_Update_Column>;
  where?: InputMaybe<Organizations_Bool_Exp>;
};

/** ordering options when selecting data from "organizations" */
export type Organizations_Order_By = {
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  domain_name?: InputMaybe<Order_By>;
  logo_url?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  organization_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  scrypt_memory_cost?: InputMaybe<Order_By>;
  scrypt_rounds?: InputMaybe<Order_By>;
  scrypt_salt_separator?: InputMaybe<Order_By>;
  scrypt_signer_key?: InputMaybe<Order_By>;
  tenant_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "organizations" */
export type Organizations_Pk_Columns_Input = {
  organization_id: Scalars['String'];
};

/** select columns of table "organizations" */
export enum Organizations_Select_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DomainName = 'domain_name',
  /** column name */
  LogoUrl = 'logo_url',
  /** column name */
  Name = 'name',
  /** column name */
  OrganizationId = 'organization_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  ScryptMemoryCost = 'scrypt_memory_cost',
  /** column name */
  ScryptRounds = 'scrypt_rounds',
  /** column name */
  ScryptSaltSeparator = 'scrypt_salt_separator',
  /** column name */
  ScryptSignerKey = 'scrypt_signer_key',
  /** column name */
  TenantId = 'tenant_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "organizations" */
export type Organizations_Set_Input = {
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  domain_name?: InputMaybe<Scalars['String']>;
  logo_url?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  organization_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  scrypt_memory_cost?: InputMaybe<Scalars['String']>;
  scrypt_rounds?: InputMaybe<Scalars['String']>;
  scrypt_salt_separator?: InputMaybe<Scalars['String']>;
  scrypt_signer_key?: InputMaybe<Scalars['String']>;
  tenant_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "organizations" */
export enum Organizations_Update_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DomainName = 'domain_name',
  /** column name */
  LogoUrl = 'logo_url',
  /** column name */
  Name = 'name',
  /** column name */
  OrganizationId = 'organization_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  ScryptMemoryCost = 'scrypt_memory_cost',
  /** column name */
  ScryptRounds = 'scrypt_rounds',
  /** column name */
  ScryptSaltSeparator = 'scrypt_salt_separator',
  /** column name */
  ScryptSignerKey = 'scrypt_signer_key',
  /** column name */
  TenantId = 'tenant_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "parents" */
export type Parents = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  parent_id: Scalars['String'];
  resource_path: Scalars['String'];
  school_id?: Maybe<Scalars['Int']>;
  /** An array relationship */
  student_parents: Array<Student_Parents>;
  /** An aggregated array relationship */
  student_parents_aggregate: Student_Parents_Aggregate;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user?: Maybe<Users>;
};


/** columns and relationships of "parents" */
export type ParentsStudent_ParentsArgs = {
  distinct_on?: InputMaybe<Array<Student_Parents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Parents_Order_By>>;
  where?: InputMaybe<Student_Parents_Bool_Exp>;
};


/** columns and relationships of "parents" */
export type ParentsStudent_Parents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Student_Parents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Parents_Order_By>>;
  where?: InputMaybe<Student_Parents_Bool_Exp>;
};

/** aggregated selection of "parents" */
export type Parents_Aggregate = {
  aggregate?: Maybe<Parents_Aggregate_Fields>;
  nodes: Array<Parents>;
};

/** aggregate fields of "parents" */
export type Parents_Aggregate_Fields = {
  avg?: Maybe<Parents_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Parents_Max_Fields>;
  min?: Maybe<Parents_Min_Fields>;
  stddev?: Maybe<Parents_Stddev_Fields>;
  stddev_pop?: Maybe<Parents_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Parents_Stddev_Samp_Fields>;
  sum?: Maybe<Parents_Sum_Fields>;
  var_pop?: Maybe<Parents_Var_Pop_Fields>;
  var_samp?: Maybe<Parents_Var_Samp_Fields>;
  variance?: Maybe<Parents_Variance_Fields>;
};


/** aggregate fields of "parents" */
export type Parents_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Parents_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "parents" */
export type Parents_Aggregate_Order_By = {
  avg?: InputMaybe<Parents_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Parents_Max_Order_By>;
  min?: InputMaybe<Parents_Min_Order_By>;
  stddev?: InputMaybe<Parents_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Parents_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Parents_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Parents_Sum_Order_By>;
  var_pop?: InputMaybe<Parents_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Parents_Var_Samp_Order_By>;
  variance?: InputMaybe<Parents_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "parents" */
export type Parents_Arr_Rel_Insert_Input = {
  data: Array<Parents_Insert_Input>;
  on_conflict?: InputMaybe<Parents_On_Conflict>;
};

/** aggregate avg on columns */
export type Parents_Avg_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "parents" */
export type Parents_Avg_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "parents". All fields are combined with a logical 'AND'. */
export type Parents_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Parents_Bool_Exp>>>;
  _not?: InputMaybe<Parents_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Parents_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  parent_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school_id?: InputMaybe<Int_Comparison_Exp>;
  student_parents?: InputMaybe<Student_Parents_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "parents" */
export enum Parents_Constraint {
  /** unique or primary key constraint */
  ParentsParentIdPk = 'parents__parent_id_pk'
}

/** input type for incrementing integer column in table "parents" */
export type Parents_Inc_Input = {
  school_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "parents" */
export type Parents_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  parent_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['Int']>;
  student_parents?: InputMaybe<Student_Parents_Arr_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Parents_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  parent_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "parents" */
export type Parents_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  parent_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Parents_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  parent_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "parents" */
export type Parents_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  parent_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "parents" */
export type Parents_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Parents>;
};

/** input type for inserting object relation for remote table "parents" */
export type Parents_Obj_Rel_Insert_Input = {
  data: Parents_Insert_Input;
  on_conflict?: InputMaybe<Parents_On_Conflict>;
};

/** on conflict condition type for table "parents" */
export type Parents_On_Conflict = {
  constraint: Parents_Constraint;
  update_columns: Array<Parents_Update_Column>;
  where?: InputMaybe<Parents_Bool_Exp>;
};

/** ordering options when selecting data from "parents" */
export type Parents_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  parent_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  student_parents_aggregate?: InputMaybe<Student_Parents_Aggregate_Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
};

/** primary key columns input for table: "parents" */
export type Parents_Pk_Columns_Input = {
  parent_id: Scalars['String'];
};

/** select columns of table "parents" */
export enum Parents_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ParentId = 'parent_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "parents" */
export type Parents_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  parent_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Parents_Stddev_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "parents" */
export type Parents_Stddev_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Parents_Stddev_Pop_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "parents" */
export type Parents_Stddev_Pop_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Parents_Stddev_Samp_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "parents" */
export type Parents_Stddev_Samp_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Parents_Sum_Fields = {
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "parents" */
export type Parents_Sum_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** update columns of table "parents" */
export enum Parents_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ParentId = 'parent_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Parents_Var_Pop_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "parents" */
export type Parents_Var_Pop_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Parents_Var_Samp_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "parents" */
export type Parents_Var_Samp_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Parents_Variance_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "parents" */
export type Parents_Variance_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values = {
  bool_value?: Maybe<Scalars['Boolean']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  dynamic_form_field_value_id: Scalars['String'];
  field_id: Scalars['String'];
  field_render_guide?: Maybe<Scalars['jsonb']>;
  int_array_value?: Maybe<Scalars['_int4']>;
  int_set_value?: Maybe<Scalars['_int4']>;
  int_value?: Maybe<Scalars['Int']>;
  /** An object relationship */
  lesson_report_detail: Lesson_Report_Details;
  lesson_report_detail_id: Scalars['String'];
  resource_path: Scalars['String'];
  string_array_value?: Maybe<Scalars['_text']>;
  string_set_value?: Maybe<Scalars['_text']>;
  string_value?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  value_type?: Maybe<Scalars['String']>;
};


/** columns and relationships of "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_ValuesField_Render_GuideArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Aggregate = {
  aggregate?: Maybe<Partner_Dynamic_Form_Field_Values_Aggregate_Fields>;
  nodes: Array<Partner_Dynamic_Form_Field_Values>;
};

/** aggregate fields of "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Aggregate_Fields = {
  avg?: Maybe<Partner_Dynamic_Form_Field_Values_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Partner_Dynamic_Form_Field_Values_Max_Fields>;
  min?: Maybe<Partner_Dynamic_Form_Field_Values_Min_Fields>;
  stddev?: Maybe<Partner_Dynamic_Form_Field_Values_Stddev_Fields>;
  stddev_pop?: Maybe<Partner_Dynamic_Form_Field_Values_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Partner_Dynamic_Form_Field_Values_Stddev_Samp_Fields>;
  sum?: Maybe<Partner_Dynamic_Form_Field_Values_Sum_Fields>;
  var_pop?: Maybe<Partner_Dynamic_Form_Field_Values_Var_Pop_Fields>;
  var_samp?: Maybe<Partner_Dynamic_Form_Field_Values_Var_Samp_Fields>;
  variance?: Maybe<Partner_Dynamic_Form_Field_Values_Variance_Fields>;
};


/** aggregate fields of "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Aggregate_Order_By = {
  avg?: InputMaybe<Partner_Dynamic_Form_Field_Values_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Partner_Dynamic_Form_Field_Values_Max_Order_By>;
  min?: InputMaybe<Partner_Dynamic_Form_Field_Values_Min_Order_By>;
  stddev?: InputMaybe<Partner_Dynamic_Form_Field_Values_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Partner_Dynamic_Form_Field_Values_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Partner_Dynamic_Form_Field_Values_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Partner_Dynamic_Form_Field_Values_Sum_Order_By>;
  var_pop?: InputMaybe<Partner_Dynamic_Form_Field_Values_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Partner_Dynamic_Form_Field_Values_Var_Samp_Order_By>;
  variance?: InputMaybe<Partner_Dynamic_Form_Field_Values_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Partner_Dynamic_Form_Field_Values_Append_Input = {
  field_render_guide?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Arr_Rel_Insert_Input = {
  data: Array<Partner_Dynamic_Form_Field_Values_Insert_Input>;
  on_conflict?: InputMaybe<Partner_Dynamic_Form_Field_Values_On_Conflict>;
};

/** aggregate avg on columns */
export type Partner_Dynamic_Form_Field_Values_Avg_Fields = {
  int_value?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Avg_Order_By = {
  int_value?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "partner_dynamic_form_field_values". All fields are combined with a logical 'AND'. */
export type Partner_Dynamic_Form_Field_Values_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>>>;
  _not?: InputMaybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>>>;
  bool_value?: InputMaybe<Boolean_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  dynamic_form_field_value_id?: InputMaybe<String_Comparison_Exp>;
  field_id?: InputMaybe<String_Comparison_Exp>;
  field_render_guide?: InputMaybe<Jsonb_Comparison_Exp>;
  int_array_value?: InputMaybe<_Int4_Comparison_Exp>;
  int_set_value?: InputMaybe<_Int4_Comparison_Exp>;
  int_value?: InputMaybe<Int_Comparison_Exp>;
  lesson_report_detail?: InputMaybe<Lesson_Report_Details_Bool_Exp>;
  lesson_report_detail_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  string_array_value?: InputMaybe<_Text_Comparison_Exp>;
  string_set_value?: InputMaybe<_Text_Comparison_Exp>;
  string_value?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  value_type?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "partner_dynamic_form_field_values" */
export enum Partner_Dynamic_Form_Field_Values_Constraint {
  /** unique or primary key constraint */
  PartnerDynamicFormFieldValuesPk = 'partner_dynamic_form_field_values_pk',
  /** unique or primary key constraint */
  UniqueLessonReportDetailIdFieldId = 'unique__lesson_report_detail_id__field_id'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Partner_Dynamic_Form_Field_Values_Delete_At_Path_Input = {
  field_render_guide?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Partner_Dynamic_Form_Field_Values_Delete_Elem_Input = {
  field_render_guide?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Partner_Dynamic_Form_Field_Values_Delete_Key_Input = {
  field_render_guide?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Inc_Input = {
  int_value?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Insert_Input = {
  bool_value?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  dynamic_form_field_value_id?: InputMaybe<Scalars['String']>;
  field_id?: InputMaybe<Scalars['String']>;
  field_render_guide?: InputMaybe<Scalars['jsonb']>;
  int_array_value?: InputMaybe<Scalars['_int4']>;
  int_set_value?: InputMaybe<Scalars['_int4']>;
  int_value?: InputMaybe<Scalars['Int']>;
  lesson_report_detail?: InputMaybe<Lesson_Report_Details_Obj_Rel_Insert_Input>;
  lesson_report_detail_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  string_array_value?: InputMaybe<Scalars['_text']>;
  string_set_value?: InputMaybe<Scalars['_text']>;
  string_value?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  value_type?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Partner_Dynamic_Form_Field_Values_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  dynamic_form_field_value_id?: Maybe<Scalars['String']>;
  field_id?: Maybe<Scalars['String']>;
  int_value?: Maybe<Scalars['Int']>;
  lesson_report_detail_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  string_value?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  value_type?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  dynamic_form_field_value_id?: InputMaybe<Order_By>;
  field_id?: InputMaybe<Order_By>;
  int_value?: InputMaybe<Order_By>;
  lesson_report_detail_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  string_value?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  value_type?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Partner_Dynamic_Form_Field_Values_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  dynamic_form_field_value_id?: Maybe<Scalars['String']>;
  field_id?: Maybe<Scalars['String']>;
  int_value?: Maybe<Scalars['Int']>;
  lesson_report_detail_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  string_value?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  value_type?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  dynamic_form_field_value_id?: InputMaybe<Order_By>;
  field_id?: InputMaybe<Order_By>;
  int_value?: InputMaybe<Order_By>;
  lesson_report_detail_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  string_value?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  value_type?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Partner_Dynamic_Form_Field_Values>;
};

/** input type for inserting object relation for remote table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Obj_Rel_Insert_Input = {
  data: Partner_Dynamic_Form_Field_Values_Insert_Input;
  on_conflict?: InputMaybe<Partner_Dynamic_Form_Field_Values_On_Conflict>;
};

/** on conflict condition type for table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_On_Conflict = {
  constraint: Partner_Dynamic_Form_Field_Values_Constraint;
  update_columns: Array<Partner_Dynamic_Form_Field_Values_Update_Column>;
  where?: InputMaybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};

/** ordering options when selecting data from "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Order_By = {
  bool_value?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  dynamic_form_field_value_id?: InputMaybe<Order_By>;
  field_id?: InputMaybe<Order_By>;
  field_render_guide?: InputMaybe<Order_By>;
  int_array_value?: InputMaybe<Order_By>;
  int_set_value?: InputMaybe<Order_By>;
  int_value?: InputMaybe<Order_By>;
  lesson_report_detail?: InputMaybe<Lesson_Report_Details_Order_By>;
  lesson_report_detail_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  string_array_value?: InputMaybe<Order_By>;
  string_set_value?: InputMaybe<Order_By>;
  string_value?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  value_type?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Pk_Columns_Input = {
  dynamic_form_field_value_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Partner_Dynamic_Form_Field_Values_Prepend_Input = {
  field_render_guide?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "partner_dynamic_form_field_values" */
export enum Partner_Dynamic_Form_Field_Values_Select_Column {
  /** column name */
  BoolValue = 'bool_value',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DynamicFormFieldValueId = 'dynamic_form_field_value_id',
  /** column name */
  FieldId = 'field_id',
  /** column name */
  FieldRenderGuide = 'field_render_guide',
  /** column name */
  IntArrayValue = 'int_array_value',
  /** column name */
  IntSetValue = 'int_set_value',
  /** column name */
  IntValue = 'int_value',
  /** column name */
  LessonReportDetailId = 'lesson_report_detail_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StringArrayValue = 'string_array_value',
  /** column name */
  StringSetValue = 'string_set_value',
  /** column name */
  StringValue = 'string_value',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  ValueType = 'value_type'
}

/** input type for updating data in table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Set_Input = {
  bool_value?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  dynamic_form_field_value_id?: InputMaybe<Scalars['String']>;
  field_id?: InputMaybe<Scalars['String']>;
  field_render_guide?: InputMaybe<Scalars['jsonb']>;
  int_array_value?: InputMaybe<Scalars['_int4']>;
  int_set_value?: InputMaybe<Scalars['_int4']>;
  int_value?: InputMaybe<Scalars['Int']>;
  lesson_report_detail_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  string_array_value?: InputMaybe<Scalars['_text']>;
  string_set_value?: InputMaybe<Scalars['_text']>;
  string_value?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  value_type?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Partner_Dynamic_Form_Field_Values_Stddev_Fields = {
  int_value?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Stddev_Order_By = {
  int_value?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Partner_Dynamic_Form_Field_Values_Stddev_Pop_Fields = {
  int_value?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Stddev_Pop_Order_By = {
  int_value?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Partner_Dynamic_Form_Field_Values_Stddev_Samp_Fields = {
  int_value?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Stddev_Samp_Order_By = {
  int_value?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Partner_Dynamic_Form_Field_Values_Sum_Fields = {
  int_value?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Sum_Order_By = {
  int_value?: InputMaybe<Order_By>;
};

/** update columns of table "partner_dynamic_form_field_values" */
export enum Partner_Dynamic_Form_Field_Values_Update_Column {
  /** column name */
  BoolValue = 'bool_value',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DynamicFormFieldValueId = 'dynamic_form_field_value_id',
  /** column name */
  FieldId = 'field_id',
  /** column name */
  FieldRenderGuide = 'field_render_guide',
  /** column name */
  IntArrayValue = 'int_array_value',
  /** column name */
  IntSetValue = 'int_set_value',
  /** column name */
  IntValue = 'int_value',
  /** column name */
  LessonReportDetailId = 'lesson_report_detail_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StringArrayValue = 'string_array_value',
  /** column name */
  StringSetValue = 'string_set_value',
  /** column name */
  StringValue = 'string_value',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  ValueType = 'value_type'
}

/** aggregate var_pop on columns */
export type Partner_Dynamic_Form_Field_Values_Var_Pop_Fields = {
  int_value?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Var_Pop_Order_By = {
  int_value?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Partner_Dynamic_Form_Field_Values_Var_Samp_Fields = {
  int_value?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Var_Samp_Order_By = {
  int_value?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Partner_Dynamic_Form_Field_Values_Variance_Fields = {
  int_value?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "partner_dynamic_form_field_values" */
export type Partner_Dynamic_Form_Field_Values_Variance_Order_By = {
  int_value?: InputMaybe<Order_By>;
};

/** columns and relationships of "partner_form_configs" */
export type Partner_Form_Configs = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  feature_name: Scalars['String'];
  form_config_data?: Maybe<Scalars['jsonb']>;
  form_config_id: Scalars['String'];
  /** An array relationship */
  lesson_reports: Array<Lesson_Reports>;
  /** An aggregated array relationship */
  lesson_reports_aggregate: Lesson_Reports_Aggregate;
  partner_id: Scalars['Int'];
  resource_path: Scalars['String'];
  /** An object relationship */
  school: Schools;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "partner_form_configs" */
export type Partner_Form_ConfigsForm_Config_DataArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "partner_form_configs" */
export type Partner_Form_ConfigsLesson_ReportsArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};


/** columns and relationships of "partner_form_configs" */
export type Partner_Form_ConfigsLesson_Reports_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};

/** aggregated selection of "partner_form_configs" */
export type Partner_Form_Configs_Aggregate = {
  aggregate?: Maybe<Partner_Form_Configs_Aggregate_Fields>;
  nodes: Array<Partner_Form_Configs>;
};

/** aggregate fields of "partner_form_configs" */
export type Partner_Form_Configs_Aggregate_Fields = {
  avg?: Maybe<Partner_Form_Configs_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Partner_Form_Configs_Max_Fields>;
  min?: Maybe<Partner_Form_Configs_Min_Fields>;
  stddev?: Maybe<Partner_Form_Configs_Stddev_Fields>;
  stddev_pop?: Maybe<Partner_Form_Configs_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Partner_Form_Configs_Stddev_Samp_Fields>;
  sum?: Maybe<Partner_Form_Configs_Sum_Fields>;
  var_pop?: Maybe<Partner_Form_Configs_Var_Pop_Fields>;
  var_samp?: Maybe<Partner_Form_Configs_Var_Samp_Fields>;
  variance?: Maybe<Partner_Form_Configs_Variance_Fields>;
};


/** aggregate fields of "partner_form_configs" */
export type Partner_Form_Configs_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Partner_Form_Configs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "partner_form_configs" */
export type Partner_Form_Configs_Aggregate_Order_By = {
  avg?: InputMaybe<Partner_Form_Configs_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Partner_Form_Configs_Max_Order_By>;
  min?: InputMaybe<Partner_Form_Configs_Min_Order_By>;
  stddev?: InputMaybe<Partner_Form_Configs_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Partner_Form_Configs_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Partner_Form_Configs_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Partner_Form_Configs_Sum_Order_By>;
  var_pop?: InputMaybe<Partner_Form_Configs_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Partner_Form_Configs_Var_Samp_Order_By>;
  variance?: InputMaybe<Partner_Form_Configs_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Partner_Form_Configs_Append_Input = {
  form_config_data?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "partner_form_configs" */
export type Partner_Form_Configs_Arr_Rel_Insert_Input = {
  data: Array<Partner_Form_Configs_Insert_Input>;
  on_conflict?: InputMaybe<Partner_Form_Configs_On_Conflict>;
};

/** aggregate avg on columns */
export type Partner_Form_Configs_Avg_Fields = {
  partner_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Avg_Order_By = {
  partner_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "partner_form_configs". All fields are combined with a logical 'AND'. */
export type Partner_Form_Configs_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Partner_Form_Configs_Bool_Exp>>>;
  _not?: InputMaybe<Partner_Form_Configs_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Partner_Form_Configs_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  feature_name?: InputMaybe<String_Comparison_Exp>;
  form_config_data?: InputMaybe<Jsonb_Comparison_Exp>;
  form_config_id?: InputMaybe<String_Comparison_Exp>;
  lesson_reports?: InputMaybe<Lesson_Reports_Bool_Exp>;
  partner_id?: InputMaybe<Int_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school?: InputMaybe<Schools_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "partner_form_configs" */
export enum Partner_Form_Configs_Constraint {
  /** unique or primary key constraint */
  PartnerFormConfigsPk = 'partner_form_configs_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Partner_Form_Configs_Delete_At_Path_Input = {
  form_config_data?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Partner_Form_Configs_Delete_Elem_Input = {
  form_config_data?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Partner_Form_Configs_Delete_Key_Input = {
  form_config_data?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "partner_form_configs" */
export type Partner_Form_Configs_Inc_Input = {
  partner_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "partner_form_configs" */
export type Partner_Form_Configs_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  feature_name?: InputMaybe<Scalars['String']>;
  form_config_data?: InputMaybe<Scalars['jsonb']>;
  form_config_id?: InputMaybe<Scalars['String']>;
  lesson_reports?: InputMaybe<Lesson_Reports_Arr_Rel_Insert_Input>;
  partner_id?: InputMaybe<Scalars['Int']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school?: InputMaybe<Schools_Obj_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Partner_Form_Configs_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  feature_name?: Maybe<Scalars['String']>;
  form_config_id?: Maybe<Scalars['String']>;
  partner_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  feature_name?: InputMaybe<Order_By>;
  form_config_id?: InputMaybe<Order_By>;
  partner_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Partner_Form_Configs_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  feature_name?: Maybe<Scalars['String']>;
  form_config_id?: Maybe<Scalars['String']>;
  partner_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  feature_name?: InputMaybe<Order_By>;
  form_config_id?: InputMaybe<Order_By>;
  partner_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "partner_form_configs" */
export type Partner_Form_Configs_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Partner_Form_Configs>;
};

/** input type for inserting object relation for remote table "partner_form_configs" */
export type Partner_Form_Configs_Obj_Rel_Insert_Input = {
  data: Partner_Form_Configs_Insert_Input;
  on_conflict?: InputMaybe<Partner_Form_Configs_On_Conflict>;
};

/** on conflict condition type for table "partner_form_configs" */
export type Partner_Form_Configs_On_Conflict = {
  constraint: Partner_Form_Configs_Constraint;
  update_columns: Array<Partner_Form_Configs_Update_Column>;
  where?: InputMaybe<Partner_Form_Configs_Bool_Exp>;
};

/** ordering options when selecting data from "partner_form_configs" */
export type Partner_Form_Configs_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  feature_name?: InputMaybe<Order_By>;
  form_config_data?: InputMaybe<Order_By>;
  form_config_id?: InputMaybe<Order_By>;
  lesson_reports_aggregate?: InputMaybe<Lesson_Reports_Aggregate_Order_By>;
  partner_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school?: InputMaybe<Schools_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "partner_form_configs" */
export type Partner_Form_Configs_Pk_Columns_Input = {
  form_config_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Partner_Form_Configs_Prepend_Input = {
  form_config_data?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "partner_form_configs" */
export enum Partner_Form_Configs_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  FeatureName = 'feature_name',
  /** column name */
  FormConfigData = 'form_config_data',
  /** column name */
  FormConfigId = 'form_config_id',
  /** column name */
  PartnerId = 'partner_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "partner_form_configs" */
export type Partner_Form_Configs_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  feature_name?: InputMaybe<Scalars['String']>;
  form_config_data?: InputMaybe<Scalars['jsonb']>;
  form_config_id?: InputMaybe<Scalars['String']>;
  partner_id?: InputMaybe<Scalars['Int']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Partner_Form_Configs_Stddev_Fields = {
  partner_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Stddev_Order_By = {
  partner_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Partner_Form_Configs_Stddev_Pop_Fields = {
  partner_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Stddev_Pop_Order_By = {
  partner_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Partner_Form_Configs_Stddev_Samp_Fields = {
  partner_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Stddev_Samp_Order_By = {
  partner_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Partner_Form_Configs_Sum_Fields = {
  partner_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Sum_Order_By = {
  partner_id?: InputMaybe<Order_By>;
};

/** update columns of table "partner_form_configs" */
export enum Partner_Form_Configs_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  FeatureName = 'feature_name',
  /** column name */
  FormConfigData = 'form_config_data',
  /** column name */
  FormConfigId = 'form_config_id',
  /** column name */
  PartnerId = 'partner_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Partner_Form_Configs_Var_Pop_Fields = {
  partner_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Var_Pop_Order_By = {
  partner_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Partner_Form_Configs_Var_Samp_Fields = {
  partner_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Var_Samp_Order_By = {
  partner_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Partner_Form_Configs_Variance_Fields = {
  partner_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "partner_form_configs" */
export type Partner_Form_Configs_Variance_Order_By = {
  partner_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "plans" */
export type Plans = {
  benefits?: Maybe<Scalars['_text']>;
  /** An array relationship */
  classes: Array<Classes>;
  /** An aggregated array relationship */
  classes_aggregate: Classes_Aggregate;
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  is_purchasable: Scalars['Boolean'];
  plan_id: Scalars['String'];
  plan_privileges: Scalars['_text'];
  prioritize_level?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An array relationship */
  student_subscriptions: Array<Student_Subscriptions>;
  /** An aggregated array relationship */
  student_subscriptions_aggregate: Student_Subscriptions_Aggregate;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "plans" */
export type PlansClassesArgs = {
  distinct_on?: InputMaybe<Array<Classes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Classes_Order_By>>;
  where?: InputMaybe<Classes_Bool_Exp>;
};


/** columns and relationships of "plans" */
export type PlansClasses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Classes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Classes_Order_By>>;
  where?: InputMaybe<Classes_Bool_Exp>;
};


/** columns and relationships of "plans" */
export type PlansStudent_SubscriptionsArgs = {
  distinct_on?: InputMaybe<Array<Student_Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Subscriptions_Order_By>>;
  where?: InputMaybe<Student_Subscriptions_Bool_Exp>;
};


/** columns and relationships of "plans" */
export type PlansStudent_Subscriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Student_Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Subscriptions_Order_By>>;
  where?: InputMaybe<Student_Subscriptions_Bool_Exp>;
};

/** aggregated selection of "plans" */
export type Plans_Aggregate = {
  aggregate?: Maybe<Plans_Aggregate_Fields>;
  nodes: Array<Plans>;
};

/** aggregate fields of "plans" */
export type Plans_Aggregate_Fields = {
  avg?: Maybe<Plans_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Plans_Max_Fields>;
  min?: Maybe<Plans_Min_Fields>;
  stddev?: Maybe<Plans_Stddev_Fields>;
  stddev_pop?: Maybe<Plans_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Plans_Stddev_Samp_Fields>;
  sum?: Maybe<Plans_Sum_Fields>;
  var_pop?: Maybe<Plans_Var_Pop_Fields>;
  var_samp?: Maybe<Plans_Var_Samp_Fields>;
  variance?: Maybe<Plans_Variance_Fields>;
};


/** aggregate fields of "plans" */
export type Plans_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Plans_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "plans" */
export type Plans_Aggregate_Order_By = {
  avg?: InputMaybe<Plans_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Plans_Max_Order_By>;
  min?: InputMaybe<Plans_Min_Order_By>;
  stddev?: InputMaybe<Plans_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Plans_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Plans_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Plans_Sum_Order_By>;
  var_pop?: InputMaybe<Plans_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Plans_Var_Samp_Order_By>;
  variance?: InputMaybe<Plans_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "plans" */
export type Plans_Arr_Rel_Insert_Input = {
  data: Array<Plans_Insert_Input>;
  on_conflict?: InputMaybe<Plans_On_Conflict>;
};

/** aggregate avg on columns */
export type Plans_Avg_Fields = {
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "plans" */
export type Plans_Avg_Order_By = {
  prioritize_level?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "plans". All fields are combined with a logical 'AND'. */
export type Plans_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Plans_Bool_Exp>>>;
  _not?: InputMaybe<Plans_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Plans_Bool_Exp>>>;
  benefits?: InputMaybe<_Text_Comparison_Exp>;
  classes?: InputMaybe<Classes_Bool_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  is_purchasable?: InputMaybe<Boolean_Comparison_Exp>;
  plan_id?: InputMaybe<String_Comparison_Exp>;
  plan_privileges?: InputMaybe<_Text_Comparison_Exp>;
  prioritize_level?: InputMaybe<Smallint_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  student_subscriptions?: InputMaybe<Student_Subscriptions_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "plans" */
export enum Plans_Constraint {
  /** unique or primary key constraint */
  PlansPk = 'plans_pk'
}

/** input type for incrementing integer column in table "plans" */
export type Plans_Inc_Input = {
  prioritize_level?: InputMaybe<Scalars['smallint']>;
};

/** input type for inserting data into table "plans" */
export type Plans_Insert_Input = {
  benefits?: InputMaybe<Scalars['_text']>;
  classes?: InputMaybe<Classes_Arr_Rel_Insert_Input>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  is_purchasable?: InputMaybe<Scalars['Boolean']>;
  plan_id?: InputMaybe<Scalars['String']>;
  plan_privileges?: InputMaybe<Scalars['_text']>;
  prioritize_level?: InputMaybe<Scalars['smallint']>;
  resource_path?: InputMaybe<Scalars['String']>;
  student_subscriptions?: InputMaybe<Student_Subscriptions_Arr_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Plans_Max_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  plan_id?: Maybe<Scalars['String']>;
  prioritize_level?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "plans" */
export type Plans_Max_Order_By = {
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  plan_id?: InputMaybe<Order_By>;
  prioritize_level?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Plans_Min_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  plan_id?: Maybe<Scalars['String']>;
  prioritize_level?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "plans" */
export type Plans_Min_Order_By = {
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  plan_id?: InputMaybe<Order_By>;
  prioritize_level?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "plans" */
export type Plans_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Plans>;
};

/** input type for inserting object relation for remote table "plans" */
export type Plans_Obj_Rel_Insert_Input = {
  data: Plans_Insert_Input;
  on_conflict?: InputMaybe<Plans_On_Conflict>;
};

/** on conflict condition type for table "plans" */
export type Plans_On_Conflict = {
  constraint: Plans_Constraint;
  update_columns: Array<Plans_Update_Column>;
  where?: InputMaybe<Plans_Bool_Exp>;
};

/** ordering options when selecting data from "plans" */
export type Plans_Order_By = {
  benefits?: InputMaybe<Order_By>;
  classes_aggregate?: InputMaybe<Classes_Aggregate_Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  is_purchasable?: InputMaybe<Order_By>;
  plan_id?: InputMaybe<Order_By>;
  plan_privileges?: InputMaybe<Order_By>;
  prioritize_level?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  student_subscriptions_aggregate?: InputMaybe<Student_Subscriptions_Aggregate_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "plans" */
export type Plans_Pk_Columns_Input = {
  country: Scalars['String'];
  plan_id: Scalars['String'];
};

/** select columns of table "plans" */
export enum Plans_Select_Column {
  /** column name */
  Benefits = 'benefits',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  IsPurchasable = 'is_purchasable',
  /** column name */
  PlanId = 'plan_id',
  /** column name */
  PlanPrivileges = 'plan_privileges',
  /** column name */
  PrioritizeLevel = 'prioritize_level',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "plans" */
export type Plans_Set_Input = {
  benefits?: InputMaybe<Scalars['_text']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  is_purchasable?: InputMaybe<Scalars['Boolean']>;
  plan_id?: InputMaybe<Scalars['String']>;
  plan_privileges?: InputMaybe<Scalars['_text']>;
  prioritize_level?: InputMaybe<Scalars['smallint']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Plans_Stddev_Fields = {
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "plans" */
export type Plans_Stddev_Order_By = {
  prioritize_level?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Plans_Stddev_Pop_Fields = {
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "plans" */
export type Plans_Stddev_Pop_Order_By = {
  prioritize_level?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Plans_Stddev_Samp_Fields = {
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "plans" */
export type Plans_Stddev_Samp_Order_By = {
  prioritize_level?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Plans_Sum_Fields = {
  prioritize_level?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "plans" */
export type Plans_Sum_Order_By = {
  prioritize_level?: InputMaybe<Order_By>;
};

/** update columns of table "plans" */
export enum Plans_Update_Column {
  /** column name */
  Benefits = 'benefits',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  IsPurchasable = 'is_purchasable',
  /** column name */
  PlanId = 'plan_id',
  /** column name */
  PlanPrivileges = 'plan_privileges',
  /** column name */
  PrioritizeLevel = 'prioritize_level',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Plans_Var_Pop_Fields = {
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "plans" */
export type Plans_Var_Pop_Order_By = {
  prioritize_level?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Plans_Var_Samp_Fields = {
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "plans" */
export type Plans_Var_Samp_Order_By = {
  prioritize_level?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Plans_Variance_Fields = {
  prioritize_level?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "plans" */
export type Plans_Variance_Order_By = {
  prioritize_level?: InputMaybe<Order_By>;
};

/** expression to compare columns of type point. All fields are combined with logical 'AND'. */
export type Point_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['point']>;
  _gt?: InputMaybe<Scalars['point']>;
  _gte?: InputMaybe<Scalars['point']>;
  _in?: InputMaybe<Array<Scalars['point']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['point']>;
  _lte?: InputMaybe<Scalars['point']>;
  _neq?: InputMaybe<Scalars['point']>;
  _nin?: InputMaybe<Array<Scalars['point']>>;
};

/** columns and relationships of "prefecture" */
export type Prefecture = {
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name: Scalars['String'];
  prefecture_code: Scalars['String'];
  prefecture_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "prefecture" */
export type Prefecture_Aggregate = {
  aggregate?: Maybe<Prefecture_Aggregate_Fields>;
  nodes: Array<Prefecture>;
};

/** aggregate fields of "prefecture" */
export type Prefecture_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Prefecture_Max_Fields>;
  min?: Maybe<Prefecture_Min_Fields>;
};


/** aggregate fields of "prefecture" */
export type Prefecture_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Prefecture_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "prefecture" */
export type Prefecture_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Prefecture_Max_Order_By>;
  min?: InputMaybe<Prefecture_Min_Order_By>;
};

/** input type for inserting array relation for remote table "prefecture" */
export type Prefecture_Arr_Rel_Insert_Input = {
  data: Array<Prefecture_Insert_Input>;
  on_conflict?: InputMaybe<Prefecture_On_Conflict>;
};

/** Boolean expression to filter rows from the table "prefecture". All fields are combined with a logical 'AND'. */
export type Prefecture_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Prefecture_Bool_Exp>>>;
  _not?: InputMaybe<Prefecture_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Prefecture_Bool_Exp>>>;
  country?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  prefecture_code?: InputMaybe<String_Comparison_Exp>;
  prefecture_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "prefecture" */
export enum Prefecture_Constraint {
  /** unique or primary key constraint */
  PrefecturePk = 'prefecture__pk'
}

/** input type for inserting data into table "prefecture" */
export type Prefecture_Insert_Input = {
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  name?: InputMaybe<Scalars['String']>;
  prefecture_code?: InputMaybe<Scalars['String']>;
  prefecture_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Prefecture_Max_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  prefecture_code?: Maybe<Scalars['String']>;
  prefecture_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "prefecture" */
export type Prefecture_Max_Order_By = {
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  prefecture_code?: InputMaybe<Order_By>;
  prefecture_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Prefecture_Min_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  prefecture_code?: Maybe<Scalars['String']>;
  prefecture_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "prefecture" */
export type Prefecture_Min_Order_By = {
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  prefecture_code?: InputMaybe<Order_By>;
  prefecture_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "prefecture" */
export type Prefecture_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Prefecture>;
};

/** input type for inserting object relation for remote table "prefecture" */
export type Prefecture_Obj_Rel_Insert_Input = {
  data: Prefecture_Insert_Input;
  on_conflict?: InputMaybe<Prefecture_On_Conflict>;
};

/** on conflict condition type for table "prefecture" */
export type Prefecture_On_Conflict = {
  constraint: Prefecture_Constraint;
  update_columns: Array<Prefecture_Update_Column>;
  where?: InputMaybe<Prefecture_Bool_Exp>;
};

/** ordering options when selecting data from "prefecture" */
export type Prefecture_Order_By = {
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  prefecture_code?: InputMaybe<Order_By>;
  prefecture_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "prefecture" */
export type Prefecture_Pk_Columns_Input = {
  prefecture_id: Scalars['String'];
};

/** select columns of table "prefecture" */
export enum Prefecture_Select_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Name = 'name',
  /** column name */
  PrefectureCode = 'prefecture_code',
  /** column name */
  PrefectureId = 'prefecture_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "prefecture" */
export type Prefecture_Set_Input = {
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  name?: InputMaybe<Scalars['String']>;
  prefecture_code?: InputMaybe<Scalars['String']>;
  prefecture_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "prefecture" */
export enum Prefecture_Update_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Name = 'name',
  /** column name */
  PrefectureCode = 'prefecture_code',
  /** column name */
  PrefectureId = 'prefecture_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "preset_study_plans" */
export type Preset_Study_Plans = {
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade: Scalars['smallint'];
  name: Scalars['String'];
  preset_study_plan_id: Scalars['String'];
  /** An array relationship */
  preset_study_plans_weeklies: Array<Preset_Study_Plans_Weekly>;
  /** An aggregated array relationship */
  preset_study_plans_weeklies_aggregate: Preset_Study_Plans_Weekly_Aggregate;
  resource_path: Scalars['String'];
  start_date?: Maybe<Scalars['timestamptz']>;
  subject: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "preset_study_plans" */
export type Preset_Study_PlansPreset_Study_Plans_WeekliesArgs = {
  distinct_on?: InputMaybe<Array<Preset_Study_Plans_Weekly_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Preset_Study_Plans_Weekly_Order_By>>;
  where?: InputMaybe<Preset_Study_Plans_Weekly_Bool_Exp>;
};


/** columns and relationships of "preset_study_plans" */
export type Preset_Study_PlansPreset_Study_Plans_Weeklies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Preset_Study_Plans_Weekly_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Preset_Study_Plans_Weekly_Order_By>>;
  where?: InputMaybe<Preset_Study_Plans_Weekly_Bool_Exp>;
};

/** aggregated selection of "preset_study_plans" */
export type Preset_Study_Plans_Aggregate = {
  aggregate?: Maybe<Preset_Study_Plans_Aggregate_Fields>;
  nodes: Array<Preset_Study_Plans>;
};

/** aggregate fields of "preset_study_plans" */
export type Preset_Study_Plans_Aggregate_Fields = {
  avg?: Maybe<Preset_Study_Plans_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Preset_Study_Plans_Max_Fields>;
  min?: Maybe<Preset_Study_Plans_Min_Fields>;
  stddev?: Maybe<Preset_Study_Plans_Stddev_Fields>;
  stddev_pop?: Maybe<Preset_Study_Plans_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Preset_Study_Plans_Stddev_Samp_Fields>;
  sum?: Maybe<Preset_Study_Plans_Sum_Fields>;
  var_pop?: Maybe<Preset_Study_Plans_Var_Pop_Fields>;
  var_samp?: Maybe<Preset_Study_Plans_Var_Samp_Fields>;
  variance?: Maybe<Preset_Study_Plans_Variance_Fields>;
};


/** aggregate fields of "preset_study_plans" */
export type Preset_Study_Plans_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Preset_Study_Plans_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "preset_study_plans" */
export type Preset_Study_Plans_Aggregate_Order_By = {
  avg?: InputMaybe<Preset_Study_Plans_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Preset_Study_Plans_Max_Order_By>;
  min?: InputMaybe<Preset_Study_Plans_Min_Order_By>;
  stddev?: InputMaybe<Preset_Study_Plans_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Preset_Study_Plans_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Preset_Study_Plans_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Preset_Study_Plans_Sum_Order_By>;
  var_pop?: InputMaybe<Preset_Study_Plans_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Preset_Study_Plans_Var_Samp_Order_By>;
  variance?: InputMaybe<Preset_Study_Plans_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "preset_study_plans" */
export type Preset_Study_Plans_Arr_Rel_Insert_Input = {
  data: Array<Preset_Study_Plans_Insert_Input>;
  on_conflict?: InputMaybe<Preset_Study_Plans_On_Conflict>;
};

/** aggregate avg on columns */
export type Preset_Study_Plans_Avg_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Avg_Order_By = {
  grade?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "preset_study_plans". All fields are combined with a logical 'AND'. */
export type Preset_Study_Plans_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Preset_Study_Plans_Bool_Exp>>>;
  _not?: InputMaybe<Preset_Study_Plans_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Preset_Study_Plans_Bool_Exp>>>;
  country?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  grade?: InputMaybe<Smallint_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  preset_study_plan_id?: InputMaybe<String_Comparison_Exp>;
  preset_study_plans_weeklies?: InputMaybe<Preset_Study_Plans_Weekly_Bool_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  start_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  subject?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "preset_study_plans" */
export enum Preset_Study_Plans_Constraint {
  /** unique or primary key constraint */
  PresetStudyPlansPk = 'preset_study_plans_pk'
}

/** input type for incrementing integer column in table "preset_study_plans" */
export type Preset_Study_Plans_Inc_Input = {
  grade?: InputMaybe<Scalars['smallint']>;
};

/** input type for inserting data into table "preset_study_plans" */
export type Preset_Study_Plans_Insert_Input = {
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  grade?: InputMaybe<Scalars['smallint']>;
  name?: InputMaybe<Scalars['String']>;
  preset_study_plan_id?: InputMaybe<Scalars['String']>;
  preset_study_plans_weeklies?: InputMaybe<Preset_Study_Plans_Weekly_Arr_Rel_Insert_Input>;
  resource_path?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['timestamptz']>;
  subject?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Preset_Study_Plans_Max_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Max_Order_By = {
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  preset_study_plan_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Preset_Study_Plans_Min_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade?: Maybe<Scalars['smallint']>;
  name?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Min_Order_By = {
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  preset_study_plan_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "preset_study_plans" */
export type Preset_Study_Plans_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Preset_Study_Plans>;
};

/** input type for inserting object relation for remote table "preset_study_plans" */
export type Preset_Study_Plans_Obj_Rel_Insert_Input = {
  data: Preset_Study_Plans_Insert_Input;
  on_conflict?: InputMaybe<Preset_Study_Plans_On_Conflict>;
};

/** on conflict condition type for table "preset_study_plans" */
export type Preset_Study_Plans_On_Conflict = {
  constraint: Preset_Study_Plans_Constraint;
  update_columns: Array<Preset_Study_Plans_Update_Column>;
  where?: InputMaybe<Preset_Study_Plans_Bool_Exp>;
};

/** ordering options when selecting data from "preset_study_plans" */
export type Preset_Study_Plans_Order_By = {
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  preset_study_plan_id?: InputMaybe<Order_By>;
  preset_study_plans_weeklies_aggregate?: InputMaybe<Preset_Study_Plans_Weekly_Aggregate_Order_By>;
  resource_path?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "preset_study_plans" */
export type Preset_Study_Plans_Pk_Columns_Input = {
  preset_study_plan_id: Scalars['String'];
};

/** select columns of table "preset_study_plans" */
export enum Preset_Study_Plans_Select_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Grade = 'grade',
  /** column name */
  Name = 'name',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "preset_study_plans" */
export type Preset_Study_Plans_Set_Input = {
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  grade?: InputMaybe<Scalars['smallint']>;
  name?: InputMaybe<Scalars['String']>;
  preset_study_plan_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['timestamptz']>;
  subject?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Preset_Study_Plans_Stddev_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Stddev_Order_By = {
  grade?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Preset_Study_Plans_Stddev_Pop_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Stddev_Pop_Order_By = {
  grade?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Preset_Study_Plans_Stddev_Samp_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Stddev_Samp_Order_By = {
  grade?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Preset_Study_Plans_Sum_Fields = {
  grade?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Sum_Order_By = {
  grade?: InputMaybe<Order_By>;
};

/** update columns of table "preset_study_plans" */
export enum Preset_Study_Plans_Update_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Grade = 'grade',
  /** column name */
  Name = 'name',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Preset_Study_Plans_Var_Pop_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Var_Pop_Order_By = {
  grade?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Preset_Study_Plans_Var_Samp_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Var_Samp_Order_By = {
  grade?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Preset_Study_Plans_Variance_Fields = {
  grade?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "preset_study_plans" */
export type Preset_Study_Plans_Variance_Order_By = {
  grade?: InputMaybe<Order_By>;
};

/** columns and relationships of "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  preset_study_plan_id: Scalars['String'];
  preset_study_plan_weekly_id: Scalars['String'];
  /** An object relationship */
  preset_study_plans: Preset_Study_Plans;
  resource_path: Scalars['String'];
  start_date?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  topic: Topics;
  topic_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  week: Scalars['smallint'];
};

/** aggregated selection of "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Aggregate = {
  aggregate?: Maybe<Preset_Study_Plans_Weekly_Aggregate_Fields>;
  nodes: Array<Preset_Study_Plans_Weekly>;
};

/** aggregate fields of "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Aggregate_Fields = {
  avg?: Maybe<Preset_Study_Plans_Weekly_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Preset_Study_Plans_Weekly_Max_Fields>;
  min?: Maybe<Preset_Study_Plans_Weekly_Min_Fields>;
  stddev?: Maybe<Preset_Study_Plans_Weekly_Stddev_Fields>;
  stddev_pop?: Maybe<Preset_Study_Plans_Weekly_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Preset_Study_Plans_Weekly_Stddev_Samp_Fields>;
  sum?: Maybe<Preset_Study_Plans_Weekly_Sum_Fields>;
  var_pop?: Maybe<Preset_Study_Plans_Weekly_Var_Pop_Fields>;
  var_samp?: Maybe<Preset_Study_Plans_Weekly_Var_Samp_Fields>;
  variance?: Maybe<Preset_Study_Plans_Weekly_Variance_Fields>;
};


/** aggregate fields of "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Preset_Study_Plans_Weekly_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Aggregate_Order_By = {
  avg?: InputMaybe<Preset_Study_Plans_Weekly_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Preset_Study_Plans_Weekly_Max_Order_By>;
  min?: InputMaybe<Preset_Study_Plans_Weekly_Min_Order_By>;
  stddev?: InputMaybe<Preset_Study_Plans_Weekly_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Preset_Study_Plans_Weekly_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Preset_Study_Plans_Weekly_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Preset_Study_Plans_Weekly_Sum_Order_By>;
  var_pop?: InputMaybe<Preset_Study_Plans_Weekly_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Preset_Study_Plans_Weekly_Var_Samp_Order_By>;
  variance?: InputMaybe<Preset_Study_Plans_Weekly_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Arr_Rel_Insert_Input = {
  data: Array<Preset_Study_Plans_Weekly_Insert_Input>;
  on_conflict?: InputMaybe<Preset_Study_Plans_Weekly_On_Conflict>;
};

/** aggregate avg on columns */
export type Preset_Study_Plans_Weekly_Avg_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Avg_Order_By = {
  week?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "preset_study_plans_weekly". All fields are combined with a logical 'AND'. */
export type Preset_Study_Plans_Weekly_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Preset_Study_Plans_Weekly_Bool_Exp>>>;
  _not?: InputMaybe<Preset_Study_Plans_Weekly_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Preset_Study_Plans_Weekly_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  end_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  lesson_id?: InputMaybe<String_Comparison_Exp>;
  preset_study_plan_id?: InputMaybe<String_Comparison_Exp>;
  preset_study_plan_weekly_id?: InputMaybe<String_Comparison_Exp>;
  preset_study_plans?: InputMaybe<Preset_Study_Plans_Bool_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  start_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  topic?: InputMaybe<Topics_Bool_Exp>;
  topic_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  week?: InputMaybe<Smallint_Comparison_Exp>;
};

/** unique or primary key constraints on table "preset_study_plans_weekly" */
export enum Preset_Study_Plans_Weekly_Constraint {
  /** unique or primary key constraint */
  WeeklyPresetStudyPlansPk = 'weekly_preset_study_plans_pk',
  /** unique or primary key constraint */
  WeeklyPresetStudyPlansUn = 'weekly_preset_study_plans_un'
}

/** columns and relationships of "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  formatted_date?: Maybe<Scalars['String']>;
  formatted_day?: Maybe<Scalars['String']>;
  formatted_month?: Maybe<Scalars['String']>;
  formatted_year?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  topic?: Maybe<Topics>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week?: Maybe<Scalars['smallint']>;
};

/** aggregated selection of "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Aggregate = {
  aggregate?: Maybe<Preset_Study_Plans_Weekly_Format_Aggregate_Fields>;
  nodes: Array<Preset_Study_Plans_Weekly_Format>;
};

/** aggregate fields of "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Aggregate_Fields = {
  avg?: Maybe<Preset_Study_Plans_Weekly_Format_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Preset_Study_Plans_Weekly_Format_Max_Fields>;
  min?: Maybe<Preset_Study_Plans_Weekly_Format_Min_Fields>;
  stddev?: Maybe<Preset_Study_Plans_Weekly_Format_Stddev_Fields>;
  stddev_pop?: Maybe<Preset_Study_Plans_Weekly_Format_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Preset_Study_Plans_Weekly_Format_Stddev_Samp_Fields>;
  sum?: Maybe<Preset_Study_Plans_Weekly_Format_Sum_Fields>;
  var_pop?: Maybe<Preset_Study_Plans_Weekly_Format_Var_Pop_Fields>;
  var_samp?: Maybe<Preset_Study_Plans_Weekly_Format_Var_Samp_Fields>;
  variance?: Maybe<Preset_Study_Plans_Weekly_Format_Variance_Fields>;
};


/** aggregate fields of "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Preset_Study_Plans_Weekly_Format_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Aggregate_Order_By = {
  avg?: InputMaybe<Preset_Study_Plans_Weekly_Format_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Preset_Study_Plans_Weekly_Format_Max_Order_By>;
  min?: InputMaybe<Preset_Study_Plans_Weekly_Format_Min_Order_By>;
  stddev?: InputMaybe<Preset_Study_Plans_Weekly_Format_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Preset_Study_Plans_Weekly_Format_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Preset_Study_Plans_Weekly_Format_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Preset_Study_Plans_Weekly_Format_Sum_Order_By>;
  var_pop?: InputMaybe<Preset_Study_Plans_Weekly_Format_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Preset_Study_Plans_Weekly_Format_Var_Samp_Order_By>;
  variance?: InputMaybe<Preset_Study_Plans_Weekly_Format_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Arr_Rel_Insert_Input = {
  data: Array<Preset_Study_Plans_Weekly_Format_Insert_Input>;
};

/** aggregate avg on columns */
export type Preset_Study_Plans_Weekly_Format_Avg_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Avg_Order_By = {
  week?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "preset_study_plans_weekly_format". All fields are combined with a logical 'AND'. */
export type Preset_Study_Plans_Weekly_Format_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Preset_Study_Plans_Weekly_Format_Bool_Exp>>>;
  _not?: InputMaybe<Preset_Study_Plans_Weekly_Format_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Preset_Study_Plans_Weekly_Format_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  end_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  formatted_date?: InputMaybe<String_Comparison_Exp>;
  formatted_day?: InputMaybe<String_Comparison_Exp>;
  formatted_month?: InputMaybe<String_Comparison_Exp>;
  formatted_year?: InputMaybe<String_Comparison_Exp>;
  lesson_id?: InputMaybe<String_Comparison_Exp>;
  preset_study_plan_id?: InputMaybe<String_Comparison_Exp>;
  preset_study_plan_weekly_id?: InputMaybe<String_Comparison_Exp>;
  start_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  topic?: InputMaybe<Topics_Bool_Exp>;
  topic_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  week?: InputMaybe<Smallint_Comparison_Exp>;
};

/** input type for incrementing integer column in table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Inc_Input = {
  week?: InputMaybe<Scalars['smallint']>;
};

/** input type for inserting data into table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  end_date?: InputMaybe<Scalars['timestamptz']>;
  formatted_date?: InputMaybe<Scalars['String']>;
  formatted_day?: InputMaybe<Scalars['String']>;
  formatted_month?: InputMaybe<Scalars['String']>;
  formatted_year?: InputMaybe<Scalars['String']>;
  lesson_id?: InputMaybe<Scalars['String']>;
  preset_study_plan_id?: InputMaybe<Scalars['String']>;
  preset_study_plan_weekly_id?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['timestamptz']>;
  topic?: InputMaybe<Topics_Obj_Rel_Insert_Input>;
  topic_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  week?: InputMaybe<Scalars['smallint']>;
};

/** aggregate max on columns */
export type Preset_Study_Plans_Weekly_Format_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  formatted_date?: Maybe<Scalars['String']>;
  formatted_day?: Maybe<Scalars['String']>;
  formatted_month?: Maybe<Scalars['String']>;
  formatted_year?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week?: Maybe<Scalars['smallint']>;
};

/** order by max() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  formatted_date?: InputMaybe<Order_By>;
  formatted_day?: InputMaybe<Order_By>;
  formatted_month?: InputMaybe<Order_By>;
  formatted_year?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  preset_study_plan_id?: InputMaybe<Order_By>;
  preset_study_plan_weekly_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  topic_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  week?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Preset_Study_Plans_Weekly_Format_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  formatted_date?: Maybe<Scalars['String']>;
  formatted_day?: Maybe<Scalars['String']>;
  formatted_month?: Maybe<Scalars['String']>;
  formatted_year?: Maybe<Scalars['String']>;
  lesson_id?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week?: Maybe<Scalars['smallint']>;
};

/** order by min() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  formatted_date?: InputMaybe<Order_By>;
  formatted_day?: InputMaybe<Order_By>;
  formatted_month?: InputMaybe<Order_By>;
  formatted_year?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  preset_study_plan_id?: InputMaybe<Order_By>;
  preset_study_plan_weekly_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  topic_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  week?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Preset_Study_Plans_Weekly_Format>;
};

/** input type for inserting object relation for remote table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Obj_Rel_Insert_Input = {
  data: Preset_Study_Plans_Weekly_Format_Insert_Input;
};

/** ordering options when selecting data from "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  formatted_date?: InputMaybe<Order_By>;
  formatted_day?: InputMaybe<Order_By>;
  formatted_month?: InputMaybe<Order_By>;
  formatted_year?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  preset_study_plan_id?: InputMaybe<Order_By>;
  preset_study_plan_weekly_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  topic?: InputMaybe<Topics_Order_By>;
  topic_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  week?: InputMaybe<Order_By>;
};

/** select columns of table "preset_study_plans_weekly_format" */
export enum Preset_Study_Plans_Weekly_Format_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  FormattedDate = 'formatted_date',
  /** column name */
  FormattedDay = 'formatted_day',
  /** column name */
  FormattedMonth = 'formatted_month',
  /** column name */
  FormattedYear = 'formatted_year',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  PresetStudyPlanWeeklyId = 'preset_study_plan_weekly_id',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Week = 'week'
}

/** input type for updating data in table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  end_date?: InputMaybe<Scalars['timestamptz']>;
  formatted_date?: InputMaybe<Scalars['String']>;
  formatted_day?: InputMaybe<Scalars['String']>;
  formatted_month?: InputMaybe<Scalars['String']>;
  formatted_year?: InputMaybe<Scalars['String']>;
  lesson_id?: InputMaybe<Scalars['String']>;
  preset_study_plan_id?: InputMaybe<Scalars['String']>;
  preset_study_plan_weekly_id?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['timestamptz']>;
  topic_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  week?: InputMaybe<Scalars['smallint']>;
};

/** aggregate stddev on columns */
export type Preset_Study_Plans_Weekly_Format_Stddev_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Stddev_Order_By = {
  week?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Preset_Study_Plans_Weekly_Format_Stddev_Pop_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Stddev_Pop_Order_By = {
  week?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Preset_Study_Plans_Weekly_Format_Stddev_Samp_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Stddev_Samp_Order_By = {
  week?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Preset_Study_Plans_Weekly_Format_Sum_Fields = {
  week?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Sum_Order_By = {
  week?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Preset_Study_Plans_Weekly_Format_Var_Pop_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Var_Pop_Order_By = {
  week?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Preset_Study_Plans_Weekly_Format_Var_Samp_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Var_Samp_Order_By = {
  week?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Preset_Study_Plans_Weekly_Format_Variance_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "preset_study_plans_weekly_format" */
export type Preset_Study_Plans_Weekly_Format_Variance_Order_By = {
  week?: InputMaybe<Order_By>;
};

/** input type for incrementing integer column in table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Inc_Input = {
  week?: InputMaybe<Scalars['smallint']>;
};

/** input type for inserting data into table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  end_date?: InputMaybe<Scalars['timestamptz']>;
  lesson_id?: InputMaybe<Scalars['String']>;
  preset_study_plan_id?: InputMaybe<Scalars['String']>;
  preset_study_plan_weekly_id?: InputMaybe<Scalars['String']>;
  preset_study_plans?: InputMaybe<Preset_Study_Plans_Obj_Rel_Insert_Input>;
  resource_path?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['timestamptz']>;
  topic?: InputMaybe<Topics_Obj_Rel_Insert_Input>;
  topic_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  week?: InputMaybe<Scalars['smallint']>;
};

/** aggregate max on columns */
export type Preset_Study_Plans_Weekly_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week?: Maybe<Scalars['smallint']>;
};

/** order by max() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  preset_study_plan_id?: InputMaybe<Order_By>;
  preset_study_plan_weekly_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  topic_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  week?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Preset_Study_Plans_Weekly_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  lesson_id?: Maybe<Scalars['String']>;
  preset_study_plan_id?: Maybe<Scalars['String']>;
  preset_study_plan_weekly_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  week?: Maybe<Scalars['smallint']>;
};

/** order by min() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  preset_study_plan_id?: InputMaybe<Order_By>;
  preset_study_plan_weekly_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  topic_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  week?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Preset_Study_Plans_Weekly>;
};

/** input type for inserting object relation for remote table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Obj_Rel_Insert_Input = {
  data: Preset_Study_Plans_Weekly_Insert_Input;
  on_conflict?: InputMaybe<Preset_Study_Plans_Weekly_On_Conflict>;
};

/** on conflict condition type for table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_On_Conflict = {
  constraint: Preset_Study_Plans_Weekly_Constraint;
  update_columns: Array<Preset_Study_Plans_Weekly_Update_Column>;
  where?: InputMaybe<Preset_Study_Plans_Weekly_Bool_Exp>;
};

/** ordering options when selecting data from "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  lesson_id?: InputMaybe<Order_By>;
  preset_study_plan_id?: InputMaybe<Order_By>;
  preset_study_plan_weekly_id?: InputMaybe<Order_By>;
  preset_study_plans?: InputMaybe<Preset_Study_Plans_Order_By>;
  resource_path?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  topic?: InputMaybe<Topics_Order_By>;
  topic_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  week?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Pk_Columns_Input = {
  preset_study_plan_weekly_id: Scalars['String'];
};

/** select columns of table "preset_study_plans_weekly" */
export enum Preset_Study_Plans_Weekly_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  PresetStudyPlanWeeklyId = 'preset_study_plan_weekly_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Week = 'week'
}

/** input type for updating data in table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  end_date?: InputMaybe<Scalars['timestamptz']>;
  lesson_id?: InputMaybe<Scalars['String']>;
  preset_study_plan_id?: InputMaybe<Scalars['String']>;
  preset_study_plan_weekly_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['timestamptz']>;
  topic_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  week?: InputMaybe<Scalars['smallint']>;
};

/** aggregate stddev on columns */
export type Preset_Study_Plans_Weekly_Stddev_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Stddev_Order_By = {
  week?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Preset_Study_Plans_Weekly_Stddev_Pop_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Stddev_Pop_Order_By = {
  week?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Preset_Study_Plans_Weekly_Stddev_Samp_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Stddev_Samp_Order_By = {
  week?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Preset_Study_Plans_Weekly_Sum_Fields = {
  week?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Sum_Order_By = {
  week?: InputMaybe<Order_By>;
};

/** update columns of table "preset_study_plans_weekly" */
export enum Preset_Study_Plans_Weekly_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  LessonId = 'lesson_id',
  /** column name */
  PresetStudyPlanId = 'preset_study_plan_id',
  /** column name */
  PresetStudyPlanWeeklyId = 'preset_study_plan_weekly_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Week = 'week'
}

/** aggregate var_pop on columns */
export type Preset_Study_Plans_Weekly_Var_Pop_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Var_Pop_Order_By = {
  week?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Preset_Study_Plans_Weekly_Var_Samp_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Var_Samp_Order_By = {
  week?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Preset_Study_Plans_Weekly_Variance_Fields = {
  week?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "preset_study_plans_weekly" */
export type Preset_Study_Plans_Weekly_Variance_Order_By = {
  week?: InputMaybe<Order_By>;
};

/** columns and relationships of "promotion_rules" */
export type Promotion_Rules = {
  conditions?: Maybe<Scalars['jsonb']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  discount_amount: Scalars['numeric'];
  discount_type?: Maybe<Scalars['String']>;
  promo_type: Scalars['String'];
  /** An object relationship */
  promotion: Promotions;
  promotion_id: Scalars['Int'];
  promotion_rule_id: Scalars['Int'];
  resource_path?: Maybe<Scalars['String']>;
  rewards?: Maybe<Scalars['jsonb']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "promotion_rules" */
export type Promotion_RulesConditionsArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "promotion_rules" */
export type Promotion_RulesRewardsArgs = {
  path?: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "promotion_rules" */
export type Promotion_Rules_Aggregate = {
  aggregate?: Maybe<Promotion_Rules_Aggregate_Fields>;
  nodes: Array<Promotion_Rules>;
};

/** aggregate fields of "promotion_rules" */
export type Promotion_Rules_Aggregate_Fields = {
  avg?: Maybe<Promotion_Rules_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Promotion_Rules_Max_Fields>;
  min?: Maybe<Promotion_Rules_Min_Fields>;
  stddev?: Maybe<Promotion_Rules_Stddev_Fields>;
  stddev_pop?: Maybe<Promotion_Rules_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Promotion_Rules_Stddev_Samp_Fields>;
  sum?: Maybe<Promotion_Rules_Sum_Fields>;
  var_pop?: Maybe<Promotion_Rules_Var_Pop_Fields>;
  var_samp?: Maybe<Promotion_Rules_Var_Samp_Fields>;
  variance?: Maybe<Promotion_Rules_Variance_Fields>;
};


/** aggregate fields of "promotion_rules" */
export type Promotion_Rules_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Promotion_Rules_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "promotion_rules" */
export type Promotion_Rules_Aggregate_Order_By = {
  avg?: InputMaybe<Promotion_Rules_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Promotion_Rules_Max_Order_By>;
  min?: InputMaybe<Promotion_Rules_Min_Order_By>;
  stddev?: InputMaybe<Promotion_Rules_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Promotion_Rules_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Promotion_Rules_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Promotion_Rules_Sum_Order_By>;
  var_pop?: InputMaybe<Promotion_Rules_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Promotion_Rules_Var_Samp_Order_By>;
  variance?: InputMaybe<Promotion_Rules_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Promotion_Rules_Append_Input = {
  conditions?: InputMaybe<Scalars['jsonb']>;
  rewards?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "promotion_rules" */
export type Promotion_Rules_Arr_Rel_Insert_Input = {
  data: Array<Promotion_Rules_Insert_Input>;
  on_conflict?: InputMaybe<Promotion_Rules_On_Conflict>;
};

/** aggregate avg on columns */
export type Promotion_Rules_Avg_Fields = {
  discount_amount?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  promotion_rule_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "promotion_rules" */
export type Promotion_Rules_Avg_Order_By = {
  discount_amount?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  promotion_rule_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "promotion_rules". All fields are combined with a logical 'AND'. */
export type Promotion_Rules_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Promotion_Rules_Bool_Exp>>>;
  _not?: InputMaybe<Promotion_Rules_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Promotion_Rules_Bool_Exp>>>;
  conditions?: InputMaybe<Jsonb_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  discount_amount?: InputMaybe<Numeric_Comparison_Exp>;
  discount_type?: InputMaybe<String_Comparison_Exp>;
  promo_type?: InputMaybe<String_Comparison_Exp>;
  promotion?: InputMaybe<Promotions_Bool_Exp>;
  promotion_id?: InputMaybe<Int_Comparison_Exp>;
  promotion_rule_id?: InputMaybe<Int_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  rewards?: InputMaybe<Jsonb_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "promotion_rules" */
export enum Promotion_Rules_Constraint {
  /** unique or primary key constraint */
  PromotionRuleIdPk = 'promotion_rule_id_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Promotion_Rules_Delete_At_Path_Input = {
  conditions?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  rewards?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Promotion_Rules_Delete_Elem_Input = {
  conditions?: InputMaybe<Scalars['Int']>;
  rewards?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Promotion_Rules_Delete_Key_Input = {
  conditions?: InputMaybe<Scalars['String']>;
  rewards?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "promotion_rules" */
export type Promotion_Rules_Inc_Input = {
  discount_amount?: InputMaybe<Scalars['numeric']>;
  promotion_id?: InputMaybe<Scalars['Int']>;
  promotion_rule_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "promotion_rules" */
export type Promotion_Rules_Insert_Input = {
  conditions?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  discount_amount?: InputMaybe<Scalars['numeric']>;
  discount_type?: InputMaybe<Scalars['String']>;
  promo_type?: InputMaybe<Scalars['String']>;
  promotion?: InputMaybe<Promotions_Obj_Rel_Insert_Input>;
  promotion_id?: InputMaybe<Scalars['Int']>;
  promotion_rule_id?: InputMaybe<Scalars['Int']>;
  resource_path?: InputMaybe<Scalars['String']>;
  rewards?: InputMaybe<Scalars['jsonb']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Promotion_Rules_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  discount_amount?: Maybe<Scalars['numeric']>;
  discount_type?: Maybe<Scalars['String']>;
  promo_type?: Maybe<Scalars['String']>;
  promotion_id?: Maybe<Scalars['Int']>;
  promotion_rule_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "promotion_rules" */
export type Promotion_Rules_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  discount_amount?: InputMaybe<Order_By>;
  discount_type?: InputMaybe<Order_By>;
  promo_type?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  promotion_rule_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Promotion_Rules_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  discount_amount?: Maybe<Scalars['numeric']>;
  discount_type?: Maybe<Scalars['String']>;
  promo_type?: Maybe<Scalars['String']>;
  promotion_id?: Maybe<Scalars['Int']>;
  promotion_rule_id?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "promotion_rules" */
export type Promotion_Rules_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  discount_amount?: InputMaybe<Order_By>;
  discount_type?: InputMaybe<Order_By>;
  promo_type?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  promotion_rule_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "promotion_rules" */
export type Promotion_Rules_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Promotion_Rules>;
};

/** input type for inserting object relation for remote table "promotion_rules" */
export type Promotion_Rules_Obj_Rel_Insert_Input = {
  data: Promotion_Rules_Insert_Input;
  on_conflict?: InputMaybe<Promotion_Rules_On_Conflict>;
};

/** on conflict condition type for table "promotion_rules" */
export type Promotion_Rules_On_Conflict = {
  constraint: Promotion_Rules_Constraint;
  update_columns: Array<Promotion_Rules_Update_Column>;
  where?: InputMaybe<Promotion_Rules_Bool_Exp>;
};

/** ordering options when selecting data from "promotion_rules" */
export type Promotion_Rules_Order_By = {
  conditions?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  discount_amount?: InputMaybe<Order_By>;
  discount_type?: InputMaybe<Order_By>;
  promo_type?: InputMaybe<Order_By>;
  promotion?: InputMaybe<Promotions_Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  promotion_rule_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  rewards?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "promotion_rules" */
export type Promotion_Rules_Pk_Columns_Input = {
  promotion_rule_id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Promotion_Rules_Prepend_Input = {
  conditions?: InputMaybe<Scalars['jsonb']>;
  rewards?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "promotion_rules" */
export enum Promotion_Rules_Select_Column {
  /** column name */
  Conditions = 'conditions',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DiscountAmount = 'discount_amount',
  /** column name */
  DiscountType = 'discount_type',
  /** column name */
  PromoType = 'promo_type',
  /** column name */
  PromotionId = 'promotion_id',
  /** column name */
  PromotionRuleId = 'promotion_rule_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Rewards = 'rewards',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "promotion_rules" */
export type Promotion_Rules_Set_Input = {
  conditions?: InputMaybe<Scalars['jsonb']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  discount_amount?: InputMaybe<Scalars['numeric']>;
  discount_type?: InputMaybe<Scalars['String']>;
  promo_type?: InputMaybe<Scalars['String']>;
  promotion_id?: InputMaybe<Scalars['Int']>;
  promotion_rule_id?: InputMaybe<Scalars['Int']>;
  resource_path?: InputMaybe<Scalars['String']>;
  rewards?: InputMaybe<Scalars['jsonb']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Promotion_Rules_Stddev_Fields = {
  discount_amount?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  promotion_rule_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "promotion_rules" */
export type Promotion_Rules_Stddev_Order_By = {
  discount_amount?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  promotion_rule_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Promotion_Rules_Stddev_Pop_Fields = {
  discount_amount?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  promotion_rule_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "promotion_rules" */
export type Promotion_Rules_Stddev_Pop_Order_By = {
  discount_amount?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  promotion_rule_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Promotion_Rules_Stddev_Samp_Fields = {
  discount_amount?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  promotion_rule_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "promotion_rules" */
export type Promotion_Rules_Stddev_Samp_Order_By = {
  discount_amount?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  promotion_rule_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Promotion_Rules_Sum_Fields = {
  discount_amount?: Maybe<Scalars['numeric']>;
  promotion_id?: Maybe<Scalars['Int']>;
  promotion_rule_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "promotion_rules" */
export type Promotion_Rules_Sum_Order_By = {
  discount_amount?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  promotion_rule_id?: InputMaybe<Order_By>;
};

/** update columns of table "promotion_rules" */
export enum Promotion_Rules_Update_Column {
  /** column name */
  Conditions = 'conditions',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DiscountAmount = 'discount_amount',
  /** column name */
  DiscountType = 'discount_type',
  /** column name */
  PromoType = 'promo_type',
  /** column name */
  PromotionId = 'promotion_id',
  /** column name */
  PromotionRuleId = 'promotion_rule_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Rewards = 'rewards',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Promotion_Rules_Var_Pop_Fields = {
  discount_amount?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  promotion_rule_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "promotion_rules" */
export type Promotion_Rules_Var_Pop_Order_By = {
  discount_amount?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  promotion_rule_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Promotion_Rules_Var_Samp_Fields = {
  discount_amount?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  promotion_rule_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "promotion_rules" */
export type Promotion_Rules_Var_Samp_Order_By = {
  discount_amount?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  promotion_rule_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Promotion_Rules_Variance_Fields = {
  discount_amount?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  promotion_rule_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "promotion_rules" */
export type Promotion_Rules_Variance_Order_By = {
  discount_amount?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  promotion_rule_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "promotions" */
export type Promotions = {
  code: Scalars['String'];
  code_prefix: Scalars['String'];
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  expired_date?: Maybe<Scalars['timestamptz']>;
  notes: Scalars['String'];
  owner_id: Scalars['String'];
  prefix_sequence_number: Scalars['Int'];
  promotion_id: Scalars['Int'];
  /** An array relationship */
  promotion_rules: Array<Promotion_Rules>;
  /** An aggregated array relationship */
  promotion_rules_aggregate: Promotion_Rules_Aggregate;
  redemption_limit_per_code: Scalars['Int'];
  redemption_limit_per_user: Scalars['Int'];
  resource_path?: Maybe<Scalars['String']>;
  started_date?: Maybe<Scalars['timestamptz']>;
  status: Scalars['String'];
  total_redemptions: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: Users;
};


/** columns and relationships of "promotions" */
export type PromotionsPromotion_RulesArgs = {
  distinct_on?: InputMaybe<Array<Promotion_Rules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Promotion_Rules_Order_By>>;
  where?: InputMaybe<Promotion_Rules_Bool_Exp>;
};


/** columns and relationships of "promotions" */
export type PromotionsPromotion_Rules_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Promotion_Rules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Promotion_Rules_Order_By>>;
  where?: InputMaybe<Promotion_Rules_Bool_Exp>;
};

/** aggregated selection of "promotions" */
export type Promotions_Aggregate = {
  aggregate?: Maybe<Promotions_Aggregate_Fields>;
  nodes: Array<Promotions>;
};

/** aggregate fields of "promotions" */
export type Promotions_Aggregate_Fields = {
  avg?: Maybe<Promotions_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Promotions_Max_Fields>;
  min?: Maybe<Promotions_Min_Fields>;
  stddev?: Maybe<Promotions_Stddev_Fields>;
  stddev_pop?: Maybe<Promotions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Promotions_Stddev_Samp_Fields>;
  sum?: Maybe<Promotions_Sum_Fields>;
  var_pop?: Maybe<Promotions_Var_Pop_Fields>;
  var_samp?: Maybe<Promotions_Var_Samp_Fields>;
  variance?: Maybe<Promotions_Variance_Fields>;
};


/** aggregate fields of "promotions" */
export type Promotions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Promotions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "promotions" */
export type Promotions_Aggregate_Order_By = {
  avg?: InputMaybe<Promotions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Promotions_Max_Order_By>;
  min?: InputMaybe<Promotions_Min_Order_By>;
  stddev?: InputMaybe<Promotions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Promotions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Promotions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Promotions_Sum_Order_By>;
  var_pop?: InputMaybe<Promotions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Promotions_Var_Samp_Order_By>;
  variance?: InputMaybe<Promotions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "promotions" */
export type Promotions_Arr_Rel_Insert_Input = {
  data: Array<Promotions_Insert_Input>;
  on_conflict?: InputMaybe<Promotions_On_Conflict>;
};

/** aggregate avg on columns */
export type Promotions_Avg_Fields = {
  prefix_sequence_number?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  redemption_limit_per_code?: Maybe<Scalars['Float']>;
  redemption_limit_per_user?: Maybe<Scalars['Float']>;
  total_redemptions?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "promotions" */
export type Promotions_Avg_Order_By = {
  prefix_sequence_number?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  redemption_limit_per_code?: InputMaybe<Order_By>;
  redemption_limit_per_user?: InputMaybe<Order_By>;
  total_redemptions?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "promotions". All fields are combined with a logical 'AND'. */
export type Promotions_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Promotions_Bool_Exp>>>;
  _not?: InputMaybe<Promotions_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Promotions_Bool_Exp>>>;
  code?: InputMaybe<String_Comparison_Exp>;
  code_prefix?: InputMaybe<String_Comparison_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  expired_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  notes?: InputMaybe<String_Comparison_Exp>;
  owner_id?: InputMaybe<String_Comparison_Exp>;
  prefix_sequence_number?: InputMaybe<Int_Comparison_Exp>;
  promotion_id?: InputMaybe<Int_Comparison_Exp>;
  promotion_rules?: InputMaybe<Promotion_Rules_Bool_Exp>;
  redemption_limit_per_code?: InputMaybe<Int_Comparison_Exp>;
  redemption_limit_per_user?: InputMaybe<Int_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  started_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  total_redemptions?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "promotions" */
export enum Promotions_Constraint {
  /** unique or primary key constraint */
  PromotionsPk = 'promotions_pk',
  /** unique or primary key constraint */
  PromotionsUn = 'promotions_un'
}

/** input type for incrementing integer column in table "promotions" */
export type Promotions_Inc_Input = {
  prefix_sequence_number?: InputMaybe<Scalars['Int']>;
  promotion_id?: InputMaybe<Scalars['Int']>;
  redemption_limit_per_code?: InputMaybe<Scalars['Int']>;
  redemption_limit_per_user?: InputMaybe<Scalars['Int']>;
  total_redemptions?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "promotions" */
export type Promotions_Insert_Input = {
  code?: InputMaybe<Scalars['String']>;
  code_prefix?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  expired_date?: InputMaybe<Scalars['timestamptz']>;
  notes?: InputMaybe<Scalars['String']>;
  owner_id?: InputMaybe<Scalars['String']>;
  prefix_sequence_number?: InputMaybe<Scalars['Int']>;
  promotion_id?: InputMaybe<Scalars['Int']>;
  promotion_rules?: InputMaybe<Promotion_Rules_Arr_Rel_Insert_Input>;
  redemption_limit_per_code?: InputMaybe<Scalars['Int']>;
  redemption_limit_per_user?: InputMaybe<Scalars['Int']>;
  resource_path?: InputMaybe<Scalars['String']>;
  started_date?: InputMaybe<Scalars['timestamptz']>;
  status?: InputMaybe<Scalars['String']>;
  total_redemptions?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Promotions_Max_Fields = {
  code?: Maybe<Scalars['String']>;
  code_prefix?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  expired_date?: Maybe<Scalars['timestamptz']>;
  notes?: Maybe<Scalars['String']>;
  owner_id?: Maybe<Scalars['String']>;
  prefix_sequence_number?: Maybe<Scalars['Int']>;
  promotion_id?: Maybe<Scalars['Int']>;
  redemption_limit_per_code?: Maybe<Scalars['Int']>;
  redemption_limit_per_user?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  started_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  total_redemptions?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "promotions" */
export type Promotions_Max_Order_By = {
  code?: InputMaybe<Order_By>;
  code_prefix?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  expired_date?: InputMaybe<Order_By>;
  notes?: InputMaybe<Order_By>;
  owner_id?: InputMaybe<Order_By>;
  prefix_sequence_number?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  redemption_limit_per_code?: InputMaybe<Order_By>;
  redemption_limit_per_user?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  started_date?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  total_redemptions?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Promotions_Min_Fields = {
  code?: Maybe<Scalars['String']>;
  code_prefix?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  expired_date?: Maybe<Scalars['timestamptz']>;
  notes?: Maybe<Scalars['String']>;
  owner_id?: Maybe<Scalars['String']>;
  prefix_sequence_number?: Maybe<Scalars['Int']>;
  promotion_id?: Maybe<Scalars['Int']>;
  redemption_limit_per_code?: Maybe<Scalars['Int']>;
  redemption_limit_per_user?: Maybe<Scalars['Int']>;
  resource_path?: Maybe<Scalars['String']>;
  started_date?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  total_redemptions?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "promotions" */
export type Promotions_Min_Order_By = {
  code?: InputMaybe<Order_By>;
  code_prefix?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  expired_date?: InputMaybe<Order_By>;
  notes?: InputMaybe<Order_By>;
  owner_id?: InputMaybe<Order_By>;
  prefix_sequence_number?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  redemption_limit_per_code?: InputMaybe<Order_By>;
  redemption_limit_per_user?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  started_date?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  total_redemptions?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "promotions" */
export type Promotions_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Promotions>;
};

/** input type for inserting object relation for remote table "promotions" */
export type Promotions_Obj_Rel_Insert_Input = {
  data: Promotions_Insert_Input;
  on_conflict?: InputMaybe<Promotions_On_Conflict>;
};

/** on conflict condition type for table "promotions" */
export type Promotions_On_Conflict = {
  constraint: Promotions_Constraint;
  update_columns: Array<Promotions_Update_Column>;
  where?: InputMaybe<Promotions_Bool_Exp>;
};

/** ordering options when selecting data from "promotions" */
export type Promotions_Order_By = {
  code?: InputMaybe<Order_By>;
  code_prefix?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  expired_date?: InputMaybe<Order_By>;
  notes?: InputMaybe<Order_By>;
  owner_id?: InputMaybe<Order_By>;
  prefix_sequence_number?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  promotion_rules_aggregate?: InputMaybe<Promotion_Rules_Aggregate_Order_By>;
  redemption_limit_per_code?: InputMaybe<Order_By>;
  redemption_limit_per_user?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  started_date?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  total_redemptions?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
};

/** primary key columns input for table: "promotions" */
export type Promotions_Pk_Columns_Input = {
  promotion_id: Scalars['Int'];
};

/** select columns of table "promotions" */
export enum Promotions_Select_Column {
  /** column name */
  Code = 'code',
  /** column name */
  CodePrefix = 'code_prefix',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ExpiredDate = 'expired_date',
  /** column name */
  Notes = 'notes',
  /** column name */
  OwnerId = 'owner_id',
  /** column name */
  PrefixSequenceNumber = 'prefix_sequence_number',
  /** column name */
  PromotionId = 'promotion_id',
  /** column name */
  RedemptionLimitPerCode = 'redemption_limit_per_code',
  /** column name */
  RedemptionLimitPerUser = 'redemption_limit_per_user',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartedDate = 'started_date',
  /** column name */
  Status = 'status',
  /** column name */
  TotalRedemptions = 'total_redemptions',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "promotions" */
export type Promotions_Set_Input = {
  code?: InputMaybe<Scalars['String']>;
  code_prefix?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  expired_date?: InputMaybe<Scalars['timestamptz']>;
  notes?: InputMaybe<Scalars['String']>;
  owner_id?: InputMaybe<Scalars['String']>;
  prefix_sequence_number?: InputMaybe<Scalars['Int']>;
  promotion_id?: InputMaybe<Scalars['Int']>;
  redemption_limit_per_code?: InputMaybe<Scalars['Int']>;
  redemption_limit_per_user?: InputMaybe<Scalars['Int']>;
  resource_path?: InputMaybe<Scalars['String']>;
  started_date?: InputMaybe<Scalars['timestamptz']>;
  status?: InputMaybe<Scalars['String']>;
  total_redemptions?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Promotions_Stddev_Fields = {
  prefix_sequence_number?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  redemption_limit_per_code?: Maybe<Scalars['Float']>;
  redemption_limit_per_user?: Maybe<Scalars['Float']>;
  total_redemptions?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "promotions" */
export type Promotions_Stddev_Order_By = {
  prefix_sequence_number?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  redemption_limit_per_code?: InputMaybe<Order_By>;
  redemption_limit_per_user?: InputMaybe<Order_By>;
  total_redemptions?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Promotions_Stddev_Pop_Fields = {
  prefix_sequence_number?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  redemption_limit_per_code?: Maybe<Scalars['Float']>;
  redemption_limit_per_user?: Maybe<Scalars['Float']>;
  total_redemptions?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "promotions" */
export type Promotions_Stddev_Pop_Order_By = {
  prefix_sequence_number?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  redemption_limit_per_code?: InputMaybe<Order_By>;
  redemption_limit_per_user?: InputMaybe<Order_By>;
  total_redemptions?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Promotions_Stddev_Samp_Fields = {
  prefix_sequence_number?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  redemption_limit_per_code?: Maybe<Scalars['Float']>;
  redemption_limit_per_user?: Maybe<Scalars['Float']>;
  total_redemptions?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "promotions" */
export type Promotions_Stddev_Samp_Order_By = {
  prefix_sequence_number?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  redemption_limit_per_code?: InputMaybe<Order_By>;
  redemption_limit_per_user?: InputMaybe<Order_By>;
  total_redemptions?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Promotions_Sum_Fields = {
  prefix_sequence_number?: Maybe<Scalars['Int']>;
  promotion_id?: Maybe<Scalars['Int']>;
  redemption_limit_per_code?: Maybe<Scalars['Int']>;
  redemption_limit_per_user?: Maybe<Scalars['Int']>;
  total_redemptions?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "promotions" */
export type Promotions_Sum_Order_By = {
  prefix_sequence_number?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  redemption_limit_per_code?: InputMaybe<Order_By>;
  redemption_limit_per_user?: InputMaybe<Order_By>;
  total_redemptions?: InputMaybe<Order_By>;
};

/** update columns of table "promotions" */
export enum Promotions_Update_Column {
  /** column name */
  Code = 'code',
  /** column name */
  CodePrefix = 'code_prefix',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ExpiredDate = 'expired_date',
  /** column name */
  Notes = 'notes',
  /** column name */
  OwnerId = 'owner_id',
  /** column name */
  PrefixSequenceNumber = 'prefix_sequence_number',
  /** column name */
  PromotionId = 'promotion_id',
  /** column name */
  RedemptionLimitPerCode = 'redemption_limit_per_code',
  /** column name */
  RedemptionLimitPerUser = 'redemption_limit_per_user',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartedDate = 'started_date',
  /** column name */
  Status = 'status',
  /** column name */
  TotalRedemptions = 'total_redemptions',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Promotions_Var_Pop_Fields = {
  prefix_sequence_number?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  redemption_limit_per_code?: Maybe<Scalars['Float']>;
  redemption_limit_per_user?: Maybe<Scalars['Float']>;
  total_redemptions?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "promotions" */
export type Promotions_Var_Pop_Order_By = {
  prefix_sequence_number?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  redemption_limit_per_code?: InputMaybe<Order_By>;
  redemption_limit_per_user?: InputMaybe<Order_By>;
  total_redemptions?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Promotions_Var_Samp_Fields = {
  prefix_sequence_number?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  redemption_limit_per_code?: Maybe<Scalars['Float']>;
  redemption_limit_per_user?: Maybe<Scalars['Float']>;
  total_redemptions?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "promotions" */
export type Promotions_Var_Samp_Order_By = {
  prefix_sequence_number?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  redemption_limit_per_code?: InputMaybe<Order_By>;
  redemption_limit_per_user?: InputMaybe<Order_By>;
  total_redemptions?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Promotions_Variance_Fields = {
  prefix_sequence_number?: Maybe<Scalars['Float']>;
  promotion_id?: Maybe<Scalars['Float']>;
  redemption_limit_per_code?: Maybe<Scalars['Float']>;
  redemption_limit_per_user?: Maybe<Scalars['Float']>;
  total_redemptions?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "promotions" */
export type Promotions_Variance_Order_By = {
  prefix_sequence_number?: InputMaybe<Order_By>;
  promotion_id?: InputMaybe<Order_By>;
  redemption_limit_per_code?: InputMaybe<Order_By>;
  redemption_limit_per_user?: InputMaybe<Order_By>;
  total_redemptions?: InputMaybe<Order_By>;
};

/** query root */
export type Query_Root = {
  /** fetch data from the table: "assignments" */
  assignments: Array<Assignments>;
  /** fetch aggregated fields from the table: "assignments" */
  assignments_aggregate: Assignments_Aggregate;
  /** fetch data from the table: "assignments" using primary key columns */
  assignments_by_pk?: Maybe<Assignments>;
  /** fetch data from the table: "bank" */
  bank: Array<Bank>;
  /** fetch aggregated fields from the table: "bank" */
  bank_aggregate: Bank_Aggregate;
  /** fetch data from the table: "bank_branch" */
  bank_branch: Array<Bank_Branch>;
  /** fetch aggregated fields from the table: "bank_branch" */
  bank_branch_aggregate: Bank_Branch_Aggregate;
  /** fetch data from the table: "bank_branch" using primary key columns */
  bank_branch_by_pk?: Maybe<Bank_Branch>;
  /** fetch data from the table: "bank" using primary key columns */
  bank_by_pk?: Maybe<Bank>;
  /** fetch data from the table: "books" */
  books: Array<Books>;
  /** fetch aggregated fields from the table: "books" */
  books_aggregate: Books_Aggregate;
  /** fetch data from the table: "books" using primary key columns */
  books_by_pk?: Maybe<Books>;
  /** fetch data from the table: "books_chapters" */
  books_chapters: Array<Books_Chapters>;
  /** fetch aggregated fields from the table: "books_chapters" */
  books_chapters_aggregate: Books_Chapters_Aggregate;
  /** fetch data from the table: "books_chapters" using primary key columns */
  books_chapters_by_pk?: Maybe<Books_Chapters>;
  /** fetch data from the table: "chapters" */
  chapters: Array<Chapters>;
  /** fetch aggregated fields from the table: "chapters" */
  chapters_aggregate: Chapters_Aggregate;
  /** fetch data from the table: "chapters" using primary key columns */
  chapters_by_pk?: Maybe<Chapters>;
  /** fetch data from the table: "cities" */
  cities: Array<Cities>;
  /** fetch aggregated fields from the table: "cities" */
  cities_aggregate: Cities_Aggregate;
  /** fetch data from the table: "cities" using primary key columns */
  cities_by_pk?: Maybe<Cities>;
  /** fetch data from the table: "class" */
  class: Array<Class>;
  /** fetch aggregated fields from the table: "class" */
  class_aggregate: Class_Aggregate;
  /** fetch data from the table: "class" using primary key columns */
  class_by_pk?: Maybe<Class>;
  /** fetch data from the table: "class_member" */
  class_member: Array<Class_Member>;
  /** fetch aggregated fields from the table: "class_member" */
  class_member_aggregate: Class_Member_Aggregate;
  /** fetch data from the table: "class_member" using primary key columns */
  class_member_by_pk?: Maybe<Class_Member>;
  /** fetch data from the table: "class_members" */
  class_members: Array<Class_Members>;
  /** fetch aggregated fields from the table: "class_members" */
  class_members_aggregate: Class_Members_Aggregate;
  /** fetch data from the table: "class_members" using primary key columns */
  class_members_by_pk?: Maybe<Class_Members>;
  /** fetch data from the table: "classes" */
  classes: Array<Classes>;
  /** fetch aggregated fields from the table: "classes" */
  classes_aggregate: Classes_Aggregate;
  /** fetch data from the table: "classes" using primary key columns */
  classes_by_pk?: Maybe<Classes>;
  /** fetch data from the table: "coaches" */
  coaches: Array<Coaches>;
  /** fetch aggregated fields from the table: "coaches" */
  coaches_aggregate: Coaches_Aggregate;
  /** fetch data from the table: "coaches" using primary key columns */
  coaches_by_pk?: Maybe<Coaches>;
  /** fetch data from the table: "cod_orders" */
  cod_orders: Array<Cod_Orders>;
  /** fetch aggregated fields from the table: "cod_orders" */
  cod_orders_aggregate: Cod_Orders_Aggregate;
  /** fetch data from the table: "cod_orders" using primary key columns */
  cod_orders_by_pk?: Maybe<Cod_Orders>;
  /** fetch data from the table: "conversion_tasks" */
  conversion_tasks: Array<Conversion_Tasks>;
  /** fetch aggregated fields from the table: "conversion_tasks" */
  conversion_tasks_aggregate: Conversion_Tasks_Aggregate;
  /** fetch data from the table: "conversion_tasks" using primary key columns */
  conversion_tasks_by_pk?: Maybe<Conversion_Tasks>;
  /** fetch data from the table: "course_access_paths" */
  course_access_paths: Array<Course_Access_Paths>;
  /** fetch aggregated fields from the table: "course_access_paths" */
  course_access_paths_aggregate: Course_Access_Paths_Aggregate;
  /** fetch data from the table: "course_access_paths" using primary key columns */
  course_access_paths_by_pk?: Maybe<Course_Access_Paths>;
  /** fetch data from the table: "courses" */
  courses: Array<Courses>;
  /** fetch aggregated fields from the table: "courses" */
  courses_aggregate: Courses_Aggregate;
  /** fetch data from the table: "courses_books" */
  courses_books: Array<Courses_Books>;
  /** fetch aggregated fields from the table: "courses_books" */
  courses_books_aggregate: Courses_Books_Aggregate;
  /** fetch data from the table: "courses_books" using primary key columns */
  courses_books_by_pk?: Maybe<Courses_Books>;
  /** fetch data from the table: "courses" using primary key columns */
  courses_by_pk?: Maybe<Courses>;
  /** fetch data from the table: "courses_classes" */
  courses_classes: Array<Courses_Classes>;
  /** fetch aggregated fields from the table: "courses_classes" */
  courses_classes_aggregate: Courses_Classes_Aggregate;
  /** fetch data from the table: "courses_classes" using primary key columns */
  courses_classes_by_pk?: Maybe<Courses_Classes>;
  /** fetch data from the table: "districts" */
  districts: Array<Districts>;
  /** fetch aggregated fields from the table: "districts" */
  districts_aggregate: Districts_Aggregate;
  /** fetch data from the table: "districts" using primary key columns */
  districts_by_pk?: Maybe<Districts>;
  /** execute function "find_quiz_by_lo_id" which returns "quizzes" */
  find_quiz_by_lo_id: Array<Quizzes>;
  /** execute function "find_quiz_by_lo_id" and query aggregates on result of table type "quizzes" */
  find_quiz_by_lo_id_aggregate: Quizzes_Aggregate;
  /** execute function "find_teacher_by_school_id" which returns "users" */
  find_teacher_by_school_id: Array<Users>;
  /** execute function "find_teacher_by_school_id" and query aggregates on result of table type "users" */
  find_teacher_by_school_id_aggregate: Users_Aggregate;
  /** execute function "get_locations_active_by_course_id" which returns "course_access_paths" */
  get_locations_active_by_course_id: Array<Course_Access_Paths>;
  /** execute function "get_locations_active_by_course_id" and query aggregates on result of table type "course_access_paths" */
  get_locations_active_by_course_id_aggregate: Course_Access_Paths_Aggregate;
  /** execute function "get_locations_lowest_level" which returns "locations" */
  get_locations_lowest_level: Array<Locations>;
  /** execute function "get_locations_lowest_level" and query aggregates on result of table type "locations" */
  get_locations_lowest_level_aggregate: Locations_Aggregate;
  /** execute function "get_lowest_location_types" which returns "location_types" */
  get_lowest_location_types: Array<Location_Types>;
  /** execute function "get_lowest_location_types" and query aggregates on result of table type "location_types" */
  get_lowest_location_types_aggregate: Location_Types_Aggregate;
  /** execute function "get_partner_dynamic_form_field_values_by_student" which returns "partner_dynamic_form_field_values" */
  get_partner_dynamic_form_field_values_by_student: Array<Partner_Dynamic_Form_Field_Values>;
  /** execute function "get_partner_dynamic_form_field_values_by_student" and query aggregates on result of table type "partner_dynamic_form_field_values" */
  get_partner_dynamic_form_field_values_by_student_aggregate: Partner_Dynamic_Form_Field_Values_Aggregate;
  /** execute function "get_previous_report_of_student" which returns "lesson_reports" */
  get_previous_report_of_student: Array<Lesson_Reports>;
  /** execute function "get_previous_report_of_student" and query aggregates on result of table type "lesson_reports" */
  get_previous_report_of_student_aggregate: Lesson_Reports_Aggregate;
  /** execute function "get_previous_report_of_student_v2" which returns "lesson_reports" */
  get_previous_report_of_student_v2: Array<Lesson_Reports>;
  /** execute function "get_previous_report_of_student_v2" and query aggregates on result of table type "lesson_reports" */
  get_previous_report_of_student_v2_aggregate: Lesson_Reports_Aggregate;
  /** execute function "get_previous_report_of_student_v3" which returns "lesson_reports" */
  get_previous_report_of_student_v3: Array<Lesson_Reports>;
  /** execute function "get_previous_report_of_student_v3" and query aggregates on result of table type "lesson_reports" */
  get_previous_report_of_student_v3_aggregate: Lesson_Reports_Aggregate;
  /** fetch data from the table: "granted_role" */
  granted_role: Array<Granted_Role>;
  /** fetch data from the table: "granted_role_access_path" */
  granted_role_access_path: Array<Granted_Role_Access_Path>;
  /** fetch aggregated fields from the table: "granted_role_access_path" */
  granted_role_access_path_aggregate: Granted_Role_Access_Path_Aggregate;
  /** fetch data from the table: "granted_role_access_path" using primary key columns */
  granted_role_access_path_by_pk?: Maybe<Granted_Role_Access_Path>;
  /** fetch aggregated fields from the table: "granted_role" */
  granted_role_aggregate: Granted_Role_Aggregate;
  /** fetch data from the table: "granted_role" using primary key columns */
  granted_role_by_pk?: Maybe<Granted_Role>;
  /** fetch data from the table: "hub_tours" */
  hub_tours: Array<Hub_Tours>;
  /** fetch aggregated fields from the table: "hub_tours" */
  hub_tours_aggregate: Hub_Tours_Aggregate;
  /** fetch data from the table: "hub_tours" using primary key columns */
  hub_tours_by_pk?: Maybe<Hub_Tours>;
  /** fetch data from the table: "hubs" */
  hubs: Array<Hubs>;
  /** fetch aggregated fields from the table: "hubs" */
  hubs_aggregate: Hubs_Aggregate;
  /** fetch data from the table: "hubs" using primary key columns */
  hubs_by_pk?: Maybe<Hubs>;
  /** fetch data from the table: "info_notification_msgs" */
  info_notification_msgs: Array<Info_Notification_Msgs>;
  /** fetch aggregated fields from the table: "info_notification_msgs" */
  info_notification_msgs_aggregate: Info_Notification_Msgs_Aggregate;
  /** fetch data from the table: "info_notification_msgs" using primary key columns */
  info_notification_msgs_by_pk?: Maybe<Info_Notification_Msgs>;
  /** fetch data from the table: "info_notifications" */
  info_notifications: Array<Info_Notifications>;
  /** fetch aggregated fields from the table: "info_notifications" */
  info_notifications_aggregate: Info_Notifications_Aggregate;
  /** fetch data from the table: "info_notifications" using primary key columns */
  info_notifications_by_pk?: Maybe<Info_Notifications>;
  /** fetch data from the table: "info_notifications_tags" */
  info_notifications_tags: Array<Info_Notifications_Tags>;
  /** fetch aggregated fields from the table: "info_notifications_tags" */
  info_notifications_tags_aggregate: Info_Notifications_Tags_Aggregate;
  /** fetch data from the table: "info_notifications_tags" using primary key columns */
  info_notifications_tags_by_pk?: Maybe<Info_Notifications_Tags>;
  /** fetch data from the table: "learning_objectives" */
  learning_objectives: Array<Learning_Objectives>;
  /** fetch aggregated fields from the table: "learning_objectives" */
  learning_objectives_aggregate: Learning_Objectives_Aggregate;
  /** fetch data from the table: "learning_objectives" using primary key columns */
  learning_objectives_by_pk?: Maybe<Learning_Objectives>;
  /** fetch data from the table: "lesson_groups" */
  lesson_groups: Array<Lesson_Groups>;
  /** fetch aggregated fields from the table: "lesson_groups" */
  lesson_groups_aggregate: Lesson_Groups_Aggregate;
  /** fetch data from the table: "lesson_groups" using primary key columns */
  lesson_groups_by_pk?: Maybe<Lesson_Groups>;
  /** fetch data from the table: "lesson_members" */
  lesson_members: Array<Lesson_Members>;
  /** fetch aggregated fields from the table: "lesson_members" */
  lesson_members_aggregate: Lesson_Members_Aggregate;
  /** fetch data from the table: "lesson_members" using primary key columns */
  lesson_members_by_pk?: Maybe<Lesson_Members>;
  /** fetch data from the table: "lesson_report_details" */
  lesson_report_details: Array<Lesson_Report_Details>;
  /** fetch aggregated fields from the table: "lesson_report_details" */
  lesson_report_details_aggregate: Lesson_Report_Details_Aggregate;
  /** fetch data from the table: "lesson_report_details" using primary key columns */
  lesson_report_details_by_pk?: Maybe<Lesson_Report_Details>;
  /** fetch data from the table: "lesson_reports" */
  lesson_reports: Array<Lesson_Reports>;
  /** fetch aggregated fields from the table: "lesson_reports" */
  lesson_reports_aggregate: Lesson_Reports_Aggregate;
  /** fetch data from the table: "lesson_reports" using primary key columns */
  lesson_reports_by_pk?: Maybe<Lesson_Reports>;
  /** fetch data from the table: "lesson_schedules" */
  lesson_schedules: Array<Lesson_Schedules>;
  /** fetch aggregated fields from the table: "lesson_schedules" */
  lesson_schedules_aggregate: Lesson_Schedules_Aggregate;
  /** fetch data from the table: "lesson_student_subscription_access_path" */
  lesson_student_subscription_access_path: Array<Lesson_Student_Subscription_Access_Path>;
  /** fetch aggregated fields from the table: "lesson_student_subscription_access_path" */
  lesson_student_subscription_access_path_aggregate: Lesson_Student_Subscription_Access_Path_Aggregate;
  /** fetch data from the table: "lesson_student_subscription_access_path" using primary key columns */
  lesson_student_subscription_access_path_by_pk?: Maybe<Lesson_Student_Subscription_Access_Path>;
  /** fetch data from the table: "lesson_student_subscriptions" */
  lesson_student_subscriptions: Array<Lesson_Student_Subscriptions>;
  /** fetch aggregated fields from the table: "lesson_student_subscriptions" */
  lesson_student_subscriptions_aggregate: Lesson_Student_Subscriptions_Aggregate;
  /** fetch data from the table: "lesson_student_subscriptions" using primary key columns */
  lesson_student_subscriptions_by_pk?: Maybe<Lesson_Student_Subscriptions>;
  /** fetch data from the table: "lessons" */
  lessons: Array<Lessons>;
  /** fetch aggregated fields from the table: "lessons" */
  lessons_aggregate: Lessons_Aggregate;
  /** fetch data from the table: "lessons" using primary key columns */
  lessons_by_pk?: Maybe<Lessons>;
  /** fetch data from the table: "lessons_courses" */
  lessons_courses: Array<Lessons_Courses>;
  /** fetch aggregated fields from the table: "lessons_courses" */
  lessons_courses_aggregate: Lessons_Courses_Aggregate;
  /** fetch data from the table: "lessons_courses" using primary key columns */
  lessons_courses_by_pk?: Maybe<Lessons_Courses>;
  /** fetch data from the table: "lessons_teachers" */
  lessons_teachers: Array<Lessons_Teachers>;
  /** fetch aggregated fields from the table: "lessons_teachers" */
  lessons_teachers_aggregate: Lessons_Teachers_Aggregate;
  /** fetch data from the table: "lessons_teachers" using primary key columns */
  lessons_teachers_by_pk?: Maybe<Lessons_Teachers>;
  /** fetch data from the table: "location_types" */
  location_types: Array<Location_Types>;
  /** fetch aggregated fields from the table: "location_types" */
  location_types_aggregate: Location_Types_Aggregate;
  /** fetch data from the table: "location_types" using primary key columns */
  location_types_by_pk?: Maybe<Location_Types>;
  /** fetch data from the table: "locations" */
  locations: Array<Locations>;
  /** fetch aggregated fields from the table: "locations" */
  locations_aggregate: Locations_Aggregate;
  /** fetch data from the table: "locations" using primary key columns */
  locations_by_pk?: Maybe<Locations>;
  /** fetch data from the table: "media" */
  media: Array<Media>;
  /** fetch aggregated fields from the table: "media" */
  media_aggregate: Media_Aggregate;
  /** fetch data from the table: "media" using primary key columns */
  media_by_pk?: Maybe<Media>;
  /** fetch data from the table: "organizations" */
  organizations: Array<Organizations>;
  /** fetch aggregated fields from the table: "organizations" */
  organizations_aggregate: Organizations_Aggregate;
  /** fetch data from the table: "organizations" using primary key columns */
  organizations_by_pk?: Maybe<Organizations>;
  /** fetch data from the table: "parents" */
  parents: Array<Parents>;
  /** fetch aggregated fields from the table: "parents" */
  parents_aggregate: Parents_Aggregate;
  /** fetch data from the table: "parents" using primary key columns */
  parents_by_pk?: Maybe<Parents>;
  /** fetch data from the table: "partner_dynamic_form_field_values" */
  partner_dynamic_form_field_values: Array<Partner_Dynamic_Form_Field_Values>;
  /** fetch aggregated fields from the table: "partner_dynamic_form_field_values" */
  partner_dynamic_form_field_values_aggregate: Partner_Dynamic_Form_Field_Values_Aggregate;
  /** fetch data from the table: "partner_dynamic_form_field_values" using primary key columns */
  partner_dynamic_form_field_values_by_pk?: Maybe<Partner_Dynamic_Form_Field_Values>;
  /** fetch data from the table: "partner_form_configs" */
  partner_form_configs: Array<Partner_Form_Configs>;
  /** fetch aggregated fields from the table: "partner_form_configs" */
  partner_form_configs_aggregate: Partner_Form_Configs_Aggregate;
  /** fetch data from the table: "partner_form_configs" using primary key columns */
  partner_form_configs_by_pk?: Maybe<Partner_Form_Configs>;
  /** fetch data from the table: "plans" */
  plans: Array<Plans>;
  /** fetch aggregated fields from the table: "plans" */
  plans_aggregate: Plans_Aggregate;
  /** fetch data from the table: "plans" using primary key columns */
  plans_by_pk?: Maybe<Plans>;
  /** fetch data from the table: "prefecture" */
  prefecture: Array<Prefecture>;
  /** fetch aggregated fields from the table: "prefecture" */
  prefecture_aggregate: Prefecture_Aggregate;
  /** fetch data from the table: "prefecture" using primary key columns */
  prefecture_by_pk?: Maybe<Prefecture>;
  /** fetch data from the table: "preset_study_plans" */
  preset_study_plans: Array<Preset_Study_Plans>;
  /** fetch aggregated fields from the table: "preset_study_plans" */
  preset_study_plans_aggregate: Preset_Study_Plans_Aggregate;
  /** fetch data from the table: "preset_study_plans" using primary key columns */
  preset_study_plans_by_pk?: Maybe<Preset_Study_Plans>;
  /** fetch data from the table: "preset_study_plans_weekly" */
  preset_study_plans_weekly: Array<Preset_Study_Plans_Weekly>;
  /** fetch aggregated fields from the table: "preset_study_plans_weekly" */
  preset_study_plans_weekly_aggregate: Preset_Study_Plans_Weekly_Aggregate;
  /** fetch data from the table: "preset_study_plans_weekly" using primary key columns */
  preset_study_plans_weekly_by_pk?: Maybe<Preset_Study_Plans_Weekly>;
  /** fetch data from the table: "preset_study_plans_weekly_format" */
  preset_study_plans_weekly_format: Array<Preset_Study_Plans_Weekly_Format>;
  /** fetch aggregated fields from the table: "preset_study_plans_weekly_format" */
  preset_study_plans_weekly_format_aggregate: Preset_Study_Plans_Weekly_Format_Aggregate;
  /** fetch data from the table: "promotion_rules" */
  promotion_rules: Array<Promotion_Rules>;
  /** fetch aggregated fields from the table: "promotion_rules" */
  promotion_rules_aggregate: Promotion_Rules_Aggregate;
  /** fetch data from the table: "promotion_rules" using primary key columns */
  promotion_rules_by_pk?: Maybe<Promotion_Rules>;
  /** fetch data from the table: "promotions" */
  promotions: Array<Promotions>;
  /** fetch aggregated fields from the table: "promotions" */
  promotions_aggregate: Promotions_Aggregate;
  /** fetch data from the table: "promotions" using primary key columns */
  promotions_by_pk?: Maybe<Promotions>;
  /** fetch data from the table: "questionnaire_questions" */
  questionnaire_questions: Array<Questionnaire_Questions>;
  /** fetch aggregated fields from the table: "questionnaire_questions" */
  questionnaire_questions_aggregate: Questionnaire_Questions_Aggregate;
  /** fetch data from the table: "questionnaire_questions" using primary key columns */
  questionnaire_questions_by_pk?: Maybe<Questionnaire_Questions>;
  /** fetch data from the table: "questionnaire_user_answers" */
  questionnaire_user_answers: Array<Questionnaire_User_Answers>;
  /** fetch aggregated fields from the table: "questionnaire_user_answers" */
  questionnaire_user_answers_aggregate: Questionnaire_User_Answers_Aggregate;
  /** fetch data from the table: "questionnaire_user_answers" using primary key columns */
  questionnaire_user_answers_by_pk?: Maybe<Questionnaire_User_Answers>;
  /** fetch data from the table: "questionnaires" */
  questionnaires: Array<Questionnaires>;
  /** fetch aggregated fields from the table: "questionnaires" */
  questionnaires_aggregate: Questionnaires_Aggregate;
  /** fetch data from the table: "questionnaires" using primary key columns */
  questionnaires_by_pk?: Maybe<Questionnaires>;
  /** fetch data from the table: "questions" */
  questions: Array<Questions>;
  /** fetch aggregated fields from the table: "questions" */
  questions_aggregate: Questions_Aggregate;
  /** fetch data from the table: "questions" using primary key columns */
  questions_by_pk?: Maybe<Questions>;
  /** fetch data from the table: "quiz_sets" */
  quiz_sets: Array<Quiz_Sets>;
  /** fetch aggregated fields from the table: "quiz_sets" */
  quiz_sets_aggregate: Quiz_Sets_Aggregate;
  /** fetch data from the table: "quiz_sets" using primary key columns */
  quiz_sets_by_pk?: Maybe<Quiz_Sets>;
  /** fetch data from the table: "quizsets" */
  quizsets: Array<Quizsets>;
  /** fetch aggregated fields from the table: "quizsets" */
  quizsets_aggregate: Quizsets_Aggregate;
  /** fetch data from the table: "quizsets" using primary key columns */
  quizsets_by_pk?: Maybe<Quizsets>;
  /** fetch data from the table: "quizzes" */
  quizzes: Array<Quizzes>;
  /** fetch aggregated fields from the table: "quizzes" */
  quizzes_aggregate: Quizzes_Aggregate;
  /** fetch data from the table: "quizzes" using primary key columns */
  quizzes_by_pk?: Maybe<Quizzes>;
  /** fetch data from the table: "role" */
  role: Array<Role>;
  /** fetch aggregated fields from the table: "role" */
  role_aggregate: Role_Aggregate;
  /** fetch data from the table: "role" using primary key columns */
  role_by_pk?: Maybe<Role>;
  /** fetch data from the table: "scheduler" */
  scheduler: Array<Scheduler>;
  /** fetch aggregated fields from the table: "scheduler" */
  scheduler_aggregate: Scheduler_Aggregate;
  /** fetch data from the table: "scheduler" using primary key columns */
  scheduler_by_pk?: Maybe<Scheduler>;
  /** fetch data from the table: "school_admins" */
  school_admins: Array<School_Admins>;
  /** fetch aggregated fields from the table: "school_admins" */
  school_admins_aggregate: School_Admins_Aggregate;
  /** fetch data from the table: "school_admins" using primary key columns */
  school_admins_by_pk?: Maybe<School_Admins>;
  /** fetch data from the table: "school_configs" */
  school_configs: Array<School_Configs>;
  /** fetch aggregated fields from the table: "school_configs" */
  school_configs_aggregate: School_Configs_Aggregate;
  /** fetch data from the table: "school_configs" using primary key columns */
  school_configs_by_pk?: Maybe<School_Configs>;
  /** fetch data from the table: "school_course" */
  school_course: Array<School_Course>;
  /** fetch aggregated fields from the table: "school_course" */
  school_course_aggregate: School_Course_Aggregate;
  /** fetch data from the table: "school_course" using primary key columns */
  school_course_by_pk?: Maybe<School_Course>;
  /** fetch data from the table: "school_info" */
  school_info: Array<School_Info>;
  /** fetch aggregated fields from the table: "school_info" */
  school_info_aggregate: School_Info_Aggregate;
  /** fetch data from the table: "school_info" using primary key columns */
  school_info_by_pk?: Maybe<School_Info>;
  /** fetch data from the table: "school_level" */
  school_level: Array<School_Level>;
  /** fetch aggregated fields from the table: "school_level" */
  school_level_aggregate: School_Level_Aggregate;
  /** fetch data from the table: "school_level" using primary key columns */
  school_level_by_pk?: Maybe<School_Level>;
  /** fetch data from the table: "school_level_grade" */
  school_level_grade: Array<School_Level_Grade>;
  /** fetch aggregated fields from the table: "school_level_grade" */
  school_level_grade_aggregate: School_Level_Grade_Aggregate;
  /** fetch data from the table: "school_level_grade" using primary key columns */
  school_level_grade_by_pk?: Maybe<School_Level_Grade>;
  /** fetch data from the table: "schools" */
  schools: Array<Schools>;
  /** fetch aggregated fields from the table: "schools" */
  schools_aggregate: Schools_Aggregate;
  /** fetch data from the table: "schools" using primary key columns */
  schools_by_pk?: Maybe<Schools>;
  /** execute function "search_courses_by_name" which returns "courses" */
  search_courses_by_name: Array<Courses>;
  /** execute function "search_courses_by_name" and query aggregates on result of table type "courses" */
  search_courses_by_name_aggregate: Courses_Aggregate;
  /** fetch data from the table: "staff" */
  staff: Array<Staff>;
  /** fetch aggregated fields from the table: "staff" */
  staff_aggregate: Staff_Aggregate;
  /** fetch data from the table: "staff" using primary key columns */
  staff_by_pk?: Maybe<Staff>;
  /** fetch data from the table: "student_entryexit_records" */
  student_entryexit_records: Array<Student_Entryexit_Records>;
  /** fetch aggregated fields from the table: "student_entryexit_records" */
  student_entryexit_records_aggregate: Student_Entryexit_Records_Aggregate;
  /** fetch data from the table: "student_entryexit_records" using primary key columns */
  student_entryexit_records_by_pk?: Maybe<Student_Entryexit_Records>;
  /** fetch data from the table: "student_parents" */
  student_parents: Array<Student_Parents>;
  /** fetch aggregated fields from the table: "student_parents" */
  student_parents_aggregate: Student_Parents_Aggregate;
  /** fetch data from the table: "student_parents" using primary key columns */
  student_parents_by_pk?: Maybe<Student_Parents>;
  /** fetch data from the table: "student_qr" */
  student_qr: Array<Student_Qr>;
  /** fetch aggregated fields from the table: "student_qr" */
  student_qr_aggregate: Student_Qr_Aggregate;
  /** fetch data from the table: "student_qr" using primary key columns */
  student_qr_by_pk?: Maybe<Student_Qr>;
  /** fetch data from the table: "student_subscriptions" */
  student_subscriptions: Array<Student_Subscriptions>;
  /** fetch aggregated fields from the table: "student_subscriptions" */
  student_subscriptions_aggregate: Student_Subscriptions_Aggregate;
  /** fetch data from the table: "student_subscriptions" using primary key columns */
  student_subscriptions_by_pk?: Maybe<Student_Subscriptions>;
  /** fetch data from the table: "students" */
  students: Array<Students>;
  /** fetch aggregated fields from the table: "students" */
  students_aggregate: Students_Aggregate;
  /** fetch data from the table: "students_assigned_coaches" */
  students_assigned_coaches: Array<Students_Assigned_Coaches>;
  /** fetch aggregated fields from the table: "students_assigned_coaches" */
  students_assigned_coaches_aggregate: Students_Assigned_Coaches_Aggregate;
  /** fetch data from the table: "students" using primary key columns */
  students_by_pk?: Maybe<Students>;
  /** fetch data from the table: "tags" */
  tags: Array<Tags>;
  /** fetch aggregated fields from the table: "tags" */
  tags_aggregate: Tags_Aggregate;
  /** fetch data from the table: "tags" using primary key columns */
  tags_by_pk?: Maybe<Tags>;
  /** fetch data from the table: "teacher_by_school_id" */
  teacher_by_school_id: Array<Teacher_By_School_Id>;
  /** fetch aggregated fields from the table: "teacher_by_school_id" */
  teacher_by_school_id_aggregate: Teacher_By_School_Id_Aggregate;
  /** fetch data from the table: "teachers" */
  teachers: Array<Teachers>;
  /** fetch aggregated fields from the table: "teachers" */
  teachers_aggregate: Teachers_Aggregate;
  /** fetch data from the table: "teachers" using primary key columns */
  teachers_by_pk?: Maybe<Teachers>;
  /** fetch data from the table: "topics" */
  topics: Array<Topics>;
  /** fetch aggregated fields from the table: "topics" */
  topics_aggregate: Topics_Aggregate;
  /** fetch data from the table: "topics" using primary key columns */
  topics_by_pk?: Maybe<Topics>;
  /** fetch data from the table: "topics_learning_objectives" */
  topics_learning_objectives: Array<Topics_Learning_Objectives>;
  /** fetch aggregated fields from the table: "topics_learning_objectives" */
  topics_learning_objectives_aggregate: Topics_Learning_Objectives_Aggregate;
  /** fetch data from the table: "topics_learning_objectives" using primary key columns */
  topics_learning_objectives_by_pk?: Maybe<Topics_Learning_Objectives>;
  /** fetch data from the table: "user_access_paths" */
  user_access_paths: Array<User_Access_Paths>;
  /** fetch aggregated fields from the table: "user_access_paths" */
  user_access_paths_aggregate: User_Access_Paths_Aggregate;
  /** fetch data from the table: "user_access_paths" using primary key columns */
  user_access_paths_by_pk?: Maybe<User_Access_Paths>;
  /** fetch data from the table: "user_address" */
  user_address: Array<User_Address>;
  /** fetch aggregated fields from the table: "user_address" */
  user_address_aggregate: User_Address_Aggregate;
  /** fetch data from the table: "user_address" using primary key columns */
  user_address_by_pk?: Maybe<User_Address>;
  /** fetch data from the table: "user_group" */
  user_group: Array<User_Group>;
  /** fetch aggregated fields from the table: "user_group" */
  user_group_aggregate: User_Group_Aggregate;
  /** fetch data from the table: "user_group" using primary key columns */
  user_group_by_pk?: Maybe<User_Group>;
  /** fetch data from the table: "user_group_member" */
  user_group_member: Array<User_Group_Member>;
  /** fetch aggregated fields from the table: "user_group_member" */
  user_group_member_aggregate: User_Group_Member_Aggregate;
  /** fetch data from the table: "user_group_member" using primary key columns */
  user_group_member_by_pk?: Maybe<User_Group_Member>;
  /** fetch data from the table: "user_tag" */
  user_tag: Array<User_Tag>;
  /** fetch aggregated fields from the table: "user_tag" */
  user_tag_aggregate: User_Tag_Aggregate;
  /** fetch data from the table: "user_tag" using primary key columns */
  user_tag_by_pk?: Maybe<User_Tag>;
  /** fetch data from the table: "users" */
  users: Array<Users>;
  /** fetch aggregated fields from the table: "users" */
  users_aggregate: Users_Aggregate;
  /** fetch data from the table: "users" using primary key columns */
  users_by_pk?: Maybe<Users>;
  /** fetch data from the table: "users_info_notifications" */
  users_info_notifications: Array<Users_Info_Notifications>;
  /** fetch aggregated fields from the table: "users_info_notifications" */
  users_info_notifications_aggregate: Users_Info_Notifications_Aggregate;
  /** fetch data from the table: "users_info_notifications" using primary key columns */
  users_info_notifications_by_pk?: Maybe<Users_Info_Notifications>;
};


/** query root */
export type Query_RootAssignmentsArgs = {
  distinct_on?: InputMaybe<Array<Assignments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Assignments_Order_By>>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};


/** query root */
export type Query_RootAssignments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Assignments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Assignments_Order_By>>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};


/** query root */
export type Query_RootAssignments_By_PkArgs = {
  assignment_id: Scalars['String'];
};


/** query root */
export type Query_RootBankArgs = {
  distinct_on?: InputMaybe<Array<Bank_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bank_Order_By>>;
  where?: InputMaybe<Bank_Bool_Exp>;
};


/** query root */
export type Query_RootBank_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Bank_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bank_Order_By>>;
  where?: InputMaybe<Bank_Bool_Exp>;
};


/** query root */
export type Query_RootBank_BranchArgs = {
  distinct_on?: InputMaybe<Array<Bank_Branch_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bank_Branch_Order_By>>;
  where?: InputMaybe<Bank_Branch_Bool_Exp>;
};


/** query root */
export type Query_RootBank_Branch_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Bank_Branch_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bank_Branch_Order_By>>;
  where?: InputMaybe<Bank_Branch_Bool_Exp>;
};


/** query root */
export type Query_RootBank_Branch_By_PkArgs = {
  bank_branch_id: Scalars['String'];
};


/** query root */
export type Query_RootBank_By_PkArgs = {
  bank_id: Scalars['String'];
};


/** query root */
export type Query_RootBooksArgs = {
  distinct_on?: InputMaybe<Array<Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Books_Order_By>>;
  where?: InputMaybe<Books_Bool_Exp>;
};


/** query root */
export type Query_RootBooks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Books_Order_By>>;
  where?: InputMaybe<Books_Bool_Exp>;
};


/** query root */
export type Query_RootBooks_By_PkArgs = {
  book_id: Scalars['String'];
};


/** query root */
export type Query_RootBooks_ChaptersArgs = {
  distinct_on?: InputMaybe<Array<Books_Chapters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Books_Chapters_Order_By>>;
  where?: InputMaybe<Books_Chapters_Bool_Exp>;
};


/** query root */
export type Query_RootBooks_Chapters_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Books_Chapters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Books_Chapters_Order_By>>;
  where?: InputMaybe<Books_Chapters_Bool_Exp>;
};


/** query root */
export type Query_RootBooks_Chapters_By_PkArgs = {
  book_id: Scalars['String'];
  chapter_id: Scalars['String'];
};


/** query root */
export type Query_RootChaptersArgs = {
  distinct_on?: InputMaybe<Array<Chapters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Chapters_Order_By>>;
  where?: InputMaybe<Chapters_Bool_Exp>;
};


/** query root */
export type Query_RootChapters_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Chapters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Chapters_Order_By>>;
  where?: InputMaybe<Chapters_Bool_Exp>;
};


/** query root */
export type Query_RootChapters_By_PkArgs = {
  chapter_id: Scalars['String'];
};


/** query root */
export type Query_RootCitiesArgs = {
  distinct_on?: InputMaybe<Array<Cities_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Cities_Order_By>>;
  where?: InputMaybe<Cities_Bool_Exp>;
};


/** query root */
export type Query_RootCities_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Cities_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Cities_Order_By>>;
  where?: InputMaybe<Cities_Bool_Exp>;
};


/** query root */
export type Query_RootCities_By_PkArgs = {
  city_id: Scalars['Int'];
};


/** query root */
export type Query_RootClassArgs = {
  distinct_on?: InputMaybe<Array<Class_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Order_By>>;
  where?: InputMaybe<Class_Bool_Exp>;
};


/** query root */
export type Query_RootClass_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Class_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Order_By>>;
  where?: InputMaybe<Class_Bool_Exp>;
};


/** query root */
export type Query_RootClass_By_PkArgs = {
  class_id: Scalars['String'];
};


/** query root */
export type Query_RootClass_MemberArgs = {
  distinct_on?: InputMaybe<Array<Class_Member_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Member_Order_By>>;
  where?: InputMaybe<Class_Member_Bool_Exp>;
};


/** query root */
export type Query_RootClass_Member_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Class_Member_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Member_Order_By>>;
  where?: InputMaybe<Class_Member_Bool_Exp>;
};


/** query root */
export type Query_RootClass_Member_By_PkArgs = {
  class_member_id: Scalars['String'];
};


/** query root */
export type Query_RootClass_MembersArgs = {
  distinct_on?: InputMaybe<Array<Class_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Members_Order_By>>;
  where?: InputMaybe<Class_Members_Bool_Exp>;
};


/** query root */
export type Query_RootClass_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Class_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Members_Order_By>>;
  where?: InputMaybe<Class_Members_Bool_Exp>;
};


/** query root */
export type Query_RootClass_Members_By_PkArgs = {
  class_member_id: Scalars['String'];
};


/** query root */
export type Query_RootClassesArgs = {
  distinct_on?: InputMaybe<Array<Classes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Classes_Order_By>>;
  where?: InputMaybe<Classes_Bool_Exp>;
};


/** query root */
export type Query_RootClasses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Classes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Classes_Order_By>>;
  where?: InputMaybe<Classes_Bool_Exp>;
};


/** query root */
export type Query_RootClasses_By_PkArgs = {
  class_id: Scalars['Int'];
};


/** query root */
export type Query_RootCoachesArgs = {
  distinct_on?: InputMaybe<Array<Coaches_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Coaches_Order_By>>;
  where?: InputMaybe<Coaches_Bool_Exp>;
};


/** query root */
export type Query_RootCoaches_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Coaches_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Coaches_Order_By>>;
  where?: InputMaybe<Coaches_Bool_Exp>;
};


/** query root */
export type Query_RootCoaches_By_PkArgs = {
  coach_id: Scalars['String'];
};


/** query root */
export type Query_RootCod_OrdersArgs = {
  distinct_on?: InputMaybe<Array<Cod_Orders_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Cod_Orders_Order_By>>;
  where?: InputMaybe<Cod_Orders_Bool_Exp>;
};


/** query root */
export type Query_RootCod_Orders_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Cod_Orders_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Cod_Orders_Order_By>>;
  where?: InputMaybe<Cod_Orders_Bool_Exp>;
};


/** query root */
export type Query_RootCod_Orders_By_PkArgs = {
  cod_order_id: Scalars['String'];
};


/** query root */
export type Query_RootConversion_TasksArgs = {
  distinct_on?: InputMaybe<Array<Conversion_Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Conversion_Tasks_Order_By>>;
  where?: InputMaybe<Conversion_Tasks_Bool_Exp>;
};


/** query root */
export type Query_RootConversion_Tasks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Conversion_Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Conversion_Tasks_Order_By>>;
  where?: InputMaybe<Conversion_Tasks_Bool_Exp>;
};


/** query root */
export type Query_RootConversion_Tasks_By_PkArgs = {
  task_uuid: Scalars['String'];
};


/** query root */
export type Query_RootCourse_Access_PathsArgs = {
  distinct_on?: InputMaybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Course_Access_Paths_Order_By>>;
  where?: InputMaybe<Course_Access_Paths_Bool_Exp>;
};


/** query root */
export type Query_RootCourse_Access_Paths_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Course_Access_Paths_Order_By>>;
  where?: InputMaybe<Course_Access_Paths_Bool_Exp>;
};


/** query root */
export type Query_RootCourse_Access_Paths_By_PkArgs = {
  course_id: Scalars['String'];
  location_id: Scalars['String'];
};


/** query root */
export type Query_RootCoursesArgs = {
  distinct_on?: InputMaybe<Array<Courses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Order_By>>;
  where?: InputMaybe<Courses_Bool_Exp>;
};


/** query root */
export type Query_RootCourses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Courses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Order_By>>;
  where?: InputMaybe<Courses_Bool_Exp>;
};


/** query root */
export type Query_RootCourses_BooksArgs = {
  distinct_on?: InputMaybe<Array<Courses_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Books_Order_By>>;
  where?: InputMaybe<Courses_Books_Bool_Exp>;
};


/** query root */
export type Query_RootCourses_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Courses_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Books_Order_By>>;
  where?: InputMaybe<Courses_Books_Bool_Exp>;
};


/** query root */
export type Query_RootCourses_Books_By_PkArgs = {
  book_id: Scalars['String'];
  course_id: Scalars['String'];
};


/** query root */
export type Query_RootCourses_By_PkArgs = {
  course_id: Scalars['String'];
};


/** query root */
export type Query_RootCourses_ClassesArgs = {
  distinct_on?: InputMaybe<Array<Courses_Classes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Classes_Order_By>>;
  where?: InputMaybe<Courses_Classes_Bool_Exp>;
};


/** query root */
export type Query_RootCourses_Classes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Courses_Classes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Classes_Order_By>>;
  where?: InputMaybe<Courses_Classes_Bool_Exp>;
};


/** query root */
export type Query_RootCourses_Classes_By_PkArgs = {
  class_id: Scalars['Int'];
  course_id: Scalars['String'];
};


/** query root */
export type Query_RootDistrictsArgs = {
  distinct_on?: InputMaybe<Array<Districts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Districts_Order_By>>;
  where?: InputMaybe<Districts_Bool_Exp>;
};


/** query root */
export type Query_RootDistricts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Districts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Districts_Order_By>>;
  where?: InputMaybe<Districts_Bool_Exp>;
};


/** query root */
export type Query_RootDistricts_By_PkArgs = {
  district_id: Scalars['Int'];
};


/** query root */
export type Query_RootFind_Quiz_By_Lo_IdArgs = {
  args: Find_Quiz_By_Lo_Id_Args;
  distinct_on?: InputMaybe<Array<Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizzes_Order_By>>;
  where?: InputMaybe<Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootFind_Quiz_By_Lo_Id_AggregateArgs = {
  args: Find_Quiz_By_Lo_Id_Args;
  distinct_on?: InputMaybe<Array<Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizzes_Order_By>>;
  where?: InputMaybe<Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootFind_Teacher_By_School_IdArgs = {
  args: Find_Teacher_By_School_Id_Args;
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


/** query root */
export type Query_RootFind_Teacher_By_School_Id_AggregateArgs = {
  args: Find_Teacher_By_School_Id_Args;
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Locations_Active_By_Course_IdArgs = {
  args: Get_Locations_Active_By_Course_Id_Args;
  distinct_on?: InputMaybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Course_Access_Paths_Order_By>>;
  where?: InputMaybe<Course_Access_Paths_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Locations_Active_By_Course_Id_AggregateArgs = {
  args: Get_Locations_Active_By_Course_Id_Args;
  distinct_on?: InputMaybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Course_Access_Paths_Order_By>>;
  where?: InputMaybe<Course_Access_Paths_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Locations_Lowest_LevelArgs = {
  args: Get_Locations_Lowest_Level_Args;
  distinct_on?: InputMaybe<Array<Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Locations_Order_By>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Locations_Lowest_Level_AggregateArgs = {
  args: Get_Locations_Lowest_Level_Args;
  distinct_on?: InputMaybe<Array<Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Locations_Order_By>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Lowest_Location_TypesArgs = {
  distinct_on?: InputMaybe<Array<Location_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Location_Types_Order_By>>;
  where?: InputMaybe<Location_Types_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Lowest_Location_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Location_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Location_Types_Order_By>>;
  where?: InputMaybe<Location_Types_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Partner_Dynamic_Form_Field_Values_By_StudentArgs = {
  args: Get_Partner_Dynamic_Form_Field_Values_By_Student_Args;
  distinct_on?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: InputMaybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Partner_Dynamic_Form_Field_Values_By_Student_AggregateArgs = {
  args: Get_Partner_Dynamic_Form_Field_Values_By_Student_Args;
  distinct_on?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: InputMaybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Previous_Report_Of_StudentArgs = {
  args: Get_Previous_Report_Of_Student_Args;
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Previous_Report_Of_Student_AggregateArgs = {
  args: Get_Previous_Report_Of_Student_Args;
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Previous_Report_Of_Student_V2Args = {
  args: Get_Previous_Report_Of_Student_V2_Args;
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Previous_Report_Of_Student_V2_AggregateArgs = {
  args: Get_Previous_Report_Of_Student_V2_Args;
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Previous_Report_Of_Student_V3Args = {
  args: Get_Previous_Report_Of_Student_V3_Args;
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};


/** query root */
export type Query_RootGet_Previous_Report_Of_Student_V3_AggregateArgs = {
  args: Get_Previous_Report_Of_Student_V3_Args;
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};


/** query root */
export type Query_RootGranted_RoleArgs = {
  distinct_on?: InputMaybe<Array<Granted_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Granted_Role_Order_By>>;
  where?: InputMaybe<Granted_Role_Bool_Exp>;
};


/** query root */
export type Query_RootGranted_Role_Access_PathArgs = {
  distinct_on?: InputMaybe<Array<Granted_Role_Access_Path_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Granted_Role_Access_Path_Order_By>>;
  where?: InputMaybe<Granted_Role_Access_Path_Bool_Exp>;
};


/** query root */
export type Query_RootGranted_Role_Access_Path_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Granted_Role_Access_Path_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Granted_Role_Access_Path_Order_By>>;
  where?: InputMaybe<Granted_Role_Access_Path_Bool_Exp>;
};


/** query root */
export type Query_RootGranted_Role_Access_Path_By_PkArgs = {
  granted_role_id: Scalars['String'];
  location_id: Scalars['String'];
};


/** query root */
export type Query_RootGranted_Role_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Granted_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Granted_Role_Order_By>>;
  where?: InputMaybe<Granted_Role_Bool_Exp>;
};


/** query root */
export type Query_RootGranted_Role_By_PkArgs = {
  granted_role_id: Scalars['String'];
};


/** query root */
export type Query_RootHub_ToursArgs = {
  distinct_on?: InputMaybe<Array<Hub_Tours_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Hub_Tours_Order_By>>;
  where?: InputMaybe<Hub_Tours_Bool_Exp>;
};


/** query root */
export type Query_RootHub_Tours_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Hub_Tours_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Hub_Tours_Order_By>>;
  where?: InputMaybe<Hub_Tours_Bool_Exp>;
};


/** query root */
export type Query_RootHub_Tours_By_PkArgs = {
  hub_id: Scalars['Int'];
  student_id: Scalars['String'];
};


/** query root */
export type Query_RootHubsArgs = {
  distinct_on?: InputMaybe<Array<Hubs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Hubs_Order_By>>;
  where?: InputMaybe<Hubs_Bool_Exp>;
};


/** query root */
export type Query_RootHubs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Hubs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Hubs_Order_By>>;
  where?: InputMaybe<Hubs_Bool_Exp>;
};


/** query root */
export type Query_RootHubs_By_PkArgs = {
  hub_id: Scalars['Int'];
};


/** query root */
export type Query_RootInfo_Notification_MsgsArgs = {
  distinct_on?: InputMaybe<Array<Info_Notification_Msgs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notification_Msgs_Order_By>>;
  where?: InputMaybe<Info_Notification_Msgs_Bool_Exp>;
};


/** query root */
export type Query_RootInfo_Notification_Msgs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Info_Notification_Msgs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notification_Msgs_Order_By>>;
  where?: InputMaybe<Info_Notification_Msgs_Bool_Exp>;
};


/** query root */
export type Query_RootInfo_Notification_Msgs_By_PkArgs = {
  notification_msg_id: Scalars['String'];
};


/** query root */
export type Query_RootInfo_NotificationsArgs = {
  distinct_on?: InputMaybe<Array<Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notifications_Order_By>>;
  where?: InputMaybe<Info_Notifications_Bool_Exp>;
};


/** query root */
export type Query_RootInfo_Notifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notifications_Order_By>>;
  where?: InputMaybe<Info_Notifications_Bool_Exp>;
};


/** query root */
export type Query_RootInfo_Notifications_By_PkArgs = {
  notification_id: Scalars['String'];
};


/** query root */
export type Query_RootInfo_Notifications_TagsArgs = {
  distinct_on?: InputMaybe<Array<Info_Notifications_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notifications_Tags_Order_By>>;
  where?: InputMaybe<Info_Notifications_Tags_Bool_Exp>;
};


/** query root */
export type Query_RootInfo_Notifications_Tags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Info_Notifications_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notifications_Tags_Order_By>>;
  where?: InputMaybe<Info_Notifications_Tags_Bool_Exp>;
};


/** query root */
export type Query_RootInfo_Notifications_Tags_By_PkArgs = {
  notification_tag_id: Scalars['String'];
};


/** query root */
export type Query_RootLearning_ObjectivesArgs = {
  distinct_on?: InputMaybe<Array<Learning_Objectives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Learning_Objectives_Order_By>>;
  where?: InputMaybe<Learning_Objectives_Bool_Exp>;
};


/** query root */
export type Query_RootLearning_Objectives_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Learning_Objectives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Learning_Objectives_Order_By>>;
  where?: InputMaybe<Learning_Objectives_Bool_Exp>;
};


/** query root */
export type Query_RootLearning_Objectives_By_PkArgs = {
  lo_id: Scalars['String'];
};


/** query root */
export type Query_RootLesson_GroupsArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Groups_Order_By>>;
  where?: InputMaybe<Lesson_Groups_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Groups_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Groups_Order_By>>;
  where?: InputMaybe<Lesson_Groups_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Groups_By_PkArgs = {
  course_id: Scalars['String'];
  lesson_group_id: Scalars['String'];
};


/** query root */
export type Query_RootLesson_MembersArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Members_Order_By>>;
  where?: InputMaybe<Lesson_Members_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Members_Order_By>>;
  where?: InputMaybe<Lesson_Members_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Members_By_PkArgs = {
  lesson_id: Scalars['String'];
  user_id: Scalars['String'];
};


/** query root */
export type Query_RootLesson_Report_DetailsArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Report_Details_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Report_Details_Order_By>>;
  where?: InputMaybe<Lesson_Report_Details_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Report_Details_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Report_Details_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Report_Details_Order_By>>;
  where?: InputMaybe<Lesson_Report_Details_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Report_Details_By_PkArgs = {
  lesson_report_detail_id: Scalars['String'];
};


/** query root */
export type Query_RootLesson_ReportsArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Reports_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Reports_By_PkArgs = {
  lesson_report_id: Scalars['String'];
};


/** query root */
export type Query_RootLesson_SchedulesArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Schedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Schedules_Order_By>>;
  where?: InputMaybe<Lesson_Schedules_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Schedules_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Schedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Schedules_Order_By>>;
  where?: InputMaybe<Lesson_Schedules_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Student_Subscription_Access_PathArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Student_Subscription_Access_Path_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Student_Subscription_Access_Path_Order_By>>;
  where?: InputMaybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Student_Subscription_Access_Path_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Student_Subscription_Access_Path_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Student_Subscription_Access_Path_Order_By>>;
  where?: InputMaybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Student_Subscription_Access_Path_By_PkArgs = {
  location_id: Scalars['String'];
  student_subscription_id: Scalars['String'];
};


/** query root */
export type Query_RootLesson_Student_SubscriptionsArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Student_Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Student_Subscriptions_Order_By>>;
  where?: InputMaybe<Lesson_Student_Subscriptions_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Student_Subscriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Student_Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Student_Subscriptions_Order_By>>;
  where?: InputMaybe<Lesson_Student_Subscriptions_Bool_Exp>;
};


/** query root */
export type Query_RootLesson_Student_Subscriptions_By_PkArgs = {
  student_subscription_id: Scalars['String'];
};


/** query root */
export type Query_RootLessonsArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Order_By>>;
  where?: InputMaybe<Lessons_Bool_Exp>;
};


/** query root */
export type Query_RootLessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Order_By>>;
  where?: InputMaybe<Lessons_Bool_Exp>;
};


/** query root */
export type Query_RootLessons_By_PkArgs = {
  lesson_id: Scalars['String'];
};


/** query root */
export type Query_RootLessons_CoursesArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Courses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Courses_Order_By>>;
  where?: InputMaybe<Lessons_Courses_Bool_Exp>;
};


/** query root */
export type Query_RootLessons_Courses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Courses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Courses_Order_By>>;
  where?: InputMaybe<Lessons_Courses_Bool_Exp>;
};


/** query root */
export type Query_RootLessons_Courses_By_PkArgs = {
  course_id: Scalars['String'];
  lesson_id: Scalars['String'];
};


/** query root */
export type Query_RootLessons_TeachersArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Teachers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Teachers_Order_By>>;
  where?: InputMaybe<Lessons_Teachers_Bool_Exp>;
};


/** query root */
export type Query_RootLessons_Teachers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Teachers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Teachers_Order_By>>;
  where?: InputMaybe<Lessons_Teachers_Bool_Exp>;
};


/** query root */
export type Query_RootLessons_Teachers_By_PkArgs = {
  lesson_id: Scalars['String'];
  teacher_id: Scalars['String'];
};


/** query root */
export type Query_RootLocation_TypesArgs = {
  distinct_on?: InputMaybe<Array<Location_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Location_Types_Order_By>>;
  where?: InputMaybe<Location_Types_Bool_Exp>;
};


/** query root */
export type Query_RootLocation_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Location_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Location_Types_Order_By>>;
  where?: InputMaybe<Location_Types_Bool_Exp>;
};


/** query root */
export type Query_RootLocation_Types_By_PkArgs = {
  location_type_id: Scalars['String'];
};


/** query root */
export type Query_RootLocationsArgs = {
  distinct_on?: InputMaybe<Array<Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Locations_Order_By>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};


/** query root */
export type Query_RootLocations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Locations_Order_By>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};


/** query root */
export type Query_RootLocations_By_PkArgs = {
  location_id: Scalars['String'];
};


/** query root */
export type Query_RootMediaArgs = {
  distinct_on?: InputMaybe<Array<Media_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Media_Order_By>>;
  where?: InputMaybe<Media_Bool_Exp>;
};


/** query root */
export type Query_RootMedia_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Media_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Media_Order_By>>;
  where?: InputMaybe<Media_Bool_Exp>;
};


/** query root */
export type Query_RootMedia_By_PkArgs = {
  media_id: Scalars['String'];
};


/** query root */
export type Query_RootOrganizationsArgs = {
  distinct_on?: InputMaybe<Array<Organizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Organizations_Order_By>>;
  where?: InputMaybe<Organizations_Bool_Exp>;
};


/** query root */
export type Query_RootOrganizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Organizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Organizations_Order_By>>;
  where?: InputMaybe<Organizations_Bool_Exp>;
};


/** query root */
export type Query_RootOrganizations_By_PkArgs = {
  organization_id: Scalars['String'];
};


/** query root */
export type Query_RootParentsArgs = {
  distinct_on?: InputMaybe<Array<Parents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Parents_Order_By>>;
  where?: InputMaybe<Parents_Bool_Exp>;
};


/** query root */
export type Query_RootParents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Parents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Parents_Order_By>>;
  where?: InputMaybe<Parents_Bool_Exp>;
};


/** query root */
export type Query_RootParents_By_PkArgs = {
  parent_id: Scalars['String'];
};


/** query root */
export type Query_RootPartner_Dynamic_Form_Field_ValuesArgs = {
  distinct_on?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: InputMaybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};


/** query root */
export type Query_RootPartner_Dynamic_Form_Field_Values_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: InputMaybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};


/** query root */
export type Query_RootPartner_Dynamic_Form_Field_Values_By_PkArgs = {
  dynamic_form_field_value_id: Scalars['String'];
};


/** query root */
export type Query_RootPartner_Form_ConfigsArgs = {
  distinct_on?: InputMaybe<Array<Partner_Form_Configs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Form_Configs_Order_By>>;
  where?: InputMaybe<Partner_Form_Configs_Bool_Exp>;
};


/** query root */
export type Query_RootPartner_Form_Configs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Partner_Form_Configs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Form_Configs_Order_By>>;
  where?: InputMaybe<Partner_Form_Configs_Bool_Exp>;
};


/** query root */
export type Query_RootPartner_Form_Configs_By_PkArgs = {
  form_config_id: Scalars['String'];
};


/** query root */
export type Query_RootPlansArgs = {
  distinct_on?: InputMaybe<Array<Plans_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Plans_Order_By>>;
  where?: InputMaybe<Plans_Bool_Exp>;
};


/** query root */
export type Query_RootPlans_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Plans_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Plans_Order_By>>;
  where?: InputMaybe<Plans_Bool_Exp>;
};


/** query root */
export type Query_RootPlans_By_PkArgs = {
  country: Scalars['String'];
  plan_id: Scalars['String'];
};


/** query root */
export type Query_RootPrefectureArgs = {
  distinct_on?: InputMaybe<Array<Prefecture_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Prefecture_Order_By>>;
  where?: InputMaybe<Prefecture_Bool_Exp>;
};


/** query root */
export type Query_RootPrefecture_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Prefecture_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Prefecture_Order_By>>;
  where?: InputMaybe<Prefecture_Bool_Exp>;
};


/** query root */
export type Query_RootPrefecture_By_PkArgs = {
  prefecture_id: Scalars['String'];
};


/** query root */
export type Query_RootPreset_Study_PlansArgs = {
  distinct_on?: InputMaybe<Array<Preset_Study_Plans_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Preset_Study_Plans_Order_By>>;
  where?: InputMaybe<Preset_Study_Plans_Bool_Exp>;
};


/** query root */
export type Query_RootPreset_Study_Plans_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Preset_Study_Plans_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Preset_Study_Plans_Order_By>>;
  where?: InputMaybe<Preset_Study_Plans_Bool_Exp>;
};


/** query root */
export type Query_RootPreset_Study_Plans_By_PkArgs = {
  preset_study_plan_id: Scalars['String'];
};


/** query root */
export type Query_RootPreset_Study_Plans_WeeklyArgs = {
  distinct_on?: InputMaybe<Array<Preset_Study_Plans_Weekly_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Preset_Study_Plans_Weekly_Order_By>>;
  where?: InputMaybe<Preset_Study_Plans_Weekly_Bool_Exp>;
};


/** query root */
export type Query_RootPreset_Study_Plans_Weekly_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Preset_Study_Plans_Weekly_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Preset_Study_Plans_Weekly_Order_By>>;
  where?: InputMaybe<Preset_Study_Plans_Weekly_Bool_Exp>;
};


/** query root */
export type Query_RootPreset_Study_Plans_Weekly_By_PkArgs = {
  preset_study_plan_weekly_id: Scalars['String'];
};


/** query root */
export type Query_RootPreset_Study_Plans_Weekly_FormatArgs = {
  distinct_on?: InputMaybe<Array<Preset_Study_Plans_Weekly_Format_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Preset_Study_Plans_Weekly_Format_Order_By>>;
  where?: InputMaybe<Preset_Study_Plans_Weekly_Format_Bool_Exp>;
};


/** query root */
export type Query_RootPreset_Study_Plans_Weekly_Format_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Preset_Study_Plans_Weekly_Format_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Preset_Study_Plans_Weekly_Format_Order_By>>;
  where?: InputMaybe<Preset_Study_Plans_Weekly_Format_Bool_Exp>;
};


/** query root */
export type Query_RootPromotion_RulesArgs = {
  distinct_on?: InputMaybe<Array<Promotion_Rules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Promotion_Rules_Order_By>>;
  where?: InputMaybe<Promotion_Rules_Bool_Exp>;
};


/** query root */
export type Query_RootPromotion_Rules_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Promotion_Rules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Promotion_Rules_Order_By>>;
  where?: InputMaybe<Promotion_Rules_Bool_Exp>;
};


/** query root */
export type Query_RootPromotion_Rules_By_PkArgs = {
  promotion_rule_id: Scalars['Int'];
};


/** query root */
export type Query_RootPromotionsArgs = {
  distinct_on?: InputMaybe<Array<Promotions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Promotions_Order_By>>;
  where?: InputMaybe<Promotions_Bool_Exp>;
};


/** query root */
export type Query_RootPromotions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Promotions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Promotions_Order_By>>;
  where?: InputMaybe<Promotions_Bool_Exp>;
};


/** query root */
export type Query_RootPromotions_By_PkArgs = {
  promotion_id: Scalars['Int'];
};


/** query root */
export type Query_RootQuestionnaire_QuestionsArgs = {
  distinct_on?: InputMaybe<Array<Questionnaire_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questionnaire_Questions_Order_By>>;
  where?: InputMaybe<Questionnaire_Questions_Bool_Exp>;
};


/** query root */
export type Query_RootQuestionnaire_Questions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Questionnaire_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questionnaire_Questions_Order_By>>;
  where?: InputMaybe<Questionnaire_Questions_Bool_Exp>;
};


/** query root */
export type Query_RootQuestionnaire_Questions_By_PkArgs = {
  questionnaire_question_id: Scalars['String'];
};


/** query root */
export type Query_RootQuestionnaire_User_AnswersArgs = {
  distinct_on?: InputMaybe<Array<Questionnaire_User_Answers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questionnaire_User_Answers_Order_By>>;
  where?: InputMaybe<Questionnaire_User_Answers_Bool_Exp>;
};


/** query root */
export type Query_RootQuestionnaire_User_Answers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Questionnaire_User_Answers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questionnaire_User_Answers_Order_By>>;
  where?: InputMaybe<Questionnaire_User_Answers_Bool_Exp>;
};


/** query root */
export type Query_RootQuestionnaire_User_Answers_By_PkArgs = {
  answer_id: Scalars['String'];
  user_notification_id: Scalars['String'];
};


/** query root */
export type Query_RootQuestionnairesArgs = {
  distinct_on?: InputMaybe<Array<Questionnaires_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questionnaires_Order_By>>;
  where?: InputMaybe<Questionnaires_Bool_Exp>;
};


/** query root */
export type Query_RootQuestionnaires_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Questionnaires_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questionnaires_Order_By>>;
  where?: InputMaybe<Questionnaires_Bool_Exp>;
};


/** query root */
export type Query_RootQuestionnaires_By_PkArgs = {
  questionnaire_id: Scalars['String'];
};


/** query root */
export type Query_RootQuestionsArgs = {
  distinct_on?: InputMaybe<Array<Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questions_Order_By>>;
  where?: InputMaybe<Questions_Bool_Exp>;
};


/** query root */
export type Query_RootQuestions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questions_Order_By>>;
  where?: InputMaybe<Questions_Bool_Exp>;
};


/** query root */
export type Query_RootQuestions_By_PkArgs = {
  question_id: Scalars['String'];
};


/** query root */
export type Query_RootQuiz_SetsArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Sets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Sets_Order_By>>;
  where?: InputMaybe<Quiz_Sets_Bool_Exp>;
};


/** query root */
export type Query_RootQuiz_Sets_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Sets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Sets_Order_By>>;
  where?: InputMaybe<Quiz_Sets_Bool_Exp>;
};


/** query root */
export type Query_RootQuiz_Sets_By_PkArgs = {
  quiz_set_id: Scalars['String'];
};


/** query root */
export type Query_RootQuizsetsArgs = {
  distinct_on?: InputMaybe<Array<Quizsets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizsets_Order_By>>;
  where?: InputMaybe<Quizsets_Bool_Exp>;
};


/** query root */
export type Query_RootQuizsets_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Quizsets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizsets_Order_By>>;
  where?: InputMaybe<Quizsets_Bool_Exp>;
};


/** query root */
export type Query_RootQuizsets_By_PkArgs = {
  lo_id: Scalars['String'];
  question_id: Scalars['String'];
};


/** query root */
export type Query_RootQuizzesArgs = {
  distinct_on?: InputMaybe<Array<Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizzes_Order_By>>;
  where?: InputMaybe<Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootQuizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizzes_Order_By>>;
  where?: InputMaybe<Quizzes_Bool_Exp>;
};


/** query root */
export type Query_RootQuizzes_By_PkArgs = {
  quiz_id: Scalars['String'];
};


/** query root */
export type Query_RootRoleArgs = {
  distinct_on?: InputMaybe<Array<Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Role_Order_By>>;
  where?: InputMaybe<Role_Bool_Exp>;
};


/** query root */
export type Query_RootRole_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Role_Order_By>>;
  where?: InputMaybe<Role_Bool_Exp>;
};


/** query root */
export type Query_RootRole_By_PkArgs = {
  role_id: Scalars['String'];
};


/** query root */
export type Query_RootSchedulerArgs = {
  distinct_on?: InputMaybe<Array<Scheduler_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Scheduler_Order_By>>;
  where?: InputMaybe<Scheduler_Bool_Exp>;
};


/** query root */
export type Query_RootScheduler_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Scheduler_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Scheduler_Order_By>>;
  where?: InputMaybe<Scheduler_Bool_Exp>;
};


/** query root */
export type Query_RootScheduler_By_PkArgs = {
  scheduler_id: Scalars['String'];
};


/** query root */
export type Query_RootSchool_AdminsArgs = {
  distinct_on?: InputMaybe<Array<School_Admins_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Admins_Order_By>>;
  where?: InputMaybe<School_Admins_Bool_Exp>;
};


/** query root */
export type Query_RootSchool_Admins_AggregateArgs = {
  distinct_on?: InputMaybe<Array<School_Admins_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Admins_Order_By>>;
  where?: InputMaybe<School_Admins_Bool_Exp>;
};


/** query root */
export type Query_RootSchool_Admins_By_PkArgs = {
  school_admin_id: Scalars['String'];
};


/** query root */
export type Query_RootSchool_ConfigsArgs = {
  distinct_on?: InputMaybe<Array<School_Configs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Configs_Order_By>>;
  where?: InputMaybe<School_Configs_Bool_Exp>;
};


/** query root */
export type Query_RootSchool_Configs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<School_Configs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Configs_Order_By>>;
  where?: InputMaybe<School_Configs_Bool_Exp>;
};


/** query root */
export type Query_RootSchool_Configs_By_PkArgs = {
  school_id: Scalars['Int'];
};


/** query root */
export type Query_RootSchool_CourseArgs = {
  distinct_on?: InputMaybe<Array<School_Course_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Course_Order_By>>;
  where?: InputMaybe<School_Course_Bool_Exp>;
};


/** query root */
export type Query_RootSchool_Course_AggregateArgs = {
  distinct_on?: InputMaybe<Array<School_Course_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Course_Order_By>>;
  where?: InputMaybe<School_Course_Bool_Exp>;
};


/** query root */
export type Query_RootSchool_Course_By_PkArgs = {
  school_course_id: Scalars['String'];
};


/** query root */
export type Query_RootSchool_InfoArgs = {
  distinct_on?: InputMaybe<Array<School_Info_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Info_Order_By>>;
  where?: InputMaybe<School_Info_Bool_Exp>;
};


/** query root */
export type Query_RootSchool_Info_AggregateArgs = {
  distinct_on?: InputMaybe<Array<School_Info_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Info_Order_By>>;
  where?: InputMaybe<School_Info_Bool_Exp>;
};


/** query root */
export type Query_RootSchool_Info_By_PkArgs = {
  school_id: Scalars['String'];
};


/** query root */
export type Query_RootSchool_LevelArgs = {
  distinct_on?: InputMaybe<Array<School_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Level_Order_By>>;
  where?: InputMaybe<School_Level_Bool_Exp>;
};


/** query root */
export type Query_RootSchool_Level_AggregateArgs = {
  distinct_on?: InputMaybe<Array<School_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Level_Order_By>>;
  where?: InputMaybe<School_Level_Bool_Exp>;
};


/** query root */
export type Query_RootSchool_Level_By_PkArgs = {
  school_level_id: Scalars['String'];
};


/** query root */
export type Query_RootSchool_Level_GradeArgs = {
  distinct_on?: InputMaybe<Array<School_Level_Grade_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Level_Grade_Order_By>>;
  where?: InputMaybe<School_Level_Grade_Bool_Exp>;
};


/** query root */
export type Query_RootSchool_Level_Grade_AggregateArgs = {
  distinct_on?: InputMaybe<Array<School_Level_Grade_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Level_Grade_Order_By>>;
  where?: InputMaybe<School_Level_Grade_Bool_Exp>;
};


/** query root */
export type Query_RootSchool_Level_Grade_By_PkArgs = {
  grade_id: Scalars['String'];
  school_level_id: Scalars['String'];
};


/** query root */
export type Query_RootSchoolsArgs = {
  distinct_on?: InputMaybe<Array<Schools_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Schools_Order_By>>;
  where?: InputMaybe<Schools_Bool_Exp>;
};


/** query root */
export type Query_RootSchools_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Schools_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Schools_Order_By>>;
  where?: InputMaybe<Schools_Bool_Exp>;
};


/** query root */
export type Query_RootSchools_By_PkArgs = {
  school_id: Scalars['Int'];
};


/** query root */
export type Query_RootSearch_Courses_By_NameArgs = {
  args: Search_Courses_By_Name_Args;
  distinct_on?: InputMaybe<Array<Courses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Order_By>>;
  where?: InputMaybe<Courses_Bool_Exp>;
};


/** query root */
export type Query_RootSearch_Courses_By_Name_AggregateArgs = {
  args: Search_Courses_By_Name_Args;
  distinct_on?: InputMaybe<Array<Courses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Order_By>>;
  where?: InputMaybe<Courses_Bool_Exp>;
};


/** query root */
export type Query_RootStaffArgs = {
  distinct_on?: InputMaybe<Array<Staff_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Staff_Order_By>>;
  where?: InputMaybe<Staff_Bool_Exp>;
};


/** query root */
export type Query_RootStaff_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Staff_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Staff_Order_By>>;
  where?: InputMaybe<Staff_Bool_Exp>;
};


/** query root */
export type Query_RootStaff_By_PkArgs = {
  staff_id: Scalars['String'];
};


/** query root */
export type Query_RootStudent_Entryexit_RecordsArgs = {
  distinct_on?: InputMaybe<Array<Student_Entryexit_Records_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Entryexit_Records_Order_By>>;
  where?: InputMaybe<Student_Entryexit_Records_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Entryexit_Records_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Student_Entryexit_Records_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Entryexit_Records_Order_By>>;
  where?: InputMaybe<Student_Entryexit_Records_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Entryexit_Records_By_PkArgs = {
  entryexit_id: Scalars['Int'];
};


/** query root */
export type Query_RootStudent_ParentsArgs = {
  distinct_on?: InputMaybe<Array<Student_Parents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Parents_Order_By>>;
  where?: InputMaybe<Student_Parents_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Parents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Student_Parents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Parents_Order_By>>;
  where?: InputMaybe<Student_Parents_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Parents_By_PkArgs = {
  parent_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** query root */
export type Query_RootStudent_QrArgs = {
  distinct_on?: InputMaybe<Array<Student_Qr_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Qr_Order_By>>;
  where?: InputMaybe<Student_Qr_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Qr_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Student_Qr_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Qr_Order_By>>;
  where?: InputMaybe<Student_Qr_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Qr_By_PkArgs = {
  qr_id: Scalars['Int'];
};


/** query root */
export type Query_RootStudent_SubscriptionsArgs = {
  distinct_on?: InputMaybe<Array<Student_Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Subscriptions_Order_By>>;
  where?: InputMaybe<Student_Subscriptions_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Subscriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Student_Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Subscriptions_Order_By>>;
  where?: InputMaybe<Student_Subscriptions_Bool_Exp>;
};


/** query root */
export type Query_RootStudent_Subscriptions_By_PkArgs = {
  student_subscription_id: Scalars['String'];
};


/** query root */
export type Query_RootStudentsArgs = {
  distinct_on?: InputMaybe<Array<Students_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Students_Order_By>>;
  where?: InputMaybe<Students_Bool_Exp>;
};


/** query root */
export type Query_RootStudents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Students_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Students_Order_By>>;
  where?: InputMaybe<Students_Bool_Exp>;
};


/** query root */
export type Query_RootStudents_Assigned_CoachesArgs = {
  distinct_on?: InputMaybe<Array<Students_Assigned_Coaches_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Students_Assigned_Coaches_Order_By>>;
  where?: InputMaybe<Students_Assigned_Coaches_Bool_Exp>;
};


/** query root */
export type Query_RootStudents_Assigned_Coaches_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Students_Assigned_Coaches_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Students_Assigned_Coaches_Order_By>>;
  where?: InputMaybe<Students_Assigned_Coaches_Bool_Exp>;
};


/** query root */
export type Query_RootStudents_By_PkArgs = {
  student_id: Scalars['String'];
};


/** query root */
export type Query_RootTagsArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


/** query root */
export type Query_RootTags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


/** query root */
export type Query_RootTags_By_PkArgs = {
  tag_id: Scalars['String'];
};


/** query root */
export type Query_RootTeacher_By_School_IdArgs = {
  distinct_on?: InputMaybe<Array<Teacher_By_School_Id_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_By_School_Id_Order_By>>;
  where?: InputMaybe<Teacher_By_School_Id_Bool_Exp>;
};


/** query root */
export type Query_RootTeacher_By_School_Id_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_By_School_Id_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_By_School_Id_Order_By>>;
  where?: InputMaybe<Teacher_By_School_Id_Bool_Exp>;
};


/** query root */
export type Query_RootTeachersArgs = {
  distinct_on?: InputMaybe<Array<Teachers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teachers_Order_By>>;
  where?: InputMaybe<Teachers_Bool_Exp>;
};


/** query root */
export type Query_RootTeachers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teachers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teachers_Order_By>>;
  where?: InputMaybe<Teachers_Bool_Exp>;
};


/** query root */
export type Query_RootTeachers_By_PkArgs = {
  teacher_id: Scalars['String'];
};


/** query root */
export type Query_RootTopicsArgs = {
  distinct_on?: InputMaybe<Array<Topics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Topics_Order_By>>;
  where?: InputMaybe<Topics_Bool_Exp>;
};


/** query root */
export type Query_RootTopics_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Topics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Topics_Order_By>>;
  where?: InputMaybe<Topics_Bool_Exp>;
};


/** query root */
export type Query_RootTopics_By_PkArgs = {
  topic_id: Scalars['String'];
};


/** query root */
export type Query_RootTopics_Learning_ObjectivesArgs = {
  distinct_on?: InputMaybe<Array<Topics_Learning_Objectives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Topics_Learning_Objectives_Order_By>>;
  where?: InputMaybe<Topics_Learning_Objectives_Bool_Exp>;
};


/** query root */
export type Query_RootTopics_Learning_Objectives_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Topics_Learning_Objectives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Topics_Learning_Objectives_Order_By>>;
  where?: InputMaybe<Topics_Learning_Objectives_Bool_Exp>;
};


/** query root */
export type Query_RootTopics_Learning_Objectives_By_PkArgs = {
  lo_id: Scalars['String'];
  topic_id: Scalars['String'];
};


/** query root */
export type Query_RootUser_Access_PathsArgs = {
  distinct_on?: InputMaybe<Array<User_Access_Paths_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Access_Paths_Order_By>>;
  where?: InputMaybe<User_Access_Paths_Bool_Exp>;
};


/** query root */
export type Query_RootUser_Access_Paths_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Access_Paths_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Access_Paths_Order_By>>;
  where?: InputMaybe<User_Access_Paths_Bool_Exp>;
};


/** query root */
export type Query_RootUser_Access_Paths_By_PkArgs = {
  location_id: Scalars['String'];
  user_id: Scalars['String'];
};


/** query root */
export type Query_RootUser_AddressArgs = {
  distinct_on?: InputMaybe<Array<User_Address_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Address_Order_By>>;
  where?: InputMaybe<User_Address_Bool_Exp>;
};


/** query root */
export type Query_RootUser_Address_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Address_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Address_Order_By>>;
  where?: InputMaybe<User_Address_Bool_Exp>;
};


/** query root */
export type Query_RootUser_Address_By_PkArgs = {
  user_address_id: Scalars['String'];
};


/** query root */
export type Query_RootUser_GroupArgs = {
  distinct_on?: InputMaybe<Array<User_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Group_Order_By>>;
  where?: InputMaybe<User_Group_Bool_Exp>;
};


/** query root */
export type Query_RootUser_Group_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Group_Order_By>>;
  where?: InputMaybe<User_Group_Bool_Exp>;
};


/** query root */
export type Query_RootUser_Group_By_PkArgs = {
  user_group_id: Scalars['String'];
};


/** query root */
export type Query_RootUser_Group_MemberArgs = {
  distinct_on?: InputMaybe<Array<User_Group_Member_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Group_Member_Order_By>>;
  where?: InputMaybe<User_Group_Member_Bool_Exp>;
};


/** query root */
export type Query_RootUser_Group_Member_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Group_Member_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Group_Member_Order_By>>;
  where?: InputMaybe<User_Group_Member_Bool_Exp>;
};


/** query root */
export type Query_RootUser_Group_Member_By_PkArgs = {
  user_group_id: Scalars['String'];
  user_id: Scalars['String'];
};


/** query root */
export type Query_RootUser_TagArgs = {
  distinct_on?: InputMaybe<Array<User_Tag_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Tag_Order_By>>;
  where?: InputMaybe<User_Tag_Bool_Exp>;
};


/** query root */
export type Query_RootUser_Tag_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Tag_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Tag_Order_By>>;
  where?: InputMaybe<User_Tag_Bool_Exp>;
};


/** query root */
export type Query_RootUser_Tag_By_PkArgs = {
  user_tag_id: Scalars['String'];
};


/** query root */
export type Query_RootUsersArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


/** query root */
export type Query_RootUsers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


/** query root */
export type Query_RootUsers_By_PkArgs = {
  user_id: Scalars['String'];
};


/** query root */
export type Query_RootUsers_Info_NotificationsArgs = {
  distinct_on?: InputMaybe<Array<Users_Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Info_Notifications_Order_By>>;
  where?: InputMaybe<Users_Info_Notifications_Bool_Exp>;
};


/** query root */
export type Query_RootUsers_Info_Notifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Users_Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Info_Notifications_Order_By>>;
  where?: InputMaybe<Users_Info_Notifications_Bool_Exp>;
};


/** query root */
export type Query_RootUsers_Info_Notifications_By_PkArgs = {
  user_notification_id: Scalars['String'];
};

/** columns and relationships of "questionnaire_questions" */
export type Questionnaire_Questions = {
  choices?: Maybe<Scalars['_text']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_required?: Maybe<Scalars['Boolean']>;
  order_index: Scalars['Int'];
  /** An object relationship */
  questionnaire: Questionnaires;
  questionnaire_id: Scalars['String'];
  questionnaire_question_id: Scalars['String'];
  resource_path: Scalars['String'];
  title?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "questionnaire_questions" */
export type Questionnaire_Questions_Aggregate = {
  aggregate?: Maybe<Questionnaire_Questions_Aggregate_Fields>;
  nodes: Array<Questionnaire_Questions>;
};

/** aggregate fields of "questionnaire_questions" */
export type Questionnaire_Questions_Aggregate_Fields = {
  avg?: Maybe<Questionnaire_Questions_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Questionnaire_Questions_Max_Fields>;
  min?: Maybe<Questionnaire_Questions_Min_Fields>;
  stddev?: Maybe<Questionnaire_Questions_Stddev_Fields>;
  stddev_pop?: Maybe<Questionnaire_Questions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Questionnaire_Questions_Stddev_Samp_Fields>;
  sum?: Maybe<Questionnaire_Questions_Sum_Fields>;
  var_pop?: Maybe<Questionnaire_Questions_Var_Pop_Fields>;
  var_samp?: Maybe<Questionnaire_Questions_Var_Samp_Fields>;
  variance?: Maybe<Questionnaire_Questions_Variance_Fields>;
};


/** aggregate fields of "questionnaire_questions" */
export type Questionnaire_Questions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Questionnaire_Questions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "questionnaire_questions" */
export type Questionnaire_Questions_Aggregate_Order_By = {
  avg?: InputMaybe<Questionnaire_Questions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Questionnaire_Questions_Max_Order_By>;
  min?: InputMaybe<Questionnaire_Questions_Min_Order_By>;
  stddev?: InputMaybe<Questionnaire_Questions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Questionnaire_Questions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Questionnaire_Questions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Questionnaire_Questions_Sum_Order_By>;
  var_pop?: InputMaybe<Questionnaire_Questions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Questionnaire_Questions_Var_Samp_Order_By>;
  variance?: InputMaybe<Questionnaire_Questions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "questionnaire_questions" */
export type Questionnaire_Questions_Arr_Rel_Insert_Input = {
  data: Array<Questionnaire_Questions_Insert_Input>;
  on_conflict?: InputMaybe<Questionnaire_Questions_On_Conflict>;
};

/** aggregate avg on columns */
export type Questionnaire_Questions_Avg_Fields = {
  order_index?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "questionnaire_questions" */
export type Questionnaire_Questions_Avg_Order_By = {
  order_index?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "questionnaire_questions". All fields are combined with a logical 'AND'. */
export type Questionnaire_Questions_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Questionnaire_Questions_Bool_Exp>>>;
  _not?: InputMaybe<Questionnaire_Questions_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Questionnaire_Questions_Bool_Exp>>>;
  choices?: InputMaybe<_Text_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  is_required?: InputMaybe<Boolean_Comparison_Exp>;
  order_index?: InputMaybe<Int_Comparison_Exp>;
  questionnaire?: InputMaybe<Questionnaires_Bool_Exp>;
  questionnaire_id?: InputMaybe<String_Comparison_Exp>;
  questionnaire_question_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "questionnaire_questions" */
export enum Questionnaire_Questions_Constraint {
  /** unique or primary key constraint */
  PkQuestionnaireQuestions = 'pk__questionnaire_questions'
}

/** input type for incrementing integer column in table "questionnaire_questions" */
export type Questionnaire_Questions_Inc_Input = {
  order_index?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "questionnaire_questions" */
export type Questionnaire_Questions_Insert_Input = {
  choices?: InputMaybe<Scalars['_text']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_required?: InputMaybe<Scalars['Boolean']>;
  order_index?: InputMaybe<Scalars['Int']>;
  questionnaire?: InputMaybe<Questionnaires_Obj_Rel_Insert_Input>;
  questionnaire_id?: InputMaybe<Scalars['String']>;
  questionnaire_question_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Questionnaire_Questions_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  order_index?: Maybe<Scalars['Int']>;
  questionnaire_id?: Maybe<Scalars['String']>;
  questionnaire_question_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "questionnaire_questions" */
export type Questionnaire_Questions_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  order_index?: InputMaybe<Order_By>;
  questionnaire_id?: InputMaybe<Order_By>;
  questionnaire_question_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Questionnaire_Questions_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  order_index?: Maybe<Scalars['Int']>;
  questionnaire_id?: Maybe<Scalars['String']>;
  questionnaire_question_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "questionnaire_questions" */
export type Questionnaire_Questions_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  order_index?: InputMaybe<Order_By>;
  questionnaire_id?: InputMaybe<Order_By>;
  questionnaire_question_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "questionnaire_questions" */
export type Questionnaire_Questions_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Questionnaire_Questions>;
};

/** input type for inserting object relation for remote table "questionnaire_questions" */
export type Questionnaire_Questions_Obj_Rel_Insert_Input = {
  data: Questionnaire_Questions_Insert_Input;
  on_conflict?: InputMaybe<Questionnaire_Questions_On_Conflict>;
};

/** on conflict condition type for table "questionnaire_questions" */
export type Questionnaire_Questions_On_Conflict = {
  constraint: Questionnaire_Questions_Constraint;
  update_columns: Array<Questionnaire_Questions_Update_Column>;
  where?: InputMaybe<Questionnaire_Questions_Bool_Exp>;
};

/** ordering options when selecting data from "questionnaire_questions" */
export type Questionnaire_Questions_Order_By = {
  choices?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  is_required?: InputMaybe<Order_By>;
  order_index?: InputMaybe<Order_By>;
  questionnaire?: InputMaybe<Questionnaires_Order_By>;
  questionnaire_id?: InputMaybe<Order_By>;
  questionnaire_question_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "questionnaire_questions" */
export type Questionnaire_Questions_Pk_Columns_Input = {
  questionnaire_question_id: Scalars['String'];
};

/** select columns of table "questionnaire_questions" */
export enum Questionnaire_Questions_Select_Column {
  /** column name */
  Choices = 'choices',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsRequired = 'is_required',
  /** column name */
  OrderIndex = 'order_index',
  /** column name */
  QuestionnaireId = 'questionnaire_id',
  /** column name */
  QuestionnaireQuestionId = 'questionnaire_question_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Title = 'title',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "questionnaire_questions" */
export type Questionnaire_Questions_Set_Input = {
  choices?: InputMaybe<Scalars['_text']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_required?: InputMaybe<Scalars['Boolean']>;
  order_index?: InputMaybe<Scalars['Int']>;
  questionnaire_id?: InputMaybe<Scalars['String']>;
  questionnaire_question_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Questionnaire_Questions_Stddev_Fields = {
  order_index?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "questionnaire_questions" */
export type Questionnaire_Questions_Stddev_Order_By = {
  order_index?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Questionnaire_Questions_Stddev_Pop_Fields = {
  order_index?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "questionnaire_questions" */
export type Questionnaire_Questions_Stddev_Pop_Order_By = {
  order_index?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Questionnaire_Questions_Stddev_Samp_Fields = {
  order_index?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "questionnaire_questions" */
export type Questionnaire_Questions_Stddev_Samp_Order_By = {
  order_index?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Questionnaire_Questions_Sum_Fields = {
  order_index?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "questionnaire_questions" */
export type Questionnaire_Questions_Sum_Order_By = {
  order_index?: InputMaybe<Order_By>;
};

/** update columns of table "questionnaire_questions" */
export enum Questionnaire_Questions_Update_Column {
  /** column name */
  Choices = 'choices',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsRequired = 'is_required',
  /** column name */
  OrderIndex = 'order_index',
  /** column name */
  QuestionnaireId = 'questionnaire_id',
  /** column name */
  QuestionnaireQuestionId = 'questionnaire_question_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Title = 'title',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Questionnaire_Questions_Var_Pop_Fields = {
  order_index?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "questionnaire_questions" */
export type Questionnaire_Questions_Var_Pop_Order_By = {
  order_index?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Questionnaire_Questions_Var_Samp_Fields = {
  order_index?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "questionnaire_questions" */
export type Questionnaire_Questions_Var_Samp_Order_By = {
  order_index?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Questionnaire_Questions_Variance_Fields = {
  order_index?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "questionnaire_questions" */
export type Questionnaire_Questions_Variance_Order_By = {
  order_index?: InputMaybe<Order_By>;
};

/** columns and relationships of "questionnaire_user_answers" */
export type Questionnaire_User_Answers = {
  answer?: Maybe<Scalars['String']>;
  answer_id: Scalars['String'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  questionnaire_question_id: Scalars['String'];
  resource_path: Scalars['String'];
  submitted_at: Scalars['timestamptz'];
  target_id: Scalars['String'];
  user_id: Scalars['String'];
  user_notification_id: Scalars['String'];
};

/** aggregated selection of "questionnaire_user_answers" */
export type Questionnaire_User_Answers_Aggregate = {
  aggregate?: Maybe<Questionnaire_User_Answers_Aggregate_Fields>;
  nodes: Array<Questionnaire_User_Answers>;
};

/** aggregate fields of "questionnaire_user_answers" */
export type Questionnaire_User_Answers_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Questionnaire_User_Answers_Max_Fields>;
  min?: Maybe<Questionnaire_User_Answers_Min_Fields>;
};


/** aggregate fields of "questionnaire_user_answers" */
export type Questionnaire_User_Answers_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Questionnaire_User_Answers_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "questionnaire_user_answers" */
export type Questionnaire_User_Answers_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Questionnaire_User_Answers_Max_Order_By>;
  min?: InputMaybe<Questionnaire_User_Answers_Min_Order_By>;
};

/** input type for inserting array relation for remote table "questionnaire_user_answers" */
export type Questionnaire_User_Answers_Arr_Rel_Insert_Input = {
  data: Array<Questionnaire_User_Answers_Insert_Input>;
  on_conflict?: InputMaybe<Questionnaire_User_Answers_On_Conflict>;
};

/** Boolean expression to filter rows from the table "questionnaire_user_answers". All fields are combined with a logical 'AND'. */
export type Questionnaire_User_Answers_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Questionnaire_User_Answers_Bool_Exp>>>;
  _not?: InputMaybe<Questionnaire_User_Answers_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Questionnaire_User_Answers_Bool_Exp>>>;
  answer?: InputMaybe<String_Comparison_Exp>;
  answer_id?: InputMaybe<String_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  questionnaire_question_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  submitted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  target_id?: InputMaybe<String_Comparison_Exp>;
  user_id?: InputMaybe<String_Comparison_Exp>;
  user_notification_id?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "questionnaire_user_answers" */
export enum Questionnaire_User_Answers_Constraint {
  /** unique or primary key constraint */
  PkQuestionnaireUserAnswers = 'pk__questionnaire_user_answers'
}

/** input type for inserting data into table "questionnaire_user_answers" */
export type Questionnaire_User_Answers_Insert_Input = {
  answer?: InputMaybe<Scalars['String']>;
  answer_id?: InputMaybe<Scalars['String']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  questionnaire_question_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  submitted_at?: InputMaybe<Scalars['timestamptz']>;
  target_id?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['String']>;
  user_notification_id?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Questionnaire_User_Answers_Max_Fields = {
  answer?: Maybe<Scalars['String']>;
  answer_id?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  questionnaire_question_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  submitted_at?: Maybe<Scalars['timestamptz']>;
  target_id?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
  user_notification_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "questionnaire_user_answers" */
export type Questionnaire_User_Answers_Max_Order_By = {
  answer?: InputMaybe<Order_By>;
  answer_id?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  questionnaire_question_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  submitted_at?: InputMaybe<Order_By>;
  target_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  user_notification_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Questionnaire_User_Answers_Min_Fields = {
  answer?: Maybe<Scalars['String']>;
  answer_id?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  questionnaire_question_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  submitted_at?: Maybe<Scalars['timestamptz']>;
  target_id?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
  user_notification_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "questionnaire_user_answers" */
export type Questionnaire_User_Answers_Min_Order_By = {
  answer?: InputMaybe<Order_By>;
  answer_id?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  questionnaire_question_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  submitted_at?: InputMaybe<Order_By>;
  target_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  user_notification_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "questionnaire_user_answers" */
export type Questionnaire_User_Answers_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Questionnaire_User_Answers>;
};

/** input type for inserting object relation for remote table "questionnaire_user_answers" */
export type Questionnaire_User_Answers_Obj_Rel_Insert_Input = {
  data: Questionnaire_User_Answers_Insert_Input;
  on_conflict?: InputMaybe<Questionnaire_User_Answers_On_Conflict>;
};

/** on conflict condition type for table "questionnaire_user_answers" */
export type Questionnaire_User_Answers_On_Conflict = {
  constraint: Questionnaire_User_Answers_Constraint;
  update_columns: Array<Questionnaire_User_Answers_Update_Column>;
  where?: InputMaybe<Questionnaire_User_Answers_Bool_Exp>;
};

/** ordering options when selecting data from "questionnaire_user_answers" */
export type Questionnaire_User_Answers_Order_By = {
  answer?: InputMaybe<Order_By>;
  answer_id?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  questionnaire_question_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  submitted_at?: InputMaybe<Order_By>;
  target_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  user_notification_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "questionnaire_user_answers" */
export type Questionnaire_User_Answers_Pk_Columns_Input = {
  answer_id: Scalars['String'];
  user_notification_id: Scalars['String'];
};

/** select columns of table "questionnaire_user_answers" */
export enum Questionnaire_User_Answers_Select_Column {
  /** column name */
  Answer = 'answer',
  /** column name */
  AnswerId = 'answer_id',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  QuestionnaireQuestionId = 'questionnaire_question_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SubmittedAt = 'submitted_at',
  /** column name */
  TargetId = 'target_id',
  /** column name */
  UserId = 'user_id',
  /** column name */
  UserNotificationId = 'user_notification_id'
}

/** input type for updating data in table "questionnaire_user_answers" */
export type Questionnaire_User_Answers_Set_Input = {
  answer?: InputMaybe<Scalars['String']>;
  answer_id?: InputMaybe<Scalars['String']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  questionnaire_question_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  submitted_at?: InputMaybe<Scalars['timestamptz']>;
  target_id?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['String']>;
  user_notification_id?: InputMaybe<Scalars['String']>;
};

/** update columns of table "questionnaire_user_answers" */
export enum Questionnaire_User_Answers_Update_Column {
  /** column name */
  Answer = 'answer',
  /** column name */
  AnswerId = 'answer_id',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  QuestionnaireQuestionId = 'questionnaire_question_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SubmittedAt = 'submitted_at',
  /** column name */
  TargetId = 'target_id',
  /** column name */
  UserId = 'user_id',
  /** column name */
  UserNotificationId = 'user_notification_id'
}

/** columns and relationships of "questionnaires" */
export type Questionnaires = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  expiration_date: Scalars['timestamptz'];
  /** An array relationship */
  info_notifications: Array<Info_Notifications>;
  /** An aggregated array relationship */
  info_notifications_aggregate: Info_Notifications_Aggregate;
  questionnaire_id: Scalars['String'];
  /** An array relationship */
  questionnaire_questions: Array<Questionnaire_Questions>;
  /** An aggregated array relationship */
  questionnaire_questions_aggregate: Questionnaire_Questions_Aggregate;
  resource_path: Scalars['String'];
  resubmit_allowed?: Maybe<Scalars['Boolean']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "questionnaires" */
export type QuestionnairesInfo_NotificationsArgs = {
  distinct_on?: InputMaybe<Array<Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notifications_Order_By>>;
  where?: InputMaybe<Info_Notifications_Bool_Exp>;
};


/** columns and relationships of "questionnaires" */
export type QuestionnairesInfo_Notifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notifications_Order_By>>;
  where?: InputMaybe<Info_Notifications_Bool_Exp>;
};


/** columns and relationships of "questionnaires" */
export type QuestionnairesQuestionnaire_QuestionsArgs = {
  distinct_on?: InputMaybe<Array<Questionnaire_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questionnaire_Questions_Order_By>>;
  where?: InputMaybe<Questionnaire_Questions_Bool_Exp>;
};


/** columns and relationships of "questionnaires" */
export type QuestionnairesQuestionnaire_Questions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Questionnaire_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questionnaire_Questions_Order_By>>;
  where?: InputMaybe<Questionnaire_Questions_Bool_Exp>;
};

/** aggregated selection of "questionnaires" */
export type Questionnaires_Aggregate = {
  aggregate?: Maybe<Questionnaires_Aggregate_Fields>;
  nodes: Array<Questionnaires>;
};

/** aggregate fields of "questionnaires" */
export type Questionnaires_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Questionnaires_Max_Fields>;
  min?: Maybe<Questionnaires_Min_Fields>;
};


/** aggregate fields of "questionnaires" */
export type Questionnaires_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Questionnaires_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "questionnaires" */
export type Questionnaires_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Questionnaires_Max_Order_By>;
  min?: InputMaybe<Questionnaires_Min_Order_By>;
};

/** input type for inserting array relation for remote table "questionnaires" */
export type Questionnaires_Arr_Rel_Insert_Input = {
  data: Array<Questionnaires_Insert_Input>;
  on_conflict?: InputMaybe<Questionnaires_On_Conflict>;
};

/** Boolean expression to filter rows from the table "questionnaires". All fields are combined with a logical 'AND'. */
export type Questionnaires_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Questionnaires_Bool_Exp>>>;
  _not?: InputMaybe<Questionnaires_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Questionnaires_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  expiration_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  info_notifications?: InputMaybe<Info_Notifications_Bool_Exp>;
  questionnaire_id?: InputMaybe<String_Comparison_Exp>;
  questionnaire_questions?: InputMaybe<Questionnaire_Questions_Bool_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  resubmit_allowed?: InputMaybe<Boolean_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "questionnaires" */
export enum Questionnaires_Constraint {
  /** unique or primary key constraint */
  PkQuestionnaires = 'pk__questionnaires'
}

/** input type for inserting data into table "questionnaires" */
export type Questionnaires_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  expiration_date?: InputMaybe<Scalars['timestamptz']>;
  info_notifications?: InputMaybe<Info_Notifications_Arr_Rel_Insert_Input>;
  questionnaire_id?: InputMaybe<Scalars['String']>;
  questionnaire_questions?: InputMaybe<Questionnaire_Questions_Arr_Rel_Insert_Input>;
  resource_path?: InputMaybe<Scalars['String']>;
  resubmit_allowed?: InputMaybe<Scalars['Boolean']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Questionnaires_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  expiration_date?: Maybe<Scalars['timestamptz']>;
  questionnaire_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "questionnaires" */
export type Questionnaires_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  expiration_date?: InputMaybe<Order_By>;
  questionnaire_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Questionnaires_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  expiration_date?: Maybe<Scalars['timestamptz']>;
  questionnaire_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "questionnaires" */
export type Questionnaires_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  expiration_date?: InputMaybe<Order_By>;
  questionnaire_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "questionnaires" */
export type Questionnaires_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Questionnaires>;
};

/** input type for inserting object relation for remote table "questionnaires" */
export type Questionnaires_Obj_Rel_Insert_Input = {
  data: Questionnaires_Insert_Input;
  on_conflict?: InputMaybe<Questionnaires_On_Conflict>;
};

/** on conflict condition type for table "questionnaires" */
export type Questionnaires_On_Conflict = {
  constraint: Questionnaires_Constraint;
  update_columns: Array<Questionnaires_Update_Column>;
  where?: InputMaybe<Questionnaires_Bool_Exp>;
};

/** ordering options when selecting data from "questionnaires" */
export type Questionnaires_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  expiration_date?: InputMaybe<Order_By>;
  info_notifications_aggregate?: InputMaybe<Info_Notifications_Aggregate_Order_By>;
  questionnaire_id?: InputMaybe<Order_By>;
  questionnaire_questions_aggregate?: InputMaybe<Questionnaire_Questions_Aggregate_Order_By>;
  resource_path?: InputMaybe<Order_By>;
  resubmit_allowed?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "questionnaires" */
export type Questionnaires_Pk_Columns_Input = {
  questionnaire_id: Scalars['String'];
};

/** select columns of table "questionnaires" */
export enum Questionnaires_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ExpirationDate = 'expiration_date',
  /** column name */
  QuestionnaireId = 'questionnaire_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  ResubmitAllowed = 'resubmit_allowed',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "questionnaires" */
export type Questionnaires_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  expiration_date?: InputMaybe<Scalars['timestamptz']>;
  questionnaire_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  resubmit_allowed?: InputMaybe<Scalars['Boolean']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "questionnaires" */
export enum Questionnaires_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ExpirationDate = 'expiration_date',
  /** column name */
  QuestionnaireId = 'questionnaire_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  ResubmitAllowed = 'resubmit_allowed',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "questions" */
export type Questions = {
  answers?: Maybe<Scalars['_text']>;
  answers_rendered?: Maybe<Scalars['_text']>;
  answers_url?: Maybe<Scalars['_text']>;
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  difficulty_level: Scalars['smallint'];
  explanation?: Maybe<Scalars['String']>;
  explanation_rendered?: Maybe<Scalars['String']>;
  explanation_url?: Maybe<Scalars['String']>;
  explanation_wrong_answer?: Maybe<Scalars['_text']>;
  explanation_wrong_answer_rendered?: Maybe<Scalars['_text']>;
  explanation_wrong_answer_url?: Maybe<Scalars['_text']>;
  is_waiting_for_render?: Maybe<Scalars['Boolean']>;
  master_question_id?: Maybe<Scalars['String']>;
  question: Scalars['String'];
  /** An object relationship */
  questionByMasterQuestionId?: Maybe<Questions>;
  question_id: Scalars['String'];
  question_rendered?: Maybe<Scalars['String']>;
  question_url?: Maybe<Scalars['String']>;
  /** An array relationship */
  questions: Array<Questions>;
  /** An aggregated array relationship */
  questions_aggregate: Questions_Aggregate;
  /** An array relationship */
  quizsets: Array<Quizsets>;
  /** An aggregated array relationship */
  quizsets_aggregate: Quizsets_Aggregate;
  rendering_question?: Maybe<Scalars['Boolean']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "questions" */
export type QuestionsQuestionsArgs = {
  distinct_on?: InputMaybe<Array<Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questions_Order_By>>;
  where?: InputMaybe<Questions_Bool_Exp>;
};


/** columns and relationships of "questions" */
export type QuestionsQuestions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questions_Order_By>>;
  where?: InputMaybe<Questions_Bool_Exp>;
};


/** columns and relationships of "questions" */
export type QuestionsQuizsetsArgs = {
  distinct_on?: InputMaybe<Array<Quizsets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizsets_Order_By>>;
  where?: InputMaybe<Quizsets_Bool_Exp>;
};


/** columns and relationships of "questions" */
export type QuestionsQuizsets_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Quizsets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizsets_Order_By>>;
  where?: InputMaybe<Quizsets_Bool_Exp>;
};

/** aggregated selection of "questions" */
export type Questions_Aggregate = {
  aggregate?: Maybe<Questions_Aggregate_Fields>;
  nodes: Array<Questions>;
};

/** aggregate fields of "questions" */
export type Questions_Aggregate_Fields = {
  avg?: Maybe<Questions_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Questions_Max_Fields>;
  min?: Maybe<Questions_Min_Fields>;
  stddev?: Maybe<Questions_Stddev_Fields>;
  stddev_pop?: Maybe<Questions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Questions_Stddev_Samp_Fields>;
  sum?: Maybe<Questions_Sum_Fields>;
  var_pop?: Maybe<Questions_Var_Pop_Fields>;
  var_samp?: Maybe<Questions_Var_Samp_Fields>;
  variance?: Maybe<Questions_Variance_Fields>;
};


/** aggregate fields of "questions" */
export type Questions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Questions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "questions" */
export type Questions_Aggregate_Order_By = {
  avg?: InputMaybe<Questions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Questions_Max_Order_By>;
  min?: InputMaybe<Questions_Min_Order_By>;
  stddev?: InputMaybe<Questions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Questions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Questions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Questions_Sum_Order_By>;
  var_pop?: InputMaybe<Questions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Questions_Var_Samp_Order_By>;
  variance?: InputMaybe<Questions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "questions" */
export type Questions_Arr_Rel_Insert_Input = {
  data: Array<Questions_Insert_Input>;
  on_conflict?: InputMaybe<Questions_On_Conflict>;
};

/** aggregate avg on columns */
export type Questions_Avg_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "questions" */
export type Questions_Avg_Order_By = {
  difficulty_level?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "questions". All fields are combined with a logical 'AND'. */
export type Questions_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Questions_Bool_Exp>>>;
  _not?: InputMaybe<Questions_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Questions_Bool_Exp>>>;
  answers?: InputMaybe<_Text_Comparison_Exp>;
  answers_rendered?: InputMaybe<_Text_Comparison_Exp>;
  answers_url?: InputMaybe<_Text_Comparison_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  difficulty_level?: InputMaybe<Smallint_Comparison_Exp>;
  explanation?: InputMaybe<String_Comparison_Exp>;
  explanation_rendered?: InputMaybe<String_Comparison_Exp>;
  explanation_url?: InputMaybe<String_Comparison_Exp>;
  explanation_wrong_answer?: InputMaybe<_Text_Comparison_Exp>;
  explanation_wrong_answer_rendered?: InputMaybe<_Text_Comparison_Exp>;
  explanation_wrong_answer_url?: InputMaybe<_Text_Comparison_Exp>;
  is_waiting_for_render?: InputMaybe<Boolean_Comparison_Exp>;
  master_question_id?: InputMaybe<String_Comparison_Exp>;
  question?: InputMaybe<String_Comparison_Exp>;
  questionByMasterQuestionId?: InputMaybe<Questions_Bool_Exp>;
  question_id?: InputMaybe<String_Comparison_Exp>;
  question_rendered?: InputMaybe<String_Comparison_Exp>;
  question_url?: InputMaybe<String_Comparison_Exp>;
  questions?: InputMaybe<Questions_Bool_Exp>;
  quizsets?: InputMaybe<Quizsets_Bool_Exp>;
  rendering_question?: InputMaybe<Boolean_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "questions" */
export enum Questions_Constraint {
  /** unique or primary key constraint */
  QuestionsPk = 'questions_pk'
}

/** input type for incrementing integer column in table "questions" */
export type Questions_Inc_Input = {
  difficulty_level?: InputMaybe<Scalars['smallint']>;
};

/** input type for inserting data into table "questions" */
export type Questions_Insert_Input = {
  answers?: InputMaybe<Scalars['_text']>;
  answers_rendered?: InputMaybe<Scalars['_text']>;
  answers_url?: InputMaybe<Scalars['_text']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  difficulty_level?: InputMaybe<Scalars['smallint']>;
  explanation?: InputMaybe<Scalars['String']>;
  explanation_rendered?: InputMaybe<Scalars['String']>;
  explanation_url?: InputMaybe<Scalars['String']>;
  explanation_wrong_answer?: InputMaybe<Scalars['_text']>;
  explanation_wrong_answer_rendered?: InputMaybe<Scalars['_text']>;
  explanation_wrong_answer_url?: InputMaybe<Scalars['_text']>;
  is_waiting_for_render?: InputMaybe<Scalars['Boolean']>;
  master_question_id?: InputMaybe<Scalars['String']>;
  question?: InputMaybe<Scalars['String']>;
  questionByMasterQuestionId?: InputMaybe<Questions_Obj_Rel_Insert_Input>;
  question_id?: InputMaybe<Scalars['String']>;
  question_rendered?: InputMaybe<Scalars['String']>;
  question_url?: InputMaybe<Scalars['String']>;
  questions?: InputMaybe<Questions_Arr_Rel_Insert_Input>;
  quizsets?: InputMaybe<Quizsets_Arr_Rel_Insert_Input>;
  rendering_question?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Questions_Max_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  difficulty_level?: Maybe<Scalars['smallint']>;
  explanation?: Maybe<Scalars['String']>;
  explanation_rendered?: Maybe<Scalars['String']>;
  explanation_url?: Maybe<Scalars['String']>;
  master_question_id?: Maybe<Scalars['String']>;
  question?: Maybe<Scalars['String']>;
  question_id?: Maybe<Scalars['String']>;
  question_rendered?: Maybe<Scalars['String']>;
  question_url?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "questions" */
export type Questions_Max_Order_By = {
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  difficulty_level?: InputMaybe<Order_By>;
  explanation?: InputMaybe<Order_By>;
  explanation_rendered?: InputMaybe<Order_By>;
  explanation_url?: InputMaybe<Order_By>;
  master_question_id?: InputMaybe<Order_By>;
  question?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  question_rendered?: InputMaybe<Order_By>;
  question_url?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Questions_Min_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  difficulty_level?: Maybe<Scalars['smallint']>;
  explanation?: Maybe<Scalars['String']>;
  explanation_rendered?: Maybe<Scalars['String']>;
  explanation_url?: Maybe<Scalars['String']>;
  master_question_id?: Maybe<Scalars['String']>;
  question?: Maybe<Scalars['String']>;
  question_id?: Maybe<Scalars['String']>;
  question_rendered?: Maybe<Scalars['String']>;
  question_url?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "questions" */
export type Questions_Min_Order_By = {
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  difficulty_level?: InputMaybe<Order_By>;
  explanation?: InputMaybe<Order_By>;
  explanation_rendered?: InputMaybe<Order_By>;
  explanation_url?: InputMaybe<Order_By>;
  master_question_id?: InputMaybe<Order_By>;
  question?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  question_rendered?: InputMaybe<Order_By>;
  question_url?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "questions" */
export type Questions_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Questions>;
};

/** input type for inserting object relation for remote table "questions" */
export type Questions_Obj_Rel_Insert_Input = {
  data: Questions_Insert_Input;
  on_conflict?: InputMaybe<Questions_On_Conflict>;
};

/** on conflict condition type for table "questions" */
export type Questions_On_Conflict = {
  constraint: Questions_Constraint;
  update_columns: Array<Questions_Update_Column>;
  where?: InputMaybe<Questions_Bool_Exp>;
};

/** ordering options when selecting data from "questions" */
export type Questions_Order_By = {
  answers?: InputMaybe<Order_By>;
  answers_rendered?: InputMaybe<Order_By>;
  answers_url?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  difficulty_level?: InputMaybe<Order_By>;
  explanation?: InputMaybe<Order_By>;
  explanation_rendered?: InputMaybe<Order_By>;
  explanation_url?: InputMaybe<Order_By>;
  explanation_wrong_answer?: InputMaybe<Order_By>;
  explanation_wrong_answer_rendered?: InputMaybe<Order_By>;
  explanation_wrong_answer_url?: InputMaybe<Order_By>;
  is_waiting_for_render?: InputMaybe<Order_By>;
  master_question_id?: InputMaybe<Order_By>;
  question?: InputMaybe<Order_By>;
  questionByMasterQuestionId?: InputMaybe<Questions_Order_By>;
  question_id?: InputMaybe<Order_By>;
  question_rendered?: InputMaybe<Order_By>;
  question_url?: InputMaybe<Order_By>;
  questions_aggregate?: InputMaybe<Questions_Aggregate_Order_By>;
  quizsets_aggregate?: InputMaybe<Quizsets_Aggregate_Order_By>;
  rendering_question?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "questions" */
export type Questions_Pk_Columns_Input = {
  question_id: Scalars['String'];
};

/** select columns of table "questions" */
export enum Questions_Select_Column {
  /** column name */
  Answers = 'answers',
  /** column name */
  AnswersRendered = 'answers_rendered',
  /** column name */
  AnswersUrl = 'answers_url',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DifficultyLevel = 'difficulty_level',
  /** column name */
  Explanation = 'explanation',
  /** column name */
  ExplanationRendered = 'explanation_rendered',
  /** column name */
  ExplanationUrl = 'explanation_url',
  /** column name */
  ExplanationWrongAnswer = 'explanation_wrong_answer',
  /** column name */
  ExplanationWrongAnswerRendered = 'explanation_wrong_answer_rendered',
  /** column name */
  ExplanationWrongAnswerUrl = 'explanation_wrong_answer_url',
  /** column name */
  IsWaitingForRender = 'is_waiting_for_render',
  /** column name */
  MasterQuestionId = 'master_question_id',
  /** column name */
  Question = 'question',
  /** column name */
  QuestionId = 'question_id',
  /** column name */
  QuestionRendered = 'question_rendered',
  /** column name */
  QuestionUrl = 'question_url',
  /** column name */
  RenderingQuestion = 'rendering_question',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "questions" */
export type Questions_Set_Input = {
  answers?: InputMaybe<Scalars['_text']>;
  answers_rendered?: InputMaybe<Scalars['_text']>;
  answers_url?: InputMaybe<Scalars['_text']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  difficulty_level?: InputMaybe<Scalars['smallint']>;
  explanation?: InputMaybe<Scalars['String']>;
  explanation_rendered?: InputMaybe<Scalars['String']>;
  explanation_url?: InputMaybe<Scalars['String']>;
  explanation_wrong_answer?: InputMaybe<Scalars['_text']>;
  explanation_wrong_answer_rendered?: InputMaybe<Scalars['_text']>;
  explanation_wrong_answer_url?: InputMaybe<Scalars['_text']>;
  is_waiting_for_render?: InputMaybe<Scalars['Boolean']>;
  master_question_id?: InputMaybe<Scalars['String']>;
  question?: InputMaybe<Scalars['String']>;
  question_id?: InputMaybe<Scalars['String']>;
  question_rendered?: InputMaybe<Scalars['String']>;
  question_url?: InputMaybe<Scalars['String']>;
  rendering_question?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Questions_Stddev_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "questions" */
export type Questions_Stddev_Order_By = {
  difficulty_level?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Questions_Stddev_Pop_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "questions" */
export type Questions_Stddev_Pop_Order_By = {
  difficulty_level?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Questions_Stddev_Samp_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "questions" */
export type Questions_Stddev_Samp_Order_By = {
  difficulty_level?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Questions_Sum_Fields = {
  difficulty_level?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "questions" */
export type Questions_Sum_Order_By = {
  difficulty_level?: InputMaybe<Order_By>;
};

/** update columns of table "questions" */
export enum Questions_Update_Column {
  /** column name */
  Answers = 'answers',
  /** column name */
  AnswersRendered = 'answers_rendered',
  /** column name */
  AnswersUrl = 'answers_url',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DifficultyLevel = 'difficulty_level',
  /** column name */
  Explanation = 'explanation',
  /** column name */
  ExplanationRendered = 'explanation_rendered',
  /** column name */
  ExplanationUrl = 'explanation_url',
  /** column name */
  ExplanationWrongAnswer = 'explanation_wrong_answer',
  /** column name */
  ExplanationWrongAnswerRendered = 'explanation_wrong_answer_rendered',
  /** column name */
  ExplanationWrongAnswerUrl = 'explanation_wrong_answer_url',
  /** column name */
  IsWaitingForRender = 'is_waiting_for_render',
  /** column name */
  MasterQuestionId = 'master_question_id',
  /** column name */
  Question = 'question',
  /** column name */
  QuestionId = 'question_id',
  /** column name */
  QuestionRendered = 'question_rendered',
  /** column name */
  QuestionUrl = 'question_url',
  /** column name */
  RenderingQuestion = 'rendering_question',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Questions_Var_Pop_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "questions" */
export type Questions_Var_Pop_Order_By = {
  difficulty_level?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Questions_Var_Samp_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "questions" */
export type Questions_Var_Samp_Order_By = {
  difficulty_level?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Questions_Variance_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "questions" */
export type Questions_Variance_Order_By = {
  difficulty_level?: InputMaybe<Order_By>;
};

/** columns and relationships of "quiz_sets" */
export type Quiz_Sets = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  learning_objective: Learning_Objectives;
  lo_id: Scalars['String'];
  quiz_external_ids: Scalars['_text'];
  quiz_set_id: Scalars['String'];
  /** An array relationship */
  quiz_sets_quizzes: Array<Quizzes>;
  /** An aggregated array relationship */
  quiz_sets_quizzes_aggregate: Quizzes_Aggregate;
  resource_path: Scalars['String'];
  status: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "quiz_sets" */
export type Quiz_SetsQuiz_Sets_QuizzesArgs = {
  distinct_on?: InputMaybe<Array<Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizzes_Order_By>>;
  where?: InputMaybe<Quizzes_Bool_Exp>;
};


/** columns and relationships of "quiz_sets" */
export type Quiz_SetsQuiz_Sets_Quizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizzes_Order_By>>;
  where?: InputMaybe<Quizzes_Bool_Exp>;
};

/** aggregated selection of "quiz_sets" */
export type Quiz_Sets_Aggregate = {
  aggregate?: Maybe<Quiz_Sets_Aggregate_Fields>;
  nodes: Array<Quiz_Sets>;
};

/** aggregate fields of "quiz_sets" */
export type Quiz_Sets_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Quiz_Sets_Max_Fields>;
  min?: Maybe<Quiz_Sets_Min_Fields>;
};


/** aggregate fields of "quiz_sets" */
export type Quiz_Sets_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Quiz_Sets_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "quiz_sets" */
export type Quiz_Sets_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Quiz_Sets_Max_Order_By>;
  min?: InputMaybe<Quiz_Sets_Min_Order_By>;
};

/** input type for inserting array relation for remote table "quiz_sets" */
export type Quiz_Sets_Arr_Rel_Insert_Input = {
  data: Array<Quiz_Sets_Insert_Input>;
  on_conflict?: InputMaybe<Quiz_Sets_On_Conflict>;
};

/** Boolean expression to filter rows from the table "quiz_sets". All fields are combined with a logical 'AND'. */
export type Quiz_Sets_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Quiz_Sets_Bool_Exp>>>;
  _not?: InputMaybe<Quiz_Sets_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Quiz_Sets_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  learning_objective?: InputMaybe<Learning_Objectives_Bool_Exp>;
  lo_id?: InputMaybe<String_Comparison_Exp>;
  quiz_external_ids?: InputMaybe<_Text_Comparison_Exp>;
  quiz_set_id?: InputMaybe<String_Comparison_Exp>;
  quiz_sets_quizzes?: InputMaybe<Quizzes_Bool_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "quiz_sets" */
export enum Quiz_Sets_Constraint {
  /** unique or primary key constraint */
  QuizSetsApprovedLoIdIdx = 'quiz_sets_approved_lo_id_idx',
  /** unique or primary key constraint */
  QuizSetsPk = 'quiz_sets_pk'
}

/** input type for inserting data into table "quiz_sets" */
export type Quiz_Sets_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  learning_objective?: InputMaybe<Learning_Objectives_Obj_Rel_Insert_Input>;
  lo_id?: InputMaybe<Scalars['String']>;
  quiz_external_ids?: InputMaybe<Scalars['_text']>;
  quiz_set_id?: InputMaybe<Scalars['String']>;
  quiz_sets_quizzes?: InputMaybe<Quizzes_Arr_Rel_Insert_Input>;
  resource_path?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Quiz_Sets_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lo_id?: Maybe<Scalars['String']>;
  quiz_set_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "quiz_sets" */
export type Quiz_Sets_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  lo_id?: InputMaybe<Order_By>;
  quiz_set_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Quiz_Sets_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  lo_id?: Maybe<Scalars['String']>;
  quiz_set_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "quiz_sets" */
export type Quiz_Sets_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  lo_id?: InputMaybe<Order_By>;
  quiz_set_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "quiz_sets" */
export type Quiz_Sets_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Quiz_Sets>;
};

/** input type for inserting object relation for remote table "quiz_sets" */
export type Quiz_Sets_Obj_Rel_Insert_Input = {
  data: Quiz_Sets_Insert_Input;
  on_conflict?: InputMaybe<Quiz_Sets_On_Conflict>;
};

/** on conflict condition type for table "quiz_sets" */
export type Quiz_Sets_On_Conflict = {
  constraint: Quiz_Sets_Constraint;
  update_columns: Array<Quiz_Sets_Update_Column>;
  where?: InputMaybe<Quiz_Sets_Bool_Exp>;
};

/** ordering options when selecting data from "quiz_sets" */
export type Quiz_Sets_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  learning_objective?: InputMaybe<Learning_Objectives_Order_By>;
  lo_id?: InputMaybe<Order_By>;
  quiz_external_ids?: InputMaybe<Order_By>;
  quiz_set_id?: InputMaybe<Order_By>;
  quiz_sets_quizzes_aggregate?: InputMaybe<Quizzes_Aggregate_Order_By>;
  resource_path?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "quiz_sets" */
export type Quiz_Sets_Pk_Columns_Input = {
  quiz_set_id: Scalars['String'];
};

/** select columns of table "quiz_sets" */
export enum Quiz_Sets_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  QuizExternalIds = 'quiz_external_ids',
  /** column name */
  QuizSetId = 'quiz_set_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "quiz_sets" */
export type Quiz_Sets_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  lo_id?: InputMaybe<Scalars['String']>;
  quiz_external_ids?: InputMaybe<Scalars['_text']>;
  quiz_set_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "quiz_sets" */
export enum Quiz_Sets_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  QuizExternalIds = 'quiz_external_ids',
  /** column name */
  QuizSetId = 'quiz_set_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "quizsets" */
export type Quizsets = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  /** An object relationship */
  learning_objective: Learning_Objectives;
  lo_id: Scalars['String'];
  /** An object relationship */
  question: Questions;
  question_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "quizsets" */
export type Quizsets_Aggregate = {
  aggregate?: Maybe<Quizsets_Aggregate_Fields>;
  nodes: Array<Quizsets>;
};

/** aggregate fields of "quizsets" */
export type Quizsets_Aggregate_Fields = {
  avg?: Maybe<Quizsets_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Quizsets_Max_Fields>;
  min?: Maybe<Quizsets_Min_Fields>;
  stddev?: Maybe<Quizsets_Stddev_Fields>;
  stddev_pop?: Maybe<Quizsets_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Quizsets_Stddev_Samp_Fields>;
  sum?: Maybe<Quizsets_Sum_Fields>;
  var_pop?: Maybe<Quizsets_Var_Pop_Fields>;
  var_samp?: Maybe<Quizsets_Var_Samp_Fields>;
  variance?: Maybe<Quizsets_Variance_Fields>;
};


/** aggregate fields of "quizsets" */
export type Quizsets_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Quizsets_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "quizsets" */
export type Quizsets_Aggregate_Order_By = {
  avg?: InputMaybe<Quizsets_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Quizsets_Max_Order_By>;
  min?: InputMaybe<Quizsets_Min_Order_By>;
  stddev?: InputMaybe<Quizsets_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Quizsets_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Quizsets_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Quizsets_Sum_Order_By>;
  var_pop?: InputMaybe<Quizsets_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Quizsets_Var_Samp_Order_By>;
  variance?: InputMaybe<Quizsets_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "quizsets" */
export type Quizsets_Arr_Rel_Insert_Input = {
  data: Array<Quizsets_Insert_Input>;
  on_conflict?: InputMaybe<Quizsets_On_Conflict>;
};

/** aggregate avg on columns */
export type Quizsets_Avg_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "quizsets" */
export type Quizsets_Avg_Order_By = {
  display_order?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "quizsets". All fields are combined with a logical 'AND'. */
export type Quizsets_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Quizsets_Bool_Exp>>>;
  _not?: InputMaybe<Quizsets_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Quizsets_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  display_order?: InputMaybe<Int_Comparison_Exp>;
  learning_objective?: InputMaybe<Learning_Objectives_Bool_Exp>;
  lo_id?: InputMaybe<String_Comparison_Exp>;
  question?: InputMaybe<Questions_Bool_Exp>;
  question_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "quizsets" */
export enum Quizsets_Constraint {
  /** unique or primary key constraint */
  QuizsetsPk = 'quizsets_pk'
}

/** input type for incrementing integer column in table "quizsets" */
export type Quizsets_Inc_Input = {
  display_order?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "quizsets" */
export type Quizsets_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  display_order?: InputMaybe<Scalars['Int']>;
  learning_objective?: InputMaybe<Learning_Objectives_Obj_Rel_Insert_Input>;
  lo_id?: InputMaybe<Scalars['String']>;
  question?: InputMaybe<Questions_Obj_Rel_Insert_Input>;
  question_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Quizsets_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  lo_id?: Maybe<Scalars['String']>;
  question_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "quizsets" */
export type Quizsets_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  lo_id?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Quizsets_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['Int']>;
  lo_id?: Maybe<Scalars['String']>;
  question_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "quizsets" */
export type Quizsets_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  lo_id?: InputMaybe<Order_By>;
  question_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "quizsets" */
export type Quizsets_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Quizsets>;
};

/** input type for inserting object relation for remote table "quizsets" */
export type Quizsets_Obj_Rel_Insert_Input = {
  data: Quizsets_Insert_Input;
  on_conflict?: InputMaybe<Quizsets_On_Conflict>;
};

/** on conflict condition type for table "quizsets" */
export type Quizsets_On_Conflict = {
  constraint: Quizsets_Constraint;
  update_columns: Array<Quizsets_Update_Column>;
  where?: InputMaybe<Quizsets_Bool_Exp>;
};

/** ordering options when selecting data from "quizsets" */
export type Quizsets_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  learning_objective?: InputMaybe<Learning_Objectives_Order_By>;
  lo_id?: InputMaybe<Order_By>;
  question?: InputMaybe<Questions_Order_By>;
  question_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "quizsets" */
export type Quizsets_Pk_Columns_Input = {
  lo_id: Scalars['String'];
  question_id: Scalars['String'];
};

/** select columns of table "quizsets" */
export enum Quizsets_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  QuestionId = 'question_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "quizsets" */
export type Quizsets_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  display_order?: InputMaybe<Scalars['Int']>;
  lo_id?: InputMaybe<Scalars['String']>;
  question_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Quizsets_Stddev_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "quizsets" */
export type Quizsets_Stddev_Order_By = {
  display_order?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Quizsets_Stddev_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "quizsets" */
export type Quizsets_Stddev_Pop_Order_By = {
  display_order?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Quizsets_Stddev_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "quizsets" */
export type Quizsets_Stddev_Samp_Order_By = {
  display_order?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Quizsets_Sum_Fields = {
  display_order?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "quizsets" */
export type Quizsets_Sum_Order_By = {
  display_order?: InputMaybe<Order_By>;
};

/** update columns of table "quizsets" */
export enum Quizsets_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  QuestionId = 'question_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Quizsets_Var_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "quizsets" */
export type Quizsets_Var_Pop_Order_By = {
  display_order?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Quizsets_Var_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "quizsets" */
export type Quizsets_Var_Samp_Order_By = {
  display_order?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Quizsets_Variance_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "quizsets" */
export type Quizsets_Variance_Order_By = {
  display_order?: InputMaybe<Order_By>;
};

/** columns and relationships of "quizzes" */
export type Quizzes = {
  approved_by: Scalars['String'];
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  created_by: Scalars['String'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  difficulty_level?: Maybe<Scalars['Int']>;
  explanation: Scalars['jsonb'];
  external_id: Scalars['String'];
  kind: Scalars['String'];
  lo_ids?: Maybe<Scalars['_text']>;
  options: Scalars['jsonb'];
  question: Scalars['jsonb'];
  quiz_id: Scalars['String'];
  /** An array relationship */
  quiz_sets: Array<Quiz_Sets>;
  /** An aggregated array relationship */
  quiz_sets_aggregate: Quiz_Sets_Aggregate;
  resource_path: Scalars['String'];
  school_id: Scalars['Int'];
  status: Scalars['String'];
  tagged_los?: Maybe<Scalars['_text']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "quizzes" */
export type QuizzesExplanationArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "quizzes" */
export type QuizzesOptionsArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "quizzes" */
export type QuizzesQuestionArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "quizzes" */
export type QuizzesQuiz_SetsArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Sets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Sets_Order_By>>;
  where?: InputMaybe<Quiz_Sets_Bool_Exp>;
};


/** columns and relationships of "quizzes" */
export type QuizzesQuiz_Sets_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Sets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Sets_Order_By>>;
  where?: InputMaybe<Quiz_Sets_Bool_Exp>;
};

/** aggregated selection of "quizzes" */
export type Quizzes_Aggregate = {
  aggregate?: Maybe<Quizzes_Aggregate_Fields>;
  nodes: Array<Quizzes>;
};

/** aggregate fields of "quizzes" */
export type Quizzes_Aggregate_Fields = {
  avg?: Maybe<Quizzes_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Quizzes_Max_Fields>;
  min?: Maybe<Quizzes_Min_Fields>;
  stddev?: Maybe<Quizzes_Stddev_Fields>;
  stddev_pop?: Maybe<Quizzes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Quizzes_Stddev_Samp_Fields>;
  sum?: Maybe<Quizzes_Sum_Fields>;
  var_pop?: Maybe<Quizzes_Var_Pop_Fields>;
  var_samp?: Maybe<Quizzes_Var_Samp_Fields>;
  variance?: Maybe<Quizzes_Variance_Fields>;
};


/** aggregate fields of "quizzes" */
export type Quizzes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Quizzes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "quizzes" */
export type Quizzes_Aggregate_Order_By = {
  avg?: InputMaybe<Quizzes_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Quizzes_Max_Order_By>;
  min?: InputMaybe<Quizzes_Min_Order_By>;
  stddev?: InputMaybe<Quizzes_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Quizzes_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Quizzes_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Quizzes_Sum_Order_By>;
  var_pop?: InputMaybe<Quizzes_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Quizzes_Var_Samp_Order_By>;
  variance?: InputMaybe<Quizzes_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Quizzes_Append_Input = {
  explanation?: InputMaybe<Scalars['jsonb']>;
  options?: InputMaybe<Scalars['jsonb']>;
  question?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "quizzes" */
export type Quizzes_Arr_Rel_Insert_Input = {
  data: Array<Quizzes_Insert_Input>;
  on_conflict?: InputMaybe<Quizzes_On_Conflict>;
};

/** aggregate avg on columns */
export type Quizzes_Avg_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "quizzes" */
export type Quizzes_Avg_Order_By = {
  difficulty_level?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "quizzes". All fields are combined with a logical 'AND'. */
export type Quizzes_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Quizzes_Bool_Exp>>>;
  _not?: InputMaybe<Quizzes_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Quizzes_Bool_Exp>>>;
  approved_by?: InputMaybe<String_Comparison_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  created_by?: InputMaybe<String_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  difficulty_level?: InputMaybe<Int_Comparison_Exp>;
  explanation?: InputMaybe<Jsonb_Comparison_Exp>;
  external_id?: InputMaybe<String_Comparison_Exp>;
  kind?: InputMaybe<String_Comparison_Exp>;
  lo_ids?: InputMaybe<_Text_Comparison_Exp>;
  options?: InputMaybe<Jsonb_Comparison_Exp>;
  question?: InputMaybe<Jsonb_Comparison_Exp>;
  quiz_id?: InputMaybe<String_Comparison_Exp>;
  quiz_sets?: InputMaybe<Quiz_Sets_Bool_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school_id?: InputMaybe<Int_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  tagged_los?: InputMaybe<_Text_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "quizzes" */
export enum Quizzes_Constraint {
  /** unique or primary key constraint */
  QuizsPk = 'quizs_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Quizzes_Delete_At_Path_Input = {
  explanation?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  options?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  question?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Quizzes_Delete_Elem_Input = {
  explanation?: InputMaybe<Scalars['Int']>;
  options?: InputMaybe<Scalars['Int']>;
  question?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Quizzes_Delete_Key_Input = {
  explanation?: InputMaybe<Scalars['String']>;
  options?: InputMaybe<Scalars['String']>;
  question?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "quizzes" */
export type Quizzes_Inc_Input = {
  difficulty_level?: InputMaybe<Scalars['Int']>;
  school_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "quizzes" */
export type Quizzes_Insert_Input = {
  approved_by?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by?: InputMaybe<Scalars['String']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  difficulty_level?: InputMaybe<Scalars['Int']>;
  explanation?: InputMaybe<Scalars['jsonb']>;
  external_id?: InputMaybe<Scalars['String']>;
  kind?: InputMaybe<Scalars['String']>;
  lo_ids?: InputMaybe<Scalars['_text']>;
  options?: InputMaybe<Scalars['jsonb']>;
  question?: InputMaybe<Scalars['jsonb']>;
  quiz_id?: InputMaybe<Scalars['String']>;
  quiz_sets?: InputMaybe<Quiz_Sets_Arr_Rel_Insert_Input>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<Scalars['String']>;
  tagged_los?: InputMaybe<Scalars['_text']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Quizzes_Max_Fields = {
  approved_by?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  difficulty_level?: Maybe<Scalars['Int']>;
  external_id?: Maybe<Scalars['String']>;
  kind?: Maybe<Scalars['String']>;
  quiz_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "quizzes" */
export type Quizzes_Max_Order_By = {
  approved_by?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  difficulty_level?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  kind?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Quizzes_Min_Fields = {
  approved_by?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  difficulty_level?: Maybe<Scalars['Int']>;
  external_id?: Maybe<Scalars['String']>;
  kind?: Maybe<Scalars['String']>;
  quiz_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "quizzes" */
export type Quizzes_Min_Order_By = {
  approved_by?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  difficulty_level?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  kind?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "quizzes" */
export type Quizzes_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Quizzes>;
};

/** input type for inserting object relation for remote table "quizzes" */
export type Quizzes_Obj_Rel_Insert_Input = {
  data: Quizzes_Insert_Input;
  on_conflict?: InputMaybe<Quizzes_On_Conflict>;
};

/** on conflict condition type for table "quizzes" */
export type Quizzes_On_Conflict = {
  constraint: Quizzes_Constraint;
  update_columns: Array<Quizzes_Update_Column>;
  where?: InputMaybe<Quizzes_Bool_Exp>;
};

/** ordering options when selecting data from "quizzes" */
export type Quizzes_Order_By = {
  approved_by?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  difficulty_level?: InputMaybe<Order_By>;
  explanation?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  kind?: InputMaybe<Order_By>;
  lo_ids?: InputMaybe<Order_By>;
  options?: InputMaybe<Order_By>;
  question?: InputMaybe<Order_By>;
  quiz_id?: InputMaybe<Order_By>;
  quiz_sets_aggregate?: InputMaybe<Quiz_Sets_Aggregate_Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tagged_los?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "quizzes" */
export type Quizzes_Pk_Columns_Input = {
  quiz_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Quizzes_Prepend_Input = {
  explanation?: InputMaybe<Scalars['jsonb']>;
  options?: InputMaybe<Scalars['jsonb']>;
  question?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "quizzes" */
export enum Quizzes_Select_Column {
  /** column name */
  ApprovedBy = 'approved_by',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreatedBy = 'created_by',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DifficultyLevel = 'difficulty_level',
  /** column name */
  Explanation = 'explanation',
  /** column name */
  ExternalId = 'external_id',
  /** column name */
  Kind = 'kind',
  /** column name */
  LoIds = 'lo_ids',
  /** column name */
  Options = 'options',
  /** column name */
  Question = 'question',
  /** column name */
  QuizId = 'quiz_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Status = 'status',
  /** column name */
  TaggedLos = 'tagged_los',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "quizzes" */
export type Quizzes_Set_Input = {
  approved_by?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  created_by?: InputMaybe<Scalars['String']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  difficulty_level?: InputMaybe<Scalars['Int']>;
  explanation?: InputMaybe<Scalars['jsonb']>;
  external_id?: InputMaybe<Scalars['String']>;
  kind?: InputMaybe<Scalars['String']>;
  lo_ids?: InputMaybe<Scalars['_text']>;
  options?: InputMaybe<Scalars['jsonb']>;
  question?: InputMaybe<Scalars['jsonb']>;
  quiz_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<Scalars['String']>;
  tagged_los?: InputMaybe<Scalars['_text']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Quizzes_Stddev_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "quizzes" */
export type Quizzes_Stddev_Order_By = {
  difficulty_level?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Quizzes_Stddev_Pop_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "quizzes" */
export type Quizzes_Stddev_Pop_Order_By = {
  difficulty_level?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Quizzes_Stddev_Samp_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "quizzes" */
export type Quizzes_Stddev_Samp_Order_By = {
  difficulty_level?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Quizzes_Sum_Fields = {
  difficulty_level?: Maybe<Scalars['Int']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "quizzes" */
export type Quizzes_Sum_Order_By = {
  difficulty_level?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** update columns of table "quizzes" */
export enum Quizzes_Update_Column {
  /** column name */
  ApprovedBy = 'approved_by',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreatedBy = 'created_by',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DifficultyLevel = 'difficulty_level',
  /** column name */
  Explanation = 'explanation',
  /** column name */
  ExternalId = 'external_id',
  /** column name */
  Kind = 'kind',
  /** column name */
  LoIds = 'lo_ids',
  /** column name */
  Options = 'options',
  /** column name */
  Question = 'question',
  /** column name */
  QuizId = 'quiz_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Status = 'status',
  /** column name */
  TaggedLos = 'tagged_los',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Quizzes_Var_Pop_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "quizzes" */
export type Quizzes_Var_Pop_Order_By = {
  difficulty_level?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Quizzes_Var_Samp_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "quizzes" */
export type Quizzes_Var_Samp_Order_By = {
  difficulty_level?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Quizzes_Variance_Fields = {
  difficulty_level?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "quizzes" */
export type Quizzes_Variance_Order_By = {
  difficulty_level?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "role" */
export type Role = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  granted_roles: Array<Granted_Role>;
  /** An aggregated array relationship */
  granted_roles_aggregate: Granted_Role_Aggregate;
  is_system?: Maybe<Scalars['Boolean']>;
  resource_path: Scalars['String'];
  role_id: Scalars['String'];
  role_name: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "role" */
export type RoleGranted_RolesArgs = {
  distinct_on?: InputMaybe<Array<Granted_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Granted_Role_Order_By>>;
  where?: InputMaybe<Granted_Role_Bool_Exp>;
};


/** columns and relationships of "role" */
export type RoleGranted_Roles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Granted_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Granted_Role_Order_By>>;
  where?: InputMaybe<Granted_Role_Bool_Exp>;
};

/** aggregated selection of "role" */
export type Role_Aggregate = {
  aggregate?: Maybe<Role_Aggregate_Fields>;
  nodes: Array<Role>;
};

/** aggregate fields of "role" */
export type Role_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Role_Max_Fields>;
  min?: Maybe<Role_Min_Fields>;
};


/** aggregate fields of "role" */
export type Role_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Role_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "role" */
export type Role_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Role_Max_Order_By>;
  min?: InputMaybe<Role_Min_Order_By>;
};

/** input type for inserting array relation for remote table "role" */
export type Role_Arr_Rel_Insert_Input = {
  data: Array<Role_Insert_Input>;
  on_conflict?: InputMaybe<Role_On_Conflict>;
};

/** Boolean expression to filter rows from the table "role". All fields are combined with a logical 'AND'. */
export type Role_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Role_Bool_Exp>>>;
  _not?: InputMaybe<Role_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Role_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  granted_roles?: InputMaybe<Granted_Role_Bool_Exp>;
  is_system?: InputMaybe<Boolean_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  role_id?: InputMaybe<String_Comparison_Exp>;
  role_name?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "role" */
export enum Role_Constraint {
  /** unique or primary key constraint */
  PkRole = 'pk__role'
}

/** input type for inserting data into table "role" */
export type Role_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  granted_roles?: InputMaybe<Granted_Role_Arr_Rel_Insert_Input>;
  is_system?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  role_id?: InputMaybe<Scalars['String']>;
  role_name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Role_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  role_id?: Maybe<Scalars['String']>;
  role_name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "role" */
export type Role_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  role_name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Role_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  role_id?: Maybe<Scalars['String']>;
  role_name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "role" */
export type Role_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  role_name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "role" */
export type Role_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Role>;
};

/** input type for inserting object relation for remote table "role" */
export type Role_Obj_Rel_Insert_Input = {
  data: Role_Insert_Input;
  on_conflict?: InputMaybe<Role_On_Conflict>;
};

/** on conflict condition type for table "role" */
export type Role_On_Conflict = {
  constraint: Role_Constraint;
  update_columns: Array<Role_Update_Column>;
  where?: InputMaybe<Role_Bool_Exp>;
};

/** ordering options when selecting data from "role" */
export type Role_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  granted_roles_aggregate?: InputMaybe<Granted_Role_Aggregate_Order_By>;
  is_system?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  role_name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "role" */
export type Role_Pk_Columns_Input = {
  role_id: Scalars['String'];
};

/** select columns of table "role" */
export enum Role_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsSystem = 'is_system',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  RoleId = 'role_id',
  /** column name */
  RoleName = 'role_name',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "role" */
export type Role_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_system?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  role_id?: InputMaybe<Scalars['String']>;
  role_name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "role" */
export enum Role_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsSystem = 'is_system',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  RoleId = 'role_id',
  /** column name */
  RoleName = 'role_name',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "scheduler" */
export type Scheduler = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date: Scalars['timestamptz'];
  freq?: Maybe<Scalars['frequency']>;
  resource_path: Scalars['String'];
  scheduler_id: Scalars['String'];
  start_date: Scalars['timestamptz'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "scheduler" */
export type Scheduler_Aggregate = {
  aggregate?: Maybe<Scheduler_Aggregate_Fields>;
  nodes: Array<Scheduler>;
};

/** aggregate fields of "scheduler" */
export type Scheduler_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Scheduler_Max_Fields>;
  min?: Maybe<Scheduler_Min_Fields>;
};


/** aggregate fields of "scheduler" */
export type Scheduler_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Scheduler_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "scheduler" */
export type Scheduler_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Scheduler_Max_Order_By>;
  min?: InputMaybe<Scheduler_Min_Order_By>;
};

/** input type for inserting array relation for remote table "scheduler" */
export type Scheduler_Arr_Rel_Insert_Input = {
  data: Array<Scheduler_Insert_Input>;
  on_conflict?: InputMaybe<Scheduler_On_Conflict>;
};

/** Boolean expression to filter rows from the table "scheduler". All fields are combined with a logical 'AND'. */
export type Scheduler_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Scheduler_Bool_Exp>>>;
  _not?: InputMaybe<Scheduler_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Scheduler_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  end_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  freq?: InputMaybe<Frequency_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  scheduler_id?: InputMaybe<String_Comparison_Exp>;
  start_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "scheduler" */
export enum Scheduler_Constraint {
  /** unique or primary key constraint */
  PkScheduler = 'pk__scheduler'
}

/** input type for inserting data into table "scheduler" */
export type Scheduler_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  end_date?: InputMaybe<Scalars['timestamptz']>;
  freq?: InputMaybe<Scalars['frequency']>;
  resource_path?: InputMaybe<Scalars['String']>;
  scheduler_id?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['timestamptz']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Scheduler_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduler_id?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "scheduler" */
export type Scheduler_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  scheduler_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Scheduler_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_date?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  scheduler_id?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "scheduler" */
export type Scheduler_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  scheduler_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "scheduler" */
export type Scheduler_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Scheduler>;
};

/** input type for inserting object relation for remote table "scheduler" */
export type Scheduler_Obj_Rel_Insert_Input = {
  data: Scheduler_Insert_Input;
  on_conflict?: InputMaybe<Scheduler_On_Conflict>;
};

/** on conflict condition type for table "scheduler" */
export type Scheduler_On_Conflict = {
  constraint: Scheduler_Constraint;
  update_columns: Array<Scheduler_Update_Column>;
  where?: InputMaybe<Scheduler_Bool_Exp>;
};

/** ordering options when selecting data from "scheduler" */
export type Scheduler_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  freq?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  scheduler_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "scheduler" */
export type Scheduler_Pk_Columns_Input = {
  scheduler_id: Scalars['String'];
};

/** select columns of table "scheduler" */
export enum Scheduler_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  Freq = 'freq',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchedulerId = 'scheduler_id',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "scheduler" */
export type Scheduler_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  end_date?: InputMaybe<Scalars['timestamptz']>;
  freq?: InputMaybe<Scalars['frequency']>;
  resource_path?: InputMaybe<Scalars['String']>;
  scheduler_id?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['timestamptz']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "scheduler" */
export enum Scheduler_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  Freq = 'freq',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchedulerId = 'scheduler_id',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "school_admins" */
export type School_Admins = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path: Scalars['String'];
  school_admin_id: Scalars['String'];
  school_id: Scalars['Int'];
  /** An object relationship */
  schools?: Maybe<Schools>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  users?: Maybe<Users>;
};

/** aggregated selection of "school_admins" */
export type School_Admins_Aggregate = {
  aggregate?: Maybe<School_Admins_Aggregate_Fields>;
  nodes: Array<School_Admins>;
};

/** aggregate fields of "school_admins" */
export type School_Admins_Aggregate_Fields = {
  avg?: Maybe<School_Admins_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<School_Admins_Max_Fields>;
  min?: Maybe<School_Admins_Min_Fields>;
  stddev?: Maybe<School_Admins_Stddev_Fields>;
  stddev_pop?: Maybe<School_Admins_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<School_Admins_Stddev_Samp_Fields>;
  sum?: Maybe<School_Admins_Sum_Fields>;
  var_pop?: Maybe<School_Admins_Var_Pop_Fields>;
  var_samp?: Maybe<School_Admins_Var_Samp_Fields>;
  variance?: Maybe<School_Admins_Variance_Fields>;
};


/** aggregate fields of "school_admins" */
export type School_Admins_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<School_Admins_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "school_admins" */
export type School_Admins_Aggregate_Order_By = {
  avg?: InputMaybe<School_Admins_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<School_Admins_Max_Order_By>;
  min?: InputMaybe<School_Admins_Min_Order_By>;
  stddev?: InputMaybe<School_Admins_Stddev_Order_By>;
  stddev_pop?: InputMaybe<School_Admins_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<School_Admins_Stddev_Samp_Order_By>;
  sum?: InputMaybe<School_Admins_Sum_Order_By>;
  var_pop?: InputMaybe<School_Admins_Var_Pop_Order_By>;
  var_samp?: InputMaybe<School_Admins_Var_Samp_Order_By>;
  variance?: InputMaybe<School_Admins_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "school_admins" */
export type School_Admins_Arr_Rel_Insert_Input = {
  data: Array<School_Admins_Insert_Input>;
  on_conflict?: InputMaybe<School_Admins_On_Conflict>;
};

/** aggregate avg on columns */
export type School_Admins_Avg_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "school_admins" */
export type School_Admins_Avg_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "school_admins". All fields are combined with a logical 'AND'. */
export type School_Admins_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<School_Admins_Bool_Exp>>>;
  _not?: InputMaybe<School_Admins_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<School_Admins_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school_admin_id?: InputMaybe<String_Comparison_Exp>;
  school_id?: InputMaybe<Int_Comparison_Exp>;
  schools?: InputMaybe<Schools_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  users?: InputMaybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "school_admins" */
export enum School_Admins_Constraint {
  /** unique or primary key constraint */
  SchoolAdminsPk = 'school_admins_pk'
}

/** input type for incrementing integer column in table "school_admins" */
export type School_Admins_Inc_Input = {
  school_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "school_admins" */
export type School_Admins_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_admin_id?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['Int']>;
  schools?: InputMaybe<Schools_Obj_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  users?: InputMaybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type School_Admins_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_admin_id?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "school_admins" */
export type School_Admins_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_admin_id?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type School_Admins_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_admin_id?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "school_admins" */
export type School_Admins_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_admin_id?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "school_admins" */
export type School_Admins_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<School_Admins>;
};

/** input type for inserting object relation for remote table "school_admins" */
export type School_Admins_Obj_Rel_Insert_Input = {
  data: School_Admins_Insert_Input;
  on_conflict?: InputMaybe<School_Admins_On_Conflict>;
};

/** on conflict condition type for table "school_admins" */
export type School_Admins_On_Conflict = {
  constraint: School_Admins_Constraint;
  update_columns: Array<School_Admins_Update_Column>;
  where?: InputMaybe<School_Admins_Bool_Exp>;
};

/** ordering options when selecting data from "school_admins" */
export type School_Admins_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_admin_id?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  schools?: InputMaybe<Schools_Order_By>;
  updated_at?: InputMaybe<Order_By>;
  users?: InputMaybe<Users_Order_By>;
};

/** primary key columns input for table: "school_admins" */
export type School_Admins_Pk_Columns_Input = {
  school_admin_id: Scalars['String'];
};

/** select columns of table "school_admins" */
export enum School_Admins_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolAdminId = 'school_admin_id',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "school_admins" */
export type School_Admins_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_admin_id?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type School_Admins_Stddev_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "school_admins" */
export type School_Admins_Stddev_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type School_Admins_Stddev_Pop_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "school_admins" */
export type School_Admins_Stddev_Pop_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type School_Admins_Stddev_Samp_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "school_admins" */
export type School_Admins_Stddev_Samp_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type School_Admins_Sum_Fields = {
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "school_admins" */
export type School_Admins_Sum_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** update columns of table "school_admins" */
export enum School_Admins_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolAdminId = 'school_admin_id',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type School_Admins_Var_Pop_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "school_admins" */
export type School_Admins_Var_Pop_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type School_Admins_Var_Samp_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "school_admins" */
export type School_Admins_Var_Samp_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type School_Admins_Variance_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "school_admins" */
export type School_Admins_Variance_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "school_configs" */
export type School_Configs = {
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  plan_duration?: Maybe<Scalars['smallint']>;
  plan_expired_at?: Maybe<Scalars['timestamptz']>;
  plan_id: Scalars['String'];
  privileges?: Maybe<Scalars['_text']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  school: Schools;
  school_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "school_configs" */
export type School_Configs_Aggregate = {
  aggregate?: Maybe<School_Configs_Aggregate_Fields>;
  nodes: Array<School_Configs>;
};

/** aggregate fields of "school_configs" */
export type School_Configs_Aggregate_Fields = {
  avg?: Maybe<School_Configs_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<School_Configs_Max_Fields>;
  min?: Maybe<School_Configs_Min_Fields>;
  stddev?: Maybe<School_Configs_Stddev_Fields>;
  stddev_pop?: Maybe<School_Configs_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<School_Configs_Stddev_Samp_Fields>;
  sum?: Maybe<School_Configs_Sum_Fields>;
  var_pop?: Maybe<School_Configs_Var_Pop_Fields>;
  var_samp?: Maybe<School_Configs_Var_Samp_Fields>;
  variance?: Maybe<School_Configs_Variance_Fields>;
};


/** aggregate fields of "school_configs" */
export type School_Configs_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<School_Configs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "school_configs" */
export type School_Configs_Aggregate_Order_By = {
  avg?: InputMaybe<School_Configs_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<School_Configs_Max_Order_By>;
  min?: InputMaybe<School_Configs_Min_Order_By>;
  stddev?: InputMaybe<School_Configs_Stddev_Order_By>;
  stddev_pop?: InputMaybe<School_Configs_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<School_Configs_Stddev_Samp_Order_By>;
  sum?: InputMaybe<School_Configs_Sum_Order_By>;
  var_pop?: InputMaybe<School_Configs_Var_Pop_Order_By>;
  var_samp?: InputMaybe<School_Configs_Var_Samp_Order_By>;
  variance?: InputMaybe<School_Configs_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "school_configs" */
export type School_Configs_Arr_Rel_Insert_Input = {
  data: Array<School_Configs_Insert_Input>;
  on_conflict?: InputMaybe<School_Configs_On_Conflict>;
};

/** aggregate avg on columns */
export type School_Configs_Avg_Fields = {
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "school_configs" */
export type School_Configs_Avg_Order_By = {
  plan_duration?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "school_configs". All fields are combined with a logical 'AND'. */
export type School_Configs_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<School_Configs_Bool_Exp>>>;
  _not?: InputMaybe<School_Configs_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<School_Configs_Bool_Exp>>>;
  country?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  plan_duration?: InputMaybe<Smallint_Comparison_Exp>;
  plan_expired_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  plan_id?: InputMaybe<String_Comparison_Exp>;
  privileges?: InputMaybe<_Text_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school?: InputMaybe<Schools_Bool_Exp>;
  school_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "school_configs" */
export enum School_Configs_Constraint {
  /** unique or primary key constraint */
  SchoolConfigsPk = 'school_configs_pk'
}

/** input type for incrementing integer column in table "school_configs" */
export type School_Configs_Inc_Input = {
  plan_duration?: InputMaybe<Scalars['smallint']>;
  school_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "school_configs" */
export type School_Configs_Insert_Input = {
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  plan_duration?: InputMaybe<Scalars['smallint']>;
  plan_expired_at?: InputMaybe<Scalars['timestamptz']>;
  plan_id?: InputMaybe<Scalars['String']>;
  privileges?: InputMaybe<Scalars['_text']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school?: InputMaybe<Schools_Obj_Rel_Insert_Input>;
  school_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type School_Configs_Max_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  plan_duration?: Maybe<Scalars['smallint']>;
  plan_expired_at?: Maybe<Scalars['timestamptz']>;
  plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "school_configs" */
export type School_Configs_Max_Order_By = {
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  plan_duration?: InputMaybe<Order_By>;
  plan_expired_at?: InputMaybe<Order_By>;
  plan_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type School_Configs_Min_Fields = {
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  plan_duration?: Maybe<Scalars['smallint']>;
  plan_expired_at?: Maybe<Scalars['timestamptz']>;
  plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "school_configs" */
export type School_Configs_Min_Order_By = {
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  plan_duration?: InputMaybe<Order_By>;
  plan_expired_at?: InputMaybe<Order_By>;
  plan_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "school_configs" */
export type School_Configs_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<School_Configs>;
};

/** input type for inserting object relation for remote table "school_configs" */
export type School_Configs_Obj_Rel_Insert_Input = {
  data: School_Configs_Insert_Input;
  on_conflict?: InputMaybe<School_Configs_On_Conflict>;
};

/** on conflict condition type for table "school_configs" */
export type School_Configs_On_Conflict = {
  constraint: School_Configs_Constraint;
  update_columns: Array<School_Configs_Update_Column>;
  where?: InputMaybe<School_Configs_Bool_Exp>;
};

/** ordering options when selecting data from "school_configs" */
export type School_Configs_Order_By = {
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  plan_duration?: InputMaybe<Order_By>;
  plan_expired_at?: InputMaybe<Order_By>;
  plan_id?: InputMaybe<Order_By>;
  privileges?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school?: InputMaybe<Schools_Order_By>;
  school_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "school_configs" */
export type School_Configs_Pk_Columns_Input = {
  school_id: Scalars['Int'];
};

/** select columns of table "school_configs" */
export enum School_Configs_Select_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  PlanDuration = 'plan_duration',
  /** column name */
  PlanExpiredAt = 'plan_expired_at',
  /** column name */
  PlanId = 'plan_id',
  /** column name */
  Privileges = 'privileges',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "school_configs" */
export type School_Configs_Set_Input = {
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  plan_duration?: InputMaybe<Scalars['smallint']>;
  plan_expired_at?: InputMaybe<Scalars['timestamptz']>;
  plan_id?: InputMaybe<Scalars['String']>;
  privileges?: InputMaybe<Scalars['_text']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type School_Configs_Stddev_Fields = {
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "school_configs" */
export type School_Configs_Stddev_Order_By = {
  plan_duration?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type School_Configs_Stddev_Pop_Fields = {
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "school_configs" */
export type School_Configs_Stddev_Pop_Order_By = {
  plan_duration?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type School_Configs_Stddev_Samp_Fields = {
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "school_configs" */
export type School_Configs_Stddev_Samp_Order_By = {
  plan_duration?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type School_Configs_Sum_Fields = {
  plan_duration?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "school_configs" */
export type School_Configs_Sum_Order_By = {
  plan_duration?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** update columns of table "school_configs" */
export enum School_Configs_Update_Column {
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  PlanDuration = 'plan_duration',
  /** column name */
  PlanExpiredAt = 'plan_expired_at',
  /** column name */
  PlanId = 'plan_id',
  /** column name */
  Privileges = 'privileges',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type School_Configs_Var_Pop_Fields = {
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "school_configs" */
export type School_Configs_Var_Pop_Order_By = {
  plan_duration?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type School_Configs_Var_Samp_Fields = {
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "school_configs" */
export type School_Configs_Var_Samp_Order_By = {
  plan_duration?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type School_Configs_Variance_Fields = {
  plan_duration?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "school_configs" */
export type School_Configs_Variance_Order_By = {
  plan_duration?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "school_course" */
export type School_Course = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_archived: Scalars['Boolean'];
  resource_path: Scalars['String'];
  school_course_id: Scalars['String'];
  school_course_name: Scalars['String'];
  school_course_name_phonetic?: Maybe<Scalars['String']>;
  school_course_partner_id: Scalars['String'];
  school_id: Scalars['String'];
  /** An object relationship */
  school_info: School_Info;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "school_course" */
export type School_Course_Aggregate = {
  aggregate?: Maybe<School_Course_Aggregate_Fields>;
  nodes: Array<School_Course>;
};

/** aggregate fields of "school_course" */
export type School_Course_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<School_Course_Max_Fields>;
  min?: Maybe<School_Course_Min_Fields>;
};


/** aggregate fields of "school_course" */
export type School_Course_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<School_Course_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "school_course" */
export type School_Course_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<School_Course_Max_Order_By>;
  min?: InputMaybe<School_Course_Min_Order_By>;
};

/** input type for inserting array relation for remote table "school_course" */
export type School_Course_Arr_Rel_Insert_Input = {
  data: Array<School_Course_Insert_Input>;
  on_conflict?: InputMaybe<School_Course_On_Conflict>;
};

/** Boolean expression to filter rows from the table "school_course". All fields are combined with a logical 'AND'. */
export type School_Course_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<School_Course_Bool_Exp>>>;
  _not?: InputMaybe<School_Course_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<School_Course_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  is_archived?: InputMaybe<Boolean_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school_course_id?: InputMaybe<String_Comparison_Exp>;
  school_course_name?: InputMaybe<String_Comparison_Exp>;
  school_course_name_phonetic?: InputMaybe<String_Comparison_Exp>;
  school_course_partner_id?: InputMaybe<String_Comparison_Exp>;
  school_id?: InputMaybe<String_Comparison_Exp>;
  school_info?: InputMaybe<School_Info_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "school_course" */
export enum School_Course_Constraint {
  /** unique or primary key constraint */
  SchoolCoursePk = 'school_course__pk',
  /** unique or primary key constraint */
  SchoolCourseSchoolCoursePartnerIdUnique = 'school_course__school_course_partner_id__unique'
}

/** input type for inserting data into table "school_course" */
export type School_Course_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_archived?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_course_id?: InputMaybe<Scalars['String']>;
  school_course_name?: InputMaybe<Scalars['String']>;
  school_course_name_phonetic?: InputMaybe<Scalars['String']>;
  school_course_partner_id?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['String']>;
  school_info?: InputMaybe<School_Info_Obj_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type School_Course_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_course_id?: Maybe<Scalars['String']>;
  school_course_name?: Maybe<Scalars['String']>;
  school_course_name_phonetic?: Maybe<Scalars['String']>;
  school_course_partner_id?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "school_course" */
export type School_Course_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_course_id?: InputMaybe<Order_By>;
  school_course_name?: InputMaybe<Order_By>;
  school_course_name_phonetic?: InputMaybe<Order_By>;
  school_course_partner_id?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type School_Course_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_course_id?: Maybe<Scalars['String']>;
  school_course_name?: Maybe<Scalars['String']>;
  school_course_name_phonetic?: Maybe<Scalars['String']>;
  school_course_partner_id?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "school_course" */
export type School_Course_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_course_id?: InputMaybe<Order_By>;
  school_course_name?: InputMaybe<Order_By>;
  school_course_name_phonetic?: InputMaybe<Order_By>;
  school_course_partner_id?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "school_course" */
export type School_Course_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<School_Course>;
};

/** input type for inserting object relation for remote table "school_course" */
export type School_Course_Obj_Rel_Insert_Input = {
  data: School_Course_Insert_Input;
  on_conflict?: InputMaybe<School_Course_On_Conflict>;
};

/** on conflict condition type for table "school_course" */
export type School_Course_On_Conflict = {
  constraint: School_Course_Constraint;
  update_columns: Array<School_Course_Update_Column>;
  where?: InputMaybe<School_Course_Bool_Exp>;
};

/** ordering options when selecting data from "school_course" */
export type School_Course_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  is_archived?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_course_id?: InputMaybe<Order_By>;
  school_course_name?: InputMaybe<Order_By>;
  school_course_name_phonetic?: InputMaybe<Order_By>;
  school_course_partner_id?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  school_info?: InputMaybe<School_Info_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "school_course" */
export type School_Course_Pk_Columns_Input = {
  school_course_id: Scalars['String'];
};

/** select columns of table "school_course" */
export enum School_Course_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolCourseId = 'school_course_id',
  /** column name */
  SchoolCourseName = 'school_course_name',
  /** column name */
  SchoolCourseNamePhonetic = 'school_course_name_phonetic',
  /** column name */
  SchoolCoursePartnerId = 'school_course_partner_id',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "school_course" */
export type School_Course_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_archived?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_course_id?: InputMaybe<Scalars['String']>;
  school_course_name?: InputMaybe<Scalars['String']>;
  school_course_name_phonetic?: InputMaybe<Scalars['String']>;
  school_course_partner_id?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "school_course" */
export enum School_Course_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolCourseId = 'school_course_id',
  /** column name */
  SchoolCourseName = 'school_course_name',
  /** column name */
  SchoolCourseNamePhonetic = 'school_course_name_phonetic',
  /** column name */
  SchoolCoursePartnerId = 'school_course_partner_id',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "school_info" */
export type School_Info = {
  address?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_archived: Scalars['Boolean'];
  resource_path: Scalars['String'];
  school_id: Scalars['String'];
  /** An object relationship */
  school_level: School_Level;
  school_level_id: Scalars['String'];
  school_name: Scalars['String'];
  school_name_phonetic?: Maybe<Scalars['String']>;
  school_partner_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "school_info" */
export type School_Info_Aggregate = {
  aggregate?: Maybe<School_Info_Aggregate_Fields>;
  nodes: Array<School_Info>;
};

/** aggregate fields of "school_info" */
export type School_Info_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<School_Info_Max_Fields>;
  min?: Maybe<School_Info_Min_Fields>;
};


/** aggregate fields of "school_info" */
export type School_Info_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<School_Info_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "school_info" */
export type School_Info_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<School_Info_Max_Order_By>;
  min?: InputMaybe<School_Info_Min_Order_By>;
};

/** input type for inserting array relation for remote table "school_info" */
export type School_Info_Arr_Rel_Insert_Input = {
  data: Array<School_Info_Insert_Input>;
  on_conflict?: InputMaybe<School_Info_On_Conflict>;
};

/** Boolean expression to filter rows from the table "school_info". All fields are combined with a logical 'AND'. */
export type School_Info_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<School_Info_Bool_Exp>>>;
  _not?: InputMaybe<School_Info_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<School_Info_Bool_Exp>>>;
  address?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  is_archived?: InputMaybe<Boolean_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school_id?: InputMaybe<String_Comparison_Exp>;
  school_level?: InputMaybe<School_Level_Bool_Exp>;
  school_level_id?: InputMaybe<String_Comparison_Exp>;
  school_name?: InputMaybe<String_Comparison_Exp>;
  school_name_phonetic?: InputMaybe<String_Comparison_Exp>;
  school_partner_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "school_info" */
export enum School_Info_Constraint {
  /** unique or primary key constraint */
  SchoolInfoSchoolPartnerIdUnique = 'school_info__school_partner_id__unique',
  /** unique or primary key constraint */
  SchoolInfoPk = 'school_info_pk'
}

/** input type for inserting data into table "school_info" */
export type School_Info_Insert_Input = {
  address?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_archived?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['String']>;
  school_level?: InputMaybe<School_Level_Obj_Rel_Insert_Input>;
  school_level_id?: InputMaybe<Scalars['String']>;
  school_name?: InputMaybe<Scalars['String']>;
  school_name_phonetic?: InputMaybe<Scalars['String']>;
  school_partner_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type School_Info_Max_Fields = {
  address?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['String']>;
  school_level_id?: Maybe<Scalars['String']>;
  school_name?: Maybe<Scalars['String']>;
  school_name_phonetic?: Maybe<Scalars['String']>;
  school_partner_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "school_info" */
export type School_Info_Max_Order_By = {
  address?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  school_level_id?: InputMaybe<Order_By>;
  school_name?: InputMaybe<Order_By>;
  school_name_phonetic?: InputMaybe<Order_By>;
  school_partner_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type School_Info_Min_Fields = {
  address?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['String']>;
  school_level_id?: Maybe<Scalars['String']>;
  school_name?: Maybe<Scalars['String']>;
  school_name_phonetic?: Maybe<Scalars['String']>;
  school_partner_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "school_info" */
export type School_Info_Min_Order_By = {
  address?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  school_level_id?: InputMaybe<Order_By>;
  school_name?: InputMaybe<Order_By>;
  school_name_phonetic?: InputMaybe<Order_By>;
  school_partner_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "school_info" */
export type School_Info_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<School_Info>;
};

/** input type for inserting object relation for remote table "school_info" */
export type School_Info_Obj_Rel_Insert_Input = {
  data: School_Info_Insert_Input;
  on_conflict?: InputMaybe<School_Info_On_Conflict>;
};

/** on conflict condition type for table "school_info" */
export type School_Info_On_Conflict = {
  constraint: School_Info_Constraint;
  update_columns: Array<School_Info_Update_Column>;
  where?: InputMaybe<School_Info_Bool_Exp>;
};

/** ordering options when selecting data from "school_info" */
export type School_Info_Order_By = {
  address?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  is_archived?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  school_level?: InputMaybe<School_Level_Order_By>;
  school_level_id?: InputMaybe<Order_By>;
  school_name?: InputMaybe<Order_By>;
  school_name_phonetic?: InputMaybe<Order_By>;
  school_partner_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "school_info" */
export type School_Info_Pk_Columns_Input = {
  school_id: Scalars['String'];
};

/** select columns of table "school_info" */
export enum School_Info_Select_Column {
  /** column name */
  Address = 'address',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  SchoolLevelId = 'school_level_id',
  /** column name */
  SchoolName = 'school_name',
  /** column name */
  SchoolNamePhonetic = 'school_name_phonetic',
  /** column name */
  SchoolPartnerId = 'school_partner_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "school_info" */
export type School_Info_Set_Input = {
  address?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_archived?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['String']>;
  school_level_id?: InputMaybe<Scalars['String']>;
  school_name?: InputMaybe<Scalars['String']>;
  school_name_phonetic?: InputMaybe<Scalars['String']>;
  school_partner_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "school_info" */
export enum School_Info_Update_Column {
  /** column name */
  Address = 'address',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  SchoolLevelId = 'school_level_id',
  /** column name */
  SchoolName = 'school_name',
  /** column name */
  SchoolNamePhonetic = 'school_name_phonetic',
  /** column name */
  SchoolPartnerId = 'school_partner_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "school_level" */
export type School_Level = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_archived: Scalars['Boolean'];
  resource_path: Scalars['String'];
  /** An array relationship */
  school_infos: Array<School_Info>;
  /** An aggregated array relationship */
  school_infos_aggregate: School_Info_Aggregate;
  school_level_id: Scalars['String'];
  school_level_name: Scalars['String'];
  sequence: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "school_level" */
export type School_LevelSchool_InfosArgs = {
  distinct_on?: InputMaybe<Array<School_Info_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Info_Order_By>>;
  where?: InputMaybe<School_Info_Bool_Exp>;
};


/** columns and relationships of "school_level" */
export type School_LevelSchool_Infos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<School_Info_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Info_Order_By>>;
  where?: InputMaybe<School_Info_Bool_Exp>;
};

/** aggregated selection of "school_level" */
export type School_Level_Aggregate = {
  aggregate?: Maybe<School_Level_Aggregate_Fields>;
  nodes: Array<School_Level>;
};

/** aggregate fields of "school_level" */
export type School_Level_Aggregate_Fields = {
  avg?: Maybe<School_Level_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<School_Level_Max_Fields>;
  min?: Maybe<School_Level_Min_Fields>;
  stddev?: Maybe<School_Level_Stddev_Fields>;
  stddev_pop?: Maybe<School_Level_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<School_Level_Stddev_Samp_Fields>;
  sum?: Maybe<School_Level_Sum_Fields>;
  var_pop?: Maybe<School_Level_Var_Pop_Fields>;
  var_samp?: Maybe<School_Level_Var_Samp_Fields>;
  variance?: Maybe<School_Level_Variance_Fields>;
};


/** aggregate fields of "school_level" */
export type School_Level_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<School_Level_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "school_level" */
export type School_Level_Aggregate_Order_By = {
  avg?: InputMaybe<School_Level_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<School_Level_Max_Order_By>;
  min?: InputMaybe<School_Level_Min_Order_By>;
  stddev?: InputMaybe<School_Level_Stddev_Order_By>;
  stddev_pop?: InputMaybe<School_Level_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<School_Level_Stddev_Samp_Order_By>;
  sum?: InputMaybe<School_Level_Sum_Order_By>;
  var_pop?: InputMaybe<School_Level_Var_Pop_Order_By>;
  var_samp?: InputMaybe<School_Level_Var_Samp_Order_By>;
  variance?: InputMaybe<School_Level_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "school_level" */
export type School_Level_Arr_Rel_Insert_Input = {
  data: Array<School_Level_Insert_Input>;
  on_conflict?: InputMaybe<School_Level_On_Conflict>;
};

/** aggregate avg on columns */
export type School_Level_Avg_Fields = {
  sequence?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "school_level" */
export type School_Level_Avg_Order_By = {
  sequence?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "school_level". All fields are combined with a logical 'AND'. */
export type School_Level_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<School_Level_Bool_Exp>>>;
  _not?: InputMaybe<School_Level_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<School_Level_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  is_archived?: InputMaybe<Boolean_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school_infos?: InputMaybe<School_Info_Bool_Exp>;
  school_level_id?: InputMaybe<String_Comparison_Exp>;
  school_level_name?: InputMaybe<String_Comparison_Exp>;
  sequence?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "school_level" */
export enum School_Level_Constraint {
  /** unique or primary key constraint */
  SchoolLevelPk = 'school_level__pk',
  /** unique or primary key constraint */
  SchoolLevelSequenceUnique = 'school_level__sequence__unique'
}

/** columns and relationships of "school_level_grade" */
export type School_Level_Grade = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade_id: Scalars['String'];
  resource_path: Scalars['String'];
  school_level_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "school_level_grade" */
export type School_Level_Grade_Aggregate = {
  aggregate?: Maybe<School_Level_Grade_Aggregate_Fields>;
  nodes: Array<School_Level_Grade>;
};

/** aggregate fields of "school_level_grade" */
export type School_Level_Grade_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<School_Level_Grade_Max_Fields>;
  min?: Maybe<School_Level_Grade_Min_Fields>;
};


/** aggregate fields of "school_level_grade" */
export type School_Level_Grade_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<School_Level_Grade_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "school_level_grade" */
export type School_Level_Grade_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<School_Level_Grade_Max_Order_By>;
  min?: InputMaybe<School_Level_Grade_Min_Order_By>;
};

/** input type for inserting array relation for remote table "school_level_grade" */
export type School_Level_Grade_Arr_Rel_Insert_Input = {
  data: Array<School_Level_Grade_Insert_Input>;
  on_conflict?: InputMaybe<School_Level_Grade_On_Conflict>;
};

/** Boolean expression to filter rows from the table "school_level_grade". All fields are combined with a logical 'AND'. */
export type School_Level_Grade_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<School_Level_Grade_Bool_Exp>>>;
  _not?: InputMaybe<School_Level_Grade_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<School_Level_Grade_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  grade_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school_level_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "school_level_grade" */
export enum School_Level_Grade_Constraint {
  /** unique or primary key constraint */
  SchoolLevelGradePk = 'school_level_grade__pk'
}

/** input type for inserting data into table "school_level_grade" */
export type School_Level_Grade_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  grade_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_level_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type School_Level_Grade_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_level_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "school_level_grade" */
export type School_Level_Grade_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  grade_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_level_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type School_Level_Grade_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  grade_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_level_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "school_level_grade" */
export type School_Level_Grade_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  grade_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_level_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "school_level_grade" */
export type School_Level_Grade_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<School_Level_Grade>;
};

/** input type for inserting object relation for remote table "school_level_grade" */
export type School_Level_Grade_Obj_Rel_Insert_Input = {
  data: School_Level_Grade_Insert_Input;
  on_conflict?: InputMaybe<School_Level_Grade_On_Conflict>;
};

/** on conflict condition type for table "school_level_grade" */
export type School_Level_Grade_On_Conflict = {
  constraint: School_Level_Grade_Constraint;
  update_columns: Array<School_Level_Grade_Update_Column>;
  where?: InputMaybe<School_Level_Grade_Bool_Exp>;
};

/** ordering options when selecting data from "school_level_grade" */
export type School_Level_Grade_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  grade_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_level_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "school_level_grade" */
export type School_Level_Grade_Pk_Columns_Input = {
  grade_id: Scalars['String'];
  school_level_id: Scalars['String'];
};

/** select columns of table "school_level_grade" */
export enum School_Level_Grade_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  GradeId = 'grade_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolLevelId = 'school_level_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "school_level_grade" */
export type School_Level_Grade_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  grade_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_level_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "school_level_grade" */
export enum School_Level_Grade_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  GradeId = 'grade_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolLevelId = 'school_level_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for incrementing integer column in table "school_level" */
export type School_Level_Inc_Input = {
  sequence?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "school_level" */
export type School_Level_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_archived?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_infos?: InputMaybe<School_Info_Arr_Rel_Insert_Input>;
  school_level_id?: InputMaybe<Scalars['String']>;
  school_level_name?: InputMaybe<Scalars['String']>;
  sequence?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type School_Level_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_level_id?: Maybe<Scalars['String']>;
  school_level_name?: Maybe<Scalars['String']>;
  sequence?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "school_level" */
export type School_Level_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_level_id?: InputMaybe<Order_By>;
  school_level_name?: InputMaybe<Order_By>;
  sequence?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type School_Level_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_level_id?: Maybe<Scalars['String']>;
  school_level_name?: Maybe<Scalars['String']>;
  sequence?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "school_level" */
export type School_Level_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_level_id?: InputMaybe<Order_By>;
  school_level_name?: InputMaybe<Order_By>;
  sequence?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "school_level" */
export type School_Level_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<School_Level>;
};

/** input type for inserting object relation for remote table "school_level" */
export type School_Level_Obj_Rel_Insert_Input = {
  data: School_Level_Insert_Input;
  on_conflict?: InputMaybe<School_Level_On_Conflict>;
};

/** on conflict condition type for table "school_level" */
export type School_Level_On_Conflict = {
  constraint: School_Level_Constraint;
  update_columns: Array<School_Level_Update_Column>;
  where?: InputMaybe<School_Level_Bool_Exp>;
};

/** ordering options when selecting data from "school_level" */
export type School_Level_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  is_archived?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_infos_aggregate?: InputMaybe<School_Info_Aggregate_Order_By>;
  school_level_id?: InputMaybe<Order_By>;
  school_level_name?: InputMaybe<Order_By>;
  sequence?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "school_level" */
export type School_Level_Pk_Columns_Input = {
  school_level_id: Scalars['String'];
};

/** select columns of table "school_level" */
export enum School_Level_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolLevelId = 'school_level_id',
  /** column name */
  SchoolLevelName = 'school_level_name',
  /** column name */
  Sequence = 'sequence',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "school_level" */
export type School_Level_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_archived?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_level_id?: InputMaybe<Scalars['String']>;
  school_level_name?: InputMaybe<Scalars['String']>;
  sequence?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type School_Level_Stddev_Fields = {
  sequence?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "school_level" */
export type School_Level_Stddev_Order_By = {
  sequence?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type School_Level_Stddev_Pop_Fields = {
  sequence?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "school_level" */
export type School_Level_Stddev_Pop_Order_By = {
  sequence?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type School_Level_Stddev_Samp_Fields = {
  sequence?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "school_level" */
export type School_Level_Stddev_Samp_Order_By = {
  sequence?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type School_Level_Sum_Fields = {
  sequence?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "school_level" */
export type School_Level_Sum_Order_By = {
  sequence?: InputMaybe<Order_By>;
};

/** update columns of table "school_level" */
export enum School_Level_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolLevelId = 'school_level_id',
  /** column name */
  SchoolLevelName = 'school_level_name',
  /** column name */
  Sequence = 'sequence',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type School_Level_Var_Pop_Fields = {
  sequence?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "school_level" */
export type School_Level_Var_Pop_Order_By = {
  sequence?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type School_Level_Var_Samp_Fields = {
  sequence?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "school_level" */
export type School_Level_Var_Samp_Order_By = {
  sequence?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type School_Level_Variance_Fields = {
  sequence?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "school_level" */
export type School_Level_Variance_Order_By = {
  sequence?: InputMaybe<Order_By>;
};

/** columns and relationships of "schools" */
export type Schools = {
  /** An array relationship */
  books: Array<Books>;
  /** An aggregated array relationship */
  books_aggregate: Books_Aggregate;
  /** An array relationship */
  chapters: Array<Chapters>;
  /** An aggregated array relationship */
  chapters_aggregate: Chapters_Aggregate;
  /** An object relationship */
  city: Cities;
  city_id: Scalars['Int'];
  /** An array relationship */
  classes: Array<Classes>;
  /** An aggregated array relationship */
  classes_aggregate: Classes_Aggregate;
  country: Scalars['String'];
  /** An array relationship */
  courses: Array<Courses>;
  /** An aggregated array relationship */
  courses_aggregate: Courses_Aggregate;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  district: Districts;
  district_id: Scalars['Int'];
  /** An array relationship */
  info_notifications: Array<Info_Notifications>;
  /** An aggregated array relationship */
  info_notifications_aggregate: Info_Notifications_Aggregate;
  is_merge?: Maybe<Scalars['Boolean']>;
  is_system_school: Scalars['Boolean'];
  /** An array relationship */
  learning_objectives: Array<Learning_Objectives>;
  /** An aggregated array relationship */
  learning_objectives_aggregate: Learning_Objectives_Aggregate;
  name: Scalars['String'];
  /** An array relationship */
  partner_form_configs: Array<Partner_Form_Configs>;
  /** An aggregated array relationship */
  partner_form_configs_aggregate: Partner_Form_Configs_Aggregate;
  phone_number?: Maybe<Scalars['String']>;
  point?: Maybe<Scalars['point']>;
  resource_path?: Maybe<Scalars['String']>;
  /** An array relationship */
  school_configs: Array<School_Configs>;
  /** An aggregated array relationship */
  school_configs_aggregate: School_Configs_Aggregate;
  school_id: Scalars['Int'];
  /** An array relationship */
  students: Array<Students>;
  /** An aggregated array relationship */
  students_aggregate: Students_Aggregate;
  /** An array relationship */
  topics: Array<Topics>;
  /** An aggregated array relationship */
  topics_aggregate: Topics_Aggregate;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "schools" */
export type SchoolsBooksArgs = {
  distinct_on?: InputMaybe<Array<Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Books_Order_By>>;
  where?: InputMaybe<Books_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsBooks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Books_Order_By>>;
  where?: InputMaybe<Books_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsChaptersArgs = {
  distinct_on?: InputMaybe<Array<Chapters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Chapters_Order_By>>;
  where?: InputMaybe<Chapters_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsChapters_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Chapters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Chapters_Order_By>>;
  where?: InputMaybe<Chapters_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsClassesArgs = {
  distinct_on?: InputMaybe<Array<Classes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Classes_Order_By>>;
  where?: InputMaybe<Classes_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsClasses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Classes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Classes_Order_By>>;
  where?: InputMaybe<Classes_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsCoursesArgs = {
  distinct_on?: InputMaybe<Array<Courses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Order_By>>;
  where?: InputMaybe<Courses_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsCourses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Courses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Order_By>>;
  where?: InputMaybe<Courses_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsInfo_NotificationsArgs = {
  distinct_on?: InputMaybe<Array<Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notifications_Order_By>>;
  where?: InputMaybe<Info_Notifications_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsInfo_Notifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notifications_Order_By>>;
  where?: InputMaybe<Info_Notifications_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsLearning_ObjectivesArgs = {
  distinct_on?: InputMaybe<Array<Learning_Objectives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Learning_Objectives_Order_By>>;
  where?: InputMaybe<Learning_Objectives_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsLearning_Objectives_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Learning_Objectives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Learning_Objectives_Order_By>>;
  where?: InputMaybe<Learning_Objectives_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsPartner_Form_ConfigsArgs = {
  distinct_on?: InputMaybe<Array<Partner_Form_Configs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Form_Configs_Order_By>>;
  where?: InputMaybe<Partner_Form_Configs_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsPartner_Form_Configs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Partner_Form_Configs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Form_Configs_Order_By>>;
  where?: InputMaybe<Partner_Form_Configs_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsSchool_ConfigsArgs = {
  distinct_on?: InputMaybe<Array<School_Configs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Configs_Order_By>>;
  where?: InputMaybe<School_Configs_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsSchool_Configs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<School_Configs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Configs_Order_By>>;
  where?: InputMaybe<School_Configs_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsStudentsArgs = {
  distinct_on?: InputMaybe<Array<Students_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Students_Order_By>>;
  where?: InputMaybe<Students_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsStudents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Students_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Students_Order_By>>;
  where?: InputMaybe<Students_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsTopicsArgs = {
  distinct_on?: InputMaybe<Array<Topics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Topics_Order_By>>;
  where?: InputMaybe<Topics_Bool_Exp>;
};


/** columns and relationships of "schools" */
export type SchoolsTopics_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Topics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Topics_Order_By>>;
  where?: InputMaybe<Topics_Bool_Exp>;
};

/** aggregated selection of "schools" */
export type Schools_Aggregate = {
  aggregate?: Maybe<Schools_Aggregate_Fields>;
  nodes: Array<Schools>;
};

/** aggregate fields of "schools" */
export type Schools_Aggregate_Fields = {
  avg?: Maybe<Schools_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Schools_Max_Fields>;
  min?: Maybe<Schools_Min_Fields>;
  stddev?: Maybe<Schools_Stddev_Fields>;
  stddev_pop?: Maybe<Schools_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Schools_Stddev_Samp_Fields>;
  sum?: Maybe<Schools_Sum_Fields>;
  var_pop?: Maybe<Schools_Var_Pop_Fields>;
  var_samp?: Maybe<Schools_Var_Samp_Fields>;
  variance?: Maybe<Schools_Variance_Fields>;
};


/** aggregate fields of "schools" */
export type Schools_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Schools_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "schools" */
export type Schools_Aggregate_Order_By = {
  avg?: InputMaybe<Schools_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Schools_Max_Order_By>;
  min?: InputMaybe<Schools_Min_Order_By>;
  stddev?: InputMaybe<Schools_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Schools_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Schools_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Schools_Sum_Order_By>;
  var_pop?: InputMaybe<Schools_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Schools_Var_Samp_Order_By>;
  variance?: InputMaybe<Schools_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "schools" */
export type Schools_Arr_Rel_Insert_Input = {
  data: Array<Schools_Insert_Input>;
  on_conflict?: InputMaybe<Schools_On_Conflict>;
};

/** aggregate avg on columns */
export type Schools_Avg_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "schools" */
export type Schools_Avg_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "schools". All fields are combined with a logical 'AND'. */
export type Schools_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Schools_Bool_Exp>>>;
  _not?: InputMaybe<Schools_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Schools_Bool_Exp>>>;
  books?: InputMaybe<Books_Bool_Exp>;
  chapters?: InputMaybe<Chapters_Bool_Exp>;
  city?: InputMaybe<Cities_Bool_Exp>;
  city_id?: InputMaybe<Int_Comparison_Exp>;
  classes?: InputMaybe<Classes_Bool_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  courses?: InputMaybe<Courses_Bool_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  district?: InputMaybe<Districts_Bool_Exp>;
  district_id?: InputMaybe<Int_Comparison_Exp>;
  info_notifications?: InputMaybe<Info_Notifications_Bool_Exp>;
  is_merge?: InputMaybe<Boolean_Comparison_Exp>;
  is_system_school?: InputMaybe<Boolean_Comparison_Exp>;
  learning_objectives?: InputMaybe<Learning_Objectives_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  partner_form_configs?: InputMaybe<Partner_Form_Configs_Bool_Exp>;
  phone_number?: InputMaybe<String_Comparison_Exp>;
  point?: InputMaybe<Point_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school_configs?: InputMaybe<School_Configs_Bool_Exp>;
  school_id?: InputMaybe<Int_Comparison_Exp>;
  students?: InputMaybe<Students_Bool_Exp>;
  topics?: InputMaybe<Topics_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "schools" */
export enum Schools_Constraint {
  /** unique or primary key constraint */
  SchoolPk = 'school_pk',
  /** unique or primary key constraint */
  SchoolUn = 'school_un'
}

/** input type for incrementing integer column in table "schools" */
export type Schools_Inc_Input = {
  city_id?: InputMaybe<Scalars['Int']>;
  district_id?: InputMaybe<Scalars['Int']>;
  school_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "schools" */
export type Schools_Insert_Input = {
  books?: InputMaybe<Books_Arr_Rel_Insert_Input>;
  chapters?: InputMaybe<Chapters_Arr_Rel_Insert_Input>;
  city?: InputMaybe<Cities_Obj_Rel_Insert_Input>;
  city_id?: InputMaybe<Scalars['Int']>;
  classes?: InputMaybe<Classes_Arr_Rel_Insert_Input>;
  country?: InputMaybe<Scalars['String']>;
  courses?: InputMaybe<Courses_Arr_Rel_Insert_Input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  district?: InputMaybe<Districts_Obj_Rel_Insert_Input>;
  district_id?: InputMaybe<Scalars['Int']>;
  info_notifications?: InputMaybe<Info_Notifications_Arr_Rel_Insert_Input>;
  is_merge?: InputMaybe<Scalars['Boolean']>;
  is_system_school?: InputMaybe<Scalars['Boolean']>;
  learning_objectives?: InputMaybe<Learning_Objectives_Arr_Rel_Insert_Input>;
  name?: InputMaybe<Scalars['String']>;
  partner_form_configs?: InputMaybe<Partner_Form_Configs_Arr_Rel_Insert_Input>;
  phone_number?: InputMaybe<Scalars['String']>;
  point?: InputMaybe<Scalars['point']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_configs?: InputMaybe<School_Configs_Arr_Rel_Insert_Input>;
  school_id?: InputMaybe<Scalars['Int']>;
  students?: InputMaybe<Students_Arr_Rel_Insert_Input>;
  topics?: InputMaybe<Topics_Arr_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Schools_Max_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  district_id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "schools" */
export type Schools_Max_Order_By = {
  city_id?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  phone_number?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Schools_Min_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  district_id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "schools" */
export type Schools_Min_Order_By = {
  city_id?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  phone_number?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "schools" */
export type Schools_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Schools>;
};

/** input type for inserting object relation for remote table "schools" */
export type Schools_Obj_Rel_Insert_Input = {
  data: Schools_Insert_Input;
  on_conflict?: InputMaybe<Schools_On_Conflict>;
};

/** on conflict condition type for table "schools" */
export type Schools_On_Conflict = {
  constraint: Schools_Constraint;
  update_columns: Array<Schools_Update_Column>;
  where?: InputMaybe<Schools_Bool_Exp>;
};

/** ordering options when selecting data from "schools" */
export type Schools_Order_By = {
  books_aggregate?: InputMaybe<Books_Aggregate_Order_By>;
  chapters_aggregate?: InputMaybe<Chapters_Aggregate_Order_By>;
  city?: InputMaybe<Cities_Order_By>;
  city_id?: InputMaybe<Order_By>;
  classes_aggregate?: InputMaybe<Classes_Aggregate_Order_By>;
  country?: InputMaybe<Order_By>;
  courses_aggregate?: InputMaybe<Courses_Aggregate_Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  district?: InputMaybe<Districts_Order_By>;
  district_id?: InputMaybe<Order_By>;
  info_notifications_aggregate?: InputMaybe<Info_Notifications_Aggregate_Order_By>;
  is_merge?: InputMaybe<Order_By>;
  is_system_school?: InputMaybe<Order_By>;
  learning_objectives_aggregate?: InputMaybe<Learning_Objectives_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  partner_form_configs_aggregate?: InputMaybe<Partner_Form_Configs_Aggregate_Order_By>;
  phone_number?: InputMaybe<Order_By>;
  point?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_configs_aggregate?: InputMaybe<School_Configs_Aggregate_Order_By>;
  school_id?: InputMaybe<Order_By>;
  students_aggregate?: InputMaybe<Students_Aggregate_Order_By>;
  topics_aggregate?: InputMaybe<Topics_Aggregate_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "schools" */
export type Schools_Pk_Columns_Input = {
  school_id: Scalars['Int'];
};

/** select columns of table "schools" */
export enum Schools_Select_Column {
  /** column name */
  CityId = 'city_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DistrictId = 'district_id',
  /** column name */
  IsMerge = 'is_merge',
  /** column name */
  IsSystemSchool = 'is_system_school',
  /** column name */
  Name = 'name',
  /** column name */
  PhoneNumber = 'phone_number',
  /** column name */
  Point = 'point',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "schools" */
export type Schools_Set_Input = {
  city_id?: InputMaybe<Scalars['Int']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  district_id?: InputMaybe<Scalars['Int']>;
  is_merge?: InputMaybe<Scalars['Boolean']>;
  is_system_school?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  phone_number?: InputMaybe<Scalars['String']>;
  point?: InputMaybe<Scalars['point']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Schools_Stddev_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "schools" */
export type Schools_Stddev_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Schools_Stddev_Pop_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "schools" */
export type Schools_Stddev_Pop_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Schools_Stddev_Samp_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "schools" */
export type Schools_Stddev_Samp_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Schools_Sum_Fields = {
  city_id?: Maybe<Scalars['Int']>;
  district_id?: Maybe<Scalars['Int']>;
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "schools" */
export type Schools_Sum_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** update columns of table "schools" */
export enum Schools_Update_Column {
  /** column name */
  CityId = 'city_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DistrictId = 'district_id',
  /** column name */
  IsMerge = 'is_merge',
  /** column name */
  IsSystemSchool = 'is_system_school',
  /** column name */
  Name = 'name',
  /** column name */
  PhoneNumber = 'phone_number',
  /** column name */
  Point = 'point',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Schools_Var_Pop_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "schools" */
export type Schools_Var_Pop_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Schools_Var_Samp_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "schools" */
export type Schools_Var_Samp_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Schools_Variance_Fields = {
  city_id?: Maybe<Scalars['Float']>;
  district_id?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "schools" */
export type Schools_Variance_Order_By = {
  city_id?: InputMaybe<Order_By>;
  district_id?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
};

export type Search_Courses_By_Name_Args = {
  search_limit?: InputMaybe<Scalars['Int']>;
  search_name?: InputMaybe<Scalars['String']>;
  search_offset?: InputMaybe<Scalars['Int']>;
};

/** expression to compare columns of type smallint. All fields are combined with logical 'AND'. */
export type Smallint_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['smallint']>;
  _gt?: InputMaybe<Scalars['smallint']>;
  _gte?: InputMaybe<Scalars['smallint']>;
  _in?: InputMaybe<Array<Scalars['smallint']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['smallint']>;
  _lte?: InputMaybe<Scalars['smallint']>;
  _neq?: InputMaybe<Scalars['smallint']>;
  _nin?: InputMaybe<Array<Scalars['smallint']>>;
};

/** columns and relationships of "staff" */
export type Staff = {
  auto_create_timesheet?: Maybe<Scalars['Boolean']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path: Scalars['String'];
  staff_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: Users;
};

/** aggregated selection of "staff" */
export type Staff_Aggregate = {
  aggregate?: Maybe<Staff_Aggregate_Fields>;
  nodes: Array<Staff>;
};

/** aggregate fields of "staff" */
export type Staff_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Staff_Max_Fields>;
  min?: Maybe<Staff_Min_Fields>;
};


/** aggregate fields of "staff" */
export type Staff_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Staff_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "staff" */
export type Staff_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Staff_Max_Order_By>;
  min?: InputMaybe<Staff_Min_Order_By>;
};

/** input type for inserting array relation for remote table "staff" */
export type Staff_Arr_Rel_Insert_Input = {
  data: Array<Staff_Insert_Input>;
  on_conflict?: InputMaybe<Staff_On_Conflict>;
};

/** Boolean expression to filter rows from the table "staff". All fields are combined with a logical 'AND'. */
export type Staff_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Staff_Bool_Exp>>>;
  _not?: InputMaybe<Staff_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Staff_Bool_Exp>>>;
  auto_create_timesheet?: InputMaybe<Boolean_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  staff_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "staff" */
export enum Staff_Constraint {
  /** unique or primary key constraint */
  PkStaff = 'pk__staff'
}

/** input type for inserting data into table "staff" */
export type Staff_Insert_Input = {
  auto_create_timesheet?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  staff_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Staff_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  staff_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "staff" */
export type Staff_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  staff_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Staff_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  staff_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "staff" */
export type Staff_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  staff_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "staff" */
export type Staff_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Staff>;
};

/** input type for inserting object relation for remote table "staff" */
export type Staff_Obj_Rel_Insert_Input = {
  data: Staff_Insert_Input;
  on_conflict?: InputMaybe<Staff_On_Conflict>;
};

/** on conflict condition type for table "staff" */
export type Staff_On_Conflict = {
  constraint: Staff_Constraint;
  update_columns: Array<Staff_Update_Column>;
  where?: InputMaybe<Staff_Bool_Exp>;
};

/** ordering options when selecting data from "staff" */
export type Staff_Order_By = {
  auto_create_timesheet?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  staff_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
};

/** primary key columns input for table: "staff" */
export type Staff_Pk_Columns_Input = {
  staff_id: Scalars['String'];
};

/** select columns of table "staff" */
export enum Staff_Select_Column {
  /** column name */
  AutoCreateTimesheet = 'auto_create_timesheet',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StaffId = 'staff_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "staff" */
export type Staff_Set_Input = {
  auto_create_timesheet?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  staff_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "staff" */
export enum Staff_Update_Column {
  /** column name */
  AutoCreateTimesheet = 'auto_create_timesheet',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StaffId = 'staff_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "student_entryexit_records" */
export type Student_Entryexit_Records = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  entry_at: Scalars['timestamptz'];
  entryexit_id: Scalars['Int'];
  exit_at?: Maybe<Scalars['timestamptz']>;
  resource_path: Scalars['String'];
  student_id: Scalars['String'];
  /** An object relationship */
  students: Students;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "student_entryexit_records" */
export type Student_Entryexit_Records_Aggregate = {
  aggregate?: Maybe<Student_Entryexit_Records_Aggregate_Fields>;
  nodes: Array<Student_Entryexit_Records>;
};

/** aggregate fields of "student_entryexit_records" */
export type Student_Entryexit_Records_Aggregate_Fields = {
  avg?: Maybe<Student_Entryexit_Records_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Student_Entryexit_Records_Max_Fields>;
  min?: Maybe<Student_Entryexit_Records_Min_Fields>;
  stddev?: Maybe<Student_Entryexit_Records_Stddev_Fields>;
  stddev_pop?: Maybe<Student_Entryexit_Records_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Student_Entryexit_Records_Stddev_Samp_Fields>;
  sum?: Maybe<Student_Entryexit_Records_Sum_Fields>;
  var_pop?: Maybe<Student_Entryexit_Records_Var_Pop_Fields>;
  var_samp?: Maybe<Student_Entryexit_Records_Var_Samp_Fields>;
  variance?: Maybe<Student_Entryexit_Records_Variance_Fields>;
};


/** aggregate fields of "student_entryexit_records" */
export type Student_Entryexit_Records_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Student_Entryexit_Records_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "student_entryexit_records" */
export type Student_Entryexit_Records_Aggregate_Order_By = {
  avg?: InputMaybe<Student_Entryexit_Records_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Student_Entryexit_Records_Max_Order_By>;
  min?: InputMaybe<Student_Entryexit_Records_Min_Order_By>;
  stddev?: InputMaybe<Student_Entryexit_Records_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Student_Entryexit_Records_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Student_Entryexit_Records_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Student_Entryexit_Records_Sum_Order_By>;
  var_pop?: InputMaybe<Student_Entryexit_Records_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Student_Entryexit_Records_Var_Samp_Order_By>;
  variance?: InputMaybe<Student_Entryexit_Records_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "student_entryexit_records" */
export type Student_Entryexit_Records_Arr_Rel_Insert_Input = {
  data: Array<Student_Entryexit_Records_Insert_Input>;
  on_conflict?: InputMaybe<Student_Entryexit_Records_On_Conflict>;
};

/** aggregate avg on columns */
export type Student_Entryexit_Records_Avg_Fields = {
  entryexit_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Avg_Order_By = {
  entryexit_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "student_entryexit_records". All fields are combined with a logical 'AND'. */
export type Student_Entryexit_Records_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Student_Entryexit_Records_Bool_Exp>>>;
  _not?: InputMaybe<Student_Entryexit_Records_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Student_Entryexit_Records_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  entry_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  entryexit_id?: InputMaybe<Int_Comparison_Exp>;
  exit_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  student_id?: InputMaybe<String_Comparison_Exp>;
  students?: InputMaybe<Students_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "student_entryexit_records" */
export enum Student_Entryexit_Records_Constraint {
  /** unique or primary key constraint */
  StudentEntryexitRecordsPk = 'student_entryexit_records_pk'
}

/** input type for incrementing integer column in table "student_entryexit_records" */
export type Student_Entryexit_Records_Inc_Input = {
  entryexit_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "student_entryexit_records" */
export type Student_Entryexit_Records_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  entry_at?: InputMaybe<Scalars['timestamptz']>;
  entryexit_id?: InputMaybe<Scalars['Int']>;
  exit_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  student_id?: InputMaybe<Scalars['String']>;
  students?: InputMaybe<Students_Obj_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Student_Entryexit_Records_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  entry_at?: Maybe<Scalars['timestamptz']>;
  entryexit_id?: Maybe<Scalars['Int']>;
  exit_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  entry_at?: InputMaybe<Order_By>;
  entryexit_id?: InputMaybe<Order_By>;
  exit_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Student_Entryexit_Records_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  entry_at?: Maybe<Scalars['timestamptz']>;
  entryexit_id?: Maybe<Scalars['Int']>;
  exit_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  entry_at?: InputMaybe<Order_By>;
  entryexit_id?: InputMaybe<Order_By>;
  exit_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "student_entryexit_records" */
export type Student_Entryexit_Records_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Student_Entryexit_Records>;
};

/** input type for inserting object relation for remote table "student_entryexit_records" */
export type Student_Entryexit_Records_Obj_Rel_Insert_Input = {
  data: Student_Entryexit_Records_Insert_Input;
  on_conflict?: InputMaybe<Student_Entryexit_Records_On_Conflict>;
};

/** on conflict condition type for table "student_entryexit_records" */
export type Student_Entryexit_Records_On_Conflict = {
  constraint: Student_Entryexit_Records_Constraint;
  update_columns: Array<Student_Entryexit_Records_Update_Column>;
  where?: InputMaybe<Student_Entryexit_Records_Bool_Exp>;
};

/** ordering options when selecting data from "student_entryexit_records" */
export type Student_Entryexit_Records_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  entry_at?: InputMaybe<Order_By>;
  entryexit_id?: InputMaybe<Order_By>;
  exit_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  students?: InputMaybe<Students_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "student_entryexit_records" */
export type Student_Entryexit_Records_Pk_Columns_Input = {
  entryexit_id: Scalars['Int'];
};

/** select columns of table "student_entryexit_records" */
export enum Student_Entryexit_Records_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EntryAt = 'entry_at',
  /** column name */
  EntryexitId = 'entryexit_id',
  /** column name */
  ExitAt = 'exit_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "student_entryexit_records" */
export type Student_Entryexit_Records_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  entry_at?: InputMaybe<Scalars['timestamptz']>;
  entryexit_id?: InputMaybe<Scalars['Int']>;
  exit_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  student_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Student_Entryexit_Records_Stddev_Fields = {
  entryexit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Stddev_Order_By = {
  entryexit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Student_Entryexit_Records_Stddev_Pop_Fields = {
  entryexit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Stddev_Pop_Order_By = {
  entryexit_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Student_Entryexit_Records_Stddev_Samp_Fields = {
  entryexit_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Stddev_Samp_Order_By = {
  entryexit_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Student_Entryexit_Records_Sum_Fields = {
  entryexit_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Sum_Order_By = {
  entryexit_id?: InputMaybe<Order_By>;
};

/** update columns of table "student_entryexit_records" */
export enum Student_Entryexit_Records_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EntryAt = 'entry_at',
  /** column name */
  EntryexitId = 'entryexit_id',
  /** column name */
  ExitAt = 'exit_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Student_Entryexit_Records_Var_Pop_Fields = {
  entryexit_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Var_Pop_Order_By = {
  entryexit_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Student_Entryexit_Records_Var_Samp_Fields = {
  entryexit_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Var_Samp_Order_By = {
  entryexit_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Student_Entryexit_Records_Variance_Fields = {
  entryexit_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "student_entryexit_records" */
export type Student_Entryexit_Records_Variance_Order_By = {
  entryexit_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "student_parents" */
export type Student_Parents = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  parent?: Maybe<Parents>;
  parent_id: Scalars['String'];
  /** An object relationship */
  parent_user?: Maybe<Users>;
  relationship: Scalars['String'];
  resource_path: Scalars['String'];
  /** An object relationship */
  student?: Maybe<Students>;
  student_id: Scalars['String'];
  /** An object relationship */
  student_user?: Maybe<Users>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "student_parents" */
export type Student_Parents_Aggregate = {
  aggregate?: Maybe<Student_Parents_Aggregate_Fields>;
  nodes: Array<Student_Parents>;
};

/** aggregate fields of "student_parents" */
export type Student_Parents_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Student_Parents_Max_Fields>;
  min?: Maybe<Student_Parents_Min_Fields>;
};


/** aggregate fields of "student_parents" */
export type Student_Parents_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Student_Parents_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "student_parents" */
export type Student_Parents_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Student_Parents_Max_Order_By>;
  min?: InputMaybe<Student_Parents_Min_Order_By>;
};

/** input type for inserting array relation for remote table "student_parents" */
export type Student_Parents_Arr_Rel_Insert_Input = {
  data: Array<Student_Parents_Insert_Input>;
  on_conflict?: InputMaybe<Student_Parents_On_Conflict>;
};

/** Boolean expression to filter rows from the table "student_parents". All fields are combined with a logical 'AND'. */
export type Student_Parents_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Student_Parents_Bool_Exp>>>;
  _not?: InputMaybe<Student_Parents_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Student_Parents_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  parent?: InputMaybe<Parents_Bool_Exp>;
  parent_id?: InputMaybe<String_Comparison_Exp>;
  parent_user?: InputMaybe<Users_Bool_Exp>;
  relationship?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  student?: InputMaybe<Students_Bool_Exp>;
  student_id?: InputMaybe<String_Comparison_Exp>;
  student_user?: InputMaybe<Users_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "student_parents" */
export enum Student_Parents_Constraint {
  /** unique or primary key constraint */
  StudentParentsPk = 'student_parents_pk'
}

/** input type for inserting data into table "student_parents" */
export type Student_Parents_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  parent?: InputMaybe<Parents_Obj_Rel_Insert_Input>;
  parent_id?: InputMaybe<Scalars['String']>;
  parent_user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  relationship?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  student?: InputMaybe<Students_Obj_Rel_Insert_Input>;
  student_id?: InputMaybe<Scalars['String']>;
  student_user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Student_Parents_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  parent_id?: Maybe<Scalars['String']>;
  relationship?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "student_parents" */
export type Student_Parents_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  parent_id?: InputMaybe<Order_By>;
  relationship?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Student_Parents_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  parent_id?: Maybe<Scalars['String']>;
  relationship?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "student_parents" */
export type Student_Parents_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  parent_id?: InputMaybe<Order_By>;
  relationship?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "student_parents" */
export type Student_Parents_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Student_Parents>;
};

/** input type for inserting object relation for remote table "student_parents" */
export type Student_Parents_Obj_Rel_Insert_Input = {
  data: Student_Parents_Insert_Input;
  on_conflict?: InputMaybe<Student_Parents_On_Conflict>;
};

/** on conflict condition type for table "student_parents" */
export type Student_Parents_On_Conflict = {
  constraint: Student_Parents_Constraint;
  update_columns: Array<Student_Parents_Update_Column>;
  where?: InputMaybe<Student_Parents_Bool_Exp>;
};

/** ordering options when selecting data from "student_parents" */
export type Student_Parents_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  parent?: InputMaybe<Parents_Order_By>;
  parent_id?: InputMaybe<Order_By>;
  parent_user?: InputMaybe<Users_Order_By>;
  relationship?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  student?: InputMaybe<Students_Order_By>;
  student_id?: InputMaybe<Order_By>;
  student_user?: InputMaybe<Users_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "student_parents" */
export type Student_Parents_Pk_Columns_Input = {
  parent_id: Scalars['String'];
  student_id: Scalars['String'];
};

/** select columns of table "student_parents" */
export enum Student_Parents_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ParentId = 'parent_id',
  /** column name */
  Relationship = 'relationship',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "student_parents" */
export type Student_Parents_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  parent_id?: InputMaybe<Scalars['String']>;
  relationship?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  student_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "student_parents" */
export enum Student_Parents_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ParentId = 'parent_id',
  /** column name */
  Relationship = 'relationship',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "student_qr" */
export type Student_Qr = {
  created_at: Scalars['timestamptz'];
  qr_id: Scalars['Int'];
  qr_url: Scalars['String'];
  resource_path: Scalars['String'];
  student_id: Scalars['String'];
  /** An object relationship */
  students: Students;
  updated_at: Scalars['timestamptz'];
  version?: Maybe<Scalars['String']>;
};

/** aggregated selection of "student_qr" */
export type Student_Qr_Aggregate = {
  aggregate?: Maybe<Student_Qr_Aggregate_Fields>;
  nodes: Array<Student_Qr>;
};

/** aggregate fields of "student_qr" */
export type Student_Qr_Aggregate_Fields = {
  avg?: Maybe<Student_Qr_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Student_Qr_Max_Fields>;
  min?: Maybe<Student_Qr_Min_Fields>;
  stddev?: Maybe<Student_Qr_Stddev_Fields>;
  stddev_pop?: Maybe<Student_Qr_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Student_Qr_Stddev_Samp_Fields>;
  sum?: Maybe<Student_Qr_Sum_Fields>;
  var_pop?: Maybe<Student_Qr_Var_Pop_Fields>;
  var_samp?: Maybe<Student_Qr_Var_Samp_Fields>;
  variance?: Maybe<Student_Qr_Variance_Fields>;
};


/** aggregate fields of "student_qr" */
export type Student_Qr_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Student_Qr_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "student_qr" */
export type Student_Qr_Aggregate_Order_By = {
  avg?: InputMaybe<Student_Qr_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Student_Qr_Max_Order_By>;
  min?: InputMaybe<Student_Qr_Min_Order_By>;
  stddev?: InputMaybe<Student_Qr_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Student_Qr_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Student_Qr_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Student_Qr_Sum_Order_By>;
  var_pop?: InputMaybe<Student_Qr_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Student_Qr_Var_Samp_Order_By>;
  variance?: InputMaybe<Student_Qr_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "student_qr" */
export type Student_Qr_Arr_Rel_Insert_Input = {
  data: Array<Student_Qr_Insert_Input>;
  on_conflict?: InputMaybe<Student_Qr_On_Conflict>;
};

/** aggregate avg on columns */
export type Student_Qr_Avg_Fields = {
  qr_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "student_qr" */
export type Student_Qr_Avg_Order_By = {
  qr_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "student_qr". All fields are combined with a logical 'AND'. */
export type Student_Qr_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Student_Qr_Bool_Exp>>>;
  _not?: InputMaybe<Student_Qr_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Student_Qr_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  qr_id?: InputMaybe<Int_Comparison_Exp>;
  qr_url?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  student_id?: InputMaybe<String_Comparison_Exp>;
  students?: InputMaybe<Students_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  version?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "student_qr" */
export enum Student_Qr_Constraint {
  /** unique or primary key constraint */
  StudentQrPk = 'student_qr_pk',
  /** unique or primary key constraint */
  StudentQrQrUrlKey = 'student_qr_qr_url_key',
  /** unique or primary key constraint */
  StudentQrStudentIdKey = 'student_qr_student_id_key'
}

/** input type for incrementing integer column in table "student_qr" */
export type Student_Qr_Inc_Input = {
  qr_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "student_qr" */
export type Student_Qr_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  qr_id?: InputMaybe<Scalars['Int']>;
  qr_url?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  student_id?: InputMaybe<Scalars['String']>;
  students?: InputMaybe<Students_Obj_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  version?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Student_Qr_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  qr_id?: Maybe<Scalars['Int']>;
  qr_url?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  version?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "student_qr" */
export type Student_Qr_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  qr_id?: InputMaybe<Order_By>;
  qr_url?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  version?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Student_Qr_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  qr_id?: Maybe<Scalars['Int']>;
  qr_url?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  version?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "student_qr" */
export type Student_Qr_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  qr_id?: InputMaybe<Order_By>;
  qr_url?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  version?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "student_qr" */
export type Student_Qr_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Student_Qr>;
};

/** input type for inserting object relation for remote table "student_qr" */
export type Student_Qr_Obj_Rel_Insert_Input = {
  data: Student_Qr_Insert_Input;
  on_conflict?: InputMaybe<Student_Qr_On_Conflict>;
};

/** on conflict condition type for table "student_qr" */
export type Student_Qr_On_Conflict = {
  constraint: Student_Qr_Constraint;
  update_columns: Array<Student_Qr_Update_Column>;
  where?: InputMaybe<Student_Qr_Bool_Exp>;
};

/** ordering options when selecting data from "student_qr" */
export type Student_Qr_Order_By = {
  created_at?: InputMaybe<Order_By>;
  qr_id?: InputMaybe<Order_By>;
  qr_url?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  students?: InputMaybe<Students_Order_By>;
  updated_at?: InputMaybe<Order_By>;
  version?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "student_qr" */
export type Student_Qr_Pk_Columns_Input = {
  qr_id: Scalars['Int'];
};

/** select columns of table "student_qr" */
export enum Student_Qr_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  QrId = 'qr_id',
  /** column name */
  QrUrl = 'qr_url',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Version = 'version'
}

/** input type for updating data in table "student_qr" */
export type Student_Qr_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  qr_id?: InputMaybe<Scalars['Int']>;
  qr_url?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  student_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  version?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Student_Qr_Stddev_Fields = {
  qr_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "student_qr" */
export type Student_Qr_Stddev_Order_By = {
  qr_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Student_Qr_Stddev_Pop_Fields = {
  qr_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "student_qr" */
export type Student_Qr_Stddev_Pop_Order_By = {
  qr_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Student_Qr_Stddev_Samp_Fields = {
  qr_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "student_qr" */
export type Student_Qr_Stddev_Samp_Order_By = {
  qr_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Student_Qr_Sum_Fields = {
  qr_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "student_qr" */
export type Student_Qr_Sum_Order_By = {
  qr_id?: InputMaybe<Order_By>;
};

/** update columns of table "student_qr" */
export enum Student_Qr_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  QrId = 'qr_id',
  /** column name */
  QrUrl = 'qr_url',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Version = 'version'
}

/** aggregate var_pop on columns */
export type Student_Qr_Var_Pop_Fields = {
  qr_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "student_qr" */
export type Student_Qr_Var_Pop_Order_By = {
  qr_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Student_Qr_Var_Samp_Fields = {
  qr_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "student_qr" */
export type Student_Qr_Var_Samp_Order_By = {
  qr_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Student_Qr_Variance_Fields = {
  qr_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "student_qr" */
export type Student_Qr_Variance_Order_By = {
  qr_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "student_subscriptions" */
export type Student_Subscriptions = {
  amount?: Maybe<Scalars['numeric']>;
  /** An array relationship */
  class_members: Array<Class_Members>;
  /** An aggregated array relationship */
  class_members_aggregate: Class_Members_Aggregate;
  country?: Maybe<Scalars['String']>;
  coupon_amount?: Maybe<Scalars['numeric']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_time: Scalars['timestamptz'];
  extend_from?: Maybe<Scalars['String']>;
  grades?: Maybe<Scalars['_int4']>;
  /** An object relationship */
  plan?: Maybe<Plans>;
  plan_id: Scalars['String'];
  resource_path?: Maybe<Scalars['String']>;
  start_time: Scalars['timestamptz'];
  status: Scalars['String'];
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  student_order_id?: Maybe<Scalars['Int']>;
  student_subscription_id: Scalars['String'];
  subject?: Maybe<Scalars['_text']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user?: Maybe<Users>;
};


/** columns and relationships of "student_subscriptions" */
export type Student_SubscriptionsClass_MembersArgs = {
  distinct_on?: InputMaybe<Array<Class_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Members_Order_By>>;
  where?: InputMaybe<Class_Members_Bool_Exp>;
};


/** columns and relationships of "student_subscriptions" */
export type Student_SubscriptionsClass_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Class_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Members_Order_By>>;
  where?: InputMaybe<Class_Members_Bool_Exp>;
};

/** aggregated selection of "student_subscriptions" */
export type Student_Subscriptions_Aggregate = {
  aggregate?: Maybe<Student_Subscriptions_Aggregate_Fields>;
  nodes: Array<Student_Subscriptions>;
};

/** aggregate fields of "student_subscriptions" */
export type Student_Subscriptions_Aggregate_Fields = {
  avg?: Maybe<Student_Subscriptions_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Student_Subscriptions_Max_Fields>;
  min?: Maybe<Student_Subscriptions_Min_Fields>;
  stddev?: Maybe<Student_Subscriptions_Stddev_Fields>;
  stddev_pop?: Maybe<Student_Subscriptions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Student_Subscriptions_Stddev_Samp_Fields>;
  sum?: Maybe<Student_Subscriptions_Sum_Fields>;
  var_pop?: Maybe<Student_Subscriptions_Var_Pop_Fields>;
  var_samp?: Maybe<Student_Subscriptions_Var_Samp_Fields>;
  variance?: Maybe<Student_Subscriptions_Variance_Fields>;
};


/** aggregate fields of "student_subscriptions" */
export type Student_Subscriptions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Student_Subscriptions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "student_subscriptions" */
export type Student_Subscriptions_Aggregate_Order_By = {
  avg?: InputMaybe<Student_Subscriptions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Student_Subscriptions_Max_Order_By>;
  min?: InputMaybe<Student_Subscriptions_Min_Order_By>;
  stddev?: InputMaybe<Student_Subscriptions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Student_Subscriptions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Student_Subscriptions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Student_Subscriptions_Sum_Order_By>;
  var_pop?: InputMaybe<Student_Subscriptions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Student_Subscriptions_Var_Samp_Order_By>;
  variance?: InputMaybe<Student_Subscriptions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "student_subscriptions" */
export type Student_Subscriptions_Arr_Rel_Insert_Input = {
  data: Array<Student_Subscriptions_Insert_Input>;
  on_conflict?: InputMaybe<Student_Subscriptions_On_Conflict>;
};

/** aggregate avg on columns */
export type Student_Subscriptions_Avg_Fields = {
  amount?: Maybe<Scalars['Float']>;
  coupon_amount?: Maybe<Scalars['Float']>;
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Avg_Order_By = {
  amount?: InputMaybe<Order_By>;
  coupon_amount?: InputMaybe<Order_By>;
  student_order_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "student_subscriptions". All fields are combined with a logical 'AND'. */
export type Student_Subscriptions_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Student_Subscriptions_Bool_Exp>>>;
  _not?: InputMaybe<Student_Subscriptions_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Student_Subscriptions_Bool_Exp>>>;
  amount?: InputMaybe<Numeric_Comparison_Exp>;
  class_members?: InputMaybe<Class_Members_Bool_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  coupon_amount?: InputMaybe<Numeric_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  end_time?: InputMaybe<Timestamptz_Comparison_Exp>;
  extend_from?: InputMaybe<String_Comparison_Exp>;
  grades?: InputMaybe<_Int4_Comparison_Exp>;
  plan?: InputMaybe<Plans_Bool_Exp>;
  plan_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  start_time?: InputMaybe<Timestamptz_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  student?: InputMaybe<Students_Bool_Exp>;
  student_id?: InputMaybe<String_Comparison_Exp>;
  student_order_id?: InputMaybe<Int_Comparison_Exp>;
  student_subscription_id?: InputMaybe<String_Comparison_Exp>;
  subject?: InputMaybe<_Text_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "student_subscriptions" */
export enum Student_Subscriptions_Constraint {
  /** unique or primary key constraint */
  StudentSubscriptionsPk = 'student_subscriptions_pk'
}

/** input type for incrementing integer column in table "student_subscriptions" */
export type Student_Subscriptions_Inc_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  coupon_amount?: InputMaybe<Scalars['numeric']>;
  student_order_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "student_subscriptions" */
export type Student_Subscriptions_Insert_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  class_members?: InputMaybe<Class_Members_Arr_Rel_Insert_Input>;
  country?: InputMaybe<Scalars['String']>;
  coupon_amount?: InputMaybe<Scalars['numeric']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  end_time?: InputMaybe<Scalars['timestamptz']>;
  extend_from?: InputMaybe<Scalars['String']>;
  grades?: InputMaybe<Scalars['_int4']>;
  plan?: InputMaybe<Plans_Obj_Rel_Insert_Input>;
  plan_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  start_time?: InputMaybe<Scalars['timestamptz']>;
  status?: InputMaybe<Scalars['String']>;
  student?: InputMaybe<Students_Obj_Rel_Insert_Input>;
  student_id?: InputMaybe<Scalars['String']>;
  student_order_id?: InputMaybe<Scalars['Int']>;
  student_subscription_id?: InputMaybe<Scalars['String']>;
  subject?: InputMaybe<Scalars['_text']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Student_Subscriptions_Max_Fields = {
  amount?: Maybe<Scalars['numeric']>;
  country?: Maybe<Scalars['String']>;
  coupon_amount?: Maybe<Scalars['numeric']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  extend_from?: Maybe<Scalars['String']>;
  plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  student_order_id?: Maybe<Scalars['Int']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Max_Order_By = {
  amount?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  coupon_amount?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_time?: InputMaybe<Order_By>;
  extend_from?: InputMaybe<Order_By>;
  plan_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  start_time?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  student_order_id?: InputMaybe<Order_By>;
  student_subscription_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Student_Subscriptions_Min_Fields = {
  amount?: Maybe<Scalars['numeric']>;
  country?: Maybe<Scalars['String']>;
  coupon_amount?: Maybe<Scalars['numeric']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timestamptz']>;
  extend_from?: Maybe<Scalars['String']>;
  plan_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  start_time?: Maybe<Scalars['timestamptz']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  student_order_id?: Maybe<Scalars['Int']>;
  student_subscription_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Min_Order_By = {
  amount?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  coupon_amount?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_time?: InputMaybe<Order_By>;
  extend_from?: InputMaybe<Order_By>;
  plan_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  start_time?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  student_order_id?: InputMaybe<Order_By>;
  student_subscription_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "student_subscriptions" */
export type Student_Subscriptions_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Student_Subscriptions>;
};

/** input type for inserting object relation for remote table "student_subscriptions" */
export type Student_Subscriptions_Obj_Rel_Insert_Input = {
  data: Student_Subscriptions_Insert_Input;
  on_conflict?: InputMaybe<Student_Subscriptions_On_Conflict>;
};

/** on conflict condition type for table "student_subscriptions" */
export type Student_Subscriptions_On_Conflict = {
  constraint: Student_Subscriptions_Constraint;
  update_columns: Array<Student_Subscriptions_Update_Column>;
  where?: InputMaybe<Student_Subscriptions_Bool_Exp>;
};

/** ordering options when selecting data from "student_subscriptions" */
export type Student_Subscriptions_Order_By = {
  amount?: InputMaybe<Order_By>;
  class_members_aggregate?: InputMaybe<Class_Members_Aggregate_Order_By>;
  country?: InputMaybe<Order_By>;
  coupon_amount?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  end_time?: InputMaybe<Order_By>;
  extend_from?: InputMaybe<Order_By>;
  grades?: InputMaybe<Order_By>;
  plan?: InputMaybe<Plans_Order_By>;
  plan_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  start_time?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  student?: InputMaybe<Students_Order_By>;
  student_id?: InputMaybe<Order_By>;
  student_order_id?: InputMaybe<Order_By>;
  student_subscription_id?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
};

/** primary key columns input for table: "student_subscriptions" */
export type Student_Subscriptions_Pk_Columns_Input = {
  student_subscription_id: Scalars['String'];
};

/** select columns of table "student_subscriptions" */
export enum Student_Subscriptions_Select_Column {
  /** column name */
  Amount = 'amount',
  /** column name */
  Country = 'country',
  /** column name */
  CouponAmount = 'coupon_amount',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndTime = 'end_time',
  /** column name */
  ExtendFrom = 'extend_from',
  /** column name */
  Grades = 'grades',
  /** column name */
  PlanId = 'plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartTime = 'start_time',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudentOrderId = 'student_order_id',
  /** column name */
  StudentSubscriptionId = 'student_subscription_id',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "student_subscriptions" */
export type Student_Subscriptions_Set_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  country?: InputMaybe<Scalars['String']>;
  coupon_amount?: InputMaybe<Scalars['numeric']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  end_time?: InputMaybe<Scalars['timestamptz']>;
  extend_from?: InputMaybe<Scalars['String']>;
  grades?: InputMaybe<Scalars['_int4']>;
  plan_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  start_time?: InputMaybe<Scalars['timestamptz']>;
  status?: InputMaybe<Scalars['String']>;
  student_id?: InputMaybe<Scalars['String']>;
  student_order_id?: InputMaybe<Scalars['Int']>;
  student_subscription_id?: InputMaybe<Scalars['String']>;
  subject?: InputMaybe<Scalars['_text']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Student_Subscriptions_Stddev_Fields = {
  amount?: Maybe<Scalars['Float']>;
  coupon_amount?: Maybe<Scalars['Float']>;
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Stddev_Order_By = {
  amount?: InputMaybe<Order_By>;
  coupon_amount?: InputMaybe<Order_By>;
  student_order_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Student_Subscriptions_Stddev_Pop_Fields = {
  amount?: Maybe<Scalars['Float']>;
  coupon_amount?: Maybe<Scalars['Float']>;
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Stddev_Pop_Order_By = {
  amount?: InputMaybe<Order_By>;
  coupon_amount?: InputMaybe<Order_By>;
  student_order_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Student_Subscriptions_Stddev_Samp_Fields = {
  amount?: Maybe<Scalars['Float']>;
  coupon_amount?: Maybe<Scalars['Float']>;
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Stddev_Samp_Order_By = {
  amount?: InputMaybe<Order_By>;
  coupon_amount?: InputMaybe<Order_By>;
  student_order_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Student_Subscriptions_Sum_Fields = {
  amount?: Maybe<Scalars['numeric']>;
  coupon_amount?: Maybe<Scalars['numeric']>;
  student_order_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Sum_Order_By = {
  amount?: InputMaybe<Order_By>;
  coupon_amount?: InputMaybe<Order_By>;
  student_order_id?: InputMaybe<Order_By>;
};

/** update columns of table "student_subscriptions" */
export enum Student_Subscriptions_Update_Column {
  /** column name */
  Amount = 'amount',
  /** column name */
  Country = 'country',
  /** column name */
  CouponAmount = 'coupon_amount',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EndTime = 'end_time',
  /** column name */
  ExtendFrom = 'extend_from',
  /** column name */
  Grades = 'grades',
  /** column name */
  PlanId = 'plan_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StartTime = 'start_time',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudentOrderId = 'student_order_id',
  /** column name */
  StudentSubscriptionId = 'student_subscription_id',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Student_Subscriptions_Var_Pop_Fields = {
  amount?: Maybe<Scalars['Float']>;
  coupon_amount?: Maybe<Scalars['Float']>;
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Var_Pop_Order_By = {
  amount?: InputMaybe<Order_By>;
  coupon_amount?: InputMaybe<Order_By>;
  student_order_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Student_Subscriptions_Var_Samp_Fields = {
  amount?: Maybe<Scalars['Float']>;
  coupon_amount?: Maybe<Scalars['Float']>;
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Var_Samp_Order_By = {
  amount?: InputMaybe<Order_By>;
  coupon_amount?: InputMaybe<Order_By>;
  student_order_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Student_Subscriptions_Variance_Fields = {
  amount?: Maybe<Scalars['Float']>;
  coupon_amount?: Maybe<Scalars['Float']>;
  student_order_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "student_subscriptions" */
export type Student_Subscriptions_Variance_Order_By = {
  amount?: InputMaybe<Order_By>;
  coupon_amount?: InputMaybe<Order_By>;
  student_order_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "students" */
export type Students = {
  additional_data?: Maybe<Scalars['jsonb']>;
  /** students need to pay before this day */
  billing_date: Scalars['timestamptz'];
  biography?: Maybe<Scalars['String']>;
  birthday?: Maybe<Scalars['date']>;
  /** An array relationship */
  class_members: Array<Class_Members>;
  /** An aggregated array relationship */
  class_members_aggregate: Class_Members_Aggregate;
  contact_preference?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  current_grade?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  enrollment_status: Scalars['String'];
  /** An array relationship */
  hub_tours: Array<Hub_Tours>;
  /** An aggregated array relationship */
  hub_tours_aggregate: Hub_Tours_Aggregate;
  /** An array relationship */
  lesson_report_details: Array<Lesson_Report_Details>;
  /** An aggregated array relationship */
  lesson_report_details_aggregate: Lesson_Report_Details_Aggregate;
  on_trial: Scalars['Boolean'];
  previous_grade?: Maybe<Scalars['smallint']>;
  resource_path: Scalars['String'];
  /** An object relationship */
  school?: Maybe<Schools>;
  school_id?: Maybe<Scalars['Int']>;
  student_external_id?: Maybe<Scalars['String']>;
  student_id: Scalars['String'];
  student_note: Scalars['String'];
  /** An array relationship */
  student_subscriptions: Array<Student_Subscriptions>;
  /** An aggregated array relationship */
  student_subscriptions_aggregate: Student_Subscriptions_Aggregate;
  /** An array relationship */
  students_assigned_coaches: Array<Students_Assigned_Coaches>;
  /** An aggregated array relationship */
  students_assigned_coaches_aggregate: Students_Assigned_Coaches_Aggregate;
  target_university?: Maybe<Scalars['String']>;
  total_question_limit?: Maybe<Scalars['smallint']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user?: Maybe<Users>;
};


/** columns and relationships of "students" */
export type StudentsAdditional_DataArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "students" */
export type StudentsClass_MembersArgs = {
  distinct_on?: InputMaybe<Array<Class_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Members_Order_By>>;
  where?: InputMaybe<Class_Members_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsClass_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Class_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Members_Order_By>>;
  where?: InputMaybe<Class_Members_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsHub_ToursArgs = {
  distinct_on?: InputMaybe<Array<Hub_Tours_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Hub_Tours_Order_By>>;
  where?: InputMaybe<Hub_Tours_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsHub_Tours_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Hub_Tours_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Hub_Tours_Order_By>>;
  where?: InputMaybe<Hub_Tours_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsLesson_Report_DetailsArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Report_Details_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Report_Details_Order_By>>;
  where?: InputMaybe<Lesson_Report_Details_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsLesson_Report_Details_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Report_Details_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Report_Details_Order_By>>;
  where?: InputMaybe<Lesson_Report_Details_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudent_SubscriptionsArgs = {
  distinct_on?: InputMaybe<Array<Student_Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Subscriptions_Order_By>>;
  where?: InputMaybe<Student_Subscriptions_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudent_Subscriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Student_Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Subscriptions_Order_By>>;
  where?: InputMaybe<Student_Subscriptions_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudents_Assigned_CoachesArgs = {
  distinct_on?: InputMaybe<Array<Students_Assigned_Coaches_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Students_Assigned_Coaches_Order_By>>;
  where?: InputMaybe<Students_Assigned_Coaches_Bool_Exp>;
};


/** columns and relationships of "students" */
export type StudentsStudents_Assigned_Coaches_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Students_Assigned_Coaches_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Students_Assigned_Coaches_Order_By>>;
  where?: InputMaybe<Students_Assigned_Coaches_Bool_Exp>;
};

/** aggregated selection of "students" */
export type Students_Aggregate = {
  aggregate?: Maybe<Students_Aggregate_Fields>;
  nodes: Array<Students>;
};

/** aggregate fields of "students" */
export type Students_Aggregate_Fields = {
  avg?: Maybe<Students_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Students_Max_Fields>;
  min?: Maybe<Students_Min_Fields>;
  stddev?: Maybe<Students_Stddev_Fields>;
  stddev_pop?: Maybe<Students_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Students_Stddev_Samp_Fields>;
  sum?: Maybe<Students_Sum_Fields>;
  var_pop?: Maybe<Students_Var_Pop_Fields>;
  var_samp?: Maybe<Students_Var_Samp_Fields>;
  variance?: Maybe<Students_Variance_Fields>;
};


/** aggregate fields of "students" */
export type Students_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Students_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "students" */
export type Students_Aggregate_Order_By = {
  avg?: InputMaybe<Students_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Students_Max_Order_By>;
  min?: InputMaybe<Students_Min_Order_By>;
  stddev?: InputMaybe<Students_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Students_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Students_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Students_Sum_Order_By>;
  var_pop?: InputMaybe<Students_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Students_Var_Samp_Order_By>;
  variance?: InputMaybe<Students_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Students_Append_Input = {
  additional_data?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "students" */
export type Students_Arr_Rel_Insert_Input = {
  data: Array<Students_Insert_Input>;
  on_conflict?: InputMaybe<Students_On_Conflict>;
};

/** columns and relationships of "students_assigned_coaches" */
export type Students_Assigned_Coaches = {
  /** An object relationship */
  coach: Coaches;
  coach_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_active: Scalars['Boolean'];
  resource_path?: Maybe<Scalars['String']>;
  /** An object relationship */
  student: Students;
  student_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "students_assigned_coaches" */
export type Students_Assigned_Coaches_Aggregate = {
  aggregate?: Maybe<Students_Assigned_Coaches_Aggregate_Fields>;
  nodes: Array<Students_Assigned_Coaches>;
};

/** aggregate fields of "students_assigned_coaches" */
export type Students_Assigned_Coaches_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Students_Assigned_Coaches_Max_Fields>;
  min?: Maybe<Students_Assigned_Coaches_Min_Fields>;
};


/** aggregate fields of "students_assigned_coaches" */
export type Students_Assigned_Coaches_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Students_Assigned_Coaches_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "students_assigned_coaches" */
export type Students_Assigned_Coaches_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Students_Assigned_Coaches_Max_Order_By>;
  min?: InputMaybe<Students_Assigned_Coaches_Min_Order_By>;
};

/** input type for inserting array relation for remote table "students_assigned_coaches" */
export type Students_Assigned_Coaches_Arr_Rel_Insert_Input = {
  data: Array<Students_Assigned_Coaches_Insert_Input>;
};

/** Boolean expression to filter rows from the table "students_assigned_coaches". All fields are combined with a logical 'AND'. */
export type Students_Assigned_Coaches_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Students_Assigned_Coaches_Bool_Exp>>>;
  _not?: InputMaybe<Students_Assigned_Coaches_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Students_Assigned_Coaches_Bool_Exp>>>;
  coach?: InputMaybe<Coaches_Bool_Exp>;
  coach_id?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  is_active?: InputMaybe<Boolean_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  student?: InputMaybe<Students_Bool_Exp>;
  student_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** input type for inserting data into table "students_assigned_coaches" */
export type Students_Assigned_Coaches_Insert_Input = {
  coach?: InputMaybe<Coaches_Obj_Rel_Insert_Input>;
  coach_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_active?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  student?: InputMaybe<Students_Obj_Rel_Insert_Input>;
  student_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Students_Assigned_Coaches_Max_Fields = {
  coach_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "students_assigned_coaches" */
export type Students_Assigned_Coaches_Max_Order_By = {
  coach_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Students_Assigned_Coaches_Min_Fields = {
  coach_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "students_assigned_coaches" */
export type Students_Assigned_Coaches_Min_Order_By = {
  coach_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "students_assigned_coaches" */
export type Students_Assigned_Coaches_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Students_Assigned_Coaches>;
};

/** input type for inserting object relation for remote table "students_assigned_coaches" */
export type Students_Assigned_Coaches_Obj_Rel_Insert_Input = {
  data: Students_Assigned_Coaches_Insert_Input;
};

/** ordering options when selecting data from "students_assigned_coaches" */
export type Students_Assigned_Coaches_Order_By = {
  coach?: InputMaybe<Coaches_Order_By>;
  coach_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  is_active?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  student?: InputMaybe<Students_Order_By>;
  student_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** select columns of table "students_assigned_coaches" */
export enum Students_Assigned_Coaches_Select_Column {
  /** column name */
  CoachId = 'coach_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "students_assigned_coaches" */
export type Students_Assigned_Coaches_Set_Input = {
  coach_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_active?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  student_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate avg on columns */
export type Students_Avg_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
  previous_grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_question_limit?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "students" */
export type Students_Avg_Order_By = {
  current_grade?: InputMaybe<Order_By>;
  previous_grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  total_question_limit?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "students". All fields are combined with a logical 'AND'. */
export type Students_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Students_Bool_Exp>>>;
  _not?: InputMaybe<Students_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Students_Bool_Exp>>>;
  additional_data?: InputMaybe<Jsonb_Comparison_Exp>;
  billing_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  biography?: InputMaybe<String_Comparison_Exp>;
  birthday?: InputMaybe<Date_Comparison_Exp>;
  class_members?: InputMaybe<Class_Members_Bool_Exp>;
  contact_preference?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  current_grade?: InputMaybe<Smallint_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  enrollment_status?: InputMaybe<String_Comparison_Exp>;
  hub_tours?: InputMaybe<Hub_Tours_Bool_Exp>;
  lesson_report_details?: InputMaybe<Lesson_Report_Details_Bool_Exp>;
  on_trial?: InputMaybe<Boolean_Comparison_Exp>;
  previous_grade?: InputMaybe<Smallint_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school?: InputMaybe<Schools_Bool_Exp>;
  school_id?: InputMaybe<Int_Comparison_Exp>;
  student_external_id?: InputMaybe<String_Comparison_Exp>;
  student_id?: InputMaybe<String_Comparison_Exp>;
  student_note?: InputMaybe<String_Comparison_Exp>;
  student_subscriptions?: InputMaybe<Student_Subscriptions_Bool_Exp>;
  students_assigned_coaches?: InputMaybe<Students_Assigned_Coaches_Bool_Exp>;
  target_university?: InputMaybe<String_Comparison_Exp>;
  total_question_limit?: InputMaybe<Smallint_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "students" */
export enum Students_Constraint {
  /** unique or primary key constraint */
  StudentsPk = 'students_pk'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Students_Delete_At_Path_Input = {
  additional_data?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Students_Delete_Elem_Input = {
  additional_data?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Students_Delete_Key_Input = {
  additional_data?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "students" */
export type Students_Inc_Input = {
  current_grade?: InputMaybe<Scalars['smallint']>;
  previous_grade?: InputMaybe<Scalars['smallint']>;
  school_id?: InputMaybe<Scalars['Int']>;
  total_question_limit?: InputMaybe<Scalars['smallint']>;
};

/** input type for inserting data into table "students" */
export type Students_Insert_Input = {
  additional_data?: InputMaybe<Scalars['jsonb']>;
  billing_date?: InputMaybe<Scalars['timestamptz']>;
  biography?: InputMaybe<Scalars['String']>;
  birthday?: InputMaybe<Scalars['date']>;
  class_members?: InputMaybe<Class_Members_Arr_Rel_Insert_Input>;
  contact_preference?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  current_grade?: InputMaybe<Scalars['smallint']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  enrollment_status?: InputMaybe<Scalars['String']>;
  hub_tours?: InputMaybe<Hub_Tours_Arr_Rel_Insert_Input>;
  lesson_report_details?: InputMaybe<Lesson_Report_Details_Arr_Rel_Insert_Input>;
  on_trial?: InputMaybe<Scalars['Boolean']>;
  previous_grade?: InputMaybe<Scalars['smallint']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school?: InputMaybe<Schools_Obj_Rel_Insert_Input>;
  school_id?: InputMaybe<Scalars['Int']>;
  student_external_id?: InputMaybe<Scalars['String']>;
  student_id?: InputMaybe<Scalars['String']>;
  student_note?: InputMaybe<Scalars['String']>;
  student_subscriptions?: InputMaybe<Student_Subscriptions_Arr_Rel_Insert_Input>;
  students_assigned_coaches?: InputMaybe<Students_Assigned_Coaches_Arr_Rel_Insert_Input>;
  target_university?: InputMaybe<Scalars['String']>;
  total_question_limit?: InputMaybe<Scalars['smallint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Students_Max_Fields = {
  billing_date?: Maybe<Scalars['timestamptz']>;
  biography?: Maybe<Scalars['String']>;
  birthday?: Maybe<Scalars['date']>;
  contact_preference?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_grade?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  enrollment_status?: Maybe<Scalars['String']>;
  previous_grade?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  student_external_id?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  student_note?: Maybe<Scalars['String']>;
  target_university?: Maybe<Scalars['String']>;
  total_question_limit?: Maybe<Scalars['smallint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "students" */
export type Students_Max_Order_By = {
  billing_date?: InputMaybe<Order_By>;
  biography?: InputMaybe<Order_By>;
  birthday?: InputMaybe<Order_By>;
  contact_preference?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_grade?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  enrollment_status?: InputMaybe<Order_By>;
  previous_grade?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  student_external_id?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  student_note?: InputMaybe<Order_By>;
  target_university?: InputMaybe<Order_By>;
  total_question_limit?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Students_Min_Fields = {
  billing_date?: Maybe<Scalars['timestamptz']>;
  biography?: Maybe<Scalars['String']>;
  birthday?: Maybe<Scalars['date']>;
  contact_preference?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  current_grade?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  enrollment_status?: Maybe<Scalars['String']>;
  previous_grade?: Maybe<Scalars['smallint']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  student_external_id?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  student_note?: Maybe<Scalars['String']>;
  target_university?: Maybe<Scalars['String']>;
  total_question_limit?: Maybe<Scalars['smallint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "students" */
export type Students_Min_Order_By = {
  billing_date?: InputMaybe<Order_By>;
  biography?: InputMaybe<Order_By>;
  birthday?: InputMaybe<Order_By>;
  contact_preference?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_grade?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  enrollment_status?: InputMaybe<Order_By>;
  previous_grade?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  student_external_id?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  student_note?: InputMaybe<Order_By>;
  target_university?: InputMaybe<Order_By>;
  total_question_limit?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "students" */
export type Students_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Students>;
};

/** input type for inserting object relation for remote table "students" */
export type Students_Obj_Rel_Insert_Input = {
  data: Students_Insert_Input;
  on_conflict?: InputMaybe<Students_On_Conflict>;
};

/** on conflict condition type for table "students" */
export type Students_On_Conflict = {
  constraint: Students_Constraint;
  update_columns: Array<Students_Update_Column>;
  where?: InputMaybe<Students_Bool_Exp>;
};

/** ordering options when selecting data from "students" */
export type Students_Order_By = {
  additional_data?: InputMaybe<Order_By>;
  billing_date?: InputMaybe<Order_By>;
  biography?: InputMaybe<Order_By>;
  birthday?: InputMaybe<Order_By>;
  class_members_aggregate?: InputMaybe<Class_Members_Aggregate_Order_By>;
  contact_preference?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_grade?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  enrollment_status?: InputMaybe<Order_By>;
  hub_tours_aggregate?: InputMaybe<Hub_Tours_Aggregate_Order_By>;
  lesson_report_details_aggregate?: InputMaybe<Lesson_Report_Details_Aggregate_Order_By>;
  on_trial?: InputMaybe<Order_By>;
  previous_grade?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school?: InputMaybe<Schools_Order_By>;
  school_id?: InputMaybe<Order_By>;
  student_external_id?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  student_note?: InputMaybe<Order_By>;
  student_subscriptions_aggregate?: InputMaybe<Student_Subscriptions_Aggregate_Order_By>;
  students_assigned_coaches_aggregate?: InputMaybe<Students_Assigned_Coaches_Aggregate_Order_By>;
  target_university?: InputMaybe<Order_By>;
  total_question_limit?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
};

/** primary key columns input for table: "students" */
export type Students_Pk_Columns_Input = {
  student_id: Scalars['String'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Students_Prepend_Input = {
  additional_data?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "students" */
export enum Students_Select_Column {
  /** column name */
  AdditionalData = 'additional_data',
  /** column name */
  BillingDate = 'billing_date',
  /** column name */
  Biography = 'biography',
  /** column name */
  Birthday = 'birthday',
  /** column name */
  ContactPreference = 'contact_preference',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentGrade = 'current_grade',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EnrollmentStatus = 'enrollment_status',
  /** column name */
  OnTrial = 'on_trial',
  /** column name */
  PreviousGrade = 'previous_grade',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  StudentExternalId = 'student_external_id',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudentNote = 'student_note',
  /** column name */
  TargetUniversity = 'target_university',
  /** column name */
  TotalQuestionLimit = 'total_question_limit',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "students" */
export type Students_Set_Input = {
  additional_data?: InputMaybe<Scalars['jsonb']>;
  billing_date?: InputMaybe<Scalars['timestamptz']>;
  biography?: InputMaybe<Scalars['String']>;
  birthday?: InputMaybe<Scalars['date']>;
  contact_preference?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  current_grade?: InputMaybe<Scalars['smallint']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  enrollment_status?: InputMaybe<Scalars['String']>;
  on_trial?: InputMaybe<Scalars['Boolean']>;
  previous_grade?: InputMaybe<Scalars['smallint']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['Int']>;
  student_external_id?: InputMaybe<Scalars['String']>;
  student_id?: InputMaybe<Scalars['String']>;
  student_note?: InputMaybe<Scalars['String']>;
  target_university?: InputMaybe<Scalars['String']>;
  total_question_limit?: InputMaybe<Scalars['smallint']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Students_Stddev_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
  previous_grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_question_limit?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "students" */
export type Students_Stddev_Order_By = {
  current_grade?: InputMaybe<Order_By>;
  previous_grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  total_question_limit?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Students_Stddev_Pop_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
  previous_grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_question_limit?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "students" */
export type Students_Stddev_Pop_Order_By = {
  current_grade?: InputMaybe<Order_By>;
  previous_grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  total_question_limit?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Students_Stddev_Samp_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
  previous_grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_question_limit?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "students" */
export type Students_Stddev_Samp_Order_By = {
  current_grade?: InputMaybe<Order_By>;
  previous_grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  total_question_limit?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Students_Sum_Fields = {
  current_grade?: Maybe<Scalars['smallint']>;
  previous_grade?: Maybe<Scalars['smallint']>;
  school_id?: Maybe<Scalars['Int']>;
  total_question_limit?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "students" */
export type Students_Sum_Order_By = {
  current_grade?: InputMaybe<Order_By>;
  previous_grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  total_question_limit?: InputMaybe<Order_By>;
};

/** update columns of table "students" */
export enum Students_Update_Column {
  /** column name */
  AdditionalData = 'additional_data',
  /** column name */
  BillingDate = 'billing_date',
  /** column name */
  Biography = 'biography',
  /** column name */
  Birthday = 'birthday',
  /** column name */
  ContactPreference = 'contact_preference',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentGrade = 'current_grade',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EnrollmentStatus = 'enrollment_status',
  /** column name */
  OnTrial = 'on_trial',
  /** column name */
  PreviousGrade = 'previous_grade',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  StudentExternalId = 'student_external_id',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  StudentNote = 'student_note',
  /** column name */
  TargetUniversity = 'target_university',
  /** column name */
  TotalQuestionLimit = 'total_question_limit',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Students_Var_Pop_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
  previous_grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_question_limit?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "students" */
export type Students_Var_Pop_Order_By = {
  current_grade?: InputMaybe<Order_By>;
  previous_grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  total_question_limit?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Students_Var_Samp_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
  previous_grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_question_limit?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "students" */
export type Students_Var_Samp_Order_By = {
  current_grade?: InputMaybe<Order_By>;
  previous_grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  total_question_limit?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Students_Variance_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
  previous_grade?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_question_limit?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "students" */
export type Students_Variance_Order_By = {
  current_grade?: InputMaybe<Order_By>;
  previous_grade?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  total_question_limit?: InputMaybe<Order_By>;
};

/** subscription root */
export type Subscription_Root = {
  /** fetch data from the table: "assignments" */
  assignments: Array<Assignments>;
  /** fetch aggregated fields from the table: "assignments" */
  assignments_aggregate: Assignments_Aggregate;
  /** fetch data from the table: "assignments" using primary key columns */
  assignments_by_pk?: Maybe<Assignments>;
  /** fetch data from the table: "bank" */
  bank: Array<Bank>;
  /** fetch aggregated fields from the table: "bank" */
  bank_aggregate: Bank_Aggregate;
  /** fetch data from the table: "bank_branch" */
  bank_branch: Array<Bank_Branch>;
  /** fetch aggregated fields from the table: "bank_branch" */
  bank_branch_aggregate: Bank_Branch_Aggregate;
  /** fetch data from the table: "bank_branch" using primary key columns */
  bank_branch_by_pk?: Maybe<Bank_Branch>;
  /** fetch data from the table: "bank" using primary key columns */
  bank_by_pk?: Maybe<Bank>;
  /** fetch data from the table: "books" */
  books: Array<Books>;
  /** fetch aggregated fields from the table: "books" */
  books_aggregate: Books_Aggregate;
  /** fetch data from the table: "books" using primary key columns */
  books_by_pk?: Maybe<Books>;
  /** fetch data from the table: "books_chapters" */
  books_chapters: Array<Books_Chapters>;
  /** fetch aggregated fields from the table: "books_chapters" */
  books_chapters_aggregate: Books_Chapters_Aggregate;
  /** fetch data from the table: "books_chapters" using primary key columns */
  books_chapters_by_pk?: Maybe<Books_Chapters>;
  /** fetch data from the table: "chapters" */
  chapters: Array<Chapters>;
  /** fetch aggregated fields from the table: "chapters" */
  chapters_aggregate: Chapters_Aggregate;
  /** fetch data from the table: "chapters" using primary key columns */
  chapters_by_pk?: Maybe<Chapters>;
  /** fetch data from the table: "cities" */
  cities: Array<Cities>;
  /** fetch aggregated fields from the table: "cities" */
  cities_aggregate: Cities_Aggregate;
  /** fetch data from the table: "cities" using primary key columns */
  cities_by_pk?: Maybe<Cities>;
  /** fetch data from the table: "class" */
  class: Array<Class>;
  /** fetch aggregated fields from the table: "class" */
  class_aggregate: Class_Aggregate;
  /** fetch data from the table: "class" using primary key columns */
  class_by_pk?: Maybe<Class>;
  /** fetch data from the table: "class_member" */
  class_member: Array<Class_Member>;
  /** fetch aggregated fields from the table: "class_member" */
  class_member_aggregate: Class_Member_Aggregate;
  /** fetch data from the table: "class_member" using primary key columns */
  class_member_by_pk?: Maybe<Class_Member>;
  /** fetch data from the table: "class_members" */
  class_members: Array<Class_Members>;
  /** fetch aggregated fields from the table: "class_members" */
  class_members_aggregate: Class_Members_Aggregate;
  /** fetch data from the table: "class_members" using primary key columns */
  class_members_by_pk?: Maybe<Class_Members>;
  /** fetch data from the table: "classes" */
  classes: Array<Classes>;
  /** fetch aggregated fields from the table: "classes" */
  classes_aggregate: Classes_Aggregate;
  /** fetch data from the table: "classes" using primary key columns */
  classes_by_pk?: Maybe<Classes>;
  /** fetch data from the table: "coaches" */
  coaches: Array<Coaches>;
  /** fetch aggregated fields from the table: "coaches" */
  coaches_aggregate: Coaches_Aggregate;
  /** fetch data from the table: "coaches" using primary key columns */
  coaches_by_pk?: Maybe<Coaches>;
  /** fetch data from the table: "cod_orders" */
  cod_orders: Array<Cod_Orders>;
  /** fetch aggregated fields from the table: "cod_orders" */
  cod_orders_aggregate: Cod_Orders_Aggregate;
  /** fetch data from the table: "cod_orders" using primary key columns */
  cod_orders_by_pk?: Maybe<Cod_Orders>;
  /** fetch data from the table: "conversion_tasks" */
  conversion_tasks: Array<Conversion_Tasks>;
  /** fetch aggregated fields from the table: "conversion_tasks" */
  conversion_tasks_aggregate: Conversion_Tasks_Aggregate;
  /** fetch data from the table: "conversion_tasks" using primary key columns */
  conversion_tasks_by_pk?: Maybe<Conversion_Tasks>;
  /** fetch data from the table: "course_access_paths" */
  course_access_paths: Array<Course_Access_Paths>;
  /** fetch aggregated fields from the table: "course_access_paths" */
  course_access_paths_aggregate: Course_Access_Paths_Aggregate;
  /** fetch data from the table: "course_access_paths" using primary key columns */
  course_access_paths_by_pk?: Maybe<Course_Access_Paths>;
  /** fetch data from the table: "courses" */
  courses: Array<Courses>;
  /** fetch aggregated fields from the table: "courses" */
  courses_aggregate: Courses_Aggregate;
  /** fetch data from the table: "courses_books" */
  courses_books: Array<Courses_Books>;
  /** fetch aggregated fields from the table: "courses_books" */
  courses_books_aggregate: Courses_Books_Aggregate;
  /** fetch data from the table: "courses_books" using primary key columns */
  courses_books_by_pk?: Maybe<Courses_Books>;
  /** fetch data from the table: "courses" using primary key columns */
  courses_by_pk?: Maybe<Courses>;
  /** fetch data from the table: "courses_classes" */
  courses_classes: Array<Courses_Classes>;
  /** fetch aggregated fields from the table: "courses_classes" */
  courses_classes_aggregate: Courses_Classes_Aggregate;
  /** fetch data from the table: "courses_classes" using primary key columns */
  courses_classes_by_pk?: Maybe<Courses_Classes>;
  /** fetch data from the table: "districts" */
  districts: Array<Districts>;
  /** fetch aggregated fields from the table: "districts" */
  districts_aggregate: Districts_Aggregate;
  /** fetch data from the table: "districts" using primary key columns */
  districts_by_pk?: Maybe<Districts>;
  /** execute function "find_quiz_by_lo_id" which returns "quizzes" */
  find_quiz_by_lo_id: Array<Quizzes>;
  /** execute function "find_quiz_by_lo_id" and query aggregates on result of table type "quizzes" */
  find_quiz_by_lo_id_aggregate: Quizzes_Aggregate;
  /** execute function "find_teacher_by_school_id" which returns "users" */
  find_teacher_by_school_id: Array<Users>;
  /** execute function "find_teacher_by_school_id" and query aggregates on result of table type "users" */
  find_teacher_by_school_id_aggregate: Users_Aggregate;
  /** execute function "get_locations_active_by_course_id" which returns "course_access_paths" */
  get_locations_active_by_course_id: Array<Course_Access_Paths>;
  /** execute function "get_locations_active_by_course_id" and query aggregates on result of table type "course_access_paths" */
  get_locations_active_by_course_id_aggregate: Course_Access_Paths_Aggregate;
  /** execute function "get_locations_lowest_level" which returns "locations" */
  get_locations_lowest_level: Array<Locations>;
  /** execute function "get_locations_lowest_level" and query aggregates on result of table type "locations" */
  get_locations_lowest_level_aggregate: Locations_Aggregate;
  /** execute function "get_lowest_location_types" which returns "location_types" */
  get_lowest_location_types: Array<Location_Types>;
  /** execute function "get_lowest_location_types" and query aggregates on result of table type "location_types" */
  get_lowest_location_types_aggregate: Location_Types_Aggregate;
  /** execute function "get_partner_dynamic_form_field_values_by_student" which returns "partner_dynamic_form_field_values" */
  get_partner_dynamic_form_field_values_by_student: Array<Partner_Dynamic_Form_Field_Values>;
  /** execute function "get_partner_dynamic_form_field_values_by_student" and query aggregates on result of table type "partner_dynamic_form_field_values" */
  get_partner_dynamic_form_field_values_by_student_aggregate: Partner_Dynamic_Form_Field_Values_Aggregate;
  /** execute function "get_previous_report_of_student" which returns "lesson_reports" */
  get_previous_report_of_student: Array<Lesson_Reports>;
  /** execute function "get_previous_report_of_student" and query aggregates on result of table type "lesson_reports" */
  get_previous_report_of_student_aggregate: Lesson_Reports_Aggregate;
  /** execute function "get_previous_report_of_student_v2" which returns "lesson_reports" */
  get_previous_report_of_student_v2: Array<Lesson_Reports>;
  /** execute function "get_previous_report_of_student_v2" and query aggregates on result of table type "lesson_reports" */
  get_previous_report_of_student_v2_aggregate: Lesson_Reports_Aggregate;
  /** execute function "get_previous_report_of_student_v3" which returns "lesson_reports" */
  get_previous_report_of_student_v3: Array<Lesson_Reports>;
  /** execute function "get_previous_report_of_student_v3" and query aggregates on result of table type "lesson_reports" */
  get_previous_report_of_student_v3_aggregate: Lesson_Reports_Aggregate;
  /** fetch data from the table: "granted_role" */
  granted_role: Array<Granted_Role>;
  /** fetch data from the table: "granted_role_access_path" */
  granted_role_access_path: Array<Granted_Role_Access_Path>;
  /** fetch aggregated fields from the table: "granted_role_access_path" */
  granted_role_access_path_aggregate: Granted_Role_Access_Path_Aggregate;
  /** fetch data from the table: "granted_role_access_path" using primary key columns */
  granted_role_access_path_by_pk?: Maybe<Granted_Role_Access_Path>;
  /** fetch aggregated fields from the table: "granted_role" */
  granted_role_aggregate: Granted_Role_Aggregate;
  /** fetch data from the table: "granted_role" using primary key columns */
  granted_role_by_pk?: Maybe<Granted_Role>;
  /** fetch data from the table: "hub_tours" */
  hub_tours: Array<Hub_Tours>;
  /** fetch aggregated fields from the table: "hub_tours" */
  hub_tours_aggregate: Hub_Tours_Aggregate;
  /** fetch data from the table: "hub_tours" using primary key columns */
  hub_tours_by_pk?: Maybe<Hub_Tours>;
  /** fetch data from the table: "hubs" */
  hubs: Array<Hubs>;
  /** fetch aggregated fields from the table: "hubs" */
  hubs_aggregate: Hubs_Aggregate;
  /** fetch data from the table: "hubs" using primary key columns */
  hubs_by_pk?: Maybe<Hubs>;
  /** fetch data from the table: "info_notification_msgs" */
  info_notification_msgs: Array<Info_Notification_Msgs>;
  /** fetch aggregated fields from the table: "info_notification_msgs" */
  info_notification_msgs_aggregate: Info_Notification_Msgs_Aggregate;
  /** fetch data from the table: "info_notification_msgs" using primary key columns */
  info_notification_msgs_by_pk?: Maybe<Info_Notification_Msgs>;
  /** fetch data from the table: "info_notifications" */
  info_notifications: Array<Info_Notifications>;
  /** fetch aggregated fields from the table: "info_notifications" */
  info_notifications_aggregate: Info_Notifications_Aggregate;
  /** fetch data from the table: "info_notifications" using primary key columns */
  info_notifications_by_pk?: Maybe<Info_Notifications>;
  /** fetch data from the table: "info_notifications_tags" */
  info_notifications_tags: Array<Info_Notifications_Tags>;
  /** fetch aggregated fields from the table: "info_notifications_tags" */
  info_notifications_tags_aggregate: Info_Notifications_Tags_Aggregate;
  /** fetch data from the table: "info_notifications_tags" using primary key columns */
  info_notifications_tags_by_pk?: Maybe<Info_Notifications_Tags>;
  /** fetch data from the table: "learning_objectives" */
  learning_objectives: Array<Learning_Objectives>;
  /** fetch aggregated fields from the table: "learning_objectives" */
  learning_objectives_aggregate: Learning_Objectives_Aggregate;
  /** fetch data from the table: "learning_objectives" using primary key columns */
  learning_objectives_by_pk?: Maybe<Learning_Objectives>;
  /** fetch data from the table: "lesson_groups" */
  lesson_groups: Array<Lesson_Groups>;
  /** fetch aggregated fields from the table: "lesson_groups" */
  lesson_groups_aggregate: Lesson_Groups_Aggregate;
  /** fetch data from the table: "lesson_groups" using primary key columns */
  lesson_groups_by_pk?: Maybe<Lesson_Groups>;
  /** fetch data from the table: "lesson_members" */
  lesson_members: Array<Lesson_Members>;
  /** fetch aggregated fields from the table: "lesson_members" */
  lesson_members_aggregate: Lesson_Members_Aggregate;
  /** fetch data from the table: "lesson_members" using primary key columns */
  lesson_members_by_pk?: Maybe<Lesson_Members>;
  /** fetch data from the table: "lesson_report_details" */
  lesson_report_details: Array<Lesson_Report_Details>;
  /** fetch aggregated fields from the table: "lesson_report_details" */
  lesson_report_details_aggregate: Lesson_Report_Details_Aggregate;
  /** fetch data from the table: "lesson_report_details" using primary key columns */
  lesson_report_details_by_pk?: Maybe<Lesson_Report_Details>;
  /** fetch data from the table: "lesson_reports" */
  lesson_reports: Array<Lesson_Reports>;
  /** fetch aggregated fields from the table: "lesson_reports" */
  lesson_reports_aggregate: Lesson_Reports_Aggregate;
  /** fetch data from the table: "lesson_reports" using primary key columns */
  lesson_reports_by_pk?: Maybe<Lesson_Reports>;
  /** fetch data from the table: "lesson_schedules" */
  lesson_schedules: Array<Lesson_Schedules>;
  /** fetch aggregated fields from the table: "lesson_schedules" */
  lesson_schedules_aggregate: Lesson_Schedules_Aggregate;
  /** fetch data from the table: "lesson_student_subscription_access_path" */
  lesson_student_subscription_access_path: Array<Lesson_Student_Subscription_Access_Path>;
  /** fetch aggregated fields from the table: "lesson_student_subscription_access_path" */
  lesson_student_subscription_access_path_aggregate: Lesson_Student_Subscription_Access_Path_Aggregate;
  /** fetch data from the table: "lesson_student_subscription_access_path" using primary key columns */
  lesson_student_subscription_access_path_by_pk?: Maybe<Lesson_Student_Subscription_Access_Path>;
  /** fetch data from the table: "lesson_student_subscriptions" */
  lesson_student_subscriptions: Array<Lesson_Student_Subscriptions>;
  /** fetch aggregated fields from the table: "lesson_student_subscriptions" */
  lesson_student_subscriptions_aggregate: Lesson_Student_Subscriptions_Aggregate;
  /** fetch data from the table: "lesson_student_subscriptions" using primary key columns */
  lesson_student_subscriptions_by_pk?: Maybe<Lesson_Student_Subscriptions>;
  /** fetch data from the table: "lessons" */
  lessons: Array<Lessons>;
  /** fetch aggregated fields from the table: "lessons" */
  lessons_aggregate: Lessons_Aggregate;
  /** fetch data from the table: "lessons" using primary key columns */
  lessons_by_pk?: Maybe<Lessons>;
  /** fetch data from the table: "lessons_courses" */
  lessons_courses: Array<Lessons_Courses>;
  /** fetch aggregated fields from the table: "lessons_courses" */
  lessons_courses_aggregate: Lessons_Courses_Aggregate;
  /** fetch data from the table: "lessons_courses" using primary key columns */
  lessons_courses_by_pk?: Maybe<Lessons_Courses>;
  /** fetch data from the table: "lessons_teachers" */
  lessons_teachers: Array<Lessons_Teachers>;
  /** fetch aggregated fields from the table: "lessons_teachers" */
  lessons_teachers_aggregate: Lessons_Teachers_Aggregate;
  /** fetch data from the table: "lessons_teachers" using primary key columns */
  lessons_teachers_by_pk?: Maybe<Lessons_Teachers>;
  /** fetch data from the table: "location_types" */
  location_types: Array<Location_Types>;
  /** fetch aggregated fields from the table: "location_types" */
  location_types_aggregate: Location_Types_Aggregate;
  /** fetch data from the table: "location_types" using primary key columns */
  location_types_by_pk?: Maybe<Location_Types>;
  /** fetch data from the table: "locations" */
  locations: Array<Locations>;
  /** fetch aggregated fields from the table: "locations" */
  locations_aggregate: Locations_Aggregate;
  /** fetch data from the table: "locations" using primary key columns */
  locations_by_pk?: Maybe<Locations>;
  /** fetch data from the table: "media" */
  media: Array<Media>;
  /** fetch aggregated fields from the table: "media" */
  media_aggregate: Media_Aggregate;
  /** fetch data from the table: "media" using primary key columns */
  media_by_pk?: Maybe<Media>;
  /** fetch data from the table: "organizations" */
  organizations: Array<Organizations>;
  /** fetch aggregated fields from the table: "organizations" */
  organizations_aggregate: Organizations_Aggregate;
  /** fetch data from the table: "organizations" using primary key columns */
  organizations_by_pk?: Maybe<Organizations>;
  /** fetch data from the table: "parents" */
  parents: Array<Parents>;
  /** fetch aggregated fields from the table: "parents" */
  parents_aggregate: Parents_Aggregate;
  /** fetch data from the table: "parents" using primary key columns */
  parents_by_pk?: Maybe<Parents>;
  /** fetch data from the table: "partner_dynamic_form_field_values" */
  partner_dynamic_form_field_values: Array<Partner_Dynamic_Form_Field_Values>;
  /** fetch aggregated fields from the table: "partner_dynamic_form_field_values" */
  partner_dynamic_form_field_values_aggregate: Partner_Dynamic_Form_Field_Values_Aggregate;
  /** fetch data from the table: "partner_dynamic_form_field_values" using primary key columns */
  partner_dynamic_form_field_values_by_pk?: Maybe<Partner_Dynamic_Form_Field_Values>;
  /** fetch data from the table: "partner_form_configs" */
  partner_form_configs: Array<Partner_Form_Configs>;
  /** fetch aggregated fields from the table: "partner_form_configs" */
  partner_form_configs_aggregate: Partner_Form_Configs_Aggregate;
  /** fetch data from the table: "partner_form_configs" using primary key columns */
  partner_form_configs_by_pk?: Maybe<Partner_Form_Configs>;
  /** fetch data from the table: "plans" */
  plans: Array<Plans>;
  /** fetch aggregated fields from the table: "plans" */
  plans_aggregate: Plans_Aggregate;
  /** fetch data from the table: "plans" using primary key columns */
  plans_by_pk?: Maybe<Plans>;
  /** fetch data from the table: "prefecture" */
  prefecture: Array<Prefecture>;
  /** fetch aggregated fields from the table: "prefecture" */
  prefecture_aggregate: Prefecture_Aggregate;
  /** fetch data from the table: "prefecture" using primary key columns */
  prefecture_by_pk?: Maybe<Prefecture>;
  /** fetch data from the table: "preset_study_plans" */
  preset_study_plans: Array<Preset_Study_Plans>;
  /** fetch aggregated fields from the table: "preset_study_plans" */
  preset_study_plans_aggregate: Preset_Study_Plans_Aggregate;
  /** fetch data from the table: "preset_study_plans" using primary key columns */
  preset_study_plans_by_pk?: Maybe<Preset_Study_Plans>;
  /** fetch data from the table: "preset_study_plans_weekly" */
  preset_study_plans_weekly: Array<Preset_Study_Plans_Weekly>;
  /** fetch aggregated fields from the table: "preset_study_plans_weekly" */
  preset_study_plans_weekly_aggregate: Preset_Study_Plans_Weekly_Aggregate;
  /** fetch data from the table: "preset_study_plans_weekly" using primary key columns */
  preset_study_plans_weekly_by_pk?: Maybe<Preset_Study_Plans_Weekly>;
  /** fetch data from the table: "preset_study_plans_weekly_format" */
  preset_study_plans_weekly_format: Array<Preset_Study_Plans_Weekly_Format>;
  /** fetch aggregated fields from the table: "preset_study_plans_weekly_format" */
  preset_study_plans_weekly_format_aggregate: Preset_Study_Plans_Weekly_Format_Aggregate;
  /** fetch data from the table: "promotion_rules" */
  promotion_rules: Array<Promotion_Rules>;
  /** fetch aggregated fields from the table: "promotion_rules" */
  promotion_rules_aggregate: Promotion_Rules_Aggregate;
  /** fetch data from the table: "promotion_rules" using primary key columns */
  promotion_rules_by_pk?: Maybe<Promotion_Rules>;
  /** fetch data from the table: "promotions" */
  promotions: Array<Promotions>;
  /** fetch aggregated fields from the table: "promotions" */
  promotions_aggregate: Promotions_Aggregate;
  /** fetch data from the table: "promotions" using primary key columns */
  promotions_by_pk?: Maybe<Promotions>;
  /** fetch data from the table: "questionnaire_questions" */
  questionnaire_questions: Array<Questionnaire_Questions>;
  /** fetch aggregated fields from the table: "questionnaire_questions" */
  questionnaire_questions_aggregate: Questionnaire_Questions_Aggregate;
  /** fetch data from the table: "questionnaire_questions" using primary key columns */
  questionnaire_questions_by_pk?: Maybe<Questionnaire_Questions>;
  /** fetch data from the table: "questionnaire_user_answers" */
  questionnaire_user_answers: Array<Questionnaire_User_Answers>;
  /** fetch aggregated fields from the table: "questionnaire_user_answers" */
  questionnaire_user_answers_aggregate: Questionnaire_User_Answers_Aggregate;
  /** fetch data from the table: "questionnaire_user_answers" using primary key columns */
  questionnaire_user_answers_by_pk?: Maybe<Questionnaire_User_Answers>;
  /** fetch data from the table: "questionnaires" */
  questionnaires: Array<Questionnaires>;
  /** fetch aggregated fields from the table: "questionnaires" */
  questionnaires_aggregate: Questionnaires_Aggregate;
  /** fetch data from the table: "questionnaires" using primary key columns */
  questionnaires_by_pk?: Maybe<Questionnaires>;
  /** fetch data from the table: "questions" */
  questions: Array<Questions>;
  /** fetch aggregated fields from the table: "questions" */
  questions_aggregate: Questions_Aggregate;
  /** fetch data from the table: "questions" using primary key columns */
  questions_by_pk?: Maybe<Questions>;
  /** fetch data from the table: "quiz_sets" */
  quiz_sets: Array<Quiz_Sets>;
  /** fetch aggregated fields from the table: "quiz_sets" */
  quiz_sets_aggregate: Quiz_Sets_Aggregate;
  /** fetch data from the table: "quiz_sets" using primary key columns */
  quiz_sets_by_pk?: Maybe<Quiz_Sets>;
  /** fetch data from the table: "quizsets" */
  quizsets: Array<Quizsets>;
  /** fetch aggregated fields from the table: "quizsets" */
  quizsets_aggregate: Quizsets_Aggregate;
  /** fetch data from the table: "quizsets" using primary key columns */
  quizsets_by_pk?: Maybe<Quizsets>;
  /** fetch data from the table: "quizzes" */
  quizzes: Array<Quizzes>;
  /** fetch aggregated fields from the table: "quizzes" */
  quizzes_aggregate: Quizzes_Aggregate;
  /** fetch data from the table: "quizzes" using primary key columns */
  quizzes_by_pk?: Maybe<Quizzes>;
  /** fetch data from the table: "role" */
  role: Array<Role>;
  /** fetch aggregated fields from the table: "role" */
  role_aggregate: Role_Aggregate;
  /** fetch data from the table: "role" using primary key columns */
  role_by_pk?: Maybe<Role>;
  /** fetch data from the table: "scheduler" */
  scheduler: Array<Scheduler>;
  /** fetch aggregated fields from the table: "scheduler" */
  scheduler_aggregate: Scheduler_Aggregate;
  /** fetch data from the table: "scheduler" using primary key columns */
  scheduler_by_pk?: Maybe<Scheduler>;
  /** fetch data from the table: "school_admins" */
  school_admins: Array<School_Admins>;
  /** fetch aggregated fields from the table: "school_admins" */
  school_admins_aggregate: School_Admins_Aggregate;
  /** fetch data from the table: "school_admins" using primary key columns */
  school_admins_by_pk?: Maybe<School_Admins>;
  /** fetch data from the table: "school_configs" */
  school_configs: Array<School_Configs>;
  /** fetch aggregated fields from the table: "school_configs" */
  school_configs_aggregate: School_Configs_Aggregate;
  /** fetch data from the table: "school_configs" using primary key columns */
  school_configs_by_pk?: Maybe<School_Configs>;
  /** fetch data from the table: "school_course" */
  school_course: Array<School_Course>;
  /** fetch aggregated fields from the table: "school_course" */
  school_course_aggregate: School_Course_Aggregate;
  /** fetch data from the table: "school_course" using primary key columns */
  school_course_by_pk?: Maybe<School_Course>;
  /** fetch data from the table: "school_info" */
  school_info: Array<School_Info>;
  /** fetch aggregated fields from the table: "school_info" */
  school_info_aggregate: School_Info_Aggregate;
  /** fetch data from the table: "school_info" using primary key columns */
  school_info_by_pk?: Maybe<School_Info>;
  /** fetch data from the table: "school_level" */
  school_level: Array<School_Level>;
  /** fetch aggregated fields from the table: "school_level" */
  school_level_aggregate: School_Level_Aggregate;
  /** fetch data from the table: "school_level" using primary key columns */
  school_level_by_pk?: Maybe<School_Level>;
  /** fetch data from the table: "school_level_grade" */
  school_level_grade: Array<School_Level_Grade>;
  /** fetch aggregated fields from the table: "school_level_grade" */
  school_level_grade_aggregate: School_Level_Grade_Aggregate;
  /** fetch data from the table: "school_level_grade" using primary key columns */
  school_level_grade_by_pk?: Maybe<School_Level_Grade>;
  /** fetch data from the table: "schools" */
  schools: Array<Schools>;
  /** fetch aggregated fields from the table: "schools" */
  schools_aggregate: Schools_Aggregate;
  /** fetch data from the table: "schools" using primary key columns */
  schools_by_pk?: Maybe<Schools>;
  /** execute function "search_courses_by_name" which returns "courses" */
  search_courses_by_name: Array<Courses>;
  /** execute function "search_courses_by_name" and query aggregates on result of table type "courses" */
  search_courses_by_name_aggregate: Courses_Aggregate;
  /** fetch data from the table: "staff" */
  staff: Array<Staff>;
  /** fetch aggregated fields from the table: "staff" */
  staff_aggregate: Staff_Aggregate;
  /** fetch data from the table: "staff" using primary key columns */
  staff_by_pk?: Maybe<Staff>;
  /** fetch data from the table: "student_entryexit_records" */
  student_entryexit_records: Array<Student_Entryexit_Records>;
  /** fetch aggregated fields from the table: "student_entryexit_records" */
  student_entryexit_records_aggregate: Student_Entryexit_Records_Aggregate;
  /** fetch data from the table: "student_entryexit_records" using primary key columns */
  student_entryexit_records_by_pk?: Maybe<Student_Entryexit_Records>;
  /** fetch data from the table: "student_parents" */
  student_parents: Array<Student_Parents>;
  /** fetch aggregated fields from the table: "student_parents" */
  student_parents_aggregate: Student_Parents_Aggregate;
  /** fetch data from the table: "student_parents" using primary key columns */
  student_parents_by_pk?: Maybe<Student_Parents>;
  /** fetch data from the table: "student_qr" */
  student_qr: Array<Student_Qr>;
  /** fetch aggregated fields from the table: "student_qr" */
  student_qr_aggregate: Student_Qr_Aggregate;
  /** fetch data from the table: "student_qr" using primary key columns */
  student_qr_by_pk?: Maybe<Student_Qr>;
  /** fetch data from the table: "student_subscriptions" */
  student_subscriptions: Array<Student_Subscriptions>;
  /** fetch aggregated fields from the table: "student_subscriptions" */
  student_subscriptions_aggregate: Student_Subscriptions_Aggregate;
  /** fetch data from the table: "student_subscriptions" using primary key columns */
  student_subscriptions_by_pk?: Maybe<Student_Subscriptions>;
  /** fetch data from the table: "students" */
  students: Array<Students>;
  /** fetch aggregated fields from the table: "students" */
  students_aggregate: Students_Aggregate;
  /** fetch data from the table: "students_assigned_coaches" */
  students_assigned_coaches: Array<Students_Assigned_Coaches>;
  /** fetch aggregated fields from the table: "students_assigned_coaches" */
  students_assigned_coaches_aggregate: Students_Assigned_Coaches_Aggregate;
  /** fetch data from the table: "students" using primary key columns */
  students_by_pk?: Maybe<Students>;
  /** fetch data from the table: "tags" */
  tags: Array<Tags>;
  /** fetch aggregated fields from the table: "tags" */
  tags_aggregate: Tags_Aggregate;
  /** fetch data from the table: "tags" using primary key columns */
  tags_by_pk?: Maybe<Tags>;
  /** fetch data from the table: "teacher_by_school_id" */
  teacher_by_school_id: Array<Teacher_By_School_Id>;
  /** fetch aggregated fields from the table: "teacher_by_school_id" */
  teacher_by_school_id_aggregate: Teacher_By_School_Id_Aggregate;
  /** fetch data from the table: "teachers" */
  teachers: Array<Teachers>;
  /** fetch aggregated fields from the table: "teachers" */
  teachers_aggregate: Teachers_Aggregate;
  /** fetch data from the table: "teachers" using primary key columns */
  teachers_by_pk?: Maybe<Teachers>;
  /** fetch data from the table: "topics" */
  topics: Array<Topics>;
  /** fetch aggregated fields from the table: "topics" */
  topics_aggregate: Topics_Aggregate;
  /** fetch data from the table: "topics" using primary key columns */
  topics_by_pk?: Maybe<Topics>;
  /** fetch data from the table: "topics_learning_objectives" */
  topics_learning_objectives: Array<Topics_Learning_Objectives>;
  /** fetch aggregated fields from the table: "topics_learning_objectives" */
  topics_learning_objectives_aggregate: Topics_Learning_Objectives_Aggregate;
  /** fetch data from the table: "topics_learning_objectives" using primary key columns */
  topics_learning_objectives_by_pk?: Maybe<Topics_Learning_Objectives>;
  /** fetch data from the table: "user_access_paths" */
  user_access_paths: Array<User_Access_Paths>;
  /** fetch aggregated fields from the table: "user_access_paths" */
  user_access_paths_aggregate: User_Access_Paths_Aggregate;
  /** fetch data from the table: "user_access_paths" using primary key columns */
  user_access_paths_by_pk?: Maybe<User_Access_Paths>;
  /** fetch data from the table: "user_address" */
  user_address: Array<User_Address>;
  /** fetch aggregated fields from the table: "user_address" */
  user_address_aggregate: User_Address_Aggregate;
  /** fetch data from the table: "user_address" using primary key columns */
  user_address_by_pk?: Maybe<User_Address>;
  /** fetch data from the table: "user_group" */
  user_group: Array<User_Group>;
  /** fetch aggregated fields from the table: "user_group" */
  user_group_aggregate: User_Group_Aggregate;
  /** fetch data from the table: "user_group" using primary key columns */
  user_group_by_pk?: Maybe<User_Group>;
  /** fetch data from the table: "user_group_member" */
  user_group_member: Array<User_Group_Member>;
  /** fetch aggregated fields from the table: "user_group_member" */
  user_group_member_aggregate: User_Group_Member_Aggregate;
  /** fetch data from the table: "user_group_member" using primary key columns */
  user_group_member_by_pk?: Maybe<User_Group_Member>;
  /** fetch data from the table: "user_tag" */
  user_tag: Array<User_Tag>;
  /** fetch aggregated fields from the table: "user_tag" */
  user_tag_aggregate: User_Tag_Aggregate;
  /** fetch data from the table: "user_tag" using primary key columns */
  user_tag_by_pk?: Maybe<User_Tag>;
  /** fetch data from the table: "users" */
  users: Array<Users>;
  /** fetch aggregated fields from the table: "users" */
  users_aggregate: Users_Aggregate;
  /** fetch data from the table: "users" using primary key columns */
  users_by_pk?: Maybe<Users>;
  /** fetch data from the table: "users_info_notifications" */
  users_info_notifications: Array<Users_Info_Notifications>;
  /** fetch aggregated fields from the table: "users_info_notifications" */
  users_info_notifications_aggregate: Users_Info_Notifications_Aggregate;
  /** fetch data from the table: "users_info_notifications" using primary key columns */
  users_info_notifications_by_pk?: Maybe<Users_Info_Notifications>;
};


/** subscription root */
export type Subscription_RootAssignmentsArgs = {
  distinct_on?: InputMaybe<Array<Assignments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Assignments_Order_By>>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAssignments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Assignments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Assignments_Order_By>>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAssignments_By_PkArgs = {
  assignment_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootBankArgs = {
  distinct_on?: InputMaybe<Array<Bank_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bank_Order_By>>;
  where?: InputMaybe<Bank_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBank_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Bank_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bank_Order_By>>;
  where?: InputMaybe<Bank_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBank_BranchArgs = {
  distinct_on?: InputMaybe<Array<Bank_Branch_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bank_Branch_Order_By>>;
  where?: InputMaybe<Bank_Branch_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBank_Branch_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Bank_Branch_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Bank_Branch_Order_By>>;
  where?: InputMaybe<Bank_Branch_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBank_Branch_By_PkArgs = {
  bank_branch_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootBank_By_PkArgs = {
  bank_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootBooksArgs = {
  distinct_on?: InputMaybe<Array<Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Books_Order_By>>;
  where?: InputMaybe<Books_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBooks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Books_Order_By>>;
  where?: InputMaybe<Books_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBooks_By_PkArgs = {
  book_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootBooks_ChaptersArgs = {
  distinct_on?: InputMaybe<Array<Books_Chapters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Books_Chapters_Order_By>>;
  where?: InputMaybe<Books_Chapters_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBooks_Chapters_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Books_Chapters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Books_Chapters_Order_By>>;
  where?: InputMaybe<Books_Chapters_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBooks_Chapters_By_PkArgs = {
  book_id: Scalars['String'];
  chapter_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootChaptersArgs = {
  distinct_on?: InputMaybe<Array<Chapters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Chapters_Order_By>>;
  where?: InputMaybe<Chapters_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChapters_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Chapters_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Chapters_Order_By>>;
  where?: InputMaybe<Chapters_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChapters_By_PkArgs = {
  chapter_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootCitiesArgs = {
  distinct_on?: InputMaybe<Array<Cities_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Cities_Order_By>>;
  where?: InputMaybe<Cities_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCities_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Cities_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Cities_Order_By>>;
  where?: InputMaybe<Cities_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCities_By_PkArgs = {
  city_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootClassArgs = {
  distinct_on?: InputMaybe<Array<Class_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Order_By>>;
  where?: InputMaybe<Class_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootClass_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Class_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Order_By>>;
  where?: InputMaybe<Class_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootClass_By_PkArgs = {
  class_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootClass_MemberArgs = {
  distinct_on?: InputMaybe<Array<Class_Member_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Member_Order_By>>;
  where?: InputMaybe<Class_Member_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootClass_Member_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Class_Member_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Member_Order_By>>;
  where?: InputMaybe<Class_Member_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootClass_Member_By_PkArgs = {
  class_member_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootClass_MembersArgs = {
  distinct_on?: InputMaybe<Array<Class_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Members_Order_By>>;
  where?: InputMaybe<Class_Members_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootClass_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Class_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Members_Order_By>>;
  where?: InputMaybe<Class_Members_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootClass_Members_By_PkArgs = {
  class_member_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootClassesArgs = {
  distinct_on?: InputMaybe<Array<Classes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Classes_Order_By>>;
  where?: InputMaybe<Classes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootClasses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Classes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Classes_Order_By>>;
  where?: InputMaybe<Classes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootClasses_By_PkArgs = {
  class_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootCoachesArgs = {
  distinct_on?: InputMaybe<Array<Coaches_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Coaches_Order_By>>;
  where?: InputMaybe<Coaches_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCoaches_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Coaches_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Coaches_Order_By>>;
  where?: InputMaybe<Coaches_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCoaches_By_PkArgs = {
  coach_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootCod_OrdersArgs = {
  distinct_on?: InputMaybe<Array<Cod_Orders_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Cod_Orders_Order_By>>;
  where?: InputMaybe<Cod_Orders_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCod_Orders_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Cod_Orders_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Cod_Orders_Order_By>>;
  where?: InputMaybe<Cod_Orders_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCod_Orders_By_PkArgs = {
  cod_order_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootConversion_TasksArgs = {
  distinct_on?: InputMaybe<Array<Conversion_Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Conversion_Tasks_Order_By>>;
  where?: InputMaybe<Conversion_Tasks_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootConversion_Tasks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Conversion_Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Conversion_Tasks_Order_By>>;
  where?: InputMaybe<Conversion_Tasks_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootConversion_Tasks_By_PkArgs = {
  task_uuid: Scalars['String'];
};


/** subscription root */
export type Subscription_RootCourse_Access_PathsArgs = {
  distinct_on?: InputMaybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Course_Access_Paths_Order_By>>;
  where?: InputMaybe<Course_Access_Paths_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourse_Access_Paths_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Course_Access_Paths_Order_By>>;
  where?: InputMaybe<Course_Access_Paths_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourse_Access_Paths_By_PkArgs = {
  course_id: Scalars['String'];
  location_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootCoursesArgs = {
  distinct_on?: InputMaybe<Array<Courses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Order_By>>;
  where?: InputMaybe<Courses_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Courses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Order_By>>;
  where?: InputMaybe<Courses_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourses_BooksArgs = {
  distinct_on?: InputMaybe<Array<Courses_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Books_Order_By>>;
  where?: InputMaybe<Courses_Books_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourses_Books_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Courses_Books_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Books_Order_By>>;
  where?: InputMaybe<Courses_Books_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourses_Books_By_PkArgs = {
  book_id: Scalars['String'];
  course_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootCourses_By_PkArgs = {
  course_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootCourses_ClassesArgs = {
  distinct_on?: InputMaybe<Array<Courses_Classes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Classes_Order_By>>;
  where?: InputMaybe<Courses_Classes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourses_Classes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Courses_Classes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Classes_Order_By>>;
  where?: InputMaybe<Courses_Classes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootCourses_Classes_By_PkArgs = {
  class_id: Scalars['Int'];
  course_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootDistrictsArgs = {
  distinct_on?: InputMaybe<Array<Districts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Districts_Order_By>>;
  where?: InputMaybe<Districts_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootDistricts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Districts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Districts_Order_By>>;
  where?: InputMaybe<Districts_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootDistricts_By_PkArgs = {
  district_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootFind_Quiz_By_Lo_IdArgs = {
  args: Find_Quiz_By_Lo_Id_Args;
  distinct_on?: InputMaybe<Array<Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizzes_Order_By>>;
  where?: InputMaybe<Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootFind_Quiz_By_Lo_Id_AggregateArgs = {
  args: Find_Quiz_By_Lo_Id_Args;
  distinct_on?: InputMaybe<Array<Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizzes_Order_By>>;
  where?: InputMaybe<Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootFind_Teacher_By_School_IdArgs = {
  args: Find_Teacher_By_School_Id_Args;
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootFind_Teacher_By_School_Id_AggregateArgs = {
  args: Find_Teacher_By_School_Id_Args;
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Locations_Active_By_Course_IdArgs = {
  args: Get_Locations_Active_By_Course_Id_Args;
  distinct_on?: InputMaybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Course_Access_Paths_Order_By>>;
  where?: InputMaybe<Course_Access_Paths_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Locations_Active_By_Course_Id_AggregateArgs = {
  args: Get_Locations_Active_By_Course_Id_Args;
  distinct_on?: InputMaybe<Array<Course_Access_Paths_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Course_Access_Paths_Order_By>>;
  where?: InputMaybe<Course_Access_Paths_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Locations_Lowest_LevelArgs = {
  args: Get_Locations_Lowest_Level_Args;
  distinct_on?: InputMaybe<Array<Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Locations_Order_By>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Locations_Lowest_Level_AggregateArgs = {
  args: Get_Locations_Lowest_Level_Args;
  distinct_on?: InputMaybe<Array<Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Locations_Order_By>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Lowest_Location_TypesArgs = {
  distinct_on?: InputMaybe<Array<Location_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Location_Types_Order_By>>;
  where?: InputMaybe<Location_Types_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Lowest_Location_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Location_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Location_Types_Order_By>>;
  where?: InputMaybe<Location_Types_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Partner_Dynamic_Form_Field_Values_By_StudentArgs = {
  args: Get_Partner_Dynamic_Form_Field_Values_By_Student_Args;
  distinct_on?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: InputMaybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Partner_Dynamic_Form_Field_Values_By_Student_AggregateArgs = {
  args: Get_Partner_Dynamic_Form_Field_Values_By_Student_Args;
  distinct_on?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: InputMaybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Previous_Report_Of_StudentArgs = {
  args: Get_Previous_Report_Of_Student_Args;
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Previous_Report_Of_Student_AggregateArgs = {
  args: Get_Previous_Report_Of_Student_Args;
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Previous_Report_Of_Student_V2Args = {
  args: Get_Previous_Report_Of_Student_V2_Args;
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Previous_Report_Of_Student_V2_AggregateArgs = {
  args: Get_Previous_Report_Of_Student_V2_Args;
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Previous_Report_Of_Student_V3Args = {
  args: Get_Previous_Report_Of_Student_V3_Args;
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGet_Previous_Report_Of_Student_V3_AggregateArgs = {
  args: Get_Previous_Report_Of_Student_V3_Args;
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGranted_RoleArgs = {
  distinct_on?: InputMaybe<Array<Granted_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Granted_Role_Order_By>>;
  where?: InputMaybe<Granted_Role_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGranted_Role_Access_PathArgs = {
  distinct_on?: InputMaybe<Array<Granted_Role_Access_Path_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Granted_Role_Access_Path_Order_By>>;
  where?: InputMaybe<Granted_Role_Access_Path_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGranted_Role_Access_Path_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Granted_Role_Access_Path_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Granted_Role_Access_Path_Order_By>>;
  where?: InputMaybe<Granted_Role_Access_Path_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGranted_Role_Access_Path_By_PkArgs = {
  granted_role_id: Scalars['String'];
  location_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootGranted_Role_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Granted_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Granted_Role_Order_By>>;
  where?: InputMaybe<Granted_Role_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGranted_Role_By_PkArgs = {
  granted_role_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootHub_ToursArgs = {
  distinct_on?: InputMaybe<Array<Hub_Tours_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Hub_Tours_Order_By>>;
  where?: InputMaybe<Hub_Tours_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootHub_Tours_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Hub_Tours_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Hub_Tours_Order_By>>;
  where?: InputMaybe<Hub_Tours_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootHub_Tours_By_PkArgs = {
  hub_id: Scalars['Int'];
  student_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootHubsArgs = {
  distinct_on?: InputMaybe<Array<Hubs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Hubs_Order_By>>;
  where?: InputMaybe<Hubs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootHubs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Hubs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Hubs_Order_By>>;
  where?: InputMaybe<Hubs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootHubs_By_PkArgs = {
  hub_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootInfo_Notification_MsgsArgs = {
  distinct_on?: InputMaybe<Array<Info_Notification_Msgs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notification_Msgs_Order_By>>;
  where?: InputMaybe<Info_Notification_Msgs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootInfo_Notification_Msgs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Info_Notification_Msgs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notification_Msgs_Order_By>>;
  where?: InputMaybe<Info_Notification_Msgs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootInfo_Notification_Msgs_By_PkArgs = {
  notification_msg_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootInfo_NotificationsArgs = {
  distinct_on?: InputMaybe<Array<Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notifications_Order_By>>;
  where?: InputMaybe<Info_Notifications_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootInfo_Notifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notifications_Order_By>>;
  where?: InputMaybe<Info_Notifications_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootInfo_Notifications_By_PkArgs = {
  notification_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootInfo_Notifications_TagsArgs = {
  distinct_on?: InputMaybe<Array<Info_Notifications_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notifications_Tags_Order_By>>;
  where?: InputMaybe<Info_Notifications_Tags_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootInfo_Notifications_Tags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Info_Notifications_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notifications_Tags_Order_By>>;
  where?: InputMaybe<Info_Notifications_Tags_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootInfo_Notifications_Tags_By_PkArgs = {
  notification_tag_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLearning_ObjectivesArgs = {
  distinct_on?: InputMaybe<Array<Learning_Objectives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Learning_Objectives_Order_By>>;
  where?: InputMaybe<Learning_Objectives_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLearning_Objectives_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Learning_Objectives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Learning_Objectives_Order_By>>;
  where?: InputMaybe<Learning_Objectives_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLearning_Objectives_By_PkArgs = {
  lo_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLesson_GroupsArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Groups_Order_By>>;
  where?: InputMaybe<Lesson_Groups_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Groups_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Groups_Order_By>>;
  where?: InputMaybe<Lesson_Groups_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Groups_By_PkArgs = {
  course_id: Scalars['String'];
  lesson_group_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLesson_MembersArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Members_Order_By>>;
  where?: InputMaybe<Lesson_Members_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Members_Order_By>>;
  where?: InputMaybe<Lesson_Members_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Members_By_PkArgs = {
  lesson_id: Scalars['String'];
  user_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLesson_Report_DetailsArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Report_Details_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Report_Details_Order_By>>;
  where?: InputMaybe<Lesson_Report_Details_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Report_Details_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Report_Details_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Report_Details_Order_By>>;
  where?: InputMaybe<Lesson_Report_Details_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Report_Details_By_PkArgs = {
  lesson_report_detail_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLesson_ReportsArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Reports_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Reports_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Reports_Order_By>>;
  where?: InputMaybe<Lesson_Reports_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Reports_By_PkArgs = {
  lesson_report_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLesson_SchedulesArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Schedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Schedules_Order_By>>;
  where?: InputMaybe<Lesson_Schedules_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Schedules_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Schedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Schedules_Order_By>>;
  where?: InputMaybe<Lesson_Schedules_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Student_Subscription_Access_PathArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Student_Subscription_Access_Path_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Student_Subscription_Access_Path_Order_By>>;
  where?: InputMaybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Student_Subscription_Access_Path_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Student_Subscription_Access_Path_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Student_Subscription_Access_Path_Order_By>>;
  where?: InputMaybe<Lesson_Student_Subscription_Access_Path_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Student_Subscription_Access_Path_By_PkArgs = {
  location_id: Scalars['String'];
  student_subscription_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLesson_Student_SubscriptionsArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Student_Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Student_Subscriptions_Order_By>>;
  where?: InputMaybe<Lesson_Student_Subscriptions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Student_Subscriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Student_Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Student_Subscriptions_Order_By>>;
  where?: InputMaybe<Lesson_Student_Subscriptions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLesson_Student_Subscriptions_By_PkArgs = {
  student_subscription_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLessonsArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Order_By>>;
  where?: InputMaybe<Lessons_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLessons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Order_By>>;
  where?: InputMaybe<Lessons_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLessons_By_PkArgs = {
  lesson_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLessons_CoursesArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Courses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Courses_Order_By>>;
  where?: InputMaybe<Lessons_Courses_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLessons_Courses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Courses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Courses_Order_By>>;
  where?: InputMaybe<Lessons_Courses_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLessons_Courses_By_PkArgs = {
  course_id: Scalars['String'];
  lesson_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLessons_TeachersArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Teachers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Teachers_Order_By>>;
  where?: InputMaybe<Lessons_Teachers_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLessons_Teachers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Teachers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Teachers_Order_By>>;
  where?: InputMaybe<Lessons_Teachers_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLessons_Teachers_By_PkArgs = {
  lesson_id: Scalars['String'];
  teacher_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLocation_TypesArgs = {
  distinct_on?: InputMaybe<Array<Location_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Location_Types_Order_By>>;
  where?: InputMaybe<Location_Types_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLocation_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Location_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Location_Types_Order_By>>;
  where?: InputMaybe<Location_Types_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLocation_Types_By_PkArgs = {
  location_type_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootLocationsArgs = {
  distinct_on?: InputMaybe<Array<Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Locations_Order_By>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLocations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Locations_Order_By>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootLocations_By_PkArgs = {
  location_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootMediaArgs = {
  distinct_on?: InputMaybe<Array<Media_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Media_Order_By>>;
  where?: InputMaybe<Media_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMedia_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Media_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Media_Order_By>>;
  where?: InputMaybe<Media_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMedia_By_PkArgs = {
  media_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootOrganizationsArgs = {
  distinct_on?: InputMaybe<Array<Organizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Organizations_Order_By>>;
  where?: InputMaybe<Organizations_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootOrganizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Organizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Organizations_Order_By>>;
  where?: InputMaybe<Organizations_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootOrganizations_By_PkArgs = {
  organization_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootParentsArgs = {
  distinct_on?: InputMaybe<Array<Parents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Parents_Order_By>>;
  where?: InputMaybe<Parents_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootParents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Parents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Parents_Order_By>>;
  where?: InputMaybe<Parents_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootParents_By_PkArgs = {
  parent_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootPartner_Dynamic_Form_Field_ValuesArgs = {
  distinct_on?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: InputMaybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPartner_Dynamic_Form_Field_Values_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Dynamic_Form_Field_Values_Order_By>>;
  where?: InputMaybe<Partner_Dynamic_Form_Field_Values_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPartner_Dynamic_Form_Field_Values_By_PkArgs = {
  dynamic_form_field_value_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootPartner_Form_ConfigsArgs = {
  distinct_on?: InputMaybe<Array<Partner_Form_Configs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Form_Configs_Order_By>>;
  where?: InputMaybe<Partner_Form_Configs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPartner_Form_Configs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Partner_Form_Configs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Partner_Form_Configs_Order_By>>;
  where?: InputMaybe<Partner_Form_Configs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPartner_Form_Configs_By_PkArgs = {
  form_config_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootPlansArgs = {
  distinct_on?: InputMaybe<Array<Plans_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Plans_Order_By>>;
  where?: InputMaybe<Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPlans_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Plans_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Plans_Order_By>>;
  where?: InputMaybe<Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPlans_By_PkArgs = {
  country: Scalars['String'];
  plan_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootPrefectureArgs = {
  distinct_on?: InputMaybe<Array<Prefecture_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Prefecture_Order_By>>;
  where?: InputMaybe<Prefecture_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPrefecture_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Prefecture_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Prefecture_Order_By>>;
  where?: InputMaybe<Prefecture_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPrefecture_By_PkArgs = {
  prefecture_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootPreset_Study_PlansArgs = {
  distinct_on?: InputMaybe<Array<Preset_Study_Plans_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Preset_Study_Plans_Order_By>>;
  where?: InputMaybe<Preset_Study_Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPreset_Study_Plans_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Preset_Study_Plans_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Preset_Study_Plans_Order_By>>;
  where?: InputMaybe<Preset_Study_Plans_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPreset_Study_Plans_By_PkArgs = {
  preset_study_plan_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootPreset_Study_Plans_WeeklyArgs = {
  distinct_on?: InputMaybe<Array<Preset_Study_Plans_Weekly_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Preset_Study_Plans_Weekly_Order_By>>;
  where?: InputMaybe<Preset_Study_Plans_Weekly_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPreset_Study_Plans_Weekly_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Preset_Study_Plans_Weekly_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Preset_Study_Plans_Weekly_Order_By>>;
  where?: InputMaybe<Preset_Study_Plans_Weekly_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPreset_Study_Plans_Weekly_By_PkArgs = {
  preset_study_plan_weekly_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootPreset_Study_Plans_Weekly_FormatArgs = {
  distinct_on?: InputMaybe<Array<Preset_Study_Plans_Weekly_Format_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Preset_Study_Plans_Weekly_Format_Order_By>>;
  where?: InputMaybe<Preset_Study_Plans_Weekly_Format_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPreset_Study_Plans_Weekly_Format_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Preset_Study_Plans_Weekly_Format_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Preset_Study_Plans_Weekly_Format_Order_By>>;
  where?: InputMaybe<Preset_Study_Plans_Weekly_Format_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPromotion_RulesArgs = {
  distinct_on?: InputMaybe<Array<Promotion_Rules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Promotion_Rules_Order_By>>;
  where?: InputMaybe<Promotion_Rules_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPromotion_Rules_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Promotion_Rules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Promotion_Rules_Order_By>>;
  where?: InputMaybe<Promotion_Rules_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPromotion_Rules_By_PkArgs = {
  promotion_rule_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootPromotionsArgs = {
  distinct_on?: InputMaybe<Array<Promotions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Promotions_Order_By>>;
  where?: InputMaybe<Promotions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPromotions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Promotions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Promotions_Order_By>>;
  where?: InputMaybe<Promotions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPromotions_By_PkArgs = {
  promotion_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootQuestionnaire_QuestionsArgs = {
  distinct_on?: InputMaybe<Array<Questionnaire_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questionnaire_Questions_Order_By>>;
  where?: InputMaybe<Questionnaire_Questions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuestionnaire_Questions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Questionnaire_Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questionnaire_Questions_Order_By>>;
  where?: InputMaybe<Questionnaire_Questions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuestionnaire_Questions_By_PkArgs = {
  questionnaire_question_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootQuestionnaire_User_AnswersArgs = {
  distinct_on?: InputMaybe<Array<Questionnaire_User_Answers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questionnaire_User_Answers_Order_By>>;
  where?: InputMaybe<Questionnaire_User_Answers_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuestionnaire_User_Answers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Questionnaire_User_Answers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questionnaire_User_Answers_Order_By>>;
  where?: InputMaybe<Questionnaire_User_Answers_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuestionnaire_User_Answers_By_PkArgs = {
  answer_id: Scalars['String'];
  user_notification_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootQuestionnairesArgs = {
  distinct_on?: InputMaybe<Array<Questionnaires_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questionnaires_Order_By>>;
  where?: InputMaybe<Questionnaires_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuestionnaires_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Questionnaires_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questionnaires_Order_By>>;
  where?: InputMaybe<Questionnaires_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuestionnaires_By_PkArgs = {
  questionnaire_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootQuestionsArgs = {
  distinct_on?: InputMaybe<Array<Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questions_Order_By>>;
  where?: InputMaybe<Questions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuestions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Questions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Questions_Order_By>>;
  where?: InputMaybe<Questions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuestions_By_PkArgs = {
  question_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootQuiz_SetsArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Sets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Sets_Order_By>>;
  where?: InputMaybe<Quiz_Sets_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuiz_Sets_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Quiz_Sets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quiz_Sets_Order_By>>;
  where?: InputMaybe<Quiz_Sets_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuiz_Sets_By_PkArgs = {
  quiz_set_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootQuizsetsArgs = {
  distinct_on?: InputMaybe<Array<Quizsets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizsets_Order_By>>;
  where?: InputMaybe<Quizsets_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuizsets_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Quizsets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizsets_Order_By>>;
  where?: InputMaybe<Quizsets_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuizsets_By_PkArgs = {
  lo_id: Scalars['String'];
  question_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootQuizzesArgs = {
  distinct_on?: InputMaybe<Array<Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizzes_Order_By>>;
  where?: InputMaybe<Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuizzes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Quizzes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Quizzes_Order_By>>;
  where?: InputMaybe<Quizzes_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootQuizzes_By_PkArgs = {
  quiz_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootRoleArgs = {
  distinct_on?: InputMaybe<Array<Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Role_Order_By>>;
  where?: InputMaybe<Role_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRole_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Role_Order_By>>;
  where?: InputMaybe<Role_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRole_By_PkArgs = {
  role_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootSchedulerArgs = {
  distinct_on?: InputMaybe<Array<Scheduler_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Scheduler_Order_By>>;
  where?: InputMaybe<Scheduler_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootScheduler_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Scheduler_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Scheduler_Order_By>>;
  where?: InputMaybe<Scheduler_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootScheduler_By_PkArgs = {
  scheduler_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootSchool_AdminsArgs = {
  distinct_on?: InputMaybe<Array<School_Admins_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Admins_Order_By>>;
  where?: InputMaybe<School_Admins_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchool_Admins_AggregateArgs = {
  distinct_on?: InputMaybe<Array<School_Admins_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Admins_Order_By>>;
  where?: InputMaybe<School_Admins_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchool_Admins_By_PkArgs = {
  school_admin_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootSchool_ConfigsArgs = {
  distinct_on?: InputMaybe<Array<School_Configs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Configs_Order_By>>;
  where?: InputMaybe<School_Configs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchool_Configs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<School_Configs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Configs_Order_By>>;
  where?: InputMaybe<School_Configs_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchool_Configs_By_PkArgs = {
  school_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootSchool_CourseArgs = {
  distinct_on?: InputMaybe<Array<School_Course_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Course_Order_By>>;
  where?: InputMaybe<School_Course_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchool_Course_AggregateArgs = {
  distinct_on?: InputMaybe<Array<School_Course_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Course_Order_By>>;
  where?: InputMaybe<School_Course_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchool_Course_By_PkArgs = {
  school_course_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootSchool_InfoArgs = {
  distinct_on?: InputMaybe<Array<School_Info_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Info_Order_By>>;
  where?: InputMaybe<School_Info_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchool_Info_AggregateArgs = {
  distinct_on?: InputMaybe<Array<School_Info_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Info_Order_By>>;
  where?: InputMaybe<School_Info_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchool_Info_By_PkArgs = {
  school_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootSchool_LevelArgs = {
  distinct_on?: InputMaybe<Array<School_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Level_Order_By>>;
  where?: InputMaybe<School_Level_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchool_Level_AggregateArgs = {
  distinct_on?: InputMaybe<Array<School_Level_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Level_Order_By>>;
  where?: InputMaybe<School_Level_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchool_Level_By_PkArgs = {
  school_level_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootSchool_Level_GradeArgs = {
  distinct_on?: InputMaybe<Array<School_Level_Grade_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Level_Grade_Order_By>>;
  where?: InputMaybe<School_Level_Grade_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchool_Level_Grade_AggregateArgs = {
  distinct_on?: InputMaybe<Array<School_Level_Grade_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<School_Level_Grade_Order_By>>;
  where?: InputMaybe<School_Level_Grade_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchool_Level_Grade_By_PkArgs = {
  grade_id: Scalars['String'];
  school_level_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootSchoolsArgs = {
  distinct_on?: InputMaybe<Array<Schools_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Schools_Order_By>>;
  where?: InputMaybe<Schools_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchools_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Schools_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Schools_Order_By>>;
  where?: InputMaybe<Schools_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSchools_By_PkArgs = {
  school_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootSearch_Courses_By_NameArgs = {
  args: Search_Courses_By_Name_Args;
  distinct_on?: InputMaybe<Array<Courses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Order_By>>;
  where?: InputMaybe<Courses_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSearch_Courses_By_Name_AggregateArgs = {
  args: Search_Courses_By_Name_Args;
  distinct_on?: InputMaybe<Array<Courses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Courses_Order_By>>;
  where?: InputMaybe<Courses_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStaffArgs = {
  distinct_on?: InputMaybe<Array<Staff_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Staff_Order_By>>;
  where?: InputMaybe<Staff_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStaff_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Staff_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Staff_Order_By>>;
  where?: InputMaybe<Staff_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStaff_By_PkArgs = {
  staff_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudent_Entryexit_RecordsArgs = {
  distinct_on?: InputMaybe<Array<Student_Entryexit_Records_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Entryexit_Records_Order_By>>;
  where?: InputMaybe<Student_Entryexit_Records_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Entryexit_Records_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Student_Entryexit_Records_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Entryexit_Records_Order_By>>;
  where?: InputMaybe<Student_Entryexit_Records_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Entryexit_Records_By_PkArgs = {
  entryexit_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootStudent_ParentsArgs = {
  distinct_on?: InputMaybe<Array<Student_Parents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Parents_Order_By>>;
  where?: InputMaybe<Student_Parents_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Parents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Student_Parents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Parents_Order_By>>;
  where?: InputMaybe<Student_Parents_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Parents_By_PkArgs = {
  parent_id: Scalars['String'];
  student_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudent_QrArgs = {
  distinct_on?: InputMaybe<Array<Student_Qr_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Qr_Order_By>>;
  where?: InputMaybe<Student_Qr_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Qr_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Student_Qr_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Qr_Order_By>>;
  where?: InputMaybe<Student_Qr_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Qr_By_PkArgs = {
  qr_id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootStudent_SubscriptionsArgs = {
  distinct_on?: InputMaybe<Array<Student_Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Subscriptions_Order_By>>;
  where?: InputMaybe<Student_Subscriptions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Subscriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Student_Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Student_Subscriptions_Order_By>>;
  where?: InputMaybe<Student_Subscriptions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudent_Subscriptions_By_PkArgs = {
  student_subscription_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootStudentsArgs = {
  distinct_on?: InputMaybe<Array<Students_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Students_Order_By>>;
  where?: InputMaybe<Students_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Students_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Students_Order_By>>;
  where?: InputMaybe<Students_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudents_Assigned_CoachesArgs = {
  distinct_on?: InputMaybe<Array<Students_Assigned_Coaches_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Students_Assigned_Coaches_Order_By>>;
  where?: InputMaybe<Students_Assigned_Coaches_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudents_Assigned_Coaches_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Students_Assigned_Coaches_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Students_Assigned_Coaches_Order_By>>;
  where?: InputMaybe<Students_Assigned_Coaches_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootStudents_By_PkArgs = {
  student_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootTagsArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTags_By_PkArgs = {
  tag_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootTeacher_By_School_IdArgs = {
  distinct_on?: InputMaybe<Array<Teacher_By_School_Id_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_By_School_Id_Order_By>>;
  where?: InputMaybe<Teacher_By_School_Id_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTeacher_By_School_Id_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_By_School_Id_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_By_School_Id_Order_By>>;
  where?: InputMaybe<Teacher_By_School_Id_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTeachersArgs = {
  distinct_on?: InputMaybe<Array<Teachers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teachers_Order_By>>;
  where?: InputMaybe<Teachers_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTeachers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teachers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teachers_Order_By>>;
  where?: InputMaybe<Teachers_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTeachers_By_PkArgs = {
  teacher_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootTopicsArgs = {
  distinct_on?: InputMaybe<Array<Topics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Topics_Order_By>>;
  where?: InputMaybe<Topics_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTopics_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Topics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Topics_Order_By>>;
  where?: InputMaybe<Topics_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTopics_By_PkArgs = {
  topic_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootTopics_Learning_ObjectivesArgs = {
  distinct_on?: InputMaybe<Array<Topics_Learning_Objectives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Topics_Learning_Objectives_Order_By>>;
  where?: InputMaybe<Topics_Learning_Objectives_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTopics_Learning_Objectives_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Topics_Learning_Objectives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Topics_Learning_Objectives_Order_By>>;
  where?: InputMaybe<Topics_Learning_Objectives_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTopics_Learning_Objectives_By_PkArgs = {
  lo_id: Scalars['String'];
  topic_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootUser_Access_PathsArgs = {
  distinct_on?: InputMaybe<Array<User_Access_Paths_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Access_Paths_Order_By>>;
  where?: InputMaybe<User_Access_Paths_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUser_Access_Paths_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Access_Paths_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Access_Paths_Order_By>>;
  where?: InputMaybe<User_Access_Paths_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUser_Access_Paths_By_PkArgs = {
  location_id: Scalars['String'];
  user_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootUser_AddressArgs = {
  distinct_on?: InputMaybe<Array<User_Address_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Address_Order_By>>;
  where?: InputMaybe<User_Address_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUser_Address_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Address_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Address_Order_By>>;
  where?: InputMaybe<User_Address_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUser_Address_By_PkArgs = {
  user_address_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootUser_GroupArgs = {
  distinct_on?: InputMaybe<Array<User_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Group_Order_By>>;
  where?: InputMaybe<User_Group_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUser_Group_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Group_Order_By>>;
  where?: InputMaybe<User_Group_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUser_Group_By_PkArgs = {
  user_group_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootUser_Group_MemberArgs = {
  distinct_on?: InputMaybe<Array<User_Group_Member_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Group_Member_Order_By>>;
  where?: InputMaybe<User_Group_Member_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUser_Group_Member_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Group_Member_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Group_Member_Order_By>>;
  where?: InputMaybe<User_Group_Member_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUser_Group_Member_By_PkArgs = {
  user_group_id: Scalars['String'];
  user_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootUser_TagArgs = {
  distinct_on?: InputMaybe<Array<User_Tag_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Tag_Order_By>>;
  where?: InputMaybe<User_Tag_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUser_Tag_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Tag_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Tag_Order_By>>;
  where?: InputMaybe<User_Tag_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUser_Tag_By_PkArgs = {
  user_tag_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootUsersArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUsers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUsers_By_PkArgs = {
  user_id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootUsers_Info_NotificationsArgs = {
  distinct_on?: InputMaybe<Array<Users_Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Info_Notifications_Order_By>>;
  where?: InputMaybe<Users_Info_Notifications_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUsers_Info_Notifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Users_Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Info_Notifications_Order_By>>;
  where?: InputMaybe<Users_Info_Notifications_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUsers_Info_Notifications_By_PkArgs = {
  user_notification_id: Scalars['String'];
};

/** columns and relationships of "tags" */
export type Tags = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  info_notifications_tags: Array<Info_Notifications_Tags>;
  /** An aggregated array relationship */
  info_notifications_tags_aggregate: Info_Notifications_Tags_Aggregate;
  resource_path: Scalars['String'];
  tag_id: Scalars['String'];
  tag_name: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "tags" */
export type TagsInfo_Notifications_TagsArgs = {
  distinct_on?: InputMaybe<Array<Info_Notifications_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notifications_Tags_Order_By>>;
  where?: InputMaybe<Info_Notifications_Tags_Bool_Exp>;
};


/** columns and relationships of "tags" */
export type TagsInfo_Notifications_Tags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Info_Notifications_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notifications_Tags_Order_By>>;
  where?: InputMaybe<Info_Notifications_Tags_Bool_Exp>;
};

/** aggregated selection of "tags" */
export type Tags_Aggregate = {
  aggregate?: Maybe<Tags_Aggregate_Fields>;
  nodes: Array<Tags>;
};

/** aggregate fields of "tags" */
export type Tags_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Tags_Max_Fields>;
  min?: Maybe<Tags_Min_Fields>;
};


/** aggregate fields of "tags" */
export type Tags_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Tags_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tags" */
export type Tags_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Tags_Max_Order_By>;
  min?: InputMaybe<Tags_Min_Order_By>;
};

/** input type for inserting array relation for remote table "tags" */
export type Tags_Arr_Rel_Insert_Input = {
  data: Array<Tags_Insert_Input>;
  on_conflict?: InputMaybe<Tags_On_Conflict>;
};

/** Boolean expression to filter rows from the table "tags". All fields are combined with a logical 'AND'. */
export type Tags_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Tags_Bool_Exp>>>;
  _not?: InputMaybe<Tags_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Tags_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  info_notifications_tags?: InputMaybe<Info_Notifications_Tags_Bool_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  tag_id?: InputMaybe<String_Comparison_Exp>;
  tag_name?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "tags" */
export enum Tags_Constraint {
  /** unique or primary key constraint */
  PkTags = 'pk__tags'
}

/** input type for inserting data into table "tags" */
export type Tags_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  info_notifications_tags?: InputMaybe<Info_Notifications_Tags_Arr_Rel_Insert_Input>;
  resource_path?: InputMaybe<Scalars['String']>;
  tag_id?: InputMaybe<Scalars['String']>;
  tag_name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Tags_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  tag_id?: Maybe<Scalars['String']>;
  tag_name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "tags" */
export type Tags_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  tag_name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Tags_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  tag_id?: Maybe<Scalars['String']>;
  tag_name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "tags" */
export type Tags_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  tag_name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "tags" */
export type Tags_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Tags>;
};

/** input type for inserting object relation for remote table "tags" */
export type Tags_Obj_Rel_Insert_Input = {
  data: Tags_Insert_Input;
  on_conflict?: InputMaybe<Tags_On_Conflict>;
};

/** on conflict condition type for table "tags" */
export type Tags_On_Conflict = {
  constraint: Tags_Constraint;
  update_columns: Array<Tags_Update_Column>;
  where?: InputMaybe<Tags_Bool_Exp>;
};

/** ordering options when selecting data from "tags" */
export type Tags_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  info_notifications_tags_aggregate?: InputMaybe<Info_Notifications_Tags_Aggregate_Order_By>;
  resource_path?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
  tag_name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "tags" */
export type Tags_Pk_Columns_Input = {
  tag_id: Scalars['String'];
};

/** select columns of table "tags" */
export enum Tags_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TagId = 'tag_id',
  /** column name */
  TagName = 'tag_name',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "tags" */
export type Tags_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  tag_id?: InputMaybe<Scalars['String']>;
  tag_name?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "tags" */
export enum Tags_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TagId = 'tag_id',
  /** column name */
  TagName = 'tag_name',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "teacher_by_school_id" */
export type Teacher_By_School_Id = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  school_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  schools?: Maybe<Schools>;
  /** An object relationship */
  teacher_by_school_id?: Maybe<Teachers>;
  teacher_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  users?: Maybe<Users>;
};

/** aggregated selection of "teacher_by_school_id" */
export type Teacher_By_School_Id_Aggregate = {
  aggregate?: Maybe<Teacher_By_School_Id_Aggregate_Fields>;
  nodes: Array<Teacher_By_School_Id>;
};

/** aggregate fields of "teacher_by_school_id" */
export type Teacher_By_School_Id_Aggregate_Fields = {
  avg?: Maybe<Teacher_By_School_Id_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Teacher_By_School_Id_Max_Fields>;
  min?: Maybe<Teacher_By_School_Id_Min_Fields>;
  stddev?: Maybe<Teacher_By_School_Id_Stddev_Fields>;
  stddev_pop?: Maybe<Teacher_By_School_Id_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Teacher_By_School_Id_Stddev_Samp_Fields>;
  sum?: Maybe<Teacher_By_School_Id_Sum_Fields>;
  var_pop?: Maybe<Teacher_By_School_Id_Var_Pop_Fields>;
  var_samp?: Maybe<Teacher_By_School_Id_Var_Samp_Fields>;
  variance?: Maybe<Teacher_By_School_Id_Variance_Fields>;
};


/** aggregate fields of "teacher_by_school_id" */
export type Teacher_By_School_Id_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Teacher_By_School_Id_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Aggregate_Order_By = {
  avg?: InputMaybe<Teacher_By_School_Id_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Teacher_By_School_Id_Max_Order_By>;
  min?: InputMaybe<Teacher_By_School_Id_Min_Order_By>;
  stddev?: InputMaybe<Teacher_By_School_Id_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Teacher_By_School_Id_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Teacher_By_School_Id_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Teacher_By_School_Id_Sum_Order_By>;
  var_pop?: InputMaybe<Teacher_By_School_Id_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Teacher_By_School_Id_Var_Samp_Order_By>;
  variance?: InputMaybe<Teacher_By_School_Id_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Teacher_By_School_Id_Avg_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Avg_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "teacher_by_school_id". All fields are combined with a logical 'AND'. */
export type Teacher_By_School_Id_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Teacher_By_School_Id_Bool_Exp>>>;
  _not?: InputMaybe<Teacher_By_School_Id_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Teacher_By_School_Id_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  school_id?: InputMaybe<Int_Comparison_Exp>;
  schools?: InputMaybe<Schools_Bool_Exp>;
  teacher_by_school_id?: InputMaybe<Teachers_Bool_Exp>;
  teacher_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  users?: InputMaybe<Users_Bool_Exp>;
};

/** aggregate max on columns */
export type Teacher_By_School_Id_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  school_id?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Teacher_By_School_Id_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  school_id?: Maybe<Scalars['Int']>;
  teacher_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** ordering options when selecting data from "teacher_by_school_id" */
export type Teacher_By_School_Id_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  schools?: InputMaybe<Schools_Order_By>;
  teacher_by_school_id?: InputMaybe<Teachers_Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  users?: InputMaybe<Users_Order_By>;
};

/** select columns of table "teacher_by_school_id" */
export enum Teacher_By_School_Id_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate stddev on columns */
export type Teacher_By_School_Id_Stddev_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Stddev_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Teacher_By_School_Id_Stddev_Pop_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Stddev_Pop_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Teacher_By_School_Id_Stddev_Samp_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Stddev_Samp_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Teacher_By_School_Id_Sum_Fields = {
  school_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Sum_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type Teacher_By_School_Id_Var_Pop_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Var_Pop_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Teacher_By_School_Id_Var_Samp_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Var_Samp_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Teacher_By_School_Id_Variance_Fields = {
  school_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "teacher_by_school_id" */
export type Teacher_By_School_Id_Variance_Order_By = {
  school_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "teachers" */
export type Teachers = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  lessons_teachers: Array<Lessons_Teachers>;
  /** An aggregated array relationship */
  lessons_teachers_aggregate: Lessons_Teachers_Aggregate;
  resource_path: Scalars['String'];
  school_ids?: Maybe<Scalars['_int4']>;
  school_name?: Maybe<Scalars['String']>;
  /** An array relationship */
  teacher_by_school_ids: Array<Teacher_By_School_Id>;
  /** An aggregated array relationship */
  teacher_by_school_ids_aggregate: Teacher_By_School_Id_Aggregate;
  teacher_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  users?: Maybe<Users>;
};


/** columns and relationships of "teachers" */
export type TeachersLessons_TeachersArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Teachers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Teachers_Order_By>>;
  where?: InputMaybe<Lessons_Teachers_Bool_Exp>;
};


/** columns and relationships of "teachers" */
export type TeachersLessons_Teachers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lessons_Teachers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lessons_Teachers_Order_By>>;
  where?: InputMaybe<Lessons_Teachers_Bool_Exp>;
};


/** columns and relationships of "teachers" */
export type TeachersTeacher_By_School_IdsArgs = {
  distinct_on?: InputMaybe<Array<Teacher_By_School_Id_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_By_School_Id_Order_By>>;
  where?: InputMaybe<Teacher_By_School_Id_Bool_Exp>;
};


/** columns and relationships of "teachers" */
export type TeachersTeacher_By_School_Ids_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teacher_By_School_Id_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teacher_By_School_Id_Order_By>>;
  where?: InputMaybe<Teacher_By_School_Id_Bool_Exp>;
};

/** aggregated selection of "teachers" */
export type Teachers_Aggregate = {
  aggregate?: Maybe<Teachers_Aggregate_Fields>;
  nodes: Array<Teachers>;
};

/** aggregate fields of "teachers" */
export type Teachers_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Teachers_Max_Fields>;
  min?: Maybe<Teachers_Min_Fields>;
};


/** aggregate fields of "teachers" */
export type Teachers_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Teachers_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "teachers" */
export type Teachers_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Teachers_Max_Order_By>;
  min?: InputMaybe<Teachers_Min_Order_By>;
};

/** input type for inserting array relation for remote table "teachers" */
export type Teachers_Arr_Rel_Insert_Input = {
  data: Array<Teachers_Insert_Input>;
  on_conflict?: InputMaybe<Teachers_On_Conflict>;
};

/** Boolean expression to filter rows from the table "teachers". All fields are combined with a logical 'AND'. */
export type Teachers_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Teachers_Bool_Exp>>>;
  _not?: InputMaybe<Teachers_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Teachers_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  lessons_teachers?: InputMaybe<Lessons_Teachers_Bool_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school_ids?: InputMaybe<_Int4_Comparison_Exp>;
  school_name?: InputMaybe<String_Comparison_Exp>;
  teacher_by_school_ids?: InputMaybe<Teacher_By_School_Id_Bool_Exp>;
  teacher_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  users?: InputMaybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "teachers" */
export enum Teachers_Constraint {
  /** unique or primary key constraint */
  TeachersPk = 'teachers_pk'
}

/** input type for inserting data into table "teachers" */
export type Teachers_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  lessons_teachers?: InputMaybe<Lessons_Teachers_Arr_Rel_Insert_Input>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_ids?: InputMaybe<Scalars['_int4']>;
  school_name?: InputMaybe<Scalars['String']>;
  teacher_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  users?: InputMaybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Teachers_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_name?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "teachers" */
export type Teachers_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_name?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Teachers_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_name?: Maybe<Scalars['String']>;
  teacher_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "teachers" */
export type Teachers_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_name?: InputMaybe<Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "teachers" */
export type Teachers_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Teachers>;
};

/** input type for inserting object relation for remote table "teachers" */
export type Teachers_Obj_Rel_Insert_Input = {
  data: Teachers_Insert_Input;
  on_conflict?: InputMaybe<Teachers_On_Conflict>;
};

/** on conflict condition type for table "teachers" */
export type Teachers_On_Conflict = {
  constraint: Teachers_Constraint;
  update_columns: Array<Teachers_Update_Column>;
  where?: InputMaybe<Teachers_Bool_Exp>;
};

/** ordering options when selecting data from "teachers" */
export type Teachers_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  lessons_teachers_aggregate?: InputMaybe<Lessons_Teachers_Aggregate_Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_ids?: InputMaybe<Order_By>;
  school_name?: InputMaybe<Order_By>;
  teacher_by_school_ids_aggregate?: InputMaybe<Teacher_By_School_Id_Aggregate_Order_By>;
  teacher_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  users?: InputMaybe<Users_Order_By>;
};

/** primary key columns input for table: "teachers" */
export type Teachers_Pk_Columns_Input = {
  teacher_id: Scalars['String'];
};

/** select columns of table "teachers" */
export enum Teachers_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolIds = 'school_ids',
  /** column name */
  SchoolName = 'school_name',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "teachers" */
export type Teachers_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_ids?: InputMaybe<Scalars['_int4']>;
  school_name?: InputMaybe<Scalars['String']>;
  teacher_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "teachers" */
export enum Teachers_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolIds = 'school_ids',
  /** column name */
  SchoolName = 'school_name',
  /** column name */
  TeacherId = 'teacher_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** expression to compare columns of type timestamptz. All fields are combined with logical 'AND'. */
export type Timestamptz_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['timestamptz']>;
  _gt?: InputMaybe<Scalars['timestamptz']>;
  _gte?: InputMaybe<Scalars['timestamptz']>;
  _in?: InputMaybe<Array<Scalars['timestamptz']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['timestamptz']>;
  _lte?: InputMaybe<Scalars['timestamptz']>;
  _neq?: InputMaybe<Scalars['timestamptz']>;
  _nin?: InputMaybe<Array<Scalars['timestamptz']>>;
};

/** columns and relationships of "topics" */
export type Topics = {
  /** An array relationship */
  assignments: Array<Assignments>;
  /** An aggregated array relationship */
  assignments_aggregate: Assignments_Aggregate;
  attachment_names?: Maybe<Scalars['_text']>;
  attachment_urls?: Maybe<Scalars['_text']>;
  /** An object relationship */
  chapter?: Maybe<Chapters>;
  chapter_id?: Maybe<Scalars['String']>;
  copied_topic_id?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  essay_required: Scalars['Boolean'];
  grade: Scalars['smallint'];
  icon_url?: Maybe<Scalars['String']>;
  instruction?: Maybe<Scalars['String']>;
  /** An array relationship */
  learning_objectives: Array<Learning_Objectives>;
  /** An aggregated array relationship */
  learning_objectives_aggregate: Learning_Objectives_Aggregate;
  lo_display_order_counter?: Maybe<Scalars['Int']>;
  name: Scalars['String'];
  /** An array relationship */
  preset_study_plans_weeklies: Array<Preset_Study_Plans_Weekly>;
  /** An aggregated array relationship */
  preset_study_plans_weeklies_aggregate: Preset_Study_Plans_Weekly_Aggregate;
  published_at?: Maybe<Scalars['timestamptz']>;
  resource_path: Scalars['String'];
  /** An object relationship */
  school: Schools;
  school_id: Scalars['Int'];
  status?: Maybe<Scalars['String']>;
  subject: Scalars['String'];
  topic_id: Scalars['String'];
  topic_type: Scalars['String'];
  total_los: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "topics" */
export type TopicsAssignmentsArgs = {
  distinct_on?: InputMaybe<Array<Assignments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Assignments_Order_By>>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};


/** columns and relationships of "topics" */
export type TopicsAssignments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Assignments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Assignments_Order_By>>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};


/** columns and relationships of "topics" */
export type TopicsLearning_ObjectivesArgs = {
  distinct_on?: InputMaybe<Array<Learning_Objectives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Learning_Objectives_Order_By>>;
  where?: InputMaybe<Learning_Objectives_Bool_Exp>;
};


/** columns and relationships of "topics" */
export type TopicsLearning_Objectives_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Learning_Objectives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Learning_Objectives_Order_By>>;
  where?: InputMaybe<Learning_Objectives_Bool_Exp>;
};


/** columns and relationships of "topics" */
export type TopicsPreset_Study_Plans_WeekliesArgs = {
  distinct_on?: InputMaybe<Array<Preset_Study_Plans_Weekly_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Preset_Study_Plans_Weekly_Order_By>>;
  where?: InputMaybe<Preset_Study_Plans_Weekly_Bool_Exp>;
};


/** columns and relationships of "topics" */
export type TopicsPreset_Study_Plans_Weeklies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Preset_Study_Plans_Weekly_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Preset_Study_Plans_Weekly_Order_By>>;
  where?: InputMaybe<Preset_Study_Plans_Weekly_Bool_Exp>;
};

/** aggregated selection of "topics" */
export type Topics_Aggregate = {
  aggregate?: Maybe<Topics_Aggregate_Fields>;
  nodes: Array<Topics>;
};

/** aggregate fields of "topics" */
export type Topics_Aggregate_Fields = {
  avg?: Maybe<Topics_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Topics_Max_Fields>;
  min?: Maybe<Topics_Min_Fields>;
  stddev?: Maybe<Topics_Stddev_Fields>;
  stddev_pop?: Maybe<Topics_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Topics_Stddev_Samp_Fields>;
  sum?: Maybe<Topics_Sum_Fields>;
  var_pop?: Maybe<Topics_Var_Pop_Fields>;
  var_samp?: Maybe<Topics_Var_Samp_Fields>;
  variance?: Maybe<Topics_Variance_Fields>;
};


/** aggregate fields of "topics" */
export type Topics_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Topics_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "topics" */
export type Topics_Aggregate_Order_By = {
  avg?: InputMaybe<Topics_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Topics_Max_Order_By>;
  min?: InputMaybe<Topics_Min_Order_By>;
  stddev?: InputMaybe<Topics_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Topics_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Topics_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Topics_Sum_Order_By>;
  var_pop?: InputMaybe<Topics_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Topics_Var_Samp_Order_By>;
  variance?: InputMaybe<Topics_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "topics" */
export type Topics_Arr_Rel_Insert_Input = {
  data: Array<Topics_Insert_Input>;
  on_conflict?: InputMaybe<Topics_On_Conflict>;
};

/** aggregate avg on columns */
export type Topics_Avg_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  lo_display_order_counter?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_los?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "topics" */
export type Topics_Avg_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  lo_display_order_counter?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  total_los?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "topics". All fields are combined with a logical 'AND'. */
export type Topics_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Topics_Bool_Exp>>>;
  _not?: InputMaybe<Topics_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Topics_Bool_Exp>>>;
  assignments?: InputMaybe<Assignments_Bool_Exp>;
  attachment_names?: InputMaybe<_Text_Comparison_Exp>;
  attachment_urls?: InputMaybe<_Text_Comparison_Exp>;
  chapter?: InputMaybe<Chapters_Bool_Exp>;
  chapter_id?: InputMaybe<String_Comparison_Exp>;
  copied_topic_id?: InputMaybe<String_Comparison_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  display_order?: InputMaybe<Smallint_Comparison_Exp>;
  essay_required?: InputMaybe<Boolean_Comparison_Exp>;
  grade?: InputMaybe<Smallint_Comparison_Exp>;
  icon_url?: InputMaybe<String_Comparison_Exp>;
  instruction?: InputMaybe<String_Comparison_Exp>;
  learning_objectives?: InputMaybe<Learning_Objectives_Bool_Exp>;
  lo_display_order_counter?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  preset_study_plans_weeklies?: InputMaybe<Preset_Study_Plans_Weekly_Bool_Exp>;
  published_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school?: InputMaybe<Schools_Bool_Exp>;
  school_id?: InputMaybe<Int_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  subject?: InputMaybe<String_Comparison_Exp>;
  topic_id?: InputMaybe<String_Comparison_Exp>;
  topic_type?: InputMaybe<String_Comparison_Exp>;
  total_los?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "topics" */
export enum Topics_Constraint {
  /** unique or primary key constraint */
  TopicsPk = 'topics_pk'
}

/** input type for incrementing integer column in table "topics" */
export type Topics_Inc_Input = {
  display_order?: InputMaybe<Scalars['smallint']>;
  grade?: InputMaybe<Scalars['smallint']>;
  lo_display_order_counter?: InputMaybe<Scalars['Int']>;
  school_id?: InputMaybe<Scalars['Int']>;
  total_los?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "topics" */
export type Topics_Insert_Input = {
  assignments?: InputMaybe<Assignments_Arr_Rel_Insert_Input>;
  attachment_names?: InputMaybe<Scalars['_text']>;
  attachment_urls?: InputMaybe<Scalars['_text']>;
  chapter?: InputMaybe<Chapters_Obj_Rel_Insert_Input>;
  chapter_id?: InputMaybe<Scalars['String']>;
  copied_topic_id?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  display_order?: InputMaybe<Scalars['smallint']>;
  essay_required?: InputMaybe<Scalars['Boolean']>;
  grade?: InputMaybe<Scalars['smallint']>;
  icon_url?: InputMaybe<Scalars['String']>;
  instruction?: InputMaybe<Scalars['String']>;
  learning_objectives?: InputMaybe<Learning_Objectives_Arr_Rel_Insert_Input>;
  lo_display_order_counter?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  preset_study_plans_weeklies?: InputMaybe<Preset_Study_Plans_Weekly_Arr_Rel_Insert_Input>;
  published_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school?: InputMaybe<Schools_Obj_Rel_Insert_Input>;
  school_id?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<Scalars['String']>;
  subject?: InputMaybe<Scalars['String']>;
  topic_id?: InputMaybe<Scalars['String']>;
  topic_type?: InputMaybe<Scalars['String']>;
  total_los?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** columns and relationships of "topics_learning_objectives" */
export type Topics_Learning_Objectives = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  /** An object relationship */
  learning_objective: Learning_Objectives;
  lo_id: Scalars['String'];
  resource_path: Scalars['String'];
  /** An object relationship */
  topic: Topics;
  topic_id: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "topics_learning_objectives" */
export type Topics_Learning_Objectives_Aggregate = {
  aggregate?: Maybe<Topics_Learning_Objectives_Aggregate_Fields>;
  nodes: Array<Topics_Learning_Objectives>;
};

/** aggregate fields of "topics_learning_objectives" */
export type Topics_Learning_Objectives_Aggregate_Fields = {
  avg?: Maybe<Topics_Learning_Objectives_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Topics_Learning_Objectives_Max_Fields>;
  min?: Maybe<Topics_Learning_Objectives_Min_Fields>;
  stddev?: Maybe<Topics_Learning_Objectives_Stddev_Fields>;
  stddev_pop?: Maybe<Topics_Learning_Objectives_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Topics_Learning_Objectives_Stddev_Samp_Fields>;
  sum?: Maybe<Topics_Learning_Objectives_Sum_Fields>;
  var_pop?: Maybe<Topics_Learning_Objectives_Var_Pop_Fields>;
  var_samp?: Maybe<Topics_Learning_Objectives_Var_Samp_Fields>;
  variance?: Maybe<Topics_Learning_Objectives_Variance_Fields>;
};


/** aggregate fields of "topics_learning_objectives" */
export type Topics_Learning_Objectives_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Topics_Learning_Objectives_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Aggregate_Order_By = {
  avg?: InputMaybe<Topics_Learning_Objectives_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Topics_Learning_Objectives_Max_Order_By>;
  min?: InputMaybe<Topics_Learning_Objectives_Min_Order_By>;
  stddev?: InputMaybe<Topics_Learning_Objectives_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Topics_Learning_Objectives_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Topics_Learning_Objectives_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Topics_Learning_Objectives_Sum_Order_By>;
  var_pop?: InputMaybe<Topics_Learning_Objectives_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Topics_Learning_Objectives_Var_Samp_Order_By>;
  variance?: InputMaybe<Topics_Learning_Objectives_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Arr_Rel_Insert_Input = {
  data: Array<Topics_Learning_Objectives_Insert_Input>;
  on_conflict?: InputMaybe<Topics_Learning_Objectives_On_Conflict>;
};

/** aggregate avg on columns */
export type Topics_Learning_Objectives_Avg_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Avg_Order_By = {
  display_order?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "topics_learning_objectives". All fields are combined with a logical 'AND'. */
export type Topics_Learning_Objectives_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Topics_Learning_Objectives_Bool_Exp>>>;
  _not?: InputMaybe<Topics_Learning_Objectives_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Topics_Learning_Objectives_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  display_order?: InputMaybe<Smallint_Comparison_Exp>;
  learning_objective?: InputMaybe<Learning_Objectives_Bool_Exp>;
  lo_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  topic?: InputMaybe<Topics_Bool_Exp>;
  topic_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "topics_learning_objectives" */
export enum Topics_Learning_Objectives_Constraint {
  /** unique or primary key constraint */
  TopicsLearningObjectivesPk = 'topics_learning_objectives_pk'
}

/** input type for incrementing integer column in table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Inc_Input = {
  display_order?: InputMaybe<Scalars['smallint']>;
};

/** input type for inserting data into table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  display_order?: InputMaybe<Scalars['smallint']>;
  learning_objective?: InputMaybe<Learning_Objectives_Obj_Rel_Insert_Input>;
  lo_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  topic?: InputMaybe<Topics_Obj_Rel_Insert_Input>;
  topic_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Topics_Learning_Objectives_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  lo_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  lo_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  topic_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Topics_Learning_Objectives_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  lo_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  lo_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  topic_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Topics_Learning_Objectives>;
};

/** input type for inserting object relation for remote table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Obj_Rel_Insert_Input = {
  data: Topics_Learning_Objectives_Insert_Input;
  on_conflict?: InputMaybe<Topics_Learning_Objectives_On_Conflict>;
};

/** on conflict condition type for table "topics_learning_objectives" */
export type Topics_Learning_Objectives_On_Conflict = {
  constraint: Topics_Learning_Objectives_Constraint;
  update_columns: Array<Topics_Learning_Objectives_Update_Column>;
  where?: InputMaybe<Topics_Learning_Objectives_Bool_Exp>;
};

/** ordering options when selecting data from "topics_learning_objectives" */
export type Topics_Learning_Objectives_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  learning_objective?: InputMaybe<Learning_Objectives_Order_By>;
  lo_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  topic?: InputMaybe<Topics_Order_By>;
  topic_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "topics_learning_objectives" */
export type Topics_Learning_Objectives_Pk_Columns_Input = {
  lo_id: Scalars['String'];
  topic_id: Scalars['String'];
};

/** select columns of table "topics_learning_objectives" */
export enum Topics_Learning_Objectives_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  display_order?: InputMaybe<Scalars['smallint']>;
  lo_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  topic_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Topics_Learning_Objectives_Stddev_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Stddev_Order_By = {
  display_order?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Topics_Learning_Objectives_Stddev_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Stddev_Pop_Order_By = {
  display_order?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Topics_Learning_Objectives_Stddev_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Stddev_Samp_Order_By = {
  display_order?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Topics_Learning_Objectives_Sum_Fields = {
  display_order?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Sum_Order_By = {
  display_order?: InputMaybe<Order_By>;
};

/** update columns of table "topics_learning_objectives" */
export enum Topics_Learning_Objectives_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  LoId = 'lo_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Topics_Learning_Objectives_Var_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Var_Pop_Order_By = {
  display_order?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Topics_Learning_Objectives_Var_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Var_Samp_Order_By = {
  display_order?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Topics_Learning_Objectives_Variance_Fields = {
  display_order?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "topics_learning_objectives" */
export type Topics_Learning_Objectives_Variance_Order_By = {
  display_order?: InputMaybe<Order_By>;
};

/** aggregate max on columns */
export type Topics_Max_Fields = {
  chapter_id?: Maybe<Scalars['String']>;
  copied_topic_id?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  icon_url?: Maybe<Scalars['String']>;
  instruction?: Maybe<Scalars['String']>;
  lo_display_order_counter?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  published_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  topic_type?: Maybe<Scalars['String']>;
  total_los?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "topics" */
export type Topics_Max_Order_By = {
  chapter_id?: InputMaybe<Order_By>;
  copied_topic_id?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  icon_url?: InputMaybe<Order_By>;
  instruction?: InputMaybe<Order_By>;
  lo_display_order_counter?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  published_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  topic_id?: InputMaybe<Order_By>;
  topic_type?: InputMaybe<Order_By>;
  total_los?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Topics_Min_Fields = {
  chapter_id?: Maybe<Scalars['String']>;
  copied_topic_id?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  icon_url?: Maybe<Scalars['String']>;
  instruction?: Maybe<Scalars['String']>;
  lo_display_order_counter?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  published_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  school_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  topic_id?: Maybe<Scalars['String']>;
  topic_type?: Maybe<Scalars['String']>;
  total_los?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "topics" */
export type Topics_Min_Order_By = {
  chapter_id?: InputMaybe<Order_By>;
  copied_topic_id?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  icon_url?: InputMaybe<Order_By>;
  instruction?: InputMaybe<Order_By>;
  lo_display_order_counter?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  published_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  topic_id?: InputMaybe<Order_By>;
  topic_type?: InputMaybe<Order_By>;
  total_los?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "topics" */
export type Topics_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Topics>;
};

/** input type for inserting object relation for remote table "topics" */
export type Topics_Obj_Rel_Insert_Input = {
  data: Topics_Insert_Input;
  on_conflict?: InputMaybe<Topics_On_Conflict>;
};

/** on conflict condition type for table "topics" */
export type Topics_On_Conflict = {
  constraint: Topics_Constraint;
  update_columns: Array<Topics_Update_Column>;
  where?: InputMaybe<Topics_Bool_Exp>;
};

/** ordering options when selecting data from "topics" */
export type Topics_Order_By = {
  assignments_aggregate?: InputMaybe<Assignments_Aggregate_Order_By>;
  attachment_names?: InputMaybe<Order_By>;
  attachment_urls?: InputMaybe<Order_By>;
  chapter?: InputMaybe<Chapters_Order_By>;
  chapter_id?: InputMaybe<Order_By>;
  copied_topic_id?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  display_order?: InputMaybe<Order_By>;
  essay_required?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  icon_url?: InputMaybe<Order_By>;
  instruction?: InputMaybe<Order_By>;
  learning_objectives_aggregate?: InputMaybe<Learning_Objectives_Aggregate_Order_By>;
  lo_display_order_counter?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  preset_study_plans_weeklies_aggregate?: InputMaybe<Preset_Study_Plans_Weekly_Aggregate_Order_By>;
  published_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school?: InputMaybe<Schools_Order_By>;
  school_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  subject?: InputMaybe<Order_By>;
  topic_id?: InputMaybe<Order_By>;
  topic_type?: InputMaybe<Order_By>;
  total_los?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "topics" */
export type Topics_Pk_Columns_Input = {
  topic_id: Scalars['String'];
};

/** select columns of table "topics" */
export enum Topics_Select_Column {
  /** column name */
  AttachmentNames = 'attachment_names',
  /** column name */
  AttachmentUrls = 'attachment_urls',
  /** column name */
  ChapterId = 'chapter_id',
  /** column name */
  CopiedTopicId = 'copied_topic_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  EssayRequired = 'essay_required',
  /** column name */
  Grade = 'grade',
  /** column name */
  IconUrl = 'icon_url',
  /** column name */
  Instruction = 'instruction',
  /** column name */
  LoDisplayOrderCounter = 'lo_display_order_counter',
  /** column name */
  Name = 'name',
  /** column name */
  PublishedAt = 'published_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Status = 'status',
  /** column name */
  Subject = 'subject',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  TopicType = 'topic_type',
  /** column name */
  TotalLos = 'total_los',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "topics" */
export type Topics_Set_Input = {
  attachment_names?: InputMaybe<Scalars['_text']>;
  attachment_urls?: InputMaybe<Scalars['_text']>;
  chapter_id?: InputMaybe<Scalars['String']>;
  copied_topic_id?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  display_order?: InputMaybe<Scalars['smallint']>;
  essay_required?: InputMaybe<Scalars['Boolean']>;
  grade?: InputMaybe<Scalars['smallint']>;
  icon_url?: InputMaybe<Scalars['String']>;
  instruction?: InputMaybe<Scalars['String']>;
  lo_display_order_counter?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  published_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_id?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<Scalars['String']>;
  subject?: InputMaybe<Scalars['String']>;
  topic_id?: InputMaybe<Scalars['String']>;
  topic_type?: InputMaybe<Scalars['String']>;
  total_los?: InputMaybe<Scalars['Int']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Topics_Stddev_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  lo_display_order_counter?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_los?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "topics" */
export type Topics_Stddev_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  lo_display_order_counter?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  total_los?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Topics_Stddev_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  lo_display_order_counter?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_los?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "topics" */
export type Topics_Stddev_Pop_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  lo_display_order_counter?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  total_los?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Topics_Stddev_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  lo_display_order_counter?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_los?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "topics" */
export type Topics_Stddev_Samp_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  lo_display_order_counter?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  total_los?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Topics_Sum_Fields = {
  display_order?: Maybe<Scalars['smallint']>;
  grade?: Maybe<Scalars['smallint']>;
  lo_display_order_counter?: Maybe<Scalars['Int']>;
  school_id?: Maybe<Scalars['Int']>;
  total_los?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "topics" */
export type Topics_Sum_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  lo_display_order_counter?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  total_los?: InputMaybe<Order_By>;
};

/** update columns of table "topics" */
export enum Topics_Update_Column {
  /** column name */
  AttachmentNames = 'attachment_names',
  /** column name */
  AttachmentUrls = 'attachment_urls',
  /** column name */
  ChapterId = 'chapter_id',
  /** column name */
  CopiedTopicId = 'copied_topic_id',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DisplayOrder = 'display_order',
  /** column name */
  EssayRequired = 'essay_required',
  /** column name */
  Grade = 'grade',
  /** column name */
  IconUrl = 'icon_url',
  /** column name */
  Instruction = 'instruction',
  /** column name */
  LoDisplayOrderCounter = 'lo_display_order_counter',
  /** column name */
  Name = 'name',
  /** column name */
  PublishedAt = 'published_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SchoolId = 'school_id',
  /** column name */
  Status = 'status',
  /** column name */
  Subject = 'subject',
  /** column name */
  TopicId = 'topic_id',
  /** column name */
  TopicType = 'topic_type',
  /** column name */
  TotalLos = 'total_los',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Topics_Var_Pop_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  lo_display_order_counter?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_los?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "topics" */
export type Topics_Var_Pop_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  lo_display_order_counter?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  total_los?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Topics_Var_Samp_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  lo_display_order_counter?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_los?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "topics" */
export type Topics_Var_Samp_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  lo_display_order_counter?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  total_los?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Topics_Variance_Fields = {
  display_order?: Maybe<Scalars['Float']>;
  grade?: Maybe<Scalars['Float']>;
  lo_display_order_counter?: Maybe<Scalars['Float']>;
  school_id?: Maybe<Scalars['Float']>;
  total_los?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "topics" */
export type Topics_Variance_Order_By = {
  display_order?: InputMaybe<Order_By>;
  grade?: InputMaybe<Order_By>;
  lo_display_order_counter?: InputMaybe<Order_By>;
  school_id?: InputMaybe<Order_By>;
  total_los?: InputMaybe<Order_By>;
};

/** columns and relationships of "user_access_paths" */
export type User_Access_Paths = {
  access_path?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  location: Locations;
  location_id: Scalars['String'];
  resource_path: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['String'];
};

/** aggregated selection of "user_access_paths" */
export type User_Access_Paths_Aggregate = {
  aggregate?: Maybe<User_Access_Paths_Aggregate_Fields>;
  nodes: Array<User_Access_Paths>;
};

/** aggregate fields of "user_access_paths" */
export type User_Access_Paths_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<User_Access_Paths_Max_Fields>;
  min?: Maybe<User_Access_Paths_Min_Fields>;
};


/** aggregate fields of "user_access_paths" */
export type User_Access_Paths_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Access_Paths_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_access_paths" */
export type User_Access_Paths_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Access_Paths_Max_Order_By>;
  min?: InputMaybe<User_Access_Paths_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_access_paths" */
export type User_Access_Paths_Arr_Rel_Insert_Input = {
  data: Array<User_Access_Paths_Insert_Input>;
  on_conflict?: InputMaybe<User_Access_Paths_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_access_paths". All fields are combined with a logical 'AND'. */
export type User_Access_Paths_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<User_Access_Paths_Bool_Exp>>>;
  _not?: InputMaybe<User_Access_Paths_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<User_Access_Paths_Bool_Exp>>>;
  access_path?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  location?: InputMaybe<Locations_Bool_Exp>;
  location_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "user_access_paths" */
export enum User_Access_Paths_Constraint {
  /** unique or primary key constraint */
  UserAccessPathsPk = 'user_access_paths_pk'
}

/** input type for inserting data into table "user_access_paths" */
export type User_Access_Paths_Insert_Input = {
  access_path?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  location?: InputMaybe<Locations_Obj_Rel_Insert_Input>;
  location_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type User_Access_Paths_Max_Fields = {
  access_path?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "user_access_paths" */
export type User_Access_Paths_Max_Order_By = {
  access_path?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Access_Paths_Min_Fields = {
  access_path?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "user_access_paths" */
export type User_Access_Paths_Min_Order_By = {
  access_path?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_access_paths" */
export type User_Access_Paths_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<User_Access_Paths>;
};

/** input type for inserting object relation for remote table "user_access_paths" */
export type User_Access_Paths_Obj_Rel_Insert_Input = {
  data: User_Access_Paths_Insert_Input;
  on_conflict?: InputMaybe<User_Access_Paths_On_Conflict>;
};

/** on conflict condition type for table "user_access_paths" */
export type User_Access_Paths_On_Conflict = {
  constraint: User_Access_Paths_Constraint;
  update_columns: Array<User_Access_Paths_Update_Column>;
  where?: InputMaybe<User_Access_Paths_Bool_Exp>;
};

/** ordering options when selecting data from "user_access_paths" */
export type User_Access_Paths_Order_By = {
  access_path?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  location?: InputMaybe<Locations_Order_By>;
  location_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "user_access_paths" */
export type User_Access_Paths_Pk_Columns_Input = {
  location_id: Scalars['String'];
  user_id: Scalars['String'];
};

/** select columns of table "user_access_paths" */
export enum User_Access_Paths_Select_Column {
  /** column name */
  AccessPath = 'access_path',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "user_access_paths" */
export type User_Access_Paths_Set_Input = {
  access_path?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  location_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['String']>;
};

/** update columns of table "user_access_paths" */
export enum User_Access_Paths_Update_Column {
  /** column name */
  AccessPath = 'access_path',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  LocationId = 'location_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** columns and relationships of "user_address" */
export type User_Address = {
  address_type: Scalars['String'];
  city?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  first_street?: Maybe<Scalars['String']>;
  postal_code?: Maybe<Scalars['String']>;
  /** An object relationship */
  prefecture?: Maybe<Prefecture>;
  prefecture_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  second_street?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  user_address_id: Scalars['String'];
  user_id: Scalars['String'];
};

/** aggregated selection of "user_address" */
export type User_Address_Aggregate = {
  aggregate?: Maybe<User_Address_Aggregate_Fields>;
  nodes: Array<User_Address>;
};

/** aggregate fields of "user_address" */
export type User_Address_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<User_Address_Max_Fields>;
  min?: Maybe<User_Address_Min_Fields>;
};


/** aggregate fields of "user_address" */
export type User_Address_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Address_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_address" */
export type User_Address_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Address_Max_Order_By>;
  min?: InputMaybe<User_Address_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_address" */
export type User_Address_Arr_Rel_Insert_Input = {
  data: Array<User_Address_Insert_Input>;
  on_conflict?: InputMaybe<User_Address_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_address". All fields are combined with a logical 'AND'. */
export type User_Address_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<User_Address_Bool_Exp>>>;
  _not?: InputMaybe<User_Address_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<User_Address_Bool_Exp>>>;
  address_type?: InputMaybe<String_Comparison_Exp>;
  city?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  first_street?: InputMaybe<String_Comparison_Exp>;
  postal_code?: InputMaybe<String_Comparison_Exp>;
  prefecture?: InputMaybe<Prefecture_Bool_Exp>;
  prefecture_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  second_street?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user_address_id?: InputMaybe<String_Comparison_Exp>;
  user_id?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "user_address" */
export enum User_Address_Constraint {
  /** unique or primary key constraint */
  UserAddressPk = 'user_address__pk'
}

/** input type for inserting data into table "user_address" */
export type User_Address_Insert_Input = {
  address_type?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  first_street?: InputMaybe<Scalars['String']>;
  postal_code?: InputMaybe<Scalars['String']>;
  prefecture?: InputMaybe<Prefecture_Obj_Rel_Insert_Input>;
  prefecture_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  second_street?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_address_id?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type User_Address_Max_Fields = {
  address_type?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  first_street?: Maybe<Scalars['String']>;
  postal_code?: Maybe<Scalars['String']>;
  prefecture_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  second_street?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_address_id?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "user_address" */
export type User_Address_Max_Order_By = {
  address_type?: InputMaybe<Order_By>;
  city?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  first_street?: InputMaybe<Order_By>;
  postal_code?: InputMaybe<Order_By>;
  prefecture_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  second_street?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_address_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Address_Min_Fields = {
  address_type?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  first_street?: Maybe<Scalars['String']>;
  postal_code?: Maybe<Scalars['String']>;
  prefecture_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  second_street?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_address_id?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "user_address" */
export type User_Address_Min_Order_By = {
  address_type?: InputMaybe<Order_By>;
  city?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  first_street?: InputMaybe<Order_By>;
  postal_code?: InputMaybe<Order_By>;
  prefecture_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  second_street?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_address_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_address" */
export type User_Address_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<User_Address>;
};

/** input type for inserting object relation for remote table "user_address" */
export type User_Address_Obj_Rel_Insert_Input = {
  data: User_Address_Insert_Input;
  on_conflict?: InputMaybe<User_Address_On_Conflict>;
};

/** on conflict condition type for table "user_address" */
export type User_Address_On_Conflict = {
  constraint: User_Address_Constraint;
  update_columns: Array<User_Address_Update_Column>;
  where?: InputMaybe<User_Address_Bool_Exp>;
};

/** ordering options when selecting data from "user_address" */
export type User_Address_Order_By = {
  address_type?: InputMaybe<Order_By>;
  city?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  first_street?: InputMaybe<Order_By>;
  postal_code?: InputMaybe<Order_By>;
  prefecture?: InputMaybe<Prefecture_Order_By>;
  prefecture_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  second_street?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_address_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "user_address" */
export type User_Address_Pk_Columns_Input = {
  user_address_id: Scalars['String'];
};

/** select columns of table "user_address" */
export enum User_Address_Select_Column {
  /** column name */
  AddressType = 'address_type',
  /** column name */
  City = 'city',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  FirstStreet = 'first_street',
  /** column name */
  PostalCode = 'postal_code',
  /** column name */
  PrefectureId = 'prefecture_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SecondStreet = 'second_street',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserAddressId = 'user_address_id',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "user_address" */
export type User_Address_Set_Input = {
  address_type?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  first_street?: InputMaybe<Scalars['String']>;
  postal_code?: InputMaybe<Scalars['String']>;
  prefecture_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  second_street?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_address_id?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['String']>;
};

/** update columns of table "user_address" */
export enum User_Address_Update_Column {
  /** column name */
  AddressType = 'address_type',
  /** column name */
  City = 'city',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  FirstStreet = 'first_street',
  /** column name */
  PostalCode = 'postal_code',
  /** column name */
  PrefectureId = 'prefecture_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  SecondStreet = 'second_street',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserAddressId = 'user_address_id',
  /** column name */
  UserId = 'user_id'
}

/** columns and relationships of "user_group" */
export type User_Group = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  granted_roles: Array<Granted_Role>;
  /** An aggregated array relationship */
  granted_roles_aggregate: Granted_Role_Aggregate;
  is_system?: Maybe<Scalars['Boolean']>;
  org_location_id?: Maybe<Scalars['String']>;
  resource_path: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  user_group_id: Scalars['String'];
  /** An array relationship */
  user_group_members: Array<User_Group_Member>;
  /** An aggregated array relationship */
  user_group_members_aggregate: User_Group_Member_Aggregate;
  user_group_name: Scalars['String'];
};


/** columns and relationships of "user_group" */
export type User_GroupGranted_RolesArgs = {
  distinct_on?: InputMaybe<Array<Granted_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Granted_Role_Order_By>>;
  where?: InputMaybe<Granted_Role_Bool_Exp>;
};


/** columns and relationships of "user_group" */
export type User_GroupGranted_Roles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Granted_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Granted_Role_Order_By>>;
  where?: InputMaybe<Granted_Role_Bool_Exp>;
};


/** columns and relationships of "user_group" */
export type User_GroupUser_Group_MembersArgs = {
  distinct_on?: InputMaybe<Array<User_Group_Member_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Group_Member_Order_By>>;
  where?: InputMaybe<User_Group_Member_Bool_Exp>;
};


/** columns and relationships of "user_group" */
export type User_GroupUser_Group_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Group_Member_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Group_Member_Order_By>>;
  where?: InputMaybe<User_Group_Member_Bool_Exp>;
};

/** aggregated selection of "user_group" */
export type User_Group_Aggregate = {
  aggregate?: Maybe<User_Group_Aggregate_Fields>;
  nodes: Array<User_Group>;
};

/** aggregate fields of "user_group" */
export type User_Group_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<User_Group_Max_Fields>;
  min?: Maybe<User_Group_Min_Fields>;
};


/** aggregate fields of "user_group" */
export type User_Group_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Group_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_group" */
export type User_Group_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Group_Max_Order_By>;
  min?: InputMaybe<User_Group_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_group" */
export type User_Group_Arr_Rel_Insert_Input = {
  data: Array<User_Group_Insert_Input>;
  on_conflict?: InputMaybe<User_Group_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_group". All fields are combined with a logical 'AND'. */
export type User_Group_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<User_Group_Bool_Exp>>>;
  _not?: InputMaybe<User_Group_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<User_Group_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  granted_roles?: InputMaybe<Granted_Role_Bool_Exp>;
  is_system?: InputMaybe<Boolean_Comparison_Exp>;
  org_location_id?: InputMaybe<String_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user_group_id?: InputMaybe<String_Comparison_Exp>;
  user_group_members?: InputMaybe<User_Group_Member_Bool_Exp>;
  user_group_name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "user_group" */
export enum User_Group_Constraint {
  /** unique or primary key constraint */
  PkUserGroup = 'pk__user_group'
}

/** input type for inserting data into table "user_group" */
export type User_Group_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  granted_roles?: InputMaybe<Granted_Role_Arr_Rel_Insert_Input>;
  is_system?: InputMaybe<Scalars['Boolean']>;
  org_location_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_group_id?: InputMaybe<Scalars['String']>;
  user_group_members?: InputMaybe<User_Group_Member_Arr_Rel_Insert_Input>;
  user_group_name?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type User_Group_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  org_location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group_id?: Maybe<Scalars['String']>;
  user_group_name?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "user_group" */
export type User_Group_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  org_location_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_group_id?: InputMaybe<Order_By>;
  user_group_name?: InputMaybe<Order_By>;
};

/** columns and relationships of "user_group_member" */
export type User_Group_Member = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user_group: User_Group;
  user_group_id: Scalars['String'];
  user_id: Scalars['String'];
};

/** aggregated selection of "user_group_member" */
export type User_Group_Member_Aggregate = {
  aggregate?: Maybe<User_Group_Member_Aggregate_Fields>;
  nodes: Array<User_Group_Member>;
};

/** aggregate fields of "user_group_member" */
export type User_Group_Member_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<User_Group_Member_Max_Fields>;
  min?: Maybe<User_Group_Member_Min_Fields>;
};


/** aggregate fields of "user_group_member" */
export type User_Group_Member_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Group_Member_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_group_member" */
export type User_Group_Member_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Group_Member_Max_Order_By>;
  min?: InputMaybe<User_Group_Member_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_group_member" */
export type User_Group_Member_Arr_Rel_Insert_Input = {
  data: Array<User_Group_Member_Insert_Input>;
  on_conflict?: InputMaybe<User_Group_Member_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_group_member". All fields are combined with a logical 'AND'. */
export type User_Group_Member_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<User_Group_Member_Bool_Exp>>>;
  _not?: InputMaybe<User_Group_Member_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<User_Group_Member_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user_group?: InputMaybe<User_Group_Bool_Exp>;
  user_group_id?: InputMaybe<String_Comparison_Exp>;
  user_id?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "user_group_member" */
export enum User_Group_Member_Constraint {
  /** unique or primary key constraint */
  PkUserGroupMember = 'pk__user_group_member'
}

/** input type for inserting data into table "user_group_member" */
export type User_Group_Member_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_group?: InputMaybe<User_Group_Obj_Rel_Insert_Input>;
  user_group_id?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type User_Group_Member_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group_id?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "user_group_member" */
export type User_Group_Member_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_group_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Group_Member_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group_id?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "user_group_member" */
export type User_Group_Member_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_group_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_group_member" */
export type User_Group_Member_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<User_Group_Member>;
};

/** input type for inserting object relation for remote table "user_group_member" */
export type User_Group_Member_Obj_Rel_Insert_Input = {
  data: User_Group_Member_Insert_Input;
  on_conflict?: InputMaybe<User_Group_Member_On_Conflict>;
};

/** on conflict condition type for table "user_group_member" */
export type User_Group_Member_On_Conflict = {
  constraint: User_Group_Member_Constraint;
  update_columns: Array<User_Group_Member_Update_Column>;
  where?: InputMaybe<User_Group_Member_Bool_Exp>;
};

/** ordering options when selecting data from "user_group_member" */
export type User_Group_Member_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_group?: InputMaybe<User_Group_Order_By>;
  user_group_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "user_group_member" */
export type User_Group_Member_Pk_Columns_Input = {
  user_group_id: Scalars['String'];
  user_id: Scalars['String'];
};

/** select columns of table "user_group_member" */
export enum User_Group_Member_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserGroupId = 'user_group_id',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "user_group_member" */
export type User_Group_Member_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_group_id?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['String']>;
};

/** update columns of table "user_group_member" */
export enum User_Group_Member_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserGroupId = 'user_group_id',
  /** column name */
  UserId = 'user_id'
}

/** aggregate min on columns */
export type User_Group_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  org_location_id?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group_id?: Maybe<Scalars['String']>;
  user_group_name?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "user_group" */
export type User_Group_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  org_location_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_group_id?: InputMaybe<Order_By>;
  user_group_name?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_group" */
export type User_Group_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<User_Group>;
};

/** input type for inserting object relation for remote table "user_group" */
export type User_Group_Obj_Rel_Insert_Input = {
  data: User_Group_Insert_Input;
  on_conflict?: InputMaybe<User_Group_On_Conflict>;
};

/** on conflict condition type for table "user_group" */
export type User_Group_On_Conflict = {
  constraint: User_Group_Constraint;
  update_columns: Array<User_Group_Update_Column>;
  where?: InputMaybe<User_Group_Bool_Exp>;
};

/** ordering options when selecting data from "user_group" */
export type User_Group_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  granted_roles_aggregate?: InputMaybe<Granted_Role_Aggregate_Order_By>;
  is_system?: InputMaybe<Order_By>;
  org_location_id?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_group_id?: InputMaybe<Order_By>;
  user_group_members_aggregate?: InputMaybe<User_Group_Member_Aggregate_Order_By>;
  user_group_name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "user_group" */
export type User_Group_Pk_Columns_Input = {
  user_group_id: Scalars['String'];
};

/** select columns of table "user_group" */
export enum User_Group_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsSystem = 'is_system',
  /** column name */
  OrgLocationId = 'org_location_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserGroupId = 'user_group_id',
  /** column name */
  UserGroupName = 'user_group_name'
}

/** input type for updating data in table "user_group" */
export type User_Group_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_system?: InputMaybe<Scalars['Boolean']>;
  org_location_id?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_group_id?: InputMaybe<Scalars['String']>;
  user_group_name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "user_group" */
export enum User_Group_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsSystem = 'is_system',
  /** column name */
  OrgLocationId = 'org_location_id',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserGroupId = 'user_group_id',
  /** column name */
  UserGroupName = 'user_group_name'
}

/** columns and relationships of "user_tag" */
export type User_Tag = {
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  is_archived: Scalars['Boolean'];
  resource_path: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  user_tag_id: Scalars['String'];
  user_tag_name: Scalars['String'];
  user_tag_partner_id: Scalars['String'];
  user_tag_type: Scalars['String'];
};

/** aggregated selection of "user_tag" */
export type User_Tag_Aggregate = {
  aggregate?: Maybe<User_Tag_Aggregate_Fields>;
  nodes: Array<User_Tag>;
};

/** aggregate fields of "user_tag" */
export type User_Tag_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<User_Tag_Max_Fields>;
  min?: Maybe<User_Tag_Min_Fields>;
};


/** aggregate fields of "user_tag" */
export type User_Tag_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Tag_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_tag" */
export type User_Tag_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Tag_Max_Order_By>;
  min?: InputMaybe<User_Tag_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_tag" */
export type User_Tag_Arr_Rel_Insert_Input = {
  data: Array<User_Tag_Insert_Input>;
  on_conflict?: InputMaybe<User_Tag_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_tag". All fields are combined with a logical 'AND'. */
export type User_Tag_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<User_Tag_Bool_Exp>>>;
  _not?: InputMaybe<User_Tag_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<User_Tag_Bool_Exp>>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  is_archived?: InputMaybe<Boolean_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user_tag_id?: InputMaybe<String_Comparison_Exp>;
  user_tag_name?: InputMaybe<String_Comparison_Exp>;
  user_tag_partner_id?: InputMaybe<String_Comparison_Exp>;
  user_tag_type?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "user_tag" */
export enum User_Tag_Constraint {
  /** unique or primary key constraint */
  UserTagPk = 'user_tag__pk',
  /** unique or primary key constraint */
  UserTagUserTagPartnerIdUnique = 'user_tag__user_tag_partner_id__unique'
}

/** input type for inserting data into table "user_tag" */
export type User_Tag_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_archived?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_tag_id?: InputMaybe<Scalars['String']>;
  user_tag_name?: InputMaybe<Scalars['String']>;
  user_tag_partner_id?: InputMaybe<Scalars['String']>;
  user_tag_type?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type User_Tag_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_tag_id?: Maybe<Scalars['String']>;
  user_tag_name?: Maybe<Scalars['String']>;
  user_tag_partner_id?: Maybe<Scalars['String']>;
  user_tag_type?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "user_tag" */
export type User_Tag_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_tag_id?: InputMaybe<Order_By>;
  user_tag_name?: InputMaybe<Order_By>;
  user_tag_partner_id?: InputMaybe<Order_By>;
  user_tag_type?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Tag_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_tag_id?: Maybe<Scalars['String']>;
  user_tag_name?: Maybe<Scalars['String']>;
  user_tag_partner_id?: Maybe<Scalars['String']>;
  user_tag_type?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "user_tag" */
export type User_Tag_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_tag_id?: InputMaybe<Order_By>;
  user_tag_name?: InputMaybe<Order_By>;
  user_tag_partner_id?: InputMaybe<Order_By>;
  user_tag_type?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_tag" */
export type User_Tag_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<User_Tag>;
};

/** input type for inserting object relation for remote table "user_tag" */
export type User_Tag_Obj_Rel_Insert_Input = {
  data: User_Tag_Insert_Input;
  on_conflict?: InputMaybe<User_Tag_On_Conflict>;
};

/** on conflict condition type for table "user_tag" */
export type User_Tag_On_Conflict = {
  constraint: User_Tag_Constraint;
  update_columns: Array<User_Tag_Update_Column>;
  where?: InputMaybe<User_Tag_Bool_Exp>;
};

/** ordering options when selecting data from "user_tag" */
export type User_Tag_Order_By = {
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  is_archived?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_tag_id?: InputMaybe<Order_By>;
  user_tag_name?: InputMaybe<Order_By>;
  user_tag_partner_id?: InputMaybe<Order_By>;
  user_tag_type?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "user_tag" */
export type User_Tag_Pk_Columns_Input = {
  user_tag_id: Scalars['String'];
};

/** select columns of table "user_tag" */
export enum User_Tag_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserTagId = 'user_tag_id',
  /** column name */
  UserTagName = 'user_tag_name',
  /** column name */
  UserTagPartnerId = 'user_tag_partner_id',
  /** column name */
  UserTagType = 'user_tag_type'
}

/** input type for updating data in table "user_tag" */
export type User_Tag_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_archived?: InputMaybe<Scalars['Boolean']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_tag_id?: InputMaybe<Scalars['String']>;
  user_tag_name?: InputMaybe<Scalars['String']>;
  user_tag_partner_id?: InputMaybe<Scalars['String']>;
  user_tag_type?: InputMaybe<Scalars['String']>;
};

/** update columns of table "user_tag" */
export enum User_Tag_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsArchived = 'is_archived',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserTagId = 'user_tag_id',
  /** column name */
  UserTagName = 'user_tag_name',
  /** column name */
  UserTagPartnerId = 'user_tag_partner_id',
  /** column name */
  UserTagType = 'user_tag_type'
}

/** columns and relationships of "users" */
export type Users = {
  allow_notification?: Maybe<Scalars['Boolean']>;
  avatar?: Maybe<Scalars['String']>;
  birthday?: Maybe<Scalars['date']>;
  /** An array relationship */
  class_members: Array<Class_Members>;
  /** An aggregated array relationship */
  class_members_aggregate: Class_Members_Aggregate;
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  device_token?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  email_verified?: Maybe<Scalars['Boolean']>;
  facebook_id?: Maybe<Scalars['String']>;
  first_name: Scalars['String'];
  first_name_phonetic?: Maybe<Scalars['String']>;
  full_name_phonetic?: Maybe<Scalars['String']>;
  gender?: Maybe<Scalars['String']>;
  given_name?: Maybe<Scalars['String']>;
  /** An array relationship */
  info_notifications: Array<Info_Notifications>;
  /** An aggregated array relationship */
  info_notifications_aggregate: Info_Notifications_Aggregate;
  /** to distinguish our staff using app as a student or tester testing app as coach, tutor */
  is_tester?: Maybe<Scalars['Boolean']>;
  last_login_date?: Maybe<Scalars['timestamptz']>;
  last_name: Scalars['String'];
  last_name_phonetic?: Maybe<Scalars['String']>;
  /** An array relationship */
  lesson_members: Array<Lesson_Members>;
  /** An aggregated array relationship */
  lesson_members_aggregate: Lesson_Members_Aggregate;
  name: Scalars['String'];
  /** An object relationship */
  parent?: Maybe<Parents>;
  phone_number?: Maybe<Scalars['String']>;
  phone_verified?: Maybe<Scalars['Boolean']>;
  platform?: Maybe<Scalars['String']>;
  /** An array relationship */
  promotions: Array<Promotions>;
  /** An aggregated array relationship */
  promotions_aggregate: Promotions_Aggregate;
  resource_path: Scalars['String'];
  /** An object relationship */
  school_admin?: Maybe<School_Admins>;
  /** An object relationship */
  student?: Maybe<Students>;
  /** An object relationship */
  student_parent?: Maybe<Student_Parents>;
  /** An object relationship */
  teacher_by_school_id?: Maybe<Teacher_By_School_Id>;
  /** An array relationship */
  teachers: Array<Teachers>;
  /** An aggregated array relationship */
  teachers_aggregate: Teachers_Aggregate;
  updated_at: Scalars['timestamptz'];
  /** An array relationship */
  user_access_paths: Array<User_Access_Paths>;
  /** An aggregated array relationship */
  user_access_paths_aggregate: User_Access_Paths_Aggregate;
  user_group: Scalars['String'];
  /** An array relationship */
  user_group_members: Array<User_Group_Member>;
  /** An aggregated array relationship */
  user_group_members_aggregate: User_Group_Member_Aggregate;
  user_id: Scalars['String'];
  /** An array relationship */
  users_info_notifications: Array<Users_Info_Notifications>;
  /** An aggregated array relationship */
  users_info_notifications_aggregate: Users_Info_Notifications_Aggregate;
};


/** columns and relationships of "users" */
export type UsersClass_MembersArgs = {
  distinct_on?: InputMaybe<Array<Class_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Members_Order_By>>;
  where?: InputMaybe<Class_Members_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersClass_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Class_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Class_Members_Order_By>>;
  where?: InputMaybe<Class_Members_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersInfo_NotificationsArgs = {
  distinct_on?: InputMaybe<Array<Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notifications_Order_By>>;
  where?: InputMaybe<Info_Notifications_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersInfo_Notifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Info_Notifications_Order_By>>;
  where?: InputMaybe<Info_Notifications_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersLesson_MembersArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Members_Order_By>>;
  where?: InputMaybe<Lesson_Members_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersLesson_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Lesson_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Lesson_Members_Order_By>>;
  where?: InputMaybe<Lesson_Members_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersPromotionsArgs = {
  distinct_on?: InputMaybe<Array<Promotions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Promotions_Order_By>>;
  where?: InputMaybe<Promotions_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersPromotions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Promotions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Promotions_Order_By>>;
  where?: InputMaybe<Promotions_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersTeachersArgs = {
  distinct_on?: InputMaybe<Array<Teachers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teachers_Order_By>>;
  where?: InputMaybe<Teachers_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersTeachers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teachers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Teachers_Order_By>>;
  where?: InputMaybe<Teachers_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersUser_Access_PathsArgs = {
  distinct_on?: InputMaybe<Array<User_Access_Paths_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Access_Paths_Order_By>>;
  where?: InputMaybe<User_Access_Paths_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersUser_Access_Paths_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Access_Paths_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Access_Paths_Order_By>>;
  where?: InputMaybe<User_Access_Paths_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersUser_Group_MembersArgs = {
  distinct_on?: InputMaybe<Array<User_Group_Member_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Group_Member_Order_By>>;
  where?: InputMaybe<User_Group_Member_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersUser_Group_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Group_Member_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Group_Member_Order_By>>;
  where?: InputMaybe<User_Group_Member_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersUsers_Info_NotificationsArgs = {
  distinct_on?: InputMaybe<Array<Users_Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Info_Notifications_Order_By>>;
  where?: InputMaybe<Users_Info_Notifications_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersUsers_Info_Notifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Users_Info_Notifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Info_Notifications_Order_By>>;
  where?: InputMaybe<Users_Info_Notifications_Bool_Exp>;
};

/** aggregated selection of "users" */
export type Users_Aggregate = {
  aggregate?: Maybe<Users_Aggregate_Fields>;
  nodes: Array<Users>;
};

/** aggregate fields of "users" */
export type Users_Aggregate_Fields = {
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Users_Max_Fields>;
  min?: Maybe<Users_Min_Fields>;
};


/** aggregate fields of "users" */
export type Users_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Users_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "users" */
export type Users_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Users_Max_Order_By>;
  min?: InputMaybe<Users_Min_Order_By>;
};

/** input type for inserting array relation for remote table "users" */
export type Users_Arr_Rel_Insert_Input = {
  data: Array<Users_Insert_Input>;
  on_conflict?: InputMaybe<Users_On_Conflict>;
};

/** Boolean expression to filter rows from the table "users". All fields are combined with a logical 'AND'. */
export type Users_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Users_Bool_Exp>>>;
  _not?: InputMaybe<Users_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Users_Bool_Exp>>>;
  allow_notification?: InputMaybe<Boolean_Comparison_Exp>;
  avatar?: InputMaybe<String_Comparison_Exp>;
  birthday?: InputMaybe<Date_Comparison_Exp>;
  class_members?: InputMaybe<Class_Members_Bool_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  device_token?: InputMaybe<String_Comparison_Exp>;
  email?: InputMaybe<String_Comparison_Exp>;
  email_verified?: InputMaybe<Boolean_Comparison_Exp>;
  facebook_id?: InputMaybe<String_Comparison_Exp>;
  first_name?: InputMaybe<String_Comparison_Exp>;
  first_name_phonetic?: InputMaybe<String_Comparison_Exp>;
  full_name_phonetic?: InputMaybe<String_Comparison_Exp>;
  gender?: InputMaybe<String_Comparison_Exp>;
  given_name?: InputMaybe<String_Comparison_Exp>;
  info_notifications?: InputMaybe<Info_Notifications_Bool_Exp>;
  is_tester?: InputMaybe<Boolean_Comparison_Exp>;
  last_login_date?: InputMaybe<Timestamptz_Comparison_Exp>;
  last_name?: InputMaybe<String_Comparison_Exp>;
  last_name_phonetic?: InputMaybe<String_Comparison_Exp>;
  lesson_members?: InputMaybe<Lesson_Members_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  parent?: InputMaybe<Parents_Bool_Exp>;
  phone_number?: InputMaybe<String_Comparison_Exp>;
  phone_verified?: InputMaybe<Boolean_Comparison_Exp>;
  platform?: InputMaybe<String_Comparison_Exp>;
  promotions?: InputMaybe<Promotions_Bool_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  school_admin?: InputMaybe<School_Admins_Bool_Exp>;
  student?: InputMaybe<Students_Bool_Exp>;
  student_parent?: InputMaybe<Student_Parents_Bool_Exp>;
  teacher_by_school_id?: InputMaybe<Teacher_By_School_Id_Bool_Exp>;
  teachers?: InputMaybe<Teachers_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user_access_paths?: InputMaybe<User_Access_Paths_Bool_Exp>;
  user_group?: InputMaybe<String_Comparison_Exp>;
  user_group_members?: InputMaybe<User_Group_Member_Bool_Exp>;
  user_id?: InputMaybe<String_Comparison_Exp>;
  users_info_notifications?: InputMaybe<Users_Info_Notifications_Bool_Exp>;
};

/** unique or primary key constraints on table "users" */
export enum Users_Constraint {
  /** unique or primary key constraint */
  UsersEmailKey = 'users__email__key',
  /** unique or primary key constraint */
  UsersFacebookIdKey = 'users__facebook_id__key',
  /** unique or primary key constraint */
  UsersPhoneNumberKey = 'users__phone_number__key',
  /** unique or primary key constraint */
  UsersPk = 'users_pk'
}

/** columns and relationships of "users_info_notifications" */
export type Users_Info_Notifications = {
  course_ids?: Maybe<Scalars['_text']>;
  created_at: Scalars['timestamptz'];
  current_grade?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  info_notification: Info_Notifications;
  is_individual?: Maybe<Scalars['Boolean']>;
  notification_id: Scalars['String'];
  parent_id?: Maybe<Scalars['String']>;
  qn_status?: Maybe<Scalars['String']>;
  qn_submitted_at?: Maybe<Scalars['timestamptz']>;
  resource_path: Scalars['String'];
  status: Scalars['String'];
  /** An object relationship */
  student?: Maybe<Students>;
  student_id?: Maybe<Scalars['String']>;
  /** An object relationship */
  student_parent?: Maybe<Student_Parents>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: Users;
  user_group?: Maybe<Scalars['String']>;
  user_id: Scalars['String'];
  user_notification_id: Scalars['String'];
};

/** aggregated selection of "users_info_notifications" */
export type Users_Info_Notifications_Aggregate = {
  aggregate?: Maybe<Users_Info_Notifications_Aggregate_Fields>;
  nodes: Array<Users_Info_Notifications>;
};

/** aggregate fields of "users_info_notifications" */
export type Users_Info_Notifications_Aggregate_Fields = {
  avg?: Maybe<Users_Info_Notifications_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Users_Info_Notifications_Max_Fields>;
  min?: Maybe<Users_Info_Notifications_Min_Fields>;
  stddev?: Maybe<Users_Info_Notifications_Stddev_Fields>;
  stddev_pop?: Maybe<Users_Info_Notifications_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Users_Info_Notifications_Stddev_Samp_Fields>;
  sum?: Maybe<Users_Info_Notifications_Sum_Fields>;
  var_pop?: Maybe<Users_Info_Notifications_Var_Pop_Fields>;
  var_samp?: Maybe<Users_Info_Notifications_Var_Samp_Fields>;
  variance?: Maybe<Users_Info_Notifications_Variance_Fields>;
};


/** aggregate fields of "users_info_notifications" */
export type Users_Info_Notifications_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Users_Info_Notifications_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "users_info_notifications" */
export type Users_Info_Notifications_Aggregate_Order_By = {
  avg?: InputMaybe<Users_Info_Notifications_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Users_Info_Notifications_Max_Order_By>;
  min?: InputMaybe<Users_Info_Notifications_Min_Order_By>;
  stddev?: InputMaybe<Users_Info_Notifications_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Users_Info_Notifications_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Users_Info_Notifications_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Users_Info_Notifications_Sum_Order_By>;
  var_pop?: InputMaybe<Users_Info_Notifications_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Users_Info_Notifications_Var_Samp_Order_By>;
  variance?: InputMaybe<Users_Info_Notifications_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "users_info_notifications" */
export type Users_Info_Notifications_Arr_Rel_Insert_Input = {
  data: Array<Users_Info_Notifications_Insert_Input>;
  on_conflict?: InputMaybe<Users_Info_Notifications_On_Conflict>;
};

/** aggregate avg on columns */
export type Users_Info_Notifications_Avg_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Avg_Order_By = {
  current_grade?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "users_info_notifications". All fields are combined with a logical 'AND'. */
export type Users_Info_Notifications_Bool_Exp = {
  _and?: InputMaybe<Array<InputMaybe<Users_Info_Notifications_Bool_Exp>>>;
  _not?: InputMaybe<Users_Info_Notifications_Bool_Exp>;
  _or?: InputMaybe<Array<InputMaybe<Users_Info_Notifications_Bool_Exp>>>;
  course_ids?: InputMaybe<_Text_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  current_grade?: InputMaybe<Smallint_Comparison_Exp>;
  deleted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  info_notification?: InputMaybe<Info_Notifications_Bool_Exp>;
  is_individual?: InputMaybe<Boolean_Comparison_Exp>;
  notification_id?: InputMaybe<String_Comparison_Exp>;
  parent_id?: InputMaybe<String_Comparison_Exp>;
  qn_status?: InputMaybe<String_Comparison_Exp>;
  qn_submitted_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  resource_path?: InputMaybe<String_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  student?: InputMaybe<Students_Bool_Exp>;
  student_id?: InputMaybe<String_Comparison_Exp>;
  student_parent?: InputMaybe<Student_Parents_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_group?: InputMaybe<String_Comparison_Exp>;
  user_id?: InputMaybe<String_Comparison_Exp>;
  user_notification_id?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "users_info_notifications" */
export enum Users_Info_Notifications_Constraint {
  /** unique or primary key constraint */
  PkUsersInfoNotifications = 'pk__users_info_notifications',
  /** unique or primary key constraint */
  UniqueUserIdNotificationId = 'unique__user_id__notification_id'
}

/** input type for incrementing integer column in table "users_info_notifications" */
export type Users_Info_Notifications_Inc_Input = {
  current_grade?: InputMaybe<Scalars['smallint']>;
};

/** input type for inserting data into table "users_info_notifications" */
export type Users_Info_Notifications_Insert_Input = {
  course_ids?: InputMaybe<Scalars['_text']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  current_grade?: InputMaybe<Scalars['smallint']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  info_notification?: InputMaybe<Info_Notifications_Obj_Rel_Insert_Input>;
  is_individual?: InputMaybe<Scalars['Boolean']>;
  notification_id?: InputMaybe<Scalars['String']>;
  parent_id?: InputMaybe<Scalars['String']>;
  qn_status?: InputMaybe<Scalars['String']>;
  qn_submitted_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  student?: InputMaybe<Students_Obj_Rel_Insert_Input>;
  student_id?: InputMaybe<Scalars['String']>;
  student_parent?: InputMaybe<Student_Parents_Obj_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_group?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['String']>;
  user_notification_id?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Users_Info_Notifications_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  current_grade?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  notification_id?: Maybe<Scalars['String']>;
  parent_id?: Maybe<Scalars['String']>;
  qn_status?: Maybe<Scalars['String']>;
  qn_submitted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
  user_notification_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  current_grade?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  notification_id?: InputMaybe<Order_By>;
  parent_id?: InputMaybe<Order_By>;
  qn_status?: InputMaybe<Order_By>;
  qn_submitted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_group?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  user_notification_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Users_Info_Notifications_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  current_grade?: Maybe<Scalars['smallint']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  notification_id?: Maybe<Scalars['String']>;
  parent_id?: Maybe<Scalars['String']>;
  qn_status?: Maybe<Scalars['String']>;
  qn_submitted_at?: Maybe<Scalars['timestamptz']>;
  resource_path?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  student_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
  user_notification_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  current_grade?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  notification_id?: InputMaybe<Order_By>;
  parent_id?: InputMaybe<Order_By>;
  qn_status?: InputMaybe<Order_By>;
  qn_submitted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  student_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_group?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  user_notification_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "users_info_notifications" */
export type Users_Info_Notifications_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Users_Info_Notifications>;
};

/** input type for inserting object relation for remote table "users_info_notifications" */
export type Users_Info_Notifications_Obj_Rel_Insert_Input = {
  data: Users_Info_Notifications_Insert_Input;
  on_conflict?: InputMaybe<Users_Info_Notifications_On_Conflict>;
};

/** on conflict condition type for table "users_info_notifications" */
export type Users_Info_Notifications_On_Conflict = {
  constraint: Users_Info_Notifications_Constraint;
  update_columns: Array<Users_Info_Notifications_Update_Column>;
  where?: InputMaybe<Users_Info_Notifications_Bool_Exp>;
};

/** ordering options when selecting data from "users_info_notifications" */
export type Users_Info_Notifications_Order_By = {
  course_ids?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_grade?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  info_notification?: InputMaybe<Info_Notifications_Order_By>;
  is_individual?: InputMaybe<Order_By>;
  notification_id?: InputMaybe<Order_By>;
  parent_id?: InputMaybe<Order_By>;
  qn_status?: InputMaybe<Order_By>;
  qn_submitted_at?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  student?: InputMaybe<Students_Order_By>;
  student_id?: InputMaybe<Order_By>;
  student_parent?: InputMaybe<Student_Parents_Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_group?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  user_notification_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: "users_info_notifications" */
export type Users_Info_Notifications_Pk_Columns_Input = {
  user_notification_id: Scalars['String'];
};

/** select columns of table "users_info_notifications" */
export enum Users_Info_Notifications_Select_Column {
  /** column name */
  CourseIds = 'course_ids',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentGrade = 'current_grade',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsIndividual = 'is_individual',
  /** column name */
  NotificationId = 'notification_id',
  /** column name */
  ParentId = 'parent_id',
  /** column name */
  QnStatus = 'qn_status',
  /** column name */
  QnSubmittedAt = 'qn_submitted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserGroup = 'user_group',
  /** column name */
  UserId = 'user_id',
  /** column name */
  UserNotificationId = 'user_notification_id'
}

/** input type for updating data in table "users_info_notifications" */
export type Users_Info_Notifications_Set_Input = {
  course_ids?: InputMaybe<Scalars['_text']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  current_grade?: InputMaybe<Scalars['smallint']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  is_individual?: InputMaybe<Scalars['Boolean']>;
  notification_id?: InputMaybe<Scalars['String']>;
  parent_id?: InputMaybe<Scalars['String']>;
  qn_status?: InputMaybe<Scalars['String']>;
  qn_submitted_at?: InputMaybe<Scalars['timestamptz']>;
  resource_path?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  student_id?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_group?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['String']>;
  user_notification_id?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Users_Info_Notifications_Stddev_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Stddev_Order_By = {
  current_grade?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Users_Info_Notifications_Stddev_Pop_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Stddev_Pop_Order_By = {
  current_grade?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Users_Info_Notifications_Stddev_Samp_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Stddev_Samp_Order_By = {
  current_grade?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Users_Info_Notifications_Sum_Fields = {
  current_grade?: Maybe<Scalars['smallint']>;
};

/** order by sum() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Sum_Order_By = {
  current_grade?: InputMaybe<Order_By>;
};

/** update columns of table "users_info_notifications" */
export enum Users_Info_Notifications_Update_Column {
  /** column name */
  CourseIds = 'course_ids',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentGrade = 'current_grade',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  IsIndividual = 'is_individual',
  /** column name */
  NotificationId = 'notification_id',
  /** column name */
  ParentId = 'parent_id',
  /** column name */
  QnStatus = 'qn_status',
  /** column name */
  QnSubmittedAt = 'qn_submitted_at',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  Status = 'status',
  /** column name */
  StudentId = 'student_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserGroup = 'user_group',
  /** column name */
  UserId = 'user_id',
  /** column name */
  UserNotificationId = 'user_notification_id'
}

/** aggregate var_pop on columns */
export type Users_Info_Notifications_Var_Pop_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Var_Pop_Order_By = {
  current_grade?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Users_Info_Notifications_Var_Samp_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Var_Samp_Order_By = {
  current_grade?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Users_Info_Notifications_Variance_Fields = {
  current_grade?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "users_info_notifications" */
export type Users_Info_Notifications_Variance_Order_By = {
  current_grade?: InputMaybe<Order_By>;
};

/** input type for inserting data into table "users" */
export type Users_Insert_Input = {
  allow_notification?: InputMaybe<Scalars['Boolean']>;
  avatar?: InputMaybe<Scalars['String']>;
  birthday?: InputMaybe<Scalars['date']>;
  class_members?: InputMaybe<Class_Members_Arr_Rel_Insert_Input>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  device_token?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  email_verified?: InputMaybe<Scalars['Boolean']>;
  facebook_id?: InputMaybe<Scalars['String']>;
  first_name?: InputMaybe<Scalars['String']>;
  first_name_phonetic?: InputMaybe<Scalars['String']>;
  full_name_phonetic?: InputMaybe<Scalars['String']>;
  gender?: InputMaybe<Scalars['String']>;
  given_name?: InputMaybe<Scalars['String']>;
  info_notifications?: InputMaybe<Info_Notifications_Arr_Rel_Insert_Input>;
  is_tester?: InputMaybe<Scalars['Boolean']>;
  last_login_date?: InputMaybe<Scalars['timestamptz']>;
  last_name?: InputMaybe<Scalars['String']>;
  last_name_phonetic?: InputMaybe<Scalars['String']>;
  lesson_members?: InputMaybe<Lesson_Members_Arr_Rel_Insert_Input>;
  name?: InputMaybe<Scalars['String']>;
  parent?: InputMaybe<Parents_Obj_Rel_Insert_Input>;
  phone_number?: InputMaybe<Scalars['String']>;
  phone_verified?: InputMaybe<Scalars['Boolean']>;
  platform?: InputMaybe<Scalars['String']>;
  promotions?: InputMaybe<Promotions_Arr_Rel_Insert_Input>;
  resource_path?: InputMaybe<Scalars['String']>;
  school_admin?: InputMaybe<School_Admins_Obj_Rel_Insert_Input>;
  student?: InputMaybe<Students_Obj_Rel_Insert_Input>;
  student_parent?: InputMaybe<Student_Parents_Obj_Rel_Insert_Input>;
  teachers?: InputMaybe<Teachers_Arr_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_access_paths?: InputMaybe<User_Access_Paths_Arr_Rel_Insert_Input>;
  user_group?: InputMaybe<Scalars['String']>;
  user_group_members?: InputMaybe<User_Group_Member_Arr_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['String']>;
  users_info_notifications?: InputMaybe<Users_Info_Notifications_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Users_Max_Fields = {
  avatar?: Maybe<Scalars['String']>;
  birthday?: Maybe<Scalars['date']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  device_token?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  facebook_id?: Maybe<Scalars['String']>;
  first_name?: Maybe<Scalars['String']>;
  first_name_phonetic?: Maybe<Scalars['String']>;
  full_name_phonetic?: Maybe<Scalars['String']>;
  gender?: Maybe<Scalars['String']>;
  given_name?: Maybe<Scalars['String']>;
  last_login_date?: Maybe<Scalars['timestamptz']>;
  last_name?: Maybe<Scalars['String']>;
  last_name_phonetic?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  platform?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "users" */
export type Users_Max_Order_By = {
  avatar?: InputMaybe<Order_By>;
  birthday?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  device_token?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  facebook_id?: InputMaybe<Order_By>;
  first_name?: InputMaybe<Order_By>;
  first_name_phonetic?: InputMaybe<Order_By>;
  full_name_phonetic?: InputMaybe<Order_By>;
  gender?: InputMaybe<Order_By>;
  given_name?: InputMaybe<Order_By>;
  last_login_date?: InputMaybe<Order_By>;
  last_name?: InputMaybe<Order_By>;
  last_name_phonetic?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  phone_number?: InputMaybe<Order_By>;
  platform?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_group?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Users_Min_Fields = {
  avatar?: Maybe<Scalars['String']>;
  birthday?: Maybe<Scalars['date']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  device_token?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  facebook_id?: Maybe<Scalars['String']>;
  first_name?: Maybe<Scalars['String']>;
  first_name_phonetic?: Maybe<Scalars['String']>;
  full_name_phonetic?: Maybe<Scalars['String']>;
  gender?: Maybe<Scalars['String']>;
  given_name?: Maybe<Scalars['String']>;
  last_login_date?: Maybe<Scalars['timestamptz']>;
  last_name?: Maybe<Scalars['String']>;
  last_name_phonetic?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  platform?: Maybe<Scalars['String']>;
  resource_path?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_group?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "users" */
export type Users_Min_Order_By = {
  avatar?: InputMaybe<Order_By>;
  birthday?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  device_token?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  facebook_id?: InputMaybe<Order_By>;
  first_name?: InputMaybe<Order_By>;
  first_name_phonetic?: InputMaybe<Order_By>;
  full_name_phonetic?: InputMaybe<Order_By>;
  gender?: InputMaybe<Order_By>;
  given_name?: InputMaybe<Order_By>;
  last_login_date?: InputMaybe<Order_By>;
  last_name?: InputMaybe<Order_By>;
  last_name_phonetic?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  phone_number?: InputMaybe<Order_By>;
  platform?: InputMaybe<Order_By>;
  resource_path?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_group?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "users" */
export type Users_Mutation_Response = {
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Users>;
};

/** input type for inserting object relation for remote table "users" */
export type Users_Obj_Rel_Insert_Input = {
  data: Users_Insert_Input;
  on_conflict?: InputMaybe<Users_On_Conflict>;
};

/** on conflict condition type for table "users" */
export type Users_On_Conflict = {
  constraint: Users_Constraint;
  update_columns: Array<Users_Update_Column>;
  where?: InputMaybe<Users_Bool_Exp>;
};

/** ordering options when selecting data from "users" */
export type Users_Order_By = {
  allow_notification?: InputMaybe<Order_By>;
  avatar?: InputMaybe<Order_By>;
  birthday?: InputMaybe<Order_By>;
  class_members_aggregate?: InputMaybe<Class_Members_Aggregate_Order_By>;
  country?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted_at?: InputMaybe<Order_By>;
  device_token?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  email_verified?: InputMaybe<Order_By>;
  facebook_id?: InputMaybe<Order_By>;
  first_name?: InputMaybe<Order_By>;
  first_name_phonetic?: InputMaybe<Order_By>;
  full_name_phonetic?: InputMaybe<Order_By>;
  gender?: InputMaybe<Order_By>;
  given_name?: InputMaybe<Order_By>;
  info_notifications_aggregate?: InputMaybe<Info_Notifications_Aggregate_Order_By>;
  is_tester?: InputMaybe<Order_By>;
  last_login_date?: InputMaybe<Order_By>;
  last_name?: InputMaybe<Order_By>;
  last_name_phonetic?: InputMaybe<Order_By>;
  lesson_members_aggregate?: InputMaybe<Lesson_Members_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  parent?: InputMaybe<Parents_Order_By>;
  phone_number?: InputMaybe<Order_By>;
  phone_verified?: InputMaybe<Order_By>;
  platform?: InputMaybe<Order_By>;
  promotions_aggregate?: InputMaybe<Promotions_Aggregate_Order_By>;
  resource_path?: InputMaybe<Order_By>;
  school_admin?: InputMaybe<School_Admins_Order_By>;
  student?: InputMaybe<Students_Order_By>;
  student_parent?: InputMaybe<Student_Parents_Order_By>;
  teacher_by_school_id?: InputMaybe<Teacher_By_School_Id_Order_By>;
  teachers_aggregate?: InputMaybe<Teachers_Aggregate_Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_access_paths_aggregate?: InputMaybe<User_Access_Paths_Aggregate_Order_By>;
  user_group?: InputMaybe<Order_By>;
  user_group_members_aggregate?: InputMaybe<User_Group_Member_Aggregate_Order_By>;
  user_id?: InputMaybe<Order_By>;
  users_info_notifications_aggregate?: InputMaybe<Users_Info_Notifications_Aggregate_Order_By>;
};

/** primary key columns input for table: "users" */
export type Users_Pk_Columns_Input = {
  user_id: Scalars['String'];
};

/** select columns of table "users" */
export enum Users_Select_Column {
  /** column name */
  AllowNotification = 'allow_notification',
  /** column name */
  Avatar = 'avatar',
  /** column name */
  Birthday = 'birthday',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DeviceToken = 'device_token',
  /** column name */
  Email = 'email',
  /** column name */
  EmailVerified = 'email_verified',
  /** column name */
  FacebookId = 'facebook_id',
  /** column name */
  FirstName = 'first_name',
  /** column name */
  FirstNamePhonetic = 'first_name_phonetic',
  /** column name */
  FullNamePhonetic = 'full_name_phonetic',
  /** column name */
  Gender = 'gender',
  /** column name */
  GivenName = 'given_name',
  /** column name */
  IsTester = 'is_tester',
  /** column name */
  LastLoginDate = 'last_login_date',
  /** column name */
  LastName = 'last_name',
  /** column name */
  LastNamePhonetic = 'last_name_phonetic',
  /** column name */
  Name = 'name',
  /** column name */
  PhoneNumber = 'phone_number',
  /** column name */
  PhoneVerified = 'phone_verified',
  /** column name */
  Platform = 'platform',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserGroup = 'user_group',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "users" */
export type Users_Set_Input = {
  allow_notification?: InputMaybe<Scalars['Boolean']>;
  avatar?: InputMaybe<Scalars['String']>;
  birthday?: InputMaybe<Scalars['date']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  deleted_at?: InputMaybe<Scalars['timestamptz']>;
  device_token?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  email_verified?: InputMaybe<Scalars['Boolean']>;
  facebook_id?: InputMaybe<Scalars['String']>;
  first_name?: InputMaybe<Scalars['String']>;
  first_name_phonetic?: InputMaybe<Scalars['String']>;
  full_name_phonetic?: InputMaybe<Scalars['String']>;
  gender?: InputMaybe<Scalars['String']>;
  given_name?: InputMaybe<Scalars['String']>;
  is_tester?: InputMaybe<Scalars['Boolean']>;
  last_login_date?: InputMaybe<Scalars['timestamptz']>;
  last_name?: InputMaybe<Scalars['String']>;
  last_name_phonetic?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  phone_number?: InputMaybe<Scalars['String']>;
  phone_verified?: InputMaybe<Scalars['Boolean']>;
  platform?: InputMaybe<Scalars['String']>;
  resource_path?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_group?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['String']>;
};

/** update columns of table "users" */
export enum Users_Update_Column {
  /** column name */
  AllowNotification = 'allow_notification',
  /** column name */
  Avatar = 'avatar',
  /** column name */
  Birthday = 'birthday',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  DeviceToken = 'device_token',
  /** column name */
  Email = 'email',
  /** column name */
  EmailVerified = 'email_verified',
  /** column name */
  FacebookId = 'facebook_id',
  /** column name */
  FirstName = 'first_name',
  /** column name */
  FirstNamePhonetic = 'first_name_phonetic',
  /** column name */
  FullNamePhonetic = 'full_name_phonetic',
  /** column name */
  Gender = 'gender',
  /** column name */
  GivenName = 'given_name',
  /** column name */
  IsTester = 'is_tester',
  /** column name */
  LastLoginDate = 'last_login_date',
  /** column name */
  LastName = 'last_name',
  /** column name */
  LastNamePhonetic = 'last_name_phonetic',
  /** column name */
  Name = 'name',
  /** column name */
  PhoneNumber = 'phone_number',
  /** column name */
  PhoneVerified = 'phone_verified',
  /** column name */
  Platform = 'platform',
  /** column name */
  ResourcePath = 'resource_path',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserGroup = 'user_group',
  /** column name */
  UserId = 'user_id'
}
