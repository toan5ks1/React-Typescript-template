query Lesson_ClassByClassIdForLessonManagement($class_id: String!) {
    class(where: { class_id: { _eq: $class_id } }) {
        class_id
        name
    }
}
query Lesson_ClassManyForLessonManagement($class_ids: [String!] = []) {
    class(where: { class_id: { _in: $class_ids } }) {
        class_id
        name
    }
}
query Lesson_ClassManyReferenceByNameAndCourseId(
    $location_id: String!
    $course_id: String!
    $name: String
    $limit: Int = 30
    $order_by: [class_order_by!] = { name: asc }
) {
    class(
        where: {
            _and: [
                { course_id: { _eq: $course_id } }
                { location_id: { _eq: $location_id } }
                { name: { _ilike: $name } }
            ]
        }
        limit: $limit
        order_by: $order_by
    ) {
        class_id
        name
    }
}
query Lesson_ClassManyByNullableCourseIdsAndName(
    $course_ids: [String!]
    $name: String
    $limit: Int = 30
    $order_by: [class_order_by!] = { name: asc }
) {
    class(
        where: { _and: [{ course_id: { _in: $course_ids } }, { name: { _ilike: $name } }] }
        limit: $limit
        order_by: $order_by
    ) {
        class_id
        name
    }
}
query Lesson_ClassManyByLocationIdAndCourseIdAndName(
    $location_id: String!
    $course_id: String!
    $name: String
    $limit: Int = 30
    $order_by: [class_order_by!] = { name: asc }
) {
    class(
        where: {
            _and: [
                { location_id: { _eq: $location_id } }
                { course_id: { _eq: $course_id } }
                { name: { _ilike: $name } }
            ]
        }
        limit: $limit
        order_by: $order_by
    ) {
        class_id
        name
    }
}
query Lesson_CourseManyReferenceByNameAndLocationId(
    $location_id: String!
    $name: String
    $limit: Int = 30
    $order_by: [course_access_paths_order_by!] = { created_at: desc }
) {
    course_access_paths(
        where: {
            _and: [
                { location_id: { _eq: $location_id } }
                { course: { name: { _ilike: $name } } }
            ]
        }
        limit: $limit
        order_by: $order_by
    ) {
        course {
            course_id
            name
        }
    }
}
fragment CourseAttrs on courses {
    course_id
    name
    icon
    grade
    subject
    country
    school_id
    display_order
}
query CoursesMany($course_id: [String!] = []) {
    courses(where: { course_id: { _in: $course_id } }) {
        ...CourseAttrs
    }
}
query CoursesManyReference($name: String, $limit: Int = 10, $offset: Int = 0) {
    courses(
        limit: $limit
        offset: $offset
        order_by: { created_at: desc, display_order: asc, name: asc, course_id: asc }
        where: { name: { _ilike: $name } }
    ) {
        ...CourseAttrs
    }
    courses_aggregate(where: { name: { _ilike: $name } }) {
        aggregate {
            count
        }
    }
}
fragment LessonGroupAttrs on lesson_groups {
    media_ids
    lesson_group_id
}
query LessonGroupById($lesson_group_id: String!) {
    lesson_groups(where: { lesson_group_id: { _eq: $lesson_group_id } }) {
        ...LessonGroupAttrs
    }
}
query LessonMemberByUserIdAndCourseIdAndLessonIdV2(
    $user_id: String!
    $course_id: String!
    $lesson_id: String!
) {
    lesson_members(
        where: {
            user_id: { _eq: $user_id }
            course_id: { _eq: $course_id }
            lesson_id: { _eq: $lesson_id }
        }
    ) {
        attendance_remark
        attendance_status
    }
}
query LessonReportByLessonId($lesson_id: String!) {
    lesson_reports(where: { lesson_id: { _eq: $lesson_id } }) {
        lesson_id
        lesson_report_id
        report_submitting_status
        partner_form_config {
            form_config_id
            feature_name
            form_config_data
        }
        lesson_report_details {
            lesson_report_detail_id
            student {
                student_id
            }
            partner_dynamic_form_field_values {
                dynamic_form_field_value_id
                value_type
                int_value
                int_set_value
                int_array_value
                string_value
                string_set_value
                string_array_value
                bool_value
                field_render_guide
                field_id
            }
        }
    }
}
query PreviousLessonReportByCourseIdAndStudentIdAndReportIdAndLessonIdV2(
    $report_user_id: String!
    $report_course_id: String!
    $report_id: String
    $report_lesson_id: String
) {
    get_previous_report_of_student_v3(
        args: {
            report_course_id: $report_course_id
            report_user_id: $report_user_id
            report_id: $report_id
            report_lesson_id: $report_lesson_id
        }
    ) {
        form_config_id
        lesson_report_id
        lesson_id
    }
}
query Lesson_LessonByLessonIdForLessonManagementV2($lesson_id: String!) {
    lessons(where: { lesson_id: { _eq: $lesson_id } }) {
        lesson_id
        center_id
        course {
            course_id
            name
        }
        class_id
        lesson_group_id
        teaching_medium
        teaching_method
        lesson_type
        scheduling_status
        start_time
        end_time
        lessons_teachers {
            teacher {
                users {
                    user_id
                    name
                    email
                }
            }
        }
        lesson_members {
            attendance_remark
            attendance_status
            course {
                course_id
                name
                subject
            }
            user {
                user_id
                name
                email
                student {
                    current_grade
                }
            }
        }
    }
}
query Lesson_LessonByLessonIdForLessonManagementV3($lesson_id: String!) {
    lessons(where: { lesson_id: { _eq: $lesson_id } }) {
        lesson_id
        center_id
        course {
            course_id
            name
        }
        class_id
        lesson_group_id
        teaching_medium
        teaching_method
        lesson_type
        scheduling_status
        scheduler_id
        start_time
        end_time
        lessons_teachers {
            teacher {
                users {
                    user_id
                    name
                    email
                }
            }
        }
        lesson_members {
            attendance_remark
            attendance_status
            course {
                course_id
                name
                subject
            }
            user {
                user_id
                name
                email
                student {
                    current_grade
                }
            }
        }
    }
}
query LocationByLocationId($location_id: String!) {
    locations(where: { location_id: { _eq: $location_id } }) {
        location_id
        name
    }
}
query LocationListByIds($location_ids: [String!] = []) {
    locations(where: { location_id: { _in: $location_ids } }) {
        name
        location_id
    }
}
fragment MediaAttrs on media {
    media_id
    resource
    type
    name
}
query MediasMany($media_id: [String!] = []) {
    media(where: { media_id: { _in: $media_id } }) {
        ...MediaAttrs
        conversion_tasks(order_by: { created_at: desc }, limit: 1) {
            status
        }
    }
}
query PartnerDynamicFormFieldValuesByLessonReportDetailsIdAndStudentId(
    $user_id: String!
    $report_id: String!
) {
    get_partner_dynamic_form_field_values_by_student(
        args: { report_id: $report_id, user_id: $user_id }
    ) {
        value_type
        string_value
        string_set_value
        string_array_value
        int_set_value
        int_array_value
        field_id
        bool_value
        int_value
    }
}
query PartnerFormConfigsOne($feature_name: String, $school_id: Int) {
    partner_form_configs(
        where: {
            _and: [{ feature_name: { _eq: $feature_name }, partner_id: { _eq: $school_id } }]
        }
        order_by: { created_at: desc }
        limit: 1
    ) {
        form_config_id
        form_config_data
    }
}
query PartnerFormConfigById($form_config_id: String!) {
    partner_form_configs(where: { form_config_id: { _eq: $form_config_id } }) {
        form_config_data
    }
}
query Lesson_SchedulerBySchedulerId($scheduler_id: String!) {
    scheduler(where: { scheduler_id: { _eq: $scheduler_id } }) {
        scheduler_id
        start_date
        end_date
        freq
    }
}
fragment StudentUserAttrs on users {
    user_id
    name
    email
    avatar
}
fragment StudentWithoutGradeFrg on users {
    user_id
    name
    email
    phone_number
    country
    last_login_date
}
query StudentsMany($user_ids: [String!] = []) {
    users(where: { user_group: { _eq: "USER_GROUP_STUDENT" }, user_id: { _in: $user_ids } }) {
        ...StudentUserAttrs
    }
}
query GradesOfStudentsList($student_ids: [String!] = []) {
    students(where: { student_id: { _in: $student_ids } }) {
        student_id
        current_grade
        enrollment_status
    }
}
query StudentsListByFiltersWithoutGradeAndAggregate(
    $name: String
    $email: String
    $limit: Int = 10
    $offset: Int = 0
    $order_by: users_order_by! = { created_at: desc }
    $student_ids: [String!]
    $grades: [smallint!]
    $enrollment_status: String
    $last_login_date: Boolean
) {
    users(
        where: {
            name: { _ilike: $name }
            email: { _ilike: $email }
            user_id: { _in: $student_ids }
            user_group: { _eq: "USER_GROUP_STUDENT" }
            last_login_date: { _is_null: $last_login_date }
            student: {
                current_grade: { _in: $grades }
                enrollment_status: { _eq: $enrollment_status }
            }
        }
        limit: $limit
        offset: $offset
        order_by: [$order_by]
    ) {
        ...StudentWithoutGradeFrg
    }
}
query CountStudentWithFilter(
    $name: String
    $email: String
    $grades: [smallint!]
    $student_ids: [String!]
    $enrollment_status: String
    $last_login_date: Boolean
) {
    users_aggregate(
        where: {
            name: { _ilike: $name }
            email: { _ilike: $email }
            user_id: { _in: $student_ids }
            user_group: { _eq: "USER_GROUP_STUDENT" }
            last_login_date: { _is_null: $last_login_date }
            student: {
                current_grade: { _in: $grades }
                enrollment_status: { _eq: $enrollment_status }
            }
        }
    ) {
        aggregate {
            count(columns: user_id)
        }
    }
}
query TeacherMany($user_id: [String!] = [], $school_id: Int = 0) {
    find_teacher_by_school_id(
        args: { school_id: $school_id }
        where: { user_id: { _in: $user_id } }
    ) {
        name
        email
        user_id
    }
}